/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdp_AC_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2121_13_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49739 = ce + de;
    const double C49738 = zC - zD;
    const double C49749 = ce * de;
    const double C49748 = 0 * de;
    const double C49767 = 0 * ce;
    const double C49763 = 0 * de;
    const double C49806 = ae + be;
    const double C49805 = yA - yB;
    const double C49816 = ae * be;
    const double C49815 = 0 * be;
    const double C49834 = 0 * ae;
    const double C49830 = 0 * be;
    const double C49875 = zP - zQ;
    const double C49874 = yP - yQ;
    const double C49873 = p + q;
    const double C49872 = p * q;
    const double C49884 = bs[4];
    const double C49882 = xP - xQ;
    const double C49890 = bs[5];
    const double C49897 = bs[6];
    const double C49909 = bs[7];
    const double C49954 = bs[3];
    const double C50391 = bs[2];
    const double C119 = bs[0];
    const double C50747 = xA - xB;
    const double C50769 = xC - xD;
    const double C50789 = yC - yD;
    const double C50898 = zA - zB;
    const double C49747 = 2 * C49739;
    const double C49764 = std::pow(C49739, 2);
    const double C50834 = std::pow(C49738, 2);
    const double C50846 = C49738 * de;
    const double C50845 = C49738 * ce;
    const double C49750 = C49749 * C49738;
    const double C49765 = C49738 * C49748;
    const double C49771 = C49767 / C49739;
    const double C49814 = 2 * C49806;
    const double C49831 = std::pow(C49806, 2);
    const double C49885 = C49739 * C49806;
    const double C140 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (yP - yQ) * (zP - zQ) * ae * ce) /
                         C49739) /
                        C49806;
    const double C141 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (yP - yQ) * (zP - zQ) * ae * ce) /
                         C49739) /
                        C49806;
    const double C50903 = std::pow(C49805, 2);
    const double C50919 = C49805 * be;
    const double C50918 = C49805 * ae;
    const double C49817 = C49816 * C49805;
    const double C49832 = C49805 * C49815;
    const double C49838 = C49834 / C49806;
    const double C49923 = C49875 * ce;
    const double C50103 = std::pow(C49875, 2);
    const double C49877 = C49874 * C49875;
    const double C49940 = C49874 * ae;
    const double C50048 = std::pow(C49874, 2);
    const double C49876 = 2 * C49872;
    const double C49891 = std::pow(C49882, 2);
    const double C50750 = C50747 * be;
    const double C50749 = C50747 * ae;
    const double C50748 = std::pow(C50747, 2);
    const double C50772 = C50769 * de;
    const double C50771 = C50769 * ce;
    const double C50770 = std::pow(C50769, 2);
    const double C50804 = std::pow(C50789, 2);
    const double C50820 = C50789 * de;
    const double C50819 = C50789 * ce;
    const double C50933 = std::pow(C50898, 2);
    const double C50945 = C50898 * be;
    const double C50944 = C50898 * ae;
    const double C50780 = std::pow(C49747, -1);
    const double C51041 = std::pow(C49747, -2);
    const double C49768 = 2 * C49764;
    const double C51039 = 4 * C49764;
    const double C50835 = C50834 * C49749;
    const double C49769 = C49765 / C49739;
    const double C50758 = std::pow(C49814, -1);
    const double C51054 = std::pow(C49814, -2);
    const double C49835 = 2 * C49831;
    const double C51032 = 4 * C49831;
    const double C50904 = C50903 * C49816;
    const double C49836 = C49832 / C49806;
    const double C49924 = C49884 * C49923;
    const double C49930 = C49890 * C49923;
    const double C49933 = C49897 * C49923;
    const double C49955 = C49954 * C49923;
    const double C49972 = C49909 * C49923;
    const double C49879 = C49877 * ae;
    const double C49942 = C49884 * C49940;
    const double C49945 = C49890 * C49940;
    const double C49948 = C49897 * C49940;
    const double C50011 = C49954 * C49940;
    const double C50026 = C49909 * C49940;
    const double C49878 = C49876 / C49873;
    const double C126 = (-(bs[1] * C49940 * C49876) / C49873) / C49806;
    const double C127 = (bs[1] * C49923 * C49876) / (C49873 * C49739);
    const double C120 = -(C49882 * bs[1] * C49876) / C49873;
    const double C301 = -(C49874 * bs[1] * C49876) / C49873;
    const double C460 = -(C49875 * bs[1] * C49876) / C49873;
    const double C50751 = C50748 * C49816;
    const double C50773 = C50770 * C49749;
    const double C50805 = C50804 * C49749;
    const double C50934 = C50933 * C49816;
    const double C49776 = C49748 / C49768;
    const double C49774 = C49763 / C49768;
    const double C50836 = C50835 / C49739;
    const double C49773 = 0 - C49769;
    const double C49843 = C49815 / C49835;
    const double C49841 = C49830 / C49835;
    const double C50905 = C50904 / C49806;
    const double C49840 = 0 - C49836;
    const double C49880 = C49879 * ce;
    const double C49883 = std::pow(C49878, 4);
    const double C49889 = -C49878;
    const double C49896 = std::pow(C49878, 6);
    const double C50390 = std::pow(C49878, 2);
    const double C128 =
        (C49882 * std::pow(C49878, 2) * bs[2] * C49940) / C49806;
    const double C129 =
        -(C49882 * std::pow(C49878, 2) * bs[2] * C49923) / C49739;
    const double C310 =
        -(C49874 * std::pow(C49878, 2) * bs[2] * C49923) / C49739;
    const double C311 =
        (C49874 * std::pow(C49878, 2) * bs[2] * C49940) / C49806 -
        (ae * bs[1] * C49876) / (C49873 * C49806);
    const double C466 =
        (C49875 * std::pow(C49878, 2) * bs[2] * C49940) / C49806;
    const double C467 =
        (ce * bs[1] * C49876) / (C49873 * C49739) -
        (C49875 * std::pow(C49878, 2) * bs[2] * C49923) / C49739;
    const double C50752 = C50751 / C49806;
    const double C50774 = C50773 / C49739;
    const double C50806 = C50805 / C49739;
    const double C50935 = C50934 / C49806;
    const double C50837 = -C50836;
    const double C49778 = C49773 * ce;
    const double C50906 = -C50905;
    const double C49845 = C49840 * ae;
    const double C49886 = C49884 * C49880;
    const double C49893 = C49890 * C49880;
    const double C49899 = C49897 * C49880;
    const double C49912 = C49909 * C49880;
    const double C142 =
        (-(std::pow(C49878, 4) * bs[4] * C49880 * std::pow(xP - xQ, 2)) /
         C49739) /
            C49806 -
        (std::pow(-C49878, 3) * bs[3] * C49880) / (C49739 * C49806);
    const double C49925 = C49883 * C49924;
    const double C49943 = C49883 * C49942;
    const double C49993 = C49884 * C49883;
    const double C49892 = std::pow(C49889, 5);
    const double C49908 = std::pow(C49889, 7);
    const double C49953 = std::pow(C49889, 3);
    const double C319 =
        (-(C49874 * std::pow(C49889, 3) * bs[3] * C49880) / C49739) / C49806 -
        (ae * std::pow(C49878, 2) * bs[2] * C49923) / C49885;
    const double C478 =
        (-(C49875 * std::pow(C49889, 3) * bs[3] * C49880) / C49739) / C49806 -
        (std::pow(C49878, 2) * bs[2] * C49874 * ae * ce) / C49885;
    const double C49934 = C49896 * C49933;
    const double C49949 = C49896 * C49948;
    const double C50004 = C49897 * C49896;
    const double C50392 = C50391 * C50390;
    const double C50753 = -C50752;
    const double C50775 = -C50774;
    const double C50807 = -C50806;
    const double C50936 = -C50935;
    const double C50838 = std::exp(C50837);
    const double C49780 = C49778 / C49739;
    const double C50907 = std::exp(C50906);
    const double C49847 = C49845 / C49806;
    const double C49887 = C49883 * C49886;
    const double C49900 = C49896 * C49899;
    const double C49958 = C49882 * C49925;
    const double C50067 = ae * C49925;
    const double C50065 = C49874 * C49925;
    const double C50508 = C49875 * C49925;
    const double C50014 = C49882 * C49943;
    const double C50077 = C49943 * ce;
    const double C50107 = C49875 * C49943;
    const double C50483 = C49874 * C49943;
    const double C49997 = C49882 * C49993;
    const double C50097 = C49874 * C49993;
    const double C50171 = C49993 * ce;
    const double C50323 = C49875 * C49993;
    const double C50398 = C49993 * C49891;
    const double C50485 = C49993 * C50048;
    const double C50511 = C49993 * C50103;
    const double C50545 = C49993 * ae;
    const double C49894 = C49892 * C49893;
    const double C49931 = C49892 * C49930;
    const double C49946 = C49892 * C49945;
    const double C49999 = C49890 * C49892;
    const double C49914 = C49908 * C49912;
    const double C49975 = C49908 * C49972;
    const double C50028 = C49908 * C50026;
    const double C49956 = C49953 * C49955;
    const double C49995 = C49954 * C49953;
    const double C50012 = C49953 * C50011;
    const double C49935 = C49934 * C49891;
    const double C49971 = C49882 * C49934;
    const double C50148 = C49934 * C50048;
    const double C50230 = ae * C49934;
    const double C50228 = C49874 * C49934;
    const double C50263 = C49875 * C49934;
    const double C49950 = C49949 * C49891;
    const double C50025 = C49882 * C49949;
    const double C50262 = C49949 * ce;
    const double C50287 = C49875 * C49949;
    const double C50307 = C49949 * C50103;
    const double C50569 = C49874 * C49949;
    const double C50006 = C50004 * C49891;
    const double C50189 = C49882 * C50004;
    const double C50266 = C50004 * C50048;
    const double C50291 = C49874 * C50004;
    const double C50317 = C50004 * C50103;
    const double C121 = C50392 * C49891 - (bs[1] * C49876) / C49873;
    const double C300 = C49874 * C49882 * C50392;
    const double C461 = C49875 * C49882 * C50392;
    const double C635 = C50392 * C50048 - (bs[1] * C49876) / C49873;
    const double C864 = C49875 * C49874 * C50392;
    const double C1000 = C50392 * C50103 - (bs[1] * C49876) / C49873;
    const double C50754 = std::exp(C50753);
    const double C50776 = std::exp(C50775);
    const double C50808 = std::exp(C50807);
    const double C50937 = std::exp(C50936);
    const double C49751 = C49750 * C50838;
    const double C118 = -(2 * ce * de * (zC - zD) * C50838) / (ce + de);
    const double C458 =
        ((C50838 - (C49738 * 2 * ce * de * C49738 * C50838) / C49739) * ce) /
            C49739 -
        (0 * de) / (2 * std::pow(C49739, 2));
    const double C459 =
        (0 * ce) / C49739 - (ce * de * C49738 * C50838) / std::pow(C49739, 2);
    const double C50847 = C50838 * C50845;
    const double C50850 = C50780 * C50838;
    const double C51049 = C50838 * C50846;
    const double C51048 = C50838 / C49747;
    const double C996 = C51041 * C50838;
    const double C49782 = C49780 - C49774;
    const double C155 = C50907 * C142;
    const double C151 = C50907 * C141;
    const double C149 = C50907 * C128;
    const double C5679 = C50907 * C478;
    const double C5677 = C50907 * C466;
    const double C49818 = C49817 * C50907;
    const double C117 = -(2 * ae * be * (yA - yB) * C50907) / (ae + be);
    const double C2449 =
        ((C50907 - (C49805 * 2 * ae * be * C49805 * C50907) / C49806) * ae) /
            C49806 -
        (0 * be) / (2 * std::pow(C49806, 2));
    const double C2450 =
        (0 * ae) / C49806 - (ae * be * C49805 * C50907) / std::pow(C49806, 2);
    const double C50920 = C50907 * C50918;
    const double C50923 = C50758 * C50907;
    const double C51057 = C50907 * C50919;
    const double C51056 = C50907 / C49814;
    const double C8177 = C51054 * C50907;
    const double C49849 = C49847 - C49841;
    const double C143 =
        (-2 * C49882 * C49887) / C49885 +
        C49882 *
            ((-(std::pow(-C49878, 5) * bs[5] * C49880 * std::pow(C49882, 2)) /
              C49739) /
                 C49806 -
             C49887 / C49885);
    const double C318 =
        (-(C49874 * C49882 * C49887) / C49739) / C49806 -
        (ae * C49882 * std::pow(C49889, 3) * bs[3] * C49923) / C49885;
    const double C479 =
        (-(C49875 * C49882 * C49887) / C49739) / C49806 -
        (C49882 * std::pow(C49889, 3) * bs[3] * C49874 * ae * ce) / C49885;
    const double C49901 = C49900 * C49891;
    const double C49910 = C49900 / C49885;
    const double C49907 = C49882 * C49900;
    const double C50146 = C49874 * C49900;
    const double C50168 = C49875 * C49900;
    const double C50070 = C50067 / C49885;
    const double C50079 = C50077 / C49885;
    const double C50402 = 2 * C49997;
    const double C50450 = C49874 * C49997;
    const double C50477 = C49997 * ae;
    const double C50518 = C49875 * C49997;
    const double C50517 = C49997 * ce;
    const double C50547 = 2 * C50097;
    const double C50546 = C50097 * ae;
    const double C50601 = C49875 * C50097;
    const double C50600 = C50097 * ce;
    const double C50617 = 2 * C50323;
    const double C50616 = C50323 * ce;
    const double C49898 = C49894 / C49885;
    const double C49987 = C49882 * C49894;
    const double C50066 = C49874 * C49894;
    const double C50076 = C49875 * C49894;
    const double C144 =
        3 * ((-(C49894 * C49891) / C49739) / C49806 - C49887 / C49885) +
        C49882 * ((-2 * C49882 * C49894) / C49885 +
                  C49882 * ((-(std::pow(C49878, 6) * bs[6] * C49880 * C49891) /
                             C49739) /
                                C49806 -
                            C49894 / C49885));
    const double C317 =
        C49874 * ((-(C49894 * C49891) / C49739) / C49806 - C49887 / C49885) -
        (ae * (C49925 * C49891 + std::pow(C49889, 3) * bs[3] * C49923)) /
            C49885;
    const double C480 =
        C49875 * ((-(C49894 * C49891) / C49739) / C49806 - C49887 / C49885) -
        ((std::pow(C49889, 3) * bs[3] * C49940 +
          C49883 * C49884 * C49940 * C49891) *
         ce) /
            C49885;
    const double C651 =
        (-(ae * C49874 * C49958) / C49739) / C49806 -
        (C49882 * C49887) / C49885 +
        C49874 * ((-(C49874 * C49882 * C49894) / C49739) / C49806 -
                  (ae * C49958) / C49885);
    const double C49960 = C49931 * C49891;
    const double C49963 = C49882 * C49931;
    const double C50068 = C49931 * C50048;
    const double C50147 = ae * C49931;
    const double C50145 = C49874 * C49931;
    const double C50170 = C49875 * C49931;
    const double C50016 = C49946 * C49891;
    const double C50019 = C49882 * C49946;
    const double C50108 = C49946 * C50103;
    const double C50169 = C49946 * ce;
    const double C50203 = C49875 * C49946;
    const double C50544 = C49874 * C49946;
    const double C50000 = C49999 * C49891;
    const double C50003 = C49882 * C49999;
    const double C50172 = C49999 * C50048;
    const double C50205 = C49874 * C49999;
    const double C50264 = C49999 * ce;
    const double C50290 = C49875 * C49999;
    const double C50324 = C49999 * C50103;
    const double C50570 = C49999 * ae;
    const double C49915 = C49914 * C49891;
    const double C50121 = C49882 * C49914;
    const double C50229 = C49874 * C49914;
    const double C50261 = C49875 * C49914;
    const double C49977 = C49975 * C49891;
    const double C50123 = C49882 * C49975;
    const double C50232 = C49975 * C50048;
    const double C50029 = C50028 * C49891;
    const double C50216 = C49882 * C50028;
    const double C50318 = C50028 * C50103;
    const double C650 = (-(ae * C49874 * C49956) / C49739) / C49806 -
                        (C49953 * C49954 * C49880) / C49885 +
                        C49874 * ((-(C49874 * C49887) / C49739) / C49806 -
                                  (ae * C49956) / C49885);
    const double C765 =
        2 * ((-(C49874 * C49887) / C49739) / C49806 - (ae * C49956) / C49885) -
        (ae * (C49925 * std::pow(C49874, 2) + C49956)) / C49885 +
        C49874 *
            ((-(ae * C49874 * C49925) / C49739) / C49806 - C49887 / C49885 +
             C49874 * ((-(C49874 * C49894) / C49739) / C49806 -
                       (ae * C49925) / C49885));
    const double C888 =
        C49874 * ((-(C49875 * C49887) / C49739) / C49806 -
                  (C49953 * C49954 * C49940 * ce) / C49885) -
        (ae * (C49875 * C49956 + bs[2] * std::pow(C49878, 2) * ce)) / C49885;
    const double C131 =
        -(C49956 * C49891 + std::pow(C49878, 2) * bs[2] * C49923) / C49739;
    const double C133 = (-2 * C49882 * C49956) / C49739 -
                        (C49882 * (C49925 * C49891 + C49956)) / C49739;
    const double C306 = -(C49874 * (C49925 * C49891 + C49956)) / C49739;
    const double C308 = -(C49874 * C49882 * C49956) / C49739;
    const double C469 = -(C49875 * C49882 * C49956 +
                          C49882 * bs[2] * std::pow(C49878, 2) * ce) /
                        C49739;
    const double C641 = -(C49956 * C50048 + C50390 * C50391 * C49923) / C49739;
    const double C643 = -(C49958 * C50048 + C49882 * C49956) / C49739;
    const double C760 = (-2 * C49874 * C49956) / C49739 -
                        (C49874 * (C49925 * C50048 + C49956)) / C49739;
    const double C873 =
        -(C49875 * C49874 * C49956 + C49874 * C50392 * ce) / C49739;
    const double C1006 = -(C49875 * (C49875 * C49956 + C50392 * ce) +
                           C50390 * C50391 * C49923 + C49875 * C50392 * ce) /
                         C49739;
    const double C892 =
        (-(C49875 * C49887) / C49739) / C49806 -
        (C49953 * C49954 * C49940 * ce) / C49885 -
        (ae * (C49875 * C49874 * C49925 + C49874 * C49995 * ce)) / C49885 +
        C49874 * (C49874 * ((-(C49875 * C49894) / C49739) / C49806 -
                            (C49943 * ce) / C49885) -
                  (ae * (C49875 * C49925 + C49995 * ce)) / C49885);
    const double C1166 =
        C49874 *
            ((-(C49875 * C49943 * ce) / C49739) / C49806 - C49887 / C49885 +
             C49875 * ((-(C49875 * C49894) / C49739) / C49806 -
                       (C49943 * ce) / C49885)) -
        (ae * (C49875 * (C49875 * C49925 + C49995 * ce) + C49956 +
               C49875 * C49995 * ce)) /
            C49885;
    const double C50395 = C49882 * C49995;
    const double C50399 = C49995 + C50398;
    const double C50447 = C49874 * C49995;
    const double C50484 = C49995 * ae;
    const double C50487 = C49995 + C50485;
    const double C50510 = C49875 * C49995;
    const double C50509 = C49995 * ce;
    const double C50513 = C49995 + C50511;
    const double C471 =
        -(C49875 * (C49925 * C49891 + C49956) +
          (bs[2] * std::pow(C49878, 2) + C49995 * C49891) * ce) /
        C49739;
    const double C881 = -(C49875 * (C49925 * C50048 + C49956) +
                          (C50392 + C49995 * C50048) * ce) /
                        C49739;
    const double C1249 = (-2 * (C49875 * C49956 + C50392 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C49925 + C49995 * ce) +
                                    C49956 + C49875 * C49995 * ce)) /
                             C49739 -
                         ((C50392 + C49995 * C50103) * ce) / C49739;
    const double C122 =
        2 * C49882 * C50392 + C49882 * (C50392 + C49995 * C49891);
    const double C299 = C49874 * (C50392 + C49995 * C49891);
    const double C462 = C49875 * (C50392 + C49995 * C49891);
    const double C753 =
        2 * C49874 * C50392 + C49874 * (C50392 + C49995 * C50048);
    const double C868 = C49875 * (C50392 + C49995 * C50048);
    const double C1244 =
        2 * C49875 * C50392 + C49875 * (C50392 + C49995 * C50103);
    const double C1015 = (-(C49875 * C50012 * ce) / C49739) / C49806 -
                         (C49953 * C49954 * C49880) / C49885 +
                         C49875 * ((-(C49875 * C49887) / C49739) / C49806 -
                                   (C50012 * ce) / C49885);
    const double C1256 =
        2 * ((-(C49875 * C49887) / C49739) / C49806 - (C50012 * ce) / C49885) -
        ((C50012 + C49943 * std::pow(C49875, 2)) * ce) / C49885 +
        C49875 *
            ((-(C49875 * C49943 * ce) / C49739) / C49806 - C49887 / C49885 +
             C49875 * ((-(C49875 * C49894) / C49739) / C49806 -
                       (C49943 * ce) / C49885));
    const double C130 =
        (std::pow(C49878, 2) * bs[2] * C49940 + C50012 * C49891) / C49806;
    const double C132 =
        (2 * C49882 * C50012 + C49882 * (C50012 + C49943 * C49891)) / C49806;
    const double C307 = (C49874 * (C50012 + C49943 * C49891) +
                         (bs[2] * std::pow(C49878, 2) + C49995 * C49891) * ae) /
                        C49806;
    const double C309 =
        (C49874 * C49882 * C50012 + C49882 * bs[2] * std::pow(C49878, 2) * ae) /
        C49806;
    const double C468 = (C49875 * C49882 * C50012) / C49806;
    const double C470 = (C49875 * (C50012 + C49943 * C49891)) / C49806;
    const double C640 =
        (C50390 * C50391 * C49940 + C49874 * (C49874 * C50012 + C50392 * ae) +
         C49874 * C50392 * ae) /
        C49806;
    const double C761 =
        (2 * (C49874 * C50012 + C50392 * ae) +
         C49874 * (C50012 + C49874 * (C49874 * C49943 + C49995 * ae) +
                   C49874 * C49995 * ae) +
         (C50392 + C49995 * C50048) * ae) /
        C49806;
    const double C872 = (C49875 * (C49874 * C50012 + C50392 * ae)) / C49806;
    const double C880 =
        (C49875 * (C50012 + C49874 * (C49874 * C49943 + C49995 * ae) +
                   C49874 * C49995 * ae)) /
        C49806;
    const double C1005 = (C50390 * C50391 * C49940 + C50012 * C50103) / C49806;
    const double C1007 = (C49882 * C50012 + C50014 * C50103) / C49806;
    const double C1158 = (C49874 * C50012 + C50392 * ae +
                          (C49874 * C49943 + C49995 * ae) * C50103) /
                         C49806;
    const double C1248 =
        (2 * C49875 * C50012 + C49875 * (C50012 + C49943 * C50103)) / C49806;
    const double C49936 = C49935 + C49931;
    const double C49974 = -2 * C49971;
    const double C50057 = C49971 * C50048;
    const double C50122 = ae * C49971;
    const double C50119 = C49874 * C49971;
    const double C50187 = C49875 * C49971;
    const double C50153 = C50148 + C49931;
    const double C50236 = C50230 / C49885;
    const double C50238 = -2 * C50228;
    const double C50234 = ae * C50228;
    const double C50259 = C49875 * C50228;
    const double C49951 = C49946 + C49950;
    const double C50027 = 2 * C50025;
    const double C50112 = C50025 * C50103;
    const double C50186 = C50025 * ce;
    const double C50213 = C49875 * C50025;
    const double C50532 = C49874 * C50025;
    const double C50269 = C50262 / C49885;
    const double C50292 = C50287 * ce;
    const double C50343 = 2 * C50287;
    const double C50309 = C49946 + C50307;
    const double C50007 = C49999 + C50006;
    const double C50193 = C50189 * C50048;
    const double C50215 = C49874 * C50189;
    const double C50328 = C50189 * C50103;
    const double C50271 = C49999 + C50266;
    const double C50316 = C50291 * C50103;
    const double C50320 = C49999 + C50317;
    const double C50755 = C50754 * C50749;
    const double C50759 = C50758 * C50754;
    const double C51028 = C50754 / C49814;
    const double C51027 = C50754 * C50750;
    const double C2448 = C51054 * C50754;
    const double C50777 = C50776 * C50771;
    const double C50781 = C50780 * C50776;
    const double C51035 = C50776 / C49747;
    const double C51034 = C50776 * C50772;
    const double C297 = C51041 * C50776;
    const double C50821 = C50808 * C50819;
    const double C50824 = C50780 * C50808;
    const double C51044 = C50808 * C50820;
    const double C51043 = C50808 / C49747;
    const double C632 = C51041 * C50808;
    const double C50946 = C50937 * C50944;
    const double C50949 = C50758 * C50937;
    const double C51062 = C50937 * C50945;
    const double C51061 = C50937 / C49814;
    const double C15558 = C51054 * C50937;
    const double C49752 = 2 * C49751;
    const double C49772 = C49751 / C49764;
    const double C51051 = C50847 / C49768;
    const double C51050 = C50847 * C50846;
    const double C51042 = C50847 / C49739;
    const double C50853 = C50850 * C50846;
    const double C1239 = C50850 / C51039;
    const double C1998 = C50850 / C49747;
    const double C51075 = C51049 / C49739;
    const double C995 = (-2 * C50780 * C51049) / C49739;
    const double C994 = (C50838 * std::pow(C50846, 2)) / C49764 + C51048;
    const double C49819 = 2 * C49818;
    const double C49839 = C49818 / C49831;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C333 = C117 * C300;
    const double C487 = C117 * C461;
    const double C5678 = C117 * C467;
    const double C5676 = C117 * C460;
    const double C6106 = C117 * C864;
    const double C6264 = C117 * C1000;
    const double C2460 = C2449 * C121;
    const double C2456 = C2449 * C129;
    const double C2452 = C2449 * C120;
    const double C2672 = C2449 * C300;
    const double C2848 = C2449 * C461;
    const double C18586 = C2449 * C1000;
    const double C18582 = C2449 * C467;
    const double C18578 = C2449 * C460;
    const double C18990 = C2449 * C864;
    const double C2454 = C2450 * C300;
    const double C18576 = C2450 * C864;
    const double C51059 = C50920 / C49835;
    const double C51058 = C50920 * C50919;
    const double C51053 = C50920 / C49806;
    const double C50926 = C50923 * C50919;
    const double C10994 = C50923 / C51032;
    const double C25710 = C50923 / C49814;
    const double C51078 = C51057 / C49806;
    const double C8176 = (-2 * C50758 * C51057) / C49806;
    const double C8175 = (C50907 * std::pow(C50919, 2)) / C49831 + C51056;
    const double C159 = C50907 * C143;
    const double C332 = C50907 * C318;
    const double C2459 = C50923 * C318;
    const double C22860 = C50923 * C318;
    const double C490 = C50907 * C479;
    const double C49902 = C49901 / C49739;
    const double C49911 = -2 * C49907;
    const double C50055 = C49874 * C49907;
    const double C50084 = C49875 * C49907;
    const double C50120 = C49907 / C49885;
    const double C50150 = C50146 / C49739;
    const double C50173 = C50168 / C49739;
    const double C889 =
        C49874 * ((-(C49875 * C49987) / C49739) / C49806 -
                  (C49882 * C49943 * ce) / C49885) -
        (ae * (C49875 * C49958 + C49882 * C49954 * C49953 * ce)) / C49885;
    const double C1016 = (-(C49875 * C50014 * ce) / C49739) / C49806 -
                         (C49882 * C49887) / C49885 +
                         C49875 * ((-(C49875 * C49987) / C49739) / C49806 -
                                   (C50014 * ce) / C49885);
    const double C50069 = C50066 / C49739;
    const double C50078 = C50076 / C49739;
    const double C161 = C50907 * C144;
    const double C328 = C50907 * C317;
    const double C2467 = C50923 * C317;
    const double C22868 = C50923 * C317;
    const double C496 = C50907 * C480;
    const double C659 = C50907 * C651;
    const double C2667 = C50923 * C651;
    const double C8195 = C8177 * C651;
    const double C23068 = C50923 * C651;
    const double C49961 = C49960 + C49925;
    const double C49965 = -2 * C49963;
    const double C50056 = ae * C49963;
    const double C50054 = C49874 * C49963;
    const double C764 =
        2 * ((-(C49874 * C49987) / C49739) / C49806 - (ae * C49958) / C49885) -
        (ae * (C49963 * std::pow(C49874, 2) + C49958)) / C49885 +
        C49874 *
            ((-(ae * C49874 * C49963) / C49739) / C49806 - C49987 / C49885 +
             C49874 * ((-(C49874 * C49907) / C49739) / C49806 -
                       (ae * C49963) / C49885));
    const double C893 =
        (-(C49875 * C49987) / C49739) / C49806 -
        (C49882 * C49943 * ce) / C49885 -
        (ae * (C49875 * C49874 * C49963 + C49874 * C49997 * ce)) / C49885 +
        C49874 * (C49874 * ((-(C49875 * C49907) / C49739) / C49806 -
                            (C49882 * C49946 * ce) / C49885) -
                  (ae * (C49875 * C49963 + C49997 * ce)) / C49885);
    const double C50516 = C49875 * C49963;
    const double C758 = (-2 * C49874 * C49958) / C49739 -
                        (C49874 * (C49963 * C50048 + C49958)) / C49739;
    const double C50071 = C50068 + C49925;
    const double C50151 = C50147 / C49885;
    const double C50152 = -2 * C50145;
    const double C50149 = ae * C50145;
    const double C50599 = C49875 * C50145;
    const double C50175 = C50170 + C50171;
    const double C50017 = C49943 + C50016;
    const double C50021 = 2 * C50019;
    const double C50085 = C50019 * ce;
    const double C50111 = C49875 * C50019;
    const double C1167 =
        C49874 *
            ((-(C49875 * C50019 * ce) / C49739) / C49806 - C49987 / C49885 +
             C49875 * ((-(C49875 * C49907) / C49739) / C49806 -
                       (C50019 * ce) / C49885)) -
        (ae * (C49875 * (C49875 * C49963 + C49997 * ce) + C49958 +
               C49875 * C49997 * ce)) /
            C49885;
    const double C1257 =
        2 * ((-(C49875 * C49987) / C49739) / C49806 - (C50014 * ce) / C49885) -
        ((C50014 + C50019 * std::pow(C49875, 2)) * ce) / C49885 +
        C49875 *
            ((-(C49875 * C50019 * ce) / C49739) / C49806 - C49987 / C49885 +
             C49875 * ((-(C49875 * C49907) / C49739) / C49806 -
                       (C50019 * ce) / C49885));
    const double C50476 = C49874 * C50019;
    const double C882 =
        (C49875 * (C50014 + C49874 * (C49874 * C50019 + C49997 * ae) +
                   C49874 * C49997 * ae)) /
        C49806;
    const double C1250 =
        (2 * C49875 * C50014 + C49875 * (C50014 + C50019 * C50103)) / C49806;
    const double C50109 = C49943 + C50108;
    const double C50174 = C50169 / C49885;
    const double C50206 = C50203 * ce;
    const double C50333 = 2 * C50203;
    const double C50549 = C50544 + C50545;
    const double C50001 = C49993 + C50000;
    const double C50005 = 2 * C50003;
    const double C50099 = C49874 * C50003;
    const double C50188 = C50003 * ce;
    const double C50327 = C49875 * C50003;
    const double C50478 = C50003 * C50048;
    const double C50519 = C50003 * C50103;
    const double C50533 = C50003 * ae;
    const double C50176 = C49993 + C50172;
    const double C50265 = 2 * C50205;
    const double C50260 = C50205 * ce;
    const double C50315 = C49875 * C50205;
    const double C50571 = C50205 * ae;
    const double C50602 = C50205 * C50103;
    const double C50270 = C50263 + C50264;
    const double C50294 = C50290 * ce;
    const double C50341 = 2 * C50290;
    const double C50325 = C49993 + C50324;
    const double C50575 = C50569 + C50570;
    const double C49916 = C49915 / C49739;
    const double C50125 = C49874 * C50121;
    const double C50185 = C49875 * C50121;
    const double C50235 = C50229 / C49739;
    const double C50268 = C50261 / C49739;
    const double C49978 = C49977 + C49934;
    const double C50128 = C50123 * C50048;
    const double C50239 = C50232 + C49934;
    const double C50030 = C49949 + C50029;
    const double C50329 = C50216 * C50103;
    const double C50321 = C49949 + C50318;
    const double C6109 = C50907 * C888;
    const double C18581 = C50923 * C888;
    const double C28950 = C50923 * C888;
    const double C154 = C117 * C131;
    const double C2464 = C2449 * C131;
    const double C158 = C117 * C133;
    const double C2470 = C2449 * C133;
    const double C327 = C117 * C306;
    const double C2466 = C2450 * C306;
    const double C2660 = C2449 * C306;
    const double C331 = C117 * C308;
    const double C2458 = C2450 * C308;
    const double C2668 = C2449 * C308;
    const double C489 = C117 * C469;
    const double C2852 = C2449 * C469;
    const double C658 = C117 * C643;
    const double C2666 = C2450 * C643;
    const double C3042 = C2449 * C643;
    const double C6108 = C117 * C873;
    const double C18580 = C2450 * C873;
    const double C18994 = C2449 * C873;
    const double C6266 = C117 * C1006;
    const double C18590 = C2449 * C1006;
    const double C6113 = C50907 * C892;
    const double C13112 = C8177 * C892;
    const double C18997 = C50923 * C892;
    const double C29500 = C50923 * C892;
    const double C6443 = C50907 * C1166;
    const double C18589 = C50923 * C1166;
    const double C29718 = C50923 * C1166;
    const double C642 =
        (C49882 * C50012 + C49874 * (C49874 * C50014 + C50395 * ae) +
         C49874 * C50395 * ae) /
        C49806;
    const double C759 =
        (2 * (C49874 * C50014 + C50395 * ae) +
         C49874 * (C50014 + C49874 * (C49874 * C50019 + C49997 * ae) +
                   C49874 * C49997 * ae) +
         (C50395 + C49997 * C50048) * ae) /
        C49806;
    const double C874 = (C49875 * (C49874 * C50014 + C50395 * ae)) / C49806;
    const double C875 =
        -(C49875 * C49874 * C49958 + C49874 * C50395 * ce) / C49739;
    const double C883 = -(C49875 * (C49963 * C50048 + C49958) +
                          (C50395 + C49997 * C50048) * ce) /
                        C49739;
    const double C1008 = -(C49875 * (C49875 * C49958 + C50395 * ce) +
                           C49882 * C49956 + C49875 * C50395 * ce) /
                         C49739;
    const double C1160 = (C49874 * C50014 + C50395 * ae +
                          (C49874 * C50019 + C49997 * ae) * C50103) /
                         C49806;
    const double C1251 = (-2 * (C49875 * C49958 + C50395 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C49963 + C49997 * ce) +
                                    C49958 + C49875 * C49997 * ce)) /
                             C49739 -
                         ((C50395 + C49997 * C50103) * ce) / C49739;
    const double C636 = C49882 * C50392 + C50395 * C50048;
    const double C752 =
        2 * C49874 * C50395 + C49874 * (C50395 + C49997 * C50048);
    const double C865 = C49875 * C49874 * C50395;
    const double C869 = C49875 * (C50395 + C49997 * C50048);
    const double C1001 = C49882 * C50392 + C50395 * C50103;
    const double C1155 = C49874 * C50395 + C50450 * C50103;
    const double C1245 =
        2 * C49875 * C50395 + C49875 * (C50395 + C49997 * C50103);
    const double C123 = 3 * (C50392 + C49995 * C49891) +
                        C49882 * (2 * C50395 + C49882 * C50399);
    const double C298 = C49874 * (2 * C50395 + C49882 * C50399);
    const double C463 = C49875 * (2 * C50395 + C49882 * C50399);
    const double C637 = C50392 + C49995 * C49891 + C50399 * C50048;
    const double C866 = C49875 * C49874 * C50399;
    const double C1002 = C50392 + C49995 * C49891 + C50399 * C50103;
    const double C1159 = -(C49875 * (C49875 * C50065 + C50447 * ce) +
                           C49874 * C49956 + C49875 * C50447 * ce) /
                         C49739;
    const double C3759 = (-2 * (C49875 * C50065 + C50447 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C50145 + C50097 * ce) +
                                    C50065 + C49875 * C50097 * ce)) /
                             C49739 -
                         ((C50447 + C50097 * C50103) * ce) / C49739;
    const double C1154 = C49874 * C50392 + C50447 * C50103;
    const double C3755 =
        2 * C49875 * C50447 + C49875 * (C50447 + C50097 * C50103);
    const double C50486 = C50483 + C50484;
    const double C3161 = 3 * (C50392 + C49995 * C50048) +
                         C49874 * (2 * C50447 + C49874 * C50487);
    const double C3317 = C49875 * (2 * C50447 + C49874 * C50487);
    const double C3645 = C50392 + C49995 * C50048 + C50487 * C50103;
    const double C50512 = C50508 + C50509;
    const double C6555 = 3 * (C50392 + C49995 * C50103) +
                         C49875 * (2 * C50510 + C49875 * C50513);
    const double C495 = C117 * C471;
    const double C2862 = C2449 * C471;
    const double C6112 = C117 * C881;
    const double C19012 = C2449 * C881;
    const double C18996 = C2450 * C881;
    const double C6570 = C117 * C1249;
    const double C19190 = C2449 * C1249;
    const double C156 = C117 * C122;
    const double C2474 = C2449 * C122;
    const double C329 = C117 * C299;
    const double C2462 = C2450 * C299;
    const double C2664 = C2449 * C299;
    const double C493 = C117 * C462;
    const double C2858 = C2449 * C462;
    const double C6110 = C117 * C868;
    const double C19008 = C2449 * C868;
    const double C18992 = C2450 * C868;
    const double C6568 = C117 * C1244;
    const double C19186 = C2449 * C1244;
    const double C6267 = C50907 * C1015;
    const double C6571 = C50907 * C1256;
    const double C153 = C50907 * C130;
    const double C157 = C50907 * C132;
    const double C330 = C50907 * C307;
    const double C2463 = C50923 * C307;
    const double C22864 = C50923 * C307;
    const double C334 = C50907 * C309;
    const double C2455 = C50923 * C309;
    const double C22856 = C50923 * C309;
    const double C488 = C50907 * C468;
    const double C494 = C50907 * C470;
    const double C6107 = C50907 * C872;
    const double C18577 = C50923 * C872;
    const double C28946 = C50923 * C872;
    const double C6111 = C50907 * C880;
    const double C13106 = C8177 * C880;
    const double C18993 = C50923 * C880;
    const double C29496 = C50923 * C880;
    const double C6265 = C50907 * C1005;
    const double C1026 = C50907 * C1007;
    const double C6441 = C50907 * C1158;
    const double C18585 = C50923 * C1158;
    const double C29714 = C50923 * C1158;
    const double C6569 = C50907 * C1248;
    const double C49964 = C49882 * C49936;
    const double C49970 = -3 * C49936;
    const double C50047 = ae * C49936;
    const double C50045 = C49874 * C49936;
    const double C50524 = C49875 * C49936;
    const double C49976 = C49974 / C49739;
    const double C50060 = C50057 + C49963;
    const double C50126 = C50122 / C49885;
    const double C50127 = -2 * C50119;
    const double C50124 = ae * C50119;
    const double C50607 = C49875 * C50119;
    const double C50157 = C49874 * C50153;
    const double C50231 = -3 * C50153;
    const double C50227 = ae * C50153;
    const double C50592 = C49875 * C50153;
    const double C50243 = C50238 / C49739;
    const double C50241 = C50234 / C49739;
    const double C50020 = C49882 * C49951;
    const double C50024 = 3 * C49951;
    const double C50093 = C49951 * ce;
    const double C50115 = C49875 * C49951;
    const double C50469 = C49874 * C49951;
    const double C50113 = C50019 + C50112;
    const double C50191 = C50186 / C49885;
    const double C50217 = C50213 * ce;
    const double C50337 = 2 * C50213;
    const double C50295 = C50292 / C49739;
    const double C50310 = C50309 * ce;
    const double C50334 = C49875 * C50309;
    const double C50348 = 3 * C50309;
    const double C50008 = C49882 * C50007;
    const double C50101 = C49874 * C50007;
    const double C50471 = C50007 * C50048;
    const double C50527 = C50007 * C50103;
    const double C50196 = C50003 + C50193;
    const double C50610 = C50215 * C50103;
    const double C50330 = C50003 + C50328;
    const double C50275 = C49874 * C50271;
    const double C50595 = C50271 * C50103;
    const double C50319 = C50205 + C50316;
    const double C50342 = C49875 * C50320;
    const double C51030 = C50755 / C49835;
    const double C51029 = C50755 * C50750;
    const double C51026 = C50755 / C49806;
    const double C50762 = C50759 * C50750;
    const double C111 = C50759 / C51032;
    const double C22849 = C50759 / C49814;
    const double C2446 = (C50754 * std::pow(C50750, 2)) / C49831 + C51028;
    const double C51066 = C51027 / C49806;
    const double C2447 = (-2 * C50758 * C51027) / C49806;
    const double C51037 = C50777 / C49768;
    const double C51036 = C50777 * C50772;
    const double C51033 = C50777 / C49739;
    const double C50784 = C50781 * C50772;
    const double C116 = C50781 / C51039;
    const double C1362 = C50781 / C49747;
    const double C295 = (C50776 * std::pow(C50772, 2)) / C49764 + C51035;
    const double C51069 = C51034 / C49739;
    const double C296 = (-2 * C50780 * C51034) / C49739;
    const double C51046 = C50821 / C49768;
    const double C51045 = C50821 * C50820;
    const double C51040 = C50821 / C49739;
    const double C50827 = C50824 * C50820;
    const double C748 = C50824 / C51039;
    const double C1463 = C50824 / C49747;
    const double C51072 = C51044 / C49739;
    const double C631 = (-2 * C50780 * C51044) / C49739;
    const double C630 = (C50808 * std::pow(C50820, 2)) / C49764 + C51043;
    const double C51064 = C50946 / C49835;
    const double C51063 = C50946 * C50945;
    const double C51055 = C50946 / C49806;
    const double C50952 = C50949 * C50945;
    const double C21026 = C50949 / C51032;
    const double C38301 = C50949 / C49814;
    const double C51081 = C51062 / C49806;
    const double C15557 = (-2 * C50758 * C51062) / C49806;
    const double C15556 = (C50937 * std::pow(C50945, 2)) / C49831 + C51061;
    const double C49766 = C49738 * C49752;
    const double C998 =
        ((-C49748 / C49739) / C49747 -
         ((C50838 - (C49738 * C49752) / C49739) * de) / C49739) /
            C49747 -
        ((C49738 * ((-C49752 / C49739) / C49747 - (0 * de) / C49739) + C50850) *
         de) /
            C49739;
    const double C999 =
        ((-C49752 / C49739) / C49747 - (0 * de) / C49739) / C49747 -
        (0 * de) / C49739;
    const double C1731 = (-C49752 / C49739) / C49747 - (0 * de) / C49739;
    const double C49777 = C49771 - C49772;
    const double C51076 = C51050 / C49764;
    const double C51052 = C50853 / C49739;
    const double C1728 = -C51075;
    const double C49833 = C49805 * C49819;
    const double C8181 =
        ((-C49815 / C49806) / C49814 -
         ((C50907 - (C49805 * C49819) / C49806) * be) / C49806) /
            C49814 -
        ((C49805 * ((-C49819 / C49806) / C49814 - (0 * be) / C49806) + C50923) *
         be) /
            C49806;
    const double C8182 =
        ((-C49819 / C49806) / C49814 - (0 * be) / C49806) / C49814 -
        (0 * be) / C49806;
    const double C22851 = (-C49819 / C49806) / C49814 - (0 * be) / C49806;
    const double C49844 = C49838 - C49839;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C5694 = C5678 + C5679;
    const double C5693 = C5676 + C5677;
    const double C51079 = C51058 / C49831;
    const double C2481 = C51053 * C144;
    const double C2475 = C51053 * C132;
    const double C2471 = C51053 * C143;
    const double C2465 = C51053 * C142;
    const double C2461 = C51053 * C130;
    const double C2457 = C51053 * C141;
    const double C2453 = C51053 * C128;
    const double C2673 = C51053 * C309;
    const double C2669 = C51053 * C318;
    const double C2665 = C51053 * C307;
    const double C2661 = C51053 * C317;
    const double C2863 = C51053 * C480;
    const double C2859 = C51053 * C470;
    const double C2853 = C51053 * C479;
    const double C2849 = C51053 * C468;
    const double C3043 = C51053 * C651;
    const double C3477 = C51053 * C1007;
    const double C18591 = C51053 * C1015;
    const double C18587 = C51053 * C1005;
    const double C18583 = C51053 * C478;
    const double C18579 = C51053 * C466;
    const double C19013 = C51053 * C892;
    const double C19009 = C51053 * C880;
    const double C19003 = C51053 * C1166;
    const double C18999 = C51053 * C1158;
    const double C18995 = C51053 * C888;
    const double C18991 = C51053 * C872;
    const double C19191 = C51053 * C1256;
    const double C19187 = C51053 * C1248;
    const double C51060 = C50926 / C49806;
    const double C25728 = C25710 * C651;
    const double C44722 = C25710 * C892;
    const double C44716 = C25710 * C880;
    const double C22845 = -C51078;
    const double C8205 = C8176 * C307;
    const double C8199 = C8176 * C317;
    const double C8193 = C8176 * C318;
    const double C8187 = C8176 * C309;
    const double C8387 = C8176 * C651;
    const double C13114 = C8176 * C888;
    const double C13108 = C8176 * C872;
    const double C13522 = C8176 * C892;
    const double C13516 = C8176 * C880;
    const double C13704 = C8176 * C1166;
    const double C13698 = C8176 * C1158;
    const double C8215 = C8175 * C143;
    const double C8209 = C8175 * C132;
    const double C8207 = C8175 * C130;
    const double C8201 = C8175 * C142;
    const double C8191 = C8175 * C141;
    const double C8185 = C8175 * C128;
    const double C8403 = C8175 * C317;
    const double C8397 = C8175 * C307;
    const double C8395 = C8175 * C309;
    const double C8389 = C8175 * C318;
    const double C8585 = C8175 * C480;
    const double C8579 = C8175 * C470;
    const double C8577 = C8175 * C479;
    const double C8571 = C8175 * C468;
    const double C8755 = C8175 * C651;
    const double C9173 = C8175 * C1007;
    const double C13116 = C8175 * C478;
    const double C13110 = C8175 * C466;
    const double C13536 = C8175 * C892;
    const double C13530 = C8175 * C880;
    const double C13520 = C8175 * C888;
    const double C13514 = C8175 * C872;
    const double C13702 = C8175 * C1015;
    const double C13696 = C8175 * C1005;
    const double C13870 = C8175 * C1166;
    const double C13864 = C8175 * C1158;
    const double C13994 = C8175 * C1256;
    const double C13988 = C8175 * C1248;
    const double C49903 = -C49902;
    const double C49913 = C49911 / C49885;
    const double C50058 = C50055 / C49739;
    const double C50086 = C50084 / C49739;
    const double C50155 = -C50150;
    const double C50177 = -C50173;
    const double C1606 = C50907 * C889;
    const double C2851 = C50923 * C889;
    const double C4259 = C51053 * C889;
    const double C8575 = C8176 * C889;
    const double C9943 = C8175 * C889;
    const double C23252 = C50923 * C889;
    const double C1028 = C50907 * C1016;
    const double C3481 = C51053 * C1016;
    const double C9179 = C8175 * C1016;
    const double C50072 = -C50069;
    const double C50080 = -C50078;
    const double C134 =
        (-3 * (C49925 * C49891 + C49956)) / C49739 +
        C49882 * ((-2 * C49958) / C49739 - (C49882 * C49961) / C49739);
    const double C304 =
        C49874 * ((-2 * C49958) / C49739 - (C49882 * C49961) / C49739);
    const double C473 =
        C49875 * ((-2 * C49958) / C49739 - (C49882 * C49961) / C49739) -
        ((2 * C49882 * C49995 + C49882 * (C49995 + C49993 * C49891)) * ce) /
            C49739;
    const double C645 = -(C49961 * C50048 + C49925 * C49891 + C49956) / C49739;
    const double C756 = (-2 * C49874 * C49961) / C49739 -
                        (C49874 * (C49936 * C50048 + C49961)) / C49739;
    const double C877 =
        -(C49875 * C49874 * C49961 + C49874 * C50399 * ce) / C49739;
    const double C1010 = -(C49875 * (C49875 * C49961 + C50399 * ce) +
                           C49925 * C49891 + C49956 + C49875 * C50399 * ce) /
                         C49739;
    const double C49967 = C49965 / C49739;
    const double C50059 = C50056 / C49885;
    const double C1161 = -(C49875 * (C49875 * C50054 + C50450 * ce) +
                           C49874 * C49958 + C49875 * C50450 * ce) /
                         C49739;
    const double C3045 = C50923 * C764;
    const double C8385 = C8177 * C764;
    const double C8757 = C8176 * C764;
    const double C23446 = C50923 * C764;
    const double C25918 = C25710 * C764;
    const double C4261 = C50923 * C893;
    const double C5849 = C50907 * C893;
    const double C8573 = C8177 * C893;
    const double C9945 = C8176 * C893;
    const double C24614 = C50923 * C893;
    const double C26106 = C25710 * C893;
    const double C35409 = C51053 * C893;
    const double C50520 = C50516 + C50517;
    const double C3044 = C2450 * C758;
    const double C3166 =
        (-3 * (C49925 * C50048 + C49956)) / C49739 +
        C49874 * ((-2 * C50065) / C49739 - (C49874 * C50071) / C49739);
    const double C3321 =
        C49875 * ((-2 * C50065) / C49739 - (C49874 * C50071) / C49739) -
        ((2 * C50447 + C49874 * C50487) * ce) / C49739;
    const double C3649 = -(C49875 * (C49875 * C50071 + C50487 * ce) +
                           C49925 * C50048 + C49956 + C49875 * C50487 * ce) /
                         C49739;
    const double C50156 = C50152 / C49739;
    const double C50154 = C50149 / C49739;
    const double C50603 = C50599 + C50600;
    const double C50178 = ae * C50175;
    const double C50615 = C49875 * C50175;
    const double C50644 = -2 * C50175;
    const double C135 = (3 * (C50012 + C49943 * C49891) +
                         C49882 * (2 * C50014 + C49882 * C50017)) /
                        C49806;
    const double C305 =
        (C49874 * (2 * C50014 + C49882 * C50017) +
         (2 * C49882 * C49995 + C49882 * (C49995 + C49993 * C49891)) * ae) /
        C49806;
    const double C472 = (C49875 * (2 * C50014 + C49882 * C50017)) / C49806;
    const double C644 =
        (C50012 + C49943 * C49891 + C49874 * (C49874 * C50017 + C50399 * ae) +
         C49874 * C50399 * ae) /
        C49806;
    const double C876 = (C49875 * (C49874 * C50017 + C50399 * ae)) / C49806;
    const double C1009 = (C50012 + C49943 * C49891 + C50017 * C50103) / C49806;
    const double C1252 =
        (2 * C49875 * C50017 + C49875 * (C50017 + C49951 * C50103)) / C49806;
    const double C50087 = C50085 / C49885;
    const double C3483 = C50923 * C1167;
    const double C6447 = C50907 * C1167;
    const double C9181 = C8176 * C1167;
    const double C19981 = C51053 * C1167;
    const double C23860 = C50923 * C1167;
    const double C6275 = C50907 * C1257;
    const double C19203 = C51053 * C1257;
    const double C50479 = C50476 + C50477;
    const double C4257 = C50923 * C882;
    const double C5847 = C50907 * C882;
    const double C8567 = C8177 * C882;
    const double C9939 = C8176 * C882;
    const double C24610 = C50923 * C882;
    const double C26100 = C25710 * C882;
    const double C35405 = C51053 * C882;
    const double C6273 = C50907 * C1250;
    const double C19199 = C51053 * C1250;
    const double C6558 = (3 * (C50012 + C49943 * C50103) +
                          C49875 * (2 * C50107 + C49875 * C50109)) /
                         C49806;
    const double C50207 = C50206 / C49739;
    const double C50551 = C49874 * C50549;
    const double C50568 = 2 * C50549;
    const double C50403 = C49882 * C50001;
    const double C50408 = 3 * C50001;
    const double C50453 = C49874 * C50001;
    const double C50470 = C50001 * ae;
    const double C50526 = C49875 * C50001;
    const double C50525 = C50001 * ce;
    const double C757 =
        (2 * (C49874 * C50017 + C50399 * ae) +
         C49874 * (C50017 + C49874 * (C49874 * C49951 + C50001 * ae) +
                   C49874 * C50001 * ae) +
         (C50399 + C50001 * C50048) * ae) /
        C49806;
    const double C884 =
        (C49875 * (C50017 + C49874 * (C49874 * C49951 + C50001 * ae) +
                   C49874 * C50001 * ae)) /
        C49806;
    const double C885 = -(C49875 * (C49936 * C50048 + C49961) +
                          (C50399 + C50001 * C50048) * ce) /
                        C49739;
    const double C1162 = (C49874 * C50017 + C50399 * ae +
                          (C49874 * C49951 + C50001 * ae) * C50103) /
                         C49806;
    const double C1253 = (-2 * (C49875 * C49961 + C50399 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C49936 + C50001 * ce) +
                                    C49961 + C49875 * C50001 * ce)) /
                             C49739 -
                         ((C50399 + C50001 * C50103) * ce) / C49739;
    const double C751 =
        2 * C49874 * C50399 + C49874 * (C50399 + C50001 * C50048);
    const double C870 = C49875 * (C50399 + C50001 * C50048);
    const double C1246 =
        2 * C49875 * C50399 + C49875 * (C50399 + C50001 * C50103);
    const double C50535 = 2 * C50099;
    const double C50534 = C50099 * ae;
    const double C50609 = C49875 * C50099;
    const double C50608 = C50099 * ce;
    const double C3761 = (-2 * (C49875 * C50054 + C50450 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C50119 + C50099 * ce) +
                                    C50054 + C49875 * C50099 * ce)) /
                             C49739 -
                         ((C50450 + C50099 * C50103) * ce) / C49739;
    const double C3756 =
        2 * C49875 * C50450 + C49875 * (C50450 + C50099 * C50103);
    const double C50192 = C50187 + C50188;
    const double C50626 = 2 * C50327;
    const double C50625 = C50327 * ce;
    const double C50480 = C49997 + C50478;
    const double C50521 = C49997 + C50519;
    const double C50537 = C50532 + C50533;
    const double C50548 = C49874 * C50176;
    const double C50573 = 3 * C50176;
    const double C50572 = C50176 * ae;
    const double C50594 = C49875 * C50176;
    const double C50593 = C50176 * ce;
    const double C9444 = (-2 * (C49875 * C50071 + C50487 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C50153 + C50176 * ce) +
                                    C50071 + C49875 * C50176 * ce)) /
                             C49739 -
                         ((C50487 + C50176 * C50103) * ce) / C49739;
    const double C9441 =
        2 * C49875 * C50487 + C49875 * (C50487 + C50176 * C50103);
    const double C50267 = C50259 + C50260;
    const double C50637 = 2 * C50315;
    const double C50636 = C50315 * ce;
    const double C50604 = C50097 + C50602;
    const double C50274 = ae * C50270;
    const double C50289 = C49875 * C50270;
    const double C50618 = C49875 * C50325;
    const double C50647 = 3 * C50325;
    const double C50646 = C50325 * ce;
    const double C50577 = C49874 * C50575;
    const double C50632 = C50575 * C50103;
    const double C49917 = -C49916;
    const double C50130 = C50125 / C49739;
    const double C50190 = C50185 / C49739;
    const double C50242 = -C50235;
    const double C50273 = -C50268;
    const double C49979 = C49882 * C49978;
    const double C50050 = C49978 * C50048;
    const double C50132 = C50128 + C49971;
    const double C50244 = C49874 * C50239;
    const double C50031 = C49882 * C50030;
    const double C50116 = C50030 * C50103;
    const double C50331 = C50025 + C50329;
    const double C50344 = C49875 * C50321;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C341 = C327 + C328;
    const double C2491 = C2466 + C2467;
    const double C343 = C331 + C332;
    const double C2487 = C2458 + C2459;
    const double C510 = C489 + C490;
    const double C669 = C658 + C659;
    const double C2686 = C2666 + C2667;
    const double C6115 = C6108 + C6109;
    const double C18594 = C18580 + C18581;
    const double C657 = C50907 * C642;
    const double C2671 = C50923 * C642;
    const double C3039 = C51053 * C642;
    const double C8189 = C8177 * C642;
    const double C8393 = C8176 * C642;
    const double C8749 = C8175 * C642;
    const double C23072 = C50923 * C642;
    const double C25722 = C25710 * C642;
    const double C3041 = C50923 * C759;
    const double C8391 = C8177 * C759;
    const double C8751 = C8176 * C759;
    const double C23442 = C50923 * C759;
    const double C25924 = C25710 * C759;
    const double C1602 = C50907 * C874;
    const double C2847 = C50923 * C874;
    const double C4255 = C51053 * C874;
    const double C8569 = C8176 * C874;
    const double C9937 = C8175 * C874;
    const double C23248 = C50923 * C874;
    const double C1605 = C117 * C875;
    const double C2850 = C2450 * C875;
    const double C4258 = C2449 * C875;
    const double C4260 = C2450 * C883;
    const double C5848 = C117 * C883;
    const double C35408 = C2449 * C883;
    const double C1027 = C117 * C1008;
    const double C3480 = C2449 * C1008;
    const double C3479 = C50923 * C1160;
    const double C6445 = C50907 * C1160;
    const double C9175 = C8176 * C1160;
    const double C19977 = C51053 * C1160;
    const double C23856 = C50923 * C1160;
    const double C6274 = C117 * C1251;
    const double C19202 = C2449 * C1251;
    const double C656 = C117 * C636;
    const double C2670 = C2450 * C636;
    const double C3038 = C2449 * C636;
    const double C3040 = C2450 * C752;
    const double C1601 = C117 * C865;
    const double C2846 = C2450 * C865;
    const double C4254 = C2449 * C865;
    const double C4256 = C2450 * C869;
    const double C5846 = C117 * C869;
    const double C35404 = C2449 * C869;
    const double C1025 = C117 * C1001;
    const double C3476 = C2449 * C1001;
    const double C3478 = C2450 * C1155;
    const double C6444 = C117 * C1155;
    const double C19976 = C2449 * C1155;
    const double C6272 = C117 * C1245;
    const double C19198 = C2449 * C1245;
    const double C162 = C117 * C123;
    const double C2476 = C2449 * C123;
    const double C325 = C117 * C298;
    const double C2472 = C2450 * C298;
    const double C2674 = C2449 * C298;
    const double C499 = C117 * C463;
    const double C2864 = C2449 * C463;
    const double C660 = C117 * C637;
    const double C2662 = C2450 * C637;
    const double C3046 = C2449 * C637;
    const double C1607 = C117 * C866;
    const double C2856 = C2450 * C866;
    const double C4262 = C2449 * C866;
    const double C1033 = C117 * C1002;
    const double C3484 = C2449 * C1002;
    const double C6442 = C117 * C1159;
    const double C18588 = C2450 * C1159;
    const double C19002 = C2449 * C1159;
    const double C16584 = C117 * C3759;
    const double C19192 = C2450 * C3759;
    const double C19366 = C2449 * C3759;
    const double C6440 = C117 * C1154;
    const double C18584 = C2450 * C1154;
    const double C18998 = C2449 * C1154;
    const double C16582 = C117 * C3755;
    const double C19188 = C2450 * C3755;
    const double C19362 = C2449 * C3755;
    const double C3167 =
        (3 * (C50012 + C49874 * C50486 + C50447 * ae) +
         C49874 * (2 * C50486 +
                   C49874 * (C49943 + C49874 * (C49874 * C49946 + C49993 * ae) +
                             C50097 * ae) +
                   C50487 * ae) +
         (2 * C50447 + C49874 * C50487) * ae) /
        C49806;
    const double C3320 =
        (C49875 * (2 * C50486 +
                   C49874 * (C49943 + C49874 * (C49874 * C49946 + C49993 * ae) +
                             C50097 * ae) +
                   C50487 * ae)) /
        C49806;
    const double C3648 =
        (C50012 + C49874 * C50486 + C50447 * ae +
         (C49943 + C49874 * (C49874 * C49946 + C49993 * ae) + C50097 * ae) *
             C50103) /
        C49806;
    const double C3758 =
        (2 * C49875 * C50486 +
         C49875 * (C50486 + (C49874 * C49946 + C49993 * ae) * C50103)) /
        C49806;
    const double C13977 =
        (3 * (C50486 + C50549 * C50103) +
         C49875 * (2 * C49875 * C50549 + C49875 * (C50549 + C50575 * C50103))) /
        C49806;
    const double C19006 = C2450 * C3317;
    const double C16268 = C117 * C3645;
    const double C19016 = C2449 * C3645;
    const double C19000 = C2450 * C3645;
    const double C6559 =
        (-3 * (C49875 * C50512 + C49956 + C50510 * ce)) / C49739 +
        C49875 * ((-2 * C50512) / C49739 -
                  (C49875 * (C49875 * C50175 + C49925 + C50323 * ce)) / C49739 -
                  (C50513 * ce) / C49739) -
        ((2 * C50510 + C49875 * C50513) * ce) / C49739;
    const double C16700 = C117 * C6555;
    const double C19478 = C2449 * C6555;
    const double C513 = C495 + C496;
    const double C6117 = C6112 + C6113;
    const double C19025 = C18996 + C18997;
    const double C6285 = C6266 + C6267;
    const double C6573 = C6570 + C6571;
    const double C170 = C152 + C153;
    const double C172 = C156 + C157;
    const double C342 = C329 + C330;
    const double C2489 = C2462 + C2463;
    const double C344 = C333 + C334;
    const double C2485 = C2454 + C2455;
    const double C509 = C487 + C488;
    const double C512 = C493 + C494;
    const double C6114 = C6106 + C6107;
    const double C18592 = C18576 + C18577;
    const double C6116 = C6110 + C6111;
    const double C19023 = C18992 + C18993;
    const double C6284 = C6264 + C6265;
    const double C6572 = C6568 + C6569;
    const double C49966 = C49964 / C49739;
    const double C49973 = C49970 / C49739;
    const double C50049 = C50047 / C49885;
    const double C3164 =
        (-3 * (C49963 * C50048 + C49958)) / C49739 +
        C49874 * ((-2 * C50054) / C49739 - (C49874 * C50060) / C49739);
    const double C50131 = C50127 / C49739;
    const double C50129 = C50124 / C49739;
    const double C50160 = C50157 / C49739;
    const double C50237 = C50231 / C49739;
    const double C50233 = C50227 / C49885;
    const double C50245 = -C50241;
    const double C50022 = C50021 + C50020;
    const double C50094 = C50093 / C49885;
    const double C6560 = (3 * (C50014 + C50019 * C50103) +
                          C49875 * (2 * C50111 + C49875 * C50113)) /
                         C49806;
    const double C50218 = C50217 / C49739;
    const double C50297 = -C50295;
    const double C50311 = C50310 / C49885;
    const double C50335 = C50333 + C50334;
    const double C50009 = C50005 + C50008;
    const double C50473 = C50001 + C50471;
    const double C50529 = C50001 + C50527;
    const double C50536 = C49874 * C50196;
    const double C50612 = C50099 + C50610;
    const double C50627 = C49875 * C50330;
    const double C50279 = C50265 + C50275;
    const double C50597 = C50176 + C50595;
    const double C50638 = C49875 * C50319;
    const double C50345 = C50341 + C50342;
    const double C51067 = C51029 / C49831;
    const double C51031 = C50762 / C49806;
    const double C25711 = -C51066;
    const double C51070 = C51036 / C49764;
    const double C51038 = C50784 / C49739;
    const double C1464 = -C51069;
    const double C51073 = C51045 / C49764;
    const double C51047 = C50827 / C49739;
    const double C1358 = -C51072;
    const double C51082 = C51063 / C49831;
    const double C51065 = C50952 / C49806;
    const double C32138 = -C51081;
    const double C49770 = C49766 / C49739;
    const double C1243 =
        (C49777 / C49747 - (0 * de) / C49739) / C49747 - (0 * de) / C49739;
    const double C2001 = C49777 / C49747 - (0 * de) / C49739;
    const double C51087 = C51048 - C51076;
    const double C51077 = C51051 - C51052;
    const double C997 =
        ((-(0 * de) / C49739) / C49747 -
         ((0 - (C49738 * C49748) / C49739) * de) / C49739) /
            C49747 -
        ((C49738 * ((-C49748 / C49739) / C49747 -
                    ((C50838 - (C49738 * C49752) / C49739) * de) / C49739) +
          C1728) *
         de) /
            C49739 +
        (-C49752 / C49739) / C49747 - (0 * de) / C49739;
    const double C49837 = C49833 / C49806;
    const double C8210 = C8181 * C298;
    const double C8204 = C8181 * C299;
    const double C8198 = C8181 * C306;
    const double C8192 = C8181 * C308;
    const double C8186 = C8181 * C300;
    const double C8398 = C8181 * C637;
    const double C8392 = C8181 * C636;
    const double C8386 = C8181 * C643;
    const double C8580 = C8181 * C866;
    const double C8574 = C8181 * C875;
    const double C8568 = C8181 * C865;
    const double C8756 = C8181 * C758;
    const double C8750 = C8181 * C752;
    const double C9174 = C8181 * C1155;
    const double C9944 = C8181 * C883;
    const double C9938 = C8181 * C869;
    const double C13113 = C8181 * C873;
    const double C13107 = C8181 * C864;
    const double C13527 = C8181 * C3317;
    const double C13521 = C8181 * C881;
    const double C13515 = C8181 * C868;
    const double C13703 = C8181 * C1159;
    const double C13697 = C8181 * C1154;
    const double C13861 = C8181 * C3645;
    const double C13991 = C8181 * C3759;
    const double C13985 = C8181 * C3755;
    const double C8202 = C8182 * C637;
    const double C8194 = C8182 * C643;
    const double C8188 = C8182 * C636;
    const double C8390 = C8182 * C752;
    const double C8384 = C8182 * C758;
    const double C8572 = C8182 * C883;
    const double C8566 = C8182 * C869;
    const double C13111 = C8182 * C881;
    const double C13105 = C8182 * C868;
    const double C13517 = C8182 * C3317;
    const double C13699 = C8182 * C3645;
    const double C22873 = C22851 * C298;
    const double C22867 = C22851 * C306;
    const double C22863 = C22851 * C299;
    const double C22859 = C22851 * C308;
    const double C22855 = C22851 * C300;
    const double C23071 = C22851 * C636;
    const double C23067 = C22851 * C643;
    const double C23063 = C22851 * C637;
    const double C23257 = C22851 * C866;
    const double C23251 = C22851 * C875;
    const double C23247 = C22851 * C865;
    const double C23445 = C22851 * C758;
    const double C23441 = C22851 * C752;
    const double C23855 = C22851 * C1155;
    const double C24613 = C22851 * C883;
    const double C24609 = C22851 * C869;
    const double C28949 = C22851 * C873;
    const double C28945 = C22851 * C864;
    const double C29501 = C22851 * C3317;
    const double C29499 = C22851 * C881;
    const double C29495 = C22851 * C868;
    const double C29717 = C22851 * C1159;
    const double C29713 = C22851 * C1154;
    const double C29933 = C22851 * C3645;
    const double C30091 = C22851 * C3759;
    const double C30087 = C22851 * C3755;
    const double C10999 =
        (C49844 / C49814 - (0 * be) / C49806) / C49814 - (0 * be) / C49806;
    const double C25715 = C49844 / C49814 - (0 * be) / C49806;
    const double C179 = C169 * C50838;
    const double C486 = C169 * C51042;
    const double C1022 = C169 * C994;
    const double C1734 = C169 * C1728;
    const double C178 = C168 * C118;
    const double C485 = C168 * C458;
    const double C51088 = C51056 - C51079;
    const double C2495 = C2474 + C2475;
    const double C2493 = C2470 + C2471;
    const double C2490 = C2464 + C2465;
    const double C2488 = C2460 + C2461;
    const double C2486 = C2456 + C2457;
    const double C2484 = C2452 + C2453;
    const double C2689 = C2672 + C2673;
    const double C2687 = C2668 + C2669;
    const double C2685 = C2664 + C2665;
    const double C2683 = C2660 + C2661;
    const double C2880 = C2862 + C2863;
    const double C2878 = C2858 + C2859;
    const double C2875 = C2852 + C2853;
    const double C2873 = C2848 + C2849;
    const double C3056 = C3042 + C3043;
    const double C18599 = C18590 + C18591;
    const double C18597 = C18586 + C18587;
    const double C18595 = C18582 + C18583;
    const double C18593 = C18578 + C18579;
    const double C19033 = C19012 + C19013;
    const double C19031 = C19008 + C19009;
    const double C19024 = C18994 + C18995;
    const double C19022 = C18990 + C18991;
    const double C19206 = C19190 + C19191;
    const double C19204 = C19186 + C19187;
    const double C51080 = C51059 - C51060;
    const double C22882 = C22845 * C144;
    const double C22876 = C22845 * C132;
    const double C22872 = C22845 * C143;
    const double C22866 = C22845 * C142;
    const double C22862 = C22845 * C130;
    const double C22858 = C22845 * C141;
    const double C22854 = C22845 * C128;
    const double C23074 = C22845 * C309;
    const double C23070 = C22845 * C318;
    const double C23066 = C22845 * C307;
    const double C23062 = C22845 * C317;
    const double C23264 = C22845 * C480;
    const double C23260 = C22845 * C470;
    const double C23254 = C22845 * C479;
    const double C23250 = C22845 * C468;
    const double C23444 = C22845 * C651;
    const double C23440 = C22845 * C642;
    const double C23858 = C22845 * C1016;
    const double C23854 = C22845 * C1007;
    const double C24612 = C22845 * C889;
    const double C24608 = C22845 * C874;
    const double C28952 = C22845 * C478;
    const double C28948 = C22845 * C466;
    const double C29162 = C22845 * C893;
    const double C29158 = C22845 * C882;
    const double C29508 = C22845 * C892;
    const double C29504 = C22845 * C880;
    const double C29498 = C22845 * C888;
    const double C29494 = C22845 * C872;
    const double C29728 = C22845 * C1257;
    const double C29724 = C22845 * C1250;
    const double C29716 = C22845 * C1015;
    const double C29712 = C22845 * C1005;
    const double C29948 = C22845 * C1167;
    const double C29944 = C22845 * C1160;
    const double C29940 = C22845 * C1166;
    const double C29936 = C22845 * C1158;
    const double C30094 = C22845 * C1256;
    const double C30090 = C22845 * C1248;
    const double C8180 =
        ((-(0 * be) / C49806) / C49814 -
         ((0 - (C49805 * C49815) / C49806) * be) / C49806) /
            C49814 -
        ((C49805 * ((-C49815 / C49806) / C49814 -
                    ((C50907 - (C49805 * C49819) / C49806) * be) / C49806) +
          C22845) *
         be) /
            C49806 +
        (-C49819 / C49806) / C49814 - (0 * be) / C49806;
    const double C49904 = C49903 / C49806;
    const double C50061 = -C50058;
    const double C50088 = -C50086;
    const double C50159 = C50155 / C49806;
    const double C50179 = C50177 / C49806;
    const double C50073 = C50072 / C49806;
    const double C50081 = C50080 / C49806;
    const double C160 = C117 * C134;
    const double C2480 = C2449 * C134;
    const double C323 = C117 * C304;
    const double C2468 = C2450 * C304;
    const double C2678 = C2449 * C304;
    const double C8216 = C8181 * C304;
    const double C22869 = C22851 * C304;
    const double C501 = C117 * C473;
    const double C2868 = C2449 * C473;
    const double C662 = C117 * C645;
    const double C2658 = C2450 * C645;
    const double C3050 = C2449 * C645;
    const double C8196 = C8182 * C645;
    const double C8404 = C8181 * C645;
    const double C23059 = C22851 * C645;
    const double C3052 = C2450 * C756;
    const double C8406 = C8182 * C756;
    const double C23453 = C22851 * C756;
    const double C1611 = C117 * C877;
    const double C2860 = C2450 * C877;
    const double C4266 = C2449 * C877;
    const double C8586 = C8181 * C877;
    const double C23261 = C22851 * C877;
    const double C1035 = C117 * C1010;
    const double C3488 = C2449 * C1010;
    const double C3482 = C2450 * C1161;
    const double C6446 = C117 * C1161;
    const double C9180 = C8181 * C1161;
    const double C19980 = C2449 * C1161;
    const double C23859 = C22851 * C1161;
    const double C3057 = C3044 + C3045;
    const double C13533 = C8181 * C3321;
    const double C13523 = C8182 * C3321;
    const double C19010 = C2450 * C3321;
    const double C29505 = C22851 * C3321;
    const double C13705 = C8182 * C3649;
    const double C13867 = C8181 * C3649;
    const double C16270 = C117 * C3649;
    const double C19020 = C2449 * C3649;
    const double C19004 = C2450 * C3649;
    const double C29937 = C22851 * C3649;
    const double C50158 = -C50154;
    const double C50180 = C50178 / C49885;
    const double C50619 = C50615 + C49925;
    const double C50649 = C50644 / C49739;
    const double C163 = C50907 * C135;
    const double C2477 = C51053 * C135;
    const double C22878 = C22845 * C135;
    const double C326 = C50907 * C305;
    const double C2473 = C50923 * C305;
    const double C2675 = C51053 * C305;
    const double C8211 = C8176 * C305;
    const double C22874 = C50923 * C305;
    const double C23076 = C22845 * C305;
    const double C500 = C50907 * C472;
    const double C2865 = C51053 * C472;
    const double C23266 = C22845 * C472;
    const double C661 = C50907 * C644;
    const double C2663 = C50923 * C644;
    const double C3047 = C51053 * C644;
    const double C8203 = C8177 * C644;
    const double C8399 = C8176 * C644;
    const double C23064 = C50923 * C644;
    const double C23448 = C22845 * C644;
    const double C25736 = C25710 * C644;
    const double C1608 = C50907 * C876;
    const double C2857 = C50923 * C876;
    const double C4263 = C51053 * C876;
    const double C8581 = C8176 * C876;
    const double C23258 = C50923 * C876;
    const double C24616 = C22845 * C876;
    const double C1034 = C50907 * C1009;
    const double C3485 = C51053 * C1009;
    const double C23862 = C22845 * C1009;
    const double C6281 = C50907 * C1252;
    const double C3650 =
        (C50014 + C49874 * C50479 + C50450 * ae +
         (C50019 + C49874 * (C49874 * C50025 + C50003 * ae) + C50099 * ae) *
             C50103) /
        C49806;
    const double C3760 =
        (2 * C49875 * C50479 +
         C49875 * (C50479 + (C49874 * C50025 + C50003 * ae) * C50103)) /
        C49806;
    const double C16701 = C50907 * C6558;
    const double C19479 = C51053 * C6558;
    const double C48264 = C22845 * C6558;
    const double C50208 = -C50207;
    const double C50552 = C49943 + C50551;
    const double C50404 = C50402 + C50403;
    const double C1163 = -(C49875 * (C49875 * C50045 + C50453 * ce) +
                           C49874 * C49961 + C49875 * C50453 * ce) /
                         C49739;
    const double C3763 =
        (-2 * (C49875 * C50045 + C50453 * ce)) / C49739 -
        (C49875 * (C49875 * (C49875 * C49874 * C49978 + C50101 * ce) + C50045 +
                   C49875 * C50101 * ce)) /
            C49739 -
        ((C50453 + C50101 * C50103) * ce) / C49739;
    const double C1156 = C49874 * C50399 + C50453 * C50103;
    const double C3757 =
        2 * C49875 * C50453 + C49875 * (C50453 + C50101 * C50103);
    const double C50472 = C50469 + C50470;
    const double C50528 = C50524 + C50525;
    const double C3049 = C50923 * C757;
    const double C8401 = C8177 * C757;
    const double C23450 = C50923 * C757;
    const double C25934 = C25710 * C757;
    const double C4265 = C50923 * C884;
    const double C5851 = C50907 * C884;
    const double C8583 = C8177 * C884;
    const double C24618 = C50923 * C884;
    const double C26116 = C25710 * C884;
    const double C4268 = C2450 * C885;
    const double C5852 = C117 * C885;
    const double C8588 = C8182 * C885;
    const double C24621 = C22851 * C885;
    const double C3487 = C50923 * C1162;
    const double C6449 = C50907 * C1162;
    const double C23864 = C50923 * C1162;
    const double C6282 = C117 * C1253;
    const double C3048 = C2450 * C751;
    const double C8400 = C8182 * C751;
    const double C23449 = C22851 * C751;
    const double C4264 = C2450 * C870;
    const double C5850 = C117 * C870;
    const double C8582 = C8182 * C870;
    const double C24617 = C22851 * C870;
    const double C6280 = C117 * C1246;
    const double C50611 = C50607 + C50608;
    const double C16588 = C117 * C3761;
    const double C19200 = C2450 * C3761;
    const double C29729 = C22851 * C3761;
    const double C16586 = C117 * C3756;
    const double C19196 = C2450 * C3756;
    const double C29725 = C22851 * C3756;
    const double C50195 = ae * C50192;
    const double C50624 = C49875 * C50192;
    const double C3165 =
        (3 * (C50014 + C49874 * C50479 + C50450 * ae) +
         C49874 * (2 * C50479 +
                   C49874 * (C50019 + C49874 * (C49874 * C50025 + C50003 * ae) +
                             C50099 * ae) +
                   C50480 * ae) +
         (2 * C50450 + C49874 * C50480) * ae) /
        C49806;
    const double C3322 =
        (C49875 * (2 * C50479 +
                   C49874 * (C50019 + C49874 * (C49874 * C50025 + C50003 * ae) +
                             C50099 * ae) +
                   C50480 * ae)) /
        C49806;
    const double C3323 =
        C49875 * ((-2 * C50054) / C49739 - (C49874 * C50060) / C49739) -
        ((2 * C50450 + C49874 * C50480) * ce) / C49739;
    const double C3651 = -(C49875 * (C49875 * C50060 + C50480 * ce) +
                           C49963 * C50048 + C49958 + C49875 * C50480 * ce) /
                         C49739;
    const double C3160 = 3 * (C50395 + C49997 * C50048) +
                         C49874 * (2 * C50450 + C49874 * C50480);
    const double C3318 = C49875 * (2 * C50450 + C49874 * C50480);
    const double C3646 = C50395 + C49997 * C50048 + C50480 * C50103;
    const double C9442 =
        2 * C49875 * C50480 + C49875 * (C50480 + C50196 * C50103);
    const double C6561 =
        (-3 * (C49875 * C50520 + C49958 + C50518 * ce)) / C49739 +
        C49875 * ((-2 * C50520) / C49739 -
                  (C49875 * (C49875 * C50192 + C49963 + C50327 * ce)) / C49739 -
                  (C50521 * ce) / C49739) -
        ((2 * C50518 + C49875 * C50521) * ce) / C49739;
    const double C6556 = 3 * (C50395 + C49997 * C50103) +
                         C49875 * (2 * C50518 + C49875 * C50521);
    const double C50539 = C49874 * C50537;
    const double C16578 =
        (3 * (C50479 + C50537 * C50103) +
         C49875 *
             (2 * C49875 * C50537 +
              C49875 * (C50537 + (C49874 * C50216 + C50189 * ae) * C50103))) /
        C49806;
    const double C50550 = C50547 + C50548;
    const double C50596 = C50592 + C50593;
    const double C13989 = C8182 * C9444;
    const double C19364 = C2450 * C9444;
    const double C21488 = C117 * C9444;
    const double C48153 = C22851 * C9444;
    const double C13983 = C8182 * C9441;
    const double C19360 = C2450 * C9441;
    const double C21486 = C117 * C9441;
    const double C48149 = C22851 * C9441;
    const double C50272 = ae * C50267;
    const double C50635 = C49875 * C50267;
    const double C13979 =
        (-3 * (C49875 * C50603 + C50065 + C50601 * ce)) / C49739 +
        C49875 * ((-2 * C50603) / C49739 -
                  (C49875 * (C49875 * C50267 + C50145 + C50315 * ce)) / C49739 -
                  (C50604 * ce) / C49739) -
        ((2 * C50601 + C49875 * C50604) * ce) / C49739;
    const double C13975 = 3 * (C50447 + C50097 * C50103) +
                          C49875 * (2 * C50601 + C49875 * C50604);
    const double C50278 = C50274 / C49885;
    const double C50293 = C50289 + C49931;
    const double C50620 = C50617 + C50618;
    const double C50651 = C50646 / C49739;
    const double C50578 = C49946 + C50577;
    const double C50633 = C50549 + C50632;
    const double C49918 = C49917 / C49806;
    const double C50134 = -C50130;
    const double C50194 = -C50190;
    const double C50246 = C50242 / C49806;
    const double C50277 = C50273 / C49806;
    const double C49980 = C49979 / C49739;
    const double C50052 = C50050 + C49936;
    const double C50135 = C49874 * C50132;
    const double C9446 = (-2 * (C49875 * C50060 + C50480 * ce)) / C49739 -
                         (C49875 * (C49875 * (C49875 * C50132 + C50196 * ce) +
                                    C50060 + C49875 * C50196 * ce)) /
                             C49739 -
                         ((C50480 + C50196 * C50103) * ce) / C49739;
    const double C50247 = C50244 / C49739;
    const double C50032 = C50027 + C50031;
    const double C50117 = C49951 + C50116;
    const double C50338 = C49875 * C50331;
    const double C50346 = C50343 + C50344;
    const double C181 = C171 * C50838;
    const double C492 = C171 * C51042;
    const double C1030 = C171 * C994;
    const double C1738 = C171 * C1728;
    const double C183 = C173 * C50838;
    const double C498 = C173 * C51042;
    const double C1038 = C173 * C994;
    const double C1742 = C173 * C1728;
    const double C349 = C341 * C50838;
    const double C1609 = C341 * C51042;
    const double C1892 = C341 * C1728;
    const double C351 = C343 * C50838;
    const double C1603 = C343 * C51042;
    const double C1888 = C343 * C1728;
    const double C520 = C510 * C50850;
    const double C1024 = C510 * C995;
    const double C1736 = C510 * C50850;
    const double C5359 = C510 * C50838;
    const double C5681 = C510 * C51042;
    const double C6269 = C510 * C994;
    const double C7215 = C510 * C1728;
    const double C675 = C669 * C50838;
    const double C1620 = C1605 + C1606;
    const double C2874 = C2850 + C2851;
    const double C4272 = C4258 + C4259;
    const double C4273 = C4260 + C4261;
    const double C5855 = C5848 + C5849;
    const double C35414 = C35408 + C35409;
    const double C1046 = C1027 + C1028;
    const double C3494 = C3480 + C3481;
    const double C6287 = C6274 + C6275;
    const double C19211 = C19202 + C19203;
    const double C668 = C656 + C657;
    const double C2688 = C2670 + C2671;
    const double C3054 = C3038 + C3039;
    const double C3055 = C3040 + C3041;
    const double C1619 = C1601 + C1602;
    const double C2872 = C2846 + C2847;
    const double C4270 = C4254 + C4255;
    const double C4271 = C4256 + C4257;
    const double C5854 = C5846 + C5847;
    const double C35412 = C35404 + C35405;
    const double C1045 = C1025 + C1026;
    const double C3492 = C3476 + C3477;
    const double C3493 = C3478 + C3479;
    const double C6454 = C6444 + C6445;
    const double C19983 = C19976 + C19977;
    const double C6286 = C6272 + C6273;
    const double C19209 = C19198 + C19199;
    const double C6453 = C6442 + C6443;
    const double C18598 = C18588 + C18589;
    const double C19028 = C19002 + C19003;
    const double C6452 = C6440 + C6441;
    const double C18596 = C18584 + C18585;
    const double C19026 = C18998 + C18999;
    const double C13528 = C8176 * C3320;
    const double C13518 = C8177 * C3320;
    const double C19007 = C50923 * C3320;
    const double C29502 = C50923 * C3320;
    const double C45128 = C25710 * C3320;
    const double C13700 = C8177 * C3648;
    const double C13862 = C8176 * C3648;
    const double C16269 = C50907 * C3648;
    const double C19017 = C51053 * C3648;
    const double C19001 = C50923 * C3648;
    const double C29934 = C50923 * C3648;
    const double C45310 = C25710 * C3648;
    const double C47844 = C22845 * C3648;
    const double C13986 = C8176 * C3758;
    const double C16583 = C50907 * C3758;
    const double C19189 = C50923 * C3758;
    const double C19363 = C51053 * C3758;
    const double C30088 = C50923 * C3758;
    const double C48152 = C22845 * C3758;
    const double C19477 = C50923 * C13977;
    const double C21689 = C50907 * C13977;
    const double C48262 = C50923 * C13977;
    const double C16702 = C117 * C6559;
    const double C19482 = C2449 * C6559;
    const double C522 = C513 * C50850;
    const double C1032 = C513 * C995;
    const double C1740 = C513 * C50850;
    const double C5362 = C513 * C50838;
    const double C5686 = C513 * C51042;
    const double C6277 = C513 * C994;
    const double C7220 = C513 * C1728;
    const double C180 = C170 * C118;
    const double C491 = C170 * C458;
    const double C182 = C172 * C118;
    const double C497 = C172 * C458;
    const double C350 = C342 * C118;
    const double C1610 = C342 * C458;
    const double C352 = C344 * C118;
    const double C1604 = C344 * C458;
    const double C519 = C509 * C459;
    const double C1023 = C509 * C998;
    const double C1735 = C509 * C1731;
    const double C5358 = C509 * C118;
    const double C5680 = C509 * C458;
    const double C521 = C512 * C459;
    const double C1031 = C512 * C998;
    const double C1739 = C512 * C1731;
    const double C5361 = C512 * C118;
    const double C5685 = C512 * C458;
    const double C49968 = C49967 - C49966;
    const double C8758 = C8182 * C3164;
    const double C50133 = -C50129;
    const double C50163 = C50156 - C50160;
    const double C50248 = C50245 / C49806;
    const double C136 = (4 * (2 * C50014 + C49882 * C50017) +
                         C49882 * (3 * C50017 + C49882 * C50022)) /
                        C49806;
    const double C312 = (C49874 * (3 * C50017 + C49882 * C50022) +
                         (3 * (C49995 + C49993 * C49891) +
                          C49882 * (2 * C49997 + C49882 * C50001)) *
                             ae) /
                        C49806;
    const double C474 = (C49875 * (3 * C50017 + C49882 * C50022)) / C49806;
    const double C1011 =
        (2 * C50014 + C49882 * C50017 + C50022 * C50103) / C49806;
    const double C16425 = C50907 * C6560;
    const double C50219 = -C50218;
    const double C50299 = C50297 / C49806;
    const double C16693 = (4 * (2 * C50107 + C49875 * C50109) +
                           C49875 * (3 * C50109 + C49875 * C50335)) /
                          C49806;
    const double C50409 = C49882 * C50009;
    const double C50456 = C49874 * C50009;
    const double C3159 = 3 * (C50399 + C50001 * C50048) +
                         C49874 * (2 * C50453 + C49874 * C50473);
    const double C3319 = C49875 * (2 * C50453 + C49874 * C50473);
    const double C3647 = C50399 + C50001 * C50048 + C50473 * C50103;
    const double C6557 = 3 * (C50399 + C50001 * C50103) +
                         C49875 * (2 * C50526 + C49875 * C50529);
    const double C50538 = C50535 + C50536;
    const double C16577 = 3 * (C50450 + C50099 * C50103) +
                          C49875 * (2 * C50609 + C49875 * C50612);
    const double C50629 = C50626 + C50627;
    const double C50574 = C49874 * C50279;
    const double C13974 = 3 * (C50487 + C50176 * C50103) +
                          C49875 * (2 * C50594 + C49875 * C50597);
    const double C50640 = C50637 + C50638;
    const double C50648 = C49875 * C50345;
    const double C51084 = C51028 - C51067;
    const double C51068 = C51030 - C51031;
    const double C51085 = C51035 - C51070;
    const double C51071 = C51037 - C51038;
    const double C51086 = C51043 - C51073;
    const double C51074 = C51046 - C51047;
    const double C51089 = C51061 - C51082;
    const double C51083 = C51064 - C51065;
    const double C49775 = C50838 - C49770;
    const double C2016 = C173 * C51087;
    const double C2010 = C171 * C51087;
    const double C2004 = C169 * C51087;
    const double C7587 = C513 * C51087;
    const double C7581 = C510 * C51087;
    const double C1236 =
        (C51042 - C51075) / C49747 - (C51087 * C50846) / C49739;
    const double C2012 = C513 * C51077;
    const double C2006 = C510 * C51077;
    const double C1237 =
        (2 * C50850 + C51087) / C49747 - (C51077 * C50846) / C49739;
    const double C1238 = C51077 / C49747 - C50853 / C49768;
    const double C1037 = C172 * C997;
    const double C1029 = C170 * C997;
    const double C1021 = C168 * C997;
    const double C6276 = C512 * C997;
    const double C6268 = C509 * C997;
    const double C49842 = C50907 - C49837;
    const double C8230 = C8204 + C8205;
    const double C8227 = C8198 + C8199;
    const double C8224 = C8192 + C8193;
    const double C8221 = C8186 + C8187;
    const double C8412 = C8392 + C8393;
    const double C8409 = C8386 + C8387;
    const double C8594 = C8574 + C8575;
    const double C8591 = C8568 + C8569;
    const double C8764 = C8756 + C8757;
    const double C8761 = C8750 + C8751;
    const double C9185 = C9174 + C9175;
    const double C9952 = C9944 + C9945;
    const double C9949 = C9938 + C9939;
    const double C13121 = C13113 + C13114;
    const double C13118 = C13107 + C13108;
    const double C13541 = C13521 + C13522;
    const double C13538 = C13515 + C13516;
    const double C13711 = C13703 + C13704;
    const double C13708 = C13697 + C13698;
    const double C8225 = C8194 + C8195;
    const double C8222 = C8188 + C8189;
    const double C8411 = C8390 + C8391;
    const double C8408 = C8384 + C8385;
    const double C8593 = C8572 + C8573;
    const double C8590 = C8566 + C8567;
    const double C13120 = C13111 + C13112;
    const double C13117 = C13105 + C13106;
    const double C22892 = C22867 + C22868;
    const double C22890 = C22863 + C22864;
    const double C22888 = C22859 + C22860;
    const double C22886 = C22855 + C22856;
    const double C23089 = C23071 + C23072;
    const double C23087 = C23067 + C23068;
    const double C23275 = C23251 + C23252;
    const double C23273 = C23247 + C23248;
    const double C23458 = C23445 + C23446;
    const double C23456 = C23441 + C23442;
    const double C23870 = C23855 + C23856;
    const double C24626 = C24613 + C24614;
    const double C24624 = C24609 + C24610;
    const double C28961 = C28949 + C28950;
    const double C28959 = C28945 + C28946;
    const double C29512 = C29499 + C29500;
    const double C29510 = C29495 + C29496;
    const double C29734 = C29717 + C29718;
    const double C29732 = C29713 + C29714;
    const double C25735 = C25715 * C637;
    const double C25729 = C25715 * C645;
    const double C25727 = C25715 * C643;
    const double C25721 = C25715 * C636;
    const double C25939 = C25715 * C756;
    const double C25933 = C25715 * C751;
    const double C25923 = C25715 * C752;
    const double C25917 = C25715 * C758;
    const double C26121 = C25715 * C885;
    const double C26115 = C25715 * C870;
    const double C26105 = C25715 * C883;
    const double C26099 = C25715 * C869;
    const double C26291 = C25715 * C3164;
    const double C44721 = C25715 * C881;
    const double C44715 = C25715 * C868;
    const double C45133 = C25715 * C3321;
    const double C45127 = C25715 * C3317;
    const double C45315 = C25715 * C3649;
    const double C45309 = C25715 * C3645;
    const double C45591 = C25715 * C9444;
    const double C45585 = C25715 * C9441;
    const double C25748 = C51088 * C143;
    const double C25742 = C51088 * C132;
    const double C25740 = C51088 * C130;
    const double C25734 = C51088 * C142;
    const double C25724 = C51088 * C141;
    const double C25718 = C51088 * C128;
    const double C25936 = C51088 * C317;
    const double C25930 = C51088 * C307;
    const double C25928 = C51088 * C309;
    const double C25922 = C51088 * C318;
    const double C26118 = C51088 * C480;
    const double C26112 = C51088 * C470;
    const double C26110 = C51088 * C479;
    const double C26104 = C51088 * C468;
    const double C26288 = C51088 * C651;
    const double C26282 = C51088 * C642;
    const double C26696 = C51088 * C1016;
    const double C26690 = C51088 * C1007;
    const double C27444 = C51088 * C889;
    const double C27438 = C51088 * C874;
    const double C44726 = C51088 * C478;
    const double C44720 = C51088 * C466;
    const double C45146 = C51088 * C892;
    const double C45140 = C51088 * C880;
    const double C45130 = C51088 * C888;
    const double C45124 = C51088 * C872;
    const double C45312 = C51088 * C1015;
    const double C45306 = C51088 * C1005;
    const double C45480 = C51088 * C1166;
    const double C45474 = C51088 * C1158;
    const double C45596 = C51088 * C1256;
    const double C45590 = C51088 * C1248;
    const double C10991 =
        (C51053 - C51078) / C49814 - (C51088 * C50919) / C49806;
    const double C2501 = C2490 + C2491;
    const double C2500 = C2488 + C2489;
    const double C25744 = C51080 * C305;
    const double C25738 = C51080 * C307;
    const double C25732 = C51080 * C317;
    const double C25726 = C51080 * C318;
    const double C25720 = C51080 * C309;
    const double C25932 = C51080 * C644;
    const double C25926 = C51080 * C642;
    const double C25920 = C51080 * C651;
    const double C26114 = C51080 * C876;
    const double C26108 = C51080 * C889;
    const double C26102 = C51080 * C874;
    const double C26290 = C51080 * C764;
    const double C26284 = C51080 * C759;
    const double C26698 = C51080 * C1167;
    const double C26692 = C51080 * C1160;
    const double C27446 = C51080 * C893;
    const double C27440 = C51080 * C882;
    const double C44724 = C51080 * C888;
    const double C44718 = C51080 * C872;
    const double C45138 = C51080 * C3320;
    const double C45132 = C51080 * C892;
    const double C45126 = C51080 * C880;
    const double C45314 = C51080 * C1166;
    const double C45308 = C51080 * C1158;
    const double C45472 = C51080 * C3648;
    const double C45588 = C51080 * C3758;
    const double C10992 =
        (2 * C50923 + C51088) / C49814 - (C51080 * C50919) / C49806;
    const double C10993 = C51080 / C49814 - C50926 / C49835;
    const double C8214 = C8180 * C133;
    const double C8208 = C8180 * C122;
    const double C8206 = C8180 * C121;
    const double C8200 = C8180 * C131;
    const double C8190 = C8180 * C129;
    const double C8184 = C8180 * C120;
    const double C8402 = C8180 * C306;
    const double C8396 = C8180 * C299;
    const double C8394 = C8180 * C300;
    const double C8388 = C8180 * C308;
    const double C8584 = C8180 * C471;
    const double C8578 = C8180 * C462;
    const double C8576 = C8180 * C469;
    const double C8570 = C8180 * C461;
    const double C8754 = C8180 * C643;
    const double C8748 = C8180 * C636;
    const double C9178 = C8180 * C1008;
    const double C9172 = C8180 * C1001;
    const double C9942 = C8180 * C875;
    const double C9936 = C8180 * C865;
    const double C13115 = C8180 * C467;
    const double C13109 = C8180 * C460;
    const double C13535 = C8180 * C881;
    const double C13529 = C8180 * C868;
    const double C13519 = C8180 * C873;
    const double C13513 = C8180 * C864;
    const double C13701 = C8180 * C1006;
    const double C13695 = C8180 * C1000;
    const double C13869 = C8180 * C1159;
    const double C13863 = C8180 * C1154;
    const double C13993 = C8180 * C1249;
    const double C13987 = C8180 * C1244;
    const double C49905 = C49904 - C49898;
    const double C50062 = C50061 / C49806;
    const double C50089 = C50088 / C49806;
    const double C50162 = C50159 - C50151;
    const double C50181 = C50179 - C50174;
    const double C50074 = C50073 - C50070;
    const double C50082 = C50081 - C50079;
    const double C174 = C160 + C161;
    const double C2498 = C2480 + C2481;
    const double C3495 = C3482 + C3483;
    const double C6455 = C6446 + C6447;
    const double C9188 = C9180 + C9181;
    const double C19985 = C19980 + C19981;
    const double C23872 = C23859 + C23860;
    const double C50161 = C50158 / C49806;
    const double C50621 = C50619 + C50616;
    const double C175 = C162 + C163;
    const double C2496 = C2476 + C2477;
    const double C340 = C325 + C326;
    const double C2494 = C2472 + C2473;
    const double C2690 = C2674 + C2675;
    const double C8233 = C8210 + C8211;
    const double C22895 = C22873 + C22874;
    const double C515 = C499 + C500;
    const double C2881 = C2864 + C2865;
    const double C670 = C660 + C661;
    const double C2684 = C2662 + C2663;
    const double C3058 = C3046 + C3047;
    const double C8229 = C8202 + C8203;
    const double C8415 = C8398 + C8399;
    const double C23085 = C23063 + C23064;
    const double C1621 = C1607 + C1608;
    const double C2877 = C2856 + C2857;
    const double C4274 = C4262 + C4263;
    const double C8597 = C8580 + C8581;
    const double C23278 = C23257 + C23258;
    const double C1047 = C1033 + C1034;
    const double C3496 = C3484 + C3485;
    const double C9177 = C8177 * C3650;
    const double C16017 = C50907 * C3650;
    const double C19975 = C50923 * C3650;
    const double C26694 = C25710 * C3650;
    const double C29942 = C50923 * C3650;
    const double C16587 = C50907 * C3760;
    const double C19197 = C50923 * C3760;
    const double C29726 = C50923 * C3760;
    const double C16704 = C16700 + C16701;
    const double C19485 = C19478 + C19479;
    const double C50209 = C50208 / C49806;
    const double C50553 = C50552 + C50546;
    const double C646 =
        (2 * C50014 + C49882 * C50017 +
         C49874 * (C49874 * C50022 + C50404 * ae) + C49874 * C50404 * ae) /
        C49806;
    const double C878 = (C49875 * (C49874 * C50022 + C50404 * ae)) / C49806;
    const double C124 = 4 * (2 * C50395 + C49882 * C50399) +
                        C49882 * (3 * C50399 + C49882 * C50404);
    const double C302 = C49874 * (3 * C50399 + C49882 * C50404);
    const double C464 = C49875 * (3 * C50399 + C49882 * C50404);
    const double C638 = 2 * C50395 + C49882 * C50399 + C50404 * C50048;
    const double C750 =
        2 * C49874 * C50404 + C49874 * (C50404 + C50009 * C50048);
    const double C867 = C49875 * C49874 * C50404;
    const double C871 = C49875 * (C50404 + C50009 * C50048);
    const double C1003 = 2 * C50395 + C49882 * C50399 + C50404 * C50103;
    const double C1247 =
        2 * C49875 * C50404 + C49875 * (C50404 + C50009 * C50103);
    const double C3490 = C2450 * C1163;
    const double C6450 = C117 * C1163;
    const double C23867 = C22851 * C1163;
    const double C3486 = C2450 * C1156;
    const double C6448 = C117 * C1156;
    const double C23863 = C22851 * C1156;
    const double C3163 =
        (3 * (C50017 + C49874 * C50472 + C50453 * ae) +
         C49874 * (2 * C50472 +
                   C49874 * (C49951 + C49874 * (C49874 * C50030 + C50007 * ae) +
                             C50101 * ae) +
                   C50473 * ae) +
         (2 * C50453 + C49874 * C50473) * ae) /
        C49806;
    const double C3324 =
        (C49875 * (2 * C50472 +
                   C49874 * (C49951 + C49874 * (C49874 * C50030 + C50007 * ae) +
                             C50101 * ae) +
                   C50473 * ae)) /
        C49806;
    const double C3652 =
        (C50017 + C49874 * C50472 + C50453 * ae +
         (C49951 + C49874 * (C49874 * C50030 + C50007 * ae) + C50101 * ae) *
             C50103) /
        C49806;
    const double C3762 =
        (2 * C49875 * C50472 +
         C49875 * (C50472 + (C49874 * C50030 + C50007 * ae) * C50103)) /
        C49806;
    const double C6563 =
        (-3 * (C49875 * C50528 + C49961 + C50526 * ce)) / C49739 +
        C49875 * ((-2 * C50528) / C49739 -
                  (C49875 * (C49875 * (C49875 * C49978 + C50007 * ce) + C49936 +
                             C49875 * C50007 * ce)) /
                      C49739 -
                  (C50529 * ce) / C49739) -
        ((2 * C50526 + C49875 * C50529) * ce) / C49739;
    const double C3059 = C3048 + C3049;
    const double C8416 = C8400 + C8401;
    const double C23460 = C23449 + C23450;
    const double C4275 = C4264 + C4265;
    const double C5856 = C5850 + C5851;
    const double C8598 = C8582 + C8583;
    const double C24628 = C24617 + C24618;
    const double C6288 = C6280 + C6281;
    const double C16579 =
        (-3 * (C49875 * C50611 + C50054 + C50609 * ce)) / C49739 +
        C49875 * ((-2 * C50611) / C49739 -
                  (C49875 * (C49875 * (C49875 * C49874 * C50123 + C50215 * ce) +
                             C50119 + C49875 * C50215 * ce)) /
                      C49739 -
                  (C50612 * ce) / C49739) -
        ((2 * C50609 + C49875 * C50612) * ce) / C49739;
    const double C50198 = C50195 / C49885;
    const double C50628 = C50624 + C49963;
    const double C8753 = C8177 * C3165;
    const double C26286 = C25710 * C3165;
    const double C9941 = C8177 * C3322;
    const double C27442 = C25710 * C3322;
    const double C29160 = C50923 * C3322;
    const double C35407 = C50923 * C3322;
    const double C9946 = C8182 * C3323;
    const double C27447 = C25715 * C3323;
    const double C29163 = C22851 * C3323;
    const double C35410 = C2450 * C3323;
    const double C9182 = C8182 * C3651;
    const double C16018 = C117 * C3651;
    const double C19978 = C2450 * C3651;
    const double C26699 = C25715 * C3651;
    const double C29945 = C22851 * C3651;
    const double C8752 = C8182 * C3160;
    const double C26285 = C25715 * C3160;
    const double C9940 = C8182 * C3318;
    const double C27441 = C25715 * C3318;
    const double C29159 = C22851 * C3318;
    const double C35406 = C2450 * C3318;
    const double C9176 = C8182 * C3646;
    const double C16016 = C117 * C3646;
    const double C19974 = C2450 * C3646;
    const double C26693 = C25715 * C3646;
    const double C29941 = C22851 * C3646;
    const double C16426 = C117 * C6561;
    const double C16424 = C117 * C6556;
    const double C50540 = C50019 + C50539;
    const double C8864 = 4 * (2 * C50447 + C49874 * C50487) +
                         C49874 * (3 * C50487 + C49874 * C50550);
    const double C9017 = C49875 * (3 * C50487 + C49874 * C50550);
    const double C9335 = 2 * C50447 + C49874 * C50487 + C50550 * C50103;
    const double C11732 =
        2 * C49875 * C50550 + C49875 * (C50550 + C50279 * C50103);
    const double C13978 =
        (-3 * (C49875 * C50596 + C50071 + C50594 * ce)) / C49739 +
        C49875 * ((-2 * C50596) / C49739 -
                  (C49875 * (C49875 * (C49875 * C50239 + C50271 * ce) + C50153 +
                             C49875 * C50271 * ce)) /
                      C49739 -
                  (C50597 * ce) / C49739) -
        ((2 * C50594 + C49875 * C50597) * ce) / C49739;
    const double C50276 = C50272 / C49885;
    const double C50639 = C50635 + C50145;
    const double C19480 = C2450 * C13979;
    const double C21690 = C117 * C13979;
    const double C48265 = C22851 * C13979;
    const double C19476 = C2450 * C13975;
    const double C21688 = C117 * C13975;
    const double C48261 = C22851 * C13975;
    const double C50296 = C50293 + C50294;
    const double C16691 = 4 * (2 * C50510 + C49875 * C50513) +
                          C49875 * (3 * C50513 + C49875 * C50620);
    const double C50579 = C50578 + C50571;
    const double C19470 =
        (4 * (2 * C49875 * C50549 + C49875 * C50633) +
         C49875 * (3 * C50633 + C49875 * (2 * C49875 * C50575 +
                                          C49875 * (C50575 + (C49874 * C50028 +
                                                              C50004 * ae) *
                                                                 C50103)))) /
        C49806;
    const double C49919 = C49918 - C49910;
    const double C50137 = C50134 / C49806;
    const double C50197 = C50194 / C49806;
    const double C50249 = C50246 - C50236;
    const double C50281 = C50277 - C50269;
    const double C49981 = C49976 - C49980;
    const double C3162 =
        (-3 * (C49936 * C50048 + C49961)) / C49739 +
        C49874 * ((-2 * C50045) / C49739 - (C49874 * C50052) / C49739);
    const double C3325 =
        C49875 * ((-2 * C50045) / C49739 - (C49874 * C50052) / C49739) -
        ((2 * C50453 + C49874 * C50473) * ce) / C49739;
    const double C3653 = -(C49875 * (C49875 * C50052 + C50473 * ce) +
                           C49936 * C50048 + C49961 + C49875 * C50473 * ce) /
                         C49739;
    const double C50138 = C50135 / C49739;
    const double C50250 = C50243 - C50247;
    const double C50033 = C49882 * C50032;
    const double C755 =
        (2 * (C49874 * C50022 + C50404 * ae) +
         C49874 * (C50022 + C49874 * (C49874 * C50032 + C50009 * ae) +
                   C49874 * C50009 * ae) +
         (C50404 + C50009 * C50048) * ae) /
        C49806;
    const double C886 =
        (C49875 * (C50022 + C49874 * (C49874 * C50032 + C50009 * ae) +
                   C49874 * C50009 * ae)) /
        C49806;
    const double C1164 = (C49874 * C50022 + C50404 * ae +
                          (C49874 * C50032 + C50009 * ae) * C50103) /
                         C49806;
    const double C1254 =
        (2 * C49875 * C50022 + C49875 * (C50022 + C50032 * C50103)) / C49806;
    const double C6562 = (3 * (C50017 + C49951 * C50103) +
                          C49875 * (2 * C50115 + C49875 * C50117)) /
                         C49806;
    const double C50339 = C50337 + C50338;
    const double C50349 = C49875 * C50346;
    const double C1626 = C1620 * C50850;
    const double C1890 = C1620 * C50850;
    const double C5523 = C1620 * C50838;
    const double C7061 = C1620 * C51042;
    const double C7427 = C1620 * C1728;
    const double C35207 = C2875 + C2874;
    const double C35205 = C2874 + C2875;
    const double C36908 = C4273 + C4272;
    const double C36907 = C4272 + C4273;
    const double C5859 = C5855 * C50838;
    const double C1052 = C1046 * C996;
    const double C2008 = C1046 * C1998;
    const double C5683 = C1046 * C50850;
    const double C6271 = C1046 * C995;
    const double C7217 = C1046 * C50850;
    const double C7583 = C1046 * C51077;
    const double C15561 = C1046 * C50838;
    const double C15863 = C1046 * C51042;
    const double C16421 = C1046 * C994;
    const double C17343 = C1046 * C1728;
    const double C17695 = C1046 * C51087;
    const double C6291 = C6287 * C996;
    const double C7585 = C6287 * C1998;
    const double C15865 = C6287 * C50850;
    const double C16423 = C6287 * C995;
    const double C17345 = C6287 * C50850;
    const double C17697 = C6287 * C51077;
    const double C674 = C668 * C118;
    const double C1625 = C1619 * C459;
    const double C1887 = C1619 * C1731;
    const double C5524 = C1619 * C118;
    const double C7062 = C1619 * C458;
    const double C35206 = C2873 + C2872;
    const double C35204 = C2872 + C2873;
    const double C36909 = C4271 + C4270;
    const double C36906 = C4270 + C4271;
    const double C5858 = C5854 * C118;
    const double C1051 = C1045 * C999;
    const double C2007 = C1045 * C2001;
    const double C5682 = C1045 * C459;
    const double C6270 = C1045 * C998;
    const double C7216 = C1045 * C1731;
    const double C15560 = C1045 * C118;
    const double C15862 = C1045 * C458;
    const double C16420 = C1045 * C997;
    const double C19194 = C3493 + C3492;
    const double C35934 = C3492 + C3493;
    const double C7060 = C6454 * C459;
    const double C7426 = C6454 * C1731;
    const double C15713 = C6454 * C118;
    const double C17194 = C6454 * C458;
    const double C6290 = C6286 * C999;
    const double C7584 = C6286 * C2001;
    const double C15864 = C6286 * C459;
    const double C16422 = C6286 * C998;
    const double C17344 = C6286 * C1731;
    const double C19185 = C18599 + C18598;
    const double C19184 = C18597 + C18596;
    const double C13544 = C13527 + C13528;
    const double C13539 = C13517 + C13518;
    const double C19030 = C19006 + C19007;
    const double C29513 = C29501 + C29502;
    const double C13709 = C13699 + C13700;
    const double C13872 = C13861 + C13862;
    const double C16272 = C16268 + C16269;
    const double C19035 = C19016 + C19017;
    const double C19027 = C19000 + C19001;
    const double C29949 = C29933 + C29934;
    const double C13996 = C13985 + C13986;
    const double C16590 = C16582 + C16583;
    const double C19205 = C19188 + C19189;
    const double C19369 = C19362 + C19363;
    const double C30095 = C30087 + C30088;
    const double C188 = C180 + C181;
    const double C511 = C491 + C492;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C514 = C497 + C498;
    const double C356 = C349 + C350;
    const double C5368 = C5361 + C5362;
    const double C5695 = C5685 + C5686;
    const double C137 =
        4 * ((-2 * C49958) / C49739 - (C49882 * C49961) / C49739) +
        C49882 * ((-3 * C49961) / C49739 + C49882 * C49968);
    const double C313 = C49874 * ((-3 * C49961) / C49739 + C49882 * C49968);
    const double C475 = C49875 * ((-3 * C49961) / C49739 + C49882 * C49968) -
                        ((3 * (C49995 + C49993 * C49891) +
                          C49882 * (2 * C49997 + C49882 * C50001)) *
                         ce) /
                            C49739;
    const double C647 =
        (-2 * C49958) / C49739 - (C49882 * C49961) / C49739 + C49968 * C50048;
    const double C879 =
        C49875 * C49874 * C49968 - (C49874 * C50404 * ce) / C49739;
    const double C1012 = (-2 * C49958) / C49739 - (C49882 * C49961) / C49739 +
                         C49875 * (C49875 * C49968 - (C50404 * ce) / C49739) -
                         (C49875 * C50404 * ce) / C49739;
    const double C50136 = C50133 / C49806;
    const double C8867 =
        4 * ((-2 * C50065) / C49739 - (C49874 * C50071) / C49739) +
        C49874 * ((-3 * C50071) / C49739 + C49874 * C50163);
    const double C9020 = C49875 * ((-3 * C50071) / C49739 + C49874 * C50163) -
                         ((3 * C50487 + C49874 * C50550) * ce) / C49739;
    const double C9338 = (-2 * C50065) / C49739 - (C49874 * C50071) / C49739 +
                         C49875 * (C49875 * C50163 - (C50550 * ce) / C49739) -
                         (C49875 * C50550 * ce) / C49739;
    const double C50251 = C50248 - C49910;
    const double C165 = C50907 * C136;
    const double C336 = C50907 * C312;
    const double C2479 = C50923 * C312;
    const double C22880 = C50923 * C312;
    const double C504 = C50907 * C474;
    const double C1042 = C50907 * C1011;
    const double C50220 = C50219 / C49806;
    const double C50301 = C50299 - C49910;
    const double C21765 = C50907 * C16693;
    const double C50410 = C50408 + C50409;
    const double C1157 = C49874 * C50404 + C50456 * C50103;
    const double C8863 = 4 * (2 * C50450 + C49874 * C50480) +
                         C49874 * (3 * C50480 + C49874 * C50538);
    const double C9018 = C49875 * (3 * C50480 + C49874 * C50538);
    const double C9336 = 2 * C50450 + C49874 * C50480 + C50538 * C50103;
    const double C16692 = 4 * (2 * C50518 + C49875 * C50521) +
                          C49875 * (3 * C50521 + C49875 * C50629);
    const double C50576 = C50573 + C50574;
    const double C19469 = 4 * (2 * C50601 + C49875 * C50604) +
                          C49875 * (3 * C50604 + C49875 * C50640);
    const double C50652 = C50647 + C50648;
    const double C108 = (C51026 - C51066) / C49814 - (C51084 * C50750) / C49806;
    const double C109 =
        (2 * C50759 + C51084) / C49814 - (C51068 * C50750) / C49806;
    const double C110 = C51068 / C49814 - C50762 / C49835;
    const double C113 = (C51033 - C51069) / C49747 - (C51085 * C50772) / C49739;
    const double C114 =
        (2 * C50781 + C51085) / C49747 - (C51071 * C50772) / C49739;
    const double C115 = C51071 / C49747 - C50784 / C49768;
    const double C745 = (C51040 - C51072) / C49747 - (C51086 * C50820) / C49739;
    const double C746 =
        (2 * C50824 + C51086) / C49747 - (C51074 * C50820) / C49739;
    const double C747 = C51074 / C49747 - C50827 / C49768;
    const double C21023 =
        (C51055 - C51081) / C49814 - (C51089 * C50945) / C49806;
    const double C21024 =
        (2 * C50949 + C51089) / C49814 - (C51083 * C50945) / C49806;
    const double C21025 = C51083 / C49814 - C50952 / C49835;
    const double C49779 = C49775 * ce;
    const double C1730 = (-C49748 / C49739) / C49747 - (C49775 * de) / C49739;
    const double C49846 = C49842 * ae;
    const double C22850 = (-C49815 / C49806) / C49814 - (C49842 * be) / C49806;
    const double C25762 = C25735 + C25736;
    const double C25758 = C25727 + C25728;
    const double C25755 = C25721 + C25722;
    const double C25949 = C25933 + C25934;
    const double C25944 = C25923 + C25924;
    const double C25941 = C25917 + C25918;
    const double C26131 = C26115 + C26116;
    const double C26126 = C26105 + C26106;
    const double C26123 = C26099 + C26100;
    const double C44730 = C44721 + C44722;
    const double C44727 = C44715 + C44716;
    const double C45149 = C45127 + C45128;
    const double C45319 = C45309 + C45310;
    const double C2505 = C2501 * C50838;
    const double C2855 = C2501 * C51042;
    const double C4425 = C2501 * C1728;
    const double C2504 = C2500 * C118;
    const double C2854 = C2500 * C458;
    const double C8235 = C8214 + C8215;
    const double C8232 = C8208 + C8209;
    const double C8231 = C8206 + C8207;
    const double C8228 = C8200 + C8201;
    const double C8223 = C8190 + C8191;
    const double C8220 = C8184 + C8185;
    const double C8417 = C8402 + C8403;
    const double C8414 = C8396 + C8397;
    const double C8413 = C8394 + C8395;
    const double C8410 = C8388 + C8389;
    const double C8599 = C8584 + C8585;
    const double C8596 = C8578 + C8579;
    const double C8595 = C8576 + C8577;
    const double C8592 = C8570 + C8571;
    const double C8763 = C8754 + C8755;
    const double C8760 = C8748 + C8749;
    const double C9187 = C9178 + C9179;
    const double C9184 = C9172 + C9173;
    const double C9951 = C9942 + C9943;
    const double C9948 = C9936 + C9937;
    const double C13122 = C13115 + C13116;
    const double C13119 = C13109 + C13110;
    const double C13548 = C13535 + C13536;
    const double C13545 = C13529 + C13530;
    const double C13540 = C13519 + C13520;
    const double C13537 = C13513 + C13514;
    const double C13710 = C13701 + C13702;
    const double C13707 = C13695 + C13696;
    const double C13876 = C13869 + C13870;
    const double C13873 = C13863 + C13864;
    const double C14000 = C13993 + C13994;
    const double C13997 = C13987 + C13988;
    const double C145 =
        4 * ((-2 * C49882 * C49894) / C49885 + C49882 * C49905) +
        C49882 * (3 * C49905 + C49882 * ((-2 * C49882 * C49900) / C49885 +
                                         C49882 * ((-(std::pow(C49889, 7) *
                                                      bs[7] * C49880 * C49891) /
                                                    C49739) /
                                                       C49806 -
                                                   C49900 / C49885)));
    const double C316 =
        (((-2 * C49882 * C49925) / C49739 -
          (C49882 * (C49892 * C49890 * C49923 * C49891 + C49925)) / C49739) *
         ae) /
            C49806 +
        C49874 * ((-2 * C49882 * C49894) / C49885 + C49882 * C49905);
    const double C481 =
        C49875 * ((-2 * C49882 * C49894) / C49885 + C49882 * C49905) -
        ((2 * C49882 * C49943 +
          C49882 * (C49943 + C49892 * C49890 * C49940 * C49891)) *
         ce) /
            C49885;
    const double C652 = (-(C49894 * C49891) / C49739) / C49806 -
                        C49887 / C49885 - (ae * C49874 * C49961) / C49885 +
                        C49874 * (C49874 * C49905 - (ae * C49961) / C49885);
    const double C890 =
        C49874 *
            (C49875 * C49905 - ((C49943 + C49946 * C49891) * ce) / C49885) -
        (ae * (C49875 * C49961 +
               (C49954 * C49953 + C49884 * C49883 * C49891) * ce)) /
            C49885;
    const double C1017 = (-(C49894 * C49891) / C49739) / C49806 -
                         C49887 / C49885 - (C49875 * C50017 * ce) / C49885 +
                         C49875 * (C49875 * C49905 - (C50017 * ce) / C49885);
    const double C50063 = C50062 - C50059;
    const double C50090 = C50089 - C50087;
    const double C50165 = C49874 * C50162;
    const double C50226 = 2 * C50162;
    const double C50182 = C49874 * C50181;
    const double C50204 = C49875 * C50181;
    const double C50306 = 2 * C50181;
    const double C3170 =
        3 * ((-(ae * C50065) / C49739) / C49806 - C49887 / C49885 +
             C49874 * C50074) +
        (((-2 * C50065) / C49739 - (C49874 * C50071) / C49739) * ae) / C49806 +
        C49874 *
            (2 * C50074 - (ae * C50071) / C49885 +
             C49874 * ((-(ae * C49874 * C49931) / C49739) / C49806 - C49898 +
                       C49874 * ((-(C49874 * C49900) / C49739) / C49806 -
                                 (ae * C49931) / C49885)));
    const double C3326 =
        2 * (C49874 * C50082 -
             (ae * (C49875 * C49925 + C49995 * ce)) / C49885) -
        (ae * (C49875 * C50071 + (C49995 + C49993 * C50048) * ce)) / C49885 +
        C49874 *
            (C50082 -
             (ae * (C49875 * C49874 * C49931 + C49874 * C49993 * ce)) / C49885 +
             C49874 * (C49874 * ((-(C49875 * C49900) / C49739) / C49806 -
                                 (C49946 * ce) / C49885) -
                       (ae * (C49875 * C49931 + C49993 * ce)) / C49885));
    const double C3654 =
        (-(C49875 * C49943 * ce) / C49739) / C49806 - C49887 / C49885 +
        C49875 * C50082 -
        (ae * (C49875 * (C49875 * C49874 * C49931 + C50097 * ce) + C50065 +
               C49875 * C50097 * ce)) /
            C49885 +
        C49874 *
            (C49874 * ((-(C49875 * C49946 * ce) / C49739) / C49806 - C49898 +
                       C49875 * ((-(C49875 * C49900) / C49739) / C49806 -
                                 (C49946 * ce) / C49885)) -
             (ae * (C49875 * (C49875 * C49931 + C49993 * ce) + C49925 +
                    C49875 * C49993 * ce)) /
                 C49885);
    const double C3764 =
        (((-2 * (C49875 * C49925 + C49995 * ce)) / C49739 -
          (C49875 * (C49875 * (C49875 * C49931 + C49993 * ce) + C49925 +
                     C49875 * C49993 * ce)) /
              C49739 -
          ((C49995 + C49993 * C50103) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (2 * C50082 - ((C49943 + C49946 * C50103) * ce) / C49885 +
             C49875 * ((-(C49875 * C49946 * ce) / C49739) / C49806 - C49898 +
                       C49875 * ((-(C49875 * C49900) / C49739) / C49806 -
                                 (C49946 * ce) / C49885)));
    const double C6564 =
        3 * ((-(C50107 * ce) / C49739) / C49806 - C49887 / C49885 +
             C49875 * C50082) -
        ((2 * C50107 + C49875 * C50109) * ce) / C49885 +
        C49875 *
            (2 * C50082 - (C50109 * ce) / C49885 +
             C49875 * ((-(C49875 * C49946 * ce) / C49739) / C49806 - C49898 +
                       C49875 * ((-(C49875 * C49900) / C49739) / C49806 -
                                 (C49946 * ce) / C49885)));
    const double C184 = C174 * C50838;
    const double C505 = C174 * C51042;
    const double C1746 = C174 * C1728;
    const double C19195 = C3495 + C3494;
    const double C35935 = C3494 + C3495;
    const double C7063 = C6455 * C50850;
    const double C7429 = C6455 * C50850;
    const double C15712 = C6455 * C50838;
    const double C17193 = C6455 * C51042;
    const double C17545 = C6455 * C1728;
    const double C50164 = C50161 - C49898;
    const double C185 = C175 * C118;
    const double C506 = C175 * C458;
    const double C348 = C340 * C118;
    const double C1616 = C340 * C458;
    const double C2503 = C2494 + C2495;
    const double C523 = C515 * C459;
    const double C1039 = C515 * C998;
    const double C1743 = C515 * C1731;
    const double C5364 = C515 * C118;
    const double C5691 = C515 * C458;
    const double C676 = C670 * C118;
    const double C2695 = C2684 + C2685;
    const double C1627 = C1621 * C459;
    const double C1891 = C1621 * C1731;
    const double C5521 = C1621 * C118;
    const double C7066 = C1621 * C458;
    const double C2885 = C2877 + C2878;
    const double C35208 = C2878 + C2877;
    const double C1053 = C1047 * C999;
    const double C2013 = C1047 * C2001;
    const double C5687 = C1047 * C459;
    const double C6278 = C1047 * C998;
    const double C7221 = C1047 * C1731;
    const double C15563 = C1047 * C118;
    const double C15868 = C1047 * C458;
    const double C16592 = C16586 + C16587;
    const double C19208 = C19196 + C19197;
    const double C29736 = C29725 + C29726;
    const double C50210 = C50209 - C49898;
    const double C8868 =
        (4 * (2 * C50486 + C49874 * C50553 + C50487 * ae) +
         C49874 *
             (3 * C50553 +
              C49874 *
                  (2 * C50549 +
                   C49874 * (C49946 + C49874 * (C49874 * C49949 + C49999 * ae) +
                             C50205 * ae) +
                   C50176 * ae) +
              C50550 * ae) +
         (3 * C50487 + C49874 * C50550) * ae) /
        C49806;
    const double C9019 =
        (C49875 *
         (3 * C50553 +
          C49874 *
              (2 * C50549 +
               C49874 * (C49946 + C49874 * (C49874 * C49949 + C49999 * ae) +
                         C50205 * ae) +
               C50176 * ae) +
          C50550 * ae)) /
        C49806;
    const double C9337 =
        (2 * C50486 + C49874 * C50553 + C50487 * ae +
         (2 * C50549 +
          C49874 * (C49946 + C49874 * (C49874 * C49949 + C49999 * ae) +
                    C50205 * ae) +
          C50176 * ae) *
             C50103) /
        C49806;
    const double C9443 =
        (2 * C49875 * C50553 +
         C49875 * (C50553 + (C49946 + C49874 * (C49874 * C49949 + C49999 * ae) +
                             C50205 * ae) *
                                C50103)) /
        C49806;
    const double C665 = C50907 * C646;
    const double C2677 = C50923 * C646;
    const double C8213 = C8177 * C646;
    const double C23078 = C50923 * C646;
    const double C25746 = C25710 * C646;
    const double C1614 = C50907 * C878;
    const double C2867 = C50923 * C878;
    const double C23268 = C50923 * C878;
    const double C164 = C117 * C124;
    const double C335 = C117 * C302;
    const double C2478 = C2450 * C302;
    const double C22879 = C22851 * C302;
    const double C503 = C117 * C464;
    const double C664 = C117 * C638;
    const double C2676 = C2450 * C638;
    const double C8212 = C8182 * C638;
    const double C23077 = C22851 * C638;
    const double C25745 = C25715 * C638;
    const double C1613 = C117 * C867;
    const double C2866 = C2450 * C867;
    const double C23267 = C22851 * C867;
    const double C1041 = C117 * C1003;
    const double C3497 = C3486 + C3487;
    const double C6456 = C6448 + C6449;
    const double C23874 = C23863 + C23864;
    const double C5860 = C5856 * C118;
    const double C6292 = C6288 * C999;
    const double C7590 = C6288 * C2001;
    const double C15866 = C6288 * C459;
    const double C17346 = C6288 * C1731;
    const double C50630 = C50628 + C50625;
    const double C8762 = C8752 + C8753;
    const double C26295 = C26285 + C26286;
    const double C9950 = C9940 + C9941;
    const double C27451 = C27441 + C27442;
    const double C29166 = C29159 + C29160;
    const double C35413 = C35406 + C35407;
    const double C9186 = C9176 + C9177;
    const double C16020 = C16016 + C16017;
    const double C19982 = C19974 + C19975;
    const double C26703 = C26693 + C26694;
    const double C29953 = C29941 + C29942;
    const double C16428 = C16424 + C16425;
    const double C50541 = C50540 + C50534;
    const double C13525 = C8182 * C9017;
    const double C45135 = C25715 * C9017;
    const double C13859 = C8182 * C9335;
    const double C19014 = C2450 * C9335;
    const double C45469 = C25715 * C9335;
    const double C47841 = C22851 * C9335;
    const double C50280 = C50181 - C50276;
    const double C50641 = C50639 + C50636;
    const double C19484 = C19476 + C19477;
    const double C21692 = C21688 + C21689;
    const double C48269 = C48261 + C48262;
    const double C50298 = ae * C50296;
    const double C50645 = C49875 * C50296;
    const double C16694 =
        4 * ((-2 * C50512) / C49739 - (C49875 * C50621) / C49739 -
             (C50513 * ce) / C49739) +
        C49875 *
            ((-3 * C50621) / C49739 +
             C49875 * ((-2 * C50175) / C49739 - (C49875 * C50296) / C49739 -
                       (C50325 * ce) / C49739) -
             (C50620 * ce) / C49739) -
        ((3 * C50513 + C49875 * C50620) * ce) / C49739;
    const double C21764 = C117 * C16691;
    const double C50580 = C49874 * C50579;
    const double C13976 =
        (3 * (C50553 + C50579 * C50103) +
         C49875 *
             (2 * C49875 * C50579 +
              C49875 *
                  (C50579 + (C49949 + C49874 * (C49874 * C50028 + C50004 * ae) +
                             C50291 * ae) *
                                C50103))) /
        C49806;
    const double C49920 = C49882 * C49919;
    const double C50046 = C49874 * C49919;
    const double C50092 = C49875 * C49919;
    const double C763 =
        2 * (C49874 * C49905 - (ae * C49961) / C49885) -
        (ae * (C49936 * std::pow(C49874, 2) + C49961)) / C49885 +
        C49874 * (C49905 - (ae * C49874 * C49936) / C49885 +
                  C49874 * (C49874 * C49919 - (ae * C49936) / C49885));
    const double C894 =
        C49875 * C49905 - ((C49943 + C49946 * C49891) * ce) / C49885 -
        (ae * (C49875 * C49874 * C49936 + C49874 * C50001 * ce)) / C49885 +
        C49874 * (C49874 * (C49875 * C49919 - (C49951 * ce) / C49885) -
                  (ae * (C49875 * C49936 + C50001 * ce)) / C49885);
    const double C1168 =
        C49874 * (C49905 - (C49875 * C49951 * ce) / C49885 +
                  C49875 * (C49875 * C49919 - (C49951 * ce) / C49885)) -
        (ae * (C49875 * (C49875 * C49936 + C50001 * ce) + C49961 +
               C49875 * C50001 * ce)) /
            C49885;
    const double C1258 =
        2 * (C49875 * C49905 - (C50017 * ce) / C49885) -
        ((C50017 + C49951 * std::pow(C49875, 2)) * ce) / C49885 +
        C49875 * (C49905 - (C49875 * C49951 * ce) / C49885 +
                  C49875 * (C49875 * C49919 - (C49951 * ce) / C49885));
    const double C50140 = C50137 - C50126;
    const double C50199 = C50197 - C50191;
    const double C50252 = C49874 * C50249;
    const double C50282 = C49874 * C50281;
    const double C50288 = C49875 * C50281;
    const double C49982 = C49882 * C49981;
    const double C754 =
        2 * C49874 * C49968 + C49874 * (C49968 + C49981 * C50048);
    const double C887 = C49875 * (C49968 + C49981 * C50048) -
                        ((C50404 + C50009 * C50048) * ce) / C49739;
    const double C1165 =
        C49874 * C49968 +
        C49875 * (C49875 * C49874 * C49981 - (C50456 * ce) / C49739) -
        (C49875 * C50456 * ce) / C49739;
    const double C1255 =
        2 * (C49875 * C49968 - (C50404 * ce) / C49739) +
        C49875 * (C49968 + C49875 * (C49875 * C49981 - (C50009 * ce) / C49739) -
                  (C49875 * C50009 * ce) / C49739) -
        ((C50404 + C50009 * C50103) * ce) / C49739;
    const double C50141 = C50131 - C50138;
    const double C50253 = C49874 * C50250;
    const double C11734 =
        2 * (C49875 * C50163 - (C50550 * ce) / C49739) +
        C49875 * (C50163 + C49875 * (C49875 * C50250 - (C50279 * ce) / C49739) -
                  (C49875 * C50279 * ce) / C49739) -
        ((C50550 + C50279 * C50103) * ce) / C49739;
    const double C50034 = C50024 + C50033;
    const double C16695 = (4 * (2 * C50111 + C49875 * C50113) +
                           C49875 * (3 * C50113 + C49875 * C50339)) /
                          C49806;
    const double C50350 = C50348 + C50349;
    const double C19358 = C19027 + C19026;
    const double C19474 = C19205 + C19204;
    const double C192 = C188 * C50937;
    const double C5360 = C188 * C51055;
    const double C32141 = C188 * C32138;
    const double C527 = C511 - C521;
    const double C195 = C191 * C50937;
    const double C5365 = C191 * C51055;
    const double C32144 = C191 * C32138;
    const double C193 = C189 * C50937;
    const double C358 = C356 * C50937;
    const double C5522 = C356 * C51055;
    const double C32294 = C356 * C32138;
    const double C5370 = C5368 * C50949;
    const double C32142 = C5368 * C50949;
    const double C166 = C117 * C137;
    const double C337 = C117 * C313;
    const double C2482 = C2450 * C313;
    const double C22883 = C22851 * C313;
    const double C507 = C117 * C475;
    const double C666 = C117 * C647;
    const double C2680 = C2450 * C647;
    const double C8218 = C8182 * C647;
    const double C23081 = C22851 * C647;
    const double C25751 = C25715 * C647;
    const double C1617 = C117 * C879;
    const double C2870 = C2450 * C879;
    const double C23271 = C22851 * C879;
    const double C1043 = C117 * C1012;
    const double C50139 = C50136 - C50120;
    const double C13531 = C8182 * C9020;
    const double C45141 = C25715 * C9020;
    const double C13865 = C8182 * C9338;
    const double C19018 = C2450 * C9338;
    const double C45475 = C25715 * C9338;
    const double C47845 = C22851 * C9338;
    const double C50221 = C50220 - C50120;
    const double C125 = 5 * (3 * C50399 + C49882 * C50404) +
                        C49882 * (4 * C50404 + C49882 * C50410);
    const double C303 = C49874 * (4 * C50404 + C49882 * C50410);
    const double C465 = C49875 * (4 * C50404 + C49882 * C50410);
    const double C639 = 3 * C50399 + C49882 * C50404 + C50410 * C50048;
    const double C1004 = 3 * C50399 + C49882 * C50404 + C50410 * C50103;
    const double C1596 = C49875 * C49874 * C50410;
    const double C11360 = 5 * (3 * C50487 + C49874 * C50550) +
                          C49874 * (4 * C50550 + C49874 * C50576);
    const double C11462 = C49875 * (4 * C50550 + C49874 * C50576);
    const double C11662 = 3 * C50487 + C49874 * C50550 + C50576 * C50103;
    const double C21759 = 5 * (3 * C50513 + C49875 * C50620) +
                          C49875 * (4 * C50620 + C49875 * C50652);
    const double C49781 = C49779 / C49739;
    const double C1747 = C175 * C1730;
    const double C1741 = C172 * C1730;
    const double C1737 = C170 * C1730;
    const double C1733 = C168 * C1730;
    const double C1897 = C340 * C1730;
    const double C1893 = C342 * C1730;
    const double C1889 = C344 * C1730;
    const double C4424 = C2500 * C1730;
    const double C7225 = C515 * C1730;
    const double C7219 = C512 * C1730;
    const double C7214 = C509 * C1730;
    const double C7432 = C1621 * C1730;
    const double C7428 = C1619 * C1730;
    const double C17348 = C1047 * C1730;
    const double C17342 = C1045 * C1730;
    const double C17546 = C6454 * C1730;
    const double C49848 = C49846 / C49806;
    const double C22881 = C22850 * C134;
    const double C22877 = C22850 * C123;
    const double C22875 = C22850 * C122;
    const double C22871 = C22850 * C133;
    const double C22865 = C22850 * C131;
    const double C22861 = C22850 * C121;
    const double C22857 = C22850 * C129;
    const double C22853 = C22850 * C120;
    const double C23079 = C22850 * C304;
    const double C23075 = C22850 * C298;
    const double C23073 = C22850 * C300;
    const double C23069 = C22850 * C308;
    const double C23065 = C22850 * C299;
    const double C23061 = C22850 * C306;
    const double C23269 = C22850 * C473;
    const double C23265 = C22850 * C463;
    const double C23263 = C22850 * C471;
    const double C23259 = C22850 * C462;
    const double C23253 = C22850 * C469;
    const double C23249 = C22850 * C461;
    const double C23451 = C22850 * C645;
    const double C23447 = C22850 * C637;
    const double C23443 = C22850 * C643;
    const double C23439 = C22850 * C636;
    const double C23865 = C22850 * C1010;
    const double C23861 = C22850 * C1002;
    const double C23857 = C22850 * C1008;
    const double C23853 = C22850 * C1001;
    const double C24619 = C22850 * C877;
    const double C24615 = C22850 * C866;
    const double C24611 = C22850 * C875;
    const double C24607 = C22850 * C865;
    const double C28951 = C22850 * C467;
    const double C28947 = C22850 * C460;
    const double C29161 = C22850 * C883;
    const double C29157 = C22850 * C869;
    const double C29507 = C22850 * C881;
    const double C29503 = C22850 * C868;
    const double C29497 = C22850 * C873;
    const double C29493 = C22850 * C864;
    const double C29727 = C22850 * C1251;
    const double C29723 = C22850 * C1245;
    const double C29715 = C22850 * C1006;
    const double C29711 = C22850 * C1000;
    const double C29947 = C22850 * C1161;
    const double C29943 = C22850 * C1155;
    const double C29939 = C22850 * C1159;
    const double C29935 = C22850 * C1154;
    const double C30093 = C22850 * C1249;
    const double C30089 = C22850 * C1244;
    const double C47847 = C22850 * C3649;
    const double C47843 = C22850 * C3645;
    const double C48155 = C22850 * C3759;
    const double C48151 = C22850 * C3755;
    const double C48267 = C22850 * C6559;
    const double C48263 = C22850 * C6555;
    const double C2508 = C2504 + C2505;
    const double C2876 = C2854 + C2855;
    const double C167 = C50907 * C145;
    const double C324 = C50907 * C316;
    const double C2469 = C50923 * C316;
    const double C2679 = C51053 * C316;
    const double C8217 = C8176 * C316;
    const double C22870 = C50923 * C316;
    const double C23080 = C22845 * C316;
    const double C25750 = C51080 * C316;
    const double C502 = C50907 * C481;
    const double C2869 = C51053 * C481;
    const double C23270 = C22845 * C481;
    const double C663 = C50907 * C652;
    const double C2659 = C50923 * C652;
    const double C3051 = C51053 * C652;
    const double C8197 = C8177 * C652;
    const double C8405 = C8176 * C652;
    const double C23060 = C50923 * C652;
    const double C23452 = C22845 * C652;
    const double C25730 = C25710 * C652;
    const double C25938 = C51080 * C652;
    const double C1612 = C50907 * C890;
    const double C2861 = C50923 * C890;
    const double C4267 = C51053 * C890;
    const double C8587 = C8176 * C890;
    const double C23262 = C50923 * C890;
    const double C24620 = C22845 * C890;
    const double C26120 = C51080 * C890;
    const double C1036 = C50907 * C1017;
    const double C3489 = C51053 * C1017;
    const double C23866 = C22845 * C1017;
    const double C3169 =
        3 * ((-(ae * C50054) / C49739) / C49806 - C49987 / C49885 +
             C49874 * C50063) +
        (((-2 * C50054) / C49739 - (C49874 * C50060) / C49739) * ae) / C49806 +
        C49874 * (2 * C50063 - (ae * C50060) / C49885 +
                  C49874 * ((-(ae * C49874 * C49971) / C49739) / C49806 -
                            C49907 / C49885 +
                            C49874 * ((-(C49874 * C49882 * C49914) / C49739) /
                                          C49806 -
                                      (ae * C49971) / C49885)));
    const double C3327 =
        2 * (C49874 * C50090 -
             (ae * (C49875 * C49963 + C49997 * ce)) / C49885) -
        (ae * (C49875 * C50060 + (C49997 + C50003 * C50048) * ce)) / C49885 +
        C49874 *
            (C50090 -
             (ae * (C49875 * C49874 * C49971 + C49874 * C50003 * ce)) / C49885 +
             C49874 *
                 (C49874 * ((-(C49875 * C49882 * C49914) / C49739) / C49806 -
                            (C50025 * ce) / C49885) -
                  (ae * (C49875 * C49971 + C50003 * ce)) / C49885));
    const double C3655 =
        (-(C49875 * C50019 * ce) / C49739) / C49806 - C49987 / C49885 +
        C49875 * C50090 -
        (ae * (C49875 * (C49875 * C49874 * C49971 + C50099 * ce) + C50054 +
               C49875 * C50099 * ce)) /
            C49885 +
        C49874 * (C49874 * ((-(C49875 * C50025 * ce) / C49739) / C49806 -
                            C49907 / C49885 +
                            C49875 * ((-(C49875 * C49882 * C49914) / C49739) /
                                          C49806 -
                                      (C50025 * ce) / C49885)) -
                  (ae * (C49875 * (C49875 * C49971 + C50003 * ce) + C49963 +
                         C49875 * C50003 * ce)) /
                      C49885);
    const double C3765 =
        (((-2 * (C49875 * C49963 + C49997 * ce)) / C49739 -
          (C49875 * (C49875 * (C49875 * C49971 + C50003 * ce) + C49963 +
                     C49875 * C50003 * ce)) /
              C49739 -
          ((C49997 + C50003 * C50103) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 * (2 * C50090 - ((C50019 + C50025 * C50103) * ce) / C49885 +
                  C49875 * ((-(C49875 * C50025 * ce) / C49739) / C49806 -
                            C49907 / C49885 +
                            C49875 * ((-(C49875 * C49882 * C49914) / C49739) /
                                          C49806 -
                                      (C50025 * ce) / C49885)));
    const double C6565 =
        3 * ((-(C50111 * ce) / C49739) / C49806 - C49987 / C49885 +
             C49875 * C50090) -
        ((2 * C50111 + C49875 * C50113) * ce) / C49885 +
        C49875 * (2 * C50090 - (C50113 * ce) / C49885 +
                  C49875 * ((-(C49875 * C50025 * ce) / C49739) / C49806 -
                            C49907 / C49885 +
                            C49875 * ((-(C49875 * C49882 * C49914) / C49739) /
                                          C49806 -
                                      (C50025 * ce) / C49885)));
    const double C50240 = C50226 - C50233;
    const double C50183 = C50182 - C50180;
    const double C50312 = C50306 - C50311;
    const double C13534 = C8176 * C3326;
    const double C13524 = C8177 * C3326;
    const double C19011 = C50923 * C3326;
    const double C29506 = C50923 * C3326;
    const double C45144 = C51080 * C3326;
    const double C45134 = C25710 * C3326;
    const double C13706 = C8177 * C3654;
    const double C13868 = C8176 * C3654;
    const double C16271 = C50907 * C3654;
    const double C19021 = C51053 * C3654;
    const double C19005 = C50923 * C3654;
    const double C29938 = C50923 * C3654;
    const double C45316 = C25710 * C3654;
    const double C45478 = C51080 * C3654;
    const double C47848 = C22845 * C3654;
    const double C13992 = C8176 * C3764;
    const double C16585 = C50907 * C3764;
    const double C19193 = C50923 * C3764;
    const double C19367 = C51053 * C3764;
    const double C30092 = C50923 * C3764;
    const double C45594 = C51080 * C3764;
    const double C48156 = C22845 * C3764;
    const double C16703 = C50907 * C6564;
    const double C19483 = C51053 * C6564;
    const double C48268 = C22845 * C6564;
    const double C50166 = C50164 + C50165;
    const double C190 = C184 + C185;
    const double C2507 = C2503 * C118;
    const double C528 = C514 - C523;
    const double C2697 = C2695 * C118;
    const double C2887 = C2885 * C459;
    const double C4426 = C2885 * C1731;
    const double C5696 = C5695 - C5687;
    const double C17192 = C16592 * C459;
    const double C17544 = C16592 * C1731;
    const double C50211 = C50210 + C50204;
    const double C13526 = C8177 * C9019;
    const double C45136 = C25710 * C9019;
    const double C13860 = C8177 * C9337;
    const double C19015 = C50923 * C9337;
    const double C45470 = C25710 * C9337;
    const double C47842 = C50923 * C9337;
    const double C13984 = C8177 * C9443;
    const double C19361 = C50923 * C9443;
    const double C21487 = C50907 * C9443;
    const double C45586 = C25710 * C9443;
    const double C48150 = C50923 * C9443;
    const double C176 = C164 + C165;
    const double C345 = C335 + C336;
    const double C2497 = C2478 + C2479;
    const double C22898 = C22879 + C22880;
    const double C517 = C503 + C504;
    const double C672 = C664 + C665;
    const double C2691 = C2676 + C2677;
    const double C8234 = C8212 + C8213;
    const double C23092 = C23077 + C23078;
    const double C25767 = C25745 + C25746;
    const double C1623 = C1613 + C1614;
    const double C2882 = C2866 + C2867;
    const double C23283 = C23267 + C23268;
    const double C1049 = C1041 + C1042;
    const double C7064 = C6456 * C459;
    const double C7430 = C6456 * C1731;
    const double C15714 = C6456 * C118;
    const double C16696 =
        4 * ((-2 * C50520) / C49739 - (C49875 * C50630) / C49739 -
             (C50521 * ce) / C49739) +
        C49875 *
            ((-3 * C50630) / C49739 +
             C49875 * ((-2 * C50192) / C49739 -
                       (C49875 * (C49875 * (C49875 * C50123 + C50189 * ce) +
                                  C49971 + C49875 * C50189 * ce)) /
                           C49739 -
                       (C50330 * ce) / C49739) -
             (C50629 * ce) / C49739) -
        ((3 * C50521 + C49875 * C50629) * ce) / C49739;
    const double C16022 = C16020 * C118;
    const double C16430 = C16428 * C999;
    const double C17698 = C16428 * C2001;
    const double C8866 =
        (4 * (2 * C50479 + C49874 * C50541 + C50480 * ae) +
         C49874 *
             (3 * C50541 +
              C49874 *
                  (2 * C50537 +
                   C49874 * (C50025 + C49874 * (C49874 * C50216 + C50189 * ae) +
                             C50215 * ae) +
                   C50196 * ae) +
              C50538 * ae) +
         (3 * C50480 + C49874 * C50538) * ae) /
        C49806;
    const double C9021 =
        (C49875 *
         (3 * C50541 +
          C49874 *
              (2 * C50537 +
               C49874 * (C50025 + C49874 * (C49874 * C50216 + C50189 * ae) +
                         C50215 * ae) +
               C50196 * ae) +
          C50538 * ae)) /
        C49806;
    const double C9339 =
        (2 * C50479 + C49874 * C50541 + C50480 * ae +
         (2 * C50537 +
          C49874 * (C50025 + C49874 * (C49874 * C50216 + C50189 * ae) +
                    C50215 * ae) +
          C50196 * ae) *
             C50103) /
        C49806;
    const double C9445 =
        (2 * C49875 * C50541 +
         C49875 * (C50541 + (C50025 + C49874 * (C49874 * C50216 + C50189 * ae) +
                             C50215 * ae) *
                                C50103)) /
        C49806;
    const double C19471 =
        4 * ((-2 * C50603) / C49739 - (C49875 * C50641) / C49739 -
             (C50604 * ce) / C49739) +
        C49875 *
            ((-3 * C50641) / C49739 +
             C49875 *
                 ((-2 * C50267) / C49739 -
                  (C49875 * (C49875 * (C49875 * C49874 * C49975 + C50291 * ce) +
                             C50228 + C49875 * C50291 * ce)) /
                      C49739 -
                  (C50319 * ce) / C49739) -
             (C50640 * ce) / C49739) -
        ((3 * C50604 + C49875 * C50640) * ce) / C49739;
    const double C50300 = C50298 / C49885;
    const double C50650 = C50645 / C49739;
    const double C21766 = C117 * C16694;
    const double C21768 = C21764 + C21765;
    const double C50581 = C50568 + C50580;
    const double C49921 = C49913 + C49920;
    const double C50051 = C50046 - C50049;
    const double C50095 = C50092 - C50094;
    const double C3053 = C50923 * C763;
    const double C8407 = C8177 * C763;
    const double C23454 = C50923 * C763;
    const double C25940 = C25710 * C763;
    const double C4269 = C50923 * C894;
    const double C5853 = C50907 * C894;
    const double C8589 = C8177 * C894;
    const double C24622 = C50923 * C894;
    const double C26122 = C25710 * C894;
    const double C3491 = C50923 * C1168;
    const double C6451 = C50907 * C1168;
    const double C23868 = C50923 * C1168;
    const double C6283 = C50907 * C1258;
    const double C50142 = C49874 * C50140;
    const double C50200 = C49874 * C50199;
    const double C50214 = C49875 * C50199;
    const double C50254 = C50251 + C50252;
    const double C50283 = C50282 - C50278;
    const double C50302 = C50301 + C50288;
    const double C49983 = C49973 + C49982;
    const double C8865 =
        4 * ((-2 * C50054) / C49739 - (C49874 * C50060) / C49739) +
        C49874 * ((-3 * C50060) / C49739 + C49874 * C50141);
    const double C9022 = C49875 * ((-3 * C50060) / C49739 + C49874 * C50141) -
                         ((3 * C50480 + C49874 * C50538) * ce) / C49739;
    const double C9340 = (-2 * C50054) / C49739 - (C49874 * C50060) / C49739 +
                         C49875 * (C49875 * C50141 - (C50538 * ce) / C49739) -
                         (C49875 * C50538 * ce) / C49739;
    const double C50255 = C50237 + C50253;
    const double C139 = (5 * (3 * C50017 + C49882 * C50022) +
                         C49882 * (4 * C50022 + C49882 * C50034)) /
                        C49806;
    const double C315 = (C49874 * (4 * C50022 + C49882 * C50034) +
                         (4 * (2 * C49997 + C49882 * C50001) +
                          C49882 * (3 * C50001 + C49882 * C50009)) *
                             ae) /
                        C49806;
    const double C476 = (C49875 * (4 * C50022 + C49882 * C50034)) / C49806;
    const double C649 =
        (3 * C50017 + C49882 * C50022 +
         C49874 * (C49874 * C50034 + C50410 * ae) + C49874 * C50410 * ae) /
        C49806;
    const double C1013 =
        (3 * C50017 + C49882 * C50022 + C50034 * C50103) / C49806;
    const double C1597 = (C49875 * (C49874 * C50034 + C50410 * ae)) / C49806;
    const double C21760 = (5 * (3 * C50109 + C49875 * C50335) +
                           C49875 * (4 * C50335 + C49875 * C50350)) /
                          C49806;
    const double C529 = C527 - C522;
    const double C5372 = C5360 + C5370;
    const double C32145 = C32141 + C32142;
    const double C49783 = C49781 - C49776;
    const double C1750 = C1741 + C1742;
    const double C1749 = C1737 + C1738;
    const double C4428 = C4424 + C4425;
    const double C7227 = C7219 + C7220;
    const double C49850 = C49848 - C49843;
    const double C22899 = C22881 + C22882;
    const double C22897 = C22877 + C22878;
    const double C22896 = C22875 + C22876;
    const double C22894 = C22871 + C22872;
    const double C22891 = C22865 + C22866;
    const double C22889 = C22861 + C22862;
    const double C22887 = C22857 + C22858;
    const double C22885 = C22853 + C22854;
    const double C23091 = C23075 + C23076;
    const double C23090 = C23073 + C23074;
    const double C23088 = C23069 + C23070;
    const double C23086 = C23065 + C23066;
    const double C23084 = C23061 + C23062;
    const double C23282 = C23265 + C23266;
    const double C23281 = C23263 + C23264;
    const double C23279 = C23259 + C23260;
    const double C23276 = C23253 + C23254;
    const double C23274 = C23249 + C23250;
    const double C23459 = C23447 + C23448;
    const double C23457 = C23443 + C23444;
    const double C23455 = C23439 + C23440;
    const double C23873 = C23861 + C23862;
    const double C23871 = C23857 + C23858;
    const double C23869 = C23853 + C23854;
    const double C24627 = C24615 + C24616;
    const double C24625 = C24611 + C24612;
    const double C24623 = C24607 + C24608;
    const double C28962 = C28951 + C28952;
    const double C28960 = C28947 + C28948;
    const double C29167 = C29161 + C29162;
    const double C29165 = C29157 + C29158;
    const double C29516 = C29507 + C29508;
    const double C29514 = C29503 + C29504;
    const double C29511 = C29497 + C29498;
    const double C29509 = C29493 + C29494;
    const double C29737 = C29727 + C29728;
    const double C29735 = C29723 + C29724;
    const double C29733 = C29715 + C29716;
    const double C29731 = C29711 + C29712;
    const double C29956 = C29947 + C29948;
    const double C29954 = C29943 + C29944;
    const double C29952 = C29939 + C29940;
    const double C29950 = C29935 + C29936;
    const double C30098 = C30093 + C30094;
    const double C30096 = C30089 + C30090;
    const double C47850 = C47843 + C47844;
    const double C48158 = C48151 + C48152;
    const double C48270 = C48263 + C48264;
    const double C2510 = C2508 * C50937;
    const double C177 = C166 + C167;
    const double C339 = C323 + C324;
    const double C2492 = C2468 + C2469;
    const double C2692 = C2678 + C2679;
    const double C8236 = C8216 + C8217;
    const double C22893 = C22869 + C22870;
    const double C23093 = C23079 + C23080;
    const double C516 = C501 + C502;
    const double C2883 = C2868 + C2869;
    const double C23284 = C23269 + C23270;
    const double C671 = C662 + C663;
    const double C2682 = C2658 + C2659;
    const double C3060 = C3050 + C3051;
    const double C8226 = C8196 + C8197;
    const double C8418 = C8404 + C8405;
    const double C23083 = C23059 + C23060;
    const double C23461 = C23451 + C23452;
    const double C25759 = C25729 + C25730;
    const double C1622 = C1611 + C1612;
    const double C2879 = C2860 + C2861;
    const double C4276 = C4266 + C4267;
    const double C8600 = C8586 + C8587;
    const double C23280 = C23261 + C23262;
    const double C24629 = C24619 + C24620;
    const double C1048 = C1035 + C1036;
    const double C3498 = C3488 + C3489;
    const double C23875 = C23865 + C23866;
    const double C8759 = C8177 * C3169;
    const double C26292 = C25710 * C3169;
    const double C9947 = C8177 * C3327;
    const double C27448 = C25710 * C3327;
    const double C29164 = C50923 * C3327;
    const double C35411 = C50923 * C3327;
    const double C9183 = C8177 * C3655;
    const double C16019 = C50907 * C3655;
    const double C19979 = C50923 * C3655;
    const double C26700 = C25710 * C3655;
    const double C29946 = C50923 * C3655;
    const double C16589 = C50907 * C3765;
    const double C19201 = C50923 * C3765;
    const double C29730 = C50923 * C3765;
    const double C16427 = C50907 * C6565;
    const double C9023 =
        3 * (C50082 - (ae * (C49875 * C50145 + C50097 * ce)) / C49885 +
             C49874 * C50183) +
        ((C49875 * C50163 - ((2 * C50097 + C49874 * C50176) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (2 * C50183 - (ae * (C49875 * C50153 + C50176 * ce)) / C49885 +
             C49874 *
                 (C50181 -
                  (ae * (C49875 * C49874 * C49934 + C49874 * C49999 * ce)) /
                      C49885 +
                  C49874 * (C49874 * ((-(C49875 * C49914) / C49739) / C49806 -
                                      (C49949 * ce) / C49885) -
                            (ae * (C49875 * C49934 + C49999 * ce)) / C49885)));
    const double C13547 = C13533 + C13534;
    const double C13542 = C13523 + C13524;
    const double C19032 = C19010 + C19011;
    const double C29515 = C29505 + C29506;
    const double C45152 = C45133 + C45134;
    const double C13712 = C13705 + C13706;
    const double C13875 = C13867 + C13868;
    const double C16273 = C16270 + C16271;
    const double C19037 = C19020 + C19021;
    const double C19029 = C19004 + C19005;
    const double C29951 = C29937 + C29938;
    const double C45322 = C45315 + C45316;
    const double C47852 = C47847 + C47848;
    const double C13999 = C13991 + C13992;
    const double C16591 = C16584 + C16585;
    const double C19207 = C19192 + C19193;
    const double C19371 = C19366 + C19367;
    const double C30097 = C30091 + C30092;
    const double C48160 = C48155 + C48156;
    const double C16705 = C16702 + C16703;
    const double C19487 = C19482 + C19483;
    const double C48272 = C48267 + C48268;
    const double C8870 =
        4 * (2 * C50074 - (ae * C50071) / C49885 + C49874 * C50166) +
        (((-3 * C50071) / C49739 + C49874 * C50163) * ae) / C49806 +
        C49874 *
            (3 * C50166 + (C50163 * ae) / C49806 +
             C49874 *
                 (2 * C50162 - (ae * C50153) / C49885 +
                  C49874 *
                      ((-(ae * C49874 * C49934) / C49739) / C49806 - C49910 +
                       C49874 * ((-(C49874 * C49914) / C49739) / C49806 -
                                 (ae * C49934) / C49885))));
    const double C194 = C190 * C50937;
    const double C2889 = C2876 - C2887;
    const double C9341 =
        2 * (C49874 * C50211 -
             (ae * (C49875 * C50175 + C49925 + C49875 * C49993 * ce)) /
                 C49885) -
        (ae * (C49875 * (C49875 * C50153 + C50176 * ce) + C50071 +
               C49875 * C50176 * ce)) /
            C49885 +
        C49874 *
            (C50211 -
             (ae * (C49875 * (C49875 * C49874 * C49934 + C50205 * ce) + C50145 +
                    C49875 * C50205 * ce)) /
                 C49885 +
             C49874 *
                 (C49874 *
                      ((-(C49875 * C49949 * ce) / C49739) / C49806 - C49910 +
                       C49875 * ((-(C49875 * C49914) / C49739) / C49806 -
                                 (C49949 * ce) / C49885)) -
                  (ae * (C49875 * (C49875 * C49934 + C49999 * ce) + C49931 +
                         C49875 * C49999 * ce)) /
                      C49885));
    const double C9447 =
        2 * C50082 - (C50109 * ce) / C49885 + C49875 * C50211 +
        (((-2 * (C49875 * C50145 + C50097 * ce)) / C49739 -
          (C49875 * (C49875 * (C49875 * C49874 * C49934 + C50205 * ce) +
                     C50145 + C49875 * C50205 * ce)) /
              C49739 -
          ((C50097 + C50205 * C50103) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            ((((-2 * C50175) / C49739 -
               (C49875 * (C49875 * (C49875 * C49934 + C49999 * ce) + C49931 +
                          C49875 * C49999 * ce)) /
                   C49739 -
               ((C49993 + C49999 * C50103) * ce) / C49739) *
              ae) /
                 C49806 +
             C49874 *
                 (2 * C50181 - ((C49946 + C49949 * C50103) * ce) / C49885 +
                  C49875 *
                      ((-(C49875 * C49949 * ce) / C49739) / C49806 - C49910 +
                       C49875 * ((-(C49875 * C49914) / C49739) / C49806 -
                                 (C49949 * ce) / C49885))));
    const double C13543 = C13525 + C13526;
    const double C45153 = C45135 + C45136;
    const double C13871 = C13859 + C13860;
    const double C19034 = C19014 + C19015;
    const double C45481 = C45469 + C45470;
    const double C47849 = C47841 + C47842;
    const double C13995 = C13983 + C13984;
    const double C19368 = C19360 + C19361;
    const double C21490 = C21486 + C21487;
    const double C45597 = C45585 + C45586;
    const double C48157 = C48149 + C48150;
    const double C186 = C176 * C118;
    const double C353 = C345 * C118;
    const double C525 = C517 * C459;
    const double C1745 = C517 * C1731;
    const double C5366 = C517 * C118;
    const double C678 = C672 * C118;
    const double C1629 = C1623 * C459;
    const double C1895 = C1623 * C1731;
    const double C5525 = C1623 * C118;
    const double C1055 = C1049 * C999;
    const double C2019 = C1049 * C2001;
    const double C5689 = C1049 * C459;
    const double C7223 = C1049 * C1731;
    const double C15564 = C1049 * C118;
    const double C50653 = C50649 - C50650;
    const double C50582 = C50581 + C50572;
    const double C146 =
        5 * (3 * C49905 + C49882 * C49921) +
        C49882 * (4 * C49921 +
                  C49882 * (3 * C49919 +
                            C49882 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885))));
    const double C320 =
        (((-3 * (C49931 * C49891 + C49925)) / C49739 +
          C49882 * ((-2 * C49882 * C49931) / C49739 -
                    (C49882 * (C49896 * C49897 * C49923 * C49891 + C49931)) /
                        C49739)) *
         ae) /
            C49806 +
        C49874 * (3 * C49905 + C49882 * C49921);
    const double C321 =
        ((4 * ((-2 * C49882 * C49931) / C49739 - (C49882 * C49936) / C49739) +
          C49882 * ((-3 * C49936) / C49739 +
                    C49882 * ((-2 * C49882 * C49934) / C49739 -
                              (C49882 *
                               (C49908 * C49909 * C49923 * C49891 + C49934)) /
                                  C49739))) *
         ae) /
            C49806 +
        C49874 * (4 * C49921 +
                  C49882 * (3 * C49919 +
                            C49882 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885))));
    const double C482 =
        C49875 * (3 * C49905 + C49882 * C49921) -
        ((3 * (C49943 + C49946 * C49891) +
          C49882 * (2 * C49882 * C49946 +
                    C49882 * (C49946 + C49896 * C49897 * C49940 * C49891))) *
         ce) /
            C49885;
    const double C483 =
        C49875 * (4 * C49921 +
                  C49882 * (3 * C49919 +
                            C49882 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885)))) -
        ((4 * (2 * C49882 * C49946 + C49882 * C49951) +
          C49882 * (3 * C49951 +
                    C49882 * (2 * C49882 * C49949 +
                              C49882 * (C49949 +
                                        C49908 * C49909 * C49940 * C49891)))) *
         ce) /
            C49885;
    const double C653 = (-2 * C49882 * C49894) / C49885 + C49882 * C49905 +
                        (C49874 * C49968 * ae) / C49806 +
                        C49874 * ((C49968 * ae) / C49806 + C49874 * C49921);
    const double C762 =
        2 * ((C49968 * ae) / C49806 + C49874 * C49921) +
        ((C49968 + C49981 * std::pow(C49874, 2)) * ae) / C49806 +
        C49874 * (C49921 + (C49874 * C49981 * ae) / C49806 +
                  C49874 * ((C49981 * ae) / C49806 +
                            C49874 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885))));
    const double C891 =
        ((C49875 * C49968 - ((2 * C49882 * C49993 +
                              C49882 * (C49993 + C49890 * C49892 * C49891)) *
                             ce) /
                                C49739) *
         ae) /
            C49806 +
        C49874 * (C49875 * C49921 -
                  ((2 * C49882 * C49946 + C49882 * C49951) * ce) / C49885);
    const double C895 =
        C49875 * C49921 -
        ((2 * C49882 * C49946 + C49882 * C49951) * ce) / C49885 +
        ((C49875 * C49874 * C49981 - (C49874 * C50009 * ce) / C49739) * ae) /
            C49806 +
        C49874 *
            (((C49875 * C49981 - (C50009 * ce) / C49739) * ae) / C49806 +
             C49874 *
                 (C49875 * ((-2 * C49882 * C49914) / C49885 +
                            C49882 * ((-(std::pow(C49878, 8) * bs[8] * C49880 *
                                         C49891) /
                                       C49739) /
                                          C49806 -
                                      C49914 / C49885)) -
                  ((2 * C49882 * C49949 +
                    C49882 * (C49949 + C49908 * C49909 * C49940 * C49891)) *
                   ce) /
                      C49885));
    const double C1018 = (-2 * C49987) / C49885 + C49882 * C49905 -
                         (C49875 * C50022 * ce) / C49885 +
                         C49875 * (C49875 * C49921 - (C50022 * ce) / C49885);
    const double C1019 =
        3 * C49905 + C49882 * C49921 - (C49875 * C50034 * ce) / C49885 +
        C49875 * (C49875 * (3 * C49919 +
                            C49882 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885))) -
                  (C50034 * ce) / C49885);
    const double C1169 =
        ((C49968 + C49875 * (C49875 * C49981 - (C50009 * ce) / C49739) -
          (C49875 * C50009 * ce) / C49739) *
         ae) /
            C49806 +
        C49874 * (C49921 - (C49875 * C50032 * ce) / C49885 +
                  C49875 * (C49875 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885)) -
                            (C50032 * ce) / C49885));
    const double C1259 =
        2 * (C49875 * C49921 - (C50022 * ce) / C49885) -
        ((C50022 + C50032 * std::pow(C49875, 2)) * ce) / C49885 +
        C49875 * (C49921 - (C49875 * C50032 * ce) / C49885 +
                  C49875 * (C49875 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885)) -
                            (C50032 * ce) / C49885));
    const double C3168 =
        3 * (C49905 - (ae * C50045) / C49885 + C49874 * C50051) +
        (((-2 * C50045) / C49739 - (C49874 * C50052) / C49739) * ae) / C49806 +
        C49874 * (2 * C50051 - (ae * C50052) / C49885 +
                  C49874 * (C49919 - (ae * C49874 * C49978) / C49885 +
                            C49874 * (C49874 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885) -
                                      (ae * C49978) / C49885)));
    const double C3328 =
        2 * (C49874 * C50095 -
             (ae * (C49875 * C49936 + C50001 * ce)) / C49885) -
        (ae * (C49875 * C50052 + (C50001 + C50007 * C50048) * ce)) / C49885 +
        C49874 *
            (C50095 -
             (ae * (C49875 * C49874 * C49978 + C49874 * C50007 * ce)) / C49885 +
             C49874 * (C49874 * (C49875 * ((-(std::pow(C49878, 8) * bs[8] *
                                              C49880 * C49891) /
                                            C49739) /
                                               C49806 -
                                           C49914 / C49885) -
                                 (C50030 * ce) / C49885) -
                       (ae * (C49875 * C49978 + C50007 * ce)) / C49885));
    const double C3656 =
        C49905 - (C49875 * C49951 * ce) / C49885 + C49875 * C50095 -
        (ae * (C49875 * (C49875 * C49874 * C49978 + C50101 * ce) + C50045 +
               C49875 * C50101 * ce)) /
            C49885 +
        C49874 * (C49874 * (C49919 - (C49875 * C50030 * ce) / C49885 +
                            C49875 * (C49875 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885) -
                                      (C50030 * ce) / C49885)) -
                  (ae * (C49875 * (C49875 * C49978 + C50007 * ce) + C49936 +
                         C49875 * C50007 * ce)) /
                      C49885);
    const double C3766 =
        (((-2 * (C49875 * C49936 + C50001 * ce)) / C49739 -
          (C49875 * (C49875 * (C49875 * C49978 + C50007 * ce) + C49936 +
                     C49875 * C50007 * ce)) /
              C49739 -
          ((C50001 + C50007 * C50103) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 * (2 * C50095 - ((C49951 + C50030 * C50103) * ce) / C49885 +
                  C49875 * (C49919 - (C49875 * C50030 * ce) / C49885 +
                            C49875 * (C49875 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885) -
                                      (C50030 * ce) / C49885)));
    const double C6566 =
        3 * (C49905 - (C50115 * ce) / C49885 + C49875 * C50095) -
        ((2 * C50115 + C49875 * C50117) * ce) / C49885 +
        C49875 * (2 * C50095 - (C50117 * ce) / C49885 +
                  C49875 * (C49919 - (C49875 * C50030 * ce) / C49885 +
                            C49875 * (C49875 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885) -
                                      (C50030 * ce) / C49885)));
    const double C3061 = C3052 + C3053;
    const double C8419 = C8406 + C8407;
    const double C23462 = C23453 + C23454;
    const double C25952 = C25939 + C25940;
    const double C4277 = C4268 + C4269;
    const double C5857 = C5852 + C5853;
    const double C8601 = C8588 + C8589;
    const double C24630 = C24621 + C24622;
    const double C26134 = C26121 + C26122;
    const double C3499 = C3490 + C3491;
    const double C6457 = C6450 + C6451;
    const double C23876 = C23867 + C23868;
    const double C6289 = C6282 + C6283;
    const double C50143 = C50139 + C50142;
    const double C50201 = C50200 - C50198;
    const double C50222 = C50221 + C50214;
    const double C50256 = C49874 * C50254;
    const double C50284 = C49874 * C50283;
    const double C50303 = C49874 * C50302;
    const double C50308 = C49875 * C50302;
    const double C654 =
        3 * C49905 + C49882 * C49921 + (C49874 * C49983 * ae) / C49806 +
        C49874 * ((C49983 * ae) / C49806 +
                  C49874 * (3 * C49919 +
                            C49882 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885))));
    const double C1599 =
        ((C49875 * C49983 - ((3 * C50001 + C49882 * C50009) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 * (C49875 * (3 * C49919 +
                            C49882 * ((-2 * C49882 * C49914) / C49885 +
                                      C49882 * ((-(std::pow(C49878, 8) * bs[8] *
                                                   C49880 * C49891) /
                                                 C49739) /
                                                    C49806 -
                                                C49914 / C49885))) -
                  (C50034 * ce) / C49885);
    const double C138 = 5 * ((-3 * C49961) / C49739 + C49882 * C49968) +
                        C49882 * (4 * C49968 + C49882 * C49983);
    const double C314 = C49874 * (4 * C49968 + C49882 * C49983);
    const double C477 = C49875 * (4 * C49968 + C49882 * C49983) -
                        ((4 * (2 * C49997 + C49882 * C50001) +
                          C49882 * (3 * C50001 + C49882 * C50009)) *
                         ce) /
                            C49739;
    const double C648 =
        (-3 * C49961) / C49739 + C49882 * C49968 + C49983 * C50048;
    const double C1014 = (-3 * C49961) / C49739 + C49882 * C49968 +
                         C49875 * (C49875 * C49983 - (C50410 * ce) / C49739) -
                         (C49875 * C50410 * ce) / C49739;
    const double C1598 =
        C49875 * C49874 * C49983 - (C49874 * C50410 * ce) / C49739;
    const double C11361 = 5 * ((-3 * C50071) / C49739 + C49874 * C50163) +
                          C49874 * (4 * C50163 + C49874 * C50255);
    const double C11464 = C49875 * (4 * C50163 + C49874 * C50255) -
                          ((4 * C50550 + C49874 * C50576) * ce) / C49739;
    const double C11664 = (-3 * C50071) / C49739 + C49874 * C50163 +
                          C49875 * (C49875 * C50255 - (C50576 * ce) / C49739) -
                          (C49875 * C50576 * ce) / C49739;
    const double C531 = C529 * C50937;
    const double C5684 = C529 * C51055;
    const double C32442 = C529 * C32138;
    const double C1240 =
        ((((0 - (C49738 * C49763) / C49739) * ce) / C49739 - (0 * de) / C49768 +
          C49748 / C49739) /
             C49747 -
         ((C49738 * C49782 + 0) * de) / C49739) /
            C49747 -
        ((C49738 * (C49782 / C49747 -
                    ((C49738 * C49783 + C51042) * de) / C49739 + C49777) +
          C51087) *
         de) /
            C49739 +
        C49783 / C49747 - ((C49738 * C49777 + C50850) * de) / C49739;
    const double C1241 =
        (C49782 / C49747 - ((C49738 * C49783 + C51042) * de) / C49739 +
         C49777) /
            C49747 -
        ((C49738 *
              (C49783 / C49747 - ((C49738 * C49777 + C50850) * de) / C49739) +
          C51077) *
         de) /
            C49739 +
        2 * (C49777 / C49747 - (0 * de) / C49739);
    const double C1242 =
        (C49783 / C49747 - ((C49738 * C49777 + C50850) * de) / C49739) /
            C49747 -
        ((C49738 * (C49777 / C49747 - (0 * de) / C49739) + C1998) * de) /
            C49739;
    const double C1999 =
        C49782 / C49747 - ((C49738 * C49783 + C51042) * de) / C49739 + C49777;
    const double C2000 =
        C49783 / C49747 - ((C49738 * C49777 + C50850) * de) / C49739;
    const double C1752 = C1750 - C1743;
    const double C1751 = C1749 - C1739;
    const double C4429 = C4428 - C4426;
    const double C7228 = C7227 - C7221;
    const double C10996 =
        ((((0 - (C49805 * C49830) / C49806) * ae) / C49806 - (0 * be) / C49835 +
          C49815 / C49806) /
             C49814 -
         ((C49805 * C49849 + 0) * be) / C49806) /
            C49814 -
        ((C49805 * (C49849 / C49814 -
                    ((C49805 * C49850 + C51053) * be) / C49806 + C49844) +
          C51088) *
         be) /
            C49806 +
        C49850 / C49814 - ((C49805 * C49844 + C50923) * be) / C49806;
    const double C10997 =
        (C49849 / C49814 - ((C49805 * C49850 + C51053) * be) / C49806 +
         C49844) /
            C49814 -
        ((C49805 *
              (C49850 / C49814 - ((C49805 * C49844 + C50923) * be) / C49806) +
          C51080) *
         be) /
            C49806 +
        2 * (C49844 / C49814 - (0 * be) / C49806);
    const double C10998 =
        (C49850 / C49814 - ((C49805 * C49844 + C50923) * be) / C49806) /
            C49814 -
        ((C49805 * (C49844 / C49814 - (0 * be) / C49806) + C25710) * be) /
            C49806;
    const double C25713 =
        C49849 / C49814 - ((C49805 * C49850 + C51053) * be) / C49806 + C49844;
    const double C25714 =
        C49850 / C49814 - ((C49805 * C49844 + C50923) * be) / C49806;
    const double C22904 = C22895 + C22896;
    const double C22902 = C22891 + C22892;
    const double C22901 = C22889 + C22890;
    const double C23096 = C23085 + C23086;
    const double C23286 = C23278 + C23279;
    const double C28957 = C23279 + C23278;
    const double C28956 = C23276 + C23275;
    const double C28954 = C23275 + C23276;
    const double C28955 = C23274 + C23273;
    const double C28953 = C23273 + C23274;
    const double C29722 = C23872 + C23871;
    const double C29720 = C23871 + C23872;
    const double C29721 = C23870 + C23869;
    const double C29719 = C23869 + C23870;
    const double C30747 = C24626 + C24625;
    const double C30746 = C24625 + C24626;
    const double C30748 = C24624 + C24623;
    const double C30745 = C24623 + C24624;
    const double C48000 = C29733 + C29734;
    const double C47999 = C29731 + C29732;
    const double C48147 = C29949 + C29950;
    const double C48259 = C30095 + C30096;
    const double C187 = C177 * C50838;
    const double C347 = C339 * C50838;
    const double C1615 = C339 * C51042;
    const double C1896 = C339 * C1728;
    const double C2502 = C2492 + C2493;
    const double C22903 = C22893 + C22894;
    const double C524 = C516 * C50850;
    const double C1040 = C516 * C995;
    const double C1744 = C516 * C50850;
    const double C2018 = C516 * C51077;
    const double C5363 = C516 * C50838;
    const double C5690 = C516 * C51042;
    const double C7224 = C516 * C1728;
    const double C677 = C671 * C50838;
    const double C2694 = C2682 + C2683;
    const double C23095 = C23083 + C23084;
    const double C1628 = C1622 * C50850;
    const double C1894 = C1622 * C50850;
    const double C5520 = C1622 * C50838;
    const double C7065 = C1622 * C51042;
    const double C7431 = C1622 * C1728;
    const double C2886 = C2879 + C2880;
    const double C35209 = C2880 + C2879;
    const double C23287 = C23280 + C23281;
    const double C28958 = C23281 + C23280;
    const double C1054 = C1048 * C996;
    const double C2014 = C1048 * C1998;
    const double C5688 = C1048 * C50850;
    const double C6279 = C1048 * C995;
    const double C7222 = C1048 * C50850;
    const double C7589 = C1048 * C51077;
    const double C15562 = C1048 * C50838;
    const double C15867 = C1048 * C51042;
    const double C17347 = C1048 * C1728;
    const double C8765 = C8758 + C8759;
    const double C26298 = C26291 + C26292;
    const double C9953 = C9946 + C9947;
    const double C27454 = C27447 + C27448;
    const double C29168 = C29163 + C29164;
    const double C35415 = C35410 + C35411;
    const double C9189 = C9182 + C9183;
    const double C16021 = C16018 + C16019;
    const double C19984 = C19978 + C19979;
    const double C26706 = C26699 + C26700;
    const double C29955 = C29945 + C29946;
    const double C16593 = C16588 + C16589;
    const double C19210 = C19200 + C19201;
    const double C29738 = C29729 + C29730;
    const double C16429 = C16426 + C16427;
    const double C13532 = C8177 * C9023;
    const double C45142 = C25710 * C9023;
    const double C19359 = C19029 + C19028;
    const double C48148 = C29951 + C29952;
    const double C19475 = C19207 + C19206;
    const double C48260 = C30097 + C30098;
    const double C13866 = C8177 * C9341;
    const double C19019 = C50923 * C9341;
    const double C45476 = C25710 * C9341;
    const double C47846 = C50923 * C9341;
    const double C13990 = C8177 * C9447;
    const double C19365 = C50923 * C9447;
    const double C21489 = C50907 * C9447;
    const double C45592 = C25710 * C9447;
    const double C48154 = C50923 * C9447;
    const double C50654 = C50653 - C50651;
    const double C11362 =
        (5 * (3 * C50553 + C49874 * C50582 + C50550 * ae) +
         C49874 * (4 * C50582 +
                   C49874 * (3 * C50579 +
                             C49874 * (2 * C50575 +
                                       C49874 * (C49949 +
                                                 C49874 * (C49874 * C50028 +
                                                           C50004 * ae) +
                                                 C50291 * ae) +
                                       C50271 * ae) +
                             C50279 * ae) +
                   C50576 * ae) +
         (4 * C50550 + C49874 * C50576) * ae) /
        C49806;
    const double C11463 =
        (C49875 *
         (4 * C50582 +
          C49874 *
              (3 * C50579 +
               C49874 * (2 * C50575 +
                         C49874 * (C49949 +
                                   C49874 * (C49874 * C50028 + C50004 * ae) +
                                   C50291 * ae) +
                         C50271 * ae) +
               C50279 * ae) +
          C50576 * ae)) /
        C49806;
    const double C11663 =
        (3 * C50553 + C49874 * C50582 + C50550 * ae +
         (3 * C50579 +
          C49874 *
              (2 * C50575 +
               C49874 * (C49949 + C49874 * (C49874 * C50028 + C50004 * ae) +
                         C50291 * ae) +
               C50271 * ae) +
          C50279 * ae) *
             C50103) /
        C49806;
    const double C11733 =
        (2 * C49875 * C50582 +
         C49875 *
             (C50582 +
              (2 * C50575 +
               C49874 * (C49949 + C49874 * (C49874 * C50028 + C50004 * ae) +
                         C50291 * ae) +
               C50271 * ae) *
                  C50103)) /
        C49806;
    const double C338 = C50907 * C320;
    const double C2483 = C50923 * C320;
    const double C22884 = C50923 * C320;
    const double C508 = C50907 * C482;
    const double C667 = C50907 * C653;
    const double C2681 = C50923 * C653;
    const double C8219 = C8177 * C653;
    const double C23082 = C50923 * C653;
    const double C25752 = C25710 * C653;
    const double C1618 = C50907 * C891;
    const double C2871 = C50923 * C891;
    const double C23272 = C50923 * C891;
    const double C1044 = C50907 * C1018;
    const double C5861 = C5857 * C50838;
    const double C7067 = C6457 * C50850;
    const double C7433 = C6457 * C50850;
    const double C15715 = C6457 * C50838;
    const double C6293 = C6289 * C996;
    const double C7591 = C6289 * C1998;
    const double C15869 = C6289 * C50850;
    const double C17349 = C6289 * C50850;
    const double C8869 =
        4 * (2 * C50063 - (ae * C50060) / C49885 + C49874 * C50143) +
        (((-3 * C50060) / C49739 + C49874 * C50141) * ae) / C49806 +
        C49874 *
            (3 * C50143 + (C50141 * ae) / C49806 +
             C49874 *
                 (2 * C50140 - (ae * C50132) / C49885 +
                  C49874 * ((-(ae * C49874 * C50123) / C49739) / C49806 -
                            C50121 / C49885 +
                            C49874 * ((-(C49874 * C49882 * std::pow(C49878, 8) *
                                         bs[8] * C49880) /
                                       C49739) /
                                          C49806 -
                                      (ae * C50123) / C49885))));
    const double C9024 =
        3 * (C50090 - (ae * (C49875 * C50119 + C50099 * ce)) / C49885 +
             C49874 * C50201) +
        ((C49875 * C50141 - ((2 * C50099 + C49874 * C50196) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (2 * C50201 - (ae * (C49875 * C50132 + C50196 * ce)) / C49885 +
             C49874 *
                 (C50199 -
                  (ae * (C49875 * C49874 * C50123 + C49874 * C50189 * ce)) /
                      C49885 +
                  C49874 * (C49874 * ((-(C49875 * C49882 * std::pow(C49878, 8) *
                                         bs[8] * C49880) /
                                       C49739) /
                                          C49806 -
                                      (C49882 * C50028 * ce) / C49885) -
                            (ae * (C49875 * C50123 + C50189 * ce)) / C49885)));
    const double C9342 =
        2 * (C49874 * C50222 -
             (ae * (C49875 * C50192 + C49963 + C49875 * C50003 * ce)) /
                 C49885) -
        (ae * (C49875 * (C49875 * C50132 + C50196 * ce) + C50060 +
               C49875 * C50196 * ce)) /
            C49885 +
        C49874 *
            (C50222 -
             (ae * (C49875 * (C49875 * C49874 * C50123 + C50215 * ce) + C50119 +
                    C49875 * C50215 * ce)) /
                 C49885 +
             C49874 *
                 (C49874 * ((-(C49875 * C50216 * ce) / C49739) / C49806 -
                            C50121 / C49885 +
                            C49875 * ((-(C49875 * C49882 * std::pow(C49878, 8) *
                                         bs[8] * C49880) /
                                       C49739) /
                                          C49806 -
                                      (C50216 * ce) / C49885)) -
                  (ae * (C49875 * (C49875 * C50123 + C50189 * ce) + C49971 +
                         C49875 * C50189 * ce)) /
                      C49885));
    const double C9448 =
        2 * C50090 - (C50113 * ce) / C49885 + C49875 * C50222 +
        (((-2 * (C49875 * C50119 + C50099 * ce)) / C49739 -
          (C49875 * (C49875 * (C49875 * C49874 * C50123 + C50215 * ce) +
                     C50119 + C49875 * C50215 * ce)) /
              C49739 -
          ((C50099 + C50215 * C50103) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            ((((-2 * C50192) / C49739 -
               (C49875 * (C49875 * (C49875 * C50123 + C50189 * ce) + C49971 +
                          C49875 * C50189 * ce)) /
                   C49739 -
               ((C50003 + C50189 * C50103) * ce) / C49739) *
              ae) /
                 C49806 +
             C49874 *
                 (2 * C50199 - ((C50025 + C50216 * C50103) * ce) / C49885 +
                  C49875 * ((-(C49875 * C50216 * ce) / C49739) / C49806 -
                            C50121 / C49885 +
                            C49875 * ((-(C49875 * C49882 * std::pow(C49878, 8) *
                                         bs[8] * C49880) /
                                       C49739) /
                                          C49806 -
                                      (C50216 * ce) / C49885))));
    const double C16580 =
        (((-3 * (C49875 * C50192 + C49963 + C50327 * ce)) / C49739 +
          C49875 * ((-2 * C50192) / C49739 -
                    (C49875 * (C49875 * (C49875 * C50123 + C50189 * ce) +
                               C49971 + C49875 * C50189 * ce)) /
                        C49739 -
                    (C50330 * ce) / C49739) -
          ((2 * C50327 + C49875 * C50330) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (3 * C50222 - ((2 * C50213 + C49875 * C50331) * ce) / C49885 +
             C49875 *
                 (2 * C50199 - (C50331 * ce) / C49885 +
                  C49875 * ((-(C49875 * C50216 * ce) / C49739) / C49806 -
                            C50121 / C49885 +
                            C49875 * ((-(C49875 * C49882 * std::pow(C49878, 8) *
                                         bs[8] * C49880) /
                                       C49739) /
                                          C49806 -
                                      (C50216 * ce) / C49885))));
    const double C16698 =
        4 * (2 * C50090 - (C50113 * ce) / C49885 + C49875 * C50222) -
        ((3 * C50113 + C49875 * C50339) * ce) / C49885 +
        C49875 *
            (3 * C50222 - (C50339 * ce) / C49885 +
             C49875 *
                 (2 * C50199 - (C50331 * ce) / C49885 +
                  C49875 * ((-(C49875 * C50216 * ce) / C49739) / C49806 -
                            C50121 / C49885 +
                            C49875 * ((-(C49875 * C49882 * std::pow(C49878, 8) *
                                         bs[8] * C49880) /
                                       C49739) /
                                          C49806 -
                                      (C50216 * ce) / C49885))));
    const double C50257 = C50240 + C50256;
    const double C50285 = C50280 + C50284;
    const double C50304 = C50303 - C50300;
    const double C50313 = C50312 + C50308;
    const double C2015 = C172 * C1999;
    const double C2009 = C170 * C1999;
    const double C2003 = C168 * C1999;
    const double C7586 = C512 * C1999;
    const double C7580 = C509 * C1999;
    const double C17694 = C1045 * C1999;
    const double C2017 = C515 * C2000;
    const double C2011 = C512 * C2000;
    const double C2005 = C509 * C2000;
    const double C7588 = C1047 * C2000;
    const double C7582 = C1045 * C2000;
    const double C17696 = C6286 * C2000;
    const double C1753 = C1751 - C1740;
    const double C25747 = C25713 * C133;
    const double C25741 = C25713 * C122;
    const double C25739 = C25713 * C121;
    const double C25733 = C25713 * C131;
    const double C25723 = C25713 * C129;
    const double C25717 = C25713 * C120;
    const double C25935 = C25713 * C306;
    const double C25929 = C25713 * C299;
    const double C25927 = C25713 * C300;
    const double C25921 = C25713 * C308;
    const double C26117 = C25713 * C471;
    const double C26111 = C25713 * C462;
    const double C26109 = C25713 * C469;
    const double C26103 = C25713 * C461;
    const double C26287 = C25713 * C643;
    const double C26281 = C25713 * C636;
    const double C26695 = C25713 * C1008;
    const double C26689 = C25713 * C1001;
    const double C27443 = C25713 * C875;
    const double C27437 = C25713 * C865;
    const double C44725 = C25713 * C467;
    const double C44719 = C25713 * C460;
    const double C45145 = C25713 * C881;
    const double C45139 = C25713 * C868;
    const double C45129 = C25713 * C873;
    const double C45123 = C25713 * C864;
    const double C45311 = C25713 * C1006;
    const double C45305 = C25713 * C1000;
    const double C45479 = C25713 * C1159;
    const double C45473 = C25713 * C1154;
    const double C45595 = C25713 * C1249;
    const double C45589 = C25713 * C1244;
    const double C25749 = C25714 * C304;
    const double C25743 = C25714 * C298;
    const double C25737 = C25714 * C299;
    const double C25731 = C25714 * C306;
    const double C25725 = C25714 * C308;
    const double C25719 = C25714 * C300;
    const double C25937 = C25714 * C645;
    const double C25931 = C25714 * C637;
    const double C25925 = C25714 * C636;
    const double C25919 = C25714 * C643;
    const double C26119 = C25714 * C877;
    const double C26113 = C25714 * C866;
    const double C26107 = C25714 * C875;
    const double C26101 = C25714 * C865;
    const double C26289 = C25714 * C758;
    const double C26283 = C25714 * C752;
    const double C26697 = C25714 * C1161;
    const double C26691 = C25714 * C1155;
    const double C27445 = C25714 * C883;
    const double C27439 = C25714 * C869;
    const double C44723 = C25714 * C873;
    const double C44717 = C25714 * C864;
    const double C45143 = C25714 * C3321;
    const double C45137 = C25714 * C3317;
    const double C45131 = C25714 * C881;
    const double C45125 = C25714 * C868;
    const double C45313 = C25714 * C1159;
    const double C45307 = C25714 * C1154;
    const double C45477 = C25714 * C3649;
    const double C45471 = C25714 * C3645;
    const double C45593 = C25714 * C3759;
    const double C45587 = C25714 * C3755;
    const double C22908 = C22904 * C118;
    const double C22906 = C22902 * C50838;
    const double C23256 = C22902 * C51042;
    const double C24778 = C22902 * C1728;
    const double C22905 = C22901 * C118;
    const double C23255 = C22901 * C458;
    const double C24777 = C22901 * C1730;
    const double C23098 = C23096 * C118;
    const double C23288 = C23286 * C459;
    const double C24779 = C23286 * C1731;
    const double C355 = C347 + C348;
    const double C2506 = C2502 * C50838;
    const double C22907 = C22903 * C50838;
    const double C530 = C528 - C524;
    const double C1754 = C1752 - C1744;
    const double C5369 = C5363 + C5364;
    const double C2696 = C2694 * C50838;
    const double C23097 = C23095 * C50838;
    const double C5527 = C5520 + C5521;
    const double C2888 = C2886 * C50850;
    const double C4427 = C2886 * C50850;
    const double C23289 = C23287 * C50850;
    const double C24780 = C23287 * C50850;
    const double C5697 = C5696 - C5688;
    const double C7229 = C7228 - C7222;
    const double C16023 = C16021 * C50838;
    const double C17195 = C16593 * C50850;
    const double C17547 = C16593 * C50850;
    const double C16431 = C16429 * C996;
    const double C17699 = C16429 * C1998;
    const double C13546 = C13531 + C13532;
    const double C45156 = C45141 + C45142;
    const double C13874 = C13865 + C13866;
    const double C19036 = C19018 + C19019;
    const double C45484 = C45475 + C45476;
    const double C47851 = C47845 + C47846;
    const double C13998 = C13989 + C13990;
    const double C19370 = C19364 + C19365;
    const double C21491 = C21488 + C21489;
    const double C45600 = C45591 + C45592;
    const double C48159 = C48153 + C48154;
    const double C21761 =
        5 * ((-3 * C50621) / C49739 + C49875 * C50654 -
             (C50620 * ce) / C49739) +
        C49875 *
            (4 * C50654 +
             C49875 * ((-3 * C50296) / C49739 +
                       C49875 * ((-2 * C50270) / C49739 -
                                 (C49875 *
                                  (C49875 * (C49875 * C49975 + C50004 * ce) +
                                   C49934 + C49875 * C50004 * ce)) /
                                     C49739 -
                                 (C50320 * ce) / C49739) -
                       (C50345 * ce) / C49739) -
             (C50652 * ce) / C49739) -
        ((4 * C50620 + C49875 * C50652) * ce) / C49739;
    const double C346 = C337 + C338;
    const double C2499 = C2482 + C2483;
    const double C22900 = C22883 + C22884;
    const double C518 = C507 + C508;
    const double C673 = C666 + C667;
    const double C2693 = C2680 + C2681;
    const double C8237 = C8218 + C8219;
    const double C23094 = C23081 + C23082;
    const double C25770 = C25751 + C25752;
    const double C1624 = C1617 + C1618;
    const double C2884 = C2870 + C2871;
    const double C23285 = C23271 + C23272;
    const double C1050 = C1043 + C1044;
    const double C11363 =
        5 * (3 * C50166 + (C50163 * ae) / C49806 + C49874 * C50257) +
        ((4 * C50163 + C49874 * C50255) * ae) / C49806 +
        C49874 *
            (4 * C50257 + (C50255 * ae) / C49806 +
             C49874 *
                 (3 * C50254 + (C50250 * ae) / C49806 +
                  C49874 *
                      (2 * C50249 - (ae * C50239) / C49885 +
                       C49874 * ((-(ae * C49874 * C49975) / C49739) / C49806 -
                                 C49914 / C49885 +
                                 C49874 * ((-(C49874 * std::pow(C49878, 8) *
                                              bs[8] * C49880) /
                                            C49739) /
                                               C49806 -
                                           (ae * C49975) / C49885)))));
    const double C11465 =
        4 * (2 * C50183 - (ae * (C49875 * C50153 + C50176 * ce)) / C49885 +
             C49874 * C50285) +
        ((C49875 * C50255 - ((3 * C50176 + C49874 * C50279) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (3 * C50285 +
             ((C49875 * C50250 - (C50279 * ce) / C49739) * ae) / C49806 +
             C49874 *
                 (2 * C50283 - (ae * (C49875 * C50239 + C50271 * ce)) / C49885 +
                  C49874 *
                      (C50281 -
                       (ae *
                        (C49875 * C49874 * C49975 + C49874 * C50004 * ce)) /
                           C49885 +
                       C49874 *
                           (C49874 * ((-(C49875 * std::pow(C49878, 8) * bs[8] *
                                         C49880) /
                                       C49739) /
                                          C49806 -
                                      (C50028 * ce) / C49885) -
                            (ae * (C49875 * C49975 + C50004 * ce)) / C49885))));
    const double C11665 =
        3 * (C50211 -
             (ae * (C49875 * C50267 + C50145 + C49875 * C50205 * ce)) / C49885 +
             C49874 * C50304) +
        ((C50163 + C49875 * (C49875 * C50250 - (C50279 * ce) / C49739) -
          (C49875 * C50279 * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (2 * C50304 -
             (ae * (C49875 * (C49875 * C50239 + C50271 * ce) + C50153 +
                    C49875 * C50271 * ce)) /
                 C49885 +
             C49874 *
                 (C50302 -
                  (ae * (C49875 * (C49875 * C49874 * C49975 + C50291 * ce) +
                         C50228 + C49875 * C50291 * ce)) /
                      C49885 +
                  C49874 *
                      (C49874 * ((-(C49875 * C50028 * ce) / C49739) / C49806 -
                                 C49914 / C49885 +
                                 C49875 * ((-(C49875 * std::pow(C49878, 8) *
                                              bs[8] * C49880) /
                                            C49739) /
                                               C49806 -
                                           (C50028 * ce) / C49885)) -
                       (ae * (C49875 * (C49875 * C49975 + C50004 * ce) +
                              C49934 + C49875 * C50004 * ce)) /
                           C49885)));
    const double C11735 =
        2 * ((((-2 * C50175) / C49739 - (C49875 * C50296) / C49739 -
               ((C49993 + C49999 * C50103) * ce) / C49739) *
              ae) /
                 C49806 +
             C49874 * C50313) +
        (((-2 * (C49875 * C50153 + C50176 * ce)) / C49739 -
          (C49875 * (C49875 * (C49875 * C50239 + C50271 * ce) + C50153 +
                     C49875 * C50271 * ce)) /
              C49739 -
          ((C50176 + C50271 * C50103) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (C50313 +
             (((-2 * C50267) / C49739 -
               (C49875 * (C49875 * (C49875 * C49874 * C49975 + C50291 * ce) +
                          C50228 + C49875 * C50291 * ce)) /
                   C49739 -
               ((C50205 + C50291 * C50103) * ce) / C49739) *
              ae) /
                 C49806 +
             C49874 *
                 ((((-2 * C50270) / C49739 -
                    (C49875 * (C49875 * (C49875 * C49975 + C50004 * ce) +
                               C49934 + C49875 * C50004 * ce)) /
                        C49739 -
                    ((C49999 + C50004 * C50103) * ce) / C49739) *
                   ae) /
                      C49806 +
                  C49874 *
                      (2 * C50281 - ((C49949 + C50028 * C50103) * ce) / C49885 +
                       C49875 * ((-(C49875 * C50028 * ce) / C49739) / C49806 -
                                 C49914 / C49885 +
                                 C49875 * ((-(C49875 * std::pow(C49878, 8) *
                                              bs[8] * C49880) /
                                            C49739) /
                                               C49806 -
                                           (C50028 * ce) / C49885)))));
    const double C13980 =
        3 * C50211 - ((2 * C50203 + C49875 * C50309) * ce) / C49885 +
        C49875 * C50313 +
        (((-3 * (C49875 * C50267 + C50145 + C50315 * ce)) / C49739 +
          C49875 *
              ((-2 * C50267) / C49739 -
               (C49875 * (C49875 * (C49875 * C49874 * C49975 + C50291 * ce) +
                          C50228 + C49875 * C50291 * ce)) /
                   C49739 -
               (C50319 * ce) / C49739) -
          ((2 * C50315 + C49875 * C50319) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            ((((-3 * C50296) / C49739 +
               C49875 * ((-2 * C50270) / C49739 -
                         (C49875 * (C49875 * (C49875 * C49975 + C50004 * ce) +
                                    C49934 + C49875 * C50004 * ce)) /
                             C49739 -
                         (C50320 * ce) / C49739) -
               ((2 * C50290 + C49875 * C50320) * ce) / C49739) *
              ae) /
                 C49806 +
             C49874 *
                 (3 * C50302 - ((2 * C50287 + C49875 * C50321) * ce) / C49885 +
                  C49875 *
                      (2 * C50281 - (C50321 * ce) / C49885 +
                       C49875 * ((-(C49875 * C50028 * ce) / C49739) / C49806 -
                                 C49914 / C49885 +
                                 C49875 * ((-(C49875 * std::pow(C49878, 8) *
                                              bs[8] * C49880) /
                                            C49739) /
                                               C49806 -
                                           (C50028 * ce) / C49885)))));
    const double C13981 =
        (((-3 * (C49875 * C50175 + C49925 + C50323 * ce)) / C49739 +
          C49875 * ((-2 * C50175) / C49739 - (C49875 * C50296) / C49739 -
                    (C50325 * ce) / C49739) -
          ((2 * C50323 + C49875 * C50325) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 * (3 * C50211 - ((2 * C50203 + C49875 * C50309) * ce) / C49885 +
                  C49875 * C50313);
    const double C16697 =
        4 * (2 * C50082 - (C50109 * ce) / C49885 + C49875 * C50211) -
        ((3 * C50109 + C49875 * C50335) * ce) / C49885 +
        C49875 * (3 * C50211 - (C50335 * ce) / C49885 + C49875 * C50313);
    const double C19472 =
        ((4 * ((-2 * C50175) / C49739 - (C49875 * C50296) / C49739 -
               (C50325 * ce) / C49739) +
          C49875 *
              ((-3 * C50296) / C49739 +
               C49875 * ((-2 * C50270) / C49739 -
                         (C49875 * (C49875 * (C49875 * C49975 + C50004 * ce) +
                                    C49934 + C49875 * C50004 * ce)) /
                             C49739 -
                         (C50320 * ce) / C49739) -
               (C50345 * ce) / C49739) -
          ((3 * C50325 + C49875 * C50345) * ce) / C49739) *
         ae) /
            C49806 +
        C49874 *
            (4 * C50313 - ((3 * C50309 + C49875 * C50346) * ce) / C49885 +
             C49875 *
                 (3 * C50302 - (C50346 * ce) / C49885 +
                  C49875 *
                      (2 * C50281 - (C50321 * ce) / C49885 +
                       C49875 * ((-(C49875 * C50028 * ce) / C49739) / C49806 -
                                 C49914 / C49885 +
                                 C49875 * ((-(C49875 * std::pow(C49878, 8) *
                                              bs[8] * C49880) /
                                            C49739) /
                                               C49806 -
                                           (C50028 * ce) / C49885)))));
    const double C21762 =
        5 * (3 * C50211 - (C50335 * ce) / C49885 + C49875 * C50313) -
        ((4 * C50335 + C49875 * C50350) * ce) / C49885 +
        C49875 *
            (4 * C50313 - (C50350 * ce) / C49885 +
             C49875 *
                 (3 * C50302 - (C50346 * ce) / C49885 +
                  C49875 *
                      (2 * C50281 - (C50321 * ce) / C49885 +
                       C49875 * ((-(C49875 * C50028 * ce) / C49739) / C49806 -
                                 C49914 / C49885 +
                                 C49875 * ((-(C49875 * std::pow(C49878, 8) *
                                              bs[8] * C49880) /
                                            C49739) /
                                               C49806 -
                                           (C50028 * ce) / C49885)))));
    const double C1755 = C1753 * C50937;
    const double C7218 = C1753 * C51055;
    const double C33857 = C1753 * C32138;
    const double C25768 = C25747 + C25748;
    const double C25765 = C25741 + C25742;
    const double C25764 = C25739 + C25740;
    const double C25761 = C25733 + C25734;
    const double C25756 = C25723 + C25724;
    const double C25753 = C25717 + C25718;
    const double C25950 = C25935 + C25936;
    const double C25947 = C25929 + C25930;
    const double C25946 = C25927 + C25928;
    const double C25943 = C25921 + C25922;
    const double C26132 = C26117 + C26118;
    const double C26129 = C26111 + C26112;
    const double C26128 = C26109 + C26110;
    const double C26125 = C26103 + C26104;
    const double C26296 = C26287 + C26288;
    const double C26293 = C26281 + C26282;
    const double C26704 = C26695 + C26696;
    const double C26701 = C26689 + C26690;
    const double C27452 = C27443 + C27444;
    const double C27449 = C27437 + C27438;
    const double C44732 = C44725 + C44726;
    const double C44729 = C44719 + C44720;
    const double C45158 = C45145 + C45146;
    const double C45155 = C45139 + C45140;
    const double C45150 = C45129 + C45130;
    const double C45147 = C45123 + C45124;
    const double C45320 = C45311 + C45312;
    const double C45317 = C45305 + C45306;
    const double C45486 = C45479 + C45480;
    const double C45483 = C45473 + C45474;
    const double C45602 = C45595 + C45596;
    const double C45599 = C45589 + C45590;
    const double C25769 = C25749 + C25750;
    const double C25766 = C25743 + C25744;
    const double C25763 = C25737 + C25738;
    const double C25760 = C25731 + C25732;
    const double C25757 = C25725 + C25726;
    const double C25754 = C25719 + C25720;
    const double C25951 = C25937 + C25938;
    const double C25948 = C25931 + C25932;
    const double C25945 = C25925 + C25926;
    const double C25942 = C25919 + C25920;
    const double C26133 = C26119 + C26120;
    const double C26130 = C26113 + C26114;
    const double C26127 = C26107 + C26108;
    const double C26124 = C26101 + C26102;
    const double C26297 = C26289 + C26290;
    const double C26294 = C26283 + C26284;
    const double C26705 = C26697 + C26698;
    const double C26702 = C26691 + C26692;
    const double C27453 = C27445 + C27446;
    const double C27450 = C27439 + C27440;
    const double C44731 = C44723 + C44724;
    const double C44728 = C44717 + C44718;
    const double C45157 = C45143 + C45144;
    const double C45154 = C45137 + C45138;
    const double C45151 = C45131 + C45132;
    const double C45148 = C45125 + C45126;
    const double C45321 = C45313 + C45314;
    const double C45318 = C45307 + C45308;
    const double C45485 = C45477 + C45478;
    const double C45482 = C45471 + C45472;
    const double C45601 = C45593 + C45594;
    const double C45598 = C45587 + C45588;
    const double C22909 = C22905 + C22906;
    const double C23277 = C23255 + C23256;
    const double C24781 = C24777 + C24778;
    const double C357 = C355 * C50937;
    const double C2509 = C2506 + C2507;
    const double C22910 = C22907 + C22908;
    const double C532 = C530 * C50937;
    const double C1756 = C1754 * C50937;
    const double C5371 = C5369 * C50949;
    const double C32143 = C5369 * C50949;
    const double C2698 = C2696 + C2697;
    const double C23099 = C23097 + C23098;
    const double C5528 = C5527 * C50949;
    const double C32293 = C5527 * C50949;
    const double C2890 = C2889 - C2888;
    const double C4430 = C4429 - C4427;
    const double C5698 = C5697 * C50949;
    const double C32443 = C5697 * C50949;
    const double C7230 = C7229 * C50949;
    const double C33858 = C7229 * C50949;
    const double C354 = C346 * C50838;
    const double C526 = C518 * C50850;
    const double C1748 = C518 * C50850;
    const double C5367 = C518 * C50838;
    const double C679 = C673 * C50838;
    const double C1630 = C1624 * C50850;
    const double C1898 = C1624 * C50850;
    const double C5526 = C1624 * C50838;
    const double C1056 = C1050 * C996;
    const double C2020 = C1050 * C1998;
    const double C5692 = C1050 * C50850;
    const double C7226 = C1050 * C50850;
    const double C15565 = C1050 * C50838;
    const double C19481 = C50923 * C13981;
    const double C21691 = C50907 * C13981;
    const double C48266 = C50923 * C13981;
    const double C21767 = C50907 * C16697;
    const double C22911 = C22909 * C50937;
    const double C23290 = C23277 - C23288;
    const double C24782 = C24781 - C24779;
    const double C2511 = C2509 * C50937;
    const double C22912 = C22910 * C50937;
    const double C5373 = C5371 + C5365;
    const double C32146 = C32143 + C32144;
    const double C2699 = C2698 * C50937;
    const double C23100 = C23099 * C50937;
    const double C5529 = C5528 + C5522;
    const double C32295 = C32293 + C32294;
    const double C2891 = C2890 * C50937;
    const double C4431 = C4430 * C50937;
    const double C5699 = C5684 + C5698;
    const double C32444 = C32442 + C32443;
    const double C7231 = C7218 + C7230;
    const double C33859 = C33857 + C33858;
    const double C19486 = C19480 + C19481;
    const double C21693 = C21690 + C21691;
    const double C48271 = C48265 + C48266;
    const double C21769 = C21766 + C21767;
    const double C23291 = C23290 - C23289;
    const double C24783 = C24782 - C24780;
    const double C23292 = C23291 * C50937;
    const double C24784 = C24783 * C50937;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C51084 +
            ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
                C51068 +
            C22911 * C22849) *
               C1358 -
           (C23100 * C22849 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
                C51068 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C50937 * C51084) *
               C50824) *
              C51085 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C50937 *
                C51084 +
            ((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C50937 *
                C51068 +
            ((C23091 + C23092) * C118 + (C23093 + C23094) * C50838) * C50937 *
                C22849) *
               C50824 -
           (C22912 * C22849 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
                C51068 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
                C51084) *
               C1358) *
              C51071 +
          ((C22911 * C51084 +
            ((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C50937 *
                C51068 +
            ((C22897 + C22898) * C118 + (C22899 + C22900) * C50838) * C50937 *
                C22849) *
               C1358 -
           (((C22851 * C648 + C50923 * C654 + C22850 * C313 + C22845 * C320) *
                 C50838 +
             (C22851 * C639 + C50923 * C649 + C22850 * C302 + C22845 * C312) *
                 C118) *
                C50937 * C22849 +
            ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C50937 *
                C51068 +
            C23100 * C51084) *
               C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C51084 +
            ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
                C51068 +
            C22911 * C22849) *
               C51086 -
           (C23100 * C22849 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
                C51068 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C50937 * C51084) *
               C51074 +
           (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C51084 +
            ((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C50937 *
                C51068 +
            ((C23459 + C23460) * C118 + (C23461 + C23462) * C50838) * C50937 *
                C22849) *
               C1463) *
              C1464 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C50937 *
                C51084 +
            ((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C50937 *
                C51068 +
            ((C23091 + C23092) * C118 + (C23093 + C23094) * C50838) * C50937 *
                C22849) *
               C51074 -
           (C22912 * C22849 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
                C51068 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
                C51084) *
               C51086 -
           (((C22851 * C754 + C50923 * C762 + C22850 * C647 + C22845 * C653) *
                 C50838 +
             (C22851 * C750 + C50923 * C755 + C22850 * C638 + C22845 * C646) *
                 C118) *
                C50937 * C22849 +
            ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C50937 *
                C51068 +
            ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C50937 *
                C51084) *
               C1463) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                 C459 -
             (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                 C50850) *
                C50937 * C51084 +
            ((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             (C23273 + C23274) * C459 - (C23275 + C23276) * C50850) *
                C50937 * C51068 +
            C23292 * C22849) *
               C1358 +
           (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                 C459 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51042 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C458) +
             (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C51084 +
            ((C24623 + C24624) * C459 -
             ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
             (C24625 + C24626) * C50850) *
                C50937 * C51068 +
            ((C24627 + C24628) * C459 - (C23095 * C51042 + C23096 * C458) +
             (C24629 + C24630) * C50850) *
                C50937 * C22849) *
               C50824) *
              C1464 +
          ((((C23274 + C23273) * C459 -
             ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
             (C23276 + C23275) * C50850) *
                C50937 * C51084 +
            ((C23279 + C23278) * C459 -
             ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
             (C23281 + C23280) * C50850) *
                C50937 * C51068 +
            ((C23282 + C23283) * C459 - (C22903 * C51042 + C22904 * C458) +
             (C23284 + C23285) * C50850) *
                C50937 * C22849) *
               C1358 +
           (((C23090 + C23089) * C458 + (C23088 + C23087) * C51042 -
             (C24624 + C24623) * C459 - (C24626 + C24625) * C50850) *
                C50937 * C51084 +
            ((C23086 + C23085) * C458 + (C23084 + C23083) * C51042 -
             (C24628 + C24627) * C459 - (C24630 + C24629) * C50850) *
                C50937 * C51068 +
            ((C23091 + C23092) * C458 + (C23093 + C23094) * C51042 -
             (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                 C459 -
             (C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                 C50850) *
                C50937 * C22849) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                 C1731 -
             (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                 C50850) *
                C50937 * C51084 +
            ((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
             (C23273 + C23274) * C1731 - (C23275 + C23276) * C50850) *
                C50937 * C51068 +
            C24784 * C22849) *
               C1358 +
           (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                 C1731 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C1728 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1730) +
             (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C51084 +
            ((C24623 + C24624) * C1731 -
             ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
             (C24625 + C24626) * C50850) *
                C50937 * C51068 +
            ((C24627 + C24628) * C1731 - (C23095 * C1728 + C23096 * C1730) +
             (C24629 + C24630) * C50850) *
                C50937 * C22849) *
               C50824) *
              C51033 +
          ((((C23274 + C23273) * C1731 -
             ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
             (C23276 + C23275) * C50850) *
                C50937 * C51084 +
            ((C23279 + C23278) * C1731 -
             ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
             (C23281 + C23280) * C50850) *
                C50937 * C51068 +
            ((C23282 + C23283) * C1731 - (C22903 * C1728 + C22904 * C1730) +
             (C23284 + C23285) * C50850) *
                C50937 * C22849) *
               C1358 +
           (((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
             (C24624 + C24623) * C1731 - (C24626 + C24625) * C50850) *
                C50937 * C51084 +
            ((C23086 + C23085) * C1730 + (C23084 + C23083) * C1728 -
             (C24628 + C24627) * C1731 - (C24630 + C24629) * C50850) *
                C50937 * C51068 +
            ((C23091 + C23092) * C1730 + (C23093 + C23094) * C1728 -
             (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                 C1731 -
             (C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                 C50850) *
                C50937 * C22849) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1730 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C1728 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C1731 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C50850) *
               C50937 * C51084 +
           ((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
            (C23273 + C23274) * C1731 - (C23275 + C23276) * C50850) *
               C50937 * C51068 +
           C24784 * C22849) *
              C51086 +
          (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                C1731 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C1728 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C1730) +
            (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C51084 +
           ((C24623 + C24624) * C1731 -
            ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
            (C24625 + C24626) * C50850) *
               C50937 * C51068 +
           ((C24627 + C24628) * C1731 - (C23095 * C1728 + C23096 * C1730) +
            (C24629 + C24630) * C50850) *
               C50937 * C22849) *
              C51074 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C1730 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C1728 -
            (C22851 * C3317 + C50923 * C3320 + C22850 * C868 + C22845 * C880) *
                C1731 -
            (C22851 * C3321 + C50923 * C3326 + C22850 * C881 + C22845 * C892) *
                C50850) *
               C50937 * C51084 +
           ((C23455 + C23456) * C1730 + (C23457 + C23458) * C1728 -
            (C22851 * C3318 + C50923 * C3322 + C22850 * C869 + C22845 * C882) *
                C1731 -
            (C22851 * C3323 + C50923 * C3327 + C22850 * C883 + C22845 * C893) *
                C50850) *
               C50937 * C51068 +
           ((C23459 + C23460) * C1730 + (C23461 + C23462) * C1728 -
            (C22851 * C3319 + C50923 * C3324 + C22850 * C870 + C22845 * C884) *
                C1731 -
            (C22851 * C3325 + C50923 * C3328 + C22850 * C885 + C22845 * C894) *
                C50850) *
               C50937 * C22849) *
              C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1999 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51087 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C2000 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C51077 +
            (C22850 * C1000 + C22845 * C1005 + C22851 * C1154 +
             C50923 * C1158) *
                C2001 +
            (C22850 * C1006 + C22845 * C1015 + C22851 * C1159 +
             C50923 * C1166) *
                C1998) *
               C50937 * C51084 +
           ((C22885 + C22886) * C1999 + (C22887 + C22888) * C51087 -
            (C23273 + C23274) * C2000 - (C23275 + C23276) * C51077 +
            (C23869 + C23870) * C2001 + (C23871 + C23872) * C1998) *
               C50937 * C51068 +
           (C22901 * C1999 + C22902 * C51087 - C23286 * C2000 -
            C23287 * C51077 + (C23873 + C23874) * C2001 +
            (C23875 + C23876) * C1998) *
               C50937 * C22849) *
              C1358 +
          (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                C2000 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C51087 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C1999) +
            (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                C51077 -
            (C22851 * C3645 + C50923 * C3648 + C22850 * C1154 +
             C22845 * C1158) *
                C2001 -
            (C22851 * C3649 + C50923 * C3654 + C22850 * C1159 +
             C22845 * C1166) *
                C1998) *
               C50937 * C51084 +
           ((C24623 + C24624) * C2000 -
            ((C23087 + C23088) * C51087 + (C23089 + C23090) * C1999) +
            (C24625 + C24626) * C51077 -
            (C22851 * C3646 + C50923 * C3650 + C22850 * C1155 +
             C22845 * C1160) *
                C2001 -
            (C22851 * C3651 + C50923 * C3655 + C22850 * C1161 +
             C22845 * C1167) *
                C1998) *
               C50937 * C51068 +
           ((C24627 + C24628) * C2000 - (C23095 * C51087 + C23096 * C1999) +
            (C24629 + C24630) * C51077 -
            (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
             C22845 * C1162) *
                C2001 -
            (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
             C22845 * C1168) *
                C1998) *
               C50937 * C22849) *
              C50824) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C51084 +
            ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
                C51068 +
            C22911 * C22849) *
               C630 -
           (C23100 * C22849 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
                C51068 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C50937 * C51084) *
               C631 +
           (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C51084 +
            ((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C50937 *
                C51068 +
            ((C23459 + C23460) * C118 + (C23461 + C23462) * C50838) * C50937 *
                C22849) *
               C632) *
              C51033 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C50937 *
                C51084 +
            ((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C50937 *
                C51068 +
            ((C23091 + C23092) * C118 + (C23093 + C23094) * C50838) * C50937 *
                C22849) *
               C631 -
           (C22912 * C22849 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
                C51068 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
                C51084) *
               C630 -
           (((C22851 * C754 + C50923 * C762 + C22850 * C647 + C22845 * C653) *
                 C50838 +
             (C22851 * C750 + C50923 * C755 + C22850 * C638 + C22845 * C646) *
                 C118) *
                C50937 * C22849 +
            ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C50937 *
                C51068 +
            ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C50937 *
                C51084) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C51084 +
           ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
               C51068 +
           C22911 * C22849) *
              C50808 * C113 -
          (C22912 * C22849 +
           ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
               C51068 +
           ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
               C51084) *
              C50808 * C114 +
          (C22911 * C51084 +
           ((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C50937 *
               C51068 +
           ((C22897 + C22898) * C118 + (C22899 + C22900) * C50838) * C50937 *
               C22849) *
              C50808 * C115 -
          (((C22851 * C314 + C50923 * C321 + C22850 * C137 + C22845 * C145) *
                C50838 +
            (C22851 * C303 + C50923 * C315 + C22850 * C124 + C22845 * C136) *
                C118) *
               C50937 * C22849 +
           ((C22900 + C22899) * C50838 + (C22898 + C22897) * C118) * C50937 *
               C51068 +
           C22912 * C51084) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C997 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C994 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C998 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C995 +
            (C22850 * C1000 + C22845 * C1005 + C22851 * C1154 +
             C50923 * C1158) *
                C999 +
            (C22850 * C1006 + C22845 * C1015 + C22851 * C1159 +
             C50923 * C1166) *
                C996) *
               C50937 * C51084 +
           ((C22885 + C22886) * C997 + (C22887 + C22888) * C994 -
            (C23273 + C23274) * C998 - (C23275 + C23276) * C995 +
            (C23869 + C23870) * C999 + (C23871 + C23872) * C996) *
               C50937 * C51068 +
           (C22901 * C997 + C22902 * C994 - C23286 * C998 - C23287 * C995 +
            (C23873 + C23874) * C999 + (C23875 + C23876) * C996) *
               C50937 * C22849) *
              C50808 * C51033 +
          (((C23274 + C23273) * C998 -
            ((C22888 + C22887) * C994 + (C22886 + C22885) * C997) +
            (C23276 + C23275) * C995 - (C23870 + C23869) * C999 -
            (C23872 + C23871) * C996) *
               C50937 * C51084 +
           ((C23279 + C23278) * C998 -
            ((C22892 + C22891) * C994 + (C22890 + C22889) * C997) +
            (C23281 + C23280) * C995 - (C23874 + C23873) * C999 -
            (C23876 + C23875) * C996) *
               C50937 * C51068 +
           ((C23282 + C23283) * C998 - (C22903 * C994 + C22904 * C997) +
            (C23284 + C23285) * C995 -
            (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
             C22845 * C1011) *
                C999 -
            (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
             C22845 * C1018) *
                C996) *
               C50937 * C22849) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C51084 +
           ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
               C51068 +
           C22911 * C22849) *
              C745 -
          (C23100 * C22849 +
           ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
               C51068 +
           ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                C50838 +
            (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                C118) *
               C50937 * C51084) *
              C746 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C118 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C50838) *
               C50937 * C51084 +
           ((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C50937 *
               C51068 +
           ((C23459 + C23460) * C118 + (C23461 + C23462) * C50838) * C50937 *
               C22849) *
              C747 -
          (((C22851 * C3162 + C50923 * C3168 + C22850 * C756 + C22845 * C763) *
                C50838 +
            (C22851 * C3159 + C50923 * C3163 + C22850 * C751 + C22845 * C757) *
                C118) *
               C50937 * C22849 +
           ((C22851 * C3164 + C50923 * C3169 + C22850 * C758 + C22845 * C764) *
                C50838 +
            (C22851 * C3160 + C50923 * C3165 + C22850 * C752 + C22845 * C759) *
                C118) *
               C50937 * C51068 +
           ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                C50838 +
            (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                C118) *
               C50937 * C51084) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C51084 +
            ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
                C51068 +
            C22911 * C22849) *
               C51040 -
           (C23100 * C22849 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
                C51068 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C50937 * C51084) *
               C50824) *
              C295 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C50937 *
                C51084 +
            ((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C50937 *
                C51068 +
            ((C23091 + C23092) * C118 + (C23093 + C23094) * C50838) * C50937 *
                C22849) *
               C50824 -
           (C22912 * C22849 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
                C51068 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
                C51084) *
               C51040) *
              C296 +
          ((C22911 * C51084 +
            ((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C50937 *
                C51068 +
            ((C22897 + C22898) * C118 + (C22899 + C22900) * C50838) * C50937 *
                C22849) *
               C51040 -
           (((C22851 * C648 + C50923 * C654 + C22850 * C313 + C22845 * C320) *
                 C50838 +
             (C22851 * C639 + C50923 * C649 + C22850 * C302 + C22845 * C312) *
                 C118) *
                C50937 * C22849 +
            ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C50937 *
                C51068 +
            C23100 * C51084) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C997 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C994 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C998 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C995 +
            (C22850 * C1000 + C22845 * C1005 + C22851 * C1154 +
             C50923 * C1158) *
                C999 +
            (C22850 * C1006 + C22845 * C1015 + C22851 * C1159 +
             C50923 * C1166) *
                C996) *
               C50937 * C51084 +
           ((C22885 + C22886) * C997 + (C22887 + C22888) * C994 -
            (C23273 + C23274) * C998 - (C23275 + C23276) * C995 +
            (C23869 + C23870) * C999 + (C23871 + C23872) * C996) *
               C50937 * C51068 +
           (C22901 * C997 + C22902 * C994 - C23286 * C998 - C23287 * C995 +
            (C23873 + C23874) * C999 + (C23875 + C23876) * C996) *
               C50937 * C22849) *
              C51040 +
          (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                C998 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C994 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C997) +
            (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                C995 -
            (C22851 * C3645 + C50923 * C3648 + C22850 * C1154 +
             C22845 * C1158) *
                C999 -
            (C22851 * C3649 + C50923 * C3654 + C22850 * C1159 +
             C22845 * C1166) *
                C996) *
               C50937 * C51084 +
           ((C22850 * C865 + C22845 * C874 + C22851 * C869 + C50923 * C882) *
                C998 -
            ((C23087 + C23088) * C994 + (C23089 + C23090) * C997) +
            (C22850 * C875 + C22845 * C889 + C22851 * C883 + C50923 * C893) *
                C995 -
            (C22851 * C3646 + C50923 * C3650 + C22850 * C1155 +
             C22845 * C1160) *
                C999 -
            (C22851 * C3651 + C50923 * C3655 + C22850 * C1161 +
             C22845 * C1167) *
                C996) *
               C50937 * C51068 +
           ((C22850 * C866 + C22845 * C876 + C22851 * C870 + C50923 * C884) *
                C998 -
            (C23095 * C994 + C23096 * C997) +
            (C22850 * C877 + C22845 * C890 + C22851 * C885 + C50923 * C894) *
                C995 -
            (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
             C22845 * C1162) *
                C999 -
            (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
             C22845 * C1168) *
                C996) *
               C50937 * C22849) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C459 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C50850) *
               C50937 * C51084 +
           ((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
            (C23273 + C23274) * C459 - (C23275 + C23276) * C50850) *
               C50937 * C51068 +
           C23292 * C22849) *
              C630 +
          (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                C459 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C51042 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C458) +
            (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C51084 +
           ((C22850 * C865 + C22845 * C874 + C22851 * C869 + C50923 * C882) *
                C459 -
            ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
            (C22850 * C875 + C22845 * C889 + C22851 * C883 + C50923 * C893) *
                C50850) *
               C50937 * C51068 +
           ((C22850 * C866 + C22845 * C876 + C22851 * C870 + C50923 * C884) *
                C459 -
            (C23095 * C51042 + C23096 * C458) +
            (C22850 * C877 + C22845 * C890 + C22851 * C885 + C50923 * C894) *
                C50850) *
               C50937 * C22849) *
              C631 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C458 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C51042 -
            (C22851 * C3317 + C50923 * C3320 + C22850 * C868 + C22845 * C880) *
                C459 -
            (C22851 * C3321 + C50923 * C3326 + C22850 * C881 + C22845 * C892) *
                C50850) *
               C50937 * C51084 +
           ((C23455 + C23456) * C458 + (C23457 + C23458) * C51042 -
            (C22851 * C3318 + C50923 * C3322 + C22850 * C869 + C22845 * C882) *
                C459 -
            (C22851 * C3323 + C50923 * C3327 + C22850 * C883 + C22845 * C893) *
                C50850) *
               C50937 * C51068 +
           ((C23459 + C23460) * C458 + (C23461 + C23462) * C51042 -
            (C22851 * C3319 + C50923 * C3324 + C22850 * C870 + C22845 * C884) *
                C459 -
            (C22851 * C3325 + C50923 * C3328 + C22850 * C885 + C22845 * C894) *
                C50850) *
               C50937 * C22849) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C459 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C50850) *
               C50937 * C51084 +
           ((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
            (C23273 + C23274) * C459 - (C23275 + C23276) * C50850) *
               C50937 * C51068 +
           C23292 * C22849) *
              C50808 * C295 +
          (((C23274 + C23273) * C459 -
            ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
            (C23276 + C23275) * C50850) *
               C50937 * C51084 +
           ((C23279 + C23278) * C459 -
            ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
            (C23281 + C23280) * C50850) *
               C50937 * C51068 +
           ((C23282 + C23283) * C459 - (C22903 * C51042 + C22904 * C458) +
            (C23284 + C23285) * C50850) *
               C50937 * C22849) *
              C50808 * C296 +
          (C23292 * C51084 +
           ((C22896 + C22895) * C458 + (C22894 + C22893) * C51042 -
            (C23283 + C23282) * C459 - (C23285 + C23284) * C50850) *
               C50937 * C51068 +
           ((C22897 + C22898) * C458 + (C22899 + C22900) * C51042 -
            (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                C459 -
            (C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                C50850) *
               C50937 * C22849) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
               C1240 +
           (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
               C1236 -
           (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
               C1241 -
           (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
               C1237 +
           (C22850 * C1000 + C22845 * C1005 + C22851 * C1154 + C50923 * C1158) *
               C1242 +
           (C22850 * C1006 + C22845 * C1015 + C22851 * C1159 + C50923 * C1166) *
               C1238 -
           (C22851 * C3755 + C50923 * C3758 + C22850 * C1244 + C22845 * C1248) *
               C1243 -
           (C22851 * C3759 + C50923 * C3764 + C22850 * C1249 + C22845 * C1256) *
               C1239) *
              C50937 * C51084 +
          ((C22885 + C22886) * C1240 + (C22887 + C22888) * C1236 -
           (C23273 + C23274) * C1241 - (C23275 + C23276) * C1237 +
           (C23869 + C23870) * C1242 + (C23871 + C23872) * C1238 -
           (C22851 * C3756 + C50923 * C3760 + C22850 * C1245 + C22845 * C1250) *
               C1243 -
           (C22851 * C3761 + C50923 * C3765 + C22850 * C1251 + C22845 * C1257) *
               C1239) *
              C50937 * C51068 +
          (C22901 * C1240 + C22902 * C1236 - C23286 * C1241 - C23287 * C1237 +
           (C23873 + C23874) * C1242 + (C23875 + C23876) * C1238 -
           (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 + C22845 * C1252) *
               C1243 -
           (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 + C22845 * C1258) *
               C1239) *
              C50937 * C22849) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1730 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C1728 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C1731 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C50850) *
               C50937 * C51084 +
           ((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
            (C23273 + C23274) * C1731 - (C23275 + C23276) * C50850) *
               C50937 * C51068 +
           C24784 * C22849) *
              C50808 * C51085 +
          (((C23274 + C23273) * C1731 -
            ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
            (C23276 + C23275) * C50850) *
               C50937 * C51084 +
           ((C23279 + C23278) * C1731 -
            ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
            (C23281 + C23280) * C50850) *
               C50937 * C51068 +
           ((C23282 + C23283) * C1731 - (C22903 * C1728 + C22904 * C1730) +
            (C23284 + C23285) * C50850) *
               C50937 * C22849) *
              C50808 * C51071 +
          (C24784 * C51084 +
           ((C22896 + C22895) * C1730 + (C22894 + C22893) * C1728 -
            (C23283 + C23282) * C1731 - (C23285 + C23284) * C50850) *
               C50937 * C51068 +
           ((C22897 + C22898) * C1730 + (C22899 + C22900) * C1728 -
            (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                C1731 -
            (C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                C50850) *
               C50937 * C22849) *
              C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                 C1731 -
             (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                 C50850) *
                C50937 * C51084 +
            ((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
             (C23273 + C23274) * C1731 - (C23275 + C23276) * C50850) *
                C50937 * C51068 +
            C24784 * C22849) *
               C51040 +
           (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                 C1731 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C1728 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1730) +
             (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C51084 +
            ((C24623 + C24624) * C1731 -
             ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
             (C24625 + C24626) * C50850) *
                C50937 * C51068 +
            ((C24627 + C24628) * C1731 - (C23095 * C1728 + C23096 * C1730) +
             (C24629 + C24630) * C50850) *
                C50937 * C22849) *
               C50824) *
              C1464 +
          ((((C23274 + C23273) * C1731 -
             ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
             (C23276 + C23275) * C50850) *
                C50937 * C51084 +
            ((C23279 + C23278) * C1731 -
             ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
             (C23281 + C23280) * C50850) *
                C50937 * C51068 +
            ((C23282 + C23283) * C1731 - (C22903 * C1728 + C22904 * C1730) +
             (C23284 + C23285) * C50850) *
                C50937 * C22849) *
               C51040 +
           (((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
             (C24624 + C24623) * C1731 - (C24626 + C24625) * C50850) *
                C50937 * C51084 +
            ((C23086 + C23085) * C1730 + (C23084 + C23083) * C1728 -
             (C24628 + C24627) * C1731 - (C24630 + C24629) * C50850) *
                C50937 * C51068 +
            ((C23091 + C23092) * C1730 + (C23093 + C23094) * C1728 -
             (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                 C1731 -
             (C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                 C50850) *
                C50937 * C22849) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1999 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51087 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C2000 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C51077 +
            (C22850 * C1000 + C22845 * C1005 + C22851 * C1154 +
             C50923 * C1158) *
                C2001 +
            (C22850 * C1006 + C22845 * C1015 + C22851 * C1159 +
             C50923 * C1166) *
                C1998) *
               C50937 * C51084 +
           ((C22885 + C22886) * C1999 + (C22887 + C22888) * C51087 -
            (C23273 + C23274) * C2000 - (C23275 + C23276) * C51077 +
            (C23869 + C23870) * C2001 + (C23871 + C23872) * C1998) *
               C50937 * C51068 +
           (C22901 * C1999 + C22902 * C51087 - C23286 * C2000 -
            C23287 * C51077 + (C23873 + C23874) * C2001 +
            (C23875 + C23876) * C1998) *
               C50937 * C22849) *
              C50808 * C1464 +
          (((C23274 + C23273) * C2000 -
            ((C22888 + C22887) * C51087 + (C22886 + C22885) * C1999) +
            (C23276 + C23275) * C51077 - (C23870 + C23869) * C2001 -
            (C23872 + C23871) * C1998) *
               C50937 * C51084 +
           ((C23279 + C23278) * C2000 -
            ((C22892 + C22891) * C51087 + (C22890 + C22889) * C1999) +
            (C23281 + C23280) * C51077 - (C23874 + C23873) * C2001 -
            (C23876 + C23875) * C1998) *
               C50937 * C51068 +
           ((C23282 + C23283) * C2000 - (C22903 * C51087 + C22904 * C1999) +
            (C23284 + C23285) * C51077 -
            (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
             C22845 * C1011) *
                C2001 -
            (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
             C22845 * C1018) *
                C1998) *
               C50937 * C22849) *
              C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C51084 +
           ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
               C51068 +
           C22911 * C22849) *
              C50808 * C113 -
          (C22912 * C22849 +
           ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
               C51068 +
           ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
               C51084) *
              C50808 * C114 +
          (C22911 * C51084 +
           ((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C50937 *
               C51068 +
           ((C22897 + C22898) * C118 + (C22899 + C22900) * C50838) * C50937 *
               C22849) *
              C50808 * C115 -
          (((C22851 * C314 + C50923 * C321 + C22850 * C137 + C22845 * C145) *
                C50838 +
            (C22851 * C303 + C50923 * C315 + C22850 * C124 + C22845 * C136) *
                C118) *
               C50937 * C22849 +
           ((C22900 + C22899) * C50838 + (C22898 + C22897) * C118) * C50937 *
               C51068 +
           C22912 * C51084) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C51084 +
            ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
                C51068 +
            C22911 * C22849) *
               C630 -
           (C23100 * C22849 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
                C51068 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C50937 * C51084) *
               C631 +
           (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C51084 +
            ((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C50937 *
                C51068 +
            ((C23459 + C23460) * C118 + (C23461 + C23462) * C50838) * C50937 *
                C22849) *
               C632) *
              C51033 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C50937 *
                C51084 +
            ((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C50937 *
                C51068 +
            ((C23091 + C23092) * C118 + (C23093 + C23094) * C50838) * C50937 *
                C22849) *
               C631 -
           (C22912 * C22849 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
                C51068 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
                C51084) *
               C630 -
           (((C22851 * C754 + C50923 * C762 + C22850 * C647 + C22845 * C653) *
                 C50838 +
             (C22851 * C750 + C50923 * C755 + C22850 * C638 + C22845 * C646) *
                 C118) *
                C50937 * C22849 +
            ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C50937 *
                C51068 +
            ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C50937 *
                C51084) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C51084 +
            ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
                C51068 +
            C22911 * C22849) *
               C51040 -
           (C23100 * C22849 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
                C51068 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C50937 * C51084) *
               C50824) *
              C295 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C50937 *
                C51084 +
            ((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C50937 *
                C51068 +
            ((C23091 + C23092) * C118 + (C23093 + C23094) * C50838) * C50937 *
                C22849) *
               C50824 -
           (C22912 * C22849 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C50937 *
                C51068 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C50937 *
                C51084) *
               C51040) *
              C296 +
          ((C22911 * C51084 +
            ((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C50937 *
                C51068 +
            ((C22897 + C22898) * C118 + (C22899 + C22900) * C50838) * C50937 *
                C22849) *
               C51040 -
           (((C22851 * C648 + C50923 * C654 + C22850 * C313 + C22845 * C320) *
                 C50838 +
             (C22851 * C639 + C50923 * C649 + C22850 * C302 + C22845 * C312) *
                 C118) *
                C50937 * C22849 +
            ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C50937 *
                C51068 +
            C23100 * C51084) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C51084 +
           ((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C50937 *
               C51068 +
           C22911 * C22849) *
              C745 -
          (C23100 * C22849 +
           ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C50937 *
               C51068 +
           ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                C50838 +
            (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                C118) *
               C50937 * C51084) *
              C746 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C118 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C50838) *
               C50937 * C51084 +
           ((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C50937 *
               C51068 +
           ((C23459 + C23460) * C118 + (C23461 + C23462) * C50838) * C50937 *
               C22849) *
              C747 -
          (((C22851 * C3162 + C50923 * C3168 + C22850 * C756 + C22845 * C763) *
                C50838 +
            (C22851 * C3159 + C50923 * C3163 + C22850 * C751 + C22845 * C757) *
                C118) *
               C50937 * C22849 +
           ((C22851 * C3164 + C50923 * C3169 + C22850 * C758 + C22845 * C764) *
                C50838 +
            (C22851 * C3160 + C50923 * C3165 + C22850 * C752 + C22845 * C759) *
                C118) *
               C50937 * C51068 +
           ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                C50838 +
            (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                C118) *
               C50937 * C51084) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C459 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C50850) *
               C50937 * C51084 +
           ((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
            (C23273 + C23274) * C459 - (C23275 + C23276) * C50850) *
               C50937 * C51068 +
           C23292 * C22849) *
              C50808 * C295 +
          (((C23274 + C23273) * C459 -
            ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
            (C23276 + C23275) * C50850) *
               C50937 * C51084 +
           ((C23279 + C23278) * C459 -
            ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
            (C23281 + C23280) * C50850) *
               C50937 * C51068 +
           ((C23282 + C23283) * C459 - (C22903 * C51042 + C22904 * C458) +
            (C23284 + C23285) * C50850) *
               C50937 * C22849) *
              C50808 * C296 +
          (C23292 * C51084 +
           ((C22896 + C22895) * C458 + (C22894 + C22893) * C51042 -
            (C23283 + C23282) * C459 - (C23285 + C23284) * C50850) *
               C50937 * C51068 +
           ((C22897 + C22898) * C458 + (C22899 + C22900) * C51042 -
            (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                C459 -
            (C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                C50850) *
               C50937 * C22849) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C22851 * C864 + C50923 * C872 + C22850 * C460 + C22845 * C466) *
                C459 -
            (C22851 * C873 + C50923 * C888 + C22850 * C467 + C22845 * C478) *
                C50850) *
               C50937 * C51084 +
           ((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
            (C23273 + C23274) * C459 - (C23275 + C23276) * C50850) *
               C50937 * C51068 +
           C23292 * C22849) *
              C630 +
          (((C22850 * C864 + C22845 * C872 + C22851 * C868 + C50923 * C880) *
                C459 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C51042 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C458) +
            (C22850 * C873 + C22845 * C888 + C22851 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C51084 +
           ((C22850 * C865 + C22845 * C874 + C22851 * C869 + C50923 * C882) *
                C459 -
            ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
            (C22850 * C875 + C22845 * C889 + C22851 * C883 + C50923 * C893) *
                C50850) *
               C50937 * C51068 +
           ((C22850 * C866 + C22845 * C876 + C22851 * C870 + C50923 * C884) *
                C459 -
            (C23095 * C51042 + C23096 * C458) +
            (C22850 * C877 + C22845 * C890 + C22851 * C885 + C50923 * C894) *
                C50850) *
               C50937 * C22849) *
              C631 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C458 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C51042 -
            (C22851 * C3317 + C50923 * C3320 + C22850 * C868 + C22845 * C880) *
                C459 -
            (C22851 * C3321 + C50923 * C3326 + C22850 * C881 + C22845 * C892) *
                C50850) *
               C50937 * C51084 +
           ((C23455 + C23456) * C458 + (C23457 + C23458) * C51042 -
            (C22851 * C3318 + C50923 * C3322 + C22850 * C869 + C22845 * C882) *
                C459 -
            (C22851 * C3323 + C50923 * C3327 + C22850 * C883 + C22845 * C893) *
                C50850) *
               C50937 * C51068 +
           ((C23459 + C23460) * C458 + (C23461 + C23462) * C51042 -
            (C22851 * C3319 + C50923 * C3324 + C22850 * C870 + C22845 * C884) *
                C459 -
            (C22851 * C3325 + C50923 * C3328 + C22850 * C885 + C22845 * C894) *
                C50850) *
               C50937 * C22849) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C118 +
                     (C25756 + C25757 + C25758) * C50838) *
                        C50937 * C50759) *
                       C1358 -
                   (((C25941 + C25942 + C25943) * C50838 +
                     (C25944 + C25945 + C25946) * C118) *
                        C50937 * C50759 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C50937 * C25711) *
                       C50824) *
                      C51085 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C118 +
                     (C25950 + C25951 + C25952) * C50838) *
                        C50937 * C50759) *
                       C50824 -
                   (((C25759 + C25760 + C25761) * C50838 +
                     (C25762 + C25763 + C25764) * C118) *
                        C50937 * C50759 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C50937 * C25711) *
                       C1358) *
                      C51071 +
                  ((((C25764 + C25763 + C25762) * C118 +
                     (C25761 + C25760 + C25759) * C50838) *
                        C50937 * C25711 +
                    ((C25765 + C25766 + C25767) * C118 +
                     (C25768 + C25769 + C25770) * C50838) *
                        C50937 * C50759) *
                       C1358 -
                   (((C25715 * C754 + C25710 * C762 + C25714 * C647 +
                      C51080 * C653 + C25713 * C304 + C51088 * C316) *
                         C50838 +
                     (C25715 * C750 + C25710 * C755 + C25714 * C638 +
                      C51080 * C646 + C25713 * C298 + C51088 * C305) *
                         C118) *
                        C50937 * C50759 +
                    ((C25952 + C25951 + C25950) * C50838 +
                     (C25949 + C25948 + C25947) * C118) *
                        C50937 * C25711) *
                       C50824) *
                      C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C118 +
                     (C25756 + C25757 + C25758) * C50838) *
                        C50937 * C50759) *
                       C51086 -
                   (((C25941 + C25942 + C25943) * C50838 +
                     (C25944 + C25945 + C25946) * C118) *
                        C50937 * C50759 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C50937 * C25711) *
                       C51074 +
                   (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                      C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                         C118 +
                     (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                      C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                         C50838) *
                        C50937 * C25711 +
                    ((C26293 + C26294 + C26295) * C118 +
                     (C26296 + C26297 + C26298) * C50838) *
                        C50937 * C50759) *
                       C1463) *
                      C1464 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C118 +
                     (C25950 + C25951 + C25952) * C50838) *
                        C50937 * C50759) *
                       C51074 -
                   (((C25759 + C25760 + C25761) * C50838 +
                     (C25762 + C25763 + C25764) * C118) *
                        C50937 * C50759 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C50937 * C25711) *
                       C51086 -
                   (((C25715 * C3162 + C25710 * C3168 + C25714 * C756 +
                      C51080 * C763 + C25713 * C645 + C51088 * C652) *
                         C50838 +
                     (C25715 * C3159 + C25710 * C3163 + C25714 * C751 +
                      C51080 * C757 + C25713 * C637 + C51088 * C644) *
                         C118) *
                        C50937 * C50759 +
                    ((C26298 + C26297 + C26296) * C50838 +
                     (C26295 + C26294 + C26293) * C118) *
                        C50937 * C25711) *
                       C1463) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C458 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C51042 -
                     (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                      C51080 * C872 + C25713 * C460 + C51088 * C466) *
                         C459 -
                     (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                      C51080 * C888 + C25713 * C467 + C51088 * C478) *
                         C50850) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C458 +
                     (C25756 + C25757 + C25758) * C51042 -
                     (C26123 + C26124 + C26125) * C459 -
                     (C26126 + C26127 + C26128) * C50850) *
                        C50937 * C50759) *
                       C1358 +
                   (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                      C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                         C459 -
                     ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                       C51080 * C650 + C25713 * C310 + C51088 * C319) *
                          C51042 +
                      (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                       C51080 * C640 + C25713 * C301 + C51088 * C311) *
                          C458) +
                     (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                      C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                         C50850) *
                        C50937 * C25711 +
                    ((C27449 + C27450 + C27451) * C459 -
                     ((C25941 + C25942 + C25943) * C51042 +
                      (C25944 + C25945 + C25946) * C458) +
                     (C27452 + C27453 + C27454) * C50850) *
                        C50937 * C50759) *
                       C50824) *
                      C1464 +
                  ((((C26125 + C26124 + C26123) * C459 -
                     ((C25758 + C25757 + C25756) * C51042 +
                      (C25755 + C25754 + C25753) * C458) +
                     (C26128 + C26127 + C26126) * C50850) *
                        C50937 * C25711 +
                    ((C26129 + C26130 + C26131) * C459 -
                     ((C25759 + C25760 + C25761) * C51042 +
                      (C25762 + C25763 + C25764) * C458) +
                     (C26132 + C26133 + C26134) * C50850) *
                        C50937 * C50759) *
                       C1358 +
                   (((C25946 + C25945 + C25944) * C458 +
                     (C25943 + C25942 + C25941) * C51042 -
                     (C27451 + C27450 + C27449) * C459 -
                     (C27454 + C27453 + C27452) * C50850) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C458 +
                     (C25950 + C25951 + C25952) * C51042 -
                     (C25715 * C3319 + C25710 * C3324 + C25714 * C870 +
                      C51080 * C884 + C25713 * C866 + C51088 * C876) *
                         C459 -
                     (C25715 * C3325 + C25710 * C3328 + C25714 * C885 +
                      C51080 * C894 + C25713 * C877 + C51088 * C890) *
                         C50850) *
                        C50937 * C50759) *
                       C50824) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C1730 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C1728 -
                     (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                      C51080 * C872 + C25713 * C460 + C51088 * C466) *
                         C1731 -
                     (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                      C51080 * C888 + C25713 * C467 + C51088 * C478) *
                         C50850) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C1730 +
                     (C25756 + C25757 + C25758) * C1728 -
                     (C26123 + C26124 + C26125) * C1731 -
                     (C26126 + C26127 + C26128) * C50850) *
                        C50937 * C50759) *
                       C1358 +
                   (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                      C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                         C1731 -
                     ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                       C51080 * C650 + C25713 * C310 + C51088 * C319) *
                          C1728 +
                      (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                       C51080 * C640 + C25713 * C301 + C51088 * C311) *
                          C1730) +
                     (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                      C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                         C50850) *
                        C50937 * C25711 +
                    ((C27449 + C27450 + C27451) * C1731 -
                     ((C25941 + C25942 + C25943) * C1728 +
                      (C25944 + C25945 + C25946) * C1730) +
                     (C27452 + C27453 + C27454) * C50850) *
                        C50937 * C50759) *
                       C50824) *
                      C51033 +
                  ((((C26125 + C26124 + C26123) * C1731 -
                     ((C25758 + C25757 + C25756) * C1728 +
                      (C25755 + C25754 + C25753) * C1730) +
                     (C26128 + C26127 + C26126) * C50850) *
                        C50937 * C25711 +
                    ((C26129 + C26130 + C26131) * C1731 -
                     ((C25759 + C25760 + C25761) * C1728 +
                      (C25762 + C25763 + C25764) * C1730) +
                     (C26132 + C26133 + C26134) * C50850) *
                        C50937 * C50759) *
                       C1358 +
                   (((C25946 + C25945 + C25944) * C1730 +
                     (C25943 + C25942 + C25941) * C1728 -
                     (C27451 + C27450 + C27449) * C1731 -
                     (C27454 + C27453 + C27452) * C50850) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C1730 +
                     (C25950 + C25951 + C25952) * C1728 -
                     (C25715 * C3319 + C25710 * C3324 + C25714 * C870 +
                      C51080 * C884 + C25713 * C866 + C51088 * C876) *
                         C1731 -
                     (C25715 * C3325 + C25710 * C3328 + C25714 * C885 +
                      C51080 * C894 + C25713 * C877 + C51088 * C890) *
                         C50850) *
                        C50937 * C50759) *
                       C50824) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1730 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C1728 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C1731 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C1730 +
                    (C25756 + C25757 + C25758) * C1728 -
                    (C26123 + C26124 + C26125) * C1731 -
                    (C26126 + C26127 + C26128) * C50850) *
                       C50937 * C50759) *
                      C51086 +
                  (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                     C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                        C1731 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C1728 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C1730) +
                    (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                     C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                        C50850) *
                       C50937 * C25711 +
                   ((C27449 + C27450 + C27451) * C1731 -
                    ((C25941 + C25942 + C25943) * C1728 +
                     (C25944 + C25945 + C25946) * C1730) +
                    (C27452 + C27453 + C27454) * C50850) *
                       C50937 * C50759) *
                      C51074 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C1730 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C1728 -
                    (C25715 * C9017 + C25710 * C9019 + C25714 * C3317 +
                     C51080 * C3320 + C25713 * C868 + C51088 * C880) *
                        C1731 -
                    (C25715 * C9020 + C25710 * C9023 + C25714 * C3321 +
                     C51080 * C3326 + C25713 * C881 + C51088 * C892) *
                        C50850) *
                       C50937 * C25711 +
                   ((C26293 + C26294 + C26295) * C1730 +
                    (C26296 + C26297 + C26298) * C1728 -
                    (C25715 * C9018 + C25710 * C9021 + C25714 * C3318 +
                     C51080 * C3322 + C25713 * C869 + C51088 * C882) *
                        C1731 -
                    (C25715 * C9022 + C25710 * C9024 + C25714 * C3323 +
                     C51080 * C3327 + C25713 * C883 + C51088 * C893) *
                        C50850) *
                       C50937 * C50759) *
                      C1463) *
                 C50776) /
                (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1999 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51087 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C2000 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C51077 +
                    (C25713 * C1000 + C51088 * C1005 + C25714 * C1154 +
                     C51080 * C1158 + C25715 * C3645 + C25710 * C3648) *
                        C2001 +
                    (C25713 * C1006 + C51088 * C1015 + C25714 * C1159 +
                     C51080 * C1166 + C25715 * C3649 + C25710 * C3654) *
                        C1998) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C1999 +
                    (C25756 + C25757 + C25758) * C51087 -
                    (C26123 + C26124 + C26125) * C2000 -
                    (C26126 + C26127 + C26128) * C51077 +
                    (C26701 + C26702 + C26703) * C2001 +
                    (C26704 + C26705 + C26706) * C1998) *
                       C50937 * C50759) *
                      C1358 +
                  (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                     C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                        C2000 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C51087 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C1999) +
                    (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                     C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                        C51077 -
                    (C25715 * C9335 + C25710 * C9337 + C25714 * C3645 +
                     C51080 * C3648 + C25713 * C1154 + C51088 * C1158) *
                        C2001 -
                    (C25715 * C9338 + C25710 * C9341 + C25714 * C3649 +
                     C51080 * C3654 + C25713 * C1159 + C51088 * C1166) *
                        C1998) *
                       C50937 * C25711 +
                   ((C27449 + C27450 + C27451) * C2000 -
                    ((C25941 + C25942 + C25943) * C51087 +
                     (C25944 + C25945 + C25946) * C1999) +
                    (C27452 + C27453 + C27454) * C51077 -
                    (C25715 * C9336 + C25710 * C9339 + C25714 * C3646 +
                     C51080 * C3650 + C25713 * C1155 + C51088 * C1160) *
                        C2001 -
                    (C25715 * C9340 + C25710 * C9342 + C25714 * C3651 +
                     C51080 * C3655 + C25713 * C1161 + C51088 * C1167) *
                        C1998) *
                       C50937 * C50759) *
                      C50824) *
                 C50776) /
                (p * q * std::sqrt(p + q));
    d2ee[21] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C118 +
                     (C25756 + C25757 + C25758) * C50838) *
                        C50937 * C50759) *
                       C630 -
                   (((C25941 + C25942 + C25943) * C50838 +
                     (C25944 + C25945 + C25946) * C118) *
                        C50937 * C50759 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C50937 * C25711) *
                       C631 +
                   (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                      C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                         C118 +
                     (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                      C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                         C50838) *
                        C50937 * C25711 +
                    ((C26293 + C26294 + C26295) * C118 +
                     (C26296 + C26297 + C26298) * C50838) *
                        C50937 * C50759) *
                       C632) *
                      C51033 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C118 +
                     (C25950 + C25951 + C25952) * C50838) *
                        C50937 * C50759) *
                       C631 -
                   (((C25759 + C25760 + C25761) * C50838 +
                     (C25762 + C25763 + C25764) * C118) *
                        C50937 * C50759 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C50937 * C25711) *
                       C630 -
                   (((C25715 * C3162 + C25710 * C3168 + C25714 * C756 +
                      C51080 * C763 + C25713 * C645 + C51088 * C652) *
                         C50838 +
                     (C25715 * C3159 + C25710 * C3163 + C25714 * C751 +
                      C51080 * C757 + C25713 * C637 + C51088 * C644) *
                         C118) *
                        C50937 * C50759 +
                    ((C26298 + C26297 + C26296) * C50838 +
                     (C26295 + C26294 + C26293) * C118) *
                        C50937 * C25711) *
                       C632) *
                      C50781)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C118 +
                    (C25756 + C25757 + C25758) * C50838) *
                       C50937 * C50759) *
                      C50808 * C113 -
                  (((C25759 + C25760 + C25761) * C50838 +
                    (C25762 + C25763 + C25764) * C118) *
                       C50937 * C50759 +
                   ((C25758 + C25757 + C25756) * C50838 +
                    (C25755 + C25754 + C25753) * C118) *
                       C50937 * C25711) *
                      C50808 * C114 +
                  (((C25764 + C25763 + C25762) * C118 +
                    (C25761 + C25760 + C25759) * C50838) *
                       C50937 * C25711 +
                   ((C25765 + C25766 + C25767) * C118 +
                    (C25768 + C25769 + C25770) * C50838) *
                       C50937 * C50759) *
                      C50808 * C115 -
                  (((C25715 * C648 + C25710 * C654 + C25714 * C313 +
                     C51080 * C320 + C25713 * C134 + C51088 * C144) *
                        C50838 +
                    (C25715 * C639 + C25710 * C649 + C25714 * C302 +
                     C51080 * C312 + C25713 * C123 + C51088 * C135) *
                        C118) *
                       C50937 * C50759 +
                   ((C25770 + C25769 + C25768) * C50838 +
                    (C25767 + C25766 + C25765) * C118) *
                       C50937 * C25711) *
                      C50808 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C997 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C994 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C998 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C995 +
                    (C25713 * C1000 + C51088 * C1005 + C25714 * C1154 +
                     C51080 * C1158 + C25715 * C3645 + C25710 * C3648) *
                        C999 +
                    (C25713 * C1006 + C51088 * C1015 + C25714 * C1159 +
                     C51080 * C1166 + C25715 * C3649 + C25710 * C3654) *
                        C996) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C997 +
                    (C25756 + C25757 + C25758) * C994 -
                    (C26123 + C26124 + C26125) * C998 -
                    (C26126 + C26127 + C26128) * C995 +
                    (C26701 + C26702 + C26703) * C999 +
                    (C26704 + C26705 + C26706) * C996) *
                       C50937 * C50759) *
                      C50808 * C51033 +
                  (((C26125 + C26124 + C26123) * C998 -
                    ((C25758 + C25757 + C25756) * C994 +
                     (C25755 + C25754 + C25753) * C997) +
                    (C26128 + C26127 + C26126) * C995 -
                    (C26703 + C26702 + C26701) * C999 -
                    (C26706 + C26705 + C26704) * C996) *
                       C50937 * C25711 +
                   ((C26129 + C26130 + C26131) * C998 -
                    ((C25759 + C25760 + C25761) * C994 +
                     (C25762 + C25763 + C25764) * C997) +
                    (C26132 + C26133 + C26134) * C995 -
                    (C25715 * C3647 + C25710 * C3652 + C25714 * C1156 +
                     C51080 * C1162 + C25713 * C1002 + C51088 * C1009) *
                        C999 -
                    (C25715 * C3653 + C25710 * C3656 + C25714 * C1163 +
                     C51080 * C1168 + C25713 * C1010 + C51088 * C1017) *
                        C996) *
                       C50937 * C50759) *
                      C50808 * C50781)) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C118 +
                    (C25756 + C25757 + C25758) * C50838) *
                       C50937 * C50759) *
                      C745 -
                  (((C25941 + C25942 + C25943) * C50838 +
                    (C25944 + C25945 + C25946) * C118) *
                       C50937 * C50759 +
                   ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                     C51080 * C650 + C25713 * C310 + C51088 * C319) *
                        C50838 +
                    (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                     C51080 * C640 + C25713 * C301 + C51088 * C311) *
                        C118) *
                       C50937 * C25711) *
                      C746 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C118 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C50838) *
                       C50937 * C25711 +
                   ((C26293 + C26294 + C26295) * C118 +
                    (C26296 + C26297 + C26298) * C50838) *
                       C50937 * C50759) *
                      C747 -
                  (((C25715 * C8865 + C25710 * C8869 + C25714 * C3164 +
                     C51080 * C3169 + C25713 * C758 + C51088 * C764) *
                        C50838 +
                    (C25715 * C8863 + C25710 * C8866 + C25714 * C3160 +
                     C51080 * C3165 + C25713 * C752 + C51088 * C759) *
                        C118) *
                       C50937 * C50759 +
                   ((C25715 * C8867 + C25710 * C8870 + C25714 * C3166 +
                     C51080 * C3170 + C25713 * C760 + C51088 * C765) *
                        C50838 +
                    (C25715 * C8864 + C25710 * C8868 + C25714 * C3161 +
                     C51080 * C3167 + C25713 * C753 + C51088 * C761) *
                        C118) *
                       C50937 * C25711) *
                      C748) *
                 C50776) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C118 +
                     (C25756 + C25757 + C25758) * C50838) *
                        C50937 * C50759) *
                       C51040 -
                   (((C25941 + C25942 + C25943) * C50838 +
                     (C25944 + C25945 + C25946) * C118) *
                        C50937 * C50759 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C50937 * C25711) *
                       C50824) *
                      C295 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C118 +
                     (C25950 + C25951 + C25952) * C50838) *
                        C50937 * C50759) *
                       C50824 -
                   (((C25759 + C25760 + C25761) * C50838 +
                     (C25762 + C25763 + C25764) * C118) *
                        C50937 * C50759 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C50937 * C25711) *
                       C51040) *
                      C296 +
                  ((((C25764 + C25763 + C25762) * C118 +
                     (C25761 + C25760 + C25759) * C50838) *
                        C50937 * C25711 +
                    ((C25765 + C25766 + C25767) * C118 +
                     (C25768 + C25769 + C25770) * C50838) *
                        C50937 * C50759) *
                       C51040 -
                   (((C25715 * C754 + C25710 * C762 + C25714 * C647 +
                      C51080 * C653 + C25713 * C304 + C51088 * C316) *
                         C50838 +
                     (C25715 * C750 + C25710 * C755 + C25714 * C638 +
                      C51080 * C646 + C25713 * C298 + C51088 * C305) *
                         C118) *
                        C50937 * C50759 +
                    ((C25952 + C25951 + C25950) * C50838 +
                     (C25949 + C25948 + C25947) * C118) *
                        C50937 * C25711) *
                       C50824) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C997 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C994 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C998 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C995 +
                    (C25713 * C1000 + C51088 * C1005 + C25714 * C1154 +
                     C51080 * C1158 + C25715 * C3645 + C25710 * C3648) *
                        C999 +
                    (C25713 * C1006 + C51088 * C1015 + C25714 * C1159 +
                     C51080 * C1166 + C25715 * C3649 + C25710 * C3654) *
                        C996) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C997 +
                    (C25756 + C25757 + C25758) * C994 -
                    (C26123 + C26124 + C26125) * C998 -
                    (C26126 + C26127 + C26128) * C995 +
                    (C26701 + C26702 + C26703) * C999 +
                    (C26704 + C26705 + C26706) * C996) *
                       C50937 * C50759) *
                      C51040 +
                  (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                     C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                        C998 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C994 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C997) +
                    (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                     C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                        C995 -
                    (C25715 * C9335 + C25710 * C9337 + C25714 * C3645 +
                     C51080 * C3648 + C25713 * C1154 + C51088 * C1158) *
                        C999 -
                    (C25715 * C9338 + C25710 * C9341 + C25714 * C3649 +
                     C51080 * C3654 + C25713 * C1159 + C51088 * C1166) *
                        C996) *
                       C50937 * C25711 +
                   ((C25713 * C865 + C51088 * C874 + C25714 * C869 +
                     C51080 * C882 + C25715 * C3318 + C25710 * C3322) *
                        C998 -
                    ((C25941 + C25942 + C25943) * C994 +
                     (C25944 + C25945 + C25946) * C997) +
                    (C25713 * C875 + C51088 * C889 + C25714 * C883 +
                     C51080 * C893 + C25715 * C3323 + C25710 * C3327) *
                        C995 -
                    (C25715 * C9336 + C25710 * C9339 + C25714 * C3646 +
                     C51080 * C3650 + C25713 * C1155 + C51088 * C1160) *
                        C999 -
                    (C25715 * C9340 + C25710 * C9342 + C25714 * C3651 +
                     C51080 * C3655 + C25713 * C1161 + C51088 * C1167) *
                        C996) *
                       C50937 * C50759) *
                      C50824) *
                 C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C459 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C458 +
                    (C25756 + C25757 + C25758) * C51042 -
                    (C26123 + C26124 + C26125) * C459 -
                    (C26126 + C26127 + C26128) * C50850) *
                       C50937 * C50759) *
                      C630 +
                  (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                     C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                        C459 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C51042 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C458) +
                    (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                     C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25713 * C865 + C51088 * C874 + C25714 * C869 +
                     C51080 * C882 + C25715 * C3318 + C25710 * C3322) *
                        C459 -
                    ((C25941 + C25942 + C25943) * C51042 +
                     (C25944 + C25945 + C25946) * C458) +
                    (C25713 * C875 + C51088 * C889 + C25714 * C883 +
                     C51080 * C893 + C25715 * C3323 + C25710 * C3327) *
                        C50850) *
                       C50937 * C50759) *
                      C631 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C458 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C51042 -
                    (C25715 * C9017 + C25710 * C9019 + C25714 * C3317 +
                     C51080 * C3320 + C25713 * C868 + C51088 * C880) *
                        C459 -
                    (C25715 * C9020 + C25710 * C9023 + C25714 * C3321 +
                     C51080 * C3326 + C25713 * C881 + C51088 * C892) *
                        C50850) *
                       C50937 * C25711 +
                   ((C26293 + C26294 + C26295) * C458 +
                    (C26296 + C26297 + C26298) * C51042 -
                    (C25715 * C9018 + C25710 * C9021 + C25714 * C3318 +
                     C51080 * C3322 + C25713 * C869 + C51088 * C882) *
                        C459 -
                    (C25715 * C9022 + C25710 * C9024 + C25714 * C3323 +
                     C51080 * C3327 + C25713 * C883 + C51088 * C893) *
                        C50850) *
                       C50937 * C50759) *
                      C632) *
                 C50776) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C459 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C458 +
                    (C25756 + C25757 + C25758) * C51042 -
                    (C26123 + C26124 + C26125) * C459 -
                    (C26126 + C26127 + C26128) * C50850) *
                       C50937 * C50759) *
                      C50808 * C295 +
                  (((C26125 + C26124 + C26123) * C459 -
                    ((C25758 + C25757 + C25756) * C51042 +
                     (C25755 + C25754 + C25753) * C458) +
                    (C26128 + C26127 + C26126) * C50850) *
                       C50937 * C25711 +
                   ((C26129 + C26130 + C26131) * C459 -
                    ((C25759 + C25760 + C25761) * C51042 +
                     (C25762 + C25763 + C25764) * C458) +
                    (C26132 + C26133 + C26134) * C50850) *
                       C50937 * C50759) *
                      C50808 * C296 +
                  (((C25764 + C25763 + C25762) * C458 +
                    (C25761 + C25760 + C25759) * C51042 -
                    (C26131 + C26130 + C26129) * C459 -
                    (C26134 + C26133 + C26132) * C50850) *
                       C50937 * C25711 +
                   ((C25765 + C25766 + C25767) * C458 +
                    (C25768 + C25769 + C25770) * C51042 -
                    (C25715 * C871 + C25710 * C886 + C25714 * C867 +
                     C51080 * C878 + C25713 * C463 + C51088 * C472) *
                        C459 -
                    (C25715 * C887 + C25710 * C895 + C25714 * C879 +
                     C51080 * C891 + C25713 * C473 + C51088 * C481) *
                        C50850) *
                       C50937 * C50759) *
                      C50808 * C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                    C51080 * C311 + C25715 * C635 + C25710 * C640) *
                       C1240 +
                   (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                    C51080 * C319 + C25715 * C641 + C25710 * C650) *
                       C1236 -
                   (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                    C51080 * C872 + C25713 * C460 + C51088 * C466) *
                       C1241 -
                   (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                    C51080 * C888 + C25713 * C467 + C51088 * C478) *
                       C1237 +
                   (C25713 * C1000 + C51088 * C1005 + C25714 * C1154 +
                    C51080 * C1158 + C25715 * C3645 + C25710 * C3648) *
                       C1242 +
                   (C25713 * C1006 + C51088 * C1015 + C25714 * C1159 +
                    C51080 * C1166 + C25715 * C3649 + C25710 * C3654) *
                       C1238 -
                   (C25715 * C9441 + C25710 * C9443 + C25714 * C3755 +
                    C51080 * C3758 + C25713 * C1244 + C51088 * C1248) *
                       C1243 -
                   (C25715 * C9444 + C25710 * C9447 + C25714 * C3759 +
                    C51080 * C3764 + C25713 * C1249 + C51088 * C1256) *
                       C1239) *
                      C50937 * C25711 +
                  ((C25753 + C25754 + C25755) * C1240 +
                   (C25756 + C25757 + C25758) * C1236 -
                   (C26123 + C26124 + C26125) * C1241 -
                   (C26126 + C26127 + C26128) * C1237 +
                   (C26701 + C26702 + C26703) * C1242 +
                   (C26704 + C26705 + C26706) * C1238 -
                   (C25715 * C9442 + C25710 * C9445 + C25714 * C3756 +
                    C51080 * C3760 + C25713 * C1245 + C51088 * C1250) *
                       C1243 -
                   (C25715 * C9446 + C25710 * C9448 + C25714 * C3761 +
                    C51080 * C3765 + C25713 * C1251 + C51088 * C1257) *
                       C1239) *
                      C50937 * C50759) *
                 C50808 * C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1730 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C1728 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C1731 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C1730 +
                    (C25756 + C25757 + C25758) * C1728 -
                    (C26123 + C26124 + C26125) * C1731 -
                    (C26126 + C26127 + C26128) * C50850) *
                       C50937 * C50759) *
                      C50808 * C51085 +
                  (((C26125 + C26124 + C26123) * C1731 -
                    ((C25758 + C25757 + C25756) * C1728 +
                     (C25755 + C25754 + C25753) * C1730) +
                    (C26128 + C26127 + C26126) * C50850) *
                       C50937 * C25711 +
                   ((C26129 + C26130 + C26131) * C1731 -
                    ((C25759 + C25760 + C25761) * C1728 +
                     (C25762 + C25763 + C25764) * C1730) +
                    (C26132 + C26133 + C26134) * C50850) *
                       C50937 * C50759) *
                      C50808 * C51071 +
                  (((C25764 + C25763 + C25762) * C1730 +
                    (C25761 + C25760 + C25759) * C1728 -
                    (C26131 + C26130 + C26129) * C1731 -
                    (C26134 + C26133 + C26132) * C50850) *
                       C50937 * C25711 +
                   ((C25765 + C25766 + C25767) * C1730 +
                    (C25768 + C25769 + C25770) * C1728 -
                    (C25715 * C871 + C25710 * C886 + C25714 * C867 +
                     C51080 * C878 + C25713 * C463 + C51088 * C472) *
                        C1731 -
                    (C25715 * C887 + C25710 * C895 + C25714 * C879 +
                     C51080 * C891 + C25713 * C473 + C51088 * C481) *
                        C50850) *
                       C50937 * C50759) *
                      C50808 * C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C1730 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C1728 -
                     (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                      C51080 * C872 + C25713 * C460 + C51088 * C466) *
                         C1731 -
                     (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                      C51080 * C888 + C25713 * C467 + C51088 * C478) *
                         C50850) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C1730 +
                     (C25756 + C25757 + C25758) * C1728 -
                     (C26123 + C26124 + C26125) * C1731 -
                     (C26126 + C26127 + C26128) * C50850) *
                        C50937 * C50759) *
                       C51040 +
                   (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                      C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                         C1731 -
                     ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                       C51080 * C650 + C25713 * C310 + C51088 * C319) *
                          C1728 +
                      (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                       C51080 * C640 + C25713 * C301 + C51088 * C311) *
                          C1730) +
                     (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                      C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                         C50850) *
                        C50937 * C25711 +
                    ((C27449 + C27450 + C27451) * C1731 -
                     ((C25941 + C25942 + C25943) * C1728 +
                      (C25944 + C25945 + C25946) * C1730) +
                     (C27452 + C27453 + C27454) * C50850) *
                        C50937 * C50759) *
                       C50824) *
                      C1464 +
                  ((((C26125 + C26124 + C26123) * C1731 -
                     ((C25758 + C25757 + C25756) * C1728 +
                      (C25755 + C25754 + C25753) * C1730) +
                     (C26128 + C26127 + C26126) * C50850) *
                        C50937 * C25711 +
                    ((C26129 + C26130 + C26131) * C1731 -
                     ((C25759 + C25760 + C25761) * C1728 +
                      (C25762 + C25763 + C25764) * C1730) +
                     (C26132 + C26133 + C26134) * C50850) *
                        C50937 * C50759) *
                       C51040 +
                   (((C25946 + C25945 + C25944) * C1730 +
                     (C25943 + C25942 + C25941) * C1728 -
                     (C27451 + C27450 + C27449) * C1731 -
                     (C27454 + C27453 + C27452) * C50850) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C1730 +
                     (C25950 + C25951 + C25952) * C1728 -
                     (C25715 * C3319 + C25710 * C3324 + C25714 * C870 +
                      C51080 * C884 + C25713 * C866 + C51088 * C876) *
                         C1731 -
                     (C25715 * C3325 + C25710 * C3328 + C25714 * C885 +
                      C51080 * C894 + C25713 * C877 + C51088 * C890) *
                         C50850) *
                        C50937 * C50759) *
                       C50824) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1999 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51087 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C2000 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C51077 +
                    (C25713 * C1000 + C51088 * C1005 + C25714 * C1154 +
                     C51080 * C1158 + C25715 * C3645 + C25710 * C3648) *
                        C2001 +
                    (C25713 * C1006 + C51088 * C1015 + C25714 * C1159 +
                     C51080 * C1166 + C25715 * C3649 + C25710 * C3654) *
                        C1998) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C1999 +
                    (C25756 + C25757 + C25758) * C51087 -
                    (C26123 + C26124 + C26125) * C2000 -
                    (C26126 + C26127 + C26128) * C51077 +
                    (C26701 + C26702 + C26703) * C2001 +
                    (C26704 + C26705 + C26706) * C1998) *
                       C50937 * C50759) *
                      C50808 * C1464 +
                  (((C26125 + C26124 + C26123) * C2000 -
                    ((C25758 + C25757 + C25756) * C51087 +
                     (C25755 + C25754 + C25753) * C1999) +
                    (C26128 + C26127 + C26126) * C51077 -
                    (C26703 + C26702 + C26701) * C2001 -
                    (C26706 + C26705 + C26704) * C1998) *
                       C50937 * C25711 +
                   ((C26129 + C26130 + C26131) * C2000 -
                    ((C25759 + C25760 + C25761) * C51087 +
                     (C25762 + C25763 + C25764) * C1999) +
                    (C26132 + C26133 + C26134) * C51077 -
                    (C25715 * C3647 + C25710 * C3652 + C25714 * C1156 +
                     C51080 * C1162 + C25713 * C1002 + C51088 * C1009) *
                        C2001 -
                    (C25715 * C3653 + C25710 * C3656 + C25714 * C1163 +
                     C51080 * C1168 + C25713 * C1010 + C51088 * C1017) *
                        C1998) *
                       C50937 * C50759) *
                      C50808 * C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C118 +
                    (C25756 + C25757 + C25758) * C50838) *
                       C50937 * C50759) *
                      C50808 * C113 -
                  (((C25759 + C25760 + C25761) * C50838 +
                    (C25762 + C25763 + C25764) * C118) *
                       C50937 * C50759 +
                   ((C25758 + C25757 + C25756) * C50838 +
                    (C25755 + C25754 + C25753) * C118) *
                       C50937 * C25711) *
                      C50808 * C114 +
                  (((C25764 + C25763 + C25762) * C118 +
                    (C25761 + C25760 + C25759) * C50838) *
                       C50937 * C25711 +
                   ((C25765 + C25766 + C25767) * C118 +
                    (C25768 + C25769 + C25770) * C50838) *
                       C50937 * C50759) *
                      C50808 * C115 -
                  (((C25715 * C648 + C25710 * C654 + C25714 * C313 +
                     C51080 * C320 + C25713 * C134 + C51088 * C144) *
                        C50838 +
                    (C25715 * C639 + C25710 * C649 + C25714 * C302 +
                     C51080 * C312 + C25713 * C123 + C51088 * C135) *
                        C118) *
                       C50937 * C50759 +
                   ((C25770 + C25769 + C25768) * C50838 +
                    (C25767 + C25766 + C25765) * C118) *
                       C50937 * C25711) *
                      C50808 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C118 +
                     (C25756 + C25757 + C25758) * C50838) *
                        C50937 * C50759) *
                       C630 -
                   (((C25941 + C25942 + C25943) * C50838 +
                     (C25944 + C25945 + C25946) * C118) *
                        C50937 * C50759 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C50937 * C25711) *
                       C631 +
                   (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                      C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                         C118 +
                     (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                      C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                         C50838) *
                        C50937 * C25711 +
                    ((C26293 + C26294 + C26295) * C118 +
                     (C26296 + C26297 + C26298) * C50838) *
                        C50937 * C50759) *
                       C632) *
                      C51033 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C118 +
                     (C25950 + C25951 + C25952) * C50838) *
                        C50937 * C50759) *
                       C631 -
                   (((C25759 + C25760 + C25761) * C50838 +
                     (C25762 + C25763 + C25764) * C118) *
                        C50937 * C50759 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C50937 * C25711) *
                       C630 -
                   (((C25715 * C3162 + C25710 * C3168 + C25714 * C756 +
                      C51080 * C763 + C25713 * C645 + C51088 * C652) *
                         C50838 +
                     (C25715 * C3159 + C25710 * C3163 + C25714 * C751 +
                      C51080 * C757 + C25713 * C637 + C51088 * C644) *
                         C118) *
                        C50937 * C50759 +
                    ((C26298 + C26297 + C26296) * C50838 +
                     (C26295 + C26294 + C26293) * C118) *
                        C50937 * C25711) *
                       C632) *
                      C50781)) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C50937 * C25711 +
                    ((C25753 + C25754 + C25755) * C118 +
                     (C25756 + C25757 + C25758) * C50838) *
                        C50937 * C50759) *
                       C51040 -
                   (((C25941 + C25942 + C25943) * C50838 +
                     (C25944 + C25945 + C25946) * C118) *
                        C50937 * C50759 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C50937 * C25711) *
                       C50824) *
                      C295 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C50937 * C25711 +
                    ((C25947 + C25948 + C25949) * C118 +
                     (C25950 + C25951 + C25952) * C50838) *
                        C50937 * C50759) *
                       C50824 -
                   (((C25759 + C25760 + C25761) * C50838 +
                     (C25762 + C25763 + C25764) * C118) *
                        C50937 * C50759 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C50937 * C25711) *
                       C51040) *
                      C296 +
                  ((((C25764 + C25763 + C25762) * C118 +
                     (C25761 + C25760 + C25759) * C50838) *
                        C50937 * C25711 +
                    ((C25765 + C25766 + C25767) * C118 +
                     (C25768 + C25769 + C25770) * C50838) *
                        C50937 * C50759) *
                       C51040 -
                   (((C25715 * C754 + C25710 * C762 + C25714 * C647 +
                      C51080 * C653 + C25713 * C304 + C51088 * C316) *
                         C50838 +
                     (C25715 * C750 + C25710 * C755 + C25714 * C638 +
                      C51080 * C646 + C25713 * C298 + C51088 * C305) *
                         C118) *
                        C50937 * C50759 +
                    ((C25952 + C25951 + C25950) * C50838 +
                     (C25949 + C25948 + C25947) * C118) *
                        C50937 * C25711) *
                       C50824) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C118 +
                    (C25756 + C25757 + C25758) * C50838) *
                       C50937 * C50759) *
                      C745 -
                  (((C25941 + C25942 + C25943) * C50838 +
                    (C25944 + C25945 + C25946) * C118) *
                       C50937 * C50759 +
                   ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                     C51080 * C650 + C25713 * C310 + C51088 * C319) *
                        C50838 +
                    (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                     C51080 * C640 + C25713 * C301 + C51088 * C311) *
                        C118) *
                       C50937 * C25711) *
                      C746 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C118 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C50838) *
                       C50937 * C25711 +
                   ((C26293 + C26294 + C26295) * C118 +
                    (C26296 + C26297 + C26298) * C50838) *
                       C50937 * C50759) *
                      C747 -
                  (((C25715 * C8865 + C25710 * C8869 + C25714 * C3164 +
                     C51080 * C3169 + C25713 * C758 + C51088 * C764) *
                        C50838 +
                    (C25715 * C8863 + C25710 * C8866 + C25714 * C3160 +
                     C51080 * C3165 + C25713 * C752 + C51088 * C759) *
                        C118) *
                       C50937 * C50759 +
                   ((C25715 * C8867 + C25710 * C8870 + C25714 * C3166 +
                     C51080 * C3170 + C25713 * C760 + C51088 * C765) *
                        C50838 +
                    (C25715 * C8864 + C25710 * C8868 + C25714 * C3161 +
                     C51080 * C3167 + C25713 * C753 + C51088 * C761) *
                        C118) *
                       C50937 * C25711) *
                      C748) *
                 C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C459 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C458 +
                    (C25756 + C25757 + C25758) * C51042 -
                    (C26123 + C26124 + C26125) * C459 -
                    (C26126 + C26127 + C26128) * C50850) *
                       C50937 * C50759) *
                      C50808 * C295 +
                  (((C26125 + C26124 + C26123) * C459 -
                    ((C25758 + C25757 + C25756) * C51042 +
                     (C25755 + C25754 + C25753) * C458) +
                    (C26128 + C26127 + C26126) * C50850) *
                       C50937 * C25711 +
                   ((C26129 + C26130 + C26131) * C459 -
                    ((C25759 + C25760 + C25761) * C51042 +
                     (C25762 + C25763 + C25764) * C458) +
                    (C26132 + C26133 + C26134) * C50850) *
                       C50937 * C50759) *
                      C50808 * C296 +
                  (((C25764 + C25763 + C25762) * C458 +
                    (C25761 + C25760 + C25759) * C51042 -
                    (C26131 + C26130 + C26129) * C459 -
                    (C26134 + C26133 + C26132) * C50850) *
                       C50937 * C25711 +
                   ((C25765 + C25766 + C25767) * C458 +
                    (C25768 + C25769 + C25770) * C51042 -
                    (C25715 * C871 + C25710 * C886 + C25714 * C867 +
                     C51080 * C878 + C25713 * C463 + C51088 * C472) *
                        C459 -
                    (C25715 * C887 + C25710 * C895 + C25714 * C879 +
                     C51080 * C891 + C25713 * C473 + C51088 * C481) *
                        C50850) *
                       C50937 * C50759) *
                      C50808 * C297)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C25715 * C868 + C25710 * C880 + C25714 * C864 +
                     C51080 * C872 + C25713 * C460 + C51088 * C466) *
                        C459 -
                    (C25715 * C881 + C25710 * C892 + C25714 * C873 +
                     C51080 * C888 + C25713 * C467 + C51088 * C478) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25753 + C25754 + C25755) * C458 +
                    (C25756 + C25757 + C25758) * C51042 -
                    (C26123 + C26124 + C26125) * C459 -
                    (C26126 + C26127 + C26128) * C50850) *
                       C50937 * C50759) *
                      C630 +
                  (((C25713 * C864 + C51088 * C872 + C25714 * C868 +
                     C51080 * C880 + C25715 * C3317 + C25710 * C3320) *
                        C459 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C51042 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C458) +
                    (C25713 * C873 + C51088 * C888 + C25714 * C881 +
                     C51080 * C892 + C25715 * C3321 + C25710 * C3326) *
                        C50850) *
                       C50937 * C25711 +
                   ((C25713 * C865 + C51088 * C874 + C25714 * C869 +
                     C51080 * C882 + C25715 * C3318 + C25710 * C3322) *
                        C459 -
                    ((C25941 + C25942 + C25943) * C51042 +
                     (C25944 + C25945 + C25946) * C458) +
                    (C25713 * C875 + C51088 * C889 + C25714 * C883 +
                     C51080 * C893 + C25715 * C3323 + C25710 * C3327) *
                        C50850) *
                       C50937 * C50759) *
                      C631 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C458 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C51042 -
                    (C25715 * C9017 + C25710 * C9019 + C25714 * C3317 +
                     C51080 * C3320 + C25713 * C868 + C51088 * C880) *
                        C459 -
                    (C25715 * C9020 + C25710 * C9023 + C25714 * C3321 +
                     C51080 * C3326 + C25713 * C881 + C51088 * C892) *
                        C50850) *
                       C50937 * C25711 +
                   ((C26293 + C26294 + C26295) * C458 +
                    (C26296 + C26297 + C26298) * C51042 -
                    (C25715 * C9018 + C25710 * C9021 + C25714 * C3318 +
                     C51080 * C3322 + C25713 * C869 + C51088 * C882) *
                        C459 -
                    (C25715 * C9022 + C25710 * C9024 + C25714 * C3323 +
                     C51080 * C3327 + C25713 * C883 + C51088 * C893) *
                        C50850) *
                       C50937 * C50759) *
                      C632) *
                 C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C51055 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C25711 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C1358 -
           ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C51055) *
                C25711) *
               C50824) *
              C51085 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51055 +
             ((C24623 + C24624) * C118 + (C24625 + C24626) * C50838) * C50949) *
                C25711 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C51055 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
                C25711) *
               C1358) *
              C51071 +
          (((C22909 * C51055 + (C28957 * C118 + C28958 * C50838) * C50949) *
                C25711 +
            (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C51055 +
             ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
                C50759) *
               C1358 -
           ((((C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                  C50838 +
              (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                  C118) *
                 C50949 +
             ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C51055) *
                C50759 +
            (((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C50949 +
             C23099 * C51055) *
                C25711) *
               C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C51055 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C25711 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C51086 -
           ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C51055) *
                C25711) *
               C51074 +
           ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                  C118 +
              (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                  C50838) *
                 C51055 +
             ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C50949) *
                C25711 +
            (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C51055 +
             ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
                C50759) *
               C1463) *
              C1464 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51055 +
             ((C24623 + C24624) * C118 + (C24625 + C24626) * C50838) * C50949) *
                C25711 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C51055 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C51074 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
                C25711) *
               C51086 -
           ((((C22851 * C3325 + C50923 * C3328 + C22850 * C885 +
               C22845 * C894) *
                  C50838 +
              (C22851 * C3319 + C50923 * C3324 + C22850 * C870 +
               C22845 * C884) *
                  C118) *
                 C50949 +
             ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C51055) *
                C50759 +
            (((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C50949 +
             ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C51055) *
                C25711) *
               C1463) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C458 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C51042 -
              (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                 C51055 +
             ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
              (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                 C50949) *
                C25711 +
            (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
              C28953 * C459 - C28954 * C50850) *
                 C51055 +
             (C28955 * C458 + C28956 * C51042 - C29721 * C459 -
              C29722 * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C29509 + C29510) * C459 -
              ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                   C51042 +
               (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                   C458) +
              (C29511 + C29512) * C50850) *
                 C51055 +
             ((C29950 + C29949) * C459 -
              ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
              (C29952 + C29951) * C50850) *
                 C50949) *
                C25711 +
            ((C30745 * C459 -
              ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
              C30746 * C50850) *
                 C51055 +
             ((C29954 + C29953) * C459 - (C30747 * C51042 + C30748 * C458) +
              (C29956 + C29955) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C1464 +
          ((((C28955 * C459 -
              ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
              C28956 * C50850) *
                 C51055 +
             (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
              C29720 * C50850) *
                 C50949) *
                C25711 +
            ((C28957 * C459 -
              ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
              C28958 * C50850) *
                 C51055 +
             ((C23873 + C23874) * C459 - (C23287 * C51042 + C23286 * C458) +
              (C23875 + C23876) * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C23090 + C23089) * C458 + (C23088 + C23087) * C51042 -
              C30748 * C459 - C30747 * C50850) *
                 C51055 +
             (C30745 * C458 + C30746 * C51042 - (C29953 + C29954) * C459 -
              (C29955 + C29956) * C50850) *
                 C50949) *
                C25711 +
            (((C23086 + C23085) * C458 + (C23084 + C23083) * C51042 -
              (C24628 + C24627) * C459 - (C24630 + C24629) * C50850) *
                 C51055 +
             ((C24627 + C24628) * C458 + (C24629 + C24630) * C51042 -
              (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
               C22845 * C1162) *
                  C459 -
              (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
               C22845 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C1730 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C1728 -
              (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                 C51055 +
             ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
              (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                 C50949) *
                C25711 +
            (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
              C28953 * C1731 - C28954 * C50850) *
                 C51055 +
             (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
              C29722 * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C29509 + C29510) * C1731 -
              ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                   C1728 +
               (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                   C1730) +
              (C29511 + C29512) * C50850) *
                 C51055 +
             ((C29950 + C29949) * C1731 -
              ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
              (C29952 + C29951) * C50850) *
                 C50949) *
                C25711 +
            ((C30745 * C1731 -
              ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
              C30746 * C50850) *
                 C51055 +
             ((C29954 + C29953) * C1731 - (C30747 * C1728 + C30748 * C1730) +
              (C29956 + C29955) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C51033 +
          ((((C28955 * C1731 -
              ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
              C28956 * C50850) *
                 C51055 +
             (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
              C29720 * C50850) *
                 C50949) *
                C25711 +
            ((C28957 * C1731 -
              ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
              C28958 * C50850) *
                 C51055 +
             ((C23873 + C23874) * C1731 - (C23287 * C1728 + C23286 * C1730) +
              (C23875 + C23876) * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
              C30748 * C1731 - C30747 * C50850) *
                 C51055 +
             (C30745 * C1730 + C30746 * C1728 - (C29953 + C29954) * C1731 -
              (C29955 + C29956) * C50850) *
                 C50949) *
                C25711 +
            (((C23086 + C23085) * C1730 + (C23084 + C23083) * C1728 -
              (C24628 + C24627) * C1731 - (C24630 + C24629) * C50850) *
                 C51055 +
             ((C24627 + C24628) * C1730 + (C24629 + C24630) * C1728 -
              (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
               C22845 * C1162) *
                  C1731 -
              (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
               C22845 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                C51055 +
            ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
             (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
             C28953 * C1731 - C28954 * C50850) *
                C51055 +
            (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C51086 +
          ((((C29509 + C29510) * C1731 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C1728 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1730) +
             (C29511 + C29512) * C50850) *
                C51055 +
            ((C29950 + C29949) * C1731 -
             ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
             (C29952 + C29951) * C50850) *
                C50949) *
               C25711 +
           ((C30745 * C1731 -
             ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
             C30746 * C50850) *
                C51055 +
            ((C29954 + C29953) * C1731 - (C30747 * C1728 + C30748 * C1730) +
             (C29956 + C29955) * C50850) *
                C50949) *
               C50759) *
              C51074 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C1730 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C1728 -
             (C29513 + C29514) * C1731 - (C29515 + C29516) * C50850) *
                C51055 +
            ((C29514 + C29513) * C1730 + (C29516 + C29515) * C1728 -
             (C22851 * C9335 + C50923 * C9337 + C22850 * C3645 +
              C22845 * C3648) *
                 C1731 -
             (C22851 * C9338 + C50923 * C9341 + C22850 * C3649 +
              C22845 * C3654) *
                 C50850) *
                C50949) *
               C25711 +
           (((C23455 + C23456) * C1730 + (C23457 + C23458) * C1728 -
             (C29166 + C29165) * C1731 - (C29168 + C29167) * C50850) *
                C51055 +
            ((C29165 + C29166) * C1730 + (C29167 + C29168) * C1728 -
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C1731 -
             (C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1999 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51087 -
             (C28959 + C28960) * C2000 - (C28961 + C28962) * C51077 +
             (C29731 + C29732) * C2001 + (C29733 + C29734) * C1998) *
                C51055 +
            ((C28960 + C28959) * C1999 + (C28962 + C28961) * C51087 -
             (C29732 + C29731) * C2000 - (C29734 + C29733) * C51077 +
             (C30096 + C30095) * C2001 + (C30098 + C30097) * C1998) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C1999 + (C22887 + C22888) * C51087 -
             C28953 * C2000 - C28954 * C51077 + C29719 * C2001 +
             C29720 * C1998) *
                C51055 +
            (C28955 * C1999 + C28956 * C51087 - C29721 * C2000 -
             C29722 * C51077 + (C29735 + C29736) * C2001 +
             (C29737 + C29738) * C1998) *
                C50949) *
               C50759) *
              C1358 +
          ((((C29509 + C29510) * C2000 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51087 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1999) +
             (C29511 + C29512) * C51077 - (C29949 + C29950) * C2001 -
             (C29951 + C29952) * C1998) *
                C51055 +
            ((C29950 + C29949) * C2000 -
             ((C29512 + C29511) * C51087 + (C29510 + C29509) * C1999) +
             (C29952 + C29951) * C51077 -
             (C22851 * C9441 + C50923 * C9443 + C22850 * C3755 +
              C22845 * C3758) *
                 C2001 -
             (C22851 * C9444 + C50923 * C9447 + C22850 * C3759 +
              C22845 * C3764) *
                 C1998) *
                C50949) *
               C25711 +
           ((C30745 * C2000 -
             ((C23087 + C23088) * C51087 + (C23089 + C23090) * C1999) +
             C30746 * C51077 - (C29953 + C29954) * C2001 -
             (C29955 + C29956) * C1998) *
                C51055 +
            ((C29954 + C29953) * C2000 - (C30747 * C51087 + C30748 * C1999) +
             (C29956 + C29955) * C51077 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C2001 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C1998) *
                C50949) *
               C50759) *
              C50824) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C51055 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C25711 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C630 -
           ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
                C50759 +
            (((C22851 * C881 + C50923 * C892 + C22850 * C873 + C22845 * C888) *
                  C50838 +
              (C22851 * C868 + C50923 * C880 + C22850 * C864 + C22845 * C872) *
                  C118) *
                 C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C51055) *
                C25711) *
               C631 +
           ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                  C118 +
              (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                  C50838) *
                 C51055 +
             ((C22850 * C868 + C22845 * C880 + C22851 * C3317 +
               C50923 * C3320) *
                  C118 +
              (C22850 * C881 + C22845 * C892 + C22851 * C3321 +
               C50923 * C3326) *
                  C50838) *
                 C50949) *
                C25711 +
            (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C51055 +
             ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
                C50759) *
               C632) *
              C51033 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51055 +
             ((C24623 + C24624) * C118 + (C24625 + C24626) * C50838) * C50949) *
                C25711 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C51055 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C631 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
                C25711) *
               C630 -
           ((((C22851 * C3325 + C50923 * C3328 + C22850 * C885 +
               C22845 * C894) *
                  C50838 +
              (C22851 * C3319 + C50923 * C3324 + C22850 * C870 +
               C22845 * C884) *
                  C118) *
                 C50949 +
             ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C51055) *
                C50759 +
            (((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C50949 +
             ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C51055) *
                C25711) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51055 +
            ((C22850 * C460 + C22845 * C466 + C22851 * C864 + C50923 * C872) *
                 C118 +
             (C22850 * C467 + C22845 * C478 + C22851 * C873 + C50923 * C888) *
                 C50838) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
            ((C23274 + C23273) * C118 + (C23276 + C23275) * C50838) * C50949) *
               C50759) *
              C50808 * C113 -
          (((C23287 * C50838 + C23286 * C118) * C50949 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
               C50759 +
           (((C23275 + C23276) * C50838 + (C23273 + C23274) * C118) * C50949 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
               C25711) *
              C50808 * C114 +
          ((C22909 * C51055 +
            ((C23279 + C23278) * C118 + (C23281 + C23280) * C50838) * C50949) *
               C25711 +
           (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C51055 +
            ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
               C50759) *
              C50808 * C115 -
          ((((C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                 C50838 +
             (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                 C118) *
                C50949 +
            ((C22900 + C22899) * C50838 + (C22898 + C22897) * C118) * C51055) *
               C50759 +
           (((C23285 + C23284) * C50838 + (C23283 + C23282) * C118) * C50949 +
            C22910 * C51055) *
               C25711) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C997 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C994 -
             (C28959 + C28960) * C998 - (C28961 + C28962) * C995 +
             (C29731 + C29732) * C999 + (C29733 + C29734) * C996) *
                C51055 +
            ((C28960 + C28959) * C997 + (C28962 + C28961) * C994 -
             (C29732 + C29731) * C998 - (C29734 + C29733) * C995 +
             (C22850 * C1244 + C22845 * C1248 + C22851 * C3755 +
              C50923 * C3758) *
                 C999 +
             (C22850 * C1249 + C22845 * C1256 + C22851 * C3759 +
              C50923 * C3764) *
                 C996) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C997 + (C22887 + C22888) * C994 -
             C28953 * C998 - C28954 * C995 + C29719 * C999 + C29720 * C996) *
                C51055 +
            (C28955 * C997 + C28956 * C994 - C29721 * C998 - C29722 * C995 +
             (C29735 + C29736) * C999 + (C29737 + C29738) * C996) *
                C50949) *
               C50759) *
              C50808 * C51033 +
          (((C28955 * C998 -
             ((C22888 + C22887) * C994 + (C22886 + C22885) * C997) +
             C28956 * C995 - C29721 * C999 - C29722 * C996) *
                C51055 +
            (C29719 * C998 - (C28954 * C994 + C28953 * C997) + C29720 * C995 -
             (C29736 + C29735) * C999 - (C29738 + C29737) * C996) *
                C50949) *
               C25711 +
           ((C28957 * C998 -
             ((C22892 + C22891) * C994 + (C22890 + C22889) * C997) +
             C28958 * C995 - (C23874 + C23873) * C999 -
             (C23876 + C23875) * C996) *
                C51055 +
            ((C23873 + C23874) * C998 - (C23287 * C994 + C23286 * C997) +
             (C23875 + C23876) * C995 -
             (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
              C22845 * C1252) *
                 C999 -
             (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
              C22845 * C1258) *
                 C996) *
                C50949) *
               C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51055 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
               C25711 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
            (C28955 * C118 + C28956 * C50838) * C50949) *
               C50759) *
              C745 -
          ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
               C50759 +
           (((C22851 * C881 + C50923 * C892 + C22850 * C873 + C22845 * C888) *
                 C50838 +
             (C22851 * C868 + C50923 * C880 + C22850 * C864 + C22845 * C872) *
                 C118) *
                C50949 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51055) *
               C25711) *
              C746 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C51055 +
            ((C22850 * C868 + C22845 * C880 + C22851 * C3317 + C50923 * C3320) *
                 C118 +
             (C22850 * C881 + C22845 * C892 + C22851 * C3321 + C50923 * C3326) *
                 C50838) *
                C50949) *
               C25711 +
           (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C51055 +
            ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
               C50759) *
              C747 -
          ((((C22851 * C9022 + C50923 * C9024 + C22850 * C3323 +
              C22845 * C3327) *
                 C50838 +
             (C22851 * C9018 + C50923 * C9021 + C22850 * C3318 +
              C22845 * C3322) *
                 C118) *
                C50949 +
            ((C22851 * C3164 + C50923 * C3169 + C22850 * C758 + C22845 * C764) *
                 C50838 +
             (C22851 * C3160 + C50923 * C3165 + C22850 * C752 + C22845 * C759) *
                 C118) *
                C51055) *
               C50759 +
           (((C22851 * C9020 + C50923 * C9023 + C22850 * C3321 +
              C22845 * C3326) *
                 C50838 +
             (C22851 * C9017 + C50923 * C9019 + C22850 * C3317 +
              C22845 * C3320) *
                 C118) *
                C50949 +
            ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                 C50838 +
             (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                 C118) *
                C51055) *
               C25711) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C51055 +
             ((C22850 * C460 + C22845 * C466 + C22851 * C864 + C50923 * C872) *
                  C118 +
              (C22850 * C467 + C22845 * C478 + C22851 * C873 + C50923 * C888) *
                  C50838) *
                 C50949) *
                C25711 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
             ((C23274 + C23273) * C118 + (C23276 + C23275) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
                C50759 +
            (((C22851 * C881 + C50923 * C892 + C22850 * C873 + C22845 * C888) *
                  C50838 +
              (C22851 * C868 + C50923 * C880 + C22850 * C864 + C22845 * C872) *
                  C118) *
                 C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C51055) *
                C25711) *
               C50824) *
              C295 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51055 +
             ((C24623 + C24624) * C118 + (C24625 + C24626) * C50838) * C50949) *
                C25711 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C51055 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
                C50759 +
            (((C23275 + C23276) * C50838 + (C23273 + C23274) * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
                C25711) *
               C51040) *
              C296 +
          (((C22909 * C51055 +
             ((C23279 + C23278) * C118 + (C23281 + C23280) * C50838) * C50949) *
                C25711 +
            (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C51055 +
             ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                  C50838 +
              (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                  C118) *
                 C50949 +
             ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C51055) *
                C50759 +
            (((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C50949 +
             C23099 * C51055) *
                C25711) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C997 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C994 -
             (C28959 + C28960) * C998 - (C28961 + C28962) * C995 +
             (C29731 + C29732) * C999 + (C29733 + C29734) * C996) *
                C51055 +
            ((C28960 + C28959) * C997 + (C28962 + C28961) * C994 -
             (C29732 + C29731) * C998 - (C29734 + C29733) * C995 +
             (C22850 * C1244 + C22845 * C1248 + C22851 * C3755 +
              C50923 * C3758) *
                 C999 +
             (C22850 * C1249 + C22845 * C1256 + C22851 * C3759 +
              C50923 * C3764) *
                 C996) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C997 + (C22887 + C22888) * C994 -
             C28953 * C998 - C28954 * C995 + C29719 * C999 + C29720 * C996) *
                C51055 +
            (C28955 * C997 + C28956 * C994 - C29721 * C998 - C29722 * C995 +
             (C29735 + C29736) * C999 + (C29737 + C29738) * C996) *
                C50949) *
               C50759) *
              C51040 +
          ((((C29509 + C29510) * C998 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C994 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C997) +
             (C29511 + C29512) * C995 - (C29949 + C29950) * C999 -
             (C29951 + C29952) * C996) *
                C51055 +
            ((C29950 + C29949) * C998 -
             ((C29512 + C29511) * C994 + (C29510 + C29509) * C997) +
             (C29952 + C29951) * C995 -
             (C22851 * C9441 + C50923 * C9443 + C22850 * C3755 +
              C22845 * C3758) *
                 C999 -
             (C22851 * C9444 + C50923 * C9447 + C22850 * C3759 +
              C22845 * C3764) *
                 C996) *
                C50949) *
               C25711 +
           (((C24623 + C24624) * C998 -
             ((C23087 + C23088) * C994 + (C23089 + C23090) * C997) +
             (C24625 + C24626) * C995 - (C29953 + C29954) * C999 -
             (C29955 + C29956) * C996) *
                C51055 +
            ((C29954 + C29953) * C998 -
             ((C24626 + C24625) * C994 + (C24624 + C24623) * C997) +
             (C29956 + C29955) * C995 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C999 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C996) *
                C50949) *
               C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C51055 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C22851 * C1154 + C50923 * C1158 + C22850 * C1000 +
              C22845 * C1005) *
                 C459 -
             (C22851 * C1159 + C50923 * C1166 + C22850 * C1006 +
              C22845 * C1015) *
                 C50850) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C51055 +
            (C28955 * C458 + C28956 * C51042 - (C23870 + C23869) * C459 -
             (C23872 + C23871) * C50850) *
                C50949) *
               C50759) *
              C630 +
          ((((C29509 + C29510) * C459 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51042 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C458) +
             (C29511 + C29512) * C50850) *
                C51055 +
            ((C22850 * C1154 + C22845 * C1158 + C22851 * C3645 +
              C50923 * C3648) *
                 C459 -
             ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
             (C22850 * C1159 + C22845 * C1166 + C22851 * C3649 +
              C50923 * C3654) *
                 C50850) *
                C50949) *
               C25711 +
           (((C24623 + C24624) * C459 -
             ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
             (C24625 + C24626) * C50850) *
                C51055 +
            ((C22850 * C1155 + C22845 * C1160 + C22851 * C3646 +
              C50923 * C3650) *
                 C459 -
             ((C24626 + C24625) * C51042 + (C24624 + C24623) * C458) +
             (C22850 * C1161 + C22845 * C1167 + C22851 * C3651 +
              C50923 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C631 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C458 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C51042 -
             (C29513 + C29514) * C459 - (C29515 + C29516) * C50850) *
                C51055 +
            ((C29514 + C29513) * C458 + (C29516 + C29515) * C51042 -
             (C22851 * C9335 + C50923 * C9337 + C22850 * C3645 +
              C22845 * C3648) *
                 C459 -
             (C22851 * C9338 + C50923 * C9341 + C22850 * C3649 +
              C22845 * C3654) *
                 C50850) *
                C50949) *
               C25711 +
           (((C23455 + C23456) * C458 + (C23457 + C23458) * C51042 -
             (C29166 + C29165) * C459 - (C29168 + C29167) * C50850) *
                C51055 +
            ((C29165 + C29166) * C458 + (C29167 + C29168) * C51042 -
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C459 -
             (C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C51055 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C22851 * C1154 + C50923 * C1158 + C22850 * C1000 +
              C22845 * C1005) *
                 C459 -
             (C22851 * C1159 + C50923 * C1166 + C22850 * C1006 +
              C22845 * C1015) *
                 C50850) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C51055 +
            (C28955 * C458 + C28956 * C51042 - (C23870 + C23869) * C459 -
             (C23872 + C23871) * C50850) *
                C50949) *
               C50759) *
              C50808 * C295 +
          (((C28955 * C459 -
             ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
             C28956 * C50850) *
                C51055 +
            ((C23869 + C23870) * C459 - (C28954 * C51042 + C28953 * C458) +
             (C23871 + C23872) * C50850) *
                C50949) *
               C25711 +
           ((C28957 * C459 -
             ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
             C28958 * C50850) *
                C51055 +
            ((C23873 + C23874) * C459 - (C23287 * C51042 + C23286 * C458) +
             (C23875 + C23876) * C50850) *
                C50949) *
               C50759) *
              C50808 * C296 +
          ((C23291 * C51055 +
            (C28957 * C458 + C28958 * C51042 - (C23874 + C23873) * C459 -
             (C23876 + C23875) * C50850) *
                C50949) *
               C25711 +
           (((C22896 + C22895) * C458 + (C22894 + C22893) * C51042 -
             (C23283 + C23282) * C459 - (C23285 + C23284) * C50850) *
                C51055 +
            ((C23282 + C23283) * C458 + (C23284 + C23285) * C51042 -
             (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
              C22845 * C1011) *
                 C459 -
             (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
              C22845 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1240 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C1236 -
            (C28959 + C28960) * C1241 - (C28961 + C28962) * C1237 +
            (C29731 + C29732) * C1242 + (C29733 + C29734) * C1238 -
            (C30095 + C30096) * C1243 - (C30097 + C30098) * C1239) *
               C51055 +
           ((C28960 + C28959) * C1240 + (C28962 + C28961) * C1236 -
            (C29732 + C29731) * C1241 - (C29734 + C29733) * C1237 +
            (C30096 + C30095) * C1242 + (C30098 + C30097) * C1238 -
            (C22851 * C13975 + C50923 * C13977 + C22850 * C6555 +
             C22845 * C6558) *
                C1243 -
            (C22851 * C13979 + C50923 * C13981 + C22850 * C6559 +
             C22845 * C6564) *
                C1239) *
               C50949) *
              C25711 +
          (((C22885 + C22886) * C1240 + (C22887 + C22888) * C1236 -
            C28953 * C1241 - C28954 * C1237 + C29719 * C1242 + C29720 * C1238 -
            (C29736 + C29735) * C1243 - (C29738 + C29737) * C1239) *
               C51055 +
           (C28955 * C1240 + C28956 * C1236 - C29721 * C1241 - C29722 * C1237 +
            (C29735 + C29736) * C1242 + (C29737 + C29738) * C1238 -
            (C22851 * C16577 + C50923 * C16578 + C22850 * C6556 +
             C22845 * C6560) *
                C1243 -
            (C22851 * C16579 + C50923 * C16580 + C22850 * C6561 +
             C22845 * C6565) *
                C1239) *
               C50949) *
              C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                C51055 +
            ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
             (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
             C28953 * C1731 - C28954 * C50850) *
                C51055 +
            (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C50808 * C51085 +
          (((C28955 * C1731 -
             ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
             C28956 * C50850) *
                C51055 +
            (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
             C29720 * C50850) *
                C50949) *
               C25711 +
           ((C28957 * C1731 -
             ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
             C28958 * C50850) *
                C51055 +
            ((C23873 + C23874) * C1731 - (C23287 * C1728 + C23286 * C1730) +
             (C23875 + C23876) * C50850) *
                C50949) *
               C50759) *
              C50808 * C51071 +
          ((C24783 * C51055 +
            (C28957 * C1730 + C28958 * C1728 - (C23874 + C23873) * C1731 -
             (C23876 + C23875) * C50850) *
                C50949) *
               C25711 +
           (((C22896 + C22895) * C1730 + (C22894 + C22893) * C1728 -
             (C23283 + C23282) * C1731 - (C23285 + C23284) * C50850) *
                C51055 +
            ((C23282 + C23283) * C1730 + (C23284 + C23285) * C1728 -
             (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
              C22845 * C1011) *
                 C1731 -
             (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
              C22845 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C1730 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C1728 -
              (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                 C51055 +
             ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
              (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                 C50949) *
                C25711 +
            (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
              C28953 * C1731 - C28954 * C50850) *
                 C51055 +
             (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
              C29722 * C50850) *
                 C50949) *
                C50759) *
               C51040 +
           ((((C29509 + C29510) * C1731 -
              ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                   C1728 +
               (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                   C1730) +
              (C29511 + C29512) * C50850) *
                 C51055 +
             ((C29950 + C29949) * C1731 -
              ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
              (C29952 + C29951) * C50850) *
                 C50949) *
                C25711 +
            ((C30745 * C1731 -
              ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
              C30746 * C50850) *
                 C51055 +
             ((C29954 + C29953) * C1731 - (C30747 * C1728 + C30748 * C1730) +
              (C29956 + C29955) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C1464 +
          ((((C28955 * C1731 -
              ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
              C28956 * C50850) *
                 C51055 +
             (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
              C29720 * C50850) *
                 C50949) *
                C25711 +
            ((C28957 * C1731 -
              ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
              C28958 * C50850) *
                 C51055 +
             ((C23873 + C23874) * C1731 - (C23287 * C1728 + C23286 * C1730) +
              (C23875 + C23876) * C50850) *
                 C50949) *
                C50759) *
               C51040 +
           ((((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
              C30748 * C1731 - C30747 * C50850) *
                 C51055 +
             (C30745 * C1730 + C30746 * C1728 - (C29953 + C29954) * C1731 -
              (C29955 + C29956) * C50850) *
                 C50949) *
                C25711 +
            (((C23086 + C23085) * C1730 + (C23084 + C23083) * C1728 -
              (C24628 + C24627) * C1731 - (C24630 + C24629) * C50850) *
                 C51055 +
             ((C24627 + C24628) * C1730 + (C24629 + C24630) * C1728 -
              (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
               C22845 * C1162) *
                  C1731 -
              (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
               C22845 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1999 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51087 -
             (C28959 + C28960) * C2000 - (C28961 + C28962) * C51077 +
             (C29731 + C29732) * C2001 + (C29733 + C29734) * C1998) *
                C51055 +
            ((C28960 + C28959) * C1999 + (C28962 + C28961) * C51087 -
             (C29732 + C29731) * C2000 - (C29734 + C29733) * C51077 +
             (C30096 + C30095) * C2001 + (C30098 + C30097) * C1998) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C1999 + (C22887 + C22888) * C51087 -
             C28953 * C2000 - C28954 * C51077 + C29719 * C2001 +
             C29720 * C1998) *
                C51055 +
            (C28955 * C1999 + C28956 * C51087 - C29721 * C2000 -
             C29722 * C51077 + (C29735 + C29736) * C2001 +
             (C29737 + C29738) * C1998) *
                C50949) *
               C50759) *
              C50808 * C1464 +
          (((C28955 * C2000 -
             ((C22888 + C22887) * C51087 + (C22886 + C22885) * C1999) +
             C28956 * C51077 - C29721 * C2001 - C29722 * C1998) *
                C51055 +
            (C29719 * C2000 - (C28954 * C51087 + C28953 * C1999) +
             C29720 * C51077 - (C29736 + C29735) * C2001 -
             (C29738 + C29737) * C1998) *
                C50949) *
               C25711 +
           ((C28957 * C2000 -
             ((C22892 + C22891) * C51087 + (C22890 + C22889) * C1999) +
             C28958 * C51077 - (C23874 + C23873) * C2001 -
             (C23876 + C23875) * C1998) *
                C51055 +
            ((C23873 + C23874) * C2000 - (C23287 * C51087 + C23286 * C1999) +
             (C23875 + C23876) * C51077 -
             (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
              C22845 * C1252) *
                 C2001 -
             (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
              C22845 * C1258) *
                 C1998) *
                C50949) *
               C50759) *
              C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51055 +
            ((C22850 * C460 + C22845 * C466 + C22851 * C864 + C50923 * C872) *
                 C118 +
             (C22850 * C467 + C22845 * C478 + C22851 * C873 + C50923 * C888) *
                 C50838) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
            ((C23274 + C23273) * C118 + (C23276 + C23275) * C50838) * C50949) *
               C50759) *
              C50808 * C113 -
          (((C23287 * C50838 + C23286 * C118) * C50949 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
               C50759 +
           (((C23275 + C23276) * C50838 + (C23273 + C23274) * C118) * C50949 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
               C25711) *
              C50808 * C114 +
          ((C22909 * C51055 +
            ((C23279 + C23278) * C118 + (C23281 + C23280) * C50838) * C50949) *
               C25711 +
           (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C51055 +
            ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
               C50759) *
              C50808 * C115 -
          ((((C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                 C50838 +
             (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                 C118) *
                C50949 +
            ((C22900 + C22899) * C50838 + (C22898 + C22897) * C118) * C51055) *
               C50759 +
           (((C23285 + C23284) * C50838 + (C23283 + C23282) * C118) * C50949 +
            C22910 * C51055) *
               C25711) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C51055 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C25711 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C630 -
           ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
                C50759 +
            (((C22851 * C881 + C50923 * C892 + C22850 * C873 + C22845 * C888) *
                  C50838 +
              (C22851 * C868 + C50923 * C880 + C22850 * C864 + C22845 * C872) *
                  C118) *
                 C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C51055) *
                C25711) *
               C631 +
           ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                  C118 +
              (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                  C50838) *
                 C51055 +
             ((C22850 * C868 + C22845 * C880 + C22851 * C3317 +
               C50923 * C3320) *
                  C118 +
              (C22850 * C881 + C22845 * C892 + C22851 * C3321 +
               C50923 * C3326) *
                  C50838) *
                 C50949) *
                C25711 +
            (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C51055 +
             ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
                C50759) *
               C632) *
              C51033 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51055 +
             ((C24623 + C24624) * C118 + (C24625 + C24626) * C50838) * C50949) *
                C25711 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C51055 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C631 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
                C25711) *
               C630 -
           ((((C22851 * C3325 + C50923 * C3328 + C22850 * C885 +
               C22845 * C894) *
                  C50838 +
              (C22851 * C3319 + C50923 * C3324 + C22850 * C870 +
               C22845 * C884) *
                  C118) *
                 C50949 +
             ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C51055) *
                C50759 +
            (((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C50949 +
             ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C51055) *
                C25711) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C51055 +
             ((C22850 * C460 + C22845 * C466 + C22851 * C864 + C50923 * C872) *
                  C118 +
              (C22850 * C467 + C22845 * C478 + C22851 * C873 + C50923 * C888) *
                  C50838) *
                 C50949) *
                C25711 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
             ((C23274 + C23273) * C118 + (C23276 + C23275) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
                C50759 +
            (((C22851 * C881 + C50923 * C892 + C22850 * C873 + C22845 * C888) *
                  C50838 +
              (C22851 * C868 + C50923 * C880 + C22850 * C864 + C22845 * C872) *
                  C118) *
                 C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C51055) *
                C25711) *
               C50824) *
              C295 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51055 +
             ((C24623 + C24624) * C118 + (C24625 + C24626) * C50838) * C50949) *
                C25711 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C51055 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C51055) *
                C50759 +
            (((C23275 + C23276) * C50838 + (C23273 + C23274) * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51055) *
                C25711) *
               C51040) *
              C296 +
          (((C22909 * C51055 +
             ((C23279 + C23278) * C118 + (C23281 + C23280) * C50838) * C50949) *
                C25711 +
            (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C51055 +
             ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                  C50838 +
              (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                  C118) *
                 C50949 +
             ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C51055) *
                C50759 +
            (((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C50949 +
             C23099 * C51055) *
                C25711) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51055 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
               C25711 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C51055 +
            (C28955 * C118 + C28956 * C50838) * C50949) *
               C50759) *
              C745 -
          ((((C24626 + C24625) * C50838 + (C24624 + C24623) * C118) * C50949 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C51055) *
               C50759 +
           (((C22851 * C881 + C50923 * C892 + C22850 * C873 + C22845 * C888) *
                 C50838 +
             (C22851 * C868 + C50923 * C880 + C22850 * C864 + C22845 * C872) *
                 C118) *
                C50949 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51055) *
               C25711) *
              C746 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C51055 +
            ((C22850 * C868 + C22845 * C880 + C22851 * C3317 + C50923 * C3320) *
                 C118 +
             (C22850 * C881 + C22845 * C892 + C22851 * C3321 + C50923 * C3326) *
                 C50838) *
                C50949) *
               C25711 +
           (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C51055 +
            ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
               C50759) *
              C747 -
          ((((C22851 * C9022 + C50923 * C9024 + C22850 * C3323 +
              C22845 * C3327) *
                 C50838 +
             (C22851 * C9018 + C50923 * C9021 + C22850 * C3318 +
              C22845 * C3322) *
                 C118) *
                C50949 +
            ((C22851 * C3164 + C50923 * C3169 + C22850 * C758 + C22845 * C764) *
                 C50838 +
             (C22851 * C3160 + C50923 * C3165 + C22850 * C752 + C22845 * C759) *
                 C118) *
                C51055) *
               C50759 +
           (((C22851 * C9020 + C50923 * C9023 + C22850 * C3321 +
              C22845 * C3326) *
                 C50838 +
             (C22851 * C9017 + C50923 * C9019 + C22850 * C3317 +
              C22845 * C3320) *
                 C118) *
                C50949 +
            ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                 C50838 +
             (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                 C118) *
                C51055) *
               C25711) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C51055 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C22851 * C1154 + C50923 * C1158 + C22850 * C1000 +
              C22845 * C1005) *
                 C459 -
             (C22851 * C1159 + C50923 * C1166 + C22850 * C1006 +
              C22845 * C1015) *
                 C50850) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C51055 +
            (C28955 * C458 + C28956 * C51042 - (C23870 + C23869) * C459 -
             (C23872 + C23871) * C50850) *
                C50949) *
               C50759) *
              C50808 * C295 +
          (((C28955 * C459 -
             ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
             C28956 * C50850) *
                C51055 +
            ((C23869 + C23870) * C459 - (C28954 * C51042 + C28953 * C458) +
             (C23871 + C23872) * C50850) *
                C50949) *
               C25711 +
           ((C28957 * C459 -
             ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
             C28958 * C50850) *
                C51055 +
            ((C23873 + C23874) * C459 - (C23287 * C51042 + C23286 * C458) +
             (C23875 + C23876) * C50850) *
                C50949) *
               C50759) *
              C50808 * C296 +
          ((C23291 * C51055 +
            (C28957 * C458 + C28958 * C51042 - (C23874 + C23873) * C459 -
             (C23876 + C23875) * C50850) *
                C50949) *
               C25711 +
           (((C22896 + C22895) * C458 + (C22894 + C22893) * C51042 -
             (C23283 + C23282) * C459 - (C23285 + C23284) * C50850) *
                C51055 +
            ((C23282 + C23283) * C458 + (C23284 + C23285) * C51042 -
             (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
              C22845 * C1011) *
                 C459 -
             (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
              C22845 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C51055 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C22851 * C1154 + C50923 * C1158 + C22850 * C1000 +
              C22845 * C1005) *
                 C459 -
             (C22851 * C1159 + C50923 * C1166 + C22850 * C1006 +
              C22845 * C1015) *
                 C50850) *
                C50949) *
               C25711 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C51055 +
            (C28955 * C458 + C28956 * C51042 - (C23870 + C23869) * C459 -
             (C23872 + C23871) * C50850) *
                C50949) *
               C50759) *
              C630 +
          ((((C29509 + C29510) * C459 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51042 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C458) +
             (C29511 + C29512) * C50850) *
                C51055 +
            ((C22850 * C1154 + C22845 * C1158 + C22851 * C3645 +
              C50923 * C3648) *
                 C459 -
             ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
             (C22850 * C1159 + C22845 * C1166 + C22851 * C3649 +
              C50923 * C3654) *
                 C50850) *
                C50949) *
               C25711 +
           (((C24623 + C24624) * C459 -
             ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
             (C24625 + C24626) * C50850) *
                C51055 +
            ((C22850 * C1155 + C22845 * C1160 + C22851 * C3646 +
              C50923 * C3650) *
                 C459 -
             ((C24626 + C24625) * C51042 + (C24624 + C24623) * C458) +
             (C22850 * C1161 + C22845 * C1167 + C22851 * C3651 +
              C50923 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C631 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C458 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C51042 -
             (C29513 + C29514) * C459 - (C29515 + C29516) * C50850) *
                C51055 +
            ((C29514 + C29513) * C458 + (C29516 + C29515) * C51042 -
             (C22851 * C9335 + C50923 * C9337 + C22850 * C3645 +
              C22845 * C3648) *
                 C459 -
             (C22851 * C9338 + C50923 * C9341 + C22850 * C3649 +
              C22845 * C3654) *
                 C50850) *
                C50949) *
               C25711 +
           (((C23455 + C23456) * C458 + (C23457 + C23458) * C51042 -
             (C29166 + C29165) * C459 - (C29168 + C29167) * C50850) *
                C51055 +
            ((C29165 + C29166) * C458 + (C29167 + C29168) * C51042 -
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C459 -
             (C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C51026 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C1358 -
           (((C30747 * C50838 + C30748 * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C32138) *
                C51026) *
               C50824) *
              C51085 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C32138 +
             (C30745 * C118 + C30746 * C50838) * C50949) *
                C51026 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C32138 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
                C51026) *
               C1358) *
              C51071 +
          (((C22909 * C32138 + (C28957 * C118 + C28958 * C50838) * C50949) *
                C51026 +
            (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C32138 +
             ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
                C50759) *
               C1358 -
           ((((C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                  C50838 +
              (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                  C118) *
                 C50949 +
             ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C32138) *
                C50759 +
            (((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C50949 +
             C23099 * C32138) *
                C51026) *
               C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C51026 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C51086 -
           (((C30747 * C50838 + C30748 * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C32138) *
                C51026) *
               C51074 +
           ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                  C118 +
              (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                  C50838) *
                 C32138 +
             ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C50949) *
                C51026 +
            (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C32138 +
             ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
                C50759) *
               C1463) *
              C1464 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C32138 +
             (C30745 * C118 + C30746 * C50838) * C50949) *
                C51026 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C32138 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C51074 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
                C51026) *
               C51086 -
           ((((C22851 * C3325 + C50923 * C3328 + C22850 * C885 +
               C22845 * C894) *
                  C50838 +
              (C22851 * C3319 + C50923 * C3324 + C22850 * C870 +
               C22845 * C884) *
                  C118) *
                 C50949 +
             ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C32138) *
                C50759 +
            (((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C50949 +
             ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C32138) *
                C51026) *
               C1463) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C458 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C51042 -
              (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                 C32138 +
             ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
              (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                 C50949) *
                C51026 +
            (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
              C28953 * C459 - C28954 * C50850) *
                 C32138 +
             (C28955 * C458 + C28956 * C51042 - C29721 * C459 -
              C29722 * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C29509 + C29510) * C459 -
              ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                   C51042 +
               (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                   C458) +
              (C29511 + C29512) * C50850) *
                 C32138 +
             ((C29950 + C29949) * C459 -
              ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
              (C29952 + C29951) * C50850) *
                 C50949) *
                C51026 +
            ((C30745 * C459 -
              ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
              C30746 * C50850) *
                 C32138 +
             ((C29954 + C29953) * C459 - (C30747 * C51042 + C30748 * C458) +
              (C29956 + C29955) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C1464 +
          ((((C28955 * C459 -
              ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
              C28956 * C50850) *
                 C32138 +
             (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
              C29720 * C50850) *
                 C50949) *
                C51026 +
            ((C28957 * C459 -
              ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
              C28958 * C50850) *
                 C32138 +
             ((C23873 + C23874) * C459 - (C23287 * C51042 + C23286 * C458) +
              (C23875 + C23876) * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C23090 + C23089) * C458 + (C23088 + C23087) * C51042 -
              C30748 * C459 - C30747 * C50850) *
                 C32138 +
             (C30745 * C458 + C30746 * C51042 - (C29953 + C29954) * C459 -
              (C29955 + C29956) * C50850) *
                 C50949) *
                C51026 +
            (((C23086 + C23085) * C458 + (C23084 + C23083) * C51042 -
              (C24628 + C24627) * C459 - (C24630 + C24629) * C50850) *
                 C32138 +
             ((C24627 + C24628) * C458 + (C24629 + C24630) * C51042 -
              (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
               C22845 * C1162) *
                  C459 -
              (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
               C22845 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C1730 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C1728 -
              (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                 C32138 +
             ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
              (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                 C50949) *
                C51026 +
            (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
              C28953 * C1731 - C28954 * C50850) *
                 C32138 +
             (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
              C29722 * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C29509 + C29510) * C1731 -
              ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                   C1728 +
               (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                   C1730) +
              (C29511 + C29512) * C50850) *
                 C32138 +
             ((C29950 + C29949) * C1731 -
              ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
              (C29952 + C29951) * C50850) *
                 C50949) *
                C51026 +
            ((C30745 * C1731 -
              ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
              C30746 * C50850) *
                 C32138 +
             ((C29954 + C29953) * C1731 - (C30747 * C1728 + C30748 * C1730) +
              (C29956 + C29955) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C51033 +
          ((((C28955 * C1731 -
              ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
              C28956 * C50850) *
                 C32138 +
             (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
              C29720 * C50850) *
                 C50949) *
                C51026 +
            ((C28957 * C1731 -
              ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
              C28958 * C50850) *
                 C32138 +
             ((C23873 + C23874) * C1731 - (C23287 * C1728 + C23286 * C1730) +
              (C23875 + C23876) * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
              C30748 * C1731 - C30747 * C50850) *
                 C32138 +
             (C30745 * C1730 + C30746 * C1728 - (C29953 + C29954) * C1731 -
              (C29955 + C29956) * C50850) *
                 C50949) *
                C51026 +
            (((C23086 + C23085) * C1730 + (C23084 + C23083) * C1728 -
              (C24628 + C24627) * C1731 - (C24630 + C24629) * C50850) *
                 C32138 +
             ((C24627 + C24628) * C1730 + (C24629 + C24630) * C1728 -
              (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
               C22845 * C1162) *
                  C1731 -
              (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
               C22845 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                C32138 +
            ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
             (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
             C28953 * C1731 - C28954 * C50850) *
                C32138 +
            (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C51086 +
          ((((C29509 + C29510) * C1731 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C1728 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1730) +
             (C29511 + C29512) * C50850) *
                C32138 +
            ((C29950 + C29949) * C1731 -
             ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
             (C29952 + C29951) * C50850) *
                C50949) *
               C51026 +
           ((C30745 * C1731 -
             ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
             C30746 * C50850) *
                C32138 +
            ((C29954 + C29953) * C1731 - (C30747 * C1728 + C30748 * C1730) +
             (C29956 + C29955) * C50850) *
                C50949) *
               C50759) *
              C51074 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C1730 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C1728 -
             (C29513 + C29514) * C1731 - (C29515 + C29516) * C50850) *
                C32138 +
            ((C29514 + C29513) * C1730 + (C29516 + C29515) * C1728 -
             (C22851 * C9335 + C50923 * C9337 + C22850 * C3645 +
              C22845 * C3648) *
                 C1731 -
             (C22851 * C9338 + C50923 * C9341 + C22850 * C3649 +
              C22845 * C3654) *
                 C50850) *
                C50949) *
               C51026 +
           (((C23455 + C23456) * C1730 + (C23457 + C23458) * C1728 -
             (C29166 + C29165) * C1731 - (C29168 + C29167) * C50850) *
                C32138 +
            ((C29165 + C29166) * C1730 + (C29167 + C29168) * C1728 -
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C1731 -
             (C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1999 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51087 -
             (C28959 + C28960) * C2000 - (C28961 + C28962) * C51077 +
             (C29731 + C29732) * C2001 + (C29733 + C29734) * C1998) *
                C32138 +
            ((C28960 + C28959) * C1999 + (C28962 + C28961) * C51087 -
             (C29732 + C29731) * C2000 - (C29734 + C29733) * C51077 +
             (C30096 + C30095) * C2001 + (C30098 + C30097) * C1998) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C1999 + (C22887 + C22888) * C51087 -
             C28953 * C2000 - C28954 * C51077 + C29719 * C2001 +
             C29720 * C1998) *
                C32138 +
            (C28955 * C1999 + C28956 * C51087 - C29721 * C2000 -
             C29722 * C51077 + (C29735 + C29736) * C2001 +
             (C29737 + C29738) * C1998) *
                C50949) *
               C50759) *
              C1358 +
          ((((C29509 + C29510) * C2000 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51087 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1999) +
             (C29511 + C29512) * C51077 - (C29949 + C29950) * C2001 -
             (C29951 + C29952) * C1998) *
                C32138 +
            ((C29950 + C29949) * C2000 -
             ((C29512 + C29511) * C51087 + (C29510 + C29509) * C1999) +
             (C29952 + C29951) * C51077 -
             (C22851 * C9441 + C50923 * C9443 + C22850 * C3755 +
              C22845 * C3758) *
                 C2001 -
             (C22851 * C9444 + C50923 * C9447 + C22850 * C3759 +
              C22845 * C3764) *
                 C1998) *
                C50949) *
               C51026 +
           ((C30745 * C2000 -
             ((C23087 + C23088) * C51087 + (C23089 + C23090) * C1999) +
             C30746 * C51077 - (C29953 + C29954) * C2001 -
             (C29955 + C29956) * C1998) *
                C32138 +
            ((C29954 + C29953) * C2000 - (C30747 * C51087 + C30748 * C1999) +
             (C29956 + C29955) * C51077 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C2001 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C1998) *
                C50949) *
               C50759) *
              C50824) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C51026 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C630 -
           (((C30747 * C50838 + C30748 * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C32138) *
                C51026) *
               C631 +
           ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                  C118 +
              (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                  C50838) *
                 C32138 +
             ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C50949) *
                C51026 +
            (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C32138 +
             ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
                C50759) *
               C632) *
              C51033 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C32138 +
             (C30745 * C118 + C30746 * C50838) * C50949) *
                C51026 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C32138 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C631 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
                C51026) *
               C630 -
           ((((C22851 * C3325 + C50923 * C3328 + C22850 * C885 +
               C22845 * C894) *
                  C50838 +
              (C22851 * C3319 + C50923 * C3324 + C22850 * C870 +
               C22845 * C884) *
                  C118) *
                 C50949 +
             ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C32138) *
                C50759 +
            (((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C50949 +
             ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C32138) *
                C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
               C51026 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
            (C28955 * C118 + C28956 * C50838) * C50949) *
               C50759) *
              C50808 * C113 -
          (((C23287 * C50838 + C23286 * C118) * C50949 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
               C50759 +
           ((C28954 * C50838 + C28953 * C118) * C50949 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
               C51026) *
              C50808 * C114 +
          ((C22909 * C32138 + (C28957 * C118 + C28958 * C50838) * C50949) *
               C51026 +
           (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C32138 +
            ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
               C50759) *
              C50808 * C115 -
          ((((C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                 C50838 +
             (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                 C118) *
                C50949 +
            ((C22900 + C22899) * C50838 + (C22898 + C22897) * C118) * C32138) *
               C50759 +
           (((C23285 + C23284) * C50838 + (C23283 + C23282) * C118) * C50949 +
            C22910 * C32138) *
               C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C997 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C994 -
             (C28959 + C28960) * C998 - (C28961 + C28962) * C995 +
             (C29731 + C29732) * C999 + (C29733 + C29734) * C996) *
                C32138 +
            ((C28960 + C28959) * C997 + (C28962 + C28961) * C994 -
             (C29732 + C29731) * C998 - (C29734 + C29733) * C995 +
             (C30096 + C30095) * C999 + (C30098 + C30097) * C996) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C997 + (C22887 + C22888) * C994 -
             C28953 * C998 - C28954 * C995 + C29719 * C999 + C29720 * C996) *
                C32138 +
            (C28955 * C997 + C28956 * C994 - C29721 * C998 - C29722 * C995 +
             (C29735 + C29736) * C999 + (C29737 + C29738) * C996) *
                C50949) *
               C50759) *
              C50808 * C51033 +
          (((C28955 * C998 -
             ((C22888 + C22887) * C994 + (C22886 + C22885) * C997) +
             C28956 * C995 - C29721 * C999 - C29722 * C996) *
                C32138 +
            (C29719 * C998 - (C28954 * C994 + C28953 * C997) + C29720 * C995 -
             (C29736 + C29735) * C999 - (C29738 + C29737) * C996) *
                C50949) *
               C51026 +
           ((C28957 * C998 -
             ((C22892 + C22891) * C994 + (C22890 + C22889) * C997) +
             C28958 * C995 - (C23874 + C23873) * C999 -
             (C23876 + C23875) * C996) *
                C32138 +
            ((C23873 + C23874) * C998 - (C23287 * C994 + C23286 * C997) +
             (C23875 + C23876) * C995 -
             (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
              C22845 * C1252) *
                 C999 -
             (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
              C22845 * C1258) *
                 C996) *
                C50949) *
               C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
               C51026 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
            (C28955 * C118 + C28956 * C50838) * C50949) *
               C50759) *
              C745 -
          (((C30747 * C50838 + C30748 * C118) * C50949 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
               C50759 +
           (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C32138) *
               C51026) *
              C746 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C32138 +
            ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C50949) *
               C51026 +
           (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C32138 +
            ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
               C50759) *
              C747 -
          ((((C22851 * C9022 + C50923 * C9024 + C22850 * C3323 +
              C22845 * C3327) *
                 C50838 +
             (C22851 * C9018 + C50923 * C9021 + C22850 * C3318 +
              C22845 * C3322) *
                 C118) *
                C50949 +
            ((C22851 * C3164 + C50923 * C3169 + C22850 * C758 + C22845 * C764) *
                 C50838 +
             (C22851 * C3160 + C50923 * C3165 + C22850 * C752 + C22845 * C759) *
                 C118) *
                C32138) *
               C50759 +
           (((C22851 * C9020 + C50923 * C9023 + C22850 * C3321 +
              C22845 * C3326) *
                 C50838 +
             (C22851 * C9017 + C50923 * C9019 + C22850 * C3317 +
              C22845 * C3320) *
                 C118) *
                C50949 +
            ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                 C50838 +
             (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                 C118) *
                C32138) *
               C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C51026 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C51040 -
           (((C30747 * C50838 + C30748 * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C32138) *
                C51026) *
               C50824) *
              C295 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C32138 +
             (C30745 * C118 + C30746 * C50838) * C50949) *
                C51026 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C32138 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
                C51026) *
               C51040) *
              C296 +
          (((C22909 * C32138 + (C28957 * C118 + C28958 * C50838) * C50949) *
                C51026 +
            (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C32138 +
             ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                  C50838 +
              (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                  C118) *
                 C50949 +
             ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C32138) *
                C50759 +
            (((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C50949 +
             C23099 * C32138) *
                C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C997 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C994 -
             (C28959 + C28960) * C998 - (C28961 + C28962) * C995 +
             (C29731 + C29732) * C999 + (C29733 + C29734) * C996) *
                C32138 +
            ((C28960 + C28959) * C997 + (C28962 + C28961) * C994 -
             (C29732 + C29731) * C998 - (C29734 + C29733) * C995 +
             (C30096 + C30095) * C999 + (C30098 + C30097) * C996) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C997 + (C22887 + C22888) * C994 -
             C28953 * C998 - C28954 * C995 + C29719 * C999 + C29720 * C996) *
                C32138 +
            (C28955 * C997 + C28956 * C994 - C29721 * C998 - C29722 * C995 +
             (C29735 + C29736) * C999 + (C29737 + C29738) * C996) *
                C50949) *
               C50759) *
              C51040 +
          ((((C29509 + C29510) * C998 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C994 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C997) +
             (C29511 + C29512) * C995 - (C29949 + C29950) * C999 -
             (C29951 + C29952) * C996) *
                C32138 +
            ((C29950 + C29949) * C998 -
             ((C29512 + C29511) * C994 + (C29510 + C29509) * C997) +
             (C29952 + C29951) * C995 -
             (C22851 * C9441 + C50923 * C9443 + C22850 * C3755 +
              C22845 * C3758) *
                 C999 -
             (C22851 * C9444 + C50923 * C9447 + C22850 * C3759 +
              C22845 * C3764) *
                 C996) *
                C50949) *
               C51026 +
           ((C30745 * C998 -
             ((C23087 + C23088) * C994 + (C23089 + C23090) * C997) +
             C30746 * C995 - (C29953 + C29954) * C999 -
             (C29955 + C29956) * C996) *
                C32138 +
            ((C29954 + C29953) * C998 - (C30747 * C994 + C30748 * C997) +
             (C29956 + C29955) * C995 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C999 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C996) *
                C50949) *
               C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C32138 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C32138 +
            (C28955 * C458 + C28956 * C51042 - C29721 * C459 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C630 +
          ((((C29509 + C29510) * C459 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51042 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C458) +
             (C29511 + C29512) * C50850) *
                C32138 +
            ((C29950 + C29949) * C459 -
             ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
             (C29952 + C29951) * C50850) *
                C50949) *
               C51026 +
           ((C30745 * C459 -
             ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
             C30746 * C50850) *
                C32138 +
            ((C29954 + C29953) * C459 - (C30747 * C51042 + C30748 * C458) +
             (C29956 + C29955) * C50850) *
                C50949) *
               C50759) *
              C631 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C458 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C51042 -
             (C29513 + C29514) * C459 - (C29515 + C29516) * C50850) *
                C32138 +
            ((C29514 + C29513) * C458 + (C29516 + C29515) * C51042 -
             (C22851 * C9335 + C50923 * C9337 + C22850 * C3645 +
              C22845 * C3648) *
                 C459 -
             (C22851 * C9338 + C50923 * C9341 + C22850 * C3649 +
              C22845 * C3654) *
                 C50850) *
                C50949) *
               C51026 +
           (((C23455 + C23456) * C458 + (C23457 + C23458) * C51042 -
             (C29166 + C29165) * C459 - (C29168 + C29167) * C50850) *
                C32138 +
            ((C29165 + C29166) * C458 + (C29167 + C29168) * C51042 -
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C459 -
             (C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C32138 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C32138 +
            (C28955 * C458 + C28956 * C51042 - C29721 * C459 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C50808 * C295 +
          (((C28955 * C459 -
             ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
             C28956 * C50850) *
                C32138 +
            (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
             C29720 * C50850) *
                C50949) *
               C51026 +
           ((C28957 * C459 -
             ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
             C28958 * C50850) *
                C32138 +
            ((C23873 + C23874) * C459 - (C23287 * C51042 + C23286 * C458) +
             (C23875 + C23876) * C50850) *
                C50949) *
               C50759) *
              C50808 * C296 +
          ((C23291 * C32138 +
            (C28957 * C458 + C28958 * C51042 - (C23874 + C23873) * C459 -
             (C23876 + C23875) * C50850) *
                C50949) *
               C51026 +
           (((C22896 + C22895) * C458 + (C22894 + C22893) * C51042 -
             (C23283 + C23282) * C459 - (C23285 + C23284) * C50850) *
                C32138 +
            ((C23282 + C23283) * C458 + (C23284 + C23285) * C51042 -
             (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
              C22845 * C1011) *
                 C459 -
             (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
              C22845 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1240 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C1236 -
            (C28959 + C28960) * C1241 - (C28961 + C28962) * C1237 +
            (C29731 + C29732) * C1242 + (C29733 + C29734) * C1238 -
            (C30095 + C30096) * C1243 - (C30097 + C30098) * C1239) *
               C32138 +
           ((C28960 + C28959) * C1240 + (C28962 + C28961) * C1236 -
            (C29732 + C29731) * C1241 - (C29734 + C29733) * C1237 +
            (C30096 + C30095) * C1242 + (C30098 + C30097) * C1238 -
            (C22851 * C13975 + C50923 * C13977 + C22850 * C6555 +
             C22845 * C6558) *
                C1243 -
            (C22851 * C13979 + C50923 * C13981 + C22850 * C6559 +
             C22845 * C6564) *
                C1239) *
               C50949) *
              C51026 +
          (((C22885 + C22886) * C1240 + (C22887 + C22888) * C1236 -
            C28953 * C1241 - C28954 * C1237 + C29719 * C1242 + C29720 * C1238 -
            (C29736 + C29735) * C1243 - (C29738 + C29737) * C1239) *
               C32138 +
           (C28955 * C1240 + C28956 * C1236 - C29721 * C1241 - C29722 * C1237 +
            (C29735 + C29736) * C1242 + (C29737 + C29738) * C1238 -
            (C22851 * C16577 + C50923 * C16578 + C22850 * C6556 +
             C22845 * C6560) *
                C1243 -
            (C22851 * C16579 + C50923 * C16580 + C22850 * C6561 +
             C22845 * C6565) *
                C1239) *
               C50949) *
              C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                C32138 +
            ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
             (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
             C28953 * C1731 - C28954 * C50850) *
                C32138 +
            (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C50808 * C51085 +
          (((C28955 * C1731 -
             ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
             C28956 * C50850) *
                C32138 +
            (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
             C29720 * C50850) *
                C50949) *
               C51026 +
           ((C28957 * C1731 -
             ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
             C28958 * C50850) *
                C32138 +
            ((C23873 + C23874) * C1731 - (C23287 * C1728 + C23286 * C1730) +
             (C23875 + C23876) * C50850) *
                C50949) *
               C50759) *
              C50808 * C51071 +
          ((C24783 * C32138 +
            (C28957 * C1730 + C28958 * C1728 - (C23874 + C23873) * C1731 -
             (C23876 + C23875) * C50850) *
                C50949) *
               C51026 +
           (((C22896 + C22895) * C1730 + (C22894 + C22893) * C1728 -
             (C23283 + C23282) * C1731 - (C23285 + C23284) * C50850) *
                C32138 +
            ((C23282 + C23283) * C1730 + (C23284 + C23285) * C1728 -
             (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
              C22845 * C1011) *
                 C1731 -
             (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
              C22845 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C1730 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C1728 -
              (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                 C32138 +
             ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
              (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                 C50949) *
                C51026 +
            (((C22885 + C22886) * C1730 + (C22887 + C22888) * C1728 -
              C28953 * C1731 - C28954 * C50850) *
                 C32138 +
             (C28955 * C1730 + C28956 * C1728 - C29721 * C1731 -
              C29722 * C50850) *
                 C50949) *
                C50759) *
               C51040 +
           ((((C29509 + C29510) * C1731 -
              ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                   C1728 +
               (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                   C1730) +
              (C29511 + C29512) * C50850) *
                 C32138 +
             ((C29950 + C29949) * C1731 -
              ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
              (C29952 + C29951) * C50850) *
                 C50949) *
                C51026 +
            ((C30745 * C1731 -
              ((C23087 + C23088) * C1728 + (C23089 + C23090) * C1730) +
              C30746 * C50850) *
                 C32138 +
             ((C29954 + C29953) * C1731 - (C30747 * C1728 + C30748 * C1730) +
              (C29956 + C29955) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C1464 +
          ((((C28955 * C1731 -
              ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
              C28956 * C50850) *
                 C32138 +
             (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
              C29720 * C50850) *
                 C50949) *
                C51026 +
            ((C28957 * C1731 -
              ((C22892 + C22891) * C1728 + (C22890 + C22889) * C1730) +
              C28958 * C50850) *
                 C32138 +
             ((C23873 + C23874) * C1731 - (C23287 * C1728 + C23286 * C1730) +
              (C23875 + C23876) * C50850) *
                 C50949) *
                C50759) *
               C51040 +
           ((((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
              C30748 * C1731 - C30747 * C50850) *
                 C32138 +
             (C30745 * C1730 + C30746 * C1728 - (C29953 + C29954) * C1731 -
              (C29955 + C29956) * C50850) *
                 C50949) *
                C51026 +
            (((C23086 + C23085) * C1730 + (C23084 + C23083) * C1728 -
              (C24628 + C24627) * C1731 - (C24630 + C24629) * C50850) *
                 C32138 +
             ((C24627 + C24628) * C1730 + (C24629 + C24630) * C1728 -
              (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
               C22845 * C1162) *
                  C1731 -
              (C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
               C22845 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1999 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51087 -
             (C28959 + C28960) * C2000 - (C28961 + C28962) * C51077 +
             (C29731 + C29732) * C2001 + (C29733 + C29734) * C1998) *
                C32138 +
            ((C28960 + C28959) * C1999 + (C28962 + C28961) * C51087 -
             (C29732 + C29731) * C2000 - (C29734 + C29733) * C51077 +
             (C30096 + C30095) * C2001 + (C30098 + C30097) * C1998) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C1999 + (C22887 + C22888) * C51087 -
             C28953 * C2000 - C28954 * C51077 + C29719 * C2001 +
             C29720 * C1998) *
                C32138 +
            (C28955 * C1999 + C28956 * C51087 - C29721 * C2000 -
             C29722 * C51077 + (C29735 + C29736) * C2001 +
             (C29737 + C29738) * C1998) *
                C50949) *
               C50759) *
              C50808 * C1464 +
          (((C28955 * C2000 -
             ((C22888 + C22887) * C51087 + (C22886 + C22885) * C1999) +
             C28956 * C51077 - C29721 * C2001 - C29722 * C1998) *
                C32138 +
            (C29719 * C2000 - (C28954 * C51087 + C28953 * C1999) +
             C29720 * C51077 - (C29736 + C29735) * C2001 -
             (C29738 + C29737) * C1998) *
                C50949) *
               C51026 +
           ((C28957 * C2000 -
             ((C22892 + C22891) * C51087 + (C22890 + C22889) * C1999) +
             C28958 * C51077 - (C23874 + C23873) * C2001 -
             (C23876 + C23875) * C1998) *
                C32138 +
            ((C23873 + C23874) * C2000 - (C23287 * C51087 + C23286 * C1999) +
             (C23875 + C23876) * C51077 -
             (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
              C22845 * C1252) *
                 C2001 -
             (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
              C22845 * C1258) *
                 C1998) *
                C50949) *
               C50759) *
              C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
               C51026 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
            (C28955 * C118 + C28956 * C50838) * C50949) *
               C50759) *
              C50808 * C113 -
          (((C23287 * C50838 + C23286 * C118) * C50949 +
            ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
               C50759 +
           ((C28954 * C50838 + C28953 * C118) * C50949 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
               C51026) *
              C50808 * C114 +
          ((C22909 * C32138 + (C28957 * C118 + C28958 * C50838) * C50949) *
               C51026 +
           (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C32138 +
            ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
               C50759) *
              C50808 * C115 -
          ((((C22851 * C1598 + C50923 * C1599 + C22850 * C475 + C22845 * C482) *
                 C50838 +
             (C22851 * C1596 + C50923 * C1597 + C22850 * C464 + C22845 * C474) *
                 C118) *
                C50949 +
            ((C22900 + C22899) * C50838 + (C22898 + C22897) * C118) * C32138) *
               C50759 +
           (((C23285 + C23284) * C50838 + (C23283 + C23282) * C118) * C50949 +
            C22910 * C32138) *
               C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C51026 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C630 -
           (((C30747 * C50838 + C30748 * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C32138) *
                C51026) *
               C631 +
           ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                  C118 +
              (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                  C50838) *
                 C32138 +
             ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C50949) *
                C51026 +
            (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C32138 +
             ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
                C50759) *
               C632) *
              C51033 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C32138 +
             (C30745 * C118 + C30746 * C50838) * C50949) *
                C51026 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C32138 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C631 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
                C51026) *
               C630 -
           ((((C22851 * C3325 + C50923 * C3328 + C22850 * C885 +
               C22845 * C894) *
                  C50838 +
              (C22851 * C3319 + C50923 * C3324 + C22850 * C870 +
               C22845 * C884) *
                  C118) *
                 C50949 +
             ((C23462 + C23461) * C50838 + (C23460 + C23459) * C118) * C32138) *
                C50759 +
            (((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C50949 +
             ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C32138) *
                C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                  C118 +
              (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
                C51026 +
            (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
             (C28955 * C118 + C28956 * C50838) * C50949) *
                C50759) *
               C51040 -
           (((C30747 * C50838 + C30748 * C118) * C50949 +
             ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
                C50759 +
            (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C50838 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C118) *
                 C32138) *
                C51026) *
               C50824) *
              C295 +
          (((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C32138 +
             (C30745 * C118 + C30746 * C50838) * C50949) *
                C51026 +
            (((C23086 + C23085) * C118 + (C23084 + C23083) * C50838) * C32138 +
             ((C24627 + C24628) * C118 + (C24629 + C24630) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C23287 * C50838 + C23286 * C118) * C50949 +
             ((C22892 + C22891) * C50838 + (C22890 + C22889) * C118) * C32138) *
                C50759 +
            ((C28954 * C50838 + C28953 * C118) * C50949 +
             ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C32138) *
                C51026) *
               C51040) *
              C296 +
          (((C22909 * C32138 + (C28957 * C118 + C28958 * C50838) * C50949) *
                C51026 +
            (((C22896 + C22895) * C118 + (C22894 + C22893) * C50838) * C32138 +
             ((C23282 + C23283) * C118 + (C23284 + C23285) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C22851 * C887 + C50923 * C895 + C22850 * C879 + C22845 * C891) *
                  C50838 +
              (C22851 * C871 + C50923 * C886 + C22850 * C867 + C22845 * C878) *
                  C118) *
                 C50949 +
             ((C23094 + C23093) * C50838 + (C23092 + C23091) * C118) * C32138) *
                C50759 +
            (((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C50949 +
             C23099 * C32138) *
                C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C50949) *
               C51026 +
           (((C22885 + C22886) * C118 + (C22887 + C22888) * C50838) * C32138 +
            (C28955 * C118 + C28956 * C50838) * C50949) *
               C50759) *
              C745 -
          (((C30747 * C50838 + C30748 * C118) * C50949 +
            ((C23087 + C23088) * C50838 + (C23089 + C23090) * C118) * C32138) *
               C50759 +
           (((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C50949 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C32138) *
               C51026) *
              C746 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C32138 +
            ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C50949) *
               C51026 +
           (((C23455 + C23456) * C118 + (C23457 + C23458) * C50838) * C32138 +
            ((C29165 + C29166) * C118 + (C29167 + C29168) * C50838) * C50949) *
               C50759) *
              C747 -
          ((((C22851 * C9022 + C50923 * C9024 + C22850 * C3323 +
              C22845 * C3327) *
                 C50838 +
             (C22851 * C9018 + C50923 * C9021 + C22850 * C3318 +
              C22845 * C3322) *
                 C118) *
                C50949 +
            ((C22851 * C3164 + C50923 * C3169 + C22850 * C758 + C22845 * C764) *
                 C50838 +
             (C22851 * C3160 + C50923 * C3165 + C22850 * C752 + C22845 * C759) *
                 C118) *
                C32138) *
               C50759 +
           (((C22851 * C9020 + C50923 * C9023 + C22850 * C3321 +
              C22845 * C3326) *
                 C50838 +
             (C22851 * C9017 + C50923 * C9019 + C22850 * C3317 +
              C22845 * C3320) *
                 C118) *
                C50949 +
            ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                 C50838 +
             (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                 C118) *
                C32138) *
               C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C32138 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C32138 +
            (C28955 * C458 + C28956 * C51042 - C29721 * C459 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C50808 * C295 +
          (((C28955 * C459 -
             ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
             C28956 * C50850) *
                C32138 +
            (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
             C29720 * C50850) *
                C50949) *
               C51026 +
           ((C28957 * C459 -
             ((C22892 + C22891) * C51042 + (C22890 + C22889) * C458) +
             C28958 * C50850) *
                C32138 +
            ((C23873 + C23874) * C459 - (C23287 * C51042 + C23286 * C458) +
             (C23875 + C23876) * C50850) *
                C50949) *
               C50759) *
              C50808 * C296 +
          ((C23291 * C32138 +
            (C28957 * C458 + C28958 * C51042 - (C23874 + C23873) * C459 -
             (C23876 + C23875) * C50850) *
                C50949) *
               C51026 +
           (((C22896 + C22895) * C458 + (C22894 + C22893) * C51042 -
             (C23283 + C23282) * C459 - (C23285 + C23284) * C50850) *
                C32138 +
            ((C23282 + C23283) * C458 + (C23284 + C23285) * C51042 -
             (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
              C22845 * C1011) *
                 C459 -
             (C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
              C22845 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C32138 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                C50949) *
               C51026 +
           (((C22885 + C22886) * C458 + (C22887 + C22888) * C51042 -
             C28953 * C459 - C28954 * C50850) *
                C32138 +
            (C28955 * C458 + C28956 * C51042 - C29721 * C459 -
             C29722 * C50850) *
                C50949) *
               C50759) *
              C630 +
          ((((C29509 + C29510) * C459 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51042 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C458) +
             (C29511 + C29512) * C50850) *
                C32138 +
            ((C29950 + C29949) * C459 -
             ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
             (C29952 + C29951) * C50850) *
                C50949) *
               C51026 +
           ((C30745 * C459 -
             ((C23087 + C23088) * C51042 + (C23089 + C23090) * C458) +
             C30746 * C50850) *
                C32138 +
            ((C29954 + C29953) * C459 - (C30747 * C51042 + C30748 * C458) +
             (C29956 + C29955) * C50850) *
                C50949) *
               C50759) *
              C631 +
          ((((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C458 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C51042 -
             (C29513 + C29514) * C459 - (C29515 + C29516) * C50850) *
                C32138 +
            ((C29514 + C29513) * C458 + (C29516 + C29515) * C51042 -
             (C22851 * C9335 + C50923 * C9337 + C22850 * C3645 +
              C22845 * C3648) *
                 C459 -
             (C22851 * C9338 + C50923 * C9341 + C22850 * C3649 +
              C22845 * C3654) *
                 C50850) *
                C50949) *
               C51026 +
           (((C23455 + C23456) * C458 + (C23457 + C23458) * C51042 -
             (C29166 + C29165) * C459 - (C29168 + C29167) * C50850) *
                C32138 +
            ((C29165 + C29166) * C458 + (C29167 + C29168) * C51042 -
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C459 -
             (C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C118 +
                     (C44732 + C44731 + C44730) * C50838) *
                        C50949) *
                       C50754 * C1358 -
                   (((C45152 + C45151 + C45150) * C50838 +
                     (C45149 + C45148 + C45147) * C118) *
                        C50949 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C32138) *
                       C50754 * C50824) *
                      C51085 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C118 +
                     (C27452 + C27453 + C27454) * C50838) *
                        C50949) *
                       C50754 * C50824 -
                   (((C26126 + C26127 + C26128) * C50838 +
                     (C26123 + C26124 + C26125) * C118) *
                        C50949 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C32138) *
                       C50754 * C1358) *
                      C51071 +
                  ((((C25764 + C25763 + C25762) * C118 +
                     (C25761 + C25760 + C25759) * C50838) *
                        C32138 +
                    ((C26129 + C26130 + C26131) * C118 +
                     (C26132 + C26133 + C26134) * C50838) *
                        C50949) *
                       C50754 * C1358 -
                   (((C25715 * C3325 + C25710 * C3328 + C25714 * C885 +
                      C51080 * C894 + C25713 * C877 + C51088 * C890) *
                         C50838 +
                     (C25715 * C3319 + C25710 * C3324 + C25714 * C870 +
                      C51080 * C884 + C25713 * C866 + C51088 * C876) *
                         C118) *
                        C50949 +
                    ((C25952 + C25951 + C25950) * C50838 +
                     (C25949 + C25948 + C25947) * C118) *
                        C32138) *
                       C50754 * C50824) *
                      C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C118 +
                     (C44732 + C44731 + C44730) * C50838) *
                        C50949) *
                       C50754 * C51086 -
                   (((C45152 + C45151 + C45150) * C50838 +
                     (C45149 + C45148 + C45147) * C118) *
                        C50949 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C32138) *
                       C50754 * C51074 +
                   (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                      C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                         C118 +
                     (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                      C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                         C50838) *
                        C32138 +
                    ((C45155 + C45154 + C45153) * C118 +
                     (C45158 + C45157 + C45156) * C50838) *
                        C50949) *
                       C50754 * C1463) *
                      C1464 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C118 +
                     (C27452 + C27453 + C27454) * C50838) *
                        C50949) *
                       C50754 * C51074 -
                   (((C26126 + C26127 + C26128) * C50838 +
                     (C26123 + C26124 + C26125) * C118) *
                        C50949 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C32138) *
                       C50754 * C51086 -
                   (((C25715 * C9022 + C25710 * C9024 + C25714 * C3323 +
                      C51080 * C3327 + C25713 * C883 + C51088 * C893) *
                         C50838 +
                     (C25715 * C9018 + C25710 * C9021 + C25714 * C3318 +
                      C51080 * C3322 + C25713 * C869 + C51088 * C882) *
                         C118) *
                        C50949 +
                    ((C26298 + C26297 + C26296) * C50838 +
                     (C26295 + C26294 + C26293) * C118) *
                        C32138) *
                       C50754 * C1463) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[62] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C458 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C51042 -
                     (C44727 + C44728 + C44729) * C459 -
                     (C44730 + C44731 + C44732) * C50850) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C458 +
                     (C44732 + C44731 + C44730) * C51042 -
                     (C45319 + C45318 + C45317) * C459 -
                     (C45322 + C45321 + C45320) * C50850) *
                        C50949) *
                       C50754 * C1358 +
                   (((C45147 + C45148 + C45149) * C459 -
                     ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                       C51080 * C650 + C25713 * C310 + C51088 * C319) *
                          C51042 +
                      (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                       C51080 * C640 + C25713 * C301 + C51088 * C311) *
                          C458) +
                     (C45150 + C45151 + C45152) * C50850) *
                        C32138 +
                    ((C45483 + C45482 + C45481) * C459 -
                     ((C45152 + C45151 + C45150) * C51042 +
                      (C45149 + C45148 + C45147) * C458) +
                     (C45486 + C45485 + C45484) * C50850) *
                        C50949) *
                       C50754 * C50824) *
                      C1464 +
                  ((((C26125 + C26124 + C26123) * C459 -
                     ((C25758 + C25757 + C25756) * C51042 +
                      (C25755 + C25754 + C25753) * C458) +
                     (C26128 + C26127 + C26126) * C50850) *
                        C32138 +
                    ((C26701 + C26702 + C26703) * C459 -
                     ((C26126 + C26127 + C26128) * C51042 +
                      (C26123 + C26124 + C26125) * C458) +
                     (C26704 + C26705 + C26706) * C50850) *
                        C50949) *
                       C50754 * C1358 +
                   (((C25946 + C25945 + C25944) * C458 +
                     (C25943 + C25942 + C25941) * C51042 -
                     (C27451 + C27450 + C27449) * C459 -
                     (C27454 + C27453 + C27452) * C50850) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C458 +
                     (C27452 + C27453 + C27454) * C51042 -
                     (C25715 * C9336 + C25710 * C9339 + C25714 * C3646 +
                      C51080 * C3650 + C25713 * C1155 + C51088 * C1160) *
                         C459 -
                     (C25715 * C9340 + C25710 * C9342 + C25714 * C3651 +
                      C51080 * C3655 + C25713 * C1161 + C51088 * C1167) *
                         C50850) *
                        C50949) *
                       C50754 * C50824) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C1730 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C1728 -
                     (C44727 + C44728 + C44729) * C1731 -
                     (C44730 + C44731 + C44732) * C50850) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C1730 +
                     (C44732 + C44731 + C44730) * C1728 -
                     (C45319 + C45318 + C45317) * C1731 -
                     (C45322 + C45321 + C45320) * C50850) *
                        C50949) *
                       C50754 * C1358 +
                   (((C45147 + C45148 + C45149) * C1731 -
                     ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                       C51080 * C650 + C25713 * C310 + C51088 * C319) *
                          C1728 +
                      (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                       C51080 * C640 + C25713 * C301 + C51088 * C311) *
                          C1730) +
                     (C45150 + C45151 + C45152) * C50850) *
                        C32138 +
                    ((C45483 + C45482 + C45481) * C1731 -
                     ((C45152 + C45151 + C45150) * C1728 +
                      (C45149 + C45148 + C45147) * C1730) +
                     (C45486 + C45485 + C45484) * C50850) *
                        C50949) *
                       C50754 * C50824) *
                      C51033 +
                  ((((C26125 + C26124 + C26123) * C1731 -
                     ((C25758 + C25757 + C25756) * C1728 +
                      (C25755 + C25754 + C25753) * C1730) +
                     (C26128 + C26127 + C26126) * C50850) *
                        C32138 +
                    ((C26701 + C26702 + C26703) * C1731 -
                     ((C26126 + C26127 + C26128) * C1728 +
                      (C26123 + C26124 + C26125) * C1730) +
                     (C26704 + C26705 + C26706) * C50850) *
                        C50949) *
                       C50754 * C1358 +
                   (((C25946 + C25945 + C25944) * C1730 +
                     (C25943 + C25942 + C25941) * C1728 -
                     (C27451 + C27450 + C27449) * C1731 -
                     (C27454 + C27453 + C27452) * C50850) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C1730 +
                     (C27452 + C27453 + C27454) * C1728 -
                     (C25715 * C9336 + C25710 * C9339 + C25714 * C3646 +
                      C51080 * C3650 + C25713 * C1155 + C51088 * C1160) *
                         C1731 -
                     (C25715 * C9340 + C25710 * C9342 + C25714 * C3651 +
                      C51080 * C3655 + C25713 * C1161 + C51088 * C1167) *
                         C50850) *
                        C50949) *
                       C50754 * C50824) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1730 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C1728 -
                    (C44727 + C44728 + C44729) * C1731 -
                    (C44730 + C44731 + C44732) * C50850) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C1730 +
                    (C44732 + C44731 + C44730) * C1728 -
                    (C45319 + C45318 + C45317) * C1731 -
                    (C45322 + C45321 + C45320) * C50850) *
                       C50949) *
                      C50754 * C51086 +
                  (((C45147 + C45148 + C45149) * C1731 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C1728 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C1730) +
                    (C45150 + C45151 + C45152) * C50850) *
                       C32138 +
                   ((C45483 + C45482 + C45481) * C1731 -
                    ((C45152 + C45151 + C45150) * C1728 +
                     (C45149 + C45148 + C45147) * C1730) +
                    (C45486 + C45485 + C45484) * C50850) *
                       C50949) *
                      C50754 * C51074 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C1730 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C1728 -
                    (C45153 + C45154 + C45155) * C1731 -
                    (C45156 + C45157 + C45158) * C50850) *
                       C32138 +
                   ((C45155 + C45154 + C45153) * C1730 +
                    (C45158 + C45157 + C45156) * C1728 -
                    (C25715 * C11662 + C25710 * C11663 + C25714 * C9335 +
                     C51080 * C9337 + C25713 * C3645 + C51088 * C3648) *
                        C1731 -
                    (C25715 * C11664 + C25710 * C11665 + C25714 * C9338 +
                     C51080 * C9341 + C25713 * C3649 + C51088 * C3654) *
                        C50850) *
                       C50949) *
                      C50754 * C1463) *
                 C50776) /
                (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1999 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51087 -
                    (C44727 + C44728 + C44729) * C2000 -
                    (C44730 + C44731 + C44732) * C51077 +
                    (C45317 + C45318 + C45319) * C2001 +
                    (C45320 + C45321 + C45322) * C1998) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C1999 +
                    (C44732 + C44731 + C44730) * C51087 -
                    (C45319 + C45318 + C45317) * C2000 -
                    (C45322 + C45321 + C45320) * C51077 +
                    (C45599 + C45598 + C45597) * C2001 +
                    (C45602 + C45601 + C45600) * C1998) *
                       C50949) *
                      C50754 * C1358 +
                  (((C45147 + C45148 + C45149) * C2000 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C51087 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C1999) +
                    (C45150 + C45151 + C45152) * C51077 -
                    (C45481 + C45482 + C45483) * C2001 -
                    (C45484 + C45485 + C45486) * C1998) *
                       C32138 +
                   ((C45483 + C45482 + C45481) * C2000 -
                    ((C45152 + C45151 + C45150) * C51087 +
                     (C45149 + C45148 + C45147) * C1999) +
                    (C45486 + C45485 + C45484) * C51077 -
                    (C25715 * C11732 + C25710 * C11733 + C25714 * C9441 +
                     C51080 * C9443 + C25713 * C3755 + C51088 * C3758) *
                        C2001 -
                    (C25715 * C11734 + C25710 * C11735 + C25714 * C9444 +
                     C51080 * C9447 + C25713 * C3759 + C51088 * C3764) *
                        C1998) *
                       C50949) *
                      C50754 * C50824) *
                 C50776) /
                (p * q * std::sqrt(p + q));
    d2ee[66] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C118 +
                     (C44732 + C44731 + C44730) * C50838) *
                        C50949) *
                       C50754 * C630 -
                   (((C25715 * C3321 + C25710 * C3326 + C25714 * C881 +
                      C51080 * C892 + C25713 * C873 + C51088 * C888) *
                         C50838 +
                     (C25715 * C3317 + C25710 * C3320 + C25714 * C868 +
                      C51080 * C880 + C25713 * C864 + C51088 * C872) *
                         C118) *
                        C50949 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C32138) *
                       C50754 * C631 +
                   (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                      C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                         C118 +
                     (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                      C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                         C50838) *
                        C32138 +
                    ((C25713 * C868 + C51088 * C880 + C25714 * C3317 +
                      C51080 * C3320 + C25715 * C9017 + C25710 * C9019) *
                         C118 +
                     (C25713 * C881 + C51088 * C892 + C25714 * C3321 +
                      C51080 * C3326 + C25715 * C9020 + C25710 * C9023) *
                         C50838) *
                        C50949) *
                       C50754 * C632) *
                      C51033 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C118 +
                     (C27452 + C27453 + C27454) * C50838) *
                        C50949) *
                       C50754 * C631 -
                   (((C26126 + C26127 + C26128) * C50838 +
                     (C26123 + C26124 + C26125) * C118) *
                        C50949 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C32138) *
                       C50754 * C630 -
                   (((C25715 * C9022 + C25710 * C9024 + C25714 * C3323 +
                      C51080 * C3327 + C25713 * C883 + C51088 * C893) *
                         C50838 +
                     (C25715 * C9018 + C25710 * C9021 + C25714 * C3318 +
                      C51080 * C3322 + C25713 * C869 + C51088 * C882) *
                         C118) *
                        C50949 +
                    ((C26298 + C26297 + C26296) * C50838 +
                     (C26295 + C26294 + C26293) * C118) *
                        C32138) *
                       C50754 * C632) *
                      C50781)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C32138 +
                   ((C25713 * C460 + C51088 * C466 + C25714 * C864 +
                     C51080 * C872 + C25715 * C868 + C25710 * C880) *
                        C118 +
                    (C25713 * C467 + C51088 * C478 + C25714 * C873 +
                     C51080 * C888 + C25715 * C881 + C25710 * C892) *
                        C50838) *
                       C50949) *
                      C50754 * C50808 * C113 -
                  (((C26126 + C26127 + C26128) * C50838 +
                    (C26123 + C26124 + C26125) * C118) *
                       C50949 +
                   ((C25758 + C25757 + C25756) * C50838 +
                    (C25755 + C25754 + C25753) * C118) *
                       C32138) *
                      C50754 * C50808 * C114 +
                  (((C25764 + C25763 + C25762) * C118 +
                    (C25761 + C25760 + C25759) * C50838) *
                       C32138 +
                   ((C26129 + C26130 + C26131) * C118 +
                    (C26132 + C26133 + C26134) * C50838) *
                       C50949) *
                      C50754 * C50808 * C115 -
                  (((C25715 * C887 + C25710 * C895 + C25714 * C879 +
                     C51080 * C891 + C25713 * C473 + C51088 * C481) *
                        C50838 +
                    (C25715 * C871 + C25710 * C886 + C25714 * C867 +
                     C51080 * C878 + C25713 * C463 + C51088 * C472) *
                        C118) *
                       C50949 +
                   ((C25770 + C25769 + C25768) * C50838 +
                    (C25767 + C25766 + C25765) * C118) *
                       C32138) *
                      C50754 * C50808 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C997 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C994 -
                    (C44727 + C44728 + C44729) * C998 -
                    (C44730 + C44731 + C44732) * C995 +
                    (C45317 + C45318 + C45319) * C999 +
                    (C45320 + C45321 + C45322) * C996) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C997 +
                    (C44732 + C44731 + C44730) * C994 -
                    (C45319 + C45318 + C45317) * C998 -
                    (C45322 + C45321 + C45320) * C995 +
                    (C25713 * C1244 + C51088 * C1248 + C25714 * C3755 +
                     C51080 * C3758 + C25715 * C9441 + C25710 * C9443) *
                        C999 +
                    (C25713 * C1249 + C51088 * C1256 + C25714 * C3759 +
                     C51080 * C3764 + C25715 * C9444 + C25710 * C9447) *
                        C996) *
                       C50949) *
                      C50754 * C50808 * C51033 +
                  (((C26125 + C26124 + C26123) * C998 -
                    ((C25758 + C25757 + C25756) * C994 +
                     (C25755 + C25754 + C25753) * C997) +
                    (C26128 + C26127 + C26126) * C995 -
                    (C26703 + C26702 + C26701) * C999 -
                    (C26706 + C26705 + C26704) * C996) *
                       C32138 +
                   ((C26701 + C26702 + C26703) * C998 -
                    ((C26126 + C26127 + C26128) * C994 +
                     (C26123 + C26124 + C26125) * C997) +
                    (C26704 + C26705 + C26706) * C995 -
                    (C25715 * C9442 + C25710 * C9445 + C25714 * C3756 +
                     C51080 * C3760 + C25713 * C1245 + C51088 * C1250) *
                        C999 -
                    (C25715 * C9446 + C25710 * C9448 + C25714 * C3761 +
                     C51080 * C3765 + C25713 * C1251 + C51088 * C1257) *
                        C996) *
                       C50949) *
                      C50754 * C50808 * C50781)) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C118 +
                    (C44732 + C44731 + C44730) * C50838) *
                       C50949) *
                      C50754 * C745 -
                  (((C25715 * C3321 + C25710 * C3326 + C25714 * C881 +
                     C51080 * C892 + C25713 * C873 + C51088 * C888) *
                        C50838 +
                    (C25715 * C3317 + C25710 * C3320 + C25714 * C868 +
                     C51080 * C880 + C25713 * C864 + C51088 * C872) *
                        C118) *
                       C50949 +
                   ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                     C51080 * C650 + C25713 * C310 + C51088 * C319) *
                        C50838 +
                    (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                     C51080 * C640 + C25713 * C301 + C51088 * C311) *
                        C118) *
                       C32138) *
                      C50754 * C746 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C118 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C50838) *
                       C32138 +
                   ((C25713 * C868 + C51088 * C880 + C25714 * C3317 +
                     C51080 * C3320 + C25715 * C9017 + C25710 * C9019) *
                        C118 +
                    (C25713 * C881 + C51088 * C892 + C25714 * C3321 +
                     C51080 * C3326 + C25715 * C9020 + C25710 * C9023) *
                        C50838) *
                       C50949) *
                      C50754 * C747 -
                  (((C25715 * C11464 + C25710 * C11465 + C25714 * C9020 +
                     C51080 * C9023 + C25713 * C3321 + C51088 * C3326) *
                        C50838 +
                    (C25715 * C11462 + C25710 * C11463 + C25714 * C9017 +
                     C51080 * C9019 + C25713 * C3317 + C51088 * C3320) *
                        C118) *
                       C50949 +
                   ((C25715 * C8867 + C25710 * C8870 + C25714 * C3166 +
                     C51080 * C3170 + C25713 * C760 + C51088 * C765) *
                        C50838 +
                    (C25715 * C8864 + C25710 * C8868 + C25714 * C3161 +
                     C51080 * C3167 + C25713 * C753 + C51088 * C761) *
                        C118) *
                       C32138) *
                      C50754 * C748) *
                 C50776) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C32138 +
                    ((C25713 * C460 + C51088 * C466 + C25714 * C864 +
                      C51080 * C872 + C25715 * C868 + C25710 * C880) *
                         C118 +
                     (C25713 * C467 + C51088 * C478 + C25714 * C873 +
                      C51080 * C888 + C25715 * C881 + C25710 * C892) *
                         C50838) *
                        C50949) *
                       C50754 * C51040 -
                   (((C25715 * C3321 + C25710 * C3326 + C25714 * C881 +
                      C51080 * C892 + C25713 * C873 + C51088 * C888) *
                         C50838 +
                     (C25715 * C3317 + C25710 * C3320 + C25714 * C868 +
                      C51080 * C880 + C25713 * C864 + C51088 * C872) *
                         C118) *
                        C50949 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C32138) *
                       C50754 * C50824) *
                      C295 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C118 +
                     (C27452 + C27453 + C27454) * C50838) *
                        C50949) *
                       C50754 * C50824 -
                   (((C26126 + C26127 + C26128) * C50838 +
                     (C26123 + C26124 + C26125) * C118) *
                        C50949 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C32138) *
                       C50754 * C51040) *
                      C296 +
                  ((((C25764 + C25763 + C25762) * C118 +
                     (C25761 + C25760 + C25759) * C50838) *
                        C32138 +
                    ((C26129 + C26130 + C26131) * C118 +
                     (C26132 + C26133 + C26134) * C50838) *
                        C50949) *
                       C50754 * C51040 -
                   (((C25715 * C3325 + C25710 * C3328 + C25714 * C885 +
                      C51080 * C894 + C25713 * C877 + C51088 * C890) *
                         C50838 +
                     (C25715 * C3319 + C25710 * C3324 + C25714 * C870 +
                      C51080 * C884 + C25713 * C866 + C51088 * C876) *
                         C118) *
                        C50949 +
                    ((C25952 + C25951 + C25950) * C50838 +
                     (C25949 + C25948 + C25947) * C118) *
                        C32138) *
                       C50754 * C50824) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C997 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C994 -
                    (C44727 + C44728 + C44729) * C998 -
                    (C44730 + C44731 + C44732) * C995 +
                    (C45317 + C45318 + C45319) * C999 +
                    (C45320 + C45321 + C45322) * C996) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C997 +
                    (C44732 + C44731 + C44730) * C994 -
                    (C45319 + C45318 + C45317) * C998 -
                    (C45322 + C45321 + C45320) * C995 +
                    (C25713 * C1244 + C51088 * C1248 + C25714 * C3755 +
                     C51080 * C3758 + C25715 * C9441 + C25710 * C9443) *
                        C999 +
                    (C25713 * C1249 + C51088 * C1256 + C25714 * C3759 +
                     C51080 * C3764 + C25715 * C9444 + C25710 * C9447) *
                        C996) *
                       C50949) *
                      C50754 * C51040 +
                  (((C45147 + C45148 + C45149) * C998 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C994 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C997) +
                    (C45150 + C45151 + C45152) * C995 -
                    (C45481 + C45482 + C45483) * C999 -
                    (C45484 + C45485 + C45486) * C996) *
                       C32138 +
                   ((C45483 + C45482 + C45481) * C998 -
                    ((C45152 + C45151 + C45150) * C994 +
                     (C45149 + C45148 + C45147) * C997) +
                    (C45486 + C45485 + C45484) * C995 -
                    (C25715 * C11732 + C25710 * C11733 + C25714 * C9441 +
                     C51080 * C9443 + C25713 * C3755 + C51088 * C3758) *
                        C999 -
                    (C25715 * C11734 + C25710 * C11735 + C25714 * C9444 +
                     C51080 * C9447 + C25713 * C3759 + C51088 * C3764) *
                        C996) *
                       C50949) *
                      C50754 * C50824) *
                 C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C44727 + C44728 + C44729) * C459 -
                    (C44730 + C44731 + C44732) * C50850) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C458 +
                    (C44732 + C44731 + C44730) * C51042 -
                    (C25715 * C3645 + C25710 * C3648 + C25714 * C1154 +
                     C51080 * C1158 + C25713 * C1000 + C51088 * C1005) *
                        C459 -
                    (C25715 * C3649 + C25710 * C3654 + C25714 * C1159 +
                     C51080 * C1166 + C25713 * C1006 + C51088 * C1015) *
                        C50850) *
                       C50949) *
                      C50754 * C630 +
                  (((C45147 + C45148 + C45149) * C459 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C51042 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C458) +
                    (C45150 + C45151 + C45152) * C50850) *
                       C32138 +
                   ((C25713 * C1154 + C51088 * C1158 + C25714 * C3645 +
                     C51080 * C3648 + C25715 * C9335 + C25710 * C9337) *
                        C459 -
                    ((C45152 + C45151 + C45150) * C51042 +
                     (C45149 + C45148 + C45147) * C458) +
                    (C25713 * C1159 + C51088 * C1166 + C25714 * C3649 +
                     C51080 * C3654 + C25715 * C9338 + C25710 * C9341) *
                        C50850) *
                       C50949) *
                      C50754 * C631 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C458 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C51042 -
                    (C45153 + C45154 + C45155) * C459 -
                    (C45156 + C45157 + C45158) * C50850) *
                       C32138 +
                   ((C45155 + C45154 + C45153) * C458 +
                    (C45158 + C45157 + C45156) * C51042 -
                    (C25715 * C11662 + C25710 * C11663 + C25714 * C9335 +
                     C51080 * C9337 + C25713 * C3645 + C51088 * C3648) *
                        C459 -
                    (C25715 * C11664 + C25710 * C11665 + C25714 * C9338 +
                     C51080 * C9341 + C25713 * C3649 + C51088 * C3654) *
                        C50850) *
                       C50949) *
                      C50754 * C632) *
                 C50776) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C44727 + C44728 + C44729) * C459 -
                    (C44730 + C44731 + C44732) * C50850) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C458 +
                    (C44732 + C44731 + C44730) * C51042 -
                    (C25715 * C3645 + C25710 * C3648 + C25714 * C1154 +
                     C51080 * C1158 + C25713 * C1000 + C51088 * C1005) *
                        C459 -
                    (C25715 * C3649 + C25710 * C3654 + C25714 * C1159 +
                     C51080 * C1166 + C25713 * C1006 + C51088 * C1015) *
                        C50850) *
                       C50949) *
                      C50754 * C50808 * C295 +
                  (((C26125 + C26124 + C26123) * C459 -
                    ((C25758 + C25757 + C25756) * C51042 +
                     (C25755 + C25754 + C25753) * C458) +
                    (C26128 + C26127 + C26126) * C50850) *
                       C32138 +
                   ((C26701 + C26702 + C26703) * C459 -
                    ((C26126 + C26127 + C26128) * C51042 +
                     (C26123 + C26124 + C26125) * C458) +
                    (C26704 + C26705 + C26706) * C50850) *
                       C50949) *
                      C50754 * C50808 * C296 +
                  (((C25764 + C25763 + C25762) * C458 +
                    (C25761 + C25760 + C25759) * C51042 -
                    (C26131 + C26130 + C26129) * C459 -
                    (C26134 + C26133 + C26132) * C50850) *
                       C32138 +
                   ((C26129 + C26130 + C26131) * C458 +
                    (C26132 + C26133 + C26134) * C51042 -
                    (C25715 * C3647 + C25710 * C3652 + C25714 * C1156 +
                     C51080 * C1162 + C25713 * C1002 + C51088 * C1009) *
                        C459 -
                    (C25715 * C3653 + C25710 * C3656 + C25714 * C1163 +
                     C51080 * C1168 + C25713 * C1010 + C51088 * C1017) *
                        C50850) *
                       C50949) *
                      C50754 * C50808 * C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                    C51080 * C311 + C25715 * C635 + C25710 * C640) *
                       C1240 +
                   (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                    C51080 * C319 + C25715 * C641 + C25710 * C650) *
                       C1236 -
                   (C44727 + C44728 + C44729) * C1241 -
                   (C44730 + C44731 + C44732) * C1237 +
                   (C45317 + C45318 + C45319) * C1242 +
                   (C45320 + C45321 + C45322) * C1238 -
                   (C45597 + C45598 + C45599) * C1243 -
                   (C45600 + C45601 + C45602) * C1239) *
                      C32138 +
                  ((C44729 + C44728 + C44727) * C1240 +
                   (C44732 + C44731 + C44730) * C1236 -
                   (C45319 + C45318 + C45317) * C1241 -
                   (C45322 + C45321 + C45320) * C1237 +
                   (C45599 + C45598 + C45597) * C1242 +
                   (C45602 + C45601 + C45600) * C1238 -
                   (C25715 * C13974 + C25710 * C13976 + C25714 * C13975 +
                    C51080 * C13977 + C25713 * C6555 + C51088 * C6558) *
                       C1243 -
                   (C25715 * C13978 + C25710 * C13980 + C25714 * C13979 +
                    C51080 * C13981 + C25713 * C6559 + C51088 * C6564) *
                       C1239) *
                      C50949) *
                 C50754 * C50808 * C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1730 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C1728 -
                    (C44727 + C44728 + C44729) * C1731 -
                    (C44730 + C44731 + C44732) * C50850) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C1730 +
                    (C44732 + C44731 + C44730) * C1728 -
                    (C45319 + C45318 + C45317) * C1731 -
                    (C45322 + C45321 + C45320) * C50850) *
                       C50949) *
                      C50754 * C50808 * C51085 +
                  (((C26125 + C26124 + C26123) * C1731 -
                    ((C25758 + C25757 + C25756) * C1728 +
                     (C25755 + C25754 + C25753) * C1730) +
                    (C26128 + C26127 + C26126) * C50850) *
                       C32138 +
                   ((C26701 + C26702 + C26703) * C1731 -
                    ((C26126 + C26127 + C26128) * C1728 +
                     (C26123 + C26124 + C26125) * C1730) +
                    (C26704 + C26705 + C26706) * C50850) *
                       C50949) *
                      C50754 * C50808 * C51071 +
                  (((C25764 + C25763 + C25762) * C1730 +
                    (C25761 + C25760 + C25759) * C1728 -
                    (C26131 + C26130 + C26129) * C1731 -
                    (C26134 + C26133 + C26132) * C50850) *
                       C32138 +
                   ((C26129 + C26130 + C26131) * C1730 +
                    (C26132 + C26133 + C26134) * C1728 -
                    (C25715 * C3647 + C25710 * C3652 + C25714 * C1156 +
                     C51080 * C1162 + C25713 * C1002 + C51088 * C1009) *
                        C1731 -
                    (C25715 * C3653 + C25710 * C3656 + C25714 * C1163 +
                     C51080 * C1168 + C25713 * C1010 + C51088 * C1017) *
                        C50850) *
                       C50949) *
                      C50754 * C50808 * C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C1730 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C1728 -
                     (C44727 + C44728 + C44729) * C1731 -
                     (C44730 + C44731 + C44732) * C50850) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C1730 +
                     (C44732 + C44731 + C44730) * C1728 -
                     (C45319 + C45318 + C45317) * C1731 -
                     (C45322 + C45321 + C45320) * C50850) *
                        C50949) *
                       C50754 * C51040 +
                   (((C45147 + C45148 + C45149) * C1731 -
                     ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                       C51080 * C650 + C25713 * C310 + C51088 * C319) *
                          C1728 +
                      (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                       C51080 * C640 + C25713 * C301 + C51088 * C311) *
                          C1730) +
                     (C45150 + C45151 + C45152) * C50850) *
                        C32138 +
                    ((C45483 + C45482 + C45481) * C1731 -
                     ((C45152 + C45151 + C45150) * C1728 +
                      (C45149 + C45148 + C45147) * C1730) +
                     (C45486 + C45485 + C45484) * C50850) *
                        C50949) *
                       C50754 * C50824) *
                      C1464 +
                  ((((C26125 + C26124 + C26123) * C1731 -
                     ((C25758 + C25757 + C25756) * C1728 +
                      (C25755 + C25754 + C25753) * C1730) +
                     (C26128 + C26127 + C26126) * C50850) *
                        C32138 +
                    ((C26701 + C26702 + C26703) * C1731 -
                     ((C26126 + C26127 + C26128) * C1728 +
                      (C26123 + C26124 + C26125) * C1730) +
                     (C26704 + C26705 + C26706) * C50850) *
                        C50949) *
                       C50754 * C51040 +
                   (((C25946 + C25945 + C25944) * C1730 +
                     (C25943 + C25942 + C25941) * C1728 -
                     (C27451 + C27450 + C27449) * C1731 -
                     (C27454 + C27453 + C27452) * C50850) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C1730 +
                     (C27452 + C27453 + C27454) * C1728 -
                     (C25715 * C9336 + C25710 * C9339 + C25714 * C3646 +
                      C51080 * C3650 + C25713 * C1155 + C51088 * C1160) *
                         C1731 -
                     (C25715 * C9340 + C25710 * C9342 + C25714 * C3651 +
                      C51080 * C3655 + C25713 * C1161 + C51088 * C1167) *
                         C50850) *
                        C50949) *
                       C50754 * C50824) *
                      C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C1999 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51087 -
                    (C44727 + C44728 + C44729) * C2000 -
                    (C44730 + C44731 + C44732) * C51077 +
                    (C45317 + C45318 + C45319) * C2001 +
                    (C45320 + C45321 + C45322) * C1998) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C1999 +
                    (C44732 + C44731 + C44730) * C51087 -
                    (C45319 + C45318 + C45317) * C2000 -
                    (C45322 + C45321 + C45320) * C51077 +
                    (C45599 + C45598 + C45597) * C2001 +
                    (C45602 + C45601 + C45600) * C1998) *
                       C50949) *
                      C50754 * C50808 * C1464 +
                  (((C26125 + C26124 + C26123) * C2000 -
                    ((C25758 + C25757 + C25756) * C51087 +
                     (C25755 + C25754 + C25753) * C1999) +
                    (C26128 + C26127 + C26126) * C51077 -
                    (C26703 + C26702 + C26701) * C2001 -
                    (C26706 + C26705 + C26704) * C1998) *
                       C32138 +
                   ((C26701 + C26702 + C26703) * C2000 -
                    ((C26126 + C26127 + C26128) * C51087 +
                     (C26123 + C26124 + C26125) * C1999) +
                    (C26704 + C26705 + C26706) * C51077 -
                    (C25715 * C9442 + C25710 * C9445 + C25714 * C3756 +
                     C51080 * C3760 + C25713 * C1245 + C51088 * C1250) *
                        C2001 -
                    (C25715 * C9446 + C25710 * C9448 + C25714 * C3761 +
                     C51080 * C3765 + C25713 * C1251 + C51088 * C1257) *
                        C1998) *
                       C50949) *
                      C50754 * C50808 * C50781)) /
                (p * q * std::sqrt(p + q));
    d2ee[72] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C32138 +
                   ((C25713 * C460 + C51088 * C466 + C25714 * C864 +
                     C51080 * C872 + C25715 * C868 + C25710 * C880) *
                        C118 +
                    (C25713 * C467 + C51088 * C478 + C25714 * C873 +
                     C51080 * C888 + C25715 * C881 + C25710 * C892) *
                        C50838) *
                       C50949) *
                      C50754 * C50808 * C113 -
                  (((C26126 + C26127 + C26128) * C50838 +
                    (C26123 + C26124 + C26125) * C118) *
                       C50949 +
                   ((C25758 + C25757 + C25756) * C50838 +
                    (C25755 + C25754 + C25753) * C118) *
                       C32138) *
                      C50754 * C50808 * C114 +
                  (((C25764 + C25763 + C25762) * C118 +
                    (C25761 + C25760 + C25759) * C50838) *
                       C32138 +
                   ((C26129 + C26130 + C26131) * C118 +
                    (C26132 + C26133 + C26134) * C50838) *
                       C50949) *
                      C50754 * C50808 * C115 -
                  (((C25715 * C887 + C25710 * C895 + C25714 * C879 +
                     C51080 * C891 + C25713 * C473 + C51088 * C481) *
                        C50838 +
                    (C25715 * C871 + C25710 * C886 + C25714 * C867 +
                     C51080 * C878 + C25713 * C463 + C51088 * C472) *
                        C118) *
                       C50949 +
                   ((C25770 + C25769 + C25768) * C50838 +
                    (C25767 + C25766 + C25765) * C118) *
                       C32138) *
                      C50754 * C50808 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C32138 +
                    ((C44729 + C44728 + C44727) * C118 +
                     (C44732 + C44731 + C44730) * C50838) *
                        C50949) *
                       C50754 * C630 -
                   (((C25715 * C3321 + C25710 * C3326 + C25714 * C881 +
                      C51080 * C892 + C25713 * C873 + C51088 * C888) *
                         C50838 +
                     (C25715 * C3317 + C25710 * C3320 + C25714 * C868 +
                      C51080 * C880 + C25713 * C864 + C51088 * C872) *
                         C118) *
                        C50949 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C32138) *
                       C50754 * C631 +
                   (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                      C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                         C118 +
                     (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                      C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                         C50838) *
                        C32138 +
                    ((C25713 * C868 + C51088 * C880 + C25714 * C3317 +
                      C51080 * C3320 + C25715 * C9017 + C25710 * C9019) *
                         C118 +
                     (C25713 * C881 + C51088 * C892 + C25714 * C3321 +
                      C51080 * C3326 + C25715 * C9020 + C25710 * C9023) *
                         C50838) *
                        C50949) *
                       C50754 * C632) *
                      C51033 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C118 +
                     (C27452 + C27453 + C27454) * C50838) *
                        C50949) *
                       C50754 * C631 -
                   (((C26126 + C26127 + C26128) * C50838 +
                     (C26123 + C26124 + C26125) * C118) *
                        C50949 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C32138) *
                       C50754 * C630 -
                   (((C25715 * C9022 + C25710 * C9024 + C25714 * C3323 +
                      C51080 * C3327 + C25713 * C883 + C51088 * C893) *
                         C50838 +
                     (C25715 * C9018 + C25710 * C9021 + C25714 * C3318 +
                      C51080 * C3322 + C25713 * C869 + C51088 * C882) *
                         C118) *
                        C50949 +
                    ((C26298 + C26297 + C26296) * C50838 +
                     (C26295 + C26294 + C26293) * C118) *
                        C32138) *
                       C50754 * C632) *
                      C50781)) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                      C51080 * C311 + C25715 * C635 + C25710 * C640) *
                         C118 +
                     (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                      C51080 * C319 + C25715 * C641 + C25710 * C650) *
                         C50838) *
                        C32138 +
                    ((C25713 * C460 + C51088 * C466 + C25714 * C864 +
                      C51080 * C872 + C25715 * C868 + C25710 * C880) *
                         C118 +
                     (C25713 * C467 + C51088 * C478 + C25714 * C873 +
                      C51080 * C888 + C25715 * C881 + C25710 * C892) *
                         C50838) *
                        C50949) *
                       C50754 * C51040 -
                   (((C25715 * C3321 + C25710 * C3326 + C25714 * C881 +
                      C51080 * C892 + C25713 * C873 + C51088 * C888) *
                         C50838 +
                     (C25715 * C3317 + C25710 * C3320 + C25714 * C868 +
                      C51080 * C880 + C25713 * C864 + C51088 * C872) *
                         C118) *
                        C50949 +
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C50838 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C118) *
                        C32138) *
                       C50754 * C50824) *
                      C295 +
                  ((((C25946 + C25945 + C25944) * C118 +
                     (C25943 + C25942 + C25941) * C50838) *
                        C32138 +
                    ((C27449 + C27450 + C27451) * C118 +
                     (C27452 + C27453 + C27454) * C50838) *
                        C50949) *
                       C50754 * C50824 -
                   (((C26126 + C26127 + C26128) * C50838 +
                     (C26123 + C26124 + C26125) * C118) *
                        C50949 +
                    ((C25758 + C25757 + C25756) * C50838 +
                     (C25755 + C25754 + C25753) * C118) *
                        C32138) *
                       C50754 * C51040) *
                      C296 +
                  ((((C25764 + C25763 + C25762) * C118 +
                     (C25761 + C25760 + C25759) * C50838) *
                        C32138 +
                    ((C26129 + C26130 + C26131) * C118 +
                     (C26132 + C26133 + C26134) * C50838) *
                        C50949) *
                       C50754 * C51040 -
                   (((C25715 * C3325 + C25710 * C3328 + C25714 * C885 +
                      C51080 * C894 + C25713 * C877 + C51088 * C890) *
                         C50838 +
                     (C25715 * C3319 + C25710 * C3324 + C25714 * C870 +
                      C51080 * C884 + C25713 * C866 + C51088 * C876) *
                         C118) *
                        C50949 +
                    ((C25952 + C25951 + C25950) * C50838 +
                     (C25949 + C25948 + C25947) * C118) *
                        C32138) *
                       C50754 * C50824) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C118 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C50838) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C118 +
                    (C44732 + C44731 + C44730) * C50838) *
                       C50949) *
                      C50754 * C745 -
                  (((C25715 * C3321 + C25710 * C3326 + C25714 * C881 +
                     C51080 * C892 + C25713 * C873 + C51088 * C888) *
                        C50838 +
                    (C25715 * C3317 + C25710 * C3320 + C25714 * C868 +
                     C51080 * C880 + C25713 * C864 + C51088 * C872) *
                        C118) *
                       C50949 +
                   ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                     C51080 * C650 + C25713 * C310 + C51088 * C319) *
                        C50838 +
                    (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                     C51080 * C640 + C25713 * C301 + C51088 * C311) *
                        C118) *
                       C32138) *
                      C50754 * C746 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C118 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C50838) *
                       C32138 +
                   ((C25713 * C868 + C51088 * C880 + C25714 * C3317 +
                     C51080 * C3320 + C25715 * C9017 + C25710 * C9019) *
                        C118 +
                    (C25713 * C881 + C51088 * C892 + C25714 * C3321 +
                     C51080 * C3326 + C25715 * C9020 + C25710 * C9023) *
                        C50838) *
                       C50949) *
                      C50754 * C747 -
                  (((C25715 * C11464 + C25710 * C11465 + C25714 * C9020 +
                     C51080 * C9023 + C25713 * C3321 + C51088 * C3326) *
                        C50838 +
                    (C25715 * C11462 + C25710 * C11463 + C25714 * C9017 +
                     C51080 * C9019 + C25713 * C3317 + C51088 * C3320) *
                        C118) *
                       C50949 +
                   ((C25715 * C8867 + C25710 * C8870 + C25714 * C3166 +
                     C51080 * C3170 + C25713 * C760 + C51088 * C765) *
                        C50838 +
                    (C25715 * C8864 + C25710 * C8868 + C25714 * C3161 +
                     C51080 * C3167 + C25713 * C753 + C51088 * C761) *
                        C118) *
                       C32138) *
                      C50754 * C748) *
                 C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C44727 + C44728 + C44729) * C459 -
                    (C44730 + C44731 + C44732) * C50850) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C458 +
                    (C44732 + C44731 + C44730) * C51042 -
                    (C25715 * C3645 + C25710 * C3648 + C25714 * C1154 +
                     C51080 * C1158 + C25713 * C1000 + C51088 * C1005) *
                        C459 -
                    (C25715 * C3649 + C25710 * C3654 + C25714 * C1159 +
                     C51080 * C1166 + C25713 * C1006 + C51088 * C1015) *
                        C50850) *
                       C50949) *
                      C50754 * C50808 * C295 +
                  (((C26125 + C26124 + C26123) * C459 -
                    ((C25758 + C25757 + C25756) * C51042 +
                     (C25755 + C25754 + C25753) * C458) +
                    (C26128 + C26127 + C26126) * C50850) *
                       C32138 +
                   ((C26701 + C26702 + C26703) * C459 -
                    ((C26126 + C26127 + C26128) * C51042 +
                     (C26123 + C26124 + C26125) * C458) +
                    (C26704 + C26705 + C26706) * C50850) *
                       C50949) *
                      C50754 * C50808 * C296 +
                  (((C25764 + C25763 + C25762) * C458 +
                    (C25761 + C25760 + C25759) * C51042 -
                    (C26131 + C26130 + C26129) * C459 -
                    (C26134 + C26133 + C26132) * C50850) *
                       C32138 +
                   ((C26129 + C26130 + C26131) * C458 +
                    (C26132 + C26133 + C26134) * C51042 -
                    (C25715 * C3647 + C25710 * C3652 + C25714 * C1156 +
                     C51080 * C1162 + C25713 * C1002 + C51088 * C1009) *
                        C459 -
                    (C25715 * C3653 + C25710 * C3656 + C25714 * C1163 +
                     C51080 * C1168 + C25713 * C1010 + C51088 * C1017) *
                        C50850) *
                       C50949) *
                      C50754 * C50808 * C297)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25713 * C119 + C51088 * C126 + C25714 * C301 +
                     C51080 * C311 + C25715 * C635 + C25710 * C640) *
                        C458 +
                    (C25713 * C127 + C51088 * C140 + C25714 * C310 +
                     C51080 * C319 + C25715 * C641 + C25710 * C650) *
                        C51042 -
                    (C44727 + C44728 + C44729) * C459 -
                    (C44730 + C44731 + C44732) * C50850) *
                       C32138 +
                   ((C44729 + C44728 + C44727) * C458 +
                    (C44732 + C44731 + C44730) * C51042 -
                    (C25715 * C3645 + C25710 * C3648 + C25714 * C1154 +
                     C51080 * C1158 + C25713 * C1000 + C51088 * C1005) *
                        C459 -
                    (C25715 * C3649 + C25710 * C3654 + C25714 * C1159 +
                     C51080 * C1166 + C25713 * C1006 + C51088 * C1015) *
                        C50850) *
                       C50949) *
                      C50754 * C630 +
                  (((C45147 + C45148 + C45149) * C459 -
                    ((C25715 * C760 + C25710 * C765 + C25714 * C641 +
                      C51080 * C650 + C25713 * C310 + C51088 * C319) *
                         C51042 +
                     (C25715 * C753 + C25710 * C761 + C25714 * C635 +
                      C51080 * C640 + C25713 * C301 + C51088 * C311) *
                         C458) +
                    (C45150 + C45151 + C45152) * C50850) *
                       C32138 +
                   ((C25713 * C1154 + C51088 * C1158 + C25714 * C3645 +
                     C51080 * C3648 + C25715 * C9335 + C25710 * C9337) *
                        C459 -
                    ((C45152 + C45151 + C45150) * C51042 +
                     (C45149 + C45148 + C45147) * C458) +
                    (C25713 * C1159 + C51088 * C1166 + C25714 * C3649 +
                     C51080 * C3654 + C25715 * C9338 + C25710 * C9341) *
                        C50850) *
                       C50949) *
                      C50754 * C631 +
                  (((C25713 * C635 + C51088 * C640 + C25714 * C753 +
                     C51080 * C761 + C25715 * C3161 + C25710 * C3167) *
                        C458 +
                    (C25713 * C641 + C51088 * C650 + C25714 * C760 +
                     C51080 * C765 + C25715 * C3166 + C25710 * C3170) *
                        C51042 -
                    (C45153 + C45154 + C45155) * C459 -
                    (C45156 + C45157 + C45158) * C50850) *
                       C32138 +
                   ((C45155 + C45154 + C45153) * C458 +
                    (C45158 + C45157 + C45156) * C51042 -
                    (C25715 * C11662 + C25710 * C11663 + C25714 * C9335 +
                     C51080 * C9337 + C25713 * C3645 + C51088 * C3648) *
                        C459 -
                    (C25715 * C11664 + C25710 * C11665 + C25714 * C9338 +
                     C51080 * C9341 + C25713 * C3649 + C51088 * C3654) *
                        C50850) *
                       C50949) *
                      C50754 * C632) *
                 C50776) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51089 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
            (C47999 * C118 + C48000 * C50838) * C38301) *
               C50754 * C1358 -
           ((C48148 * C50838 + C48147 * C118) * C38301 +
            ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51089) *
               C50754 * C50824) *
              C51085 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51089 +
            (C30745 * C118 + C30746 * C50838) * C51083 +
            ((C29954 + C29953) * C118 + (C29956 + C29955) * C50838) * C38301) *
               C50754 * C50824 -
           ((C29722 * C50838 + C29721 * C118) * C38301 +
            (C28954 * C50838 + C28953 * C118) * C51083 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
               C50754 * C1358) *
              C51071 +
          ((C22909 * C51089 + (C28957 * C118 + C28958 * C50838) * C51083 +
            ((C23873 + C23874) * C118 + (C23875 + C23876) * C50838) * C38301) *
               C50754 * C1358 -
           (((C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
              C22845 * C1168) *
                 C50838 +
             (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
              C22845 * C1162) *
                 C118) *
                C38301 +
            ((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C51083 +
            C23099 * C51089) *
               C50754 * C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51089 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
            (C47999 * C118 + C48000 * C50838) * C38301) *
               C50754 * C51086 -
           ((C48148 * C50838 + C48147 * C118) * C38301 +
            ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51089) *
               C50754 * C51074 +
           (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C51089 +
            ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C51083 +
            ((C47850 + C47849) * C118 + (C47852 + C47851) * C50838) * C38301) *
               C50754 * C1463) *
              C1464 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51089 +
            (C30745 * C118 + C30746 * C50838) * C51083 +
            ((C29954 + C29953) * C118 + (C29956 + C29955) * C50838) * C38301) *
               C50754 * C51074 -
           ((C29722 * C50838 + C29721 * C118) * C38301 +
            (C28954 * C50838 + C28953 * C118) * C51083 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
               C50754 * C51086 -
           (((C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50838 +
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C118) *
                C38301 +
            ((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C51083 +
            ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C51089) *
               C50754 * C1463) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C458 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C51042 -
             (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
                C51089 +
            ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
             (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
                C51083 +
            (C47999 * C458 + C48000 * C51042 - C48259 * C459 -
             C48260 * C50850) *
                C38301) *
               C50754 * C1358 +
           (((C29509 + C29510) * C459 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C51042 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C458) +
             (C29511 + C29512) * C50850) *
                C51089 +
            ((C29950 + C29949) * C459 -
             ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
             (C29952 + C29951) * C50850) *
                C51083 +
            ((C48158 + C48157) * C459 - (C48148 * C51042 + C48147 * C458) +
             (C48160 + C48159) * C50850) *
                C38301) *
               C50754 * C50824) *
              C1464 +
          (((C28955 * C459 -
             ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
             C28956 * C50850) *
                C51089 +
            (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
             C29720 * C50850) *
                C51083 +
            ((C29735 + C29736) * C459 - (C29722 * C51042 + C29721 * C458) +
             (C29737 + C29738) * C50850) *
                C38301) *
               C50754 * C1358 +
           (((C23090 + C23089) * C458 + (C23088 + C23087) * C51042 -
             C30748 * C459 - C30747 * C50850) *
                C51089 +
            (C30745 * C458 + C30746 * C51042 - (C29953 + C29954) * C459 -
             (C29955 + C29956) * C50850) *
                C51083 +
            ((C29954 + C29953) * C458 + (C29956 + C29955) * C51042 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C459 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C50850) *
                C38301) *
               C50754 * C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                C51089 +
            ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
             (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                C51083 +
            (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
             C48260 * C50850) *
                C38301) *
               C50754 * C1358 +
           (((C29509 + C29510) * C1731 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C1728 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1730) +
             (C29511 + C29512) * C50850) *
                C51089 +
            ((C29950 + C29949) * C1731 -
             ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
             (C29952 + C29951) * C50850) *
                C51083 +
            ((C48158 + C48157) * C1731 - (C48148 * C1728 + C48147 * C1730) +
             (C48160 + C48159) * C50850) *
                C38301) *
               C50754 * C50824) *
              C51033 +
          (((C28955 * C1731 -
             ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
             C28956 * C50850) *
                C51089 +
            (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
             C29720 * C50850) *
                C51083 +
            ((C29735 + C29736) * C1731 - (C29722 * C1728 + C29721 * C1730) +
             (C29737 + C29738) * C50850) *
                C38301) *
               C50754 * C1358 +
           (((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
             C30748 * C1731 - C30747 * C50850) *
                C51089 +
            (C30745 * C1730 + C30746 * C1728 - (C29953 + C29954) * C1731 -
             (C29955 + C29956) * C50850) *
                C51083 +
            ((C29954 + C29953) * C1730 + (C29956 + C29955) * C1728 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C1731 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C50850) *
                C38301) *
               C50754 * C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1730 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C1728 -
            (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
               C51089 +
           ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
            (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
               C51083 +
           (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
            C48260 * C50850) *
               C38301) *
              C50754 * C51086 +
          (((C29509 + C29510) * C1731 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C1728 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C1730) +
            (C29511 + C29512) * C50850) *
               C51089 +
           ((C29950 + C29949) * C1731 -
            ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
            (C29952 + C29951) * C50850) *
               C51083 +
           ((C48158 + C48157) * C1731 - (C48148 * C1728 + C48147 * C1730) +
            (C48160 + C48159) * C50850) *
               C38301) *
              C50754 * C51074 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C1730 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C1728 -
            (C29513 + C29514) * C1731 - (C29515 + C29516) * C50850) *
               C51089 +
           ((C29514 + C29513) * C1730 + (C29516 + C29515) * C1728 -
            (C47849 + C47850) * C1731 - (C47851 + C47852) * C50850) *
               C51083 +
           ((C47850 + C47849) * C1730 + (C47852 + C47851) * C1728 -
            (C22851 * C11732 + C50923 * C11733 + C22850 * C9441 +
             C22845 * C9443) *
                C1731 -
            (C22851 * C11734 + C50923 * C11735 + C22850 * C9444 +
             C22845 * C9447) *
                C50850) *
               C38301) *
              C50754 * C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1999 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51087 -
            (C28959 + C28960) * C2000 - (C28961 + C28962) * C51077 +
            C47999 * C2001 + C48000 * C1998) *
               C51089 +
           ((C28960 + C28959) * C1999 + (C28962 + C28961) * C51087 -
            (C29732 + C29731) * C2000 - (C29734 + C29733) * C51077 +
            (C30096 + C30095) * C2001 + (C30098 + C30097) * C1998) *
               C51083 +
           (C47999 * C1999 + C48000 * C51087 - C48259 * C2000 -
            C48260 * C51077 + (C48270 + C48269) * C2001 +
            (C48272 + C48271) * C1998) *
               C38301) *
              C50754 * C1358 +
          (((C29509 + C29510) * C2000 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C51087 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C1999) +
            (C29511 + C29512) * C51077 - C48147 * C2001 - C48148 * C1998) *
               C51089 +
           ((C29950 + C29949) * C2000 -
            ((C29512 + C29511) * C51087 + (C29510 + C29509) * C1999) +
            (C29952 + C29951) * C51077 - (C48157 + C48158) * C2001 -
            (C48159 + C48160) * C1998) *
               C51083 +
           ((C48158 + C48157) * C2000 - (C48148 * C51087 + C48147 * C1999) +
            (C48160 + C48159) * C51077 -
            (C22851 * C13974 + C50923 * C13976 + C22850 * C13975 +
             C22845 * C13977) *
                C2001 -
            (C22851 * C13978 + C50923 * C13980 + C22850 * C13979 +
             C22845 * C13981) *
                C1998) *
               C38301) *
              C50754 * C50824) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51089 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
            ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
               C50754 * C630 -
           (((C29951 + C29952) * C50838 + (C29949 + C29950) * C118) * C38301 +
            ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51089) *
               C50754 * C631 +
           (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C51089 +
            ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C51083 +
            ((C22850 * C3645 + C22845 * C3648 + C22851 * C9335 +
              C50923 * C9337) *
                 C118 +
             (C22850 * C3649 + C22845 * C3654 + C22851 * C9338 +
              C50923 * C9341) *
                 C50838) *
                C38301) *
               C50754 * C632) *
              C51033 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51089 +
            (C30745 * C118 + C30746 * C50838) * C51083 +
            ((C29954 + C29953) * C118 + (C29956 + C29955) * C50838) * C38301) *
               C50754 * C631 -
           ((C29722 * C50838 + C29721 * C118) * C38301 +
            (C28954 * C50838 + C28953 * C118) * C51083 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
               C50754 * C630 -
           (((C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50838 +
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C118) *
                C38301 +
            ((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C51083 +
            ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C51089) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C51089 +
           ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
           ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
              C50754 * C50808 * C113 -
          ((C29722 * C50838 + C29721 * C118) * C38301 +
           (C28954 * C50838 + C28953 * C118) * C51083 +
           ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
              C50754 * C50808 * C114 +
          (C22909 * C51089 + (C28957 * C118 + C28958 * C50838) * C51083 +
           ((C23873 + C23874) * C118 + (C23875 + C23876) * C50838) * C38301) *
              C50754 * C50808 * C115 -
          (((C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
             C22845 * C1018) *
                C50838 +
            (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
             C22845 * C1011) *
                C118) *
               C38301 +
           ((C23285 + C23284) * C50838 + (C23283 + C23282) * C118) * C51083 +
           C22910 * C51089) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C997 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C994 -
            (C28959 + C28960) * C998 - (C28961 + C28962) * C995 +
            C47999 * C999 + C48000 * C996) *
               C51089 +
           ((C28960 + C28959) * C997 + (C28962 + C28961) * C994 -
            (C29732 + C29731) * C998 - (C29734 + C29733) * C995 +
            (C30096 + C30095) * C999 + (C30098 + C30097) * C996) *
               C51083 +
           (C47999 * C997 + C48000 * C994 - (C30095 + C30096) * C998 -
            (C30097 + C30098) * C995 +
            (C22850 * C6555 + C22845 * C6558 + C22851 * C13975 +
             C50923 * C13977) *
                C999 +
            (C22850 * C6559 + C22845 * C6564 + C22851 * C13979 +
             C50923 * C13981) *
                C996) *
               C38301) *
              C50754 * C50808 * C51033 +
          ((C28955 * C998 -
            ((C22888 + C22887) * C994 + (C22886 + C22885) * C997) +
            C28956 * C995 - C29721 * C999 - C29722 * C996) *
               C51089 +
           (C29719 * C998 - (C28954 * C994 + C28953 * C997) + C29720 * C995 -
            (C29736 + C29735) * C999 - (C29738 + C29737) * C996) *
               C51083 +
           ((C29735 + C29736) * C998 - (C29722 * C994 + C29721 * C997) +
            (C29737 + C29738) * C995 -
            (C22851 * C16577 + C50923 * C16578 + C22850 * C6556 +
             C22845 * C6560) *
                C999 -
            (C22851 * C16579 + C50923 * C16580 + C22850 * C6561 +
             C22845 * C6565) *
                C996) *
               C38301) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C51089 +
           ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
           ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
              C50754 * C745 -
          (((C29951 + C29952) * C50838 + (C29949 + C29950) * C118) * C38301 +
           ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
           ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                C50838 +
            (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                C118) *
               C51089) *
              C50754 * C746 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C118 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C50838) *
               C51089 +
           ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C51083 +
           ((C22850 * C3645 + C22845 * C3648 + C22851 * C9335 +
             C50923 * C9337) *
                C118 +
            (C22850 * C3649 + C22845 * C3654 + C22851 * C9338 +
             C50923 * C9341) *
                C50838) *
               C38301) *
              C50754 * C747 -
          (((C22851 * C11664 + C50923 * C11665 + C22850 * C9338 +
             C22845 * C9341) *
                C50838 +
            (C22851 * C11662 + C50923 * C11663 + C22850 * C9335 +
             C22845 * C9337) *
                C118) *
               C38301 +
           ((C22851 * C9020 + C50923 * C9023 + C22850 * C3321 +
             C22845 * C3326) *
                C50838 +
            (C22851 * C9017 + C50923 * C9019 + C22850 * C3317 +
             C22845 * C3320) *
                C118) *
               C51083 +
           ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                C50838 +
            (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                C118) *
               C51089) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51089 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
            ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
               C50754 * C51040 -
           (((C29951 + C29952) * C50838 + (C29949 + C29950) * C118) * C38301 +
            ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51089) *
               C50754 * C50824) *
              C295 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51089 +
            (C30745 * C118 + C30746 * C50838) * C51083 +
            ((C29954 + C29953) * C118 + (C29956 + C29955) * C50838) * C38301) *
               C50754 * C50824 -
           ((C29722 * C50838 + C29721 * C118) * C38301 +
            (C28954 * C50838 + C28953 * C118) * C51083 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
               C50754 * C51040) *
              C296 +
          ((C22909 * C51089 + (C28957 * C118 + C28958 * C50838) * C51083 +
            ((C23873 + C23874) * C118 + (C23875 + C23876) * C50838) * C38301) *
               C50754 * C51040 -
           (((C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
              C22845 * C1168) *
                 C50838 +
             (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
              C22845 * C1162) *
                 C118) *
                C38301 +
            ((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C51083 +
            C23099 * C51089) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C997 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C994 -
            (C28959 + C28960) * C998 - (C28961 + C28962) * C995 +
            C47999 * C999 + C48000 * C996) *
               C51089 +
           ((C28960 + C28959) * C997 + (C28962 + C28961) * C994 -
            (C29732 + C29731) * C998 - (C29734 + C29733) * C995 +
            (C30096 + C30095) * C999 + (C30098 + C30097) * C996) *
               C51083 +
           (C47999 * C997 + C48000 * C994 - (C30095 + C30096) * C998 -
            (C30097 + C30098) * C995 +
            (C22850 * C6555 + C22845 * C6558 + C22851 * C13975 +
             C50923 * C13977) *
                C999 +
            (C22850 * C6559 + C22845 * C6564 + C22851 * C13979 +
             C50923 * C13981) *
                C996) *
               C38301) *
              C50754 * C51040 +
          (((C29509 + C29510) * C998 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C994 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C997) +
            (C29511 + C29512) * C995 - C48147 * C999 - C48148 * C996) *
               C51089 +
           ((C29950 + C29949) * C998 -
            ((C29512 + C29511) * C994 + (C29510 + C29509) * C997) +
            (C29952 + C29951) * C995 - (C48157 + C48158) * C999 -
            (C48159 + C48160) * C996) *
               C51083 +
           ((C48158 + C48157) * C998 - (C48148 * C994 + C48147 * C997) +
            (C48160 + C48159) * C995 -
            (C22851 * C13974 + C50923 * C13976 + C22850 * C13975 +
             C22845 * C13977) *
                C999 -
            (C22851 * C13978 + C50923 * C13980 + C22850 * C13979 +
             C22845 * C13981) *
                C996) *
               C38301) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
               C51089 +
           ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
            (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
               C51083 +
           ((C29731 + C29732) * C458 + (C29733 + C29734) * C51042 -
            (C30095 + C30096) * C459 - (C30097 + C30098) * C50850) *
               C38301) *
              C50754 * C630 +
          (((C29509 + C29510) * C459 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C51042 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C458) +
            (C29511 + C29512) * C50850) *
               C51089 +
           ((C29950 + C29949) * C459 -
            ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
            (C29952 + C29951) * C50850) *
               C51083 +
           ((C22850 * C3755 + C22845 * C3758 + C22851 * C9441 +
             C50923 * C9443) *
                C459 -
            ((C29951 + C29952) * C51042 + (C29949 + C29950) * C458) +
            (C22850 * C3759 + C22845 * C3764 + C22851 * C9444 +
             C50923 * C9447) *
                C50850) *
               C38301) *
              C50754 * C631 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C458 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C51042 -
            (C29513 + C29514) * C459 - (C29515 + C29516) * C50850) *
               C51089 +
           ((C29514 + C29513) * C458 + (C29516 + C29515) * C51042 -
            (C47849 + C47850) * C459 - (C47851 + C47852) * C50850) *
               C51083 +
           ((C47850 + C47849) * C458 + (C47852 + C47851) * C51042 -
            (C22851 * C11732 + C50923 * C11733 + C22850 * C9441 +
             C22845 * C9443) *
                C459 -
            (C22851 * C11734 + C50923 * C11735 + C22850 * C9444 +
             C22845 * C9447) *
                C50850) *
               C38301) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
               C51089 +
           ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
            (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
               C51083 +
           ((C29731 + C29732) * C458 + (C29733 + C29734) * C51042 -
            (C30095 + C30096) * C459 - (C30097 + C30098) * C50850) *
               C38301) *
              C50754 * C50808 * C295 +
          ((C28955 * C459 -
            ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
            C28956 * C50850) *
               C51089 +
           (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
            C29720 * C50850) *
               C51083 +
           ((C29735 + C29736) * C459 - (C29722 * C51042 + C29721 * C458) +
            (C29737 + C29738) * C50850) *
               C38301) *
              C50754 * C50808 * C296 +
          (C23291 * C51089 +
           (C28957 * C458 + C28958 * C51042 - (C23874 + C23873) * C459 -
            (C23876 + C23875) * C50850) *
               C51083 +
           ((C23873 + C23874) * C458 + (C23875 + C23876) * C51042 -
            (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
             C22845 * C1252) *
                C459 -
            (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
             C22845 * C1258) *
                C50850) *
               C38301) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
               C1240 +
           (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
               C1236 -
           (C28959 + C28960) * C1241 - (C28961 + C28962) * C1237 +
           C47999 * C1242 + C48000 * C1238 - C48259 * C1243 - C48260 * C1239) *
              C51089 +
          ((C28960 + C28959) * C1240 + (C28962 + C28961) * C1236 -
           (C29732 + C29731) * C1241 - (C29734 + C29733) * C1237 +
           (C30096 + C30095) * C1242 + (C30098 + C30097) * C1238 -
           (C48269 + C48270) * C1243 - (C48271 + C48272) * C1239) *
              C51083 +
          (C47999 * C1240 + C48000 * C1236 - C48259 * C1241 - C48260 * C1237 +
           (C48270 + C48269) * C1242 + (C48272 + C48271) * C1238 -
           (C22851 * C19469 + C50923 * C19470 + C22850 * C16691 +
            C22845 * C16693) *
               C1243 -
           (C22851 * C19471 + C50923 * C19472 + C22850 * C16694 +
            C22845 * C16697) *
               C1239) *
              C38301) *
         C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1730 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C1728 -
            (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
               C51089 +
           ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
            (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
               C51083 +
           (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
            C48260 * C50850) *
               C38301) *
              C50754 * C50808 * C51085 +
          ((C28955 * C1731 -
            ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
            C28956 * C50850) *
               C51089 +
           (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
            C29720 * C50850) *
               C51083 +
           ((C29735 + C29736) * C1731 - (C29722 * C1728 + C29721 * C1730) +
            (C29737 + C29738) * C50850) *
               C38301) *
              C50754 * C50808 * C51071 +
          (C24783 * C51089 +
           (C28957 * C1730 + C28958 * C1728 - (C23874 + C23873) * C1731 -
            (C23876 + C23875) * C50850) *
               C51083 +
           ((C23873 + C23874) * C1730 + (C23875 + C23876) * C1728 -
            (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
             C22845 * C1252) *
                C1731 -
            (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
             C22845 * C1258) *
                C50850) *
               C38301) *
              C50754 * C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C1730 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C1728 -
             (C28959 + C28960) * C1731 - (C28961 + C28962) * C50850) *
                C51089 +
            ((C28960 + C28959) * C1730 + (C28962 + C28961) * C1728 -
             (C29732 + C29731) * C1731 - (C29734 + C29733) * C50850) *
                C51083 +
            (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
             C48260 * C50850) *
                C38301) *
               C50754 * C51040 +
           (((C29509 + C29510) * C1731 -
             ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                  C1728 +
              (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                  C1730) +
             (C29511 + C29512) * C50850) *
                C51089 +
            ((C29950 + C29949) * C1731 -
             ((C29512 + C29511) * C1728 + (C29510 + C29509) * C1730) +
             (C29952 + C29951) * C50850) *
                C51083 +
            ((C48158 + C48157) * C1731 - (C48148 * C1728 + C48147 * C1730) +
             (C48160 + C48159) * C50850) *
                C38301) *
               C50754 * C50824) *
              C1464 +
          (((C28955 * C1731 -
             ((C22888 + C22887) * C1728 + (C22886 + C22885) * C1730) +
             C28956 * C50850) *
                C51089 +
            (C29719 * C1731 - (C28954 * C1728 + C28953 * C1730) +
             C29720 * C50850) *
                C51083 +
            ((C29735 + C29736) * C1731 - (C29722 * C1728 + C29721 * C1730) +
             (C29737 + C29738) * C50850) *
                C38301) *
               C50754 * C51040 +
           (((C23090 + C23089) * C1730 + (C23088 + C23087) * C1728 -
             C30748 * C1731 - C30747 * C50850) *
                C51089 +
            (C30745 * C1730 + C30746 * C1728 - (C29953 + C29954) * C1731 -
             (C29955 + C29956) * C50850) *
                C51083 +
            ((C29954 + C29953) * C1730 + (C29956 + C29955) * C1728 -
             (C22851 * C9442 + C50923 * C9445 + C22850 * C3756 +
              C22845 * C3760) *
                 C1731 -
             (C22851 * C9446 + C50923 * C9448 + C22850 * C3761 +
              C22845 * C3765) *
                 C50850) *
                C38301) *
               C50754 * C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C1999 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51087 -
            (C28959 + C28960) * C2000 - (C28961 + C28962) * C51077 +
            C47999 * C2001 + C48000 * C1998) *
               C51089 +
           ((C28960 + C28959) * C1999 + (C28962 + C28961) * C51087 -
            (C29732 + C29731) * C2000 - (C29734 + C29733) * C51077 +
            (C30096 + C30095) * C2001 + (C30098 + C30097) * C1998) *
               C51083 +
           (C47999 * C1999 + C48000 * C51087 - C48259 * C2000 -
            C48260 * C51077 + (C48270 + C48269) * C2001 +
            (C48272 + C48271) * C1998) *
               C38301) *
              C50754 * C50808 * C1464 +
          ((C28955 * C2000 -
            ((C22888 + C22887) * C51087 + (C22886 + C22885) * C1999) +
            C28956 * C51077 - C29721 * C2001 - C29722 * C1998) *
               C51089 +
           (C29719 * C2000 - (C28954 * C51087 + C28953 * C1999) +
            C29720 * C51077 - (C29736 + C29735) * C2001 -
            (C29738 + C29737) * C1998) *
               C51083 +
           ((C29735 + C29736) * C2000 - (C29722 * C51087 + C29721 * C1999) +
            (C29737 + C29738) * C51077 -
            (C22851 * C16577 + C50923 * C16578 + C22850 * C6556 +
             C22845 * C6560) *
                C2001 -
            (C22851 * C16579 + C50923 * C16580 + C22850 * C6561 +
             C22845 * C6565) *
                C1998) *
               C38301) *
              C50754 * C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C51089 +
           ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
           ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
              C50754 * C50808 * C113 -
          ((C29722 * C50838 + C29721 * C118) * C38301 +
           (C28954 * C50838 + C28953 * C118) * C51083 +
           ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
              C50754 * C50808 * C114 +
          (C22909 * C51089 + (C28957 * C118 + C28958 * C50838) * C51083 +
           ((C23873 + C23874) * C118 + (C23875 + C23876) * C50838) * C38301) *
              C50754 * C50808 * C115 -
          (((C22851 * C1165 + C50923 * C1169 + C22850 * C1012 +
             C22845 * C1018) *
                C50838 +
            (C22851 * C1157 + C50923 * C1164 + C22850 * C1003 +
             C22845 * C1011) *
                C118) *
               C38301 +
           ((C23285 + C23284) * C50838 + (C23283 + C23282) * C118) * C51083 +
           C22910 * C51089) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51089 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
            ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
               C50754 * C630 -
           (((C29951 + C29952) * C50838 + (C29949 + C29950) * C118) * C38301 +
            ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51089) *
               C50754 * C631 +
           (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                 C118 +
             (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                 C50838) *
                C51089 +
            ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C51083 +
            ((C22850 * C3645 + C22845 * C3648 + C22851 * C9335 +
              C50923 * C9337) *
                 C118 +
             (C22850 * C3649 + C22845 * C3654 + C22851 * C9338 +
              C50923 * C9341) *
                 C50838) *
                C38301) *
               C50754 * C632) *
              C51033 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51089 +
            (C30745 * C118 + C30746 * C50838) * C51083 +
            ((C29954 + C29953) * C118 + (C29956 + C29955) * C50838) * C38301) *
               C50754 * C631 -
           ((C29722 * C50838 + C29721 * C118) * C38301 +
            (C28954 * C50838 + C28953 * C118) * C51083 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
               C50754 * C630 -
           (((C22851 * C9340 + C50923 * C9342 + C22850 * C3651 +
              C22845 * C3655) *
                 C50838 +
             (C22851 * C9336 + C50923 * C9339 + C22850 * C3646 +
              C22845 * C3650) *
                 C118) *
                C38301 +
            ((C29168 + C29167) * C50838 + (C29166 + C29165) * C118) * C51083 +
            ((C23458 + C23457) * C50838 + (C23456 + C23455) * C118) * C51089) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                 C118 +
             (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                 C50838) *
                C51089 +
            ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
            ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
               C50754 * C51040 -
           (((C29951 + C29952) * C50838 + (C29949 + C29950) * C118) * C38301 +
            ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C50838 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C118) *
                C51089) *
               C50754 * C50824) *
              C295 +
          ((((C23090 + C23089) * C118 + (C23088 + C23087) * C50838) * C51089 +
            (C30745 * C118 + C30746 * C50838) * C51083 +
            ((C29954 + C29953) * C118 + (C29956 + C29955) * C50838) * C38301) *
               C50754 * C50824 -
           ((C29722 * C50838 + C29721 * C118) * C38301 +
            (C28954 * C50838 + C28953 * C118) * C51083 +
            ((C22888 + C22887) * C50838 + (C22886 + C22885) * C118) * C51089) *
               C50754 * C51040) *
              C296 +
          ((C22909 * C51089 + (C28957 * C118 + C28958 * C50838) * C51083 +
            ((C23873 + C23874) * C118 + (C23875 + C23876) * C50838) * C38301) *
               C50754 * C51040 -
           (((C22851 * C3653 + C50923 * C3656 + C22850 * C1163 +
              C22845 * C1168) *
                 C50838 +
             (C22851 * C3647 + C50923 * C3652 + C22850 * C1156 +
              C22845 * C1162) *
                 C118) *
                C38301 +
            ((C24630 + C24629) * C50838 + (C24628 + C24627) * C118) * C51083 +
            C23099 * C51089) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C118 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C50838) *
               C51089 +
           ((C28960 + C28959) * C118 + (C28962 + C28961) * C50838) * C51083 +
           ((C29731 + C29732) * C118 + (C29733 + C29734) * C50838) * C38301) *
              C50754 * C745 -
          (((C29951 + C29952) * C50838 + (C29949 + C29950) * C118) * C38301 +
           ((C29512 + C29511) * C50838 + (C29510 + C29509) * C118) * C51083 +
           ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                C50838 +
            (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                C118) *
               C51089) *
              C50754 * C746 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C118 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C50838) *
               C51089 +
           ((C29514 + C29513) * C118 + (C29516 + C29515) * C50838) * C51083 +
           ((C22850 * C3645 + C22845 * C3648 + C22851 * C9335 +
             C50923 * C9337) *
                C118 +
            (C22850 * C3649 + C22845 * C3654 + C22851 * C9338 +
             C50923 * C9341) *
                C50838) *
               C38301) *
              C50754 * C747 -
          (((C22851 * C11664 + C50923 * C11665 + C22850 * C9338 +
             C22845 * C9341) *
                C50838 +
            (C22851 * C11662 + C50923 * C11663 + C22850 * C9335 +
             C22845 * C9337) *
                C118) *
               C38301 +
           ((C22851 * C9020 + C50923 * C9023 + C22850 * C3321 +
             C22845 * C3326) *
                C50838 +
            (C22851 * C9017 + C50923 * C9019 + C22850 * C3317 +
             C22845 * C3320) *
                C118) *
               C51083 +
           ((C22851 * C3166 + C50923 * C3170 + C22850 * C760 + C22845 * C765) *
                C50838 +
            (C22851 * C3161 + C50923 * C3167 + C22850 * C753 + C22845 * C761) *
                C118) *
               C51089) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
               C51089 +
           ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
            (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
               C51083 +
           ((C29731 + C29732) * C458 + (C29733 + C29734) * C51042 -
            (C30095 + C30096) * C459 - (C30097 + C30098) * C50850) *
               C38301) *
              C50754 * C50808 * C295 +
          ((C28955 * C459 -
            ((C22888 + C22887) * C51042 + (C22886 + C22885) * C458) +
            C28956 * C50850) *
               C51089 +
           (C29719 * C459 - (C28954 * C51042 + C28953 * C458) +
            C29720 * C50850) *
               C51083 +
           ((C29735 + C29736) * C459 - (C29722 * C51042 + C29721 * C458) +
            (C29737 + C29738) * C50850) *
               C38301) *
              C50754 * C50808 * C296 +
          (C23291 * C51089 +
           (C28957 * C458 + C28958 * C51042 - (C23874 + C23873) * C459 -
            (C23876 + C23875) * C50850) *
               C51083 +
           ((C23873 + C23874) * C458 + (C23875 + C23876) * C51042 -
            (C22851 * C3757 + C50923 * C3762 + C22850 * C1246 +
             C22845 * C1252) *
                C459 -
            (C22851 * C3763 + C50923 * C3766 + C22850 * C1253 +
             C22845 * C1258) *
                C50850) *
               C38301) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22850 * C119 + C22845 * C126 + C22851 * C301 + C50923 * C311) *
                C458 +
            (C22850 * C127 + C22845 * C140 + C22851 * C310 + C50923 * C319) *
                C51042 -
            (C28959 + C28960) * C459 - (C28961 + C28962) * C50850) *
               C51089 +
           ((C28960 + C28959) * C458 + (C28962 + C28961) * C51042 -
            (C29732 + C29731) * C459 - (C29734 + C29733) * C50850) *
               C51083 +
           ((C29731 + C29732) * C458 + (C29733 + C29734) * C51042 -
            (C30095 + C30096) * C459 - (C30097 + C30098) * C50850) *
               C38301) *
              C50754 * C630 +
          (((C29509 + C29510) * C459 -
            ((C22851 * C641 + C50923 * C650 + C22850 * C310 + C22845 * C319) *
                 C51042 +
             (C22851 * C635 + C50923 * C640 + C22850 * C301 + C22845 * C311) *
                 C458) +
            (C29511 + C29512) * C50850) *
               C51089 +
           ((C29950 + C29949) * C459 -
            ((C29512 + C29511) * C51042 + (C29510 + C29509) * C458) +
            (C29952 + C29951) * C50850) *
               C51083 +
           ((C22850 * C3755 + C22845 * C3758 + C22851 * C9441 +
             C50923 * C9443) *
                C459 -
            ((C29951 + C29952) * C51042 + (C29949 + C29950) * C458) +
            (C22850 * C3759 + C22845 * C3764 + C22851 * C9444 +
             C50923 * C9447) *
                C50850) *
               C38301) *
              C50754 * C631 +
          (((C22850 * C635 + C22845 * C640 + C22851 * C753 + C50923 * C761) *
                C458 +
            (C22850 * C641 + C22845 * C650 + C22851 * C760 + C50923 * C765) *
                C51042 -
            (C29513 + C29514) * C459 - (C29515 + C29516) * C50850) *
               C51089 +
           ((C29514 + C29513) * C458 + (C29516 + C29515) * C51042 -
            (C47849 + C47850) * C459 - (C47851 + C47852) * C50850) *
               C51083 +
           ((C47850 + C47849) * C458 + (C47852 + C47851) * C51042 -
            (C22851 * C11732 + C50923 * C11733 + C22850 * C9441 +
             C22845 * C9443) *
                C459 -
            (C22851 * C11734 + C50923 * C11735 + C22850 * C9444 +
             C22845 * C9447) *
                C50850) *
               C38301) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C1358 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C50824) *
              C51085 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C50824 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C1358) *
              C51071 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C50937 * C51026 +
            ((C8232 + C8233 + C8234) * C118 +
             (C8235 + C8236 + C8237) * C50838) *
                C50937 * C50759) *
               C1358 -
           (((C8182 * C754 + C8177 * C762 + C8181 * C647 + C8176 * C653 +
              C8180 * C304 + C8175 * C316) *
                 C50838 +
             (C8182 * C750 + C8177 * C755 + C8181 * C638 + C8176 * C646 +
              C8180 * C298 + C8175 * C305) *
                 C118) *
                C50937 * C50759 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C50937 * C51026) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C1358 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C50824) *
              C51085 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C50824 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C1358) *
              C51071 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
            (C186 + C187) * C50937 * C111) *
               C1358 -
           (((C117 * C314 + C50907 * C321) * C50838 +
             (C117 * C303 + C50907 * C315) * C118) *
                C50937 * C111 +
            (C354 + C353) * C50937 * C110 + C357 * C109 + C358 * C108) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C15556 +
             (C5693 * C118 + C5694 * C50838) * C15557 +
             (C6284 * C118 + C6285 * C50838) * C15558) *
                C51026 +
            ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
             (C15560 + C15561) * C15558) *
                C50759) *
               C1358 -
           (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
             (C351 + C352) * C15556) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C15558 +
             (C6115 * C50838 + C6114 * C118) * C15557 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C15556) *
                C51026) *
               C50824) *
              C51085 +
          ((((C352 + C351) * C15556 + (C5524 + C5523) * C15557 +
             (C15713 + C15712) * C15558) *
                C51026 +
            ((C350 + C349) * C15556 + (C5521 + C5520) * C15557 +
             (C15714 + C15715) * C15558) *
                C50759) *
               C50824 -
           (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
             (C181 + C180) * C15556) *
                C50759 +
            ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
             (C179 + C178) * C15556) *
                C51026) *
               C1358) *
              C51071 +
          (((C188 * C15556 + C5368 * C15557 + (C15563 + C15562) * C15558) *
                C51026 +
            (C189 * C15556 + (C5364 + C5363) * C15557 +
             (C15564 + C15565) * C15558) *
                C50759) *
               C1358 -
           ((((C117 * C1165 + C50907 * C1169) * C50838 +
              (C117 * C1157 + C50907 * C1164) * C118) *
                 C15558 +
             (C5526 + C5525) * C15557 + C355 * C15556) *
                C50759 +
            ((C15715 + C15714) * C15558 + C5527 * C15557 + C356 * C15556) *
                C51026) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C51086 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C51074 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C50937 * C51026 +
            ((C8760 + C8761 + C8762) * C118 +
             (C8763 + C8764 + C8765) * C50838) *
                C50937 * C50759) *
               C1463) *
              C1464 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C51074 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C51086 -
           (((C8182 * C3162 + C8177 * C3168 + C8181 * C756 + C8176 * C763 +
              C8180 * C645 + C8175 * C652) *
                 C50838 +
             (C8182 * C3159 + C8177 * C3163 + C8181 * C751 + C8176 * C757 +
              C8180 * C637 + C8175 * C644) *
                 C118) *
                C50937 * C50759 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C50937 * C51026) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C51086 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C51074 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C50937 * C108 +
            (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
            (C678 + C679) * C50937 * C111) *
               C1463) *
              C1464 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C51074 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C51086 -
           (((C117 * C648 + C50907 * C654) * C50838 +
             (C117 * C639 + C50907 * C649) * C118) *
                C50937 * C111 +
            (C679 + C678) * C50937 * C110 + (C677 + C676) * C50937 * C109 +
            (C675 + C674) * C50937 * C108) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C15556 +
             (C5693 * C118 + C5694 * C50838) * C15557 +
             (C6284 * C118 + C6285 * C50838) * C15558) *
                C51026 +
            ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
             (C15560 + C15561) * C15558) *
                C50759) *
               C51086 -
           (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
             (C351 + C352) * C15556) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C15558 +
             (C6115 * C50838 + C6114 * C118) * C15557 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C15556) *
                C51026) *
               C51074 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C15556 +
             (C6116 * C118 + C6117 * C50838) * C15557 +
             (C16272 * C118 + C16273 * C50838) * C15558) *
                C51026 +
            ((C674 + C675) * C15556 + (C5858 + C5859) * C15557 +
             (C16022 + C16023) * C15558) *
                C50759) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C15556 + (C5524 + C5523) * C15557 +
             (C15713 + C15712) * C15558) *
                C51026 +
            ((C350 + C349) * C15556 + (C5521 + C5520) * C15557 +
             (C15714 + C15715) * C15558) *
                C50759) *
               C51074 -
           (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
             (C181 + C180) * C15556) *
                C50759 +
            ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
             (C179 + C178) * C15556) *
                C51026) *
               C51086 -
           ((((C117 * C3653 + C50907 * C3656) * C50838 +
              (C117 * C3647 + C50907 * C3652) * C118) *
                 C15558 +
             (C5861 + C5860) * C15557 + (C677 + C676) * C15556) *
                C50759 +
            ((C16023 + C16022) * C15558 + (C5859 + C5858) * C15557 +
             (C675 + C674) * C15556) *
                C51026) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C458 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C51042 -
             (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
              C8180 * C460 + C8175 * C466) *
                 C459 -
             (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
              C8180 * C467 + C8175 * C478) *
                 C50850) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
             (C8590 + C8591 + C8592) * C459 -
             (C8593 + C8594 + C8595) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
              C8182 * C3317 + C8177 * C3320) *
                 C459 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C51042 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C458) +
             (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
              C8182 * C3321 + C8177 * C3326) *
                 C50850) *
                C50937 * C51026 +
            ((C9948 + C9949 + C9950) * C459 -
             ((C8408 + C8409 + C8410) * C51042 +
              (C8411 + C8412 + C8413) * C458) +
             (C9951 + C9952 + C9953) * C50850) *
                C50937 * C50759) *
               C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C459 -
             ((C8225 + C8224 + C8223) * C51042 +
              (C8222 + C8221 + C8220) * C458) +
             (C8595 + C8594 + C8593) * C50850) *
                C50937 * C51026 +
            ((C8596 + C8597 + C8598) * C459 -
             ((C8226 + C8227 + C8228) * C51042 +
              (C8229 + C8230 + C8231) * C458) +
             (C8599 + C8600 + C8601) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8413 + C8412 + C8411) * C458 + (C8410 + C8409 + C8408) * C51042 -
             (C9950 + C9949 + C9948) * C459 -
             (C9953 + C9952 + C9951) * C50850) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C458 + (C8417 + C8418 + C8419) * C51042 -
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C459 -
             (C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50850) *
                C50937 * C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 -
             (C117 * C460 + C50907 * C466) * C459 -
             (C117 * C467 + C50907 * C478) * C50850) *
                C50937 * C108 +
            (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
            C532 * C111) *
               C1358 +
           (((C117 * C864 + C50907 * C872) * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             (C117 * C873 + C50907 * C888) * C50850) *
                C50937 * C108 +
            (C1625 - (C1603 + C1604) + C1626) * C50937 * C109 +
            (C1627 - (C1609 + C1610) + C1628) * C50937 * C110 +
            (C1629 - (C1615 + C1616) + C1630) * C50937 * C111) *
               C50824) *
              C1464 +
          (((C519 - (C486 + C485) + C520) * C50937 * C108 +
            (C521 - (C492 + C491) + C522) * C50937 * C109 +
            (C523 - (C498 + C497) + C524) * C50937 * C110 +
            (C525 - (C505 + C506) + C526) * C50937 * C111) *
               C1358 +
           ((C1604 + C1603 - C1625 - C1626) * C50937 * C108 +
            (C1610 + C1609 - C1627 - C1628) * C50937 * C109 +
            (C1616 + C1615 - C1629 - C1630) * C50937 * C110 +
            (C345 * C458 + C346 * C51042 -
             (C117 * C1596 + C50907 * C1597) * C459 -
             (C117 * C1598 + C50907 * C1599) * C50850) *
                C50937 * C111) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C458 +
              (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
              C5694 * C50850) *
                 C15556 +
             (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                 C15557 +
             (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                 C15558) *
                C51026 +
            ((C485 + C486 - C519 - C520) * C15556 +
             (C5680 + C5681 - C5682 - C5683) * C15557 +
             (C15862 + C15863 - C15864 - C15865) * C15558) *
                C50759) *
               C1358 +
           (((C6114 * C459 -
              ((C117 * C310 + C50907 * C319) * C51042 +
               (C117 * C301 + C50907 * C311) * C458) +
              C6115 * C50850) *
                 C15556 +
             (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                 C15557 +
             (C16590 * C459 - (C6453 * C51042 + C6452 * C458) +
              C16591 * C50850) *
                 C15558) *
                C51026 +
            ((C1625 - (C1603 + C1604) + C1626) * C15556 +
             (C7060 - (C7061 + C7062) + C7063) * C15557 +
             (C17192 - (C17193 + C17194) + C17195) * C15558) *
                C50759) *
               C50824) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C15556 +
             (C5682 - (C5681 + C5680) + C5683) * C15557 +
             (C15864 - (C15863 + C15862) + C15865) * C15558) *
                C51026 +
            ((C521 - (C492 + C491) + C522) * C15556 +
             (C5687 - (C5686 + C5685) + C5688) * C15557 +
             (C15866 - (C15867 + C15868) + C15869) * C15558) *
                C50759) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C15556 +
             (C7062 + C7061 - C7060 - C7063) * C15557 +
             (C17194 + C17193 - C17192 - C17195) * C15558) *
                C51026 +
            ((C1610 + C1609 - C1627 - C1628) * C15556 +
             (C7066 + C7065 - C7064 - C7067) * C15557 +
             (C6456 * C458 + C6457 * C51042 -
              (C117 * C3757 + C50907 * C3762) * C459 -
              (C117 * C3763 + C50907 * C3766) * C50850) *
                 C15558) *
                C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
              C8180 * C460 + C8175 * C466) *
                 C1731 -
             (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
              C8180 * C467 + C8175 * C478) *
                 C50850) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
             (C8590 + C8591 + C8592) * C1731 -
             (C8593 + C8594 + C8595) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
              C8182 * C3317 + C8177 * C3320) *
                 C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
              C8182 * C3321 + C8177 * C3326) *
                 C50850) *
                C50937 * C51026 +
            ((C9948 + C9949 + C9950) * C1731 -
             ((C8408 + C8409 + C8410) * C1728 +
              (C8411 + C8412 + C8413) * C1730) +
             (C9951 + C9952 + C9953) * C50850) *
                C50937 * C50759) *
               C50824) *
              C51033 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C50937 * C51026 +
            ((C8596 + C8597 + C8598) * C1731 -
             ((C8226 + C8227 + C8228) * C1728 +
              (C8229 + C8230 + C8231) * C1730) +
             (C8599 + C8600 + C8601) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C1730 + (C8417 + C8418 + C8419) * C1728 -
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C1731 -
             (C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50850) *
                C50937 * C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 -
             (C117 * C460 + C50907 * C466) * C1731 -
             (C117 * C467 + C50907 * C478) * C50850) *
                C50937 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
            C1756 * C111) *
               C1358 +
           (((C117 * C864 + C50907 * C872) * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             (C117 * C873 + C50907 * C888) * C50850) *
                C50937 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50937 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50937 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50937 * C111) *
               C50824) *
              C51033 +
          (((C1735 - (C1734 + C1733) + C1736) * C50937 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50937 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50937 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50937 * C111) *
               C1358 +
           ((C1889 + C1888 - C1887 - C1890) * C50937 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50937 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50937 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50907 * C1597) * C1731 -
             (C117 * C1598 + C50907 * C1599) * C50850) *
                C50937 * C111) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C15556 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C15557 +
             (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                 C15558) *
                C51026 +
            ((C1733 + C1734 - C1735 - C1736) * C15556 +
             (C7214 + C7215 - C7216 - C7217) * C15557 +
             (C17342 + C17343 - C17344 - C17345) * C15558) *
                C50759) *
               C1358 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C15556 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C15557 +
             (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
              C16591 * C50850) *
                 C15558) *
                C51026 +
            ((C1887 - (C1888 + C1889) + C1890) * C15556 +
             (C7426 - (C7427 + C7428) + C7429) * C15557 +
             (C17544 - (C17545 + C17546) + C17547) * C15558) *
                C50759) *
               C50824) *
              C51033 +
          ((((C1735 - (C1734 + C1733) + C1736) * C15556 +
             (C7216 - (C7215 + C7214) + C7217) * C15557 +
             (C17344 - (C17343 + C17342) + C17345) * C15558) *
                C51026 +
            ((C1739 - (C1738 + C1737) + C1740) * C15556 +
             (C7221 - (C7220 + C7219) + C7222) * C15557 +
             (C17346 - (C17347 + C17348) + C17349) * C15558) *
                C50759) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C15556 +
             (C7428 + C7427 - C7426 - C7429) * C15557 +
             (C17546 + C17545 - C17544 - C17547) * C15558) *
                C51026 +
            ((C1893 + C1892 - C1891 - C1894) * C15556 +
             (C7432 + C7431 - C7430 - C7433) * C15557 +
             (C6456 * C1730 + C6457 * C1728 -
              (C117 * C3757 + C50907 * C3762) * C1731 -
              (C117 * C3763 + C50907 * C3766) * C50850) *
                 C15558) *
                C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C1731 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
            (C8590 + C8591 + C8592) * C1731 -
            (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C51086 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C1731 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C1728 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1730) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C50850) *
               C50937 * C51026 +
           ((C9948 + C9949 + C9950) * C1731 -
            ((C8408 + C8409 + C8410) * C1728 +
             (C8411 + C8412 + C8413) * C1730) +
            (C9951 + C9952 + C9953) * C50850) *
               C50937 * C50759) *
              C51074 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C1730 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C1728 -
            (C8182 * C9017 + C8177 * C9019 + C8181 * C3317 + C8176 * C3320 +
             C8180 * C868 + C8175 * C880) *
                C1731 -
            (C8182 * C9020 + C8177 * C9023 + C8181 * C3321 + C8176 * C3326 +
             C8180 * C881 + C8175 * C892) *
                C50850) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C1730 + (C8763 + C8764 + C8765) * C1728 -
            (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
             C8180 * C869 + C8175 * C882) *
                C1731 -
            (C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
             C8180 * C883 + C8175 * C893) *
                C50850) *
               C50937 * C50759) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1730 +
            (C117 * C127 + C50907 * C140) * C1728 -
            (C117 * C460 + C50907 * C466) * C1731 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
           C1756 * C111) *
              C51086 +
          (((C117 * C864 + C50907 * C872) * C1731 -
            ((C117 * C310 + C50907 * C319) * C1728 +
             (C117 * C301 + C50907 * C311) * C1730) +
            (C117 * C873 + C50907 * C888) * C50850) *
               C50937 * C108 +
           (C1887 - (C1888 + C1889) + C1890) * C50937 * C109 +
           (C1891 - (C1892 + C1893) + C1894) * C50937 * C110 +
           (C1895 - (C1896 + C1897) + C1898) * C50937 * C111) *
              C51074 +
          (((C117 * C635 + C50907 * C640) * C1730 +
            (C117 * C641 + C50907 * C650) * C1728 -
            (C117 * C868 + C50907 * C880) * C1731 -
            (C117 * C881 + C50907 * C892) * C50850) *
               C50937 * C108 +
           (C668 * C1730 + C669 * C1728 -
            (C117 * C869 + C50907 * C882) * C1731 -
            (C117 * C883 + C50907 * C893) * C50850) *
               C50937 * C109 +
           (C670 * C1730 + C671 * C1728 -
            (C117 * C870 + C50907 * C884) * C1731 -
            (C117 * C885 + C50907 * C894) * C50850) *
               C50937 * C110 +
           (C672 * C1730 + C673 * C1728 -
            (C117 * C871 + C50907 * C886) * C1731 -
            (C117 * C887 + C50907 * C895) * C50850) *
               C50937 * C111) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C15556 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C15557 +
            (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                C15558) *
               C51026 +
           ((C1733 + C1734 - C1735 - C1736) * C15556 +
            (C7214 + C7215 - C7216 - C7217) * C15557 +
            (C17342 + C17343 - C17344 - C17345) * C15558) *
               C50759) *
              C51086 +
          (((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C15556 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C15557 +
            (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
             C16591 * C50850) *
                C15558) *
               C51026 +
           ((C1887 - (C1888 + C1889) + C1890) * C15556 +
            (C7426 - (C7427 + C7428) + C7429) * C15557 +
            (C17544 - (C17545 + C17546) + C17547) * C15558) *
               C50759) *
              C51074 +
          ((((C117 * C635 + C50907 * C640) * C1730 +
             (C117 * C641 + C50907 * C650) * C1728 - C6116 * C1731 -
             C6117 * C50850) *
                C15556 +
            (C6116 * C1730 + C6117 * C1728 - C16272 * C1731 - C16273 * C50850) *
                C15557 +
            (C16272 * C1730 + C16273 * C1728 -
             (C117 * C9441 + C50907 * C9443) * C1731 -
             (C117 * C9444 + C50907 * C9447) * C50850) *
                C15558) *
               C51026 +
           ((C668 * C1730 + C669 * C1728 - C5854 * C1731 - C5855 * C50850) *
                C15556 +
            (C5854 * C1730 + C5855 * C1728 - C16020 * C1731 - C16021 * C50850) *
                C15557 +
            (C16020 * C1730 + C16021 * C1728 -
             (C117 * C9442 + C50907 * C9445) * C1731 -
             (C117 * C9446 + C50907 * C9448) * C50850) *
                C15558) *
               C50759) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C2000 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C51077 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C2001 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C1998) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1999 + (C8223 + C8224 + C8225) * C51087 -
            (C8590 + C8591 + C8592) * C2000 - (C8593 + C8594 + C8595) * C51077 +
            (C9184 + C9185 + C9186) * C2001 + (C9187 + C9188 + C9189) * C1998) *
               C50937 * C50759) *
              C1358 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C2000 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51087 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1999) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C51077 -
            (C8182 * C9335 + C8177 * C9337 + C8181 * C3645 + C8176 * C3648 +
             C8180 * C1154 + C8175 * C1158) *
                C2001 -
            (C8182 * C9338 + C8177 * C9341 + C8181 * C3649 + C8176 * C3654 +
             C8180 * C1159 + C8175 * C1166) *
                C1998) *
               C50937 * C51026 +
           ((C9948 + C9949 + C9950) * C2000 -
            ((C8408 + C8409 + C8410) * C51087 +
             (C8411 + C8412 + C8413) * C1999) +
            (C9951 + C9952 + C9953) * C51077 -
            (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
             C8180 * C1155 + C8175 * C1160) *
                C2001 -
            (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
             C8180 * C1161 + C8175 * C1167) *
                C1998) *
               C50937 * C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1999 +
            (C117 * C127 + C50907 * C140) * C51087 -
            (C117 * C460 + C50907 * C466) * C2000 -
            (C117 * C467 + C50907 * C478) * C51077 +
            (C117 * C1000 + C50907 * C1005) * C2001 +
            (C117 * C1006 + C50907 * C1015) * C1998) *
               C50937 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50937 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50937 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50937 * C111) *
              C1358 +
          (((C117 * C864 + C50907 * C872) * C2000 -
            ((C117 * C310 + C50907 * C319) * C51087 +
             (C117 * C301 + C50907 * C311) * C1999) +
            (C117 * C873 + C50907 * C888) * C51077 -
            (C117 * C1154 + C50907 * C1158) * C2001 -
            (C117 * C1159 + C50907 * C1166) * C1998) *
               C50937 * C108 +
           (C1619 * C2000 - (C343 * C51087 + C344 * C1999) + C1620 * C51077 -
            (C117 * C1155 + C50907 * C1160) * C2001 -
            (C117 * C1161 + C50907 * C1167) * C1998) *
               C50937 * C109 +
           (C1621 * C2000 - (C341 * C51087 + C342 * C1999) + C1622 * C51077 -
            (C117 * C1156 + C50907 * C1162) * C2001 -
            (C117 * C1163 + C50907 * C1168) * C1998) *
               C50937 * C110 +
           (C1623 * C2000 - (C339 * C51087 + C340 * C1999) + C1624 * C51077 -
            (C117 * C1157 + C50907 * C1164) * C2001 -
            (C117 * C1165 + C50907 * C1169) * C1998) *
               C50937 * C111) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C15556 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C15557 +
            (C6284 * C1999 + C6285 * C51087 - C6572 * C2000 - C6573 * C51077 +
             C16704 * C2001 + C16705 * C1998) *
                C15558) *
               C51026 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C15556 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C15557 +
            (C17694 + C17695 - C17696 - C17697 + C17698 + C17699) * C15558) *
               C50759) *
              C1358 +
          (((C6114 * C2000 -
             ((C117 * C310 + C50907 * C319) * C51087 +
              (C117 * C301 + C50907 * C311) * C1999) +
             C6115 * C51077 - C6452 * C2001 - C6453 * C1998) *
                C15556 +
            (C6452 * C2000 - (C6115 * C51087 + C6114 * C1999) + C6453 * C51077 -
             C16590 * C2001 - C16591 * C1998) *
                C15557 +
            (C16590 * C2000 - (C6453 * C51087 + C6452 * C1999) +
             C16591 * C51077 - (C117 * C13975 + C50907 * C13977) * C2001 -
             (C117 * C13979 + C50907 * C13981) * C1998) *
                C15558) *
               C51026 +
           ((C1619 * C2000 - (C343 * C51087 + C344 * C1999) + C1620 * C51077 -
             C6454 * C2001 - C6455 * C1998) *
                C15556 +
            (C6454 * C2000 - (C1620 * C51087 + C1619 * C1999) + C6455 * C51077 -
             C16592 * C2001 - C16593 * C1998) *
                C15557 +
            (C16592 * C2000 - (C6455 * C51087 + C6454 * C1999) +
             C16593 * C51077 - (C117 * C16577 + C50907 * C16578) * C2001 -
             (C117 * C16579 + C50907 * C16580) * C1998) *
                C15558) *
               C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50907 * C126) * C118 +
                (C117 * C127 + C50907 * C140) * C50838) *
                   C50937 * C108 +
               (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
                  C50808 * C113 -
              (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
               (C179 + C178) * C50937 * C108) *
                  C50808 * C114 +
              (C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
               (C186 + C187) * C50937 * C111) *
                  C50808 * C115 -
              (((C117 * C138 + C50907 * C146) * C50838 +
                (C117 * C125 + C50907 * C139) * C118) *
                   C50937 * C111 +
               (C187 + C186) * C50937 * C110 + C194 * C109 + C195 * C108) *
                  C50808 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50907 * C126) * C118 +
                 (C117 * C127 + C50907 * C140) * C50838) *
                    C50937 * C108 +
                (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
                   C630 -
               (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
                ((C117 * C310 + C50907 * C319) * C50838 +
                 (C117 * C301 + C50907 * C311) * C118) *
                    C50937 * C108) *
                   C631 +
               (((C117 * C635 + C50907 * C640) * C118 +
                 (C117 * C641 + C50907 * C650) * C50838) *
                    C50937 * C108 +
                (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
                (C678 + C679) * C50937 * C111) *
                   C632) *
                  C51033 +
              (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
                (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
                   C631 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
                (C179 + C178) * C50937 * C108) *
                   C630 -
               (((C117 * C648 + C50907 * C654) * C50838 +
                 (C117 * C639 + C50907 * C649) * C118) *
                    C50937 * C111 +
                (C679 + C678) * C50937 * C110 + (C677 + C676) * C50937 * C109 +
                (C675 + C674) * C50937 * C108) *
                   C632) *
                  C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C997 +
            (C117 * C127 + C50907 * C140) * C994 -
            (C117 * C460 + C50907 * C466) * C998 -
            (C117 * C467 + C50907 * C478) * C995 +
            (C117 * C1000 + C50907 * C1005) * C999 +
            (C117 * C1006 + C50907 * C1015) * C996) *
               C50937 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50937 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50937 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50937 * C111) *
              C50808 * C51033 +
          ((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C50937 * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C50937 * C109 +
           (C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C50937 * C110 +
           (C517 * C998 - (C174 * C994 + C175 * C997) + C518 * C995 -
            (C117 * C1004 + C50907 * C1013) * C999 -
            (C117 * C1014 + C50907 * C1019) * C996) *
               C50937 * C111) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C50808 * C113 -
          (((C8226 + C8227 + C8228) * C50838 + (C8229 + C8230 + C8231) * C118) *
               C50937 * C50759 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C50937 * C51026) *
              C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C118 + (C8235 + C8236 + C8237) * C50838) *
               C50937 * C50759) *
              C50808 * C115 -
          (((C8182 * C648 + C8177 * C654 + C8181 * C313 + C8176 * C320 +
             C8180 * C134 + C8175 * C144) *
                C50838 +
            (C8182 * C639 + C8177 * C649 + C8181 * C302 + C8176 * C312 +
             C8180 * C123 + C8175 * C135) *
                C118) *
               C50937 * C50759 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C50937 * C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C630 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C50937 * C51026 +
            ((C8760 + C8761 + C8762) * C118 +
             (C8763 + C8764 + C8765) * C50838) *
                C50937 * C50759) *
               C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C631 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C630 -
           (((C8182 * C3162 + C8177 * C3168 + C8181 * C756 + C8176 * C763 +
              C8180 * C645 + C8175 * C652) *
                 C50838 +
             (C8182 * C3159 + C8177 * C3163 + C8181 * C751 + C8176 * C757 +
              C8180 * C637 + C8175 * C644) *
                 C118) *
                C50937 * C50759 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C50937 * C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C998 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C995 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C999 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C996) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C997 + (C8223 + C8224 + C8225) * C994 -
            (C8590 + C8591 + C8592) * C998 - (C8593 + C8594 + C8595) * C995 +
            (C9184 + C9185 + C9186) * C999 + (C9187 + C9188 + C9189) * C996) *
               C50937 * C50759) *
              C50808 * C51033 +
          (((C8592 + C8591 + C8590) * C998 -
            ((C8225 + C8224 + C8223) * C994 + (C8222 + C8221 + C8220) * C997) +
            (C8595 + C8594 + C8593) * C995 - (C9186 + C9185 + C9184) * C999 -
            (C9189 + C9188 + C9187) * C996) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C998 -
            ((C8226 + C8227 + C8228) * C994 + (C8229 + C8230 + C8231) * C997) +
            (C8599 + C8600 + C8601) * C995 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C999 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C996) *
               C50937 * C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C15556 +
            (C5693 * C118 + C5694 * C50838) * C15557 +
            (C6284 * C118 + C6285 * C50838) * C15558) *
               C51026 +
           ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
            (C15560 + C15561) * C15558) *
               C50759) *
              C50808 * C113 -
          (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
            (C181 + C180) * C15556) *
               C50759 +
           ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
            (C179 + C178) * C15556) *
               C51026) *
              C50808 * C114 +
          ((C188 * C15556 + C5368 * C15557 + (C15563 + C15562) * C15558) *
               C51026 +
           (C189 * C15556 + (C5364 + C5363) * C15557 +
            (C15564 + C15565) * C15558) *
               C50759) *
              C50808 * C115 -
          ((((C117 * C1014 + C50907 * C1019) * C50838 +
             (C117 * C1004 + C50907 * C1013) * C118) *
                C15558 +
            (C5367 + C5366) * C15557 + C190 * C15556) *
               C50759 +
           ((C15565 + C15564) * C15558 + C5369 * C15557 + C191 * C15556) *
               C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C15556 +
             (C5693 * C118 + C5694 * C50838) * C15557 +
             (C6284 * C118 + C6285 * C50838) * C15558) *
                C51026 +
            ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
             (C15560 + C15561) * C15558) *
                C50759) *
               C630 -
           (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
             (C351 + C352) * C15556) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C15558 +
             (C6115 * C50838 + C6114 * C118) * C15557 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C15556) *
                C51026) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C15556 +
             (C6116 * C118 + C6117 * C50838) * C15557 +
             ((C117 * C3645 + C50907 * C3648) * C118 +
              (C117 * C3649 + C50907 * C3654) * C50838) *
                 C15558) *
                C51026 +
            ((C674 + C675) * C15556 + (C5858 + C5859) * C15557 +
             (C16022 + C16023) * C15558) *
                C50759) *
               C632) *
              C51033 +
          ((((C352 + C351) * C15556 + (C5524 + C5523) * C15557 +
             (C15713 + C15712) * C15558) *
                C51026 +
            ((C350 + C349) * C15556 + (C5521 + C5520) * C15557 +
             (C15714 + C15715) * C15558) *
                C50759) *
               C631 -
           (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
             (C181 + C180) * C15556) *
                C50759 +
            ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
             (C179 + C178) * C15556) *
                C51026) *
               C630 -
           ((((C117 * C3653 + C50907 * C3656) * C50838 +
              (C117 * C3647 + C50907 * C3652) * C118) *
                 C15558 +
             (C5861 + C5860) * C15557 + (C677 + C676) * C15556) *
                C50759 +
            ((C16023 + C16022) * C15558 + (C5859 + C5858) * C15557 +
             (C675 + C674) * C15556) *
                C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C15556 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             C6572 * C999 + C6573 * C996) *
                C15557 +
            (C6284 * C997 + C6285 * C994 - C6572 * C998 - C6573 * C995 +
             (C117 * C6555 + C50907 * C6558) * C999 +
             (C117 * C6559 + C50907 * C6564) * C996) *
                C15558) *
               C51026 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C15556 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C15557 +
            (C16420 + C16421 - C16422 - C16423 + C16430 + C16431) * C15558) *
               C50759) *
              C50808 * C51033 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C15556 +
            (C6270 - (C6269 + C6268) + C6271 - C6290 - C6291) * C15557 +
            (C16422 - (C16421 + C16420) + C16423 - C16430 - C16431) * C15558) *
               C51026 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C15556 +
            (C6278 - (C6277 + C6276) + C6279 - C6292 - C6293) * C15557 +
            (C6288 * C998 - (C1048 * C994 + C1047 * C997) + C6289 * C995 -
             (C117 * C6557 + C50907 * C6562) * C999 -
             (C117 * C6563 + C50907 * C6566) * C996) *
                C15558) *
               C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50907 * C126) * C118 +
                 (C117 * C127 + C50907 * C140) * C50838) *
                    C50937 * C108 +
                (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
                   C51040 -
               (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
                ((C117 * C310 + C50907 * C319) * C50838 +
                 (C117 * C301 + C50907 * C311) * C118) *
                    C50937 * C108) *
                   C50824) *
                  C295 +
              (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
                (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
                   C50824 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
                (C179 + C178) * C50937 * C108) *
                   C51040) *
                  C296 +
              ((C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
                (C186 + C187) * C50937 * C111) *
                   C51040 -
               (((C117 * C314 + C50907 * C321) * C50838 +
                 (C117 * C303 + C50907 * C315) * C118) *
                    C50937 * C111 +
                (C354 + C353) * C50937 * C110 + C357 * C109 + C358 * C108) *
                   C50824) *
                  C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50907 * C126) * C118 +
                (C117 * C127 + C50907 * C140) * C50838) *
                   C50937 * C108 +
               (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
                  C745 -
              (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
               ((C117 * C310 + C50907 * C319) * C50838 +
                (C117 * C301 + C50907 * C311) * C118) *
                   C50937 * C108) *
                  C746 +
              (((C117 * C635 + C50907 * C640) * C118 +
                (C117 * C641 + C50907 * C650) * C50838) *
                   C50937 * C108 +
               (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
               (C678 + C679) * C50937 * C111) *
                  C747 -
              (((C117 * C754 + C50907 * C762) * C50838 +
                (C117 * C750 + C50907 * C755) * C118) *
                   C50937 * C111 +
               ((C117 * C756 + C50907 * C763) * C50838 +
                (C117 * C751 + C50907 * C757) * C118) *
                   C50937 * C110 +
               ((C117 * C758 + C50907 * C764) * C50838 +
                (C117 * C752 + C50907 * C759) * C118) *
                   C50937 * C109 +
               ((C117 * C760 + C50907 * C765) * C50838 +
                (C117 * C753 + C50907 * C761) * C118) *
                   C50937 * C108) *
                  C748) *
             C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C997 +
            (C117 * C127 + C50907 * C140) * C994 -
            (C117 * C460 + C50907 * C466) * C998 -
            (C117 * C467 + C50907 * C478) * C995 +
            (C117 * C1000 + C50907 * C1005) * C999 +
            (C117 * C1006 + C50907 * C1015) * C996) *
               C50937 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50937 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50937 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50937 * C111) *
              C51040 +
          (((C117 * C864 + C50907 * C872) * C998 -
            ((C117 * C310 + C50907 * C319) * C994 +
             (C117 * C301 + C50907 * C311) * C997) +
            (C117 * C873 + C50907 * C888) * C995 -
            (C117 * C1154 + C50907 * C1158) * C999 -
            (C117 * C1159 + C50907 * C1166) * C996) *
               C50937 * C108 +
           ((C117 * C865 + C50907 * C874) * C998 - (C343 * C994 + C344 * C997) +
            (C117 * C875 + C50907 * C889) * C995 -
            (C117 * C1155 + C50907 * C1160) * C999 -
            (C117 * C1161 + C50907 * C1167) * C996) *
               C50937 * C109 +
           ((C117 * C866 + C50907 * C876) * C998 - (C341 * C994 + C342 * C997) +
            (C117 * C877 + C50907 * C890) * C995 -
            (C117 * C1156 + C50907 * C1162) * C999 -
            (C117 * C1163 + C50907 * C1168) * C996) *
               C50937 * C110 +
           ((C117 * C867 + C50907 * C878) * C998 - (C339 * C994 + C340 * C997) +
            (C117 * C879 + C50907 * C891) * C995 -
            (C117 * C1157 + C50907 * C1164) * C999 -
            (C117 * C1165 + C50907 * C1169) * C996) *
               C50937 * C111) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C50824 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C50937 * C51026 +
            ((C8232 + C8233 + C8234) * C118 +
             (C8235 + C8236 + C8237) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8182 * C754 + C8177 * C762 + C8181 * C647 + C8176 * C653 +
              C8180 * C304 + C8175 * C316) *
                 C50838 +
             (C8182 * C750 + C8177 * C755 + C8181 * C638 + C8176 * C646 +
              C8180 * C298 + C8175 * C305) *
                 C118) *
                C50937 * C50759 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C50937 * C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C745 -
          (((C8408 + C8409 + C8410) * C50838 + (C8411 + C8412 + C8413) * C118) *
               C50937 * C50759 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C50937 * C51026) *
              C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C118 + (C8763 + C8764 + C8765) * C50838) *
               C50937 * C50759) *
              C747 -
          (((C8182 * C8865 + C8177 * C8869 + C8181 * C3164 + C8176 * C3169 +
             C8180 * C758 + C8175 * C764) *
                C50838 +
            (C8182 * C8863 + C8177 * C8866 + C8181 * C3160 + C8176 * C3165 +
             C8180 * C752 + C8175 * C759) *
                C118) *
               C50937 * C50759 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C50937 * C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C998 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C995 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C999 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C996) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C997 + (C8223 + C8224 + C8225) * C994 -
            (C8590 + C8591 + C8592) * C998 - (C8593 + C8594 + C8595) * C995 +
            (C9184 + C9185 + C9186) * C999 + (C9187 + C9188 + C9189) * C996) *
               C50937 * C50759) *
              C51040 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C998 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C994 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C997) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C995 -
            (C8182 * C9335 + C8177 * C9337 + C8181 * C3645 + C8176 * C3648 +
             C8180 * C1154 + C8175 * C1158) *
                C999 -
            (C8182 * C9338 + C8177 * C9341 + C8181 * C3649 + C8176 * C3654 +
             C8180 * C1159 + C8175 * C1166) *
                C996) *
               C50937 * C51026 +
           ((C8180 * C865 + C8175 * C874 + C8181 * C869 + C8176 * C882 +
             C8182 * C3318 + C8177 * C3322) *
                C998 -
            ((C8408 + C8409 + C8410) * C994 + (C8411 + C8412 + C8413) * C997) +
            (C8180 * C875 + C8175 * C889 + C8181 * C883 + C8176 * C893 +
             C8182 * C3323 + C8177 * C3327) *
                C995 -
            (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
             C8180 * C1155 + C8175 * C1160) *
                C999 -
            (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
             C8180 * C1161 + C8175 * C1167) *
                C996) *
               C50937 * C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C15556 +
             (C5693 * C118 + C5694 * C50838) * C15557 +
             (C6284 * C118 + C6285 * C50838) * C15558) *
                C51026 +
            ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
             (C15560 + C15561) * C15558) *
                C50759) *
               C51040 -
           (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
             (C351 + C352) * C15556) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C15558 +
             (C6115 * C50838 + C6114 * C118) * C15557 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C15556) *
                C51026) *
               C50824) *
              C295 +
          ((((C352 + C351) * C15556 + (C5524 + C5523) * C15557 +
             (C15713 + C15712) * C15558) *
                C51026 +
            ((C350 + C349) * C15556 + (C5521 + C5520) * C15557 +
             (C15714 + C15715) * C15558) *
                C50759) *
               C50824 -
           (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
             (C181 + C180) * C15556) *
                C50759 +
            ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
             (C179 + C178) * C15556) *
                C51026) *
               C51040) *
              C296 +
          (((C188 * C15556 + C5368 * C15557 + (C15563 + C15562) * C15558) *
                C51026 +
            (C189 * C15556 + (C5364 + C5363) * C15557 +
             (C15564 + C15565) * C15558) *
                C50759) *
               C51040 -
           ((((C117 * C1165 + C50907 * C1169) * C50838 +
              (C117 * C1157 + C50907 * C1164) * C118) *
                 C15558 +
             (C5526 + C5525) * C15557 + C355 * C15556) *
                C50759 +
            ((C15715 + C15714) * C15558 + C5527 * C15557 + C356 * C15556) *
                C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C15556 +
            (C5693 * C118 + C5694 * C50838) * C15557 +
            (C6284 * C118 + C6285 * C50838) * C15558) *
               C51026 +
           ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
            (C15560 + C15561) * C15558) *
               C50759) *
              C745 -
          (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
            (C351 + C352) * C15556) *
               C50759 +
           ((C6453 * C50838 + C6452 * C118) * C15558 +
            (C6115 * C50838 + C6114 * C118) * C15557 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C15556) *
               C51026) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C15556 +
            (C6116 * C118 + C6117 * C50838) * C15557 +
            ((C117 * C3645 + C50907 * C3648) * C118 +
             (C117 * C3649 + C50907 * C3654) * C50838) *
                C15558) *
               C51026 +
           ((C674 + C675) * C15556 + (C5858 + C5859) * C15557 +
            (C16022 + C16023) * C15558) *
               C50759) *
              C747 -
          ((((C117 * C9340 + C50907 * C9342) * C50838 +
             (C117 * C9336 + C50907 * C9339) * C118) *
                C15558 +
            ((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C15557 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C15556) *
               C50759 +
           (((C117 * C9338 + C50907 * C9341) * C50838 +
             (C117 * C9335 + C50907 * C9337) * C118) *
                C15558 +
            ((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C15557 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C15556) *
               C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C15556 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             C6572 * C999 + C6573 * C996) *
                C15557 +
            (C6284 * C997 + C6285 * C994 - C6572 * C998 - C6573 * C995 +
             (C117 * C6555 + C50907 * C6558) * C999 +
             (C117 * C6559 + C50907 * C6564) * C996) *
                C15558) *
               C51026 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C15556 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C15557 +
            (C16420 + C16421 - C16422 - C16423 + C16430 + C16431) * C15558) *
               C50759) *
              C51040 +
          (((C6114 * C998 -
             ((C117 * C310 + C50907 * C319) * C994 +
              (C117 * C301 + C50907 * C311) * C997) +
             C6115 * C995 - C6452 * C999 - C6453 * C996) *
                C15556 +
            (C6452 * C998 - (C6115 * C994 + C6114 * C997) + C6453 * C995 -
             C16590 * C999 - C16591 * C996) *
                C15557 +
            (C16590 * C998 - (C6453 * C994 + C6452 * C997) + C16591 * C995 -
             (C117 * C13975 + C50907 * C13977) * C999 -
             (C117 * C13979 + C50907 * C13981) * C996) *
                C15558) *
               C51026 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C6454 * C999 - C6455 * C996) *
                C15556 +
            (C6454 * C998 - (C1620 * C994 + C1619 * C997) + C6455 * C995 -
             C16592 * C999 - C16593 * C996) *
                C15557 +
            (C16592 * C998 - (C6455 * C994 + C6454 * C997) + C16593 * C995 -
             (C117 * C16577 + C50907 * C16578) * C999 -
             (C117 * C16579 + C50907 * C16580) * C996) *
                C15558) *
               C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50907 * C126) * C458 +
                (C117 * C127 + C50907 * C140) * C51042 -
                (C117 * C460 + C50907 * C466) * C459 -
                (C117 * C467 + C50907 * C478) * C50850) *
                   C50937 * C108 +
               (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
               C532 * C111) *
                  C50808 * C295 +
              ((C519 - (C486 + C485) + C520) * C50937 * C108 +
               (C521 - (C492 + C491) + C522) * C50937 * C109 +
               (C523 - (C498 + C497) + C524) * C50937 * C110 +
               (C525 - (C505 + C506) + C526) * C50937 * C111) *
                  C50808 * C296 +
              (C531 * C108 + C532 * C109 +
               (C506 + C505 - C525 - C526) * C50937 * C110 +
               (C176 * C458 + C177 * C51042 -
                (C117 * C465 + C50907 * C476) * C459 -
                (C117 * C477 + C50907 * C483) * C50850) *
                   C50937 * C111) *
                  C50808 * C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50907 * C126) * C458 +
                (C117 * C127 + C50907 * C140) * C51042 -
                (C117 * C460 + C50907 * C466) * C459 -
                (C117 * C467 + C50907 * C478) * C50850) *
                   C50937 * C108 +
               (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
               C532 * C111) *
                  C630 +
              (((C117 * C864 + C50907 * C872) * C459 -
                ((C117 * C310 + C50907 * C319) * C51042 +
                 (C117 * C301 + C50907 * C311) * C458) +
                (C117 * C873 + C50907 * C888) * C50850) *
                   C50937 * C108 +
               ((C117 * C865 + C50907 * C874) * C459 -
                (C343 * C51042 + C344 * C458) +
                (C117 * C875 + C50907 * C889) * C50850) *
                   C50937 * C109 +
               ((C117 * C866 + C50907 * C876) * C459 -
                (C341 * C51042 + C342 * C458) +
                (C117 * C877 + C50907 * C890) * C50850) *
                   C50937 * C110 +
               ((C117 * C867 + C50907 * C878) * C459 -
                (C339 * C51042 + C340 * C458) +
                (C117 * C879 + C50907 * C891) * C50850) *
                   C50937 * C111) *
                  C631 +
              (((C117 * C635 + C50907 * C640) * C458 +
                (C117 * C641 + C50907 * C650) * C51042 -
                (C117 * C868 + C50907 * C880) * C459 -
                (C117 * C881 + C50907 * C892) * C50850) *
                   C50937 * C108 +
               (C668 * C458 + C669 * C51042 -
                (C117 * C869 + C50907 * C882) * C459 -
                (C117 * C883 + C50907 * C893) * C50850) *
                   C50937 * C109 +
               (C670 * C458 + C671 * C51042 -
                (C117 * C870 + C50907 * C884) * C459 -
                (C117 * C885 + C50907 * C894) * C50850) *
                   C50937 * C110 +
               (C672 * C458 + C673 * C51042 -
                (C117 * C871 + C50907 * C886) * C459 -
                (C117 * C887 + C50907 * C895) * C50850) *
                   C50937 * C111) *
                  C632) *
             C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C50907 * C126) * C1240 +
           (C117 * C127 + C50907 * C140) * C1236 -
           (C117 * C460 + C50907 * C466) * C1241 -
           (C117 * C467 + C50907 * C478) * C1237 +
           (C117 * C1000 + C50907 * C1005) * C1242 +
           (C117 * C1006 + C50907 * C1015) * C1238 -
           (C117 * C1244 + C50907 * C1248) * C1243 -
           (C117 * C1249 + C50907 * C1256) * C1239) *
              C50937 * C108 +
          (C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
           C1045 * C1242 + C1046 * C1238 -
           (C117 * C1245 + C50907 * C1250) * C1243 -
           (C117 * C1251 + C50907 * C1257) * C1239) *
              C50937 * C109 +
          (C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
           C1047 * C1242 + C1048 * C1238 -
           (C117 * C1246 + C50907 * C1252) * C1243 -
           (C117 * C1253 + C50907 * C1258) * C1239) *
              C50937 * C110 +
          (C172 * C1240 + C173 * C1236 - C515 * C1241 - C516 * C1237 +
           C1049 * C1242 + C1050 * C1238 -
           (C117 * C1247 + C50907 * C1254) * C1243 -
           (C117 * C1255 + C50907 * C1259) * C1239) *
              C50937 * C111) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C459 -
            ((C8226 + C8227 + C8228) * C51042 +
             (C8229 + C8230 + C8231) * C458) +
            (C8599 + C8600 + C8601) * C50850) *
               C50937 * C50759) *
              C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C458 + (C8235 + C8236 + C8237) * C51042 -
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C459 -
            (C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50850) *
               C50937 * C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C630 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C50850) *
               C50937 * C51026 +
           ((C8180 * C865 + C8175 * C874 + C8181 * C869 + C8176 * C882 +
             C8182 * C3318 + C8177 * C3322) *
                C459 -
            ((C8408 + C8409 + C8410) * C51042 +
             (C8411 + C8412 + C8413) * C458) +
            (C8180 * C875 + C8175 * C889 + C8181 * C883 + C8176 * C893 +
             C8182 * C3323 + C8177 * C3327) *
                C50850) *
               C50937 * C50759) *
              C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C8182 * C9017 + C8177 * C9019 + C8181 * C3317 + C8176 * C3320 +
             C8180 * C868 + C8175 * C880) *
                C459 -
            (C8182 * C9020 + C8177 * C9023 + C8181 * C3321 + C8176 * C3326 +
             C8180 * C881 + C8175 * C892) *
                C50850) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C458 + (C8763 + C8764 + C8765) * C51042 -
            (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
             C8180 * C869 + C8175 * C882) *
                C459 -
            (C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
             C8180 * C883 + C8175 * C893) *
                C50850) *
               C50937 * C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
            C8182 * C635 + C8177 * C640) *
               C1240 +
           (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
            C8182 * C641 + C8177 * C650) *
               C1236 -
           (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
            C8180 * C460 + C8175 * C466) *
               C1241 -
           (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
            C8180 * C467 + C8175 * C478) *
               C1237 +
           (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
            C8182 * C3645 + C8177 * C3648) *
               C1242 +
           (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
            C8182 * C3649 + C8177 * C3654) *
               C1238 -
           (C8182 * C9441 + C8177 * C9443 + C8181 * C3755 + C8176 * C3758 +
            C8180 * C1244 + C8175 * C1248) *
               C1243 -
           (C8182 * C9444 + C8177 * C9447 + C8181 * C3759 + C8176 * C3764 +
            C8180 * C1249 + C8175 * C1256) *
               C1239) *
              C50937 * C51026 +
          ((C8220 + C8221 + C8222) * C1240 + (C8223 + C8224 + C8225) * C1236 -
           (C8590 + C8591 + C8592) * C1241 - (C8593 + C8594 + C8595) * C1237 +
           (C9184 + C9185 + C9186) * C1242 + (C9187 + C9188 + C9189) * C1238 -
           (C8182 * C9442 + C8177 * C9445 + C8181 * C3756 + C8176 * C3760 +
            C8180 * C1245 + C8175 * C1250) *
               C1243 -
           (C8182 * C9446 + C8177 * C9448 + C8181 * C3761 + C8176 * C3765 +
            C8180 * C1251 + C8175 * C1257) *
               C1239) *
              C50937 * C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C15556 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C15557 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C15558) *
               C51026 +
           ((C485 + C486 - C519 - C520) * C15556 +
            (C5680 + C5681 - C5682 - C5683) * C15557 +
            (C15862 + C15863 - C15864 - C15865) * C15558) *
               C50759) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C15556 +
            (C5682 - (C5681 + C5680) + C5683) * C15557 +
            (C15864 - (C15863 + C15862) + C15865) * C15558) *
               C51026 +
           ((C521 - (C492 + C491) + C522) * C15556 +
            (C5687 - (C5686 + C5685) + C5688) * C15557 +
            (C15866 - (C15867 + C15868) + C15869) * C15558) *
               C50759) *
              C50808 * C296 +
          ((C529 * C15556 + C5697 * C15557 +
            (C15868 + C15867 - C15866 - C15869) * C15558) *
               C51026 +
           (C530 * C15556 + (C5691 + C5690 - C5689 - C5692) * C15557 +
            (C1049 * C458 + C1050 * C51042 -
             (C117 * C1247 + C50907 * C1254) * C459 -
             (C117 * C1255 + C50907 * C1259) * C50850) *
                C15558) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C15556 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C15557 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C15558) *
               C51026 +
           ((C485 + C486 - C519 - C520) * C15556 +
            (C5680 + C5681 - C5682 - C5683) * C15557 +
            (C15862 + C15863 - C15864 - C15865) * C15558) *
               C50759) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C15556 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C15557 +
            ((C117 * C3755 + C50907 * C3758) * C459 -
             (C6453 * C51042 + C6452 * C458) +
             (C117 * C3759 + C50907 * C3764) * C50850) *
                C15558) *
               C51026 +
           ((C1625 - (C1603 + C1604) + C1626) * C15556 +
            (C7060 - (C7061 + C7062) + C7063) * C15557 +
            ((C117 * C3756 + C50907 * C3760) * C459 -
             (C6455 * C51042 + C6454 * C458) +
             (C117 * C3761 + C50907 * C3765) * C50850) *
                C15558) *
               C50759) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C15556 +
            (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
                C15557 +
            (C16272 * C458 + C16273 * C51042 -
             (C117 * C9441 + C50907 * C9443) * C459 -
             (C117 * C9444 + C50907 * C9447) * C50850) *
                C15558) *
               C51026 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C15556 +
            (C5854 * C458 + C5855 * C51042 - C16020 * C459 - C16021 * C50850) *
                C15557 +
            (C16020 * C458 + C16021 * C51042 -
             (C117 * C9442 + C50907 * C9445) * C459 -
             (C117 * C9446 + C50907 * C9448) * C50850) *
                C15558) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1240 +
            (C117 * C127 + C50907 * C140) * C1236 - C5693 * C1241 -
            C5694 * C1237 + C6284 * C1242 + C6285 * C1238 - C6572 * C1243 -
            C6573 * C1239) *
               C15556 +
           (C5693 * C1240 + C5694 * C1236 - C6284 * C1241 - C6285 * C1237 +
            C6572 * C1242 + C6573 * C1238 - C16704 * C1243 - C16705 * C1239) *
               C15557 +
           (C6284 * C1240 + C6285 * C1236 - C6572 * C1241 - C6573 * C1237 +
            C16704 * C1242 + C16705 * C1238 -
            (C117 * C16691 + C50907 * C16693) * C1243 -
            (C117 * C16694 + C50907 * C16697) * C1239) *
               C15558) *
              C51026 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C6286 * C1243 - C6287 * C1239) *
               C15556 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C6286 * C1242 + C6287 * C1238 - C16428 * C1243 - C16429 * C1239) *
               C15557 +
           (C1045 * C1240 + C1046 * C1236 - C6286 * C1241 - C6287 * C1237 +
            C16428 * C1242 + C16429 * C1238 -
            (C117 * C16692 + C50907 * C16695) * C1243 -
            (C117 * C16696 + C50907 * C16698) * C1239) *
               C15558) *
              C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C1731 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
            (C8590 + C8591 + C8592) * C1731 -
            (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C50808 * C51085 +
          (((C8592 + C8591 + C8590) * C1731 -
            ((C8225 + C8224 + C8223) * C1728 +
             (C8222 + C8221 + C8220) * C1730) +
            (C8595 + C8594 + C8593) * C50850) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C1731 -
            ((C8226 + C8227 + C8228) * C1728 +
             (C8229 + C8230 + C8231) * C1730) +
            (C8599 + C8600 + C8601) * C50850) *
               C50937 * C50759) *
              C50808 * C51071 +
          (((C8231 + C8230 + C8229) * C1730 + (C8228 + C8227 + C8226) * C1728 -
            (C8598 + C8597 + C8596) * C1731 -
            (C8601 + C8600 + C8599) * C50850) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C1730 + (C8235 + C8236 + C8237) * C1728 -
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C1731 -
            (C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50850) *
               C50937 * C50759) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1730 +
            (C117 * C127 + C50907 * C140) * C1728 -
            (C117 * C460 + C50907 * C466) * C1731 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
           C1756 * C111) *
              C50808 * C51085 +
          ((C1735 - (C1734 + C1733) + C1736) * C50937 * C108 +
           (C1739 - (C1738 + C1737) + C1740) * C50937 * C109 +
           (C1743 - (C1742 + C1741) + C1744) * C50937 * C110 +
           (C1745 - (C1746 + C1747) + C1748) * C50937 * C111) *
              C50808 * C51071 +
          (C1755 * C108 + C1756 * C109 +
           (C1747 + C1746 - C1745 - C1748) * C50937 * C110 +
           (C176 * C1730 + C177 * C1728 -
            (C117 * C465 + C50907 * C476) * C1731 -
            (C117 * C477 + C50907 * C483) * C50850) *
               C50937 * C111) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C15556 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C15557 +
            (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                C15558) *
               C51026 +
           ((C1733 + C1734 - C1735 - C1736) * C15556 +
            (C7214 + C7215 - C7216 - C7217) * C15557 +
            (C17342 + C17343 - C17344 - C17345) * C15558) *
               C50759) *
              C50808 * C51085 +
          (((C1735 - (C1734 + C1733) + C1736) * C15556 +
            (C7216 - (C7215 + C7214) + C7217) * C15557 +
            (C17344 - (C17343 + C17342) + C17345) * C15558) *
               C51026 +
           ((C1739 - (C1738 + C1737) + C1740) * C15556 +
            (C7221 - (C7220 + C7219) + C7222) * C15557 +
            (C17346 - (C17347 + C17348) + C17349) * C15558) *
               C50759) *
              C50808 * C51071 +
          ((C1753 * C15556 + C7229 * C15557 +
            (C17348 + C17347 - C17346 - C17349) * C15558) *
               C51026 +
           (C1754 * C15556 + (C7225 + C7224 - C7223 - C7226) * C15557 +
            (C1049 * C1730 + C1050 * C1728 -
             (C117 * C1247 + C50907 * C1254) * C1731 -
             (C117 * C1255 + C50907 * C1259) * C50850) *
                C15558) *
               C50759) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
              C8180 * C460 + C8175 * C466) *
                 C1731 -
             (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
              C8180 * C467 + C8175 * C478) *
                 C50850) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
             (C8590 + C8591 + C8592) * C1731 -
             (C8593 + C8594 + C8595) * C50850) *
                C50937 * C50759) *
               C51040 +
           (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
              C8182 * C3317 + C8177 * C3320) *
                 C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
              C8182 * C3321 + C8177 * C3326) *
                 C50850) *
                C50937 * C51026 +
            ((C9948 + C9949 + C9950) * C1731 -
             ((C8408 + C8409 + C8410) * C1728 +
              (C8411 + C8412 + C8413) * C1730) +
             (C9951 + C9952 + C9953) * C50850) *
                C50937 * C50759) *
               C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C50937 * C51026 +
            ((C8596 + C8597 + C8598) * C1731 -
             ((C8226 + C8227 + C8228) * C1728 +
              (C8229 + C8230 + C8231) * C1730) +
             (C8599 + C8600 + C8601) * C50850) *
                C50937 * C50759) *
               C51040 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C1730 + (C8417 + C8418 + C8419) * C1728 -
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C1731 -
             (C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50850) *
                C50937 * C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 -
             (C117 * C460 + C50907 * C466) * C1731 -
             (C117 * C467 + C50907 * C478) * C50850) *
                C50937 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
            C1756 * C111) *
               C51040 +
           (((C117 * C864 + C50907 * C872) * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             (C117 * C873 + C50907 * C888) * C50850) *
                C50937 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50937 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50937 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50937 * C111) *
               C50824) *
              C1464 +
          (((C1735 - (C1734 + C1733) + C1736) * C50937 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50937 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50937 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50937 * C111) *
               C51040 +
           ((C1889 + C1888 - C1887 - C1890) * C50937 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50937 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50937 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50907 * C1597) * C1731 -
             (C117 * C1598 + C50907 * C1599) * C50850) *
                C50937 * C111) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C15556 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C15557 +
             (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                 C15558) *
                C51026 +
            ((C1733 + C1734 - C1735 - C1736) * C15556 +
             (C7214 + C7215 - C7216 - C7217) * C15557 +
             (C17342 + C17343 - C17344 - C17345) * C15558) *
                C50759) *
               C51040 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C15556 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C15557 +
             (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
              C16591 * C50850) *
                 C15558) *
                C51026 +
            ((C1887 - (C1888 + C1889) + C1890) * C15556 +
             (C7426 - (C7427 + C7428) + C7429) * C15557 +
             (C17544 - (C17545 + C17546) + C17547) * C15558) *
                C50759) *
               C50824) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C15556 +
             (C7216 - (C7215 + C7214) + C7217) * C15557 +
             (C17344 - (C17343 + C17342) + C17345) * C15558) *
                C51026 +
            ((C1739 - (C1738 + C1737) + C1740) * C15556 +
             (C7221 - (C7220 + C7219) + C7222) * C15557 +
             (C17346 - (C17347 + C17348) + C17349) * C15558) *
                C50759) *
               C51040 +
           (((C1889 + C1888 - C1887 - C1890) * C15556 +
             (C7428 + C7427 - C7426 - C7429) * C15557 +
             (C17546 + C17545 - C17544 - C17547) * C15558) *
                C51026 +
            ((C1893 + C1892 - C1891 - C1894) * C15556 +
             (C7432 + C7431 - C7430 - C7433) * C15557 +
             (C6456 * C1730 + C6457 * C1728 -
              (C117 * C3757 + C50907 * C3762) * C1731 -
              (C117 * C3763 + C50907 * C3766) * C50850) *
                 C15558) *
                C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C2000 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C51077 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C2001 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C1998) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1999 + (C8223 + C8224 + C8225) * C51087 -
            (C8590 + C8591 + C8592) * C2000 - (C8593 + C8594 + C8595) * C51077 +
            (C9184 + C9185 + C9186) * C2001 + (C9187 + C9188 + C9189) * C1998) *
               C50937 * C50759) *
              C50808 * C1464 +
          (((C8592 + C8591 + C8590) * C2000 -
            ((C8225 + C8224 + C8223) * C51087 +
             (C8222 + C8221 + C8220) * C1999) +
            (C8595 + C8594 + C8593) * C51077 - (C9186 + C9185 + C9184) * C2001 -
            (C9189 + C9188 + C9187) * C1998) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C2000 -
            ((C8226 + C8227 + C8228) * C51087 +
             (C8229 + C8230 + C8231) * C1999) +
            (C8599 + C8600 + C8601) * C51077 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C2001 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C1998) *
               C50937 * C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1999 +
            (C117 * C127 + C50907 * C140) * C51087 -
            (C117 * C460 + C50907 * C466) * C2000 -
            (C117 * C467 + C50907 * C478) * C51077 +
            (C117 * C1000 + C50907 * C1005) * C2001 +
            (C117 * C1006 + C50907 * C1015) * C1998) *
               C50937 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50937 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50937 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50937 * C111) *
              C50808 * C1464 +
          ((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C50937 * C108 +
           (C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C50937 * C109 +
           (C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C50937 * C110 +
           (C517 * C2000 - (C174 * C51087 + C175 * C1999) + C518 * C51077 -
            (C117 * C1004 + C50907 * C1013) * C2001 -
            (C117 * C1014 + C50907 * C1019) * C1998) *
               C50937 * C111) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C15556 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C15557 +
            (C6284 * C1999 + C6285 * C51087 - C6572 * C2000 - C6573 * C51077 +
             C16704 * C2001 + C16705 * C1998) *
                C15558) *
               C51026 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C15556 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C15557 +
            (C17694 + C17695 - C17696 - C17697 + C17698 + C17699) * C15558) *
               C50759) *
              C50808 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C15556 +
            (C7582 - (C7581 + C7580) + C7583 - C7584 - C7585) * C15557 +
            (C17696 - (C17695 + C17694) + C17697 - C17698 - C17699) * C15558) *
               C51026 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C15556 +
            (C7588 - (C7587 + C7586) + C7589 - C7590 - C7591) * C15557 +
            (C6288 * C2000 - (C1048 * C51087 + C1047 * C1999) + C6289 * C51077 -
             (C117 * C6557 + C50907 * C6562) * C2001 -
             (C117 * C6563 + C50907 * C6566) * C1998) *
                C15558) *
               C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C630 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C631 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C50937 * C108 +
            (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
            (C678 + C679) * C50937 * C111) *
               C632) *
              C51033 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C631 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C630 -
           (((C117 * C648 + C50907 * C654) * C50838 +
             (C117 * C639 + C50907 * C649) * C118) *
                C50937 * C111 +
            (C679 + C678) * C50937 * C110 + (C677 + C676) * C50937 * C109 +
            (C675 + C674) * C50937 * C108) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C50937 * C108 +
           (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
              C50808 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
           (C179 + C178) * C50937 * C108) *
              C50808 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
           (C186 + C187) * C50937 * C111) *
              C50808 * C115 -
          (((C117 * C138 + C50907 * C146) * C50838 +
            (C117 * C125 + C50907 * C139) * C118) *
               C50937 * C111 +
           (C187 + C186) * C50937 * C110 + C194 * C109 + C195 * C108) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C50808 * C113 -
          (((C8226 + C8227 + C8228) * C50838 + (C8229 + C8230 + C8231) * C118) *
               C50937 * C50759 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C50937 * C51026) *
              C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C118 + (C8235 + C8236 + C8237) * C50838) *
               C50937 * C50759) *
              C50808 * C115 -
          (((C8182 * C648 + C8177 * C654 + C8181 * C313 + C8176 * C320 +
             C8180 * C134 + C8175 * C144) *
                C50838 +
            (C8182 * C639 + C8177 * C649 + C8181 * C302 + C8176 * C312 +
             C8180 * C123 + C8175 * C135) *
                C118) *
               C50937 * C50759 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C50937 * C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C630 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C50937 * C51026 +
            ((C8760 + C8761 + C8762) * C118 +
             (C8763 + C8764 + C8765) * C50838) *
                C50937 * C50759) *
               C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C631 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C630 -
           (((C8182 * C3162 + C8177 * C3168 + C8181 * C756 + C8176 * C763 +
              C8180 * C645 + C8175 * C652) *
                 C50838 +
             (C8182 * C3159 + C8177 * C3163 + C8181 * C751 + C8176 * C757 +
              C8180 * C637 + C8175 * C644) *
                 C118) *
                C50937 * C50759 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C50937 * C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C15556 +
            (C5693 * C118 + C5694 * C50838) * C15557 +
            (C6284 * C118 + C6285 * C50838) * C15558) *
               C51026 +
           ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
            (C15560 + C15561) * C15558) *
               C50759) *
              C50808 * C113 -
          (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
            (C181 + C180) * C15556) *
               C50759 +
           ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
            (C179 + C178) * C15556) *
               C51026) *
              C50808 * C114 +
          ((C188 * C15556 + C5368 * C15557 + (C15563 + C15562) * C15558) *
               C51026 +
           (C189 * C15556 + (C5364 + C5363) * C15557 +
            (C15564 + C15565) * C15558) *
               C50759) *
              C50808 * C115 -
          ((((C117 * C1014 + C50907 * C1019) * C50838 +
             (C117 * C1004 + C50907 * C1013) * C118) *
                C15558 +
            (C5367 + C5366) * C15557 + C190 * C15556) *
               C50759 +
           ((C15565 + C15564) * C15558 + C5369 * C15557 + C191 * C15556) *
               C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C15556 +
             (C5693 * C118 + C5694 * C50838) * C15557 +
             (C6284 * C118 + C6285 * C50838) * C15558) *
                C51026 +
            ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
             (C15560 + C15561) * C15558) *
                C50759) *
               C630 -
           (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
             (C351 + C352) * C15556) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C15558 +
             (C6115 * C50838 + C6114 * C118) * C15557 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C15556) *
                C51026) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C15556 +
             (C6116 * C118 + C6117 * C50838) * C15557 +
             ((C117 * C3645 + C50907 * C3648) * C118 +
              (C117 * C3649 + C50907 * C3654) * C50838) *
                 C15558) *
                C51026 +
            ((C674 + C675) * C15556 + (C5858 + C5859) * C15557 +
             (C16022 + C16023) * C15558) *
                C50759) *
               C632) *
              C51033 +
          ((((C352 + C351) * C15556 + (C5524 + C5523) * C15557 +
             (C15713 + C15712) * C15558) *
                C51026 +
            ((C350 + C349) * C15556 + (C5521 + C5520) * C15557 +
             (C15714 + C15715) * C15558) *
                C50759) *
               C631 -
           (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
             (C181 + C180) * C15556) *
                C50759 +
            ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
             (C179 + C178) * C15556) *
                C51026) *
               C630 -
           ((((C117 * C3653 + C50907 * C3656) * C50838 +
              (C117 * C3647 + C50907 * C3652) * C118) *
                 C15558 +
             (C5861 + C5860) * C15557 + (C677 + C676) * C15556) *
                C50759 +
            ((C16023 + C16022) * C15558 + (C5859 + C5858) * C15557 +
             (C675 + C674) * C15556) *
                C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C50937 * C108 +
           (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
              C745 -
          (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
           ((C117 * C310 + C50907 * C319) * C50838 +
            (C117 * C301 + C50907 * C311) * C118) *
               C50937 * C108) *
              C746 +
          (((C117 * C635 + C50907 * C640) * C118 +
            (C117 * C641 + C50907 * C650) * C50838) *
               C50937 * C108 +
           (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
           (C678 + C679) * C50937 * C111) *
              C747 -
          (((C117 * C754 + C50907 * C762) * C50838 +
            (C117 * C750 + C50907 * C755) * C118) *
               C50937 * C111 +
           ((C117 * C756 + C50907 * C763) * C50838 +
            (C117 * C751 + C50907 * C757) * C118) *
               C50937 * C110 +
           ((C117 * C758 + C50907 * C764) * C50838 +
            (C117 * C752 + C50907 * C759) * C118) *
               C50937 * C109 +
           ((C117 * C760 + C50907 * C765) * C50838 +
            (C117 * C753 + C50907 * C761) * C118) *
               C50937 * C108) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C51040 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C50824) *
              C295 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C50824 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C51040) *
              C296 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
            (C186 + C187) * C50937 * C111) *
               C51040 -
           (((C117 * C314 + C50907 * C321) * C50838 +
             (C117 * C303 + C50907 * C315) * C118) *
                C50937 * C111 +
            (C354 + C353) * C50937 * C110 + C357 * C109 + C358 * C108) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C50824 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C50937 * C51026 +
            ((C8232 + C8233 + C8234) * C118 +
             (C8235 + C8236 + C8237) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8182 * C754 + C8177 * C762 + C8181 * C647 + C8176 * C653 +
              C8180 * C304 + C8175 * C316) *
                 C50838 +
             (C8182 * C750 + C8177 * C755 + C8181 * C638 + C8176 * C646 +
              C8180 * C298 + C8175 * C305) *
                 C118) *
                C50937 * C50759 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C50937 * C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C745 -
          (((C8408 + C8409 + C8410) * C50838 + (C8411 + C8412 + C8413) * C118) *
               C50937 * C50759 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C50937 * C51026) *
              C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C118 + (C8763 + C8764 + C8765) * C50838) *
               C50937 * C50759) *
              C747 -
          (((C8182 * C8865 + C8177 * C8869 + C8181 * C3164 + C8176 * C3169 +
             C8180 * C758 + C8175 * C764) *
                C50838 +
            (C8182 * C8863 + C8177 * C8866 + C8181 * C3160 + C8176 * C3165 +
             C8180 * C752 + C8175 * C759) *
                C118) *
               C50937 * C50759 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C50937 * C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C15556 +
             (C5693 * C118 + C5694 * C50838) * C15557 +
             (C6284 * C118 + C6285 * C50838) * C15558) *
                C51026 +
            ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
             (C15560 + C15561) * C15558) *
                C50759) *
               C51040 -
           (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
             (C351 + C352) * C15556) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C15558 +
             (C6115 * C50838 + C6114 * C118) * C15557 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C15556) *
                C51026) *
               C50824) *
              C295 +
          ((((C352 + C351) * C15556 + (C5524 + C5523) * C15557 +
             (C15713 + C15712) * C15558) *
                C51026 +
            ((C350 + C349) * C15556 + (C5521 + C5520) * C15557 +
             (C15714 + C15715) * C15558) *
                C50759) *
               C50824 -
           (((C15562 + C15563) * C15558 + (C5362 + C5361) * C15557 +
             (C181 + C180) * C15556) *
                C50759 +
            ((C15561 + C15560) * C15558 + (C5359 + C5358) * C15557 +
             (C179 + C178) * C15556) *
                C51026) *
               C51040) *
              C296 +
          (((C188 * C15556 + C5368 * C15557 + (C15563 + C15562) * C15558) *
                C51026 +
            (C189 * C15556 + (C5364 + C5363) * C15557 +
             (C15564 + C15565) * C15558) *
                C50759) *
               C51040 -
           ((((C117 * C1165 + C50907 * C1169) * C50838 +
              (C117 * C1157 + C50907 * C1164) * C118) *
                 C15558 +
             (C5526 + C5525) * C15557 + C355 * C15556) *
                C50759 +
            ((C15715 + C15714) * C15558 + C5527 * C15557 + C356 * C15556) *
                C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C15556 +
            (C5693 * C118 + C5694 * C50838) * C15557 +
            (C6284 * C118 + C6285 * C50838) * C15558) *
               C51026 +
           ((C178 + C179) * C15556 + (C5358 + C5359) * C15557 +
            (C15560 + C15561) * C15558) *
               C50759) *
              C745 -
          (((C15712 + C15713) * C15558 + (C5523 + C5524) * C15557 +
            (C351 + C352) * C15556) *
               C50759 +
           ((C6453 * C50838 + C6452 * C118) * C15558 +
            (C6115 * C50838 + C6114 * C118) * C15557 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C15556) *
               C51026) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C15556 +
            (C6116 * C118 + C6117 * C50838) * C15557 +
            ((C117 * C3645 + C50907 * C3648) * C118 +
             (C117 * C3649 + C50907 * C3654) * C50838) *
                C15558) *
               C51026 +
           ((C674 + C675) * C15556 + (C5858 + C5859) * C15557 +
            (C16022 + C16023) * C15558) *
               C50759) *
              C747 -
          ((((C117 * C9340 + C50907 * C9342) * C50838 +
             (C117 * C9336 + C50907 * C9339) * C118) *
                C15558 +
            ((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C15557 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C15556) *
               C50759 +
           (((C117 * C9338 + C50907 * C9341) * C50838 +
             (C117 * C9335 + C50907 * C9337) * C118) *
                C15558 +
            ((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C15557 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C15556) *
               C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 -
            (C117 * C460 + C50907 * C466) * C459 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
           C532 * C111) *
              C630 +
          (((C117 * C864 + C50907 * C872) * C459 -
            ((C117 * C310 + C50907 * C319) * C51042 +
             (C117 * C301 + C50907 * C311) * C458) +
            (C117 * C873 + C50907 * C888) * C50850) *
               C50937 * C108 +
           ((C117 * C865 + C50907 * C874) * C459 -
            (C343 * C51042 + C344 * C458) +
            (C117 * C875 + C50907 * C889) * C50850) *
               C50937 * C109 +
           ((C117 * C866 + C50907 * C876) * C459 -
            (C341 * C51042 + C342 * C458) +
            (C117 * C877 + C50907 * C890) * C50850) *
               C50937 * C110 +
           ((C117 * C867 + C50907 * C878) * C459 -
            (C339 * C51042 + C340 * C458) +
            (C117 * C879 + C50907 * C891) * C50850) *
               C50937 * C111) *
              C631 +
          (((C117 * C635 + C50907 * C640) * C458 +
            (C117 * C641 + C50907 * C650) * C51042 -
            (C117 * C868 + C50907 * C880) * C459 -
            (C117 * C881 + C50907 * C892) * C50850) *
               C50937 * C108 +
           (C668 * C458 + C669 * C51042 - (C117 * C869 + C50907 * C882) * C459 -
            (C117 * C883 + C50907 * C893) * C50850) *
               C50937 * C109 +
           (C670 * C458 + C671 * C51042 - (C117 * C870 + C50907 * C884) * C459 -
            (C117 * C885 + C50907 * C894) * C50850) *
               C50937 * C110 +
           (C672 * C458 + C673 * C51042 - (C117 * C871 + C50907 * C886) * C459 -
            (C117 * C887 + C50907 * C895) * C50850) *
               C50937 * C111) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 -
            (C117 * C460 + C50907 * C466) * C459 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
           C532 * C111) *
              C50808 * C295 +
          ((C519 - (C486 + C485) + C520) * C50937 * C108 +
           (C521 - (C492 + C491) + C522) * C50937 * C109 +
           (C523 - (C498 + C497) + C524) * C50937 * C110 +
           (C525 - (C505 + C506) + C526) * C50937 * C111) *
              C50808 * C296 +
          (C531 * C108 + C532 * C109 +
           (C506 + C505 - C525 - C526) * C50937 * C110 +
           (C176 * C458 + C177 * C51042 - (C117 * C465 + C50907 * C476) * C459 -
            (C117 * C477 + C50907 * C483) * C50850) *
               C50937 * C111) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C459 -
            ((C8226 + C8227 + C8228) * C51042 +
             (C8229 + C8230 + C8231) * C458) +
            (C8599 + C8600 + C8601) * C50850) *
               C50937 * C50759) *
              C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C458 + (C8235 + C8236 + C8237) * C51042 -
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C459 -
            (C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50850) *
               C50937 * C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C630 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C50850) *
               C50937 * C51026 +
           ((C8180 * C865 + C8175 * C874 + C8181 * C869 + C8176 * C882 +
             C8182 * C3318 + C8177 * C3322) *
                C459 -
            ((C8408 + C8409 + C8410) * C51042 +
             (C8411 + C8412 + C8413) * C458) +
            (C8180 * C875 + C8175 * C889 + C8181 * C883 + C8176 * C893 +
             C8182 * C3323 + C8177 * C3327) *
                C50850) *
               C50937 * C50759) *
              C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C8182 * C9017 + C8177 * C9019 + C8181 * C3317 + C8176 * C3320 +
             C8180 * C868 + C8175 * C880) *
                C459 -
            (C8182 * C9020 + C8177 * C9023 + C8181 * C3321 + C8176 * C3326 +
             C8180 * C881 + C8175 * C892) *
                C50850) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C458 + (C8763 + C8764 + C8765) * C51042 -
            (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
             C8180 * C869 + C8175 * C882) *
                C459 -
            (C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
             C8180 * C883 + C8175 * C893) *
                C50850) *
               C50937 * C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C15556 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C15557 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C15558) *
               C51026 +
           ((C485 + C486 - C519 - C520) * C15556 +
            (C5680 + C5681 - C5682 - C5683) * C15557 +
            (C15862 + C15863 - C15864 - C15865) * C15558) *
               C50759) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C15556 +
            (C5682 - (C5681 + C5680) + C5683) * C15557 +
            (C15864 - (C15863 + C15862) + C15865) * C15558) *
               C51026 +
           ((C521 - (C492 + C491) + C522) * C15556 +
            (C5687 - (C5686 + C5685) + C5688) * C15557 +
            (C15866 - (C15867 + C15868) + C15869) * C15558) *
               C50759) *
              C50808 * C296 +
          ((C529 * C15556 + C5697 * C15557 +
            (C15868 + C15867 - C15866 - C15869) * C15558) *
               C51026 +
           (C530 * C15556 + (C5691 + C5690 - C5689 - C5692) * C15557 +
            (C1049 * C458 + C1050 * C51042 -
             (C117 * C1247 + C50907 * C1254) * C459 -
             (C117 * C1255 + C50907 * C1259) * C50850) *
                C15558) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C15556 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C15557 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C15558) *
               C51026 +
           ((C485 + C486 - C519 - C520) * C15556 +
            (C5680 + C5681 - C5682 - C5683) * C15557 +
            (C15862 + C15863 - C15864 - C15865) * C15558) *
               C50759) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C15556 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C15557 +
            ((C117 * C3755 + C50907 * C3758) * C459 -
             (C6453 * C51042 + C6452 * C458) +
             (C117 * C3759 + C50907 * C3764) * C50850) *
                C15558) *
               C51026 +
           ((C1625 - (C1603 + C1604) + C1626) * C15556 +
            (C7060 - (C7061 + C7062) + C7063) * C15557 +
            ((C117 * C3756 + C50907 * C3760) * C459 -
             (C6455 * C51042 + C6454 * C458) +
             (C117 * C3761 + C50907 * C3765) * C50850) *
                C15558) *
               C50759) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C15556 +
            (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
                C15557 +
            (C16272 * C458 + C16273 * C51042 -
             (C117 * C9441 + C50907 * C9443) * C459 -
             (C117 * C9444 + C50907 * C9447) * C50850) *
                C15558) *
               C51026 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C15556 +
            (C5854 * C458 + C5855 * C51042 - C16020 * C459 - C16021 * C50850) *
                C15557 +
            (C16020 * C458 + C16021 * C51042 -
             (C117 * C9442 + C50907 * C9445) * C459 -
             (C117 * C9446 + C50907 * C9448) * C50850) *
                C15558) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C1358 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C50824) *
              C51085 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C50824 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C1358) *
              C51071 +
          (((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
             C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
                C118 +
            (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
             C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
                C50838) *
               C50937 * C50754 * C1358 -
           ((C10999 * C3162 + C10994 * C3168 + C10998 * C756 + C10993 * C763 +
             C10997 * C645 + C10992 * C652 + C10996 * C306 + C10991 * C317) *
                C50838 +
            (C10999 * C3159 + C10994 * C3163 + C10998 * C751 + C10993 * C757 +
             C10997 * C637 + C10992 * C644 + C10996 * C299 + C10991 * C307) *
                C118) *
               C50937 * C50754 * C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C1358 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C50824) *
              C51085 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C50824 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C1358) *
              C51071 +
          ((C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                C2448) *
               C1358 -
           (((C2450 * C648 + C50923 * C654 + C2449 * C313 + C51053 * C320) *
                 C50838 +
             (C2450 * C639 + C50923 * C649 + C2449 * C302 + C51053 * C312) *
                 C118) *
                C50937 * C2448 +
            ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C50937 *
                C2447 +
            C2699 * C2446) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C15556 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C15557 +
            (C19184 * C118 + C19185 * C50838) * C15558) *
               C50754 * C1358 -
           ((C19359 * C50838 + C19358 * C118) * C15558 +
            ((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C15557 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C15556) *
               C50754 * C50824) *
              C51085 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C15556 +
            ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C15557 +
            ((C2449 * C1155 + C51053 * C1160 + C2450 * C3646 + C50923 * C3650) *
                 C118 +
             (C2449 * C1161 + C51053 * C1167 + C2450 * C3651 + C50923 * C3655) *
                 C50838) *
                C15558) *
               C50754 * C50824 -
           ((C19195 * C50838 + C19194 * C118) * C15558 +
            ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
               C50754 * C1358) *
              C51071 +
          ((C2508 * C15556 +
            ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C15557 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C50838) * C15558) *
               C50754 * C1358 -
           (((C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                 C50838 +
             (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                 C118) *
                C15558 +
            ((C4277 + C4276) * C50838 + (C4275 + C4274) * C118) * C15557 +
            C2698 * C15556) *
               C50754 * C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C51086 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C51074 +
           ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
             C10998 * C3161 + C10993 * C3167 + C10999 * C8864 +
             C10994 * C8868) *
                C118 +
            (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
             C10998 * C3166 + C10993 * C3170 + C10999 * C8867 +
             C10994 * C8870) *
                C50838) *
               C50937 * C50754 * C1463) *
              C1464 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C51074 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C51086 -
           ((C10999 * C8865 + C10994 * C8869 + C10998 * C3164 + C10993 * C3169 +
             C10997 * C758 + C10992 * C764 + C10996 * C643 + C10991 * C651) *
                C50838 +
            (C10999 * C8863 + C10994 * C8866 + C10998 * C3160 + C10993 * C3165 +
             C10997 * C752 + C10992 * C759 + C10996 * C636 + C10991 * C642) *
                C118) *
               C50937 * C50754 * C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C51086 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C51074 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C2446 +
            ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                C2447 +
            ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                C2448) *
               C1463) *
              C1464 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C51074 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C51086 -
           (((C2450 * C754 + C50923 * C762 + C2449 * C647 + C51053 * C653) *
                 C50838 +
             (C2450 * C750 + C50923 * C755 + C2449 * C638 + C51053 * C646) *
                 C118) *
                C50937 * C2448 +
            ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C50937 *
                C2447 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C50937 *
                C2446) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C15556 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C15557 +
            (C19184 * C118 + C19185 * C50838) * C15558) *
               C50754 * C51086 -
           ((C19359 * C50838 + C19358 * C118) * C15558 +
            ((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C15557 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C15556) *
               C50754 * C51074 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C15556 +
            ((C19031 + C19030) * C118 + (C19033 + C19032) * C50838) * C15557 +
            ((C19035 + C19034) * C118 + (C19037 + C19036) * C50838) * C15558) *
               C50754 * C1463) *
              C1464 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C15556 +
            ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C15557 +
            ((C2449 * C1155 + C51053 * C1160 + C2450 * C3646 + C50923 * C3650) *
                 C118 +
             (C2449 * C1161 + C51053 * C1167 + C2450 * C3651 + C50923 * C3655) *
                 C50838) *
                C15558) *
               C50754 * C51074 -
           ((C19195 * C50838 + C19194 * C118) * C15558 +
            ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
               C50754 * C51086 -
           (((C2450 * C9340 + C50923 * C9342 + C2449 * C3651 + C51053 * C3655) *
                 C50838 +
             (C2450 * C9336 + C50923 * C9339 + C2449 * C3646 + C51053 * C3650) *
                 C118) *
                C15558 +
            ((C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                 C50838 +
             (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                 C118) *
                C15557 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C15556) *
               C50754 * C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C458 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C51042 -
            (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
             C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
                C459 -
            (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
             C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
             C10998 * C3317 + C10993 * C3320 + C10999 * C9017 +
             C10994 * C9019) *
                C459 -
            ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
              C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                 C51042 +
             (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
              C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                 C458) +
            (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
             C10998 * C3321 + C10993 * C3326 + C10999 * C9020 +
             C10994 * C9023) *
                C50850) *
               C50937 * C50754 * C50824) *
              C1464 +
          (((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
             C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
                C459 -
            ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
              C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                 C51042 +
             (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
              C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                 C458) +
            (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
             C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C458 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C51042 -
            (C10999 * C9018 + C10994 * C9021 + C10998 * C3318 + C10993 * C3322 +
             C10997 * C869 + C10992 * C882 + C10996 * C865 + C10991 * C874) *
                C459 -
            (C10999 * C9022 + C10994 * C9024 + C10998 * C3323 + C10993 * C3327 +
             C10997 * C883 + C10992 * C893 + C10996 * C875 + C10991 * C889) *
                C50850) *
               C50937 * C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                 C459 -
             (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                 C50850) *
                C50937 * C2446 +
            ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
             (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
                C50937 * C2447 +
            C2891 * C2448) *
               C1358 +
           (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                 C459 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C51042 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C458) +
             (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C2446 +
            ((C4270 + C4271) * C459 -
             ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
             (C4272 + C4273) * C50850) *
                C50937 * C2447 +
            ((C4274 + C4275) * C459 - (C2694 * C51042 + C2695 * C458) +
             (C4276 + C4277) * C50850) *
                C50937 * C2448) *
               C50824) *
              C1464 +
          ((((C2873 + C2872) * C459 -
             ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
             (C2875 + C2874) * C50850) *
                C50937 * C2446 +
            ((C2878 + C2877) * C459 -
             ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
             (C2880 + C2879) * C50850) *
                C50937 * C2447 +
            ((C2881 + C2882) * C459 - (C2502 * C51042 + C2503 * C458) +
             (C2883 + C2884) * C50850) *
                C50937 * C2448) *
               C1358 +
           (((C2689 + C2688) * C458 + (C2687 + C2686) * C51042 -
             (C4271 + C4270) * C459 - (C4273 + C4272) * C50850) *
                C50937 * C2446 +
            ((C2685 + C2684) * C458 + (C2683 + C2682) * C51042 -
             (C4275 + C4274) * C459 - (C4277 + C4276) * C50850) *
                C50937 * C2447 +
            ((C2690 + C2691) * C458 + (C2692 + C2693) * C51042 -
             (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                 C459 -
             (C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                 C50850) *
                C50937 * C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
                C15556 +
            ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
             (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
                C15557 +
            (C19184 * C458 + C19185 * C51042 - C19474 * C459 -
             C19475 * C50850) *
                C15558) *
               C50754 * C1358 +
           (((C19022 + C19023) * C459 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C51042 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C458) +
             (C19024 + C19025) * C50850) *
                C15556 +
            ((C19026 + C19027) * C459 -
             ((C19025 + C19024) * C51042 + (C19023 + C19022) * C458) +
             (C19028 + C19029) * C50850) *
                C15557 +
            ((C19369 + C19368) * C459 - (C19359 * C51042 + C19358 * C458) +
             (C19371 + C19370) * C50850) *
                C15558) *
               C50754 * C50824) *
              C1464 +
          ((((C2873 + C2872) * C459 -
             ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
             (C2875 + C2874) * C50850) *
                C15556 +
            ((C3492 + C3493) * C459 -
             ((C2874 + C2875) * C51042 + (C2872 + C2873) * C458) +
             (C3494 + C3495) * C50850) *
                C15557 +
            ((C19209 + C19208) * C459 - (C19195 * C51042 + C19194 * C458) +
             (C19211 + C19210) * C50850) *
                C15558) *
               C50754 * C1358 +
           (((C2689 + C2688) * C458 + (C2687 + C2686) * C51042 -
             (C4271 + C4270) * C459 - (C4273 + C4272) * C50850) *
                C15556 +
            ((C4270 + C4271) * C458 + (C4272 + C4273) * C51042 -
             (C19982 + C19983) * C459 - (C19984 + C19985) * C50850) *
                C15557 +
            ((C19983 + C19982) * C458 + (C19985 + C19984) * C51042 -
             (C2450 * C9442 + C50923 * C9445 + C2449 * C3756 + C51053 * C3760) *
                 C459 -
             (C2450 * C9446 + C50923 * C9448 + C2449 * C3761 + C51053 * C3765) *
                 C50850) *
                C15558) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C1730 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C1728 -
            (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
             C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
                C1731 -
            (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
             C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
             C10998 * C3317 + C10993 * C3320 + C10999 * C9017 +
             C10994 * C9019) *
                C1731 -
            ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
              C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                 C1728 +
             (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
              C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                 C1730) +
            (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
             C10998 * C3321 + C10993 * C3326 + C10999 * C9020 +
             C10994 * C9023) *
                C50850) *
               C50937 * C50754 * C50824) *
              C51033 +
          (((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
             C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
                C1731 -
            ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
              C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                 C1728 +
             (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
              C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                 C1730) +
            (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
             C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C1730 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C1728 -
            (C10999 * C9018 + C10994 * C9021 + C10998 * C3318 + C10993 * C3322 +
             C10997 * C869 + C10992 * C882 + C10996 * C865 + C10991 * C874) *
                C1731 -
            (C10999 * C9022 + C10994 * C9024 + C10998 * C3323 + C10993 * C3327 +
             C10997 * C883 + C10992 * C893 + C10996 * C875 + C10991 * C889) *
                C50850) *
               C50937 * C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                 C1731 -
             (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                 C50850) *
                C50937 * C2446 +
            ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
             (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
                C50937 * C2447 +
            C4431 * C2448) *
               C1358 +
           (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                 C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C2446 +
            ((C4270 + C4271) * C1731 -
             ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
             (C4272 + C4273) * C50850) *
                C50937 * C2447 +
            ((C4274 + C4275) * C1731 - (C2694 * C1728 + C2695 * C1730) +
             (C4276 + C4277) * C50850) *
                C50937 * C2448) *
               C50824) *
              C51033 +
          ((((C2873 + C2872) * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             (C2875 + C2874) * C50850) *
                C50937 * C2446 +
            ((C2878 + C2877) * C1731 -
             ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
             (C2880 + C2879) * C50850) *
                C50937 * C2447 +
            ((C2881 + C2882) * C1731 - (C2502 * C1728 + C2503 * C1730) +
             (C2883 + C2884) * C50850) *
                C50937 * C2448) *
               C1358 +
           (((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
             (C4271 + C4270) * C1731 - (C4273 + C4272) * C50850) *
                C50937 * C2446 +
            ((C2685 + C2684) * C1730 + (C2683 + C2682) * C1728 -
             (C4275 + C4274) * C1731 - (C4277 + C4276) * C50850) *
                C50937 * C2447 +
            ((C2690 + C2691) * C1730 + (C2692 + C2693) * C1728 -
             (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                 C1731 -
             (C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                 C50850) *
                C50937 * C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
                C15556 +
            ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
             (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
                C15557 +
            (C19184 * C1730 + C19185 * C1728 - C19474 * C1731 -
             C19475 * C50850) *
                C15558) *
               C50754 * C1358 +
           (((C19022 + C19023) * C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C19024 + C19025) * C50850) *
                C15556 +
            ((C19026 + C19027) * C1731 -
             ((C19025 + C19024) * C1728 + (C19023 + C19022) * C1730) +
             (C19028 + C19029) * C50850) *
                C15557 +
            ((C19369 + C19368) * C1731 - (C19359 * C1728 + C19358 * C1730) +
             (C19371 + C19370) * C50850) *
                C15558) *
               C50754 * C50824) *
              C51033 +
          ((((C2873 + C2872) * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             (C2875 + C2874) * C50850) *
                C15556 +
            ((C3492 + C3493) * C1731 -
             ((C2874 + C2875) * C1728 + (C2872 + C2873) * C1730) +
             (C3494 + C3495) * C50850) *
                C15557 +
            ((C19209 + C19208) * C1731 - (C19195 * C1728 + C19194 * C1730) +
             (C19211 + C19210) * C50850) *
                C15558) *
               C50754 * C1358 +
           (((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
             (C4271 + C4270) * C1731 - (C4273 + C4272) * C50850) *
                C15556 +
            ((C4270 + C4271) * C1730 + (C4272 + C4273) * C1728 -
             (C19982 + C19983) * C1731 - (C19984 + C19985) * C50850) *
                C15557 +
            ((C19983 + C19982) * C1730 + (C19985 + C19984) * C1728 -
             (C2450 * C9442 + C50923 * C9445 + C2449 * C3756 + C51053 * C3760) *
                 C1731 -
             (C2450 * C9446 + C50923 * C9448 + C2449 * C3761 + C51053 * C3765) *
                 C50850) *
                C15558) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1730 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C1728 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C1731 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C51086 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C1731 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C1728 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C1730) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C50850) *
              C50937 * C50754 * C51074 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C1730 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C1728 -
           (C10999 * C11462 + C10994 * C11463 + C10998 * C9017 +
            C10993 * C9019 + C10997 * C3317 + C10992 * C3320 + C10996 * C868 +
            C10991 * C880) *
               C1731 -
           (C10999 * C11464 + C10994 * C11465 + C10998 * C9020 +
            C10993 * C9023 + C10997 * C3321 + C10992 * C3326 + C10996 * C881 +
            C10991 * C892) *
               C50850) *
              C50937 * C50754 * C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1730 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1728 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C1731 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
            (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C4431 * C2448) *
              C51086 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C1731 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C1728 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C1730) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C4270 + C4271) * C1731 -
            ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
            (C4272 + C4273) * C50850) *
               C50937 * C2447 +
           ((C4274 + C4275) * C1731 - (C2694 * C1728 + C2695 * C1730) +
            (C4276 + C4277) * C50850) *
               C50937 * C2448) *
              C51074 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C1730 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C1728 -
            (C2450 * C3317 + C50923 * C3320 + C2449 * C868 + C51053 * C880) *
                C1731 -
            (C2450 * C3321 + C50923 * C3326 + C2449 * C881 + C51053 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C3054 + C3055) * C1730 + (C3056 + C3057) * C1728 -
            (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                C1731 -
            (C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C3058 + C3059) * C1730 + (C3060 + C3061) * C1728 -
            (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                C1731 -
            (C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                C50850) *
               C50937 * C2448) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1730 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1728 -
            (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
               C15556 +
           ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
            (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
               C15557 +
           (C19184 * C1730 + C19185 * C1728 - C19474 * C1731 -
            C19475 * C50850) *
               C15558) *
              C50754 * C51086 +
          (((C19022 + C19023) * C1731 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C1728 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C1730) +
            (C19024 + C19025) * C50850) *
               C15556 +
           ((C19026 + C19027) * C1731 -
            ((C19025 + C19024) * C1728 + (C19023 + C19022) * C1730) +
            (C19028 + C19029) * C50850) *
               C15557 +
           ((C19369 + C19368) * C1731 - (C19359 * C1728 + C19358 * C1730) +
            (C19371 + C19370) * C50850) *
               C15558) *
              C50754 * C51074 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C1730 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C1728 -
            (C19030 + C19031) * C1731 - (C19032 + C19033) * C50850) *
               C15556 +
           ((C19031 + C19030) * C1730 + (C19033 + C19032) * C1728 -
            (C19034 + C19035) * C1731 - (C19036 + C19037) * C50850) *
               C15557 +
           ((C19035 + C19034) * C1730 + (C19037 + C19036) * C1728 -
            (C2450 * C11732 + C50923 * C11733 + C2449 * C9441 +
             C51053 * C9443) *
                C1731 -
            (C2450 * C11734 + C50923 * C11735 + C2449 * C9444 +
             C51053 * C9447) *
                C50850) *
               C15558) *
              C50754 * C1463) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1999 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51087 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C2000 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C51077 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C2001 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C1998) *
              C50937 * C50754 * C1358 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C2000 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C51087 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C1999) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C51077 -
           (C10999 * C11662 + C10994 * C11663 + C10998 * C9335 +
            C10993 * C9337 + C10997 * C3645 + C10992 * C3648 + C10996 * C1154 +
            C10991 * C1158) *
               C2001 -
           (C10999 * C11664 + C10994 * C11665 + C10998 * C9338 +
            C10993 * C9341 + C10997 * C3649 + C10992 * C3654 + C10996 * C1159 +
            C10991 * C1166) *
               C1998) *
              C50937 * C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1999 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51087 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C2000 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C51077 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C2001 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C1998) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1999 + (C2486 + C2487) * C51087 -
            (C2872 + C2873) * C2000 - (C2874 + C2875) * C51077 +
            (C3492 + C3493) * C2001 + (C3494 + C3495) * C1998) *
               C50937 * C2447 +
           (C2500 * C1999 + C2501 * C51087 - C2885 * C2000 - C2886 * C51077 +
            (C3496 + C3497) * C2001 + (C3498 + C3499) * C1998) *
               C50937 * C2448) *
              C1358 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C2000 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51087 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C1999) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C51077 -
            (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                C2001 -
            (C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                C1998) *
               C50937 * C2446 +
           ((C4270 + C4271) * C2000 -
            ((C2686 + C2687) * C51087 + (C2688 + C2689) * C1999) +
            (C4272 + C4273) * C51077 -
            (C2450 * C3646 + C50923 * C3650 + C2449 * C1155 + C51053 * C1160) *
                C2001 -
            (C2450 * C3651 + C50923 * C3655 + C2449 * C1161 + C51053 * C1167) *
                C1998) *
               C50937 * C2447 +
           ((C4274 + C4275) * C2000 - (C2694 * C51087 + C2695 * C1999) +
            (C4276 + C4277) * C51077 -
            (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                C2001 -
            (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                C1998) *
               C50937 * C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1999 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51087 -
            (C18592 + C18593) * C2000 - (C18594 + C18595) * C51077 +
            C19184 * C2001 + C19185 * C1998) *
               C15556 +
           ((C18593 + C18592) * C1999 + (C18595 + C18594) * C51087 -
            (C18596 + C18597) * C2000 - (C18598 + C18599) * C51077 +
            (C19204 + C19205) * C2001 + (C19206 + C19207) * C1998) *
               C15557 +
           (C19184 * C1999 + C19185 * C51087 - C19474 * C2000 -
            C19475 * C51077 + (C19485 + C19484) * C2001 +
            (C19487 + C19486) * C1998) *
               C15558) *
              C50754 * C1358 +
          (((C19022 + C19023) * C2000 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51087 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C1999) +
            (C19024 + C19025) * C51077 - C19358 * C2001 - C19359 * C1998) *
               C15556 +
           ((C19026 + C19027) * C2000 -
            ((C19025 + C19024) * C51087 + (C19023 + C19022) * C1999) +
            (C19028 + C19029) * C51077 - (C19368 + C19369) * C2001 -
            (C19370 + C19371) * C1998) *
               C15557 +
           ((C19369 + C19368) * C2000 - (C19359 * C51087 + C19358 * C1999) +
            (C19371 + C19370) * C51077 -
            (C2450 * C13974 + C50923 * C13976 + C2449 * C13975 +
             C51053 * C13977) *
                C2001 -
            (C2450 * C13978 + C50923 * C13980 + C2449 * C13979 +
             C51053 * C13981) *
                C1998) *
               C15558) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                    C118 +
                (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                    C50838) *
                   C50937 * C2446 +
               ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                   C2447 +
               C2510 * C2448) *
                  C50808 * C113 -
              (C2511 * C2448 +
               ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                   C2447 +
               ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                   C2446) *
                  C50808 * C114 +
              (C2510 * C2446 +
               ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                   C2447 +
               ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                   C2448) *
                  C50808 * C115 -
              (((C2450 * C314 + C50923 * C321 + C2449 * C137 + C51053 * C145) *
                    C50838 +
                (C2450 * C303 + C50923 * C315 + C2449 * C124 + C51053 * C136) *
                    C118) *
                   C50937 * C2448 +
               ((C2499 + C2498) * C50838 + (C2497 + C2496) * C118) * C50937 *
                   C2447 +
               C2511 * C2446) *
                  C50808 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                     C118 +
                 (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                     C50838) *
                    C50937 * C2446 +
                ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                    C2447 +
                C2510 * C2448) *
                   C630 -
               (C2699 * C2448 +
                ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                    C2447 +
                ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                     C50838 +
                 (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                     C118) *
                    C50937 * C2446) *
                   C631 +
               (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                     C118 +
                 (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                     C50838) *
                    C50937 * C2446 +
                ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                    C2447 +
                ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                    C2448) *
                   C632) *
                  C51033 +
              ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                    C2446 +
                ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                    C2447 +
                ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                    C2448) *
                   C631 -
               (C2511 * C2448 +
                ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                    C2447 +
                ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                    C2446) *
                   C630 -
               (((C2450 * C754 + C50923 * C762 + C2449 * C647 + C51053 * C653) *
                     C50838 +
                 (C2450 * C750 + C50923 * C755 + C2449 * C638 + C51053 * C646) *
                     C118) *
                    C50937 * C2448 +
                ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C50937 *
                    C2447 +
                ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C50937 *
                    C2446) *
                   C632) *
                  C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C997 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C994 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C998 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C995 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C999 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C996) *
               C50937 * C2446 +
           ((C2484 + C2485) * C997 + (C2486 + C2487) * C994 -
            (C2872 + C2873) * C998 - (C2874 + C2875) * C995 +
            (C3492 + C3493) * C999 + (C3494 + C3495) * C996) *
               C50937 * C2447 +
           (C2500 * C997 + C2501 * C994 - C2885 * C998 - C2886 * C995 +
            (C3496 + C3497) * C999 + (C3498 + C3499) * C996) *
               C50937 * C2448) *
              C50808 * C51033 +
          (((C2873 + C2872) * C998 -
            ((C2487 + C2486) * C994 + (C2485 + C2484) * C997) +
            (C2875 + C2874) * C995 - (C3493 + C3492) * C999 -
            (C3495 + C3494) * C996) *
               C50937 * C2446 +
           ((C2878 + C2877) * C998 -
            ((C2491 + C2490) * C994 + (C2489 + C2488) * C997) +
            (C2880 + C2879) * C995 - (C3497 + C3496) * C999 -
            (C3499 + C3498) * C996) *
               C50937 * C2447 +
           ((C2881 + C2882) * C998 - (C2502 * C994 + C2503 * C997) +
            (C2883 + C2884) * C995 -
            (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                C999 -
            (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                C996) *
               C50937 * C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C50808 * C113 -
          ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
            C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
               C50838 +
           (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
            C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
               C118) *
              C50937 * C50754 * C50808 * C114 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C118 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C50838) *
              C50937 * C50754 * C50808 * C115 -
          ((C10999 * C754 + C10994 * C762 + C10998 * C647 + C10993 * C653 +
            C10997 * C304 + C10992 * C316 + C10996 * C133 + C10991 * C143) *
               C50838 +
           (C10999 * C750 + C10994 * C755 + C10998 * C638 + C10993 * C646 +
            C10997 * C298 + C10992 * C305 + C10996 * C122 + C10991 * C132) *
               C118) *
              C50937 * C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C630 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C631 +
           ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
             C10998 * C3161 + C10993 * C3167 + C10999 * C8864 +
             C10994 * C8868) *
                C118 +
            (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
             C10998 * C3166 + C10993 * C3170 + C10999 * C8867 +
             C10994 * C8870) *
                C50838) *
               C50937 * C50754 * C632) *
              C51033 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C631 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C630 -
           ((C10999 * C8865 + C10994 * C8869 + C10998 * C3164 + C10993 * C3169 +
             C10997 * C758 + C10992 * C764 + C10996 * C643 + C10991 * C651) *
                C50838 +
            (C10999 * C8863 + C10994 * C8866 + C10998 * C3160 + C10993 * C3165 +
             C10997 * C752 + C10992 * C759 + C10996 * C636 + C10991 * C642) *
                C118) *
               C50937 * C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C997 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C994 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C998 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C995 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C999 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C996) *
              C50937 * C50754 * C50808 * C51033 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C998 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C994 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C997) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C995 -
           (C10999 * C9336 + C10994 * C9339 + C10998 * C3646 + C10993 * C3650 +
            C10997 * C1155 + C10992 * C1160 + C10996 * C1001 + C10991 * C1007) *
               C999 -
           (C10999 * C9340 + C10994 * C9342 + C10998 * C3651 + C10993 * C3655 +
            C10997 * C1161 + C10992 * C1167 + C10996 * C1008 + C10991 * C1016) *
               C996) *
              C50937 * C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C15556 +
           ((C2449 * C460 + C51053 * C466 + C2450 * C864 + C50923 * C872) *
                C118 +
            (C2449 * C467 + C51053 * C478 + C2450 * C873 + C50923 * C888) *
                C50838) *
               C15557 +
           ((C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C118 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C50838) *
               C15558) *
              C50754 * C50808 * C113 -
          (((C3495 + C3494) * C50838 + (C3493 + C3492) * C118) * C15558 +
           ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
           ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
              C50754 * C50808 * C114 +
          (C2508 * C15556 +
           ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C15557 +
           ((C3496 + C3497) * C118 + (C3498 + C3499) * C50838) * C15558) *
              C50754 * C50808 * C115 -
          (((C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                C50838 +
            (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                C118) *
               C15558 +
           ((C2884 + C2883) * C50838 + (C2882 + C2881) * C118) * C15557 +
           C2509 * C15556) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C15556 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C15557 +
            ((C18597 + C18596) * C118 + (C18599 + C18598) * C50838) * C15558) *
               C50754 * C630 -
           (((C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                 C50838 +
             (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                 C118) *
                C15558 +
            ((C2450 * C881 + C50923 * C892 + C2449 * C873 + C51053 * C888) *
                 C50838 +
             (C2450 * C868 + C50923 * C880 + C2449 * C864 + C51053 * C872) *
                 C118) *
                C15557 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C15556) *
               C50754 * C631 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C15556 +
            ((C2449 * C868 + C51053 * C880 + C2450 * C3317 + C50923 * C3320) *
                 C118 +
             (C2449 * C881 + C51053 * C892 + C2450 * C3321 + C50923 * C3326) *
                 C50838) *
                C15557 +
            ((C2449 * C3645 + C51053 * C3648 + C2450 * C9335 + C50923 * C9337) *
                 C118 +
             (C2449 * C3649 + C51053 * C3654 + C2450 * C9338 + C50923 * C9341) *
                 C50838) *
                C15558) *
               C50754 * C632) *
              C51033 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C15556 +
            ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C15557 +
            ((C2449 * C1155 + C51053 * C1160 + C2450 * C3646 + C50923 * C3650) *
                 C118 +
             (C2449 * C1161 + C51053 * C1167 + C2450 * C3651 + C50923 * C3655) *
                 C50838) *
                C15558) *
               C50754 * C631 -
           (((C3495 + C3494) * C50838 + (C3493 + C3492) * C118) * C15558 +
            ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
               C50754 * C630 -
           (((C2450 * C9340 + C50923 * C9342 + C2449 * C3651 + C51053 * C3655) *
                 C50838 +
             (C2450 * C9336 + C50923 * C9339 + C2449 * C3646 + C51053 * C3650) *
                 C118) *
                C15558 +
            ((C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                 C50838 +
             (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                 C118) *
                C15557 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C15556) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C997 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C994 -
            (C18592 + C18593) * C998 - (C18594 + C18595) * C995 +
            C19184 * C999 + C19185 * C996) *
               C15556 +
           ((C18593 + C18592) * C997 + (C18595 + C18594) * C994 -
            (C18596 + C18597) * C998 - (C18598 + C18599) * C995 +
            (C19204 + C19205) * C999 + (C19206 + C19207) * C996) *
               C15557 +
           (C19184 * C997 + C19185 * C994 - (C19205 + C19204) * C998 -
            (C19207 + C19206) * C995 +
            (C2449 * C6555 + C51053 * C6558 + C2450 * C13975 +
             C50923 * C13977) *
                C999 +
            (C2449 * C6559 + C51053 * C6564 + C2450 * C13979 +
             C50923 * C13981) *
                C996) *
               C15558) *
              C50754 * C50808 * C51033 +
          (((C2873 + C2872) * C998 -
            ((C2487 + C2486) * C994 + (C2485 + C2484) * C997) +
            (C2875 + C2874) * C995 - C19194 * C999 - C19195 * C996) *
               C15556 +
           ((C3492 + C3493) * C998 -
            ((C2874 + C2875) * C994 + (C2872 + C2873) * C997) +
            (C3494 + C3495) * C995 - (C19208 + C19209) * C999 -
            (C19210 + C19211) * C996) *
               C15557 +
           ((C19209 + C19208) * C998 - (C19195 * C994 + C19194 * C997) +
            (C19211 + C19210) * C995 -
            (C2450 * C16577 + C50923 * C16578 + C2449 * C6556 +
             C51053 * C6560) *
                C999 -
            (C2450 * C16579 + C50923 * C16580 + C2449 * C6561 +
             C51053 * C6565) *
                C996) *
               C15558) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                     C118 +
                 (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                     C50838) *
                    C50937 * C2446 +
                ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                    C2447 +
                C2510 * C2448) *
                   C51040 -
               (C2699 * C2448 +
                ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                    C2447 +
                ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                     C50838 +
                 (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                     C118) *
                    C50937 * C2446) *
                   C50824) *
                  C295 +
              ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                    C2446 +
                ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                    C2447 +
                ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                    C2448) *
                   C50824 -
               (C2511 * C2448 +
                ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                    C2447 +
                ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                    C2446) *
                   C51040) *
                  C296 +
              ((C2510 * C2446 +
                ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                    C2447 +
                ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                    C2448) *
                   C51040 -
               (((C2450 * C648 + C50923 * C654 + C2449 * C313 + C51053 * C320) *
                     C50838 +
                 (C2450 * C639 + C50923 * C649 + C2449 * C302 + C51053 * C312) *
                     C118) *
                    C50937 * C2448 +
                ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C50937 *
                    C2447 +
                C2699 * C2446) *
                   C50824) *
                  C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                    C118 +
                (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                    C50838) *
                   C50937 * C2446 +
               ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                   C2447 +
               C2510 * C2448) *
                  C745 -
              (C2699 * C2448 +
               ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                   C2447 +
               ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                    C50838 +
                (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                    C118) *
                   C50937 * C2446) *
                  C746 +
              (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                    C118 +
                (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                    C50838) *
                   C50937 * C2446 +
               ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                   C2447 +
               ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                   C2448) *
                  C747 -
              (((C2450 * C3162 + C50923 * C3168 + C2449 * C756 +
                 C51053 * C763) *
                    C50838 +
                (C2450 * C3159 + C50923 * C3163 + C2449 * C751 +
                 C51053 * C757) *
                    C118) *
                   C50937 * C2448 +
               ((C2450 * C3164 + C50923 * C3169 + C2449 * C758 +
                 C51053 * C764) *
                    C50838 +
                (C2450 * C3160 + C50923 * C3165 + C2449 * C752 +
                 C51053 * C759) *
                    C118) *
                   C50937 * C2447 +
               ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 +
                 C51053 * C765) *
                    C50838 +
                (C2450 * C3161 + C50923 * C3167 + C2449 * C753 +
                 C51053 * C761) *
                    C118) *
                   C50937 * C2446) *
                  C748) *
             C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C997 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C994 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C998 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C995 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C999 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C996) *
               C50937 * C2446 +
           ((C2484 + C2485) * C997 + (C2486 + C2487) * C994 -
            (C2872 + C2873) * C998 - (C2874 + C2875) * C995 +
            (C3492 + C3493) * C999 + (C3494 + C3495) * C996) *
               C50937 * C2447 +
           (C2500 * C997 + C2501 * C994 - C2885 * C998 - C2886 * C995 +
            (C3496 + C3497) * C999 + (C3498 + C3499) * C996) *
               C50937 * C2448) *
              C51040 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C998 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C994 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C997) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C995 -
            (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                C999 -
            (C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                C996) *
               C50937 * C2446 +
           ((C2449 * C865 + C51053 * C874 + C2450 * C869 + C50923 * C882) *
                C998 -
            ((C2686 + C2687) * C994 + (C2688 + C2689) * C997) +
            (C2449 * C875 + C51053 * C889 + C2450 * C883 + C50923 * C893) *
                C995 -
            (C2450 * C3646 + C50923 * C3650 + C2449 * C1155 + C51053 * C1160) *
                C999 -
            (C2450 * C3651 + C50923 * C3655 + C2449 * C1161 + C51053 * C1167) *
                C996) *
               C50937 * C2447 +
           ((C2449 * C866 + C51053 * C876 + C2450 * C870 + C50923 * C884) *
                C998 -
            (C2694 * C994 + C2695 * C997) +
            (C2449 * C877 + C51053 * C890 + C2450 * C885 + C50923 * C894) *
                C995 -
            (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                C999 -
            (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                C996) *
               C50937 * C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C50824) *
              C295 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C50824 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C51040) *
              C296 +
          (((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
             C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
                C118 +
            (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
             C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3162 + C10994 * C3168 + C10998 * C756 + C10993 * C763 +
             C10997 * C645 + C10992 * C652 + C10996 * C306 + C10991 * C317) *
                C50838 +
            (C10999 * C3159 + C10994 * C3163 + C10998 * C751 + C10993 * C757 +
             C10997 * C637 + C10992 * C644 + C10996 * C299 + C10991 * C307) *
                C118) *
               C50937 * C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C745 -
          ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
            C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
               C50838 +
           (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
            C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
               C118) *
              C50937 * C50754 * C746 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C118 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C50838) *
              C50937 * C50754 * C747 -
          ((C10999 * C11361 + C10994 * C11363 + C10998 * C8867 +
            C10993 * C8870 + C10997 * C3166 + C10992 * C3170 + C10996 * C760 +
            C10991 * C765) *
               C50838 +
           (C10999 * C11360 + C10994 * C11362 + C10998 * C8864 +
            C10993 * C8868 + C10997 * C3161 + C10992 * C3167 + C10996 * C753 +
            C10991 * C761) *
               C118) *
              C50937 * C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C997 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C994 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C998 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C995 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C999 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C996) *
              C50937 * C50754 * C51040 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C998 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C994 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C997) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C995 -
           (C10999 * C11662 + C10994 * C11663 + C10998 * C9335 +
            C10993 * C9337 + C10997 * C3645 + C10992 * C3648 + C10996 * C1154 +
            C10991 * C1158) *
               C999 -
           (C10999 * C11664 + C10994 * C11665 + C10998 * C9338 +
            C10993 * C9341 + C10997 * C3649 + C10992 * C3654 + C10996 * C1159 +
            C10991 * C1166) *
               C996) *
              C50937 * C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C15556 +
            ((C2449 * C460 + C51053 * C466 + C2450 * C864 + C50923 * C872) *
                 C118 +
             (C2449 * C467 + C51053 * C478 + C2450 * C873 + C50923 * C888) *
                 C50838) *
                C15557 +
            ((C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                 C118 +
             (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                 C50838) *
                C15558) *
               C50754 * C51040 -
           (((C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                 C50838 +
             (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                 C118) *
                C15558 +
            ((C2450 * C881 + C50923 * C892 + C2449 * C873 + C51053 * C888) *
                 C50838 +
             (C2450 * C868 + C50923 * C880 + C2449 * C864 + C51053 * C872) *
                 C118) *
                C15557 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C15556) *
               C50754 * C50824) *
              C295 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C15556 +
            ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C15557 +
            ((C2449 * C1155 + C51053 * C1160 + C2450 * C3646 + C50923 * C3650) *
                 C118 +
             (C2449 * C1161 + C51053 * C1167 + C2450 * C3651 + C50923 * C3655) *
                 C50838) *
                C15558) *
               C50754 * C50824 -
           (((C3495 + C3494) * C50838 + (C3493 + C3492) * C118) * C15558 +
            ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
               C50754 * C51040) *
              C296 +
          ((C2508 * C15556 +
            ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C15557 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C50838) * C15558) *
               C50754 * C51040 -
           (((C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                 C50838 +
             (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                 C118) *
                C15558 +
            ((C4277 + C4276) * C50838 + (C4275 + C4274) * C118) * C15557 +
            C2698 * C15556) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C15556 +
           ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C15557 +
           ((C18597 + C18596) * C118 + (C18599 + C18598) * C50838) * C15558) *
              C50754 * C745 -
          (((C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                C50838 +
            (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                C118) *
               C15558 +
           ((C2450 * C881 + C50923 * C892 + C2449 * C873 + C51053 * C888) *
                C50838 +
            (C2450 * C868 + C50923 * C880 + C2449 * C864 + C51053 * C872) *
                C118) *
               C15557 +
           ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                C50838 +
            (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                C118) *
               C15556) *
              C50754 * C746 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C118 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C50838) *
               C15556 +
           ((C2449 * C868 + C51053 * C880 + C2450 * C3317 + C50923 * C3320) *
                C118 +
            (C2449 * C881 + C51053 * C892 + C2450 * C3321 + C50923 * C3326) *
                C50838) *
               C15557 +
           ((C2449 * C3645 + C51053 * C3648 + C2450 * C9335 + C50923 * C9337) *
                C118 +
            (C2449 * C3649 + C51053 * C3654 + C2450 * C9338 + C50923 * C9341) *
                C50838) *
               C15558) *
              C50754 * C747 -
          (((C2450 * C11664 + C50923 * C11665 + C2449 * C9338 +
             C51053 * C9341) *
                C50838 +
            (C2450 * C11662 + C50923 * C11663 + C2449 * C9335 +
             C51053 * C9337) *
                C118) *
               C15558 +
           ((C2450 * C9020 + C50923 * C9023 + C2449 * C3321 + C51053 * C3326) *
                C50838 +
            (C2450 * C9017 + C50923 * C9019 + C2449 * C3317 + C51053 * C3320) *
                C118) *
               C15557 +
           ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                C50838 +
            (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                C118) *
               C15556) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C997 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C994 -
            (C18592 + C18593) * C998 - (C18594 + C18595) * C995 +
            C19184 * C999 + C19185 * C996) *
               C15556 +
           ((C18593 + C18592) * C997 + (C18595 + C18594) * C994 -
            (C18596 + C18597) * C998 - (C18598 + C18599) * C995 +
            (C19204 + C19205) * C999 + (C19206 + C19207) * C996) *
               C15557 +
           (C19184 * C997 + C19185 * C994 - (C19205 + C19204) * C998 -
            (C19207 + C19206) * C995 +
            (C2449 * C6555 + C51053 * C6558 + C2450 * C13975 +
             C50923 * C13977) *
                C999 +
            (C2449 * C6559 + C51053 * C6564 + C2450 * C13979 +
             C50923 * C13981) *
                C996) *
               C15558) *
              C50754 * C51040 +
          (((C19022 + C19023) * C998 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C994 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C997) +
            (C19024 + C19025) * C995 - C19358 * C999 - C19359 * C996) *
               C15556 +
           ((C19026 + C19027) * C998 -
            ((C19025 + C19024) * C994 + (C19023 + C19022) * C997) +
            (C19028 + C19029) * C995 - (C19368 + C19369) * C999 -
            (C19370 + C19371) * C996) *
               C15557 +
           ((C19369 + C19368) * C998 - (C19359 * C994 + C19358 * C997) +
            (C19371 + C19370) * C995 -
            (C2450 * C13974 + C50923 * C13976 + C2449 * C13975 +
             C51053 * C13977) *
                C999 -
            (C2450 * C13978 + C50923 * C13980 + C2449 * C13979 +
             C51053 * C13981) *
                C996) *
               C15558) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                    C458 +
                (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                    C51042 -
                (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                    C459 -
                (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                    C50850) *
                   C50937 * C2446 +
               ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
                (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
                   C50937 * C2447 +
               C2891 * C2448) *
                  C50808 * C295 +
              (((C2873 + C2872) * C459 -
                ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
                (C2875 + C2874) * C50850) *
                   C50937 * C2446 +
               ((C2878 + C2877) * C459 -
                ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
                (C2880 + C2879) * C50850) *
                   C50937 * C2447 +
               ((C2881 + C2882) * C459 - (C2502 * C51042 + C2503 * C458) +
                (C2883 + C2884) * C50850) *
                   C50937 * C2448) *
                  C50808 * C296 +
              (C2891 * C2446 +
               ((C2495 + C2494) * C458 + (C2493 + C2492) * C51042 -
                (C2882 + C2881) * C459 - (C2884 + C2883) * C50850) *
                   C50937 * C2447 +
               ((C2496 + C2497) * C458 + (C2498 + C2499) * C51042 -
                (C2450 * C1596 + C50923 * C1597 + C2449 * C464 +
                 C51053 * C474) *
                    C459 -
                (C2450 * C1598 + C50923 * C1599 + C2449 * C475 +
                 C51053 * C482) *
                    C50850) *
                   C50937 * C2448) *
                  C50808 * C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                    C458 +
                (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                    C51042 -
                (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                    C459 -
                (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                    C50850) *
                   C50937 * C2446 +
               ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
                (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
                   C50937 * C2447 +
               C2891 * C2448) *
                  C630 +
              (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                    C459 -
                ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                     C51042 +
                 (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                     C458) +
                (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                    C50850) *
                   C50937 * C2446 +
               ((C2449 * C865 + C51053 * C874 + C2450 * C869 + C50923 * C882) *
                    C459 -
                ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
                (C2449 * C875 + C51053 * C889 + C2450 * C883 + C50923 * C893) *
                    C50850) *
                   C50937 * C2447 +
               ((C2449 * C866 + C51053 * C876 + C2450 * C870 + C50923 * C884) *
                    C459 -
                (C2694 * C51042 + C2695 * C458) +
                (C2449 * C877 + C51053 * C890 + C2450 * C885 + C50923 * C894) *
                    C50850) *
                   C50937 * C2448) *
                  C631 +
              (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                    C458 +
                (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                    C51042 -
                (C2450 * C3317 + C50923 * C3320 + C2449 * C868 +
                 C51053 * C880) *
                    C459 -
                (C2450 * C3321 + C50923 * C3326 + C2449 * C881 +
                 C51053 * C892) *
                    C50850) *
                   C50937 * C2446 +
               ((C3054 + C3055) * C458 + (C3056 + C3057) * C51042 -
                (C2450 * C3318 + C50923 * C3322 + C2449 * C869 +
                 C51053 * C882) *
                    C459 -
                (C2450 * C3323 + C50923 * C3327 + C2449 * C883 +
                 C51053 * C893) *
                    C50850) *
                   C50937 * C2447 +
               ((C3058 + C3059) * C458 + (C3060 + C3061) * C51042 -
                (C2450 * C3319 + C50923 * C3324 + C2449 * C870 +
                 C51053 * C884) *
                    C459 -
                (C2450 * C3325 + C50923 * C3328 + C2449 * C885 +
                 C51053 * C894) *
                    C50850) *
                   C50937 * C2448) *
                  C632) *
             C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
               C1240 +
           (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
               C1236 -
           (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
               C1241 -
           (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
               C1237 +
           (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
               C1242 +
           (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
               C1238 -
           (C2450 * C3755 + C50923 * C3758 + C2449 * C1244 + C51053 * C1248) *
               C1243 -
           (C2450 * C3759 + C50923 * C3764 + C2449 * C1249 + C51053 * C1256) *
               C1239) *
              C50937 * C2446 +
          ((C2484 + C2485) * C1240 + (C2486 + C2487) * C1236 -
           (C2872 + C2873) * C1241 - (C2874 + C2875) * C1237 +
           (C3492 + C3493) * C1242 + (C3494 + C3495) * C1238 -
           (C2450 * C3756 + C50923 * C3760 + C2449 * C1245 + C51053 * C1250) *
               C1243 -
           (C2450 * C3761 + C50923 * C3765 + C2449 * C1251 + C51053 * C1257) *
               C1239) *
              C50937 * C2447 +
          (C2500 * C1240 + C2501 * C1236 - C2885 * C1241 - C2886 * C1237 +
           (C3496 + C3497) * C1242 + (C3498 + C3499) * C1238 -
           (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
               C1243 -
           (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
               C1239) *
              C50937 * C2448) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C50808 * C295 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C459 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C51042 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C458) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C50850) *
              C50937 * C50754 * C50808 * C296 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C458 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C51042 -
           (C10999 * C3319 + C10994 * C3324 + C10998 * C870 + C10993 * C884 +
            C10997 * C866 + C10992 * C876 + C10996 * C462 + C10991 * C470) *
               C459 -
           (C10999 * C3325 + C10994 * C3328 + C10998 * C885 + C10993 * C894 +
            C10997 * C877 + C10992 * C890 + C10996 * C471 + C10991 * C480) *
               C50850) *
              C50937 * C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C630 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C459 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C51042 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C458) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C50850) *
              C50937 * C50754 * C631 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C458 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C51042 -
           (C10999 * C11462 + C10994 * C11463 + C10998 * C9017 +
            C10993 * C9019 + C10997 * C3317 + C10992 * C3320 + C10996 * C868 +
            C10991 * C880) *
               C459 -
           (C10999 * C11464 + C10994 * C11465 + C10998 * C9020 +
            C10993 * C9023 + C10997 * C3321 + C10992 * C3326 + C10996 * C881 +
            C10991 * C892) *
               C50850) *
              C50937 * C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
           C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
              C1240 +
          (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
           C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
              C1236 -
          (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
           C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
              C1241 -
          (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
           C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
              C1237 +
          (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
           C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
              C1242 +
          (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
           C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
              C1238 -
          (C10999 * C11732 + C10994 * C11733 + C10998 * C9441 + C10993 * C9443 +
           C10997 * C3755 + C10992 * C3758 + C10996 * C1244 + C10991 * C1248) *
              C1243 -
          (C10999 * C11734 + C10994 * C11735 + C10998 * C9444 + C10993 * C9447 +
           C10997 * C3759 + C10992 * C3764 + C10996 * C1249 + C10991 * C1256) *
              C1239) *
         C50937 * C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
               C15556 +
           ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
            (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
               C15557 +
           ((C18597 + C18596) * C458 + (C18599 + C18598) * C51042 -
            (C2450 * C3755 + C50923 * C3758 + C2449 * C1244 + C51053 * C1248) *
                C459 -
            (C2450 * C3759 + C50923 * C3764 + C2449 * C1249 + C51053 * C1256) *
                C50850) *
               C15558) *
              C50754 * C50808 * C295 +
          (((C2873 + C2872) * C459 -
            ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
            (C2875 + C2874) * C50850) *
               C15556 +
           ((C3492 + C3493) * C459 -
            ((C2874 + C2875) * C51042 + (C2872 + C2873) * C458) +
            (C3494 + C3495) * C50850) *
               C15557 +
           ((C2449 * C1245 + C51053 * C1250 + C2450 * C3756 + C50923 * C3760) *
                C459 -
            ((C3495 + C3494) * C51042 + (C3493 + C3492) * C458) +
            (C2449 * C1251 + C51053 * C1257 + C2450 * C3761 + C50923 * C3765) *
                C50850) *
               C15558) *
              C50754 * C50808 * C296 +
          (C2890 * C15556 +
           ((C2878 + C2877) * C458 + (C2880 + C2879) * C51042 -
            (C3497 + C3496) * C459 - (C3499 + C3498) * C50850) *
               C15557 +
           ((C3496 + C3497) * C458 + (C3498 + C3499) * C51042 -
            (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
                C459 -
            (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
                C50850) *
               C15558) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
               C15556 +
           ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
            (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
               C15557 +
           ((C18597 + C18596) * C458 + (C18599 + C18598) * C51042 -
            (C2450 * C3755 + C50923 * C3758 + C2449 * C1244 + C51053 * C1248) *
                C459 -
            (C2450 * C3759 + C50923 * C3764 + C2449 * C1249 + C51053 * C1256) *
                C50850) *
               C15558) *
              C50754 * C630 +
          (((C19022 + C19023) * C459 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51042 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C458) +
            (C19024 + C19025) * C50850) *
               C15556 +
           ((C19026 + C19027) * C459 -
            ((C19025 + C19024) * C51042 + (C19023 + C19022) * C458) +
            (C19028 + C19029) * C50850) *
               C15557 +
           ((C2449 * C3755 + C51053 * C3758 + C2450 * C9441 + C50923 * C9443) *
                C459 -
            ((C19029 + C19028) * C51042 + (C19027 + C19026) * C458) +
            (C2449 * C3759 + C51053 * C3764 + C2450 * C9444 + C50923 * C9447) *
                C50850) *
               C15558) *
              C50754 * C631 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C458 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C51042 -
            (C19030 + C19031) * C459 - (C19032 + C19033) * C50850) *
               C15556 +
           ((C19031 + C19030) * C458 + (C19033 + C19032) * C51042 -
            (C19034 + C19035) * C459 - (C19036 + C19037) * C50850) *
               C15557 +
           ((C19035 + C19034) * C458 + (C19037 + C19036) * C51042 -
            (C2450 * C11732 + C50923 * C11733 + C2449 * C9441 +
             C51053 * C9443) *
                C459 -
            (C2450 * C11734 + C50923 * C11735 + C2449 * C9444 +
             C51053 * C9447) *
                C50850) *
               C15558) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
               C1240 +
           (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
               C1236 -
           (C18592 + C18593) * C1241 - (C18594 + C18595) * C1237 +
           C19184 * C1242 + C19185 * C1238 - C19474 * C1243 - C19475 * C1239) *
              C15556 +
          ((C18593 + C18592) * C1240 + (C18595 + C18594) * C1236 -
           (C18596 + C18597) * C1241 - (C18598 + C18599) * C1237 +
           (C19204 + C19205) * C1242 + (C19206 + C19207) * C1238 -
           (C19484 + C19485) * C1243 - (C19486 + C19487) * C1239) *
              C15557 +
          (C19184 * C1240 + C19185 * C1236 - C19474 * C1241 - C19475 * C1237 +
           (C19485 + C19484) * C1242 + (C19487 + C19486) * C1238 -
           (C2450 * C19469 + C50923 * C19470 + C2449 * C16691 +
            C51053 * C16693) *
               C1243 -
           (C2450 * C19471 + C50923 * C19472 + C2449 * C16694 +
            C51053 * C16697) *
               C1239) *
              C15558) *
         C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1730 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C1728 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C1731 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C50808 * C51085 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C1731 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C1728 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C1730) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C50850) *
              C50937 * C50754 * C50808 * C51071 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C1730 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C1728 -
           (C10999 * C3319 + C10994 * C3324 + C10998 * C870 + C10993 * C884 +
            C10997 * C866 + C10992 * C876 + C10996 * C462 + C10991 * C470) *
               C1731 -
           (C10999 * C3325 + C10994 * C3328 + C10998 * C885 + C10993 * C894 +
            C10997 * C877 + C10992 * C890 + C10996 * C471 + C10991 * C480) *
               C50850) *
              C50937 * C50754 * C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1730 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1728 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C1731 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
            (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C4431 * C2448) *
              C50808 * C51085 +
          (((C2873 + C2872) * C1731 -
            ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
            (C2875 + C2874) * C50850) *
               C50937 * C2446 +
           ((C2878 + C2877) * C1731 -
            ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
            (C2880 + C2879) * C50850) *
               C50937 * C2447 +
           ((C2881 + C2882) * C1731 - (C2502 * C1728 + C2503 * C1730) +
            (C2883 + C2884) * C50850) *
               C50937 * C2448) *
              C50808 * C51071 +
          (C4431 * C2446 +
           ((C2495 + C2494) * C1730 + (C2493 + C2492) * C1728 -
            (C2882 + C2881) * C1731 - (C2884 + C2883) * C50850) *
               C50937 * C2447 +
           ((C2496 + C2497) * C1730 + (C2498 + C2499) * C1728 -
            (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                C1731 -
            (C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                C50850) *
               C50937 * C2448) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1730 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1728 -
            (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
               C15556 +
           ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
            (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
               C15557 +
           (C19184 * C1730 + C19185 * C1728 - C19474 * C1731 -
            C19475 * C50850) *
               C15558) *
              C50754 * C50808 * C51085 +
          (((C2873 + C2872) * C1731 -
            ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
            (C2875 + C2874) * C50850) *
               C15556 +
           ((C3492 + C3493) * C1731 -
            ((C2874 + C2875) * C1728 + (C2872 + C2873) * C1730) +
            (C3494 + C3495) * C50850) *
               C15557 +
           ((C19209 + C19208) * C1731 - (C19195 * C1728 + C19194 * C1730) +
            (C19211 + C19210) * C50850) *
               C15558) *
              C50754 * C50808 * C51071 +
          (C4430 * C15556 +
           ((C2878 + C2877) * C1730 + (C2880 + C2879) * C1728 -
            (C3497 + C3496) * C1731 - (C3499 + C3498) * C50850) *
               C15557 +
           ((C3496 + C3497) * C1730 + (C3498 + C3499) * C1728 -
            (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
                C1731 -
            (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
                C50850) *
               C15558) *
              C50754 * C50808 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C1730 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C1728 -
            (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
             C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
                C1731 -
            (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
             C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
                C50850) *
               C50937 * C50754 * C51040 +
           ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
             C10998 * C3317 + C10993 * C3320 + C10999 * C9017 +
             C10994 * C9019) *
                C1731 -
            ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
              C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                 C1728 +
             (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
              C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                 C1730) +
            (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
             C10998 * C3321 + C10993 * C3326 + C10999 * C9020 +
             C10994 * C9023) *
                C50850) *
               C50937 * C50754 * C50824) *
              C1464 +
          (((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
             C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
                C1731 -
            ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
              C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                 C1728 +
             (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
              C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                 C1730) +
            (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
             C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
                C50850) *
               C50937 * C50754 * C51040 +
           ((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C1730 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C1728 -
            (C10999 * C9018 + C10994 * C9021 + C10998 * C3318 + C10993 * C3322 +
             C10997 * C869 + C10992 * C882 + C10996 * C865 + C10991 * C874) *
                C1731 -
            (C10999 * C9022 + C10994 * C9024 + C10998 * C3323 + C10993 * C3327 +
             C10997 * C883 + C10992 * C893 + C10996 * C875 + C10991 * C889) *
                C50850) *
               C50937 * C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                 C1731 -
             (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                 C50850) *
                C50937 * C2446 +
            ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
             (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
                C50937 * C2447 +
            C4431 * C2448) *
               C51040 +
           (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                 C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C2446 +
            ((C4270 + C4271) * C1731 -
             ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
             (C4272 + C4273) * C50850) *
                C50937 * C2447 +
            ((C4274 + C4275) * C1731 - (C2694 * C1728 + C2695 * C1730) +
             (C4276 + C4277) * C50850) *
                C50937 * C2448) *
               C50824) *
              C1464 +
          ((((C2873 + C2872) * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             (C2875 + C2874) * C50850) *
                C50937 * C2446 +
            ((C2878 + C2877) * C1731 -
             ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
             (C2880 + C2879) * C50850) *
                C50937 * C2447 +
            ((C2881 + C2882) * C1731 - (C2502 * C1728 + C2503 * C1730) +
             (C2883 + C2884) * C50850) *
                C50937 * C2448) *
               C51040 +
           (((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
             (C4271 + C4270) * C1731 - (C4273 + C4272) * C50850) *
                C50937 * C2446 +
            ((C2685 + C2684) * C1730 + (C2683 + C2682) * C1728 -
             (C4275 + C4274) * C1731 - (C4277 + C4276) * C50850) *
                C50937 * C2447 +
            ((C2690 + C2691) * C1730 + (C2692 + C2693) * C1728 -
             (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                 C1731 -
             (C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                 C50850) *
                C50937 * C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
                C15556 +
            ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
             (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
                C15557 +
            (C19184 * C1730 + C19185 * C1728 - C19474 * C1731 -
             C19475 * C50850) *
                C15558) *
               C50754 * C51040 +
           (((C19022 + C19023) * C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C19024 + C19025) * C50850) *
                C15556 +
            ((C19026 + C19027) * C1731 -
             ((C19025 + C19024) * C1728 + (C19023 + C19022) * C1730) +
             (C19028 + C19029) * C50850) *
                C15557 +
            ((C19369 + C19368) * C1731 - (C19359 * C1728 + C19358 * C1730) +
             (C19371 + C19370) * C50850) *
                C15558) *
               C50754 * C50824) *
              C1464 +
          ((((C2873 + C2872) * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             (C2875 + C2874) * C50850) *
                C15556 +
            ((C3492 + C3493) * C1731 -
             ((C2874 + C2875) * C1728 + (C2872 + C2873) * C1730) +
             (C3494 + C3495) * C50850) *
                C15557 +
            ((C19209 + C19208) * C1731 - (C19195 * C1728 + C19194 * C1730) +
             (C19211 + C19210) * C50850) *
                C15558) *
               C50754 * C51040 +
           (((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
             (C4271 + C4270) * C1731 - (C4273 + C4272) * C50850) *
                C15556 +
            ((C4270 + C4271) * C1730 + (C4272 + C4273) * C1728 -
             (C19982 + C19983) * C1731 - (C19984 + C19985) * C50850) *
                C15557 +
            ((C19983 + C19982) * C1730 + (C19985 + C19984) * C1728 -
             (C2450 * C9442 + C50923 * C9445 + C2449 * C3756 + C51053 * C3760) *
                 C1731 -
             (C2450 * C9446 + C50923 * C9448 + C2449 * C3761 + C51053 * C3765) *
                 C50850) *
                C15558) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1999 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51087 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C2000 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C51077 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C2001 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C1998) *
              C50937 * C50754 * C50808 * C1464 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C2000 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C51087 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C1999) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C51077 -
           (C10999 * C9336 + C10994 * C9339 + C10998 * C3646 + C10993 * C3650 +
            C10997 * C1155 + C10992 * C1160 + C10996 * C1001 + C10991 * C1007) *
               C2001 -
           (C10999 * C9340 + C10994 * C9342 + C10998 * C3651 + C10993 * C3655 +
            C10997 * C1161 + C10992 * C1167 + C10996 * C1008 + C10991 * C1016) *
               C1998) *
              C50937 * C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1999 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51087 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C2000 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C51077 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C2001 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C1998) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1999 + (C2486 + C2487) * C51087 -
            (C2872 + C2873) * C2000 - (C2874 + C2875) * C51077 +
            (C3492 + C3493) * C2001 + (C3494 + C3495) * C1998) *
               C50937 * C2447 +
           (C2500 * C1999 + C2501 * C51087 - C2885 * C2000 - C2886 * C51077 +
            (C3496 + C3497) * C2001 + (C3498 + C3499) * C1998) *
               C50937 * C2448) *
              C50808 * C1464 +
          (((C2873 + C2872) * C2000 -
            ((C2487 + C2486) * C51087 + (C2485 + C2484) * C1999) +
            (C2875 + C2874) * C51077 - (C3493 + C3492) * C2001 -
            (C3495 + C3494) * C1998) *
               C50937 * C2446 +
           ((C2878 + C2877) * C2000 -
            ((C2491 + C2490) * C51087 + (C2489 + C2488) * C1999) +
            (C2880 + C2879) * C51077 - (C3497 + C3496) * C2001 -
            (C3499 + C3498) * C1998) *
               C50937 * C2447 +
           ((C2881 + C2882) * C2000 - (C2502 * C51087 + C2503 * C1999) +
            (C2883 + C2884) * C51077 -
            (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                C2001 -
            (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                C1998) *
               C50937 * C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1999 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51087 -
            (C18592 + C18593) * C2000 - (C18594 + C18595) * C51077 +
            C19184 * C2001 + C19185 * C1998) *
               C15556 +
           ((C18593 + C18592) * C1999 + (C18595 + C18594) * C51087 -
            (C18596 + C18597) * C2000 - (C18598 + C18599) * C51077 +
            (C19204 + C19205) * C2001 + (C19206 + C19207) * C1998) *
               C15557 +
           (C19184 * C1999 + C19185 * C51087 - C19474 * C2000 -
            C19475 * C51077 + (C19485 + C19484) * C2001 +
            (C19487 + C19486) * C1998) *
               C15558) *
              C50754 * C50808 * C1464 +
          (((C2873 + C2872) * C2000 -
            ((C2487 + C2486) * C51087 + (C2485 + C2484) * C1999) +
            (C2875 + C2874) * C51077 - C19194 * C2001 - C19195 * C1998) *
               C15556 +
           ((C3492 + C3493) * C2000 -
            ((C2874 + C2875) * C51087 + (C2872 + C2873) * C1999) +
            (C3494 + C3495) * C51077 - (C19208 + C19209) * C2001 -
            (C19210 + C19211) * C1998) *
               C15557 +
           ((C19209 + C19208) * C2000 - (C19195 * C51087 + C19194 * C1999) +
            (C19211 + C19210) * C51077 -
            (C2450 * C16577 + C50923 * C16578 + C2449 * C6556 +
             C51053 * C6560) *
                C2001 -
            (C2450 * C16579 + C50923 * C16580 + C2449 * C6561 +
             C51053 * C6565) *
                C1998) *
               C15558) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C630 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C631 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C2446 +
            ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                C2447 +
            ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                C2448) *
               C632) *
              C51033 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C631 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C630 -
           (((C2450 * C754 + C50923 * C762 + C2449 * C647 + C51053 * C653) *
                 C50838 +
             (C2450 * C750 + C50923 * C755 + C2449 * C638 + C51053 * C646) *
                 C118) *
                C50937 * C2448 +
            ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C50937 *
                C2447 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C50937 *
                C2446) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
               C2447 +
           C2510 * C2448) *
              C50808 * C113 -
          (C2511 * C2448 +
           ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
               C2447 +
           ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
               C2446) *
              C50808 * C114 +
          (C2510 * C2446 +
           ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
               C2447 +
           ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
               C2448) *
              C50808 * C115 -
          (((C2450 * C314 + C50923 * C321 + C2449 * C137 + C51053 * C145) *
                C50838 +
            (C2450 * C303 + C50923 * C315 + C2449 * C124 + C51053 * C136) *
                C118) *
               C50937 * C2448 +
           ((C2499 + C2498) * C50838 + (C2497 + C2496) * C118) * C50937 *
               C2447 +
           C2511 * C2446) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C50808 * C113 -
          ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
            C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
               C50838 +
           (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
            C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
               C118) *
              C50937 * C50754 * C50808 * C114 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C118 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C50838) *
              C50937 * C50754 * C50808 * C115 -
          ((C10999 * C754 + C10994 * C762 + C10998 * C647 + C10993 * C653 +
            C10997 * C304 + C10992 * C316 + C10996 * C133 + C10991 * C143) *
               C50838 +
           (C10999 * C750 + C10994 * C755 + C10998 * C638 + C10993 * C646 +
            C10997 * C298 + C10992 * C305 + C10996 * C122 + C10991 * C132) *
               C118) *
              C50937 * C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C630 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C631 +
           ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
             C10998 * C3161 + C10993 * C3167 + C10999 * C8864 +
             C10994 * C8868) *
                C118 +
            (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
             C10998 * C3166 + C10993 * C3170 + C10999 * C8867 +
             C10994 * C8870) *
                C50838) *
               C50937 * C50754 * C632) *
              C51033 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C631 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C630 -
           ((C10999 * C8865 + C10994 * C8869 + C10998 * C3164 + C10993 * C3169 +
             C10997 * C758 + C10992 * C764 + C10996 * C643 + C10991 * C651) *
                C50838 +
            (C10999 * C8863 + C10994 * C8866 + C10998 * C3160 + C10993 * C3165 +
             C10997 * C752 + C10992 * C759 + C10996 * C636 + C10991 * C642) *
                C118) *
               C50937 * C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C15556 +
           ((C2449 * C460 + C51053 * C466 + C2450 * C864 + C50923 * C872) *
                C118 +
            (C2449 * C467 + C51053 * C478 + C2450 * C873 + C50923 * C888) *
                C50838) *
               C15557 +
           ((C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C118 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C50838) *
               C15558) *
              C50754 * C50808 * C113 -
          (((C3495 + C3494) * C50838 + (C3493 + C3492) * C118) * C15558 +
           ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
           ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
              C50754 * C50808 * C114 +
          (C2508 * C15556 +
           ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C15557 +
           ((C3496 + C3497) * C118 + (C3498 + C3499) * C50838) * C15558) *
              C50754 * C50808 * C115 -
          (((C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                C50838 +
            (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                C118) *
               C15558 +
           ((C2884 + C2883) * C50838 + (C2882 + C2881) * C118) * C15557 +
           C2509 * C15556) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C15556 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C15557 +
            ((C18597 + C18596) * C118 + (C18599 + C18598) * C50838) * C15558) *
               C50754 * C630 -
           (((C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                 C50838 +
             (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                 C118) *
                C15558 +
            ((C2450 * C881 + C50923 * C892 + C2449 * C873 + C51053 * C888) *
                 C50838 +
             (C2450 * C868 + C50923 * C880 + C2449 * C864 + C51053 * C872) *
                 C118) *
                C15557 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C15556) *
               C50754 * C631 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C15556 +
            ((C2449 * C868 + C51053 * C880 + C2450 * C3317 + C50923 * C3320) *
                 C118 +
             (C2449 * C881 + C51053 * C892 + C2450 * C3321 + C50923 * C3326) *
                 C50838) *
                C15557 +
            ((C2449 * C3645 + C51053 * C3648 + C2450 * C9335 + C50923 * C9337) *
                 C118 +
             (C2449 * C3649 + C51053 * C3654 + C2450 * C9338 + C50923 * C9341) *
                 C50838) *
                C15558) *
               C50754 * C632) *
              C51033 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C15556 +
            ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C15557 +
            ((C2449 * C1155 + C51053 * C1160 + C2450 * C3646 + C50923 * C3650) *
                 C118 +
             (C2449 * C1161 + C51053 * C1167 + C2450 * C3651 + C50923 * C3655) *
                 C50838) *
                C15558) *
               C50754 * C631 -
           (((C3495 + C3494) * C50838 + (C3493 + C3492) * C118) * C15558 +
            ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
               C50754 * C630 -
           (((C2450 * C9340 + C50923 * C9342 + C2449 * C3651 + C51053 * C3655) *
                 C50838 +
             (C2450 * C9336 + C50923 * C9339 + C2449 * C3646 + C51053 * C3650) *
                 C118) *
                C15558 +
            ((C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                 C50838 +
             (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                 C118) *
                C15557 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C15556) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
               C2447 +
           C2510 * C2448) *
              C745 -
          (C2699 * C2448 +
           ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
               C2447 +
           ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                C50838 +
            (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                C118) *
               C50937 * C2446) *
              C746 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C118 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C50838) *
               C50937 * C2446 +
           ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
               C2447 +
           ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
               C2448) *
              C747 -
          (((C2450 * C3162 + C50923 * C3168 + C2449 * C756 + C51053 * C763) *
                C50838 +
            (C2450 * C3159 + C50923 * C3163 + C2449 * C751 + C51053 * C757) *
                C118) *
               C50937 * C2448 +
           ((C2450 * C3164 + C50923 * C3169 + C2449 * C758 + C51053 * C764) *
                C50838 +
            (C2450 * C3160 + C50923 * C3165 + C2449 * C752 + C51053 * C759) *
                C118) *
               C50937 * C2447 +
           ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                C50838 +
            (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                C118) *
               C50937 * C2446) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C51040 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C50824) *
              C295 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C50824 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C51040) *
              C296 +
          ((C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                C2448) *
               C51040 -
           (((C2450 * C648 + C50923 * C654 + C2449 * C313 + C51053 * C320) *
                 C50838 +
             (C2450 * C639 + C50923 * C649 + C2449 * C302 + C51053 * C312) *
                 C118) *
                C50937 * C2448 +
            ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C50937 *
                C2447 +
            C2699 * C2446) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C50824) *
              C295 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C50824 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C51040) *
              C296 +
          (((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
             C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
                C118 +
            (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
             C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3162 + C10994 * C3168 + C10998 * C756 + C10993 * C763 +
             C10997 * C645 + C10992 * C652 + C10996 * C306 + C10991 * C317) *
                C50838 +
            (C10999 * C3159 + C10994 * C3163 + C10998 * C751 + C10993 * C757 +
             C10997 * C637 + C10992 * C644 + C10996 * C299 + C10991 * C307) *
                C118) *
               C50937 * C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C745 -
          ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
            C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
               C50838 +
           (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
            C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
               C118) *
              C50937 * C50754 * C746 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C118 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C50838) *
              C50937 * C50754 * C747 -
          ((C10999 * C11361 + C10994 * C11363 + C10998 * C8867 +
            C10993 * C8870 + C10997 * C3166 + C10992 * C3170 + C10996 * C760 +
            C10991 * C765) *
               C50838 +
           (C10999 * C11360 + C10994 * C11362 + C10998 * C8864 +
            C10993 * C8868 + C10997 * C3161 + C10992 * C3167 + C10996 * C753 +
            C10991 * C761) *
               C118) *
              C50937 * C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C15556 +
            ((C2449 * C460 + C51053 * C466 + C2450 * C864 + C50923 * C872) *
                 C118 +
             (C2449 * C467 + C51053 * C478 + C2450 * C873 + C50923 * C888) *
                 C50838) *
                C15557 +
            ((C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                 C118 +
             (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                 C50838) *
                C15558) *
               C50754 * C51040 -
           (((C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                 C50838 +
             (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                 C118) *
                C15558 +
            ((C2450 * C881 + C50923 * C892 + C2449 * C873 + C51053 * C888) *
                 C50838 +
             (C2450 * C868 + C50923 * C880 + C2449 * C864 + C51053 * C872) *
                 C118) *
                C15557 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C15556) *
               C50754 * C50824) *
              C295 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C15556 +
            ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C15557 +
            ((C2449 * C1155 + C51053 * C1160 + C2450 * C3646 + C50923 * C3650) *
                 C118 +
             (C2449 * C1161 + C51053 * C1167 + C2450 * C3651 + C50923 * C3655) *
                 C50838) *
                C15558) *
               C50754 * C50824 -
           (((C3495 + C3494) * C50838 + (C3493 + C3492) * C118) * C15558 +
            ((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C15557 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C15556) *
               C50754 * C51040) *
              C296 +
          ((C2508 * C15556 +
            ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C15557 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C50838) * C15558) *
               C50754 * C51040 -
           (((C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                 C50838 +
             (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                 C118) *
                C15558 +
            ((C4277 + C4276) * C50838 + (C4275 + C4274) * C118) * C15557 +
            C2698 * C15556) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C15556 +
           ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C15557 +
           ((C18597 + C18596) * C118 + (C18599 + C18598) * C50838) * C15558) *
              C50754 * C745 -
          (((C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                C50838 +
            (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                C118) *
               C15558 +
           ((C2450 * C881 + C50923 * C892 + C2449 * C873 + C51053 * C888) *
                C50838 +
            (C2450 * C868 + C50923 * C880 + C2449 * C864 + C51053 * C872) *
                C118) *
               C15557 +
           ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                C50838 +
            (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                C118) *
               C15556) *
              C50754 * C746 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C118 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C50838) *
               C15556 +
           ((C2449 * C868 + C51053 * C880 + C2450 * C3317 + C50923 * C3320) *
                C118 +
            (C2449 * C881 + C51053 * C892 + C2450 * C3321 + C50923 * C3326) *
                C50838) *
               C15557 +
           ((C2449 * C3645 + C51053 * C3648 + C2450 * C9335 + C50923 * C9337) *
                C118 +
            (C2449 * C3649 + C51053 * C3654 + C2450 * C9338 + C50923 * C9341) *
                C50838) *
               C15558) *
              C50754 * C747 -
          (((C2450 * C11664 + C50923 * C11665 + C2449 * C9338 +
             C51053 * C9341) *
                C50838 +
            (C2450 * C11662 + C50923 * C11663 + C2449 * C9335 +
             C51053 * C9337) *
                C118) *
               C15558 +
           ((C2450 * C9020 + C50923 * C9023 + C2449 * C3321 + C51053 * C3326) *
                C50838 +
            (C2450 * C9017 + C50923 * C9019 + C2449 * C3317 + C51053 * C3320) *
                C118) *
               C15557 +
           ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                C50838 +
            (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                C118) *
               C15556) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C459 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
            (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C2891 * C2448) *
              C630 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C459 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51042 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C458) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C2449 * C865 + C51053 * C874 + C2450 * C869 + C50923 * C882) *
                C459 -
            ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
            (C2449 * C875 + C51053 * C889 + C2450 * C883 + C50923 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C2449 * C866 + C51053 * C876 + C2450 * C870 + C50923 * C884) *
                C459 -
            (C2694 * C51042 + C2695 * C458) +
            (C2449 * C877 + C51053 * C890 + C2450 * C885 + C50923 * C894) *
                C50850) *
               C50937 * C2448) *
              C631 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C458 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C51042 -
            (C2450 * C3317 + C50923 * C3320 + C2449 * C868 + C51053 * C880) *
                C459 -
            (C2450 * C3321 + C50923 * C3326 + C2449 * C881 + C51053 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C3054 + C3055) * C458 + (C3056 + C3057) * C51042 -
            (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                C459 -
            (C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C3058 + C3059) * C458 + (C3060 + C3061) * C51042 -
            (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                C459 -
            (C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                C50850) *
               C50937 * C2448) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C459 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
            (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C2891 * C2448) *
              C50808 * C295 +
          (((C2873 + C2872) * C459 -
            ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
            (C2875 + C2874) * C50850) *
               C50937 * C2446 +
           ((C2878 + C2877) * C459 -
            ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
            (C2880 + C2879) * C50850) *
               C50937 * C2447 +
           ((C2881 + C2882) * C459 - (C2502 * C51042 + C2503 * C458) +
            (C2883 + C2884) * C50850) *
               C50937 * C2448) *
              C50808 * C296 +
          (C2891 * C2446 +
           ((C2495 + C2494) * C458 + (C2493 + C2492) * C51042 -
            (C2882 + C2881) * C459 - (C2884 + C2883) * C50850) *
               C50937 * C2447 +
           ((C2496 + C2497) * C458 + (C2498 + C2499) * C51042 -
            (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                C459 -
            (C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                C50850) *
               C50937 * C2448) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C50808 * C295 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C459 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C51042 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C458) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C50850) *
              C50937 * C50754 * C50808 * C296 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C458 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C51042 -
           (C10999 * C3319 + C10994 * C3324 + C10998 * C870 + C10993 * C884 +
            C10997 * C866 + C10992 * C876 + C10996 * C462 + C10991 * C470) *
               C459 -
           (C10999 * C3325 + C10994 * C3328 + C10998 * C885 + C10993 * C894 +
            C10997 * C877 + C10992 * C890 + C10996 * C471 + C10991 * C480) *
               C50850) *
              C50937 * C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C630 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C459 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C51042 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C458) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C50850) *
              C50937 * C50754 * C631 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C458 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C51042 -
           (C10999 * C11462 + C10994 * C11463 + C10998 * C9017 +
            C10993 * C9019 + C10997 * C3317 + C10992 * C3320 + C10996 * C868 +
            C10991 * C880) *
               C459 -
           (C10999 * C11464 + C10994 * C11465 + C10998 * C9020 +
            C10993 * C9023 + C10997 * C3321 + C10992 * C3326 + C10996 * C881 +
            C10991 * C892) *
               C50850) *
              C50937 * C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
               C15556 +
           ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
            (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
               C15557 +
           ((C18597 + C18596) * C458 + (C18599 + C18598) * C51042 -
            (C2450 * C3755 + C50923 * C3758 + C2449 * C1244 + C51053 * C1248) *
                C459 -
            (C2450 * C3759 + C50923 * C3764 + C2449 * C1249 + C51053 * C1256) *
                C50850) *
               C15558) *
              C50754 * C50808 * C295 +
          (((C2873 + C2872) * C459 -
            ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
            (C2875 + C2874) * C50850) *
               C15556 +
           ((C3492 + C3493) * C459 -
            ((C2874 + C2875) * C51042 + (C2872 + C2873) * C458) +
            (C3494 + C3495) * C50850) *
               C15557 +
           ((C2449 * C1245 + C51053 * C1250 + C2450 * C3756 + C50923 * C3760) *
                C459 -
            ((C3495 + C3494) * C51042 + (C3493 + C3492) * C458) +
            (C2449 * C1251 + C51053 * C1257 + C2450 * C3761 + C50923 * C3765) *
                C50850) *
               C15558) *
              C50754 * C50808 * C296 +
          (C2890 * C15556 +
           ((C2878 + C2877) * C458 + (C2880 + C2879) * C51042 -
            (C3497 + C3496) * C459 - (C3499 + C3498) * C50850) *
               C15557 +
           ((C3496 + C3497) * C458 + (C3498 + C3499) * C51042 -
            (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
                C459 -
            (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
                C50850) *
               C15558) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
               C15556 +
           ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
            (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
               C15557 +
           ((C18597 + C18596) * C458 + (C18599 + C18598) * C51042 -
            (C2450 * C3755 + C50923 * C3758 + C2449 * C1244 + C51053 * C1248) *
                C459 -
            (C2450 * C3759 + C50923 * C3764 + C2449 * C1249 + C51053 * C1256) *
                C50850) *
               C15558) *
              C50754 * C630 +
          (((C19022 + C19023) * C459 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51042 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C458) +
            (C19024 + C19025) * C50850) *
               C15556 +
           ((C19026 + C19027) * C459 -
            ((C19025 + C19024) * C51042 + (C19023 + C19022) * C458) +
            (C19028 + C19029) * C50850) *
               C15557 +
           ((C2449 * C3755 + C51053 * C3758 + C2450 * C9441 + C50923 * C9443) *
                C459 -
            ((C19029 + C19028) * C51042 + (C19027 + C19026) * C458) +
            (C2449 * C3759 + C51053 * C3764 + C2450 * C9444 + C50923 * C9447) *
                C50850) *
               C15558) *
              C50754 * C631 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C458 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C51042 -
            (C19030 + C19031) * C459 - (C19032 + C19033) * C50850) *
               C15556 +
           ((C19031 + C19030) * C458 + (C19033 + C19032) * C51042 -
            (C19034 + C19035) * C459 - (C19036 + C19037) * C50850) *
               C15557 +
           ((C19035 + C19034) * C458 + (C19037 + C19036) * C51042 -
            (C2450 * C11732 + C50923 * C11733 + C2449 * C9441 +
             C51053 * C9443) *
                C459 -
            (C2450 * C11734 + C50923 * C11735 + C2449 * C9444 +
             C51053 * C9447) *
                C50850) *
               C15558) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C1358 -
           (((C13542 + C13541 + C13540) * C50838 +
             (C13539 + C13538 + C13537) * C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C50824) *
              C51085 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C50824 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C1358) *
              C51071 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C51055 +
            ((C8596 + C8597 + C8598) * C118 +
             (C8599 + C8600 + C8601) * C50838) *
                C50949) *
               C50754 * C1358 -
           (((C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50838 +
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C118) *
                C50949 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C51055) *
               C50754 * C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C1358 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C50824) *
              C51085 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C50824 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C1358) *
              C51071 +
          ((C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
            ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
               C1358 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C51055) *
                C2448 +
            ((C5526 + C5525) * C50949 + C355 * C51055) * C2447 +
            C5529 * C2446) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C21023 +
            (C5693 * C118 + C5694 * C50838) * C21024 +
            (C6284 * C118 + C6285 * C50838) * C21025 +
            (C6572 * C118 + C6573 * C50838) * C21026) *
               C50754 * C1358 -
           ((C16591 * C50838 + C16590 * C118) * C21026 +
            (C6453 * C50838 + C6452 * C118) * C21025 +
            (C6115 * C50838 + C6114 * C118) * C21024 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C21023) *
               C50754 * C50824) *
              C51085 +
          (((C352 + C351) * C21023 + (C5524 + C5523) * C21024 +
            (C15713 + C15712) * C21025 +
            (C16592 * C118 + C16593 * C50838) * C21026) *
               C50754 * C50824 -
           ((C6287 * C50838 + C6286 * C118) * C21026 +
            (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
            (C179 + C178) * C21023) *
               C50754 * C1358) *
              C51071 +
          ((C188 * C21023 + C5368 * C21024 + (C15563 + C15562) * C21025 +
            (C6288 * C118 + C6289 * C50838) * C21026) *
               C50754 * C1358 -
           (((C117 * C3763 + C50907 * C3766) * C50838 +
             (C117 * C3757 + C50907 * C3762) * C118) *
                C21026 +
            (C15715 + C15714) * C21025 + C5527 * C21024 + C356 * C21023) *
               C50754 * C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C51086 -
           (((C13542 + C13541 + C13540) * C50838 +
             (C13539 + C13538 + C13537) * C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C51074 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C51055 +
            ((C13545 + C13544 + C13543) * C118 +
             (C13548 + C13547 + C13546) * C50838) *
                C50949) *
               C50754 * C1463) *
              C1464 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C51074 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C51086 -
           (((C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
              C8180 * C883 + C8175 * C893) *
                 C50838 +
             (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
              C8180 * C869 + C8175 * C882) *
                 C118) *
                C50949 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C51055) *
               C50754 * C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C51086 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C51074 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51055 +
             (C6116 * C118 + C6117 * C50838) * C50949) *
                C2446 +
            ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
            ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C51074 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C51086 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C51055) *
                C2448 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C51055) * C2447 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C51055) * C2446) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C21023 +
            (C5693 * C118 + C5694 * C50838) * C21024 +
            (C6284 * C118 + C6285 * C50838) * C21025 +
            (C6572 * C118 + C6573 * C50838) * C21026) *
               C50754 * C51086 -
           ((C16591 * C50838 + C16590 * C118) * C21026 +
            (C6453 * C50838 + C6452 * C118) * C21025 +
            (C6115 * C50838 + C6114 * C118) * C21024 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C21023) *
               C50754 * C51074 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C21023 +
            (C6116 * C118 + C6117 * C50838) * C21024 +
            (C16272 * C118 + C16273 * C50838) * C21025 +
            (C21490 * C118 + C21491 * C50838) * C21026) *
               C50754 * C1463) *
              C1464 +
          (((C352 + C351) * C21023 + (C5524 + C5523) * C21024 +
            (C15713 + C15712) * C21025 +
            (C16592 * C118 + C16593 * C50838) * C21026) *
               C50754 * C51074 -
           ((C6287 * C50838 + C6286 * C118) * C21026 +
            (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
            (C179 + C178) * C21023) *
               C50754 * C51086 -
           (((C117 * C9446 + C50907 * C9448) * C50838 +
             (C117 * C9442 + C50907 * C9445) * C118) *
                C21026 +
            (C16023 + C16022) * C21025 + (C5859 + C5858) * C21024 +
            (C675 + C674) * C21023) *
               C50754 * C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C458 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C51042 -
             (C13117 + C13118 + C13119) * C459 -
             (C13120 + C13121 + C13122) * C50850) *
                C51055 +
            ((C13119 + C13118 + C13117) * C458 +
             (C13122 + C13121 + C13120) * C51042 -
             (C13709 + C13708 + C13707) * C459 -
             (C13712 + C13711 + C13710) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C13537 + C13538 + C13539) * C459 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C51042 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C458) +
             (C13540 + C13541 + C13542) * C50850) *
                C51055 +
            ((C13873 + C13872 + C13871) * C459 -
             ((C13542 + C13541 + C13540) * C51042 +
              (C13539 + C13538 + C13537) * C458) +
             (C13876 + C13875 + C13874) * C50850) *
                C50949) *
               C50754 * C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C459 -
             ((C8225 + C8224 + C8223) * C51042 +
              (C8222 + C8221 + C8220) * C458) +
             (C8595 + C8594 + C8593) * C50850) *
                C51055 +
            ((C9184 + C9185 + C9186) * C459 -
             ((C8593 + C8594 + C8595) * C51042 +
              (C8590 + C8591 + C8592) * C458) +
             (C9187 + C9188 + C9189) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C8413 + C8412 + C8411) * C458 + (C8410 + C8409 + C8408) * C51042 -
             (C9950 + C9949 + C9948) * C459 -
             (C9953 + C9952 + C9951) * C50850) *
                C51055 +
            ((C9948 + C9949 + C9950) * C458 + (C9951 + C9952 + C9953) * C51042 -
             (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
              C8180 * C1155 + C8175 * C1160) *
                 C459 -
             (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
              C8180 * C1161 + C8175 * C1167) *
                 C50850) *
                C50949) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C458 +
              (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
              C5694 * C50850) *
                 C51055 +
             (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                 C50949) *
                C2446 +
            ((C485 + C486 - C519 - C520) * C51055 +
             (C5680 + C5681 - C5682 - C5683) * C50949) *
                C2447 +
            C5699 * C2448) *
               C1358 +
           (((C6114 * C459 -
              ((C117 * C310 + C50907 * C319) * C51042 +
               (C117 * C301 + C50907 * C311) * C458) +
              C6115 * C50850) *
                 C51055 +
             (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                 C50949) *
                C2446 +
            ((C1625 - (C1603 + C1604) + C1626) * C51055 +
             (C7060 - (C7061 + C7062) + C7063) * C50949) *
                C2447 +
            ((C1627 - (C1609 + C1610) + C1628) * C51055 +
             (C7064 - (C7065 + C7066) + C7067) * C50949) *
                C2448) *
               C50824) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C51055 +
             (C5682 - (C5681 + C5680) + C5683) * C50949) *
                C2446 +
            ((C521 - (C492 + C491) + C522) * C51055 +
             (C5687 - (C5686 + C5685) + C5688) * C50949) *
                C2447 +
            ((C523 - (C498 + C497) + C524) * C51055 +
             (C5689 - (C5690 + C5691) + C5692) * C50949) *
                C2448) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C51055 +
             (C7062 + C7061 - C7060 - C7063) * C50949) *
                C2446 +
            ((C1610 + C1609 - C1627 - C1628) * C51055 +
             (C7066 + C7065 - C7064 - C7067) * C50949) *
                C2447 +
            ((C1616 + C1615 - C1629 - C1630) * C51055 +
             (C1623 * C458 + C1624 * C51042 -
              (C117 * C1157 + C50907 * C1164) * C459 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C21023 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C21024 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C21025 +
            (C6572 * C458 + C6573 * C51042 - C16704 * C459 - C16705 * C50850) *
                C21026) *
               C50754 * C1358 +
           ((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C21023 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C21024 +
            (C16590 * C459 - (C6453 * C51042 + C6452 * C458) +
             C16591 * C50850) *
                C21025 +
            (C21692 * C459 - (C16591 * C51042 + C16590 * C458) +
             C21693 * C50850) *
                C21026) *
               C50754 * C50824) *
              C1464 +
          (((C519 - (C486 + C485) + C520) * C21023 +
            (C5682 - (C5681 + C5680) + C5683) * C21024 +
            (C15864 - (C15863 + C15862) + C15865) * C21025 +
            (C16428 * C459 - (C6287 * C51042 + C6286 * C458) +
             C16429 * C50850) *
                C21026) *
               C50754 * C1358 +
           ((C1604 + C1603 - C1625 - C1626) * C21023 +
            (C7062 + C7061 - C7060 - C7063) * C21024 +
            (C17194 + C17193 - C17192 - C17195) * C21025 +
            (C16592 * C458 + C16593 * C51042 -
             (C117 * C16577 + C50907 * C16578) * C459 -
             (C117 * C16579 + C50907 * C16580) * C50850) *
                C21026) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C13117 + C13118 + C13119) * C1731 -
             (C13120 + C13121 + C13122) * C50850) *
                C51055 +
            ((C13119 + C13118 + C13117) * C1730 +
             (C13122 + C13121 + C13120) * C1728 -
             (C13709 + C13708 + C13707) * C1731 -
             (C13712 + C13711 + C13710) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C13537 + C13538 + C13539) * C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C13540 + C13541 + C13542) * C50850) *
                C51055 +
            ((C13873 + C13872 + C13871) * C1731 -
             ((C13542 + C13541 + C13540) * C1728 +
              (C13539 + C13538 + C13537) * C1730) +
             (C13876 + C13875 + C13874) * C50850) *
                C50949) *
               C50754 * C50824) *
              C51033 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C51055 +
            ((C9184 + C9185 + C9186) * C1731 -
             ((C8593 + C8594 + C8595) * C1728 +
              (C8590 + C8591 + C8592) * C1730) +
             (C9187 + C9188 + C9189) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C51055 +
            ((C9948 + C9949 + C9950) * C1730 + (C9951 + C9952 + C9953) * C1728 -
             (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
              C8180 * C1155 + C8175 * C1160) *
                 C1731 -
             (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
              C8180 * C1161 + C8175 * C1167) *
                 C50850) *
                C50949) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C51055 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C50949) *
                C2446 +
            ((C1733 + C1734 - C1735 - C1736) * C51055 +
             (C7214 + C7215 - C7216 - C7217) * C50949) *
                C2447 +
            C7231 * C2448) *
               C1358 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C51055 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C50949) *
                C2446 +
            ((C1887 - (C1888 + C1889) + C1890) * C51055 +
             (C7426 - (C7427 + C7428) + C7429) * C50949) *
                C2447 +
            ((C1891 - (C1892 + C1893) + C1894) * C51055 +
             (C7430 - (C7431 + C7432) + C7433) * C50949) *
                C2448) *
               C50824) *
              C51033 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51055 +
             (C7216 - (C7215 + C7214) + C7217) * C50949) *
                C2446 +
            ((C1739 - (C1738 + C1737) + C1740) * C51055 +
             (C7221 - (C7220 + C7219) + C7222) * C50949) *
                C2447 +
            ((C1743 - (C1742 + C1741) + C1744) * C51055 +
             (C7223 - (C7224 + C7225) + C7226) * C50949) *
                C2448) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C51055 +
             (C7428 + C7427 - C7426 - C7429) * C50949) *
                C2446 +
            ((C1893 + C1892 - C1891 - C1894) * C51055 +
             (C7432 + C7431 - C7430 - C7433) * C50949) *
                C2447 +
            ((C1897 + C1896 - C1895 - C1898) * C51055 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50907 * C1164) * C1731 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C21023 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C21024 +
            (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                C21025 +
            (C6572 * C1730 + C6573 * C1728 - C16704 * C1731 - C16705 * C50850) *
                C21026) *
               C50754 * C1358 +
           ((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C21023 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C21024 +
            (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
             C16591 * C50850) *
                C21025 +
            (C21692 * C1731 - (C16591 * C1728 + C16590 * C1730) +
             C21693 * C50850) *
                C21026) *
               C50754 * C50824) *
              C51033 +
          (((C1735 - (C1734 + C1733) + C1736) * C21023 +
            (C7216 - (C7215 + C7214) + C7217) * C21024 +
            (C17344 - (C17343 + C17342) + C17345) * C21025 +
            (C16428 * C1731 - (C6287 * C1728 + C6286 * C1730) +
             C16429 * C50850) *
                C21026) *
               C50754 * C1358 +
           ((C1889 + C1888 - C1887 - C1890) * C21023 +
            (C7428 + C7427 - C7426 - C7429) * C21024 +
            (C17546 + C17545 - C17544 - C17547) * C21025 +
            (C16592 * C1730 + C16593 * C1728 -
             (C117 * C16577 + C50907 * C16578) * C1731 -
             (C117 * C16579 + C50907 * C16580) * C50850) *
                C21026) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C13117 + C13118 + C13119) * C1731 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1730 +
            (C13122 + C13121 + C13120) * C1728 -
            (C13709 + C13708 + C13707) * C1731 -
            (C13712 + C13711 + C13710) * C50850) *
               C50949) *
              C50754 * C51086 +
          (((C13537 + C13538 + C13539) * C1731 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C1728 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1730) +
            (C13540 + C13541 + C13542) * C50850) *
               C51055 +
           ((C13873 + C13872 + C13871) * C1731 -
            ((C13542 + C13541 + C13540) * C1728 +
             (C13539 + C13538 + C13537) * C1730) +
            (C13876 + C13875 + C13874) * C50850) *
               C50949) *
              C50754 * C51074 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C1730 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C1728 -
            (C13543 + C13544 + C13545) * C1731 -
            (C13546 + C13547 + C13548) * C50850) *
               C51055 +
           ((C13545 + C13544 + C13543) * C1730 +
            (C13548 + C13547 + C13546) * C1728 -
            (C8182 * C11662 + C8177 * C11663 + C8181 * C9335 + C8176 * C9337 +
             C8180 * C3645 + C8175 * C3648) *
                C1731 -
            (C8182 * C11664 + C8177 * C11665 + C8181 * C9338 + C8176 * C9341 +
             C8180 * C3649 + C8175 * C3654) *
                C50850) *
               C50949) *
              C50754 * C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C50949) *
               C2446 +
           ((C1733 + C1734 - C1735 - C1736) * C51055 +
            (C7214 + C7215 - C7216 - C7217) * C50949) *
               C2447 +
           C7231 * C2448) *
              C51086 +
          (((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C51055 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C50949) *
               C2446 +
           ((C1887 - (C1888 + C1889) + C1890) * C51055 +
            (C7426 - (C7427 + C7428) + C7429) * C50949) *
               C2447 +
           ((C1891 - (C1892 + C1893) + C1894) * C51055 +
            (C7430 - (C7431 + C7432) + C7433) * C50949) *
               C2448) *
              C51074 +
          ((((C117 * C635 + C50907 * C640) * C1730 +
             (C117 * C641 + C50907 * C650) * C1728 - C6116 * C1731 -
             C6117 * C50850) *
                C51055 +
            (C6116 * C1730 + C6117 * C1728 -
             (C117 * C3645 + C50907 * C3648) * C1731 -
             (C117 * C3649 + C50907 * C3654) * C50850) *
                C50949) *
               C2446 +
           ((C668 * C1730 + C669 * C1728 - C5854 * C1731 - C5855 * C50850) *
                C51055 +
            (C5854 * C1730 + C5855 * C1728 -
             (C117 * C3646 + C50907 * C3650) * C1731 -
             (C117 * C3651 + C50907 * C3655) * C50850) *
                C50949) *
               C2447 +
           ((C670 * C1730 + C671 * C1728 - C5856 * C1731 - C5857 * C50850) *
                C51055 +
            (C5856 * C1730 + C5857 * C1728 -
             (C117 * C3647 + C50907 * C3652) * C1731 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C2448) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1730 +
            (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
            C5694 * C50850) *
               C21023 +
           (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
               C21024 +
           (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
               C21025 +
           (C6572 * C1730 + C6573 * C1728 - C16704 * C1731 - C16705 * C50850) *
               C21026) *
              C50754 * C51086 +
          ((C6114 * C1731 -
            ((C117 * C310 + C50907 * C319) * C1728 +
             (C117 * C301 + C50907 * C311) * C1730) +
            C6115 * C50850) *
               C21023 +
           (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
               C21024 +
           (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
            C16591 * C50850) *
               C21025 +
           (C21692 * C1731 - (C16591 * C1728 + C16590 * C1730) +
            C21693 * C50850) *
               C21026) *
              C50754 * C51074 +
          (((C117 * C635 + C50907 * C640) * C1730 +
            (C117 * C641 + C50907 * C650) * C1728 - C6116 * C1731 -
            C6117 * C50850) *
               C21023 +
           (C6116 * C1730 + C6117 * C1728 - C16272 * C1731 - C16273 * C50850) *
               C21024 +
           (C16272 * C1730 + C16273 * C1728 - C21490 * C1731 -
            C21491 * C50850) *
               C21025 +
           (C21490 * C1730 + C21491 * C1728 -
            (C117 * C13974 + C50907 * C13976) * C1731 -
            (C117 * C13978 + C50907 * C13980) * C50850) *
               C21026) *
              C50754 * C1463) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C13117 + C13118 + C13119) * C2000 -
            (C13120 + C13121 + C13122) * C51077 +
            (C13707 + C13708 + C13709) * C2001 +
            (C13710 + C13711 + C13712) * C1998) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1999 +
            (C13122 + C13121 + C13120) * C51087 -
            (C13709 + C13708 + C13707) * C2000 -
            (C13712 + C13711 + C13710) * C51077 +
            (C13997 + C13996 + C13995) * C2001 +
            (C14000 + C13999 + C13998) * C1998) *
               C50949) *
              C50754 * C1358 +
          (((C13537 + C13538 + C13539) * C2000 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51087 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1999) +
            (C13540 + C13541 + C13542) * C51077 -
            (C13871 + C13872 + C13873) * C2001 -
            (C13874 + C13875 + C13876) * C1998) *
               C51055 +
           ((C13873 + C13872 + C13871) * C2000 -
            ((C13542 + C13541 + C13540) * C51087 +
             (C13539 + C13538 + C13537) * C1999) +
            (C13876 + C13875 + C13874) * C51077 -
            (C8182 * C11732 + C8177 * C11733 + C8181 * C9441 + C8176 * C9443 +
             C8180 * C3755 + C8175 * C3758) *
                C2001 -
            (C8182 * C11734 + C8177 * C11735 + C8181 * C9444 + C8176 * C9447 +
             C8180 * C3759 + C8175 * C3764) *
                C1998) *
               C50949) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C51055 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C50949) *
               C2446 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51055 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C50949) *
               C2447 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C51055 +
            (C7586 + C7587 - C7588 - C7589 + C7590 + C7591) * C50949) *
               C2448) *
              C1358 +
          (((C6114 * C2000 -
             ((C117 * C310 + C50907 * C319) * C51087 +
              (C117 * C301 + C50907 * C311) * C1999) +
             C6115 * C51077 - C6452 * C2001 - C6453 * C1998) *
                C51055 +
            (C6452 * C2000 - (C6115 * C51087 + C6114 * C1999) + C6453 * C51077 -
             (C117 * C3755 + C50907 * C3758) * C2001 -
             (C117 * C3759 + C50907 * C3764) * C1998) *
                C50949) *
               C2446 +
           ((C1619 * C2000 - (C343 * C51087 + C344 * C1999) + C1620 * C51077 -
             C6454 * C2001 - C6455 * C1998) *
                C51055 +
            (C6454 * C2000 - (C1620 * C51087 + C1619 * C1999) + C6455 * C51077 -
             (C117 * C3756 + C50907 * C3760) * C2001 -
             (C117 * C3761 + C50907 * C3765) * C1998) *
                C50949) *
               C2447 +
           ((C1621 * C2000 - (C341 * C51087 + C342 * C1999) + C1622 * C51077 -
             C6456 * C2001 - C6457 * C1998) *
                C51055 +
            (C6456 * C2000 - (C1622 * C51087 + C1621 * C1999) + C6457 * C51077 -
             (C117 * C3757 + C50907 * C3762) * C2001 -
             (C117 * C3763 + C50907 * C3766) * C1998) *
                C50949) *
               C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1999 +
            (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
            C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
               C21023 +
           (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
            C6572 * C2001 + C6573 * C1998) *
               C21024 +
           (C6284 * C1999 + C6285 * C51087 - C6572 * C2000 - C6573 * C51077 +
            C16704 * C2001 + C16705 * C1998) *
               C21025 +
           (C6572 * C1999 + C6573 * C51087 - C16704 * C2000 - C16705 * C51077 +
            C21768 * C2001 + C21769 * C1998) *
               C21026) *
              C50754 * C1358 +
          ((C6114 * C2000 -
            ((C117 * C310 + C50907 * C319) * C51087 +
             (C117 * C301 + C50907 * C311) * C1999) +
            C6115 * C51077 - C6452 * C2001 - C6453 * C1998) *
               C21023 +
           (C6452 * C2000 - (C6115 * C51087 + C6114 * C1999) + C6453 * C51077 -
            C16590 * C2001 - C16591 * C1998) *
               C21024 +
           (C16590 * C2000 - (C6453 * C51087 + C6452 * C1999) +
            C16591 * C51077 - C21692 * C2001 - C21693 * C1998) *
               C21025 +
           (C21692 * C2000 - (C16591 * C51087 + C16590 * C1999) +
            C21693 * C51077 - (C117 * C19469 + C50907 * C19470) * C2001 -
            (C117 * C19471 + C50907 * C19472) * C1998) *
               C21026) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50907 * C126) * C118 +
                 (C117 * C127 + C50907 * C140) * C50838) *
                    C51055 +
                ((C117 * C460 + C50907 * C466) * C118 +
                 (C117 * C467 + C50907 * C478) * C50838) *
                    C50949) *
                   C2446 +
               ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
               C5372 * C2448) *
                  C50808 * C113 -
              (C5373 * C2448 +
               ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
               ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
                  C50808 * C114 +
              (C5372 * C2446 +
               (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
               ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
                  C50808 * C115 -
              ((((C117 * C477 + C50907 * C483) * C50838 +
                 (C117 * C465 + C50907 * C476) * C118) *
                    C50949 +
                (C187 + C186) * C51055) *
                   C2448 +
               ((C5367 + C5366) * C50949 + C190 * C51055) * C2447 +
               C5373 * C2446) *
                  C50808 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50907 * C126) * C118 +
                  (C117 * C127 + C50907 * C140) * C50838) *
                     C51055 +
                 (C5693 * C118 + C5694 * C50838) * C50949) *
                    C2446 +
                ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
                C5372 * C2448) *
                   C630 -
               (C5529 * C2448 +
                ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
                (((C117 * C873 + C50907 * C888) * C50838 +
                  (C117 * C864 + C50907 * C872) * C118) *
                     C50949 +
                 ((C117 * C310 + C50907 * C319) * C50838 +
                  (C117 * C301 + C50907 * C311) * C118) *
                     C51055) *
                    C2446) *
                   C631 +
               ((((C117 * C635 + C50907 * C640) * C118 +
                  (C117 * C641 + C50907 * C650) * C50838) *
                     C51055 +
                 ((C117 * C868 + C50907 * C880) * C118 +
                  (C117 * C881 + C50907 * C892) * C50838) *
                     C50949) *
                    C2446 +
                ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
                ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
                   C632) *
                  C51033 +
              ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
                ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
                ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
                   C631 -
               (C5373 * C2448 +
                ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
                ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
                   C630 -
               ((((C117 * C887 + C50907 * C895) * C50838 +
                  (C117 * C871 + C50907 * C886) * C118) *
                     C50949 +
                 (C679 + C678) * C51055) *
                    C2448 +
                ((C5861 + C5860) * C50949 + (C677 + C676) * C51055) * C2447 +
                ((C5859 + C5858) * C50949 + (C675 + C674) * C51055) * C2446) *
                   C632) *
                  C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C51055 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             (C117 * C1244 + C50907 * C1248) * C999 +
             (C117 * C1249 + C50907 * C1256) * C996) *
                C50949) *
               C2446 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51055 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C50949) *
               C2447 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C51055 +
            (C6276 + C6277 - C6278 - C6279 + C6292 + C6293) * C50949) *
               C2448) *
              C50808 * C51033 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C51055 +
            (C6270 - (C6269 + C6268) + C6271 - C6290 - C6291) * C50949) *
               C2446 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C51055 +
            (C6278 - (C6277 + C6276) + C6279 - C6292 - C6293) * C50949) *
               C2447 +
           ((C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C51055 +
            (C1049 * C998 - (C516 * C994 + C515 * C997) + C1050 * C995 -
             (C117 * C1247 + C50907 * C1254) * C999 -
             (C117 * C1255 + C50907 * C1259) * C996) *
                C50949) *
               C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
             C8182 * C868 + C8177 * C880) *
                C118 +
            (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
             C8182 * C881 + C8177 * C892) *
                C50838) *
               C50949) *
              C50754 * C50808 * C113 -
          (((C8593 + C8594 + C8595) * C50838 + (C8590 + C8591 + C8592) * C118) *
               C50949 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C51055) *
              C50754 * C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C51055 +
           ((C8596 + C8597 + C8598) * C118 + (C8599 + C8600 + C8601) * C50838) *
               C50949) *
              C50754 * C50808 * C115 -
          (((C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50838 +
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C118) *
               C50949 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C51055) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C630 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C51055 +
            ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
              C8182 * C9017 + C8177 * C9019) *
                 C118 +
             (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
              C8182 * C9020 + C8177 * C9023) *
                 C50838) *
                C50949) *
               C50754 * C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C631 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C630 -
           (((C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
              C8180 * C883 + C8175 * C893) *
                 C50838 +
             (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
              C8180 * C869 + C8175 * C882) *
                 C118) *
                C50949 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C51055) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C13117 + C13118 + C13119) * C998 -
            (C13120 + C13121 + C13122) * C995 +
            (C13707 + C13708 + C13709) * C999 +
            (C13710 + C13711 + C13712) * C996) *
               C51055 +
           ((C13119 + C13118 + C13117) * C997 +
            (C13122 + C13121 + C13120) * C994 -
            (C13709 + C13708 + C13707) * C998 -
            (C13712 + C13711 + C13710) * C995 +
            (C8180 * C1244 + C8175 * C1248 + C8181 * C3755 + C8176 * C3758 +
             C8182 * C9441 + C8177 * C9443) *
                C999 +
            (C8180 * C1249 + C8175 * C1256 + C8181 * C3759 + C8176 * C3764 +
             C8182 * C9444 + C8177 * C9447) *
                C996) *
               C50949) *
              C50754 * C50808 * C51033 +
          (((C8592 + C8591 + C8590) * C998 -
            ((C8225 + C8224 + C8223) * C994 + (C8222 + C8221 + C8220) * C997) +
            (C8595 + C8594 + C8593) * C995 - (C9186 + C9185 + C9184) * C999 -
            (C9189 + C9188 + C9187) * C996) *
               C51055 +
           ((C9184 + C9185 + C9186) * C998 -
            ((C8593 + C8594 + C8595) * C994 + (C8590 + C8591 + C8592) * C997) +
            (C9187 + C9188 + C9189) * C995 -
            (C8182 * C9442 + C8177 * C9445 + C8181 * C3756 + C8176 * C3760 +
             C8180 * C1245 + C8175 * C1250) *
                C999 -
            (C8182 * C9446 + C8177 * C9448 + C8181 * C3761 + C8176 * C3765 +
             C8180 * C1251 + C8175 * C1257) *
                C996) *
               C50949) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C21023 +
           (C5693 * C118 + C5694 * C50838) * C21024 +
           (C6284 * C118 + C6285 * C50838) * C21025 +
           (C6572 * C118 + C6573 * C50838) * C21026) *
              C50754 * C50808 * C113 -
          ((C6287 * C50838 + C6286 * C118) * C21026 +
           (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
           (C179 + C178) * C21023) *
              C50754 * C50808 * C114 +
          (C188 * C21023 + C5368 * C21024 + (C15563 + C15562) * C21025 +
           (C6288 * C118 + C6289 * C50838) * C21026) *
              C50754 * C50808 * C115 -
          (((C117 * C1255 + C50907 * C1259) * C50838 +
            (C117 * C1247 + C50907 * C1254) * C118) *
               C21026 +
           (C15565 + C15564) * C21025 + C5369 * C21024 + C191 * C21023) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C21023 +
            (C5693 * C118 + C5694 * C50838) * C21024 +
            (C6284 * C118 + C6285 * C50838) * C21025 +
            (C6572 * C118 + C6573 * C50838) * C21026) *
               C50754 * C630 -
           ((C16591 * C50838 + C16590 * C118) * C21026 +
            (C6453 * C50838 + C6452 * C118) * C21025 +
            (C6115 * C50838 + C6114 * C118) * C21024 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C21023) *
               C50754 * C631 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C21023 +
            (C6116 * C118 + C6117 * C50838) * C21024 +
            (C16272 * C118 + C16273 * C50838) * C21025 +
            ((C117 * C9441 + C50907 * C9443) * C118 +
             (C117 * C9444 + C50907 * C9447) * C50838) *
                C21026) *
               C50754 * C632) *
              C51033 +
          (((C352 + C351) * C21023 + (C5524 + C5523) * C21024 +
            (C15713 + C15712) * C21025 +
            (C16592 * C118 + C16593 * C50838) * C21026) *
               C50754 * C631 -
           ((C6287 * C50838 + C6286 * C118) * C21026 +
            (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
            (C179 + C178) * C21023) *
               C50754 * C630 -
           (((C117 * C9446 + C50907 * C9448) * C50838 +
             (C117 * C9442 + C50907 * C9445) * C118) *
                C21026 +
            (C16023 + C16022) * C21025 + (C5859 + C5858) * C21024 +
            (C675 + C674) * C21023) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C997 +
            (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 - C5694 * C995 +
            C6284 * C999 + C6285 * C996) *
               C21023 +
           (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
            C6572 * C999 + C6573 * C996) *
               C21024 +
           (C6284 * C997 + C6285 * C994 - C6572 * C998 - C6573 * C995 +
            C16704 * C999 + C16705 * C996) *
               C21025 +
           (C6572 * C997 + C6573 * C994 - C16704 * C998 - C16705 * C995 +
            (C117 * C16691 + C50907 * C16693) * C999 +
            (C117 * C16694 + C50907 * C16697) * C996) *
               C21026) *
              C50754 * C50808 * C51033 +
          ((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C21023 +
           (C6270 - (C6269 + C6268) + C6271 - C6290 - C6291) * C21024 +
           (C16422 - (C16421 + C16420) + C16423 - C16430 - C16431) * C21025 +
           (C16428 * C998 - (C6287 * C994 + C6286 * C997) + C16429 * C995 -
            (C117 * C16692 + C50907 * C16695) * C999 -
            (C117 * C16696 + C50907 * C16698) * C996) *
               C21026) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50907 * C126) * C118 +
                  (C117 * C127 + C50907 * C140) * C50838) *
                     C51055 +
                 ((C117 * C460 + C50907 * C466) * C118 +
                  (C117 * C467 + C50907 * C478) * C50838) *
                     C50949) *
                    C2446 +
                ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
                C5372 * C2448) *
                   C51040 -
               (C5529 * C2448 +
                ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
                (((C117 * C873 + C50907 * C888) * C50838 +
                  (C117 * C864 + C50907 * C872) * C118) *
                     C50949 +
                 ((C117 * C310 + C50907 * C319) * C50838 +
                  (C117 * C301 + C50907 * C311) * C118) *
                     C51055) *
                    C2446) *
                   C50824) *
                  C295 +
              ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
                ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
                ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
                   C50824 -
               (C5373 * C2448 +
                ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
                ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
                   C51040) *
                  C296 +
              ((C5372 * C2446 +
                (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
                ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
                   C51040 -
               ((((C117 * C1598 + C50907 * C1599) * C50838 +
                  (C117 * C1596 + C50907 * C1597) * C118) *
                     C50949 +
                 (C354 + C353) * C51055) *
                    C2448 +
                ((C5526 + C5525) * C50949 + C355 * C51055) * C2447 +
                C5529 * C2446) *
                   C50824) *
                  C297) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50907 * C126) * C118 +
                 (C117 * C127 + C50907 * C140) * C50838) *
                    C51055 +
                (C5693 * C118 + C5694 * C50838) * C50949) *
                   C2446 +
               ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
               C5372 * C2448) *
                  C745 -
              (C5529 * C2448 +
               ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
               (((C117 * C873 + C50907 * C888) * C50838 +
                 (C117 * C864 + C50907 * C872) * C118) *
                    C50949 +
                ((C117 * C310 + C50907 * C319) * C50838 +
                 (C117 * C301 + C50907 * C311) * C118) *
                    C51055) *
                   C2446) *
                  C746 +
              ((((C117 * C635 + C50907 * C640) * C118 +
                 (C117 * C641 + C50907 * C650) * C50838) *
                    C51055 +
                ((C117 * C868 + C50907 * C880) * C118 +
                 (C117 * C881 + C50907 * C892) * C50838) *
                    C50949) *
                   C2446 +
               ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
               ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
                  C747 -
              ((((C117 * C3325 + C50907 * C3328) * C50838 +
                 (C117 * C3319 + C50907 * C3324) * C118) *
                    C50949 +
                ((C117 * C756 + C50907 * C763) * C50838 +
                 (C117 * C751 + C50907 * C757) * C118) *
                    C51055) *
                   C2448 +
               (((C117 * C3323 + C50907 * C3327) * C50838 +
                 (C117 * C3318 + C50907 * C3322) * C118) *
                    C50949 +
                ((C117 * C758 + C50907 * C764) * C50838 +
                 (C117 * C752 + C50907 * C759) * C118) *
                    C51055) *
                   C2447 +
               (((C117 * C3321 + C50907 * C3326) * C50838 +
                 (C117 * C3317 + C50907 * C3320) * C118) *
                    C50949 +
                ((C117 * C760 + C50907 * C765) * C50838 +
                 (C117 * C753 + C50907 * C761) * C118) *
                    C51055) *
                   C2446) *
                  C748) *
             C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C51055 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             (C117 * C1244 + C50907 * C1248) * C999 +
             (C117 * C1249 + C50907 * C1256) * C996) *
                C50949) *
               C2446 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51055 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C50949) *
               C2447 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C51055 +
            (C6276 + C6277 - C6278 - C6279 + C6292 + C6293) * C50949) *
               C2448) *
              C51040 +
          (((C6114 * C998 -
             ((C117 * C310 + C50907 * C319) * C994 +
              (C117 * C301 + C50907 * C311) * C997) +
             C6115 * C995 - C6452 * C999 - C6453 * C996) *
                C51055 +
            (C6452 * C998 - (C6115 * C994 + C6114 * C997) + C6453 * C995 -
             (C117 * C3755 + C50907 * C3758) * C999 -
             (C117 * C3759 + C50907 * C3764) * C996) *
                C50949) *
               C2446 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C6454 * C999 - C6455 * C996) *
                C51055 +
            (C6454 * C998 - (C1620 * C994 + C1619 * C997) + C6455 * C995 -
             (C117 * C3756 + C50907 * C3760) * C999 -
             (C117 * C3761 + C50907 * C3765) * C996) *
                C50949) *
               C2447 +
           ((C1621 * C998 - (C341 * C994 + C342 * C997) + C1622 * C995 -
             C6456 * C999 - C6457 * C996) *
                C51055 +
            (C6456 * C998 - (C1622 * C994 + C1621 * C997) + C6457 * C995 -
             (C117 * C3757 + C50907 * C3762) * C999 -
             (C117 * C3763 + C50907 * C3766) * C996) *
                C50949) *
               C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
              C8182 * C868 + C8177 * C880) *
                 C118 +
             (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
              C8182 * C881 + C8177 * C892) *
                 C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C50824 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C51055 +
            ((C8596 + C8597 + C8598) * C118 +
             (C8599 + C8600 + C8601) * C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50838 +
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C118) *
                C50949 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C51055) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C13119 + C13118 + C13117) * C118 +
            (C13122 + C13121 + C13120) * C50838) *
               C50949) *
              C50754 * C745 -
          (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
             C8180 * C873 + C8175 * C888) *
                C50838 +
            (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
             C8180 * C864 + C8175 * C872) *
                C118) *
               C50949 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C51055) *
              C50754 * C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C51055 +
           ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
             C8182 * C9017 + C8177 * C9019) *
                C118 +
            (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
             C8182 * C9020 + C8177 * C9023) *
                C50838) *
               C50949) *
              C50754 * C747 -
          (((C8182 * C11464 + C8177 * C11465 + C8181 * C9020 + C8176 * C9023 +
             C8180 * C3321 + C8175 * C3326) *
                C50838 +
            (C8182 * C11462 + C8177 * C11463 + C8181 * C9017 + C8176 * C9019 +
             C8180 * C3317 + C8175 * C3320) *
                C118) *
               C50949 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C51055) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C13117 + C13118 + C13119) * C998 -
            (C13120 + C13121 + C13122) * C995 +
            (C13707 + C13708 + C13709) * C999 +
            (C13710 + C13711 + C13712) * C996) *
               C51055 +
           ((C13119 + C13118 + C13117) * C997 +
            (C13122 + C13121 + C13120) * C994 -
            (C13709 + C13708 + C13707) * C998 -
            (C13712 + C13711 + C13710) * C995 +
            (C8180 * C1244 + C8175 * C1248 + C8181 * C3755 + C8176 * C3758 +
             C8182 * C9441 + C8177 * C9443) *
                C999 +
            (C8180 * C1249 + C8175 * C1256 + C8181 * C3759 + C8176 * C3764 +
             C8182 * C9444 + C8177 * C9447) *
                C996) *
               C50949) *
              C50754 * C51040 +
          (((C13537 + C13538 + C13539) * C998 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C994 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C997) +
            (C13540 + C13541 + C13542) * C995 -
            (C13871 + C13872 + C13873) * C999 -
            (C13874 + C13875 + C13876) * C996) *
               C51055 +
           ((C13873 + C13872 + C13871) * C998 -
            ((C13542 + C13541 + C13540) * C994 +
             (C13539 + C13538 + C13537) * C997) +
            (C13876 + C13875 + C13874) * C995 -
            (C8182 * C11732 + C8177 * C11733 + C8181 * C9441 + C8176 * C9443 +
             C8180 * C3755 + C8175 * C3758) *
                C999 -
            (C8182 * C11734 + C8177 * C11735 + C8181 * C9444 + C8176 * C9447 +
             C8180 * C3759 + C8175 * C3764) *
                C996) *
               C50949) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C21023 +
            (C5693 * C118 + C5694 * C50838) * C21024 +
            (C6284 * C118 + C6285 * C50838) * C21025 +
            (C6572 * C118 + C6573 * C50838) * C21026) *
               C50754 * C51040 -
           ((C16591 * C50838 + C16590 * C118) * C21026 +
            (C6453 * C50838 + C6452 * C118) * C21025 +
            (C6115 * C50838 + C6114 * C118) * C21024 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C21023) *
               C50754 * C50824) *
              C295 +
          (((C352 + C351) * C21023 + (C5524 + C5523) * C21024 +
            (C15713 + C15712) * C21025 +
            (C16592 * C118 + C16593 * C50838) * C21026) *
               C50754 * C50824 -
           ((C6287 * C50838 + C6286 * C118) * C21026 +
            (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
            (C179 + C178) * C21023) *
               C50754 * C51040) *
              C296 +
          ((C188 * C21023 + C5368 * C21024 + (C15563 + C15562) * C21025 +
            (C6288 * C118 + C6289 * C50838) * C21026) *
               C50754 * C51040 -
           (((C117 * C3763 + C50907 * C3766) * C50838 +
             (C117 * C3757 + C50907 * C3762) * C118) *
                C21026 +
            (C15715 + C15714) * C21025 + C5527 * C21024 + C356 * C21023) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C21023 +
           (C5693 * C118 + C5694 * C50838) * C21024 +
           (C6284 * C118 + C6285 * C50838) * C21025 +
           (C6572 * C118 + C6573 * C50838) * C21026) *
              C50754 * C745 -
          ((C16591 * C50838 + C16590 * C118) * C21026 +
           (C6453 * C50838 + C6452 * C118) * C21025 +
           (C6115 * C50838 + C6114 * C118) * C21024 +
           ((C117 * C310 + C50907 * C319) * C50838 +
            (C117 * C301 + C50907 * C311) * C118) *
               C21023) *
              C50754 * C746 +
          (((C117 * C635 + C50907 * C640) * C118 +
            (C117 * C641 + C50907 * C650) * C50838) *
               C21023 +
           (C6116 * C118 + C6117 * C50838) * C21024 +
           (C16272 * C118 + C16273 * C50838) * C21025 +
           ((C117 * C9441 + C50907 * C9443) * C118 +
            (C117 * C9444 + C50907 * C9447) * C50838) *
               C21026) *
              C50754 * C747 -
          (((C117 * C11734 + C50907 * C11735) * C50838 +
            (C117 * C11732 + C50907 * C11733) * C118) *
               C21026 +
           ((C117 * C9338 + C50907 * C9341) * C50838 +
            (C117 * C9335 + C50907 * C9337) * C118) *
               C21025 +
           ((C117 * C3321 + C50907 * C3326) * C50838 +
            (C117 * C3317 + C50907 * C3320) * C118) *
               C21024 +
           ((C117 * C760 + C50907 * C765) * C50838 +
            (C117 * C753 + C50907 * C761) * C118) *
               C21023) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C997 +
            (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 - C5694 * C995 +
            C6284 * C999 + C6285 * C996) *
               C21023 +
           (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
            C6572 * C999 + C6573 * C996) *
               C21024 +
           (C6284 * C997 + C6285 * C994 - C6572 * C998 - C6573 * C995 +
            C16704 * C999 + C16705 * C996) *
               C21025 +
           (C6572 * C997 + C6573 * C994 - C16704 * C998 - C16705 * C995 +
            (C117 * C16691 + C50907 * C16693) * C999 +
            (C117 * C16694 + C50907 * C16697) * C996) *
               C21026) *
              C50754 * C51040 +
          ((C6114 * C998 -
            ((C117 * C310 + C50907 * C319) * C994 +
             (C117 * C301 + C50907 * C311) * C997) +
            C6115 * C995 - C6452 * C999 - C6453 * C996) *
               C21023 +
           (C6452 * C998 - (C6115 * C994 + C6114 * C997) + C6453 * C995 -
            C16590 * C999 - C16591 * C996) *
               C21024 +
           (C16590 * C998 - (C6453 * C994 + C6452 * C997) + C16591 * C995 -
            C21692 * C999 - C21693 * C996) *
               C21025 +
           (C21692 * C998 - (C16591 * C994 + C16590 * C997) + C21693 * C995 -
            (C117 * C19469 + C50907 * C19470) * C999 -
            (C117 * C19471 + C50907 * C19472) * C996) *
               C21026) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50907 * C126) * C458 +
                 (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
                 C5694 * C50850) *
                    C51055 +
                (C5693 * C458 + C5694 * C51042 -
                 (C117 * C1000 + C50907 * C1005) * C459 -
                 (C117 * C1006 + C50907 * C1015) * C50850) *
                    C50949) *
                   C2446 +
               ((C485 + C486 - C519 - C520) * C51055 +
                (C5680 + C5681 - C5682 - C5683) * C50949) *
                   C2447 +
               C5699 * C2448) *
                  C50808 * C295 +
              (((C519 - (C486 + C485) + C520) * C51055 +
                (C5682 - (C5681 + C5680) + C5683) * C50949) *
                   C2446 +
               ((C521 - (C492 + C491) + C522) * C51055 +
                (C5687 - (C5686 + C5685) + C5688) * C50949) *
                   C2447 +
               ((C523 - (C498 + C497) + C524) * C51055 +
                (C5689 - (C5690 + C5691) + C5692) * C50949) *
                   C2448) *
                  C50808 * C296 +
              (C5699 * C2446 +
               (C530 * C51055 + (C5691 + C5690 - C5689 - C5692) * C50949) *
                   C2447 +
               ((C506 + C505 - C525 - C526) * C51055 +
                (C517 * C458 + C518 * C51042 -
                 (C117 * C1004 + C50907 * C1013) * C459 -
                 (C117 * C1014 + C50907 * C1019) * C50850) *
                    C50949) *
                   C2448) *
                  C50808 * C297) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50907 * C126) * C458 +
                 (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
                 C5694 * C50850) *
                    C51055 +
                (C5693 * C458 + C5694 * C51042 -
                 (C117 * C1000 + C50907 * C1005) * C459 -
                 (C117 * C1006 + C50907 * C1015) * C50850) *
                    C50949) *
                   C2446 +
               ((C485 + C486 - C519 - C520) * C51055 +
                (C5680 + C5681 - C5682 - C5683) * C50949) *
                   C2447 +
               C5699 * C2448) *
                  C630 +
              (((C6114 * C459 -
                 ((C117 * C310 + C50907 * C319) * C51042 +
                  (C117 * C301 + C50907 * C311) * C458) +
                 C6115 * C50850) *
                    C51055 +
                ((C117 * C1154 + C50907 * C1158) * C459 -
                 (C6115 * C51042 + C6114 * C458) +
                 (C117 * C1159 + C50907 * C1166) * C50850) *
                    C50949) *
                   C2446 +
               ((C1625 - (C1603 + C1604) + C1626) * C51055 +
                ((C117 * C1155 + C50907 * C1160) * C459 -
                 (C1620 * C51042 + C1619 * C458) +
                 (C117 * C1161 + C50907 * C1167) * C50850) *
                    C50949) *
                   C2447 +
               ((C1627 - (C1609 + C1610) + C1628) * C51055 +
                ((C117 * C1156 + C50907 * C1162) * C459 -
                 (C1622 * C51042 + C1621 * C458) +
                 (C117 * C1163 + C50907 * C1168) * C50850) *
                    C50949) *
                   C2448) *
                  C631 +
              ((((C117 * C635 + C50907 * C640) * C458 +
                 (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
                 C6117 * C50850) *
                    C51055 +
                (C6116 * C458 + C6117 * C51042 -
                 (C117 * C3645 + C50907 * C3648) * C459 -
                 (C117 * C3649 + C50907 * C3654) * C50850) *
                    C50949) *
                   C2446 +
               ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                    C51055 +
                (C5854 * C458 + C5855 * C51042 -
                 (C117 * C3646 + C50907 * C3650) * C459 -
                 (C117 * C3651 + C50907 * C3655) * C50850) *
                    C50949) *
                   C2447 +
               ((C670 * C458 + C671 * C51042 - C5856 * C459 - C5857 * C50850) *
                    C51055 +
                (C5856 * C458 + C5857 * C51042 -
                 (C117 * C3647 + C50907 * C3652) * C459 -
                 (C117 * C3653 + C50907 * C3656) * C50850) *
                    C50949) *
                   C2448) *
                  C632) *
             C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1240 +
            (C117 * C127 + C50907 * C140) * C1236 - C5693 * C1241 -
            C5694 * C1237 + C6284 * C1242 + C6285 * C1238 - C6572 * C1243 -
            C6573 * C1239) *
               C51055 +
           (C5693 * C1240 + C5694 * C1236 - C6284 * C1241 - C6285 * C1237 +
            C6572 * C1242 + C6573 * C1238 -
            (C117 * C6555 + C50907 * C6558) * C1243 -
            (C117 * C6559 + C50907 * C6564) * C1239) *
               C50949) *
              C2446 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C6286 * C1243 - C6287 * C1239) *
               C51055 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C6286 * C1242 + C6287 * C1238 -
            (C117 * C6556 + C50907 * C6560) * C1243 -
            (C117 * C6561 + C50907 * C6565) * C1239) *
               C50949) *
              C2447 +
          ((C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
            C1047 * C1242 + C1048 * C1238 - C6288 * C1243 - C6289 * C1239) *
               C51055 +
           (C512 * C1240 + C513 * C1236 - C1047 * C1241 - C1048 * C1237 +
            C6288 * C1242 + C6289 * C1238 -
            (C117 * C6557 + C50907 * C6562) * C1243 -
            (C117 * C6563 + C50907 * C6566) * C1239) *
               C50949) *
              C2448) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C51055 +
           ((C9184 + C9185 + C9186) * C459 -
            ((C8593 + C8594 + C8595) * C51042 +
             (C8590 + C8591 + C8592) * C458) +
            (C9187 + C9188 + C9189) * C50850) *
               C50949) *
              C50754 * C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C51055 +
           ((C8596 + C8597 + C8598) * C458 + (C8599 + C8600 + C8601) * C51042 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C459 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C50850) *
               C50949) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C630 +
          (((C13537 + C13538 + C13539) * C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C13540 + C13541 + C13542) * C50850) *
               C51055 +
           ((C8180 * C1154 + C8175 * C1158 + C8181 * C3645 + C8176 * C3648 +
             C8182 * C9335 + C8177 * C9337) *
                C459 -
            ((C13542 + C13541 + C13540) * C51042 +
             (C13539 + C13538 + C13537) * C458) +
            (C8180 * C1159 + C8175 * C1166 + C8181 * C3649 + C8176 * C3654 +
             C8182 * C9338 + C8177 * C9341) *
                C50850) *
               C50949) *
              C50754 * C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C13543 + C13544 + C13545) * C459 -
            (C13546 + C13547 + C13548) * C50850) *
               C51055 +
           ((C13545 + C13544 + C13543) * C458 +
            (C13548 + C13547 + C13546) * C51042 -
            (C8182 * C11662 + C8177 * C11663 + C8181 * C9335 + C8176 * C9337 +
             C8180 * C3645 + C8175 * C3648) *
                C459 -
            (C8182 * C11664 + C8177 * C11665 + C8181 * C9338 + C8176 * C9341 +
             C8180 * C3649 + C8175 * C3654) *
                C50850) *
               C50949) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
            C8182 * C635 + C8177 * C640) *
               C1240 +
           (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
            C8182 * C641 + C8177 * C650) *
               C1236 -
           (C13117 + C13118 + C13119) * C1241 -
           (C13120 + C13121 + C13122) * C1237 +
           (C13707 + C13708 + C13709) * C1242 +
           (C13710 + C13711 + C13712) * C1238 -
           (C13995 + C13996 + C13997) * C1243 -
           (C13998 + C13999 + C14000) * C1239) *
              C51055 +
          ((C13119 + C13118 + C13117) * C1240 +
           (C13122 + C13121 + C13120) * C1236 -
           (C13709 + C13708 + C13707) * C1241 -
           (C13712 + C13711 + C13710) * C1237 +
           (C13997 + C13996 + C13995) * C1242 +
           (C14000 + C13999 + C13998) * C1238 -
           (C8182 * C13974 + C8177 * C13976 + C8181 * C13975 + C8176 * C13977 +
            C8180 * C6555 + C8175 * C6558) *
               C1243 -
           (C8182 * C13978 + C8177 * C13980 + C8181 * C13979 + C8176 * C13981 +
            C8180 * C6559 + C8175 * C6564) *
               C1239) *
              C50949) *
         C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
            C5694 * C50850) *
               C21023 +
           (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
               C21024 +
           (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
               C21025 +
           (C6572 * C458 + C6573 * C51042 - C16704 * C459 - C16705 * C50850) *
               C21026) *
              C50754 * C50808 * C295 +
          ((C519 - (C486 + C485) + C520) * C21023 +
           (C5682 - (C5681 + C5680) + C5683) * C21024 +
           (C15864 - (C15863 + C15862) + C15865) * C21025 +
           (C16428 * C459 - (C6287 * C51042 + C6286 * C458) + C16429 * C50850) *
               C21026) *
              C50754 * C50808 * C296 +
          (C529 * C21023 + C5697 * C21024 +
           (C15868 + C15867 - C15866 - C15869) * C21025 +
           (C6288 * C458 + C6289 * C51042 -
            (C117 * C6557 + C50907 * C6562) * C459 -
            (C117 * C6563 + C50907 * C6566) * C50850) *
               C21026) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
            C5694 * C50850) *
               C21023 +
           (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
               C21024 +
           (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
               C21025 +
           (C6572 * C458 + C6573 * C51042 - C16704 * C459 - C16705 * C50850) *
               C21026) *
              C50754 * C630 +
          ((C6114 * C459 -
            ((C117 * C310 + C50907 * C319) * C51042 +
             (C117 * C301 + C50907 * C311) * C458) +
            C6115 * C50850) *
               C21023 +
           (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
               C21024 +
           (C16590 * C459 - (C6453 * C51042 + C6452 * C458) + C16591 * C50850) *
               C21025 +
           ((C117 * C13975 + C50907 * C13977) * C459 -
            (C16591 * C51042 + C16590 * C458) +
            (C117 * C13979 + C50907 * C13981) * C50850) *
               C21026) *
              C50754 * C631 +
          (((C117 * C635 + C50907 * C640) * C458 +
            (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
            C6117 * C50850) *
               C21023 +
           (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
               C21024 +
           (C16272 * C458 + C16273 * C51042 - C21490 * C459 - C21491 * C50850) *
               C21025 +
           (C21490 * C458 + C21491 * C51042 -
            (C117 * C13974 + C50907 * C13976) * C459 -
            (C117 * C13978 + C50907 * C13980) * C50850) *
               C21026) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50907 * C126) * C1240 +
           (C117 * C127 + C50907 * C140) * C1236 - C5693 * C1241 -
           C5694 * C1237 + C6284 * C1242 + C6285 * C1238 - C6572 * C1243 -
           C6573 * C1239) *
              C21023 +
          (C5693 * C1240 + C5694 * C1236 - C6284 * C1241 - C6285 * C1237 +
           C6572 * C1242 + C6573 * C1238 - C16704 * C1243 - C16705 * C1239) *
              C21024 +
          (C6284 * C1240 + C6285 * C1236 - C6572 * C1241 - C6573 * C1237 +
           C16704 * C1242 + C16705 * C1238 - C21768 * C1243 - C21769 * C1239) *
              C21025 +
          (C6572 * C1240 + C6573 * C1236 - C16704 * C1241 - C16705 * C1237 +
           C21768 * C1242 + C21769 * C1238 -
           (C117 * C21759 + C50907 * C21760) * C1243 -
           (C117 * C21761 + C50907 * C21762) * C1239) *
              C21026) *
         C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C13117 + C13118 + C13119) * C1731 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1730 +
            (C13122 + C13121 + C13120) * C1728 -
            (C13709 + C13708 + C13707) * C1731 -
            (C13712 + C13711 + C13710) * C50850) *
               C50949) *
              C50754 * C50808 * C51085 +
          (((C8592 + C8591 + C8590) * C1731 -
            ((C8225 + C8224 + C8223) * C1728 +
             (C8222 + C8221 + C8220) * C1730) +
            (C8595 + C8594 + C8593) * C50850) *
               C51055 +
           ((C9184 + C9185 + C9186) * C1731 -
            ((C8593 + C8594 + C8595) * C1728 +
             (C8590 + C8591 + C8592) * C1730) +
            (C9187 + C9188 + C9189) * C50850) *
               C50949) *
              C50754 * C50808 * C51071 +
          (((C8231 + C8230 + C8229) * C1730 + (C8228 + C8227 + C8226) * C1728 -
            (C8598 + C8597 + C8596) * C1731 -
            (C8601 + C8600 + C8599) * C50850) *
               C51055 +
           ((C8596 + C8597 + C8598) * C1730 + (C8599 + C8600 + C8601) * C1728 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C1731 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C50850) *
               C50949) *
              C50754 * C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C50949) *
               C2446 +
           ((C1733 + C1734 - C1735 - C1736) * C51055 +
            (C7214 + C7215 - C7216 - C7217) * C50949) *
               C2447 +
           C7231 * C2448) *
              C50808 * C51085 +
          (((C1735 - (C1734 + C1733) + C1736) * C51055 +
            (C7216 - (C7215 + C7214) + C7217) * C50949) *
               C2446 +
           ((C1739 - (C1738 + C1737) + C1740) * C51055 +
            (C7221 - (C7220 + C7219) + C7222) * C50949) *
               C2447 +
           ((C1743 - (C1742 + C1741) + C1744) * C51055 +
            (C7223 - (C7224 + C7225) + C7226) * C50949) *
               C2448) *
              C50808 * C51071 +
          (C7231 * C2446 +
           (C1754 * C51055 + (C7225 + C7224 - C7223 - C7226) * C50949) * C2447 +
           ((C1747 + C1746 - C1745 - C1748) * C51055 +
            (C517 * C1730 + C518 * C1728 -
             (C117 * C1004 + C50907 * C1013) * C1731 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C2448) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1730 +
            (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
            C5694 * C50850) *
               C21023 +
           (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
               C21024 +
           (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
               C21025 +
           (C6572 * C1730 + C6573 * C1728 - C16704 * C1731 - C16705 * C50850) *
               C21026) *
              C50754 * C50808 * C51085 +
          ((C1735 - (C1734 + C1733) + C1736) * C21023 +
           (C7216 - (C7215 + C7214) + C7217) * C21024 +
           (C17344 - (C17343 + C17342) + C17345) * C21025 +
           (C16428 * C1731 - (C6287 * C1728 + C6286 * C1730) +
            C16429 * C50850) *
               C21026) *
              C50754 * C50808 * C51071 +
          (C1753 * C21023 + C7229 * C21024 +
           (C17348 + C17347 - C17346 - C17349) * C21025 +
           (C6288 * C1730 + C6289 * C1728 -
            (C117 * C6557 + C50907 * C6562) * C1731 -
            (C117 * C6563 + C50907 * C6566) * C50850) *
               C21026) *
              C50754 * C50808 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C13117 + C13118 + C13119) * C1731 -
             (C13120 + C13121 + C13122) * C50850) *
                C51055 +
            ((C13119 + C13118 + C13117) * C1730 +
             (C13122 + C13121 + C13120) * C1728 -
             (C13709 + C13708 + C13707) * C1731 -
             (C13712 + C13711 + C13710) * C50850) *
                C50949) *
               C50754 * C51040 +
           (((C13537 + C13538 + C13539) * C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C13540 + C13541 + C13542) * C50850) *
                C51055 +
            ((C13873 + C13872 + C13871) * C1731 -
             ((C13542 + C13541 + C13540) * C1728 +
              (C13539 + C13538 + C13537) * C1730) +
             (C13876 + C13875 + C13874) * C50850) *
                C50949) *
               C50754 * C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C51055 +
            ((C9184 + C9185 + C9186) * C1731 -
             ((C8593 + C8594 + C8595) * C1728 +
              (C8590 + C8591 + C8592) * C1730) +
             (C9187 + C9188 + C9189) * C50850) *
                C50949) *
               C50754 * C51040 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C51055 +
            ((C9948 + C9949 + C9950) * C1730 + (C9951 + C9952 + C9953) * C1728 -
             (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
              C8180 * C1155 + C8175 * C1160) *
                 C1731 -
             (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
              C8180 * C1161 + C8175 * C1167) *
                 C50850) *
                C50949) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C51055 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C50949) *
                C2446 +
            ((C1733 + C1734 - C1735 - C1736) * C51055 +
             (C7214 + C7215 - C7216 - C7217) * C50949) *
                C2447 +
            C7231 * C2448) *
               C51040 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C51055 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C50949) *
                C2446 +
            ((C1887 - (C1888 + C1889) + C1890) * C51055 +
             (C7426 - (C7427 + C7428) + C7429) * C50949) *
                C2447 +
            ((C1891 - (C1892 + C1893) + C1894) * C51055 +
             (C7430 - (C7431 + C7432) + C7433) * C50949) *
                C2448) *
               C50824) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51055 +
             (C7216 - (C7215 + C7214) + C7217) * C50949) *
                C2446 +
            ((C1739 - (C1738 + C1737) + C1740) * C51055 +
             (C7221 - (C7220 + C7219) + C7222) * C50949) *
                C2447 +
            ((C1743 - (C1742 + C1741) + C1744) * C51055 +
             (C7223 - (C7224 + C7225) + C7226) * C50949) *
                C2448) *
               C51040 +
           (((C1889 + C1888 - C1887 - C1890) * C51055 +
             (C7428 + C7427 - C7426 - C7429) * C50949) *
                C2446 +
            ((C1893 + C1892 - C1891 - C1894) * C51055 +
             (C7432 + C7431 - C7430 - C7433) * C50949) *
                C2447 +
            ((C1897 + C1896 - C1895 - C1898) * C51055 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50907 * C1164) * C1731 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C21023 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C21024 +
            (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                C21025 +
            (C6572 * C1730 + C6573 * C1728 - C16704 * C1731 - C16705 * C50850) *
                C21026) *
               C50754 * C51040 +
           ((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C21023 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C21024 +
            (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
             C16591 * C50850) *
                C21025 +
            (C21692 * C1731 - (C16591 * C1728 + C16590 * C1730) +
             C21693 * C50850) *
                C21026) *
               C50754 * C50824) *
              C1464 +
          (((C1735 - (C1734 + C1733) + C1736) * C21023 +
            (C7216 - (C7215 + C7214) + C7217) * C21024 +
            (C17344 - (C17343 + C17342) + C17345) * C21025 +
            (C16428 * C1731 - (C6287 * C1728 + C6286 * C1730) +
             C16429 * C50850) *
                C21026) *
               C50754 * C51040 +
           ((C1889 + C1888 - C1887 - C1890) * C21023 +
            (C7428 + C7427 - C7426 - C7429) * C21024 +
            (C17546 + C17545 - C17544 - C17547) * C21025 +
            (C16592 * C1730 + C16593 * C1728 -
             (C117 * C16577 + C50907 * C16578) * C1731 -
             (C117 * C16579 + C50907 * C16580) * C50850) *
                C21026) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C13117 + C13118 + C13119) * C2000 -
            (C13120 + C13121 + C13122) * C51077 +
            (C13707 + C13708 + C13709) * C2001 +
            (C13710 + C13711 + C13712) * C1998) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1999 +
            (C13122 + C13121 + C13120) * C51087 -
            (C13709 + C13708 + C13707) * C2000 -
            (C13712 + C13711 + C13710) * C51077 +
            (C13997 + C13996 + C13995) * C2001 +
            (C14000 + C13999 + C13998) * C1998) *
               C50949) *
              C50754 * C50808 * C1464 +
          (((C8592 + C8591 + C8590) * C2000 -
            ((C8225 + C8224 + C8223) * C51087 +
             (C8222 + C8221 + C8220) * C1999) +
            (C8595 + C8594 + C8593) * C51077 - (C9186 + C9185 + C9184) * C2001 -
            (C9189 + C9188 + C9187) * C1998) *
               C51055 +
           ((C9184 + C9185 + C9186) * C2000 -
            ((C8593 + C8594 + C8595) * C51087 +
             (C8590 + C8591 + C8592) * C1999) +
            (C9187 + C9188 + C9189) * C51077 -
            (C8182 * C9442 + C8177 * C9445 + C8181 * C3756 + C8176 * C3760 +
             C8180 * C1245 + C8175 * C1250) *
                C2001 -
            (C8182 * C9446 + C8177 * C9448 + C8181 * C3761 + C8176 * C3765 +
             C8180 * C1251 + C8175 * C1257) *
                C1998) *
               C50949) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C51055 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C50949) *
               C2446 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51055 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C50949) *
               C2447 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C51055 +
            (C7586 + C7587 - C7588 - C7589 + C7590 + C7591) * C50949) *
               C2448) *
              C50808 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C51055 +
            (C7582 - (C7581 + C7580) + C7583 - C7584 - C7585) * C50949) *
               C2446 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C51055 +
            (C7588 - (C7587 + C7586) + C7589 - C7590 - C7591) * C50949) *
               C2447 +
           ((C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C51055 +
            (C1049 * C2000 - (C516 * C51087 + C515 * C1999) + C1050 * C51077 -
             (C117 * C1247 + C50907 * C1254) * C2001 -
             (C117 * C1255 + C50907 * C1259) * C1998) *
                C50949) *
               C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1999 +
            (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
            C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
               C21023 +
           (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
            C6572 * C2001 + C6573 * C1998) *
               C21024 +
           (C6284 * C1999 + C6285 * C51087 - C6572 * C2000 - C6573 * C51077 +
            C16704 * C2001 + C16705 * C1998) *
               C21025 +
           (C6572 * C1999 + C6573 * C51087 - C16704 * C2000 - C16705 * C51077 +
            C21768 * C2001 + C21769 * C1998) *
               C21026) *
              C50754 * C50808 * C1464 +
          ((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C21023 +
           (C7582 - (C7581 + C7580) + C7583 - C7584 - C7585) * C21024 +
           (C17696 - (C17695 + C17694) + C17697 - C17698 - C17699) * C21025 +
           (C16428 * C2000 - (C6287 * C51087 + C6286 * C1999) +
            C16429 * C51077 - (C117 * C16692 + C50907 * C16695) * C2001 -
            (C117 * C16696 + C50907 * C16698) * C1998) *
               C21026) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C630 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            (((C117 * C873 + C50907 * C888) * C50838 +
              (C117 * C864 + C50907 * C872) * C118) *
                 C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51055 +
             ((C117 * C868 + C50907 * C880) * C118 +
              (C117 * C881 + C50907 * C892) * C50838) *
                 C50949) *
                C2446 +
            ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
            ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
               C632) *
              C51033 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C631 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C630 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C51055) *
                C2448 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C51055) * C2447 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C51055) * C2446) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51055 +
            ((C117 * C460 + C50907 * C466) * C118 +
             (C117 * C467 + C50907 * C478) * C50838) *
                C50949) *
               C2446 +
           ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
           C5372 * C2448) *
              C50808 * C113 -
          (C5373 * C2448 +
           ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
           ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
              C50808 * C114 +
          (C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
           ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
              C50808 * C115 -
          ((((C117 * C477 + C50907 * C483) * C50838 +
             (C117 * C465 + C50907 * C476) * C118) *
                C50949 +
            (C187 + C186) * C51055) *
               C2448 +
           ((C5367 + C5366) * C50949 + C190 * C51055) * C2447 + C5373 * C2446) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
             C8182 * C868 + C8177 * C880) *
                C118 +
            (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
             C8182 * C881 + C8177 * C892) *
                C50838) *
               C50949) *
              C50754 * C50808 * C113 -
          (((C8593 + C8594 + C8595) * C50838 + (C8590 + C8591 + C8592) * C118) *
               C50949 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C51055) *
              C50754 * C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C51055 +
           ((C8596 + C8597 + C8598) * C118 + (C8599 + C8600 + C8601) * C50838) *
               C50949) *
              C50754 * C50808 * C115 -
          (((C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50838 +
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C118) *
               C50949 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C51055) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C630 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C51055 +
            ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
              C8182 * C9017 + C8177 * C9019) *
                 C118 +
             (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
              C8182 * C9020 + C8177 * C9023) *
                 C50838) *
                C50949) *
               C50754 * C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C631 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C630 -
           (((C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
              C8180 * C883 + C8175 * C893) *
                 C50838 +
             (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
              C8180 * C869 + C8175 * C882) *
                 C118) *
                C50949 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C51055) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C21023 +
           (C5693 * C118 + C5694 * C50838) * C21024 +
           (C6284 * C118 + C6285 * C50838) * C21025 +
           (C6572 * C118 + C6573 * C50838) * C21026) *
              C50754 * C50808 * C113 -
          ((C6287 * C50838 + C6286 * C118) * C21026 +
           (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
           (C179 + C178) * C21023) *
              C50754 * C50808 * C114 +
          (C188 * C21023 + C5368 * C21024 + (C15563 + C15562) * C21025 +
           (C6288 * C118 + C6289 * C50838) * C21026) *
              C50754 * C50808 * C115 -
          (((C117 * C1255 + C50907 * C1259) * C50838 +
            (C117 * C1247 + C50907 * C1254) * C118) *
               C21026 +
           (C15565 + C15564) * C21025 + C5369 * C21024 + C191 * C21023) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C21023 +
            (C5693 * C118 + C5694 * C50838) * C21024 +
            (C6284 * C118 + C6285 * C50838) * C21025 +
            (C6572 * C118 + C6573 * C50838) * C21026) *
               C50754 * C630 -
           ((C16591 * C50838 + C16590 * C118) * C21026 +
            (C6453 * C50838 + C6452 * C118) * C21025 +
            (C6115 * C50838 + C6114 * C118) * C21024 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C21023) *
               C50754 * C631 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C21023 +
            (C6116 * C118 + C6117 * C50838) * C21024 +
            (C16272 * C118 + C16273 * C50838) * C21025 +
            ((C117 * C9441 + C50907 * C9443) * C118 +
             (C117 * C9444 + C50907 * C9447) * C50838) *
                C21026) *
               C50754 * C632) *
              C51033 +
          (((C352 + C351) * C21023 + (C5524 + C5523) * C21024 +
            (C15713 + C15712) * C21025 +
            (C16592 * C118 + C16593 * C50838) * C21026) *
               C50754 * C631 -
           ((C6287 * C50838 + C6286 * C118) * C21026 +
            (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
            (C179 + C178) * C21023) *
               C50754 * C630 -
           (((C117 * C9446 + C50907 * C9448) * C50838 +
             (C117 * C9442 + C50907 * C9445) * C118) *
                C21026 +
            (C16023 + C16022) * C21025 + (C5859 + C5858) * C21024 +
            (C675 + C674) * C21023) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51055 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C2446 +
           ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
           C5372 * C2448) *
              C745 -
          (C5529 * C2448 +
           ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
           (((C117 * C873 + C50907 * C888) * C50838 +
             (C117 * C864 + C50907 * C872) * C118) *
                C50949 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C51055) *
               C2446) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C51055 +
            ((C117 * C868 + C50907 * C880) * C118 +
             (C117 * C881 + C50907 * C892) * C50838) *
                C50949) *
               C2446 +
           ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
           ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
              C747 -
          ((((C117 * C3325 + C50907 * C3328) * C50838 +
             (C117 * C3319 + C50907 * C3324) * C118) *
                C50949 +
            ((C117 * C756 + C50907 * C763) * C50838 +
             (C117 * C751 + C50907 * C757) * C118) *
                C51055) *
               C2448 +
           (((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C50949 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C51055) *
               C2447 +
           (((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C50949 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C51055) *
               C2446) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             ((C117 * C460 + C50907 * C466) * C118 +
              (C117 * C467 + C50907 * C478) * C50838) *
                 C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C51040 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            (((C117 * C873 + C50907 * C888) * C50838 +
              (C117 * C864 + C50907 * C872) * C118) *
                 C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C50824) *
              C295 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C50824 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C51040) *
              C296 +
          ((C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
            ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
               C51040 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C51055) *
                C2448 +
            ((C5526 + C5525) * C50949 + C355 * C51055) * C2447 +
            C5529 * C2446) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
              C8182 * C868 + C8177 * C880) *
                 C118 +
             (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
              C8182 * C881 + C8177 * C892) *
                 C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C50824 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C51055 +
            ((C8596 + C8597 + C8598) * C118 +
             (C8599 + C8600 + C8601) * C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50838 +
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C118) *
                C50949 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C51055) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C13119 + C13118 + C13117) * C118 +
            (C13122 + C13121 + C13120) * C50838) *
               C50949) *
              C50754 * C745 -
          (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
             C8180 * C873 + C8175 * C888) *
                C50838 +
            (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
             C8180 * C864 + C8175 * C872) *
                C118) *
               C50949 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C51055) *
              C50754 * C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C51055 +
           ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
             C8182 * C9017 + C8177 * C9019) *
                C118 +
            (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
             C8182 * C9020 + C8177 * C9023) *
                C50838) *
               C50949) *
              C50754 * C747 -
          (((C8182 * C11464 + C8177 * C11465 + C8181 * C9020 + C8176 * C9023 +
             C8180 * C3321 + C8175 * C3326) *
                C50838 +
            (C8182 * C11462 + C8177 * C11463 + C8181 * C9017 + C8176 * C9019 +
             C8180 * C3317 + C8175 * C3320) *
                C118) *
               C50949 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C51055) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C21023 +
            (C5693 * C118 + C5694 * C50838) * C21024 +
            (C6284 * C118 + C6285 * C50838) * C21025 +
            (C6572 * C118 + C6573 * C50838) * C21026) *
               C50754 * C51040 -
           ((C16591 * C50838 + C16590 * C118) * C21026 +
            (C6453 * C50838 + C6452 * C118) * C21025 +
            (C6115 * C50838 + C6114 * C118) * C21024 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C21023) *
               C50754 * C50824) *
              C295 +
          (((C352 + C351) * C21023 + (C5524 + C5523) * C21024 +
            (C15713 + C15712) * C21025 +
            (C16592 * C118 + C16593 * C50838) * C21026) *
               C50754 * C50824 -
           ((C6287 * C50838 + C6286 * C118) * C21026 +
            (C15561 + C15560) * C21025 + (C5359 + C5358) * C21024 +
            (C179 + C178) * C21023) *
               C50754 * C51040) *
              C296 +
          ((C188 * C21023 + C5368 * C21024 + (C15563 + C15562) * C21025 +
            (C6288 * C118 + C6289 * C50838) * C21026) *
               C50754 * C51040 -
           (((C117 * C3763 + C50907 * C3766) * C50838 +
             (C117 * C3757 + C50907 * C3762) * C118) *
                C21026 +
            (C15715 + C15714) * C21025 + C5527 * C21024 + C356 * C21023) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C21023 +
           (C5693 * C118 + C5694 * C50838) * C21024 +
           (C6284 * C118 + C6285 * C50838) * C21025 +
           (C6572 * C118 + C6573 * C50838) * C21026) *
              C50754 * C745 -
          ((C16591 * C50838 + C16590 * C118) * C21026 +
           (C6453 * C50838 + C6452 * C118) * C21025 +
           (C6115 * C50838 + C6114 * C118) * C21024 +
           ((C117 * C310 + C50907 * C319) * C50838 +
            (C117 * C301 + C50907 * C311) * C118) *
               C21023) *
              C50754 * C746 +
          (((C117 * C635 + C50907 * C640) * C118 +
            (C117 * C641 + C50907 * C650) * C50838) *
               C21023 +
           (C6116 * C118 + C6117 * C50838) * C21024 +
           (C16272 * C118 + C16273 * C50838) * C21025 +
           ((C117 * C9441 + C50907 * C9443) * C118 +
            (C117 * C9444 + C50907 * C9447) * C50838) *
               C21026) *
              C50754 * C747 -
          (((C117 * C11734 + C50907 * C11735) * C50838 +
            (C117 * C11732 + C50907 * C11733) * C118) *
               C21026 +
           ((C117 * C9338 + C50907 * C9341) * C50838 +
            (C117 * C9335 + C50907 * C9337) * C118) *
               C21025 +
           ((C117 * C3321 + C50907 * C3326) * C50838 +
            (C117 * C3317 + C50907 * C3320) * C118) *
               C21024 +
           ((C117 * C760 + C50907 * C765) * C50838 +
            (C117 * C753 + C50907 * C761) * C118) *
               C21023) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C458 + C5694 * C51042 -
             (C117 * C1000 + C50907 * C1005) * C459 -
             (C117 * C1006 + C50907 * C1015) * C50850) *
                C50949) *
               C2446 +
           ((C485 + C486 - C519 - C520) * C51055 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C2447 +
           C5699 * C2448) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C51055 +
            ((C117 * C1154 + C50907 * C1158) * C459 -
             (C6115 * C51042 + C6114 * C458) +
             (C117 * C1159 + C50907 * C1166) * C50850) *
                C50949) *
               C2446 +
           ((C1625 - (C1603 + C1604) + C1626) * C51055 +
            ((C117 * C1155 + C50907 * C1160) * C459 -
             (C1620 * C51042 + C1619 * C458) +
             (C117 * C1161 + C50907 * C1167) * C50850) *
                C50949) *
               C2447 +
           ((C1627 - (C1609 + C1610) + C1628) * C51055 +
            ((C117 * C1156 + C50907 * C1162) * C459 -
             (C1622 * C51042 + C1621 * C458) +
             (C117 * C1163 + C50907 * C1168) * C50850) *
                C50949) *
               C2448) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C51055 +
            (C6116 * C458 + C6117 * C51042 -
             (C117 * C3645 + C50907 * C3648) * C459 -
             (C117 * C3649 + C50907 * C3654) * C50850) *
                C50949) *
               C2446 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C51055 +
            (C5854 * C458 + C5855 * C51042 -
             (C117 * C3646 + C50907 * C3650) * C459 -
             (C117 * C3651 + C50907 * C3655) * C50850) *
                C50949) *
               C2447 +
           ((C670 * C458 + C671 * C51042 - C5856 * C459 - C5857 * C50850) *
                C51055 +
            (C5856 * C458 + C5857 * C51042 -
             (C117 * C3647 + C50907 * C3652) * C459 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C2448) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C458 + C5694 * C51042 -
             (C117 * C1000 + C50907 * C1005) * C459 -
             (C117 * C1006 + C50907 * C1015) * C50850) *
                C50949) *
               C2446 +
           ((C485 + C486 - C519 - C520) * C51055 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C2447 +
           C5699 * C2448) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C51055 +
            (C5682 - (C5681 + C5680) + C5683) * C50949) *
               C2446 +
           ((C521 - (C492 + C491) + C522) * C51055 +
            (C5687 - (C5686 + C5685) + C5688) * C50949) *
               C2447 +
           ((C523 - (C498 + C497) + C524) * C51055 +
            (C5689 - (C5690 + C5691) + C5692) * C50949) *
               C2448) *
              C50808 * C296 +
          (C5699 * C2446 +
           (C530 * C51055 + (C5691 + C5690 - C5689 - C5692) * C50949) * C2447 +
           ((C506 + C505 - C525 - C526) * C51055 +
            (C517 * C458 + C518 * C51042 -
             (C117 * C1004 + C50907 * C1013) * C459 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C2448) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C51055 +
           ((C9184 + C9185 + C9186) * C459 -
            ((C8593 + C8594 + C8595) * C51042 +
             (C8590 + C8591 + C8592) * C458) +
            (C9187 + C9188 + C9189) * C50850) *
               C50949) *
              C50754 * C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C51055 +
           ((C8596 + C8597 + C8598) * C458 + (C8599 + C8600 + C8601) * C51042 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C459 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C50850) *
               C50949) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C630 +
          (((C13537 + C13538 + C13539) * C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C13540 + C13541 + C13542) * C50850) *
               C51055 +
           ((C8180 * C1154 + C8175 * C1158 + C8181 * C3645 + C8176 * C3648 +
             C8182 * C9335 + C8177 * C9337) *
                C459 -
            ((C13542 + C13541 + C13540) * C51042 +
             (C13539 + C13538 + C13537) * C458) +
            (C8180 * C1159 + C8175 * C1166 + C8181 * C3649 + C8176 * C3654 +
             C8182 * C9338 + C8177 * C9341) *
                C50850) *
               C50949) *
              C50754 * C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C13543 + C13544 + C13545) * C459 -
            (C13546 + C13547 + C13548) * C50850) *
               C51055 +
           ((C13545 + C13544 + C13543) * C458 +
            (C13548 + C13547 + C13546) * C51042 -
            (C8182 * C11662 + C8177 * C11663 + C8181 * C9335 + C8176 * C9337 +
             C8180 * C3645 + C8175 * C3648) *
                C459 -
            (C8182 * C11664 + C8177 * C11665 + C8181 * C9338 + C8176 * C9341 +
             C8180 * C3649 + C8175 * C3654) *
                C50850) *
               C50949) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
            C5694 * C50850) *
               C21023 +
           (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
               C21024 +
           (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
               C21025 +
           (C6572 * C458 + C6573 * C51042 - C16704 * C459 - C16705 * C50850) *
               C21026) *
              C50754 * C50808 * C295 +
          ((C519 - (C486 + C485) + C520) * C21023 +
           (C5682 - (C5681 + C5680) + C5683) * C21024 +
           (C15864 - (C15863 + C15862) + C15865) * C21025 +
           (C16428 * C459 - (C6287 * C51042 + C6286 * C458) + C16429 * C50850) *
               C21026) *
              C50754 * C50808 * C296 +
          (C529 * C21023 + C5697 * C21024 +
           (C15868 + C15867 - C15866 - C15869) * C21025 +
           (C6288 * C458 + C6289 * C51042 -
            (C117 * C6557 + C50907 * C6562) * C459 -
            (C117 * C6563 + C50907 * C6566) * C50850) *
               C21026) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
            C5694 * C50850) *
               C21023 +
           (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
               C21024 +
           (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
               C21025 +
           (C6572 * C458 + C6573 * C51042 - C16704 * C459 - C16705 * C50850) *
               C21026) *
              C50754 * C630 +
          ((C6114 * C459 -
            ((C117 * C310 + C50907 * C319) * C51042 +
             (C117 * C301 + C50907 * C311) * C458) +
            C6115 * C50850) *
               C21023 +
           (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
               C21024 +
           (C16590 * C459 - (C6453 * C51042 + C6452 * C458) + C16591 * C50850) *
               C21025 +
           ((C117 * C13975 + C50907 * C13977) * C459 -
            (C16591 * C51042 + C16590 * C458) +
            (C117 * C13979 + C50907 * C13981) * C50850) *
               C21026) *
              C50754 * C631 +
          (((C117 * C635 + C50907 * C640) * C458 +
            (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
            C6117 * C50850) *
               C21023 +
           (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
               C21024 +
           (C16272 * C458 + C16273 * C51042 - C21490 * C459 - C21491 * C50850) *
               C21025 +
           (C21490 * C458 + C21491 * C51042 -
            (C117 * C13974 + C50907 * C13976) * C459 -
            (C117 * C13978 + C50907 * C13980) * C50850) *
               C21026) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C32138 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C51084 +
            ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
            C32145 * C22849) *
               C1358 -
           (C32295 * C22849 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C32138) *
                C51084) *
               C50824) *
              C51085 +
          ((((C352 + C351) * C32138 + (C5524 + C5523) * C50949) * C51084 +
            ((C350 + C349) * C32138 + (C5521 + C5520) * C50949) * C51068 +
            ((C348 + C347) * C32138 + (C5525 + C5526) * C50949) * C22849) *
               C50824 -
           (C32146 * C22849 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
               C1358) *
              C51071 +
          ((C32145 * C51084 +
            (C189 * C32138 + (C5364 + C5363) * C50949) * C51068 +
            ((C185 + C184) * C32138 + (C5366 + C5367) * C50949) * C22849) *
               C1358 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C32138) *
                C22849 +
            ((C5526 + C5525) * C50949 + C355 * C32138) * C51068 +
            C32295 * C51084) *
               C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C32138 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C51084 +
            ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
            C32145 * C22849) *
               C51086 -
           (C32295 * C22849 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C32138) *
                C51084) *
               C51074 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C32138 +
             (C6116 * C118 + C6117 * C50838) * C50949) *
                C51084 +
            ((C674 + C675) * C32138 + (C5858 + C5859) * C50949) * C51068 +
            ((C676 + C677) * C32138 + (C5860 + C5861) * C50949) * C22849) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C32138 + (C5524 + C5523) * C50949) * C51084 +
            ((C350 + C349) * C32138 + (C5521 + C5520) * C50949) * C51068 +
            ((C348 + C347) * C32138 + (C5525 + C5526) * C50949) * C22849) *
               C51074 -
           (C32146 * C22849 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
               C51086 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C32138) *
                C22849 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C32138) * C51068 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C32138) * C51084) *
               C1463) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C458 +
              (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
              C5694 * C50850) *
                 C32138 +
             (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                 C50949) *
                C51084 +
            ((C485 + C486 - C519 - C520) * C32138 +
             (C5680 + C5681 - C5682 - C5683) * C50949) *
                C51068 +
            C32444 * C22849) *
               C1358 +
           (((C6114 * C459 -
              ((C117 * C310 + C50907 * C319) * C51042 +
               (C117 * C301 + C50907 * C311) * C458) +
              C6115 * C50850) *
                 C32138 +
             (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                 C50949) *
                C51084 +
            ((C1625 - (C1603 + C1604) + C1626) * C32138 +
             (C7060 - (C7061 + C7062) + C7063) * C50949) *
                C51068 +
            ((C1627 - (C1609 + C1610) + C1628) * C32138 +
             (C7064 - (C7065 + C7066) + C7067) * C50949) *
                C22849) *
               C50824) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C32138 +
             (C5682 - (C5681 + C5680) + C5683) * C50949) *
                C51084 +
            ((C521 - (C492 + C491) + C522) * C32138 +
             (C5687 - (C5686 + C5685) + C5688) * C50949) *
                C51068 +
            ((C523 - (C498 + C497) + C524) * C32138 +
             (C5689 - (C5690 + C5691) + C5692) * C50949) *
                C22849) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C32138 +
             (C7062 + C7061 - C7060 - C7063) * C50949) *
                C51084 +
            ((C1610 + C1609 - C1627 - C1628) * C32138 +
             (C7066 + C7065 - C7064 - C7067) * C50949) *
                C51068 +
            ((C1616 + C1615 - C1629 - C1630) * C32138 +
             (C1623 * C458 + C1624 * C51042 -
              (C117 * C1157 + C50907 * C1164) * C459 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C22849) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C32138 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C50949) *
                C51084 +
            ((C1733 + C1734 - C1735 - C1736) * C32138 +
             (C7214 + C7215 - C7216 - C7217) * C50949) *
                C51068 +
            C33859 * C22849) *
               C1358 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C32138 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C50949) *
                C51084 +
            ((C1887 - (C1888 + C1889) + C1890) * C32138 +
             (C7426 - (C7427 + C7428) + C7429) * C50949) *
                C51068 +
            ((C1891 - (C1892 + C1893) + C1894) * C32138 +
             (C7430 - (C7431 + C7432) + C7433) * C50949) *
                C22849) *
               C50824) *
              C51033 +
          ((((C1735 - (C1734 + C1733) + C1736) * C32138 +
             (C7216 - (C7215 + C7214) + C7217) * C50949) *
                C51084 +
            ((C1739 - (C1738 + C1737) + C1740) * C32138 +
             (C7221 - (C7220 + C7219) + C7222) * C50949) *
                C51068 +
            ((C1743 - (C1742 + C1741) + C1744) * C32138 +
             (C7223 - (C7224 + C7225) + C7226) * C50949) *
                C22849) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C32138 +
             (C7428 + C7427 - C7426 - C7429) * C50949) *
                C51084 +
            ((C1893 + C1892 - C1891 - C1894) * C32138 +
             (C7432 + C7431 - C7430 - C7433) * C50949) *
                C51068 +
            ((C1897 + C1896 - C1895 - C1898) * C32138 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50907 * C1164) * C1731 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C22849) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C32138 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C50949) *
               C51084 +
           ((C1733 + C1734 - C1735 - C1736) * C32138 +
            (C7214 + C7215 - C7216 - C7217) * C50949) *
               C51068 +
           C33859 * C22849) *
              C51086 +
          (((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C32138 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C50949) *
               C51084 +
           ((C1887 - (C1888 + C1889) + C1890) * C32138 +
            (C7426 - (C7427 + C7428) + C7429) * C50949) *
               C51068 +
           ((C1891 - (C1892 + C1893) + C1894) * C32138 +
            (C7430 - (C7431 + C7432) + C7433) * C50949) *
               C22849) *
              C51074 +
          ((((C117 * C635 + C50907 * C640) * C1730 +
             (C117 * C641 + C50907 * C650) * C1728 - C6116 * C1731 -
             C6117 * C50850) *
                C32138 +
            (C6116 * C1730 + C6117 * C1728 - C16272 * C1731 - C16273 * C50850) *
                C50949) *
               C51084 +
           ((C668 * C1730 + C669 * C1728 - C5854 * C1731 - C5855 * C50850) *
                C32138 +
            (C5854 * C1730 + C5855 * C1728 - C16020 * C1731 - C16021 * C50850) *
                C50949) *
               C51068 +
           ((C670 * C1730 + C671 * C1728 - C5856 * C1731 - C5857 * C50850) *
                C32138 +
            (C5856 * C1730 + C5857 * C1728 -
             (C117 * C3647 + C50907 * C3652) * C1731 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C22849) *
              C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50907 * C126) * C1999 +
                      (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
                      C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                         C32138 +
                     (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 -
                      C6285 * C51077 + C6572 * C2001 + C6573 * C1998) *
                         C50949) *
                        C51084 +
                    ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C32138 +
                     (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C50949) *
                        C51068 +
                    ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C32138 +
                     (C7586 + C7587 - C7588 - C7589 + C7590 + C7591) * C50949) *
                        C22849) *
                       C1358 +
                   (((C6114 * C2000 -
                      ((C117 * C310 + C50907 * C319) * C51087 +
                       (C117 * C301 + C50907 * C311) * C1999) +
                      C6115 * C51077 - C6452 * C2001 - C6453 * C1998) *
                         C32138 +
                     (C6452 * C2000 - (C6115 * C51087 + C6114 * C1999) +
                      C6453 * C51077 - C16590 * C2001 - C16591 * C1998) *
                         C50949) *
                        C51084 +
                    ((C1619 * C2000 - (C343 * C51087 + C344 * C1999) +
                      C1620 * C51077 - C6454 * C2001 - C6455 * C1998) *
                         C32138 +
                     (C6454 * C2000 - (C1620 * C51087 + C1619 * C1999) +
                      C6455 * C51077 - C16592 * C2001 - C16593 * C1998) *
                         C50949) *
                        C51068 +
                    ((C1621 * C2000 - (C341 * C51087 + C342 * C1999) +
                      C1622 * C51077 - C6456 * C2001 - C6457 * C1998) *
                         C32138 +
                     (C6456 * C2000 - (C1622 * C51087 + C1621 * C1999) +
                      C6457 * C51077 - (C117 * C3757 + C50907 * C3762) * C2001 -
                      (C117 * C3763 + C50907 * C3766) * C1998) *
                         C50949) *
                        C22849) *
                       C50824) *
                  C50776) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C32138 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C51084 +
            ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
            C32145 * C22849) *
               C630 -
           (C32295 * C22849 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C32138) *
                C51084) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C32138 +
             (C6116 * C118 + C6117 * C50838) * C50949) *
                C51084 +
            ((C674 + C675) * C32138 + (C5858 + C5859) * C50949) * C51068 +
            ((C676 + C677) * C32138 + (C5860 + C5861) * C50949) * C22849) *
               C632) *
              C51033 +
          ((((C352 + C351) * C32138 + (C5524 + C5523) * C50949) * C51084 +
            ((C350 + C349) * C32138 + (C5521 + C5520) * C50949) * C51068 +
            ((C348 + C347) * C32138 + (C5525 + C5526) * C50949) * C22849) *
               C631 -
           (C32146 * C22849 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
               C630 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C32138) *
                C22849 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C32138) * C51068 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C32138) * C51084) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C32138 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C51084 +
           ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
           C32145 * C22849) *
              C50808 * C113 -
          (C32146 * C22849 +
           ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
           ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
              C50808 * C114 +
          (C32145 * C51084 +
           (C189 * C32138 + (C5364 + C5363) * C50949) * C51068 +
           ((C185 + C184) * C32138 + (C5366 + C5367) * C50949) * C22849) *
              C50808 * C115 -
          ((((C117 * C477 + C50907 * C483) * C50838 +
             (C117 * C465 + C50907 * C476) * C118) *
                C50949 +
            (C187 + C186) * C32138) *
               C22849 +
           ((C5367 + C5366) * C50949 + C190 * C32138) * C51068 +
           C32146 * C51084) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C32138 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             C6572 * C999 + C6573 * C996) *
                C50949) *
               C51084 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C32138 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C50949) *
               C51068 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C32138 +
            (C6276 + C6277 - C6278 - C6279 + C6292 + C6293) * C50949) *
               C22849) *
              C50808 * C51033 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C32138 +
            (C6270 - (C6269 + C6268) + C6271 - C6290 - C6291) * C50949) *
               C51084 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C32138 +
            (C6278 - (C6277 + C6276) + C6279 - C6292 - C6293) * C50949) *
               C51068 +
           ((C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C32138 +
            (C1049 * C998 - (C516 * C994 + C515 * C997) + C1050 * C995 -
             (C117 * C1247 + C50907 * C1254) * C999 -
             (C117 * C1255 + C50907 * C1259) * C996) *
                C50949) *
               C22849) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C32138 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C51084 +
           ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
           C32145 * C22849) *
              C745 -
          (C32295 * C22849 +
           ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
           ((C6115 * C50838 + C6114 * C118) * C50949 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C32138) *
               C51084) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C32138 +
            (C6116 * C118 + C6117 * C50838) * C50949) *
               C51084 +
           ((C674 + C675) * C32138 + (C5858 + C5859) * C50949) * C51068 +
           ((C676 + C677) * C32138 + (C5860 + C5861) * C50949) * C22849) *
              C747 -
          ((((C117 * C3325 + C50907 * C3328) * C50838 +
             (C117 * C3319 + C50907 * C3324) * C118) *
                C50949 +
            ((C117 * C756 + C50907 * C763) * C50838 +
             (C117 * C751 + C50907 * C757) * C118) *
                C32138) *
               C22849 +
           (((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C50949 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C32138) *
               C51068 +
           (((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C50949 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C32138) *
               C51084) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C32138 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C51084 +
            ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
            C32145 * C22849) *
               C51040 -
           (C32295 * C22849 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C32138) *
                C51084) *
               C50824) *
              C295 +
          ((((C352 + C351) * C32138 + (C5524 + C5523) * C50949) * C51084 +
            ((C350 + C349) * C32138 + (C5521 + C5520) * C50949) * C51068 +
            ((C348 + C347) * C32138 + (C5525 + C5526) * C50949) * C22849) *
               C50824 -
           (C32146 * C22849 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
               C51040) *
              C296 +
          ((C32145 * C51084 +
            (C189 * C32138 + (C5364 + C5363) * C50949) * C51068 +
            ((C185 + C184) * C32138 + (C5366 + C5367) * C50949) * C22849) *
               C51040 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C32138) *
                C22849 +
            ((C5526 + C5525) * C50949 + C355 * C32138) * C51068 +
            C32295 * C51084) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C32138 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             C6572 * C999 + C6573 * C996) *
                C50949) *
               C51084 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C32138 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C50949) *
               C51068 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C32138 +
            (C6276 + C6277 - C6278 - C6279 + C6292 + C6293) * C50949) *
               C22849) *
              C51040 +
          (((C6114 * C998 -
             ((C117 * C310 + C50907 * C319) * C994 +
              (C117 * C301 + C50907 * C311) * C997) +
             C6115 * C995 - C6452 * C999 - C6453 * C996) *
                C32138 +
            (C6452 * C998 - (C6115 * C994 + C6114 * C997) + C6453 * C995 -
             C16590 * C999 - C16591 * C996) *
                C50949) *
               C51084 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C6454 * C999 - C6455 * C996) *
                C32138 +
            (C6454 * C998 - (C1620 * C994 + C1619 * C997) + C6455 * C995 -
             C16592 * C999 - C16593 * C996) *
                C50949) *
               C51068 +
           ((C1621 * C998 - (C341 * C994 + C342 * C997) + C1622 * C995 -
             C6456 * C999 - C6457 * C996) *
                C32138 +
            (C6456 * C998 - (C1622 * C994 + C1621 * C997) + C6457 * C995 -
             (C117 * C3757 + C50907 * C3762) * C999 -
             (C117 * C3763 + C50907 * C3766) * C996) *
                C50949) *
               C22849) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C32138 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C50949) *
               C51084 +
           ((C485 + C486 - C519 - C520) * C32138 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C51068 +
           C32444 * C22849) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C32138 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C50949) *
               C51084 +
           ((C1625 - (C1603 + C1604) + C1626) * C32138 +
            (C7060 - (C7061 + C7062) + C7063) * C50949) *
               C51068 +
           ((C1627 - (C1609 + C1610) + C1628) * C32138 +
            (C7064 - (C7065 + C7066) + C7067) * C50949) *
               C22849) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C32138 +
            (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
                C50949) *
               C51084 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C32138 +
            (C5854 * C458 + C5855 * C51042 - C16020 * C459 - C16021 * C50850) *
                C50949) *
               C51068 +
           ((C670 * C458 + C671 * C51042 - C5856 * C459 - C5857 * C50850) *
                C32138 +
            (C5856 * C458 + C5857 * C51042 -
             (C117 * C3647 + C50907 * C3652) * C459 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C22849) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C32138 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C50949) *
               C51084 +
           ((C485 + C486 - C519 - C520) * C32138 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C51068 +
           C32444 * C22849) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C32138 +
            (C5682 - (C5681 + C5680) + C5683) * C50949) *
               C51084 +
           ((C521 - (C492 + C491) + C522) * C32138 +
            (C5687 - (C5686 + C5685) + C5688) * C50949) *
               C51068 +
           ((C523 - (C498 + C497) + C524) * C32138 +
            (C5689 - (C5690 + C5691) + C5692) * C50949) *
               C22849) *
              C50808 * C296 +
          (C32444 * C51084 +
           (C530 * C32138 + (C5691 + C5690 - C5689 - C5692) * C50949) * C51068 +
           ((C506 + C505 - C525 - C526) * C32138 +
            (C517 * C458 + C518 * C51042 -
             (C117 * C1004 + C50907 * C1013) * C459 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C22849) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1240 +
            (C117 * C127 + C50907 * C140) * C1236 - C5693 * C1241 -
            C5694 * C1237 + C6284 * C1242 + C6285 * C1238 - C6572 * C1243 -
            C6573 * C1239) *
               C32138 +
           (C5693 * C1240 + C5694 * C1236 - C6284 * C1241 - C6285 * C1237 +
            C6572 * C1242 + C6573 * C1238 - C16704 * C1243 - C16705 * C1239) *
               C50949) *
              C51084 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C6286 * C1243 - C6287 * C1239) *
               C32138 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C6286 * C1242 + C6287 * C1238 - C16428 * C1243 - C16429 * C1239) *
               C50949) *
              C51068 +
          ((C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
            C1047 * C1242 + C1048 * C1238 - C6288 * C1243 - C6289 * C1239) *
               C32138 +
           (C512 * C1240 + C513 * C1236 - C1047 * C1241 - C1048 * C1237 +
            C6288 * C1242 + C6289 * C1238 -
            (C117 * C6557 + C50907 * C6562) * C1243 -
            (C117 * C6563 + C50907 * C6566) * C1239) *
               C50949) *
              C22849) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C32138 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C50949) *
               C51084 +
           ((C1733 + C1734 - C1735 - C1736) * C32138 +
            (C7214 + C7215 - C7216 - C7217) * C50949) *
               C51068 +
           C33859 * C22849) *
              C50808 * C51085 +
          (((C1735 - (C1734 + C1733) + C1736) * C32138 +
            (C7216 - (C7215 + C7214) + C7217) * C50949) *
               C51084 +
           ((C1739 - (C1738 + C1737) + C1740) * C32138 +
            (C7221 - (C7220 + C7219) + C7222) * C50949) *
               C51068 +
           ((C1743 - (C1742 + C1741) + C1744) * C32138 +
            (C7223 - (C7224 + C7225) + C7226) * C50949) *
               C22849) *
              C50808 * C51071 +
          (C33859 * C51084 +
           (C1754 * C32138 + (C7225 + C7224 - C7223 - C7226) * C50949) *
               C51068 +
           ((C1747 + C1746 - C1745 - C1748) * C32138 +
            (C517 * C1730 + C518 * C1728 -
             (C117 * C1004 + C50907 * C1013) * C1731 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C22849) *
              C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C32138 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C50949) *
                C51084 +
            ((C1733 + C1734 - C1735 - C1736) * C32138 +
             (C7214 + C7215 - C7216 - C7217) * C50949) *
                C51068 +
            C33859 * C22849) *
               C51040 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C32138 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C50949) *
                C51084 +
            ((C1887 - (C1888 + C1889) + C1890) * C32138 +
             (C7426 - (C7427 + C7428) + C7429) * C50949) *
                C51068 +
            ((C1891 - (C1892 + C1893) + C1894) * C32138 +
             (C7430 - (C7431 + C7432) + C7433) * C50949) *
                C22849) *
               C50824) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C32138 +
             (C7216 - (C7215 + C7214) + C7217) * C50949) *
                C51084 +
            ((C1739 - (C1738 + C1737) + C1740) * C32138 +
             (C7221 - (C7220 + C7219) + C7222) * C50949) *
                C51068 +
            ((C1743 - (C1742 + C1741) + C1744) * C32138 +
             (C7223 - (C7224 + C7225) + C7226) * C50949) *
                C22849) *
               C51040 +
           (((C1889 + C1888 - C1887 - C1890) * C32138 +
             (C7428 + C7427 - C7426 - C7429) * C50949) *
                C51084 +
            ((C1893 + C1892 - C1891 - C1894) * C32138 +
             (C7432 + C7431 - C7430 - C7433) * C50949) *
                C51068 +
            ((C1897 + C1896 - C1895 - C1898) * C32138 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50907 * C1164) * C1731 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C22849) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C32138 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C50949) *
               C51084 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C32138 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C50949) *
               C51068 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C32138 +
            (C7586 + C7587 - C7588 - C7589 + C7590 + C7591) * C50949) *
               C22849) *
              C50808 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C32138 +
            (C7582 - (C7581 + C7580) + C7583 - C7584 - C7585) * C50949) *
               C51084 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C32138 +
            (C7588 - (C7587 + C7586) + C7589 - C7590 - C7591) * C50949) *
               C51068 +
           ((C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C32138 +
            (C1049 * C2000 - (C516 * C51087 + C515 * C1999) + C1050 * C51077 -
             (C117 * C1247 + C50907 * C1254) * C2001 -
             (C117 * C1255 + C50907 * C1259) * C1998) *
                C50949) *
               C22849) *
              C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C32138 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C51084 +
           ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
           C32145 * C22849) *
              C50808 * C113 -
          (C32146 * C22849 +
           ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
           ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
              C50808 * C114 +
          (C32145 * C51084 +
           (C189 * C32138 + (C5364 + C5363) * C50949) * C51068 +
           ((C185 + C184) * C32138 + (C5366 + C5367) * C50949) * C22849) *
              C50808 * C115 -
          ((((C117 * C477 + C50907 * C483) * C50838 +
             (C117 * C465 + C50907 * C476) * C118) *
                C50949 +
            (C187 + C186) * C32138) *
               C22849 +
           ((C5367 + C5366) * C50949 + C190 * C32138) * C51068 +
           C32146 * C51084) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C32138 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C51084 +
            ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
            C32145 * C22849) *
               C630 -
           (C32295 * C22849 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C32138) *
                C51084) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C32138 +
             (C6116 * C118 + C6117 * C50838) * C50949) *
                C51084 +
            ((C674 + C675) * C32138 + (C5858 + C5859) * C50949) * C51068 +
            ((C676 + C677) * C32138 + (C5860 + C5861) * C50949) * C22849) *
               C632) *
              C51033 +
          ((((C352 + C351) * C32138 + (C5524 + C5523) * C50949) * C51084 +
            ((C350 + C349) * C32138 + (C5521 + C5520) * C50949) * C51068 +
            ((C348 + C347) * C32138 + (C5525 + C5526) * C50949) * C22849) *
               C631 -
           (C32146 * C22849 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
               C630 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C32138) *
                C22849 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C32138) * C51068 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C32138) * C51084) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C32138 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C51084 +
            ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
            C32145 * C22849) *
               C51040 -
           (C32295 * C22849 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C32138) *
                C51084) *
               C50824) *
              C295 +
          ((((C352 + C351) * C32138 + (C5524 + C5523) * C50949) * C51084 +
            ((C350 + C349) * C32138 + (C5521 + C5520) * C50949) * C51068 +
            ((C348 + C347) * C32138 + (C5525 + C5526) * C50949) * C22849) *
               C50824 -
           (C32146 * C22849 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C32138) * C51068 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C32138) * C51084) *
               C51040) *
              C296 +
          ((C32145 * C51084 +
            (C189 * C32138 + (C5364 + C5363) * C50949) * C51068 +
            ((C185 + C184) * C32138 + (C5366 + C5367) * C50949) * C22849) *
               C51040 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C32138) *
                C22849 +
            ((C5526 + C5525) * C50949 + C355 * C32138) * C51068 +
            C32295 * C51084) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C32138 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C51084 +
           ((C178 + C179) * C32138 + (C5358 + C5359) * C50949) * C51068 +
           C32145 * C22849) *
              C745 -
          (C32295 * C22849 +
           ((C5523 + C5524) * C50949 + (C351 + C352) * C32138) * C51068 +
           ((C6115 * C50838 + C6114 * C118) * C50949 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C32138) *
               C51084) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C32138 +
            (C6116 * C118 + C6117 * C50838) * C50949) *
               C51084 +
           ((C674 + C675) * C32138 + (C5858 + C5859) * C50949) * C51068 +
           ((C676 + C677) * C32138 + (C5860 + C5861) * C50949) * C22849) *
              C747 -
          ((((C117 * C3325 + C50907 * C3328) * C50838 +
             (C117 * C3319 + C50907 * C3324) * C118) *
                C50949 +
            ((C117 * C756 + C50907 * C763) * C50838 +
             (C117 * C751 + C50907 * C757) * C118) *
                C32138) *
               C22849 +
           (((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C50949 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C32138) *
               C51068 +
           (((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C50949 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C32138) *
               C51084) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C32138 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C50949) *
               C51084 +
           ((C485 + C486 - C519 - C520) * C32138 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C51068 +
           C32444 * C22849) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C32138 +
            (C5682 - (C5681 + C5680) + C5683) * C50949) *
               C51084 +
           ((C521 - (C492 + C491) + C522) * C32138 +
            (C5687 - (C5686 + C5685) + C5688) * C50949) *
               C51068 +
           ((C523 - (C498 + C497) + C524) * C32138 +
            (C5689 - (C5690 + C5691) + C5692) * C50949) *
               C22849) *
              C50808 * C296 +
          (C32444 * C51084 +
           (C530 * C32138 + (C5691 + C5690 - C5689 - C5692) * C50949) * C51068 +
           ((C506 + C505 - C525 - C526) * C32138 +
            (C517 * C458 + C518 * C51042 -
             (C117 * C1004 + C50907 * C1013) * C459 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C22849) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C32138 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C50949) *
               C51084 +
           ((C485 + C486 - C519 - C520) * C32138 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C51068 +
           C32444 * C22849) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C32138 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C50949) *
               C51084 +
           ((C1625 - (C1603 + C1604) + C1626) * C32138 +
            (C7060 - (C7061 + C7062) + C7063) * C50949) *
               C51068 +
           ((C1627 - (C1609 + C1610) + C1628) * C32138 +
            (C7064 - (C7065 + C7066) + C7067) * C50949) *
               C22849) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C32138 +
            (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
                C50949) *
               C51084 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C32138 +
            (C5854 * C458 + C5855 * C51042 - C16020 * C459 - C16021 * C50850) *
                C50949) *
               C51068 +
           ((C670 * C458 + C671 * C51042 - C5856 * C459 - C5857 * C50850) *
                C32138 +
            (C5856 * C458 + C5857 * C51042 -
             (C117 * C3647 + C50907 * C3652) * C459 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C22849) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C118 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
                C25711 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
             (C35206 * C118 + C35207 * C50838) * C50949) *
                C50759) *
               C1358 -
           ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
             ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
                C50759 +
            (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C50838 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C118) *
                 C32138) *
                C25711) *
               C50824) *
              C51085 +
          (((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C32138 +
             ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C50949) *
                C25711 +
            (((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C32138 +
             ((C4274 + C4275) * C118 + (C4276 + C4277) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C2886 * C50838 + C2885 * C118) * C50949 +
             ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
                C50759 +
            ((C35205 * C50838 + C35204 * C118) * C50949 +
             ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
                C25711) *
               C1358) *
              C51071 +
          (((C2508 * C32138 + (C35208 * C118 + C35209 * C50838) * C50949) *
                C25711 +
            (((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C32138 +
             ((C2881 + C2882) * C118 + (C2883 + C2884) * C50838) * C50949) *
                C50759) *
               C1358 -
           ((((C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                  C50838 +
              (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                  C118) *
                 C50949 +
             ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C32138) *
                C50759 +
            (((C4277 + C4276) * C50838 + (C4275 + C4274) * C118) * C50949 +
             C2698 * C32138) *
                C25711) *
               C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C118 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
                C25711 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
             (C35206 * C118 + C35207 * C50838) * C50949) *
                C50759) *
               C51086 -
           ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
             ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
                C50759 +
            (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C50838 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C118) *
                 C32138) *
                C25711) *
               C51074 +
           ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                  C118 +
              (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                  C50838) *
                 C32138 +
             ((C19031 + C19030) * C118 + (C19033 + C19032) * C50838) * C50949) *
                C25711 +
            (((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C32138 +
             ((C35412 + C35413) * C118 + (C35414 + C35415) * C50838) * C50949) *
                C50759) *
               C1463) *
              C1464 +
          (((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C32138 +
             ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C50949) *
                C25711 +
            (((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C32138 +
             ((C4274 + C4275) * C118 + (C4276 + C4277) * C50838) * C50949) *
                C50759) *
               C51074 -
           (((C2886 * C50838 + C2885 * C118) * C50949 +
             ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
                C50759 +
            ((C35205 * C50838 + C35204 * C118) * C50949 +
             ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
                C25711) *
               C51086 -
           ((((C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                  C50838 +
              (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                  C118) *
                 C50949 +
             ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C32138) *
                C50759 +
            (((C35415 + C35414) * C50838 + (C35413 + C35412) * C118) * C50949 +
             ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C32138) *
                C25711) *
               C1463) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C458 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C51042 -
              (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
                 C32138 +
             ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
              (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
                 C50949) *
                C25711 +
            (((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
              C35204 * C459 - C35205 * C50850) *
                 C32138 +
             (C35206 * C458 + C35207 * C51042 - C19194 * C459 -
              C19195 * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C19022 + C19023) * C459 -
              ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                   C51042 +
               (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                   C458) +
              (C19024 + C19025) * C50850) *
                 C32138 +
             ((C19026 + C19027) * C459 -
              ((C19025 + C19024) * C51042 + (C19023 + C19022) * C458) +
              (C19028 + C19029) * C50850) *
                 C50949) *
                C25711 +
            ((C36906 * C459 -
              ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
              C36907 * C50850) *
                 C32138 +
             ((C19983 + C19982) * C459 - (C36908 * C51042 + C36909 * C458) +
              (C19985 + C19984) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C1464 +
          ((((C35206 * C459 -
              ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
              C35207 * C50850) *
                 C32138 +
             (C35934 * C459 - (C35205 * C51042 + C35204 * C458) +
              C35935 * C50850) *
                 C50949) *
                C25711 +
            ((C35208 * C459 -
              ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
              C35209 * C50850) *
                 C32138 +
             ((C3496 + C3497) * C459 - (C2886 * C51042 + C2885 * C458) +
              (C3498 + C3499) * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C2689 + C2688) * C458 + (C2687 + C2686) * C51042 -
              C36909 * C459 - C36908 * C50850) *
                 C32138 +
             (C36906 * C458 + C36907 * C51042 - (C19982 + C19983) * C459 -
              (C19984 + C19985) * C50850) *
                 C50949) *
                C25711 +
            (((C2685 + C2684) * C458 + (C2683 + C2682) * C51042 -
              (C4275 + C4274) * C459 - (C4277 + C4276) * C50850) *
                 C32138 +
             ((C4274 + C4275) * C458 + (C4276 + C4277) * C51042 -
              (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 +
               C51053 * C1162) *
                  C459 -
              (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 +
               C51053 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C1730 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C1728 -
              (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
                 C32138 +
             ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
              (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
                 C50949) *
                C25711 +
            (((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
              C35204 * C1731 - C35205 * C50850) *
                 C32138 +
             (C35206 * C1730 + C35207 * C1728 - C19194 * C1731 -
              C19195 * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C19022 + C19023) * C1731 -
              ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                   C1728 +
               (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                   C1730) +
              (C19024 + C19025) * C50850) *
                 C32138 +
             ((C19026 + C19027) * C1731 -
              ((C19025 + C19024) * C1728 + (C19023 + C19022) * C1730) +
              (C19028 + C19029) * C50850) *
                 C50949) *
                C25711 +
            ((C36906 * C1731 -
              ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
              C36907 * C50850) *
                 C32138 +
             ((C19983 + C19982) * C1731 - (C36908 * C1728 + C36909 * C1730) +
              (C19985 + C19984) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C51033 +
          ((((C35206 * C1731 -
              ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
              C35207 * C50850) *
                 C32138 +
             (C35934 * C1731 - (C35205 * C1728 + C35204 * C1730) +
              C35935 * C50850) *
                 C50949) *
                C25711 +
            ((C35208 * C1731 -
              ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
              C35209 * C50850) *
                 C32138 +
             ((C3496 + C3497) * C1731 - (C2886 * C1728 + C2885 * C1730) +
              (C3498 + C3499) * C50850) *
                 C50949) *
                C50759) *
               C1358 +
           ((((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
              C36909 * C1731 - C36908 * C50850) *
                 C32138 +
             (C36906 * C1730 + C36907 * C1728 - (C19982 + C19983) * C1731 -
              (C19984 + C19985) * C50850) *
                 C50949) *
                C25711 +
            (((C2685 + C2684) * C1730 + (C2683 + C2682) * C1728 -
              (C4275 + C4274) * C1731 - (C4277 + C4276) * C50850) *
                 C32138 +
             ((C4274 + C4275) * C1730 + (C4276 + C4277) * C1728 -
              (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 +
               C51053 * C1162) *
                  C1731 -
              (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 +
               C51053 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
                C32138 +
            ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
             (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
             C35204 * C1731 - C35205 * C50850) *
                C32138 +
            (C35206 * C1730 + C35207 * C1728 - C19194 * C1731 -
             C19195 * C50850) *
                C50949) *
               C50759) *
              C51086 +
          ((((C19022 + C19023) * C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C19024 + C19025) * C50850) *
                C32138 +
            ((C19026 + C19027) * C1731 -
             ((C19025 + C19024) * C1728 + (C19023 + C19022) * C1730) +
             (C19028 + C19029) * C50850) *
                C50949) *
               C25711 +
           ((C36906 * C1731 -
             ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
             C36907 * C50850) *
                C32138 +
            ((C19983 + C19982) * C1731 - (C36908 * C1728 + C36909 * C1730) +
             (C19985 + C19984) * C50850) *
                C50949) *
               C50759) *
              C51074 +
          ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C1730 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C1728 -
             (C19030 + C19031) * C1731 - (C19032 + C19033) * C50850) *
                C32138 +
            ((C19031 + C19030) * C1730 + (C19033 + C19032) * C1728 -
             (C19034 + C19035) * C1731 - (C19036 + C19037) * C50850) *
                C50949) *
               C25711 +
           (((C3054 + C3055) * C1730 + (C3056 + C3057) * C1728 -
             (C35413 + C35412) * C1731 - (C35415 + C35414) * C50850) *
                C32138 +
            ((C35412 + C35413) * C1730 + (C35414 + C35415) * C1728 -
             (C2450 * C9336 + C50923 * C9339 + C2449 * C3646 + C51053 * C3650) *
                 C1731 -
             (C2450 * C9340 + C50923 * C9342 + C2449 * C3651 + C51053 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1999 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51087 -
             (C18592 + C18593) * C2000 - (C18594 + C18595) * C51077 +
             C19184 * C2001 + C19185 * C1998) *
                C32138 +
            ((C18593 + C18592) * C1999 + (C18595 + C18594) * C51087 -
             (C18596 + C18597) * C2000 - (C18598 + C18599) * C51077 +
             (C19204 + C19205) * C2001 + (C19206 + C19207) * C1998) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C1999 + (C2486 + C2487) * C51087 -
             C35204 * C2000 - C35205 * C51077 + C35934 * C2001 +
             C35935 * C1998) *
                C32138 +
            (C35206 * C1999 + C35207 * C51087 - C19194 * C2000 -
             C19195 * C51077 + (C19209 + C19208) * C2001 +
             (C19211 + C19210) * C1998) *
                C50949) *
               C50759) *
              C1358 +
          ((((C19022 + C19023) * C2000 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C51087 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1999) +
             (C19024 + C19025) * C51077 - C19358 * C2001 - C19359 * C1998) *
                C32138 +
            ((C19026 + C19027) * C2000 -
             ((C19025 + C19024) * C51087 + (C19023 + C19022) * C1999) +
             (C19028 + C19029) * C51077 - (C19368 + C19369) * C2001 -
             (C19370 + C19371) * C1998) *
                C50949) *
               C25711 +
           ((C36906 * C2000 -
             ((C2686 + C2687) * C51087 + (C2688 + C2689) * C1999) +
             C36907 * C51077 - (C19982 + C19983) * C2001 -
             (C19984 + C19985) * C1998) *
                C32138 +
            ((C19983 + C19982) * C2000 - (C36908 * C51087 + C36909 * C1999) +
             (C19985 + C19984) * C51077 -
             (C2450 * C9442 + C50923 * C9445 + C2449 * C3756 + C51053 * C3760) *
                 C2001 -
             (C2450 * C9446 + C50923 * C9448 + C2449 * C3761 + C51053 * C3765) *
                 C1998) *
                C50949) *
               C50759) *
              C50824) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C118 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
                C25711 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
             (C35206 * C118 + C35207 * C50838) * C50949) *
                C50759) *
               C630 -
           ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
             ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
                C50759 +
            (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C50838 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C118) *
                 C32138) *
                C25711) *
               C631 +
           ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                  C118 +
              (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                  C50838) *
                 C32138 +
             ((C19031 + C19030) * C118 + (C19033 + C19032) * C50838) * C50949) *
                C25711 +
            (((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C32138 +
             ((C35412 + C35413) * C118 + (C35414 + C35415) * C50838) * C50949) *
                C50759) *
               C632) *
              C51033 +
          (((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C32138 +
             ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C50949) *
                C25711 +
            (((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C32138 +
             ((C4274 + C4275) * C118 + (C4276 + C4277) * C50838) * C50949) *
                C50759) *
               C631 -
           (((C2886 * C50838 + C2885 * C118) * C50949 +
             ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
                C50759 +
            ((C35205 * C50838 + C35204 * C118) * C50949 +
             ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
                C25711) *
               C630 -
           ((((C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                  C50838 +
              (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                  C118) *
                 C50949 +
             ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C32138) *
                C50759 +
            (((C35415 + C35414) * C50838 + (C35413 + C35412) * C118) * C50949 +
             ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C32138) *
                C25711) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
               C25711 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
            ((C2873 + C2872) * C118 + (C2875 + C2874) * C50838) * C50949) *
               C50759) *
              C50808 * C113 -
          (((C2886 * C50838 + C2885 * C118) * C50949 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
               C50759 +
           (((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C50949 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
               C25711) *
              C50808 * C114 +
          ((C2508 * C32138 +
            ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C50949) *
               C25711 +
           (((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C32138 +
            ((C2881 + C2882) * C118 + (C2883 + C2884) * C50838) * C50949) *
               C50759) *
              C50808 * C115 -
          ((((C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                 C50838 +
             (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                 C118) *
                C50949 +
            ((C2499 + C2498) * C50838 + (C2497 + C2496) * C118) * C32138) *
               C50759 +
           (((C2884 + C2883) * C50838 + (C2882 + C2881) * C118) * C50949 +
            C2509 * C32138) *
               C25711) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C997 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C994 -
             (C18592 + C18593) * C998 - (C18594 + C18595) * C995 +
             C19184 * C999 + C19185 * C996) *
                C32138 +
            ((C18593 + C18592) * C997 + (C18595 + C18594) * C994 -
             (C18596 + C18597) * C998 - (C18598 + C18599) * C995 +
             (C19204 + C19205) * C999 + (C19206 + C19207) * C996) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C997 + (C2486 + C2487) * C994 - C35204 * C998 -
             C35205 * C995 + C35934 * C999 + C35935 * C996) *
                C32138 +
            (C35206 * C997 + C35207 * C994 - C19194 * C998 - C19195 * C995 +
             (C19209 + C19208) * C999 + (C19211 + C19210) * C996) *
                C50949) *
               C50759) *
              C50808 * C51033 +
          (((C35206 * C998 - ((C2487 + C2486) * C994 + (C2485 + C2484) * C997) +
             C35207 * C995 - C19194 * C999 - C19195 * C996) *
                C32138 +
            (C35934 * C998 - (C35205 * C994 + C35204 * C997) + C35935 * C995 -
             (C19208 + C19209) * C999 - (C19210 + C19211) * C996) *
                C50949) *
               C25711 +
           ((C35208 * C998 - ((C2491 + C2490) * C994 + (C2489 + C2488) * C997) +
             C35209 * C995 - (C3497 + C3496) * C999 - (C3499 + C3498) * C996) *
                C32138 +
            ((C3496 + C3497) * C998 - (C2886 * C994 + C2885 * C997) +
             (C3498 + C3499) * C995 -
             (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
                 C999 -
             (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
                 C996) *
                C50949) *
               C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
               C25711 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
            (C35206 * C118 + C35207 * C50838) * C50949) *
               C50759) *
              C745 -
          ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
               C50759 +
           (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C32138) *
               C25711) *
              C746 +
          ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C32138 +
            ((C19031 + C19030) * C118 + (C19033 + C19032) * C50838) * C50949) *
               C25711 +
           (((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C32138 +
            ((C35412 + C35413) * C118 + (C35414 + C35415) * C50838) * C50949) *
               C50759) *
              C747 -
          ((((C2450 * C9022 + C50923 * C9024 + C2449 * C3323 + C51053 * C3327) *
                 C50838 +
             (C2450 * C9018 + C50923 * C9021 + C2449 * C3318 + C51053 * C3322) *
                 C118) *
                C50949 +
            ((C2450 * C3164 + C50923 * C3169 + C2449 * C758 + C51053 * C764) *
                 C50838 +
             (C2450 * C3160 + C50923 * C3165 + C2449 * C752 + C51053 * C759) *
                 C118) *
                C32138) *
               C50759 +
           (((C2450 * C9020 + C50923 * C9023 + C2449 * C3321 + C51053 * C3326) *
                 C50838 +
             (C2450 * C9017 + C50923 * C9019 + C2449 * C3317 + C51053 * C3320) *
                 C118) *
                C50949 +
            ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                 C50838 +
             (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                 C118) *
                C32138) *
               C25711) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C118 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
                C25711 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
             ((C2873 + C2872) * C118 + (C2875 + C2874) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
             ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
                C50759 +
            (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C50838 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C118) *
                 C32138) *
                C25711) *
               C50824) *
              C295 +
          (((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C32138 +
             ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C50949) *
                C25711 +
            (((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C32138 +
             ((C4274 + C4275) * C118 + (C4276 + C4277) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C2886 * C50838 + C2885 * C118) * C50949 +
             ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
                C50759 +
            (((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C50949 +
             ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
                C25711) *
               C51040) *
              C296 +
          (((C2508 * C32138 +
             ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C50949) *
                C25711 +
            (((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C32138 +
             ((C2881 + C2882) * C118 + (C2883 + C2884) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                  C50838 +
              (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                  C118) *
                 C50949 +
             ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C32138) *
                C50759 +
            (((C4277 + C4276) * C50838 + (C4275 + C4274) * C118) * C50949 +
             C2698 * C32138) *
                C25711) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C997 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C994 -
             (C18592 + C18593) * C998 - (C18594 + C18595) * C995 +
             C19184 * C999 + C19185 * C996) *
                C32138 +
            ((C18593 + C18592) * C997 + (C18595 + C18594) * C994 -
             (C18596 + C18597) * C998 - (C18598 + C18599) * C995 +
             (C19204 + C19205) * C999 + (C19206 + C19207) * C996) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C997 + (C2486 + C2487) * C994 - C35204 * C998 -
             C35205 * C995 + C35934 * C999 + C35935 * C996) *
                C32138 +
            (C35206 * C997 + C35207 * C994 - C19194 * C998 - C19195 * C995 +
             (C19209 + C19208) * C999 + (C19211 + C19210) * C996) *
                C50949) *
               C50759) *
              C51040 +
          ((((C19022 + C19023) * C998 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C994 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C997) +
             (C19024 + C19025) * C995 - C19358 * C999 - C19359 * C996) *
                C32138 +
            ((C19026 + C19027) * C998 -
             ((C19025 + C19024) * C994 + (C19023 + C19022) * C997) +
             (C19028 + C19029) * C995 - (C19368 + C19369) * C999 -
             (C19370 + C19371) * C996) *
                C50949) *
               C25711 +
           (((C4270 + C4271) * C998 -
             ((C2686 + C2687) * C994 + (C2688 + C2689) * C997) +
             (C4272 + C4273) * C995 - (C19982 + C19983) * C999 -
             (C19984 + C19985) * C996) *
                C32138 +
            ((C19983 + C19982) * C998 -
             ((C4273 + C4272) * C994 + (C4271 + C4270) * C997) +
             (C19985 + C19984) * C995 -
             (C2450 * C9442 + C50923 * C9445 + C2449 * C3756 + C51053 * C3760) *
                 C999 -
             (C2450 * C9446 + C50923 * C9448 + C2449 * C3761 + C51053 * C3765) *
                 C996) *
                C50949) *
               C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
                C32138 +
            ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
             (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 - C35204 * C459 -
             C35205 * C50850) *
                C32138 +
            (C35206 * C458 + C35207 * C51042 - C19194 * C459 -
             C19195 * C50850) *
                C50949) *
               C50759) *
              C630 +
          ((((C19022 + C19023) * C459 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C51042 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C458) +
             (C19024 + C19025) * C50850) *
                C32138 +
            ((C19026 + C19027) * C459 -
             ((C19025 + C19024) * C51042 + (C19023 + C19022) * C458) +
             (C19028 + C19029) * C50850) *
                C50949) *
               C25711 +
           (((C4270 + C4271) * C459 -
             ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
             (C4272 + C4273) * C50850) *
                C32138 +
            ((C19983 + C19982) * C459 -
             ((C4273 + C4272) * C51042 + (C4271 + C4270) * C458) +
             (C19985 + C19984) * C50850) *
                C50949) *
               C50759) *
              C631 +
          ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C458 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C51042 -
             (C19030 + C19031) * C459 - (C19032 + C19033) * C50850) *
                C32138 +
            ((C19031 + C19030) * C458 + (C19033 + C19032) * C51042 -
             (C19034 + C19035) * C459 - (C19036 + C19037) * C50850) *
                C50949) *
               C25711 +
           (((C3054 + C3055) * C458 + (C3056 + C3057) * C51042 -
             (C35413 + C35412) * C459 - (C35415 + C35414) * C50850) *
                C32138 +
            ((C35412 + C35413) * C458 + (C35414 + C35415) * C51042 -
             (C2450 * C9336 + C50923 * C9339 + C2449 * C3646 + C51053 * C3650) *
                 C459 -
             (C2450 * C9340 + C50923 * C9342 + C2449 * C3651 + C51053 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
                C32138 +
            ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
             (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 - C35204 * C459 -
             C35205 * C50850) *
                C32138 +
            (C35206 * C458 + C35207 * C51042 - C19194 * C459 -
             C19195 * C50850) *
                C50949) *
               C50759) *
              C50808 * C295 +
          (((C35206 * C459 -
             ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
             C35207 * C50850) *
                C32138 +
            ((C3492 + C3493) * C459 - (C35205 * C51042 + C35204 * C458) +
             (C3494 + C3495) * C50850) *
                C50949) *
               C25711 +
           ((C35208 * C459 -
             ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
             C35209 * C50850) *
                C32138 +
            ((C3496 + C3497) * C459 - (C2886 * C51042 + C2885 * C458) +
             (C3498 + C3499) * C50850) *
                C50949) *
               C50759) *
              C50808 * C296 +
          ((C2890 * C32138 +
            (C35208 * C458 + C35209 * C51042 - (C3497 + C3496) * C459 -
             (C3499 + C3498) * C50850) *
                C50949) *
               C25711 +
           (((C2495 + C2494) * C458 + (C2493 + C2492) * C51042 -
             (C2882 + C2881) * C459 - (C2884 + C2883) * C50850) *
                C32138 +
            ((C2881 + C2882) * C458 + (C2883 + C2884) * C51042 -
             (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                 C459 -
             (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1240 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1236 -
            (C18592 + C18593) * C1241 - (C18594 + C18595) * C1237 +
            C19184 * C1242 + C19185 * C1238 - C19474 * C1243 - C19475 * C1239) *
               C32138 +
           ((C18593 + C18592) * C1240 + (C18595 + C18594) * C1236 -
            (C18596 + C18597) * C1241 - (C18598 + C18599) * C1237 +
            (C19204 + C19205) * C1242 + (C19206 + C19207) * C1238 -
            (C19484 + C19485) * C1243 - (C19486 + C19487) * C1239) *
               C50949) *
              C25711 +
          (((C2484 + C2485) * C1240 + (C2486 + C2487) * C1236 - C35204 * C1241 -
            C35205 * C1237 + C35934 * C1242 + C35935 * C1238 -
            (C19208 + C19209) * C1243 - (C19210 + C19211) * C1239) *
               C32138 +
           (C35206 * C1240 + C35207 * C1236 - C19194 * C1241 - C19195 * C1237 +
            (C19209 + C19208) * C1242 + (C19211 + C19210) * C1238 -
            (C2450 * C16577 + C50923 * C16578 + C2449 * C6556 +
             C51053 * C6560) *
                C1243 -
            (C2450 * C16579 + C50923 * C16580 + C2449 * C6561 +
             C51053 * C6565) *
                C1239) *
               C50949) *
              C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
                C32138 +
            ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
             (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
             C35204 * C1731 - C35205 * C50850) *
                C32138 +
            (C35206 * C1730 + C35207 * C1728 - C19194 * C1731 -
             C19195 * C50850) *
                C50949) *
               C50759) *
              C50808 * C51085 +
          (((C35206 * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             C35207 * C50850) *
                C32138 +
            (C35934 * C1731 - (C35205 * C1728 + C35204 * C1730) +
             C35935 * C50850) *
                C50949) *
               C25711 +
           ((C35208 * C1731 -
             ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
             C35209 * C50850) *
                C32138 +
            ((C3496 + C3497) * C1731 - (C2886 * C1728 + C2885 * C1730) +
             (C3498 + C3499) * C50850) *
                C50949) *
               C50759) *
              C50808 * C51071 +
          ((C4430 * C32138 +
            (C35208 * C1730 + C35209 * C1728 - (C3497 + C3496) * C1731 -
             (C3499 + C3498) * C50850) *
                C50949) *
               C25711 +
           (((C2495 + C2494) * C1730 + (C2493 + C2492) * C1728 -
             (C2882 + C2881) * C1731 - (C2884 + C2883) * C50850) *
                C32138 +
            ((C2881 + C2882) * C1730 + (C2883 + C2884) * C1728 -
             (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                 C1731 -
             (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C1730 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C1728 -
              (C18592 + C18593) * C1731 - (C18594 + C18595) * C50850) *
                 C32138 +
             ((C18593 + C18592) * C1730 + (C18595 + C18594) * C1728 -
              (C18596 + C18597) * C1731 - (C18598 + C18599) * C50850) *
                 C50949) *
                C25711 +
            (((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
              C35204 * C1731 - C35205 * C50850) *
                 C32138 +
             (C35206 * C1730 + C35207 * C1728 - C19194 * C1731 -
              C19195 * C50850) *
                 C50949) *
                C50759) *
               C51040 +
           ((((C19022 + C19023) * C1731 -
              ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                   C1728 +
               (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                   C1730) +
              (C19024 + C19025) * C50850) *
                 C32138 +
             ((C19026 + C19027) * C1731 -
              ((C19025 + C19024) * C1728 + (C19023 + C19022) * C1730) +
              (C19028 + C19029) * C50850) *
                 C50949) *
                C25711 +
            ((C36906 * C1731 -
              ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
              C36907 * C50850) *
                 C32138 +
             ((C19983 + C19982) * C1731 - (C36908 * C1728 + C36909 * C1730) +
              (C19985 + C19984) * C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C1464 +
          ((((C35206 * C1731 -
              ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
              C35207 * C50850) *
                 C32138 +
             (C35934 * C1731 - (C35205 * C1728 + C35204 * C1730) +
              C35935 * C50850) *
                 C50949) *
                C25711 +
            ((C35208 * C1731 -
              ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
              C35209 * C50850) *
                 C32138 +
             ((C3496 + C3497) * C1731 - (C2886 * C1728 + C2885 * C1730) +
              (C3498 + C3499) * C50850) *
                 C50949) *
                C50759) *
               C51040 +
           ((((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
              C36909 * C1731 - C36908 * C50850) *
                 C32138 +
             (C36906 * C1730 + C36907 * C1728 - (C19982 + C19983) * C1731 -
              (C19984 + C19985) * C50850) *
                 C50949) *
                C25711 +
            (((C2685 + C2684) * C1730 + (C2683 + C2682) * C1728 -
              (C4275 + C4274) * C1731 - (C4277 + C4276) * C50850) *
                 C32138 +
             ((C4274 + C4275) * C1730 + (C4276 + C4277) * C1728 -
              (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 +
               C51053 * C1162) *
                  C1731 -
              (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 +
               C51053 * C1168) *
                  C50850) *
                 C50949) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1999 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51087 -
             (C18592 + C18593) * C2000 - (C18594 + C18595) * C51077 +
             C19184 * C2001 + C19185 * C1998) *
                C32138 +
            ((C18593 + C18592) * C1999 + (C18595 + C18594) * C51087 -
             (C18596 + C18597) * C2000 - (C18598 + C18599) * C51077 +
             (C19204 + C19205) * C2001 + (C19206 + C19207) * C1998) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C1999 + (C2486 + C2487) * C51087 -
             C35204 * C2000 - C35205 * C51077 + C35934 * C2001 +
             C35935 * C1998) *
                C32138 +
            (C35206 * C1999 + C35207 * C51087 - C19194 * C2000 -
             C19195 * C51077 + (C19209 + C19208) * C2001 +
             (C19211 + C19210) * C1998) *
                C50949) *
               C50759) *
              C50808 * C1464 +
          (((C35206 * C2000 -
             ((C2487 + C2486) * C51087 + (C2485 + C2484) * C1999) +
             C35207 * C51077 - C19194 * C2001 - C19195 * C1998) *
                C32138 +
            (C35934 * C2000 - (C35205 * C51087 + C35204 * C1999) +
             C35935 * C51077 - (C19208 + C19209) * C2001 -
             (C19210 + C19211) * C1998) *
                C50949) *
               C25711 +
           ((C35208 * C2000 -
             ((C2491 + C2490) * C51087 + (C2489 + C2488) * C1999) +
             C35209 * C51077 - (C3497 + C3496) * C2001 -
             (C3499 + C3498) * C1998) *
                C32138 +
            ((C3496 + C3497) * C2000 - (C2886 * C51087 + C2885 * C1999) +
             (C3498 + C3499) * C51077 -
             (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
                 C2001 -
             (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
                 C1998) *
                C50949) *
               C50759) *
              C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
               C25711 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
            ((C2873 + C2872) * C118 + (C2875 + C2874) * C50838) * C50949) *
               C50759) *
              C50808 * C113 -
          (((C2886 * C50838 + C2885 * C118) * C50949 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
               C50759 +
           (((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C50949 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
               C25711) *
              C50808 * C114 +
          ((C2508 * C32138 +
            ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C50949) *
               C25711 +
           (((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C32138 +
            ((C2881 + C2882) * C118 + (C2883 + C2884) * C50838) * C50949) *
               C50759) *
              C50808 * C115 -
          ((((C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                 C50838 +
             (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                 C118) *
                C50949 +
            ((C2499 + C2498) * C50838 + (C2497 + C2496) * C118) * C32138) *
               C50759 +
           (((C2884 + C2883) * C50838 + (C2882 + C2881) * C118) * C50949 +
            C2509 * C32138) *
               C25711) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C118 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
                C25711 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
             (C35206 * C118 + C35207 * C50838) * C50949) *
                C50759) *
               C630 -
           ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
             ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
                C50759 +
            (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C50838 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C118) *
                 C32138) *
                C25711) *
               C631 +
           ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                  C118 +
              (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                  C50838) *
                 C32138 +
             ((C19031 + C19030) * C118 + (C19033 + C19032) * C50838) * C50949) *
                C25711 +
            (((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C32138 +
             ((C35412 + C35413) * C118 + (C35414 + C35415) * C50838) * C50949) *
                C50759) *
               C632) *
              C51033 +
          (((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C32138 +
             ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C50949) *
                C25711 +
            (((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C32138 +
             ((C4274 + C4275) * C118 + (C4276 + C4277) * C50838) * C50949) *
                C50759) *
               C631 -
           (((C2886 * C50838 + C2885 * C118) * C50949 +
             ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
                C50759 +
            ((C35205 * C50838 + C35204 * C118) * C50949 +
             ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
                C25711) *
               C630 -
           ((((C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                  C50838 +
              (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                  C118) *
                 C50949 +
             ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C32138) *
                C50759 +
            (((C35415 + C35414) * C50838 + (C35413 + C35412) * C118) * C50949 +
             ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C32138) *
                C25711) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                  C118 +
              (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                  C50838) *
                 C32138 +
             ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
                C25711 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
             ((C2873 + C2872) * C118 + (C2875 + C2874) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
             ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
                C50759 +
            (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C50838 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C118) *
                 C32138) *
                C25711) *
               C50824) *
              C295 +
          (((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C32138 +
             ((C4270 + C4271) * C118 + (C4272 + C4273) * C50838) * C50949) *
                C25711 +
            (((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C32138 +
             ((C4274 + C4275) * C118 + (C4276 + C4277) * C50838) * C50949) *
                C50759) *
               C50824 -
           (((C2886 * C50838 + C2885 * C118) * C50949 +
             ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C32138) *
                C50759 +
            (((C2874 + C2875) * C50838 + (C2872 + C2873) * C118) * C50949 +
             ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C32138) *
                C25711) *
               C51040) *
              C296 +
          (((C2508 * C32138 +
             ((C2878 + C2877) * C118 + (C2880 + C2879) * C50838) * C50949) *
                C25711 +
            (((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C32138 +
             ((C2881 + C2882) * C118 + (C2883 + C2884) * C50838) * C50949) *
                C50759) *
               C51040 -
           ((((C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                  C50838 +
              (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                  C118) *
                 C50949 +
             ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C32138) *
                C50759 +
            (((C4277 + C4276) * C50838 + (C4275 + C4274) * C118) * C50949 +
             C2698 * C32138) *
                C25711) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C32138 +
            ((C18593 + C18592) * C118 + (C18595 + C18594) * C50838) * C50949) *
               C25711 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C32138 +
            (C35206 * C118 + C35207 * C50838) * C50949) *
               C50759) *
              C745 -
          ((((C4273 + C4272) * C50838 + (C4271 + C4270) * C118) * C50949 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C32138) *
               C50759 +
           (((C19025 + C19024) * C50838 + (C19023 + C19022) * C118) * C50949 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C32138) *
               C25711) *
              C746 +
          ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C32138 +
            ((C19031 + C19030) * C118 + (C19033 + C19032) * C50838) * C50949) *
               C25711 +
           (((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C32138 +
            ((C35412 + C35413) * C118 + (C35414 + C35415) * C50838) * C50949) *
               C50759) *
              C747 -
          ((((C2450 * C9022 + C50923 * C9024 + C2449 * C3323 + C51053 * C3327) *
                 C50838 +
             (C2450 * C9018 + C50923 * C9021 + C2449 * C3318 + C51053 * C3322) *
                 C118) *
                C50949 +
            ((C2450 * C3164 + C50923 * C3169 + C2449 * C758 + C51053 * C764) *
                 C50838 +
             (C2450 * C3160 + C50923 * C3165 + C2449 * C752 + C51053 * C759) *
                 C118) *
                C32138) *
               C50759 +
           (((C2450 * C9020 + C50923 * C9023 + C2449 * C3321 + C51053 * C3326) *
                 C50838 +
             (C2450 * C9017 + C50923 * C9019 + C2449 * C3317 + C51053 * C3320) *
                 C118) *
                C50949 +
            ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                 C50838 +
             (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                 C118) *
                C32138) *
               C25711) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
                C32138 +
            ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
             (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 - C35204 * C459 -
             C35205 * C50850) *
                C32138 +
            (C35206 * C458 + C35207 * C51042 - C19194 * C459 -
             C19195 * C50850) *
                C50949) *
               C50759) *
              C50808 * C295 +
          (((C35206 * C459 -
             ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
             C35207 * C50850) *
                C32138 +
            ((C3492 + C3493) * C459 - (C35205 * C51042 + C35204 * C458) +
             (C3494 + C3495) * C50850) *
                C50949) *
               C25711 +
           ((C35208 * C459 -
             ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
             C35209 * C50850) *
                C32138 +
            ((C3496 + C3497) * C459 - (C2886 * C51042 + C2885 * C458) +
             (C3498 + C3499) * C50850) *
                C50949) *
               C50759) *
              C50808 * C296 +
          ((C2890 * C32138 +
            (C35208 * C458 + C35209 * C51042 - (C3497 + C3496) * C459 -
             (C3499 + C3498) * C50850) *
                C50949) *
               C25711 +
           (((C2495 + C2494) * C458 + (C2493 + C2492) * C51042 -
             (C2882 + C2881) * C459 - (C2884 + C2883) * C50850) *
                C32138 +
            ((C2881 + C2882) * C458 + (C2883 + C2884) * C51042 -
             (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                 C459 -
             (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                 C50850) *
                C50949) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C18592 + C18593) * C459 - (C18594 + C18595) * C50850) *
                C32138 +
            ((C18593 + C18592) * C458 + (C18595 + C18594) * C51042 -
             (C18596 + C18597) * C459 - (C18598 + C18599) * C50850) *
                C50949) *
               C25711 +
           (((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 - C35204 * C459 -
             C35205 * C50850) *
                C32138 +
            (C35206 * C458 + C35207 * C51042 - C19194 * C459 -
             C19195 * C50850) *
                C50949) *
               C50759) *
              C630 +
          ((((C19022 + C19023) * C459 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C51042 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C458) +
             (C19024 + C19025) * C50850) *
                C32138 +
            ((C19026 + C19027) * C459 -
             ((C19025 + C19024) * C51042 + (C19023 + C19022) * C458) +
             (C19028 + C19029) * C50850) *
                C50949) *
               C25711 +
           (((C4270 + C4271) * C459 -
             ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
             (C4272 + C4273) * C50850) *
                C32138 +
            ((C19983 + C19982) * C459 -
             ((C4273 + C4272) * C51042 + (C4271 + C4270) * C458) +
             (C19985 + C19984) * C50850) *
                C50949) *
               C50759) *
              C631 +
          ((((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C458 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C51042 -
             (C19030 + C19031) * C459 - (C19032 + C19033) * C50850) *
                C32138 +
            ((C19031 + C19030) * C458 + (C19033 + C19032) * C51042 -
             (C19034 + C19035) * C459 - (C19036 + C19037) * C50850) *
                C50949) *
               C25711 +
           (((C3054 + C3055) * C458 + (C3056 + C3057) * C51042 -
             (C35413 + C35412) * C459 - (C35415 + C35414) * C50850) *
                C32138 +
            ((C35412 + C35413) * C458 + (C35414 + C35415) * C51042 -
             (C2450 * C9336 + C50923 * C9339 + C2449 * C3646 + C51053 * C3650) *
                 C459 -
             (C2450 * C9340 + C50923 * C9342 + C2449 * C3651 + C51053 * C3655) *
                 C50850) *
                C50949) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51089 +
             (C5693 * C118 + C5694 * C50838) * C51083 +
             (C6284 * C118 + C6285 * C50838) * C38301) *
                C25711 +
            ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
             (C15560 + C15561) * C38301) *
                C50759) *
               C1358 -
           (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
             (C351 + C352) * C51089) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C38301 +
             (C6115 * C50838 + C6114 * C118) * C51083 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51089) *
                C25711) *
               C50824) *
              C51085 +
          ((((C352 + C351) * C51089 + (C5524 + C5523) * C51083 +
             (C15713 + C15712) * C38301) *
                C25711 +
            ((C350 + C349) * C51089 + (C5521 + C5520) * C51083 +
             (C15714 + C15715) * C38301) *
                C50759) *
               C50824 -
           (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
             (C181 + C180) * C51089) *
                C50759 +
            ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
             (C179 + C178) * C51089) *
                C25711) *
               C1358) *
              C51071 +
          (((C188 * C51089 + C5368 * C51083 + (C15563 + C15562) * C38301) *
                C25711 +
            (C189 * C51089 + (C5364 + C5363) * C51083 +
             (C15564 + C15565) * C38301) *
                C50759) *
               C1358 -
           ((((C117 * C1165 + C50907 * C1169) * C50838 +
              (C117 * C1157 + C50907 * C1164) * C118) *
                 C38301 +
             (C5526 + C5525) * C51083 + C355 * C51089) *
                C50759 +
            ((C15715 + C15714) * C38301 + C5527 * C51083 + C356 * C51089) *
                C25711) *
               C50824) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C50907 * C126) * C118 +
                       (C117 * C127 + C50907 * C140) * C50838) *
                          C51089 +
                      (C5693 * C118 + C5694 * C50838) * C51083 +
                      (C6284 * C118 + C6285 * C50838) * C38301) *
                         C25711 +
                     ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
                      (C15560 + C15561) * C38301) *
                         C50759) *
                        C51086 -
                    (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
                      (C351 + C352) * C51089) *
                         C50759 +
                     ((C6453 * C50838 + C6452 * C118) * C38301 +
                      (C6115 * C50838 + C6114 * C118) * C51083 +
                      ((C117 * C310 + C50907 * C319) * C50838 +
                       (C117 * C301 + C50907 * C311) * C118) *
                          C51089) *
                         C25711) *
                        C51074 +
                    ((((C117 * C635 + C50907 * C640) * C118 +
                       (C117 * C641 + C50907 * C650) * C50838) *
                          C51089 +
                      (C6116 * C118 + C6117 * C50838) * C51083 +
                      (C16272 * C118 + C16273 * C50838) * C38301) *
                         C25711 +
                     ((C674 + C675) * C51089 + (C5858 + C5859) * C51083 +
                      (C16022 + C16023) * C38301) *
                         C50759) *
                        C1463) *
                       C1464 +
                   ((((C352 + C351) * C51089 + (C5524 + C5523) * C51083 +
                      (C15713 + C15712) * C38301) *
                         C25711 +
                     ((C350 + C349) * C51089 + (C5521 + C5520) * C51083 +
                      (C15714 + C15715) * C38301) *
                         C50759) *
                        C51074 -
                    (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
                      (C181 + C180) * C51089) *
                         C50759 +
                     ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
                      (C179 + C178) * C51089) *
                         C25711) *
                        C51086 -
                    ((((C117 * C3653 + C50907 * C3656) * C50838 +
                       (C117 * C3647 + C50907 * C3652) * C118) *
                          C38301 +
                      (C5861 + C5860) * C51083 + (C677 + C676) * C51089) *
                         C50759 +
                     ((C16023 + C16022) * C38301 + (C5859 + C5858) * C51083 +
                      (C675 + C674) * C51089) *
                         C25711) *
                        C1463) *
                       C50781)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C458 +
              (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
              C5694 * C50850) *
                 C51089 +
             (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                 C51083 +
             (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                 C38301) *
                C25711 +
            ((C485 + C486 - C519 - C520) * C51089 +
             (C5680 + C5681 - C5682 - C5683) * C51083 +
             (C15862 + C15863 - C15864 - C15865) * C38301) *
                C50759) *
               C1358 +
           (((C6114 * C459 -
              ((C117 * C310 + C50907 * C319) * C51042 +
               (C117 * C301 + C50907 * C311) * C458) +
              C6115 * C50850) *
                 C51089 +
             (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                 C51083 +
             (C16590 * C459 - (C6453 * C51042 + C6452 * C458) +
              C16591 * C50850) *
                 C38301) *
                C25711 +
            ((C1625 - (C1603 + C1604) + C1626) * C51089 +
             (C7060 - (C7061 + C7062) + C7063) * C51083 +
             (C17192 - (C17193 + C17194) + C17195) * C38301) *
                C50759) *
               C50824) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C51089 +
             (C5682 - (C5681 + C5680) + C5683) * C51083 +
             (C15864 - (C15863 + C15862) + C15865) * C38301) *
                C25711 +
            ((C521 - (C492 + C491) + C522) * C51089 +
             (C5687 - (C5686 + C5685) + C5688) * C51083 +
             (C15866 - (C15867 + C15868) + C15869) * C38301) *
                C50759) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C51089 +
             (C7062 + C7061 - C7060 - C7063) * C51083 +
             (C17194 + C17193 - C17192 - C17195) * C38301) *
                C25711 +
            ((C1610 + C1609 - C1627 - C1628) * C51089 +
             (C7066 + C7065 - C7064 - C7067) * C51083 +
             (C6456 * C458 + C6457 * C51042 -
              (C117 * C3757 + C50907 * C3762) * C459 -
              (C117 * C3763 + C50907 * C3766) * C50850) *
                 C38301) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C51089 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C51083 +
             (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                 C38301) *
                C25711 +
            ((C1733 + C1734 - C1735 - C1736) * C51089 +
             (C7214 + C7215 - C7216 - C7217) * C51083 +
             (C17342 + C17343 - C17344 - C17345) * C38301) *
                C50759) *
               C1358 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C51089 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C51083 +
             (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
              C16591 * C50850) *
                 C38301) *
                C25711 +
            ((C1887 - (C1888 + C1889) + C1890) * C51089 +
             (C7426 - (C7427 + C7428) + C7429) * C51083 +
             (C17544 - (C17545 + C17546) + C17547) * C38301) *
                C50759) *
               C50824) *
              C51033 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51089 +
             (C7216 - (C7215 + C7214) + C7217) * C51083 +
             (C17344 - (C17343 + C17342) + C17345) * C38301) *
                C25711 +
            ((C1739 - (C1738 + C1737) + C1740) * C51089 +
             (C7221 - (C7220 + C7219) + C7222) * C51083 +
             (C17346 - (C17347 + C17348) + C17349) * C38301) *
                C50759) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C51089 +
             (C7428 + C7427 - C7426 - C7429) * C51083 +
             (C17546 + C17545 - C17544 - C17547) * C38301) *
                C25711 +
            ((C1893 + C1892 - C1891 - C1894) * C51089 +
             (C7432 + C7431 - C7430 - C7433) * C51083 +
             (C6456 * C1730 + C6457 * C1728 -
              (C117 * C3757 + C50907 * C3762) * C1731 -
              (C117 * C3763 + C50907 * C3766) * C50850) *
                 C38301) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C51089 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C51083 +
            (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                C38301) *
               C25711 +
           ((C1733 + C1734 - C1735 - C1736) * C51089 +
            (C7214 + C7215 - C7216 - C7217) * C51083 +
            (C17342 + C17343 - C17344 - C17345) * C38301) *
               C50759) *
              C51086 +
          (((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C51089 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C51083 +
            (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
             C16591 * C50850) *
                C38301) *
               C25711 +
           ((C1887 - (C1888 + C1889) + C1890) * C51089 +
            (C7426 - (C7427 + C7428) + C7429) * C51083 +
            (C17544 - (C17545 + C17546) + C17547) * C38301) *
               C50759) *
              C51074 +
          ((((C117 * C635 + C50907 * C640) * C1730 +
             (C117 * C641 + C50907 * C650) * C1728 - C6116 * C1731 -
             C6117 * C50850) *
                C51089 +
            (C6116 * C1730 + C6117 * C1728 - C16272 * C1731 - C16273 * C50850) *
                C51083 +
            (C16272 * C1730 + C16273 * C1728 - C21490 * C1731 -
             C21491 * C50850) *
                C38301) *
               C25711 +
           ((C668 * C1730 + C669 * C1728 - C5854 * C1731 - C5855 * C50850) *
                C51089 +
            (C5854 * C1730 + C5855 * C1728 - C16020 * C1731 - C16021 * C50850) *
                C51083 +
            (C16020 * C1730 + C16021 * C1728 -
             (C117 * C9442 + C50907 * C9445) * C1731 -
             (C117 * C9446 + C50907 * C9448) * C50850) *
                C38301) *
               C50759) *
              C1463) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C51089 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C51083 +
            (C6284 * C1999 + C6285 * C51087 - C6572 * C2000 - C6573 * C51077 +
             C16704 * C2001 + C16705 * C1998) *
                C38301) *
               C25711 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51089 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C51083 +
            (C17694 + C17695 - C17696 - C17697 + C17698 + C17699) * C38301) *
               C50759) *
              C1358 +
          (((C6114 * C2000 -
             ((C117 * C310 + C50907 * C319) * C51087 +
              (C117 * C301 + C50907 * C311) * C1999) +
             C6115 * C51077 - C6452 * C2001 - C6453 * C1998) *
                C51089 +
            (C6452 * C2000 - (C6115 * C51087 + C6114 * C1999) + C6453 * C51077 -
             C16590 * C2001 - C16591 * C1998) *
                C51083 +
            (C16590 * C2000 - (C6453 * C51087 + C6452 * C1999) +
             C16591 * C51077 - C21692 * C2001 - C21693 * C1998) *
                C38301) *
               C25711 +
           ((C1619 * C2000 - (C343 * C51087 + C344 * C1999) + C1620 * C51077 -
             C6454 * C2001 - C6455 * C1998) *
                C51089 +
            (C6454 * C2000 - (C1620 * C51087 + C1619 * C1999) + C6455 * C51077 -
             C16592 * C2001 - C16593 * C1998) *
                C51083 +
            (C16592 * C2000 - (C6455 * C51087 + C6454 * C1999) +
             C16593 * C51077 - (C117 * C16577 + C50907 * C16578) * C2001 -
             (C117 * C16579 + C50907 * C16580) * C1998) *
                C38301) *
               C50759) *
              C50824) *
         C50776) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51089 +
             (C5693 * C118 + C5694 * C50838) * C51083 +
             (C6284 * C118 + C6285 * C50838) * C38301) *
                C25711 +
            ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
             (C15560 + C15561) * C38301) *
                C50759) *
               C630 -
           (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
             (C351 + C352) * C51089) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C38301 +
             (C6115 * C50838 + C6114 * C118) * C51083 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51089) *
                C25711) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51089 +
             (C6116 * C118 + C6117 * C50838) * C51083 +
             (C16272 * C118 + C16273 * C50838) * C38301) *
                C25711 +
            ((C674 + C675) * C51089 + (C5858 + C5859) * C51083 +
             (C16022 + C16023) * C38301) *
                C50759) *
               C632) *
              C51033 +
          ((((C352 + C351) * C51089 + (C5524 + C5523) * C51083 +
             (C15713 + C15712) * C38301) *
                C25711 +
            ((C350 + C349) * C51089 + (C5521 + C5520) * C51083 +
             (C15714 + C15715) * C38301) *
                C50759) *
               C631 -
           (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
             (C181 + C180) * C51089) *
                C50759 +
            ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
             (C179 + C178) * C51089) *
                C25711) *
               C630 -
           ((((C117 * C3653 + C50907 * C3656) * C50838 +
              (C117 * C3647 + C50907 * C3652) * C118) *
                 C38301 +
             (C5861 + C5860) * C51083 + (C677 + C676) * C51089) *
                C50759 +
            ((C16023 + C16022) * C38301 + (C5859 + C5858) * C51083 +
             (C675 + C674) * C51089) *
                C25711) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51089 +
            (C5693 * C118 + C5694 * C50838) * C51083 +
            (C6284 * C118 + C6285 * C50838) * C38301) *
               C25711 +
           ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
            (C15560 + C15561) * C38301) *
               C50759) *
              C50808 * C113 -
          (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
            (C181 + C180) * C51089) *
               C50759 +
           ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
            (C179 + C178) * C51089) *
               C25711) *
              C50808 * C114 +
          ((C188 * C51089 + C5368 * C51083 + (C15563 + C15562) * C38301) *
               C25711 +
           (C189 * C51089 + (C5364 + C5363) * C51083 +
            (C15564 + C15565) * C38301) *
               C50759) *
              C50808 * C115 -
          ((((C117 * C1014 + C50907 * C1019) * C50838 +
             (C117 * C1004 + C50907 * C1013) * C118) *
                C38301 +
            (C5367 + C5366) * C51083 + C190 * C51089) *
               C50759 +
           ((C15565 + C15564) * C38301 + C5369 * C51083 + C191 * C51089) *
               C25711) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C51089 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             C6572 * C999 + C6573 * C996) *
                C51083 +
            (C6284 * C997 + C6285 * C994 - C6572 * C998 - C6573 * C995 +
             C16704 * C999 + C16705 * C996) *
                C38301) *
               C25711 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51089 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C51083 +
            (C16420 + C16421 - C16422 - C16423 + C16430 + C16431) * C38301) *
               C50759) *
              C50808 * C51033 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C51089 +
            (C6270 - (C6269 + C6268) + C6271 - C6290 - C6291) * C51083 +
            (C16422 - (C16421 + C16420) + C16423 - C16430 - C16431) * C38301) *
               C25711 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C51089 +
            (C6278 - (C6277 + C6276) + C6279 - C6292 - C6293) * C51083 +
            (C6288 * C998 - (C1048 * C994 + C1047 * C997) + C6289 * C995 -
             (C117 * C6557 + C50907 * C6562) * C999 -
             (C117 * C6563 + C50907 * C6566) * C996) *
                C38301) *
               C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51089 +
            (C5693 * C118 + C5694 * C50838) * C51083 +
            (C6284 * C118 + C6285 * C50838) * C38301) *
               C25711 +
           ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
            (C15560 + C15561) * C38301) *
               C50759) *
              C745 -
          (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
            (C351 + C352) * C51089) *
               C50759 +
           ((C6453 * C50838 + C6452 * C118) * C38301 +
            (C6115 * C50838 + C6114 * C118) * C51083 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C51089) *
               C25711) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C51089 +
            (C6116 * C118 + C6117 * C50838) * C51083 +
            (C16272 * C118 + C16273 * C50838) * C38301) *
               C25711 +
           ((C674 + C675) * C51089 + (C5858 + C5859) * C51083 +
            (C16022 + C16023) * C38301) *
               C50759) *
              C747 -
          ((((C117 * C9340 + C50907 * C9342) * C50838 +
             (C117 * C9336 + C50907 * C9339) * C118) *
                C38301 +
            ((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C51083 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C51089) *
               C50759 +
           (((C117 * C9338 + C50907 * C9341) * C50838 +
             (C117 * C9335 + C50907 * C9337) * C118) *
                C38301 +
            ((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C51083 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C51089) *
               C25711) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51089 +
             (C5693 * C118 + C5694 * C50838) * C51083 +
             (C6284 * C118 + C6285 * C50838) * C38301) *
                C25711 +
            ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
             (C15560 + C15561) * C38301) *
                C50759) *
               C51040 -
           (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
             (C351 + C352) * C51089) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C38301 +
             (C6115 * C50838 + C6114 * C118) * C51083 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51089) *
                C25711) *
               C50824) *
              C295 +
          ((((C352 + C351) * C51089 + (C5524 + C5523) * C51083 +
             (C15713 + C15712) * C38301) *
                C25711 +
            ((C350 + C349) * C51089 + (C5521 + C5520) * C51083 +
             (C15714 + C15715) * C38301) *
                C50759) *
               C50824 -
           (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
             (C181 + C180) * C51089) *
                C50759 +
            ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
             (C179 + C178) * C51089) *
                C25711) *
               C51040) *
              C296 +
          (((C188 * C51089 + C5368 * C51083 + (C15563 + C15562) * C38301) *
                C25711 +
            (C189 * C51089 + (C5364 + C5363) * C51083 +
             (C15564 + C15565) * C38301) *
                C50759) *
               C51040 -
           ((((C117 * C1165 + C50907 * C1169) * C50838 +
              (C117 * C1157 + C50907 * C1164) * C118) *
                 C38301 +
             (C5526 + C5525) * C51083 + C355 * C51089) *
                C50759 +
            ((C15715 + C15714) * C38301 + C5527 * C51083 + C356 * C51089) *
                C25711) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C51089 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             C6572 * C999 + C6573 * C996) *
                C51083 +
            (C6284 * C997 + C6285 * C994 - C6572 * C998 - C6573 * C995 +
             C16704 * C999 + C16705 * C996) *
                C38301) *
               C25711 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51089 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C51083 +
            (C16420 + C16421 - C16422 - C16423 + C16430 + C16431) * C38301) *
               C50759) *
              C51040 +
          (((C6114 * C998 -
             ((C117 * C310 + C50907 * C319) * C994 +
              (C117 * C301 + C50907 * C311) * C997) +
             C6115 * C995 - C6452 * C999 - C6453 * C996) *
                C51089 +
            (C6452 * C998 - (C6115 * C994 + C6114 * C997) + C6453 * C995 -
             C16590 * C999 - C16591 * C996) *
                C51083 +
            (C16590 * C998 - (C6453 * C994 + C6452 * C997) + C16591 * C995 -
             C21692 * C999 - C21693 * C996) *
                C38301) *
               C25711 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C6454 * C999 - C6455 * C996) *
                C51089 +
            (C6454 * C998 - (C1620 * C994 + C1619 * C997) + C6455 * C995 -
             C16592 * C999 - C16593 * C996) *
                C51083 +
            (C16592 * C998 - (C6455 * C994 + C6454 * C997) + C16593 * C995 -
             (C117 * C16577 + C50907 * C16578) * C999 -
             (C117 * C16579 + C50907 * C16580) * C996) *
                C38301) *
               C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51089 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C51083 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C38301) *
               C25711 +
           ((C485 + C486 - C519 - C520) * C51089 +
            (C5680 + C5681 - C5682 - C5683) * C51083 +
            (C15862 + C15863 - C15864 - C15865) * C38301) *
               C50759) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C51089 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C51083 +
            (C16590 * C459 - (C6453 * C51042 + C6452 * C458) +
             C16591 * C50850) *
                C38301) *
               C25711 +
           ((C1625 - (C1603 + C1604) + C1626) * C51089 +
            (C7060 - (C7061 + C7062) + C7063) * C51083 +
            (C17192 - (C17193 + C17194) + C17195) * C38301) *
               C50759) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C51089 +
            (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
                C51083 +
            (C16272 * C458 + C16273 * C51042 - C21490 * C459 -
             C21491 * C50850) *
                C38301) *
               C25711 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C51089 +
            (C5854 * C458 + C5855 * C51042 - C16020 * C459 - C16021 * C50850) *
                C51083 +
            (C16020 * C458 + C16021 * C51042 -
             (C117 * C9442 + C50907 * C9445) * C459 -
             (C117 * C9446 + C50907 * C9448) * C50850) *
                C38301) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51089 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C51083 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C38301) *
               C25711 +
           ((C485 + C486 - C519 - C520) * C51089 +
            (C5680 + C5681 - C5682 - C5683) * C51083 +
            (C15862 + C15863 - C15864 - C15865) * C38301) *
               C50759) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C51089 +
            (C5682 - (C5681 + C5680) + C5683) * C51083 +
            (C15864 - (C15863 + C15862) + C15865) * C38301) *
               C25711 +
           ((C521 - (C492 + C491) + C522) * C51089 +
            (C5687 - (C5686 + C5685) + C5688) * C51083 +
            (C15866 - (C15867 + C15868) + C15869) * C38301) *
               C50759) *
              C50808 * C296 +
          ((C529 * C51089 + C5697 * C51083 +
            (C15868 + C15867 - C15866 - C15869) * C38301) *
               C25711 +
           (C530 * C51089 + (C5691 + C5690 - C5689 - C5692) * C51083 +
            (C1049 * C458 + C1050 * C51042 -
             (C117 * C1247 + C50907 * C1254) * C459 -
             (C117 * C1255 + C50907 * C1259) * C50850) *
                C38301) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1240 +
            (C117 * C127 + C50907 * C140) * C1236 - C5693 * C1241 -
            C5694 * C1237 + C6284 * C1242 + C6285 * C1238 - C6572 * C1243 -
            C6573 * C1239) *
               C51089 +
           (C5693 * C1240 + C5694 * C1236 - C6284 * C1241 - C6285 * C1237 +
            C6572 * C1242 + C6573 * C1238 - C16704 * C1243 - C16705 * C1239) *
               C51083 +
           (C6284 * C1240 + C6285 * C1236 - C6572 * C1241 - C6573 * C1237 +
            C16704 * C1242 + C16705 * C1238 - C21768 * C1243 - C21769 * C1239) *
               C38301) *
              C25711 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C6286 * C1243 - C6287 * C1239) *
               C51089 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C6286 * C1242 + C6287 * C1238 - C16428 * C1243 - C16429 * C1239) *
               C51083 +
           (C1045 * C1240 + C1046 * C1236 - C6286 * C1241 - C6287 * C1237 +
            C16428 * C1242 + C16429 * C1238 -
            (C117 * C16692 + C50907 * C16695) * C1243 -
            (C117 * C16696 + C50907 * C16698) * C1239) *
               C38301) *
              C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C51089 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C51083 +
            (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                C38301) *
               C25711 +
           ((C1733 + C1734 - C1735 - C1736) * C51089 +
            (C7214 + C7215 - C7216 - C7217) * C51083 +
            (C17342 + C17343 - C17344 - C17345) * C38301) *
               C50759) *
              C50808 * C51085 +
          (((C1735 - (C1734 + C1733) + C1736) * C51089 +
            (C7216 - (C7215 + C7214) + C7217) * C51083 +
            (C17344 - (C17343 + C17342) + C17345) * C38301) *
               C25711 +
           ((C1739 - (C1738 + C1737) + C1740) * C51089 +
            (C7221 - (C7220 + C7219) + C7222) * C51083 +
            (C17346 - (C17347 + C17348) + C17349) * C38301) *
               C50759) *
              C50808 * C51071 +
          ((C1753 * C51089 + C7229 * C51083 +
            (C17348 + C17347 - C17346 - C17349) * C38301) *
               C25711 +
           (C1754 * C51089 + (C7225 + C7224 - C7223 - C7226) * C51083 +
            (C1049 * C1730 + C1050 * C1728 -
             (C117 * C1247 + C50907 * C1254) * C1731 -
             (C117 * C1255 + C50907 * C1259) * C50850) *
                C38301) *
               C50759) *
              C50808 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C51089 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C51083 +
             (C6284 * C1730 + C6285 * C1728 - C6572 * C1731 - C6573 * C50850) *
                 C38301) *
                C25711 +
            ((C1733 + C1734 - C1735 - C1736) * C51089 +
             (C7214 + C7215 - C7216 - C7217) * C51083 +
             (C17342 + C17343 - C17344 - C17345) * C38301) *
                C50759) *
               C51040 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C51089 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C51083 +
             (C16590 * C1731 - (C6453 * C1728 + C6452 * C1730) +
              C16591 * C50850) *
                 C38301) *
                C25711 +
            ((C1887 - (C1888 + C1889) + C1890) * C51089 +
             (C7426 - (C7427 + C7428) + C7429) * C51083 +
             (C17544 - (C17545 + C17546) + C17547) * C38301) *
                C50759) *
               C50824) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51089 +
             (C7216 - (C7215 + C7214) + C7217) * C51083 +
             (C17344 - (C17343 + C17342) + C17345) * C38301) *
                C25711 +
            ((C1739 - (C1738 + C1737) + C1740) * C51089 +
             (C7221 - (C7220 + C7219) + C7222) * C51083 +
             (C17346 - (C17347 + C17348) + C17349) * C38301) *
                C50759) *
               C51040 +
           (((C1889 + C1888 - C1887 - C1890) * C51089 +
             (C7428 + C7427 - C7426 - C7429) * C51083 +
             (C17546 + C17545 - C17544 - C17547) * C38301) *
                C25711 +
            ((C1893 + C1892 - C1891 - C1894) * C51089 +
             (C7432 + C7431 - C7430 - C7433) * C51083 +
             (C6456 * C1730 + C6457 * C1728 -
              (C117 * C3757 + C50907 * C3762) * C1731 -
              (C117 * C3763 + C50907 * C3766) * C50850) *
                 C38301) *
                C50759) *
               C50824) *
              C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C51089 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C51083 +
            (C6284 * C1999 + C6285 * C51087 - C6572 * C2000 - C6573 * C51077 +
             C16704 * C2001 + C16705 * C1998) *
                C38301) *
               C25711 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51089 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C51083 +
            (C17694 + C17695 - C17696 - C17697 + C17698 + C17699) * C38301) *
               C50759) *
              C50808 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C51089 +
            (C7582 - (C7581 + C7580) + C7583 - C7584 - C7585) * C51083 +
            (C17696 - (C17695 + C17694) + C17697 - C17698 - C17699) * C38301) *
               C25711 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C51089 +
            (C7588 - (C7587 + C7586) + C7589 - C7590 - C7591) * C51083 +
            (C6288 * C2000 - (C1048 * C51087 + C1047 * C1999) + C6289 * C51077 -
             (C117 * C6557 + C50907 * C6562) * C2001 -
             (C117 * C6563 + C50907 * C6566) * C1998) *
                C38301) *
               C50759) *
              C50808 * C50781)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51089 +
            (C5693 * C118 + C5694 * C50838) * C51083 +
            (C6284 * C118 + C6285 * C50838) * C38301) *
               C25711 +
           ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
            (C15560 + C15561) * C38301) *
               C50759) *
              C50808 * C113 -
          (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
            (C181 + C180) * C51089) *
               C50759 +
           ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
            (C179 + C178) * C51089) *
               C25711) *
              C50808 * C114 +
          ((C188 * C51089 + C5368 * C51083 + (C15563 + C15562) * C38301) *
               C25711 +
           (C189 * C51089 + (C5364 + C5363) * C51083 +
            (C15564 + C15565) * C38301) *
               C50759) *
              C50808 * C115 -
          ((((C117 * C1014 + C50907 * C1019) * C50838 +
             (C117 * C1004 + C50907 * C1013) * C118) *
                C38301 +
            (C5367 + C5366) * C51083 + C190 * C51089) *
               C50759 +
           ((C15565 + C15564) * C38301 + C5369 * C51083 + C191 * C51089) *
               C25711) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51089 +
             (C5693 * C118 + C5694 * C50838) * C51083 +
             (C6284 * C118 + C6285 * C50838) * C38301) *
                C25711 +
            ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
             (C15560 + C15561) * C38301) *
                C50759) *
               C630 -
           (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
             (C351 + C352) * C51089) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C38301 +
             (C6115 * C50838 + C6114 * C118) * C51083 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51089) *
                C25711) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51089 +
             (C6116 * C118 + C6117 * C50838) * C51083 +
             (C16272 * C118 + C16273 * C50838) * C38301) *
                C25711 +
            ((C674 + C675) * C51089 + (C5858 + C5859) * C51083 +
             (C16022 + C16023) * C38301) *
                C50759) *
               C632) *
              C51033 +
          ((((C352 + C351) * C51089 + (C5524 + C5523) * C51083 +
             (C15713 + C15712) * C38301) *
                C25711 +
            ((C350 + C349) * C51089 + (C5521 + C5520) * C51083 +
             (C15714 + C15715) * C38301) *
                C50759) *
               C631 -
           (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
             (C181 + C180) * C51089) *
                C50759 +
            ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
             (C179 + C178) * C51089) *
                C25711) *
               C630 -
           ((((C117 * C3653 + C50907 * C3656) * C50838 +
              (C117 * C3647 + C50907 * C3652) * C118) *
                 C38301 +
             (C5861 + C5860) * C51083 + (C677 + C676) * C51089) *
                C50759 +
            ((C16023 + C16022) * C38301 + (C5859 + C5858) * C51083 +
             (C675 + C674) * C51089) *
                C25711) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51089 +
             (C5693 * C118 + C5694 * C50838) * C51083 +
             (C6284 * C118 + C6285 * C50838) * C38301) *
                C25711 +
            ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
             (C15560 + C15561) * C38301) *
                C50759) *
               C51040 -
           (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
             (C351 + C352) * C51089) *
                C50759 +
            ((C6453 * C50838 + C6452 * C118) * C38301 +
             (C6115 * C50838 + C6114 * C118) * C51083 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51089) *
                C25711) *
               C50824) *
              C295 +
          ((((C352 + C351) * C51089 + (C5524 + C5523) * C51083 +
             (C15713 + C15712) * C38301) *
                C25711 +
            ((C350 + C349) * C51089 + (C5521 + C5520) * C51083 +
             (C15714 + C15715) * C38301) *
                C50759) *
               C50824 -
           (((C15562 + C15563) * C38301 + (C5362 + C5361) * C51083 +
             (C181 + C180) * C51089) *
                C50759 +
            ((C15561 + C15560) * C38301 + (C5359 + C5358) * C51083 +
             (C179 + C178) * C51089) *
                C25711) *
               C51040) *
              C296 +
          (((C188 * C51089 + C5368 * C51083 + (C15563 + C15562) * C38301) *
                C25711 +
            (C189 * C51089 + (C5364 + C5363) * C51083 +
             (C15564 + C15565) * C38301) *
                C50759) *
               C51040 -
           ((((C117 * C1165 + C50907 * C1169) * C50838 +
              (C117 * C1157 + C50907 * C1164) * C118) *
                 C38301 +
             (C5526 + C5525) * C51083 + C355 * C51089) *
                C50759 +
            ((C15715 + C15714) * C38301 + C5527 * C51083 + C356 * C51089) *
                C25711) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51089 +
            (C5693 * C118 + C5694 * C50838) * C51083 +
            (C6284 * C118 + C6285 * C50838) * C38301) *
               C25711 +
           ((C178 + C179) * C51089 + (C5358 + C5359) * C51083 +
            (C15560 + C15561) * C38301) *
               C50759) *
              C745 -
          (((C15712 + C15713) * C38301 + (C5523 + C5524) * C51083 +
            (C351 + C352) * C51089) *
               C50759 +
           ((C6453 * C50838 + C6452 * C118) * C38301 +
            (C6115 * C50838 + C6114 * C118) * C51083 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C51089) *
               C25711) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C51089 +
            (C6116 * C118 + C6117 * C50838) * C51083 +
            (C16272 * C118 + C16273 * C50838) * C38301) *
               C25711 +
           ((C674 + C675) * C51089 + (C5858 + C5859) * C51083 +
            (C16022 + C16023) * C38301) *
               C50759) *
              C747 -
          ((((C117 * C9340 + C50907 * C9342) * C50838 +
             (C117 * C9336 + C50907 * C9339) * C118) *
                C38301 +
            ((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C51083 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C51089) *
               C50759 +
           (((C117 * C9338 + C50907 * C9341) * C50838 +
             (C117 * C9335 + C50907 * C9337) * C118) *
                C38301 +
            ((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C51083 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C51089) *
               C25711) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51089 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C51083 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C38301) *
               C25711 +
           ((C485 + C486 - C519 - C520) * C51089 +
            (C5680 + C5681 - C5682 - C5683) * C51083 +
            (C15862 + C15863 - C15864 - C15865) * C38301) *
               C50759) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C51089 +
            (C5682 - (C5681 + C5680) + C5683) * C51083 +
            (C15864 - (C15863 + C15862) + C15865) * C38301) *
               C25711 +
           ((C521 - (C492 + C491) + C522) * C51089 +
            (C5687 - (C5686 + C5685) + C5688) * C51083 +
            (C15866 - (C15867 + C15868) + C15869) * C38301) *
               C50759) *
              C50808 * C296 +
          ((C529 * C51089 + C5697 * C51083 +
            (C15868 + C15867 - C15866 - C15869) * C38301) *
               C25711 +
           (C530 * C51089 + (C5691 + C5690 - C5689 - C5692) * C51083 +
            (C1049 * C458 + C1050 * C51042 -
             (C117 * C1247 + C50907 * C1254) * C459 -
             (C117 * C1255 + C50907 * C1259) * C50850) *
                C38301) *
               C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51089 +
            (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                C51083 +
            (C6284 * C458 + C6285 * C51042 - C6572 * C459 - C6573 * C50850) *
                C38301) *
               C25711 +
           ((C485 + C486 - C519 - C520) * C51089 +
            (C5680 + C5681 - C5682 - C5683) * C51083 +
            (C15862 + C15863 - C15864 - C15865) * C38301) *
               C50759) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C51089 +
            (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                C51083 +
            (C16590 * C459 - (C6453 * C51042 + C6452 * C458) +
             C16591 * C50850) *
                C38301) *
               C25711 +
           ((C1625 - (C1603 + C1604) + C1626) * C51089 +
            (C7060 - (C7061 + C7062) + C7063) * C51083 +
            (C17192 - (C17193 + C17194) + C17195) * C38301) *
               C50759) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C51089 +
            (C6116 * C458 + C6117 * C51042 - C16272 * C459 - C16273 * C50850) *
                C51083 +
            (C16272 * C458 + C16273 * C51042 - C21490 * C459 -
             C21491 * C50850) *
                C38301) *
               C25711 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C51089 +
            (C5854 * C458 + C5855 * C51042 - C16020 * C459 - C16021 * C50850) *
                C51083 +
            (C16020 * C458 + C16021 * C51042 -
             (C117 * C9442 + C50907 * C9445) * C459 -
             (C117 * C9446 + C50907 * C9448) * C50850) *
                C38301) *
               C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C1358 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C50824) *
              C51085 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C50824 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C1358) *
              C51071 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
            (C186 + C187) * C50937 * C111) *
               C1358 -
           (((C117 * C314 + C50907 * C321) * C50838 +
             (C117 * C303 + C50907 * C315) * C118) *
                C50937 * C111 +
            (C354 + C353) * C50937 * C110 + C357 * C109 + C358 * C108) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C1358 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C50824) *
              C51085 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C50824 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C1358) *
              C51071 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C50937 * C51026 +
            ((C8232 + C8233 + C8234) * C118 +
             (C8235 + C8236 + C8237) * C50838) *
                C50937 * C50759) *
               C1358 -
           (((C8182 * C754 + C8177 * C762 + C8181 * C647 + C8176 * C653 +
              C8180 * C304 + C8175 * C316) *
                 C50838 +
             (C8182 * C750 + C8177 * C755 + C8181 * C638 + C8176 * C646 +
              C8180 * C298 + C8175 * C305) *
                 C118) *
                C50937 * C50759 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C50937 * C51026) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C51086 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C51074 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C50937 * C108 +
            (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
            (C678 + C679) * C50937 * C111) *
               C1463) *
              C1464 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C51074 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C51086 -
           (((C117 * C648 + C50907 * C654) * C50838 +
             (C117 * C639 + C50907 * C649) * C118) *
                C50937 * C111 +
            (C679 + C678) * C50937 * C110 + (C677 + C676) * C50937 * C109 +
            (C675 + C674) * C50937 * C108) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C51086 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C51074 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C50937 * C51026 +
            ((C8760 + C8761 + C8762) * C118 +
             (C8763 + C8764 + C8765) * C50838) *
                C50937 * C50759) *
               C1463) *
              C1464 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C51074 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C51086 -
           (((C8182 * C3162 + C8177 * C3168 + C8181 * C756 + C8176 * C763 +
              C8180 * C645 + C8175 * C652) *
                 C50838 +
             (C8182 * C3159 + C8177 * C3163 + C8181 * C751 + C8176 * C757 +
              C8180 * C637 + C8175 * C644) *
                 C118) *
                C50937 * C50759 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C50937 * C51026) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 -
             (C117 * C460 + C50907 * C466) * C459 -
             (C117 * C467 + C50907 * C478) * C50850) *
                C50937 * C108 +
            (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
            C532 * C111) *
               C1358 +
           (((C117 * C864 + C50907 * C872) * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             (C117 * C873 + C50907 * C888) * C50850) *
                C50937 * C108 +
            (C1625 - (C1603 + C1604) + C1626) * C50937 * C109 +
            (C1627 - (C1609 + C1610) + C1628) * C50937 * C110 +
            (C1629 - (C1615 + C1616) + C1630) * C50937 * C111) *
               C50824) *
              C1464 +
          (((C519 - (C486 + C485) + C520) * C50937 * C108 +
            (C521 - (C492 + C491) + C522) * C50937 * C109 +
            (C523 - (C498 + C497) + C524) * C50937 * C110 +
            (C525 - (C505 + C506) + C526) * C50937 * C111) *
               C1358 +
           ((C1604 + C1603 - C1625 - C1626) * C50937 * C108 +
            (C1610 + C1609 - C1627 - C1628) * C50937 * C109 +
            (C1616 + C1615 - C1629 - C1630) * C50937 * C110 +
            (C345 * C458 + C346 * C51042 -
             (C117 * C1596 + C50907 * C1597) * C459 -
             (C117 * C1598 + C50907 * C1599) * C50850) *
                C50937 * C111) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C458 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C51042 -
             (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
              C8180 * C460 + C8175 * C466) *
                 C459 -
             (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
              C8180 * C467 + C8175 * C478) *
                 C50850) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
             (C8590 + C8591 + C8592) * C459 -
             (C8593 + C8594 + C8595) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
              C8182 * C3317 + C8177 * C3320) *
                 C459 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C51042 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C458) +
             (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
              C8182 * C3321 + C8177 * C3326) *
                 C50850) *
                C50937 * C51026 +
            ((C9948 + C9949 + C9950) * C459 -
             ((C8408 + C8409 + C8410) * C51042 +
              (C8411 + C8412 + C8413) * C458) +
             (C9951 + C9952 + C9953) * C50850) *
                C50937 * C50759) *
               C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C459 -
             ((C8225 + C8224 + C8223) * C51042 +
              (C8222 + C8221 + C8220) * C458) +
             (C8595 + C8594 + C8593) * C50850) *
                C50937 * C51026 +
            ((C8596 + C8597 + C8598) * C459 -
             ((C8226 + C8227 + C8228) * C51042 +
              (C8229 + C8230 + C8231) * C458) +
             (C8599 + C8600 + C8601) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8413 + C8412 + C8411) * C458 + (C8410 + C8409 + C8408) * C51042 -
             (C9950 + C9949 + C9948) * C459 -
             (C9953 + C9952 + C9951) * C50850) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C458 + (C8417 + C8418 + C8419) * C51042 -
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C459 -
             (C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50850) *
                C50937 * C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 -
             (C117 * C460 + C50907 * C466) * C1731 -
             (C117 * C467 + C50907 * C478) * C50850) *
                C50937 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
            C1756 * C111) *
               C1358 +
           (((C117 * C864 + C50907 * C872) * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             (C117 * C873 + C50907 * C888) * C50850) *
                C50937 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50937 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50937 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50937 * C111) *
               C50824) *
              C51033 +
          (((C1735 - (C1734 + C1733) + C1736) * C50937 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50937 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50937 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50937 * C111) *
               C1358 +
           ((C1889 + C1888 - C1887 - C1890) * C50937 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50937 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50937 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50907 * C1597) * C1731 -
             (C117 * C1598 + C50907 * C1599) * C50850) *
                C50937 * C111) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
              C8180 * C460 + C8175 * C466) *
                 C1731 -
             (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
              C8180 * C467 + C8175 * C478) *
                 C50850) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
             (C8590 + C8591 + C8592) * C1731 -
             (C8593 + C8594 + C8595) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
              C8182 * C3317 + C8177 * C3320) *
                 C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
              C8182 * C3321 + C8177 * C3326) *
                 C50850) *
                C50937 * C51026 +
            ((C9948 + C9949 + C9950) * C1731 -
             ((C8408 + C8409 + C8410) * C1728 +
              (C8411 + C8412 + C8413) * C1730) +
             (C9951 + C9952 + C9953) * C50850) *
                C50937 * C50759) *
               C50824) *
              C51033 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C50937 * C51026 +
            ((C8596 + C8597 + C8598) * C1731 -
             ((C8226 + C8227 + C8228) * C1728 +
              (C8229 + C8230 + C8231) * C1730) +
             (C8599 + C8600 + C8601) * C50850) *
                C50937 * C50759) *
               C1358 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C1730 + (C8417 + C8418 + C8419) * C1728 -
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C1731 -
             (C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50850) *
                C50937 * C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1730 +
            (C117 * C127 + C50907 * C140) * C1728 -
            (C117 * C460 + C50907 * C466) * C1731 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
           C1756 * C111) *
              C51086 +
          (((C117 * C864 + C50907 * C872) * C1731 -
            ((C117 * C310 + C50907 * C319) * C1728 +
             (C117 * C301 + C50907 * C311) * C1730) +
            (C117 * C873 + C50907 * C888) * C50850) *
               C50937 * C108 +
           (C1887 - (C1888 + C1889) + C1890) * C50937 * C109 +
           (C1891 - (C1892 + C1893) + C1894) * C50937 * C110 +
           (C1895 - (C1896 + C1897) + C1898) * C50937 * C111) *
              C51074 +
          (((C117 * C635 + C50907 * C640) * C1730 +
            (C117 * C641 + C50907 * C650) * C1728 -
            (C117 * C868 + C50907 * C880) * C1731 -
            (C117 * C881 + C50907 * C892) * C50850) *
               C50937 * C108 +
           (C668 * C1730 + C669 * C1728 -
            (C117 * C869 + C50907 * C882) * C1731 -
            (C117 * C883 + C50907 * C893) * C50850) *
               C50937 * C109 +
           (C670 * C1730 + C671 * C1728 -
            (C117 * C870 + C50907 * C884) * C1731 -
            (C117 * C885 + C50907 * C894) * C50850) *
               C50937 * C110 +
           (C672 * C1730 + C673 * C1728 -
            (C117 * C871 + C50907 * C886) * C1731 -
            (C117 * C887 + C50907 * C895) * C50850) *
               C50937 * C111) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C1731 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
            (C8590 + C8591 + C8592) * C1731 -
            (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C51086 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C1731 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C1728 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1730) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C50850) *
               C50937 * C51026 +
           ((C9948 + C9949 + C9950) * C1731 -
            ((C8408 + C8409 + C8410) * C1728 +
             (C8411 + C8412 + C8413) * C1730) +
            (C9951 + C9952 + C9953) * C50850) *
               C50937 * C50759) *
              C51074 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C1730 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C1728 -
            (C8182 * C9017 + C8177 * C9019 + C8181 * C3317 + C8176 * C3320 +
             C8180 * C868 + C8175 * C880) *
                C1731 -
            (C8182 * C9020 + C8177 * C9023 + C8181 * C3321 + C8176 * C3326 +
             C8180 * C881 + C8175 * C892) *
                C50850) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C1730 + (C8763 + C8764 + C8765) * C1728 -
            (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
             C8180 * C869 + C8175 * C882) *
                C1731 -
            (C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
             C8180 * C883 + C8175 * C893) *
                C50850) *
               C50937 * C50759) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1999 +
            (C117 * C127 + C50907 * C140) * C51087 -
            (C117 * C460 + C50907 * C466) * C2000 -
            (C117 * C467 + C50907 * C478) * C51077 +
            (C117 * C1000 + C50907 * C1005) * C2001 +
            (C117 * C1006 + C50907 * C1015) * C1998) *
               C50937 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50937 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50937 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50937 * C111) *
              C1358 +
          (((C117 * C864 + C50907 * C872) * C2000 -
            ((C117 * C310 + C50907 * C319) * C51087 +
             (C117 * C301 + C50907 * C311) * C1999) +
            (C117 * C873 + C50907 * C888) * C51077 -
            (C117 * C1154 + C50907 * C1158) * C2001 -
            (C117 * C1159 + C50907 * C1166) * C1998) *
               C50937 * C108 +
           (C1619 * C2000 - (C343 * C51087 + C344 * C1999) + C1620 * C51077 -
            (C117 * C1155 + C50907 * C1160) * C2001 -
            (C117 * C1161 + C50907 * C1167) * C1998) *
               C50937 * C109 +
           (C1621 * C2000 - (C341 * C51087 + C342 * C1999) + C1622 * C51077 -
            (C117 * C1156 + C50907 * C1162) * C2001 -
            (C117 * C1163 + C50907 * C1168) * C1998) *
               C50937 * C110 +
           (C1623 * C2000 - (C339 * C51087 + C340 * C1999) + C1624 * C51077 -
            (C117 * C1157 + C50907 * C1164) * C2001 -
            (C117 * C1165 + C50907 * C1169) * C1998) *
               C50937 * C111) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C2000 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C51077 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C2001 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C1998) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1999 + (C8223 + C8224 + C8225) * C51087 -
            (C8590 + C8591 + C8592) * C2000 - (C8593 + C8594 + C8595) * C51077 +
            (C9184 + C9185 + C9186) * C2001 + (C9187 + C9188 + C9189) * C1998) *
               C50937 * C50759) *
              C1358 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C2000 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51087 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1999) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C51077 -
            (C8182 * C9335 + C8177 * C9337 + C8181 * C3645 + C8176 * C3648 +
             C8180 * C1154 + C8175 * C1158) *
                C2001 -
            (C8182 * C9338 + C8177 * C9341 + C8181 * C3649 + C8176 * C3654 +
             C8180 * C1159 + C8175 * C1166) *
                C1998) *
               C50937 * C51026 +
           ((C9948 + C9949 + C9950) * C2000 -
            ((C8408 + C8409 + C8410) * C51087 +
             (C8411 + C8412 + C8413) * C1999) +
            (C9951 + C9952 + C9953) * C51077 -
            (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
             C8180 * C1155 + C8175 * C1160) *
                C2001 -
            (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
             C8180 * C1161 + C8175 * C1167) *
                C1998) *
               C50937 * C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C630 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C631 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C50937 * C108 +
            (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
            (C678 + C679) * C50937 * C111) *
               C632) *
              C51033 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C631 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C630 -
           (((C117 * C648 + C50907 * C654) * C50838 +
             (C117 * C639 + C50907 * C649) * C118) *
                C50937 * C111 +
            (C679 + C678) * C50937 * C110 + (C677 + C676) * C50937 * C109 +
            (C675 + C674) * C50937 * C108) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C50937 * C108 +
           (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
              C50808 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
           (C179 + C178) * C50937 * C108) *
              C50808 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
           (C186 + C187) * C50937 * C111) *
              C50808 * C115 -
          (((C117 * C138 + C50907 * C146) * C50838 +
            (C117 * C125 + C50907 * C139) * C118) *
               C50937 * C111 +
           (C187 + C186) * C50937 * C110 + C194 * C109 + C195 * C108) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C997 +
            (C117 * C127 + C50907 * C140) * C994 -
            (C117 * C460 + C50907 * C466) * C998 -
            (C117 * C467 + C50907 * C478) * C995 +
            (C117 * C1000 + C50907 * C1005) * C999 +
            (C117 * C1006 + C50907 * C1015) * C996) *
               C50937 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50937 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50937 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50937 * C111) *
              C50808 * C51033 +
          ((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C50937 * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C50937 * C109 +
           (C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C50937 * C110 +
           (C517 * C998 - (C174 * C994 + C175 * C997) + C518 * C995 -
            (C117 * C1004 + C50907 * C1013) * C999 -
            (C117 * C1014 + C50907 * C1019) * C996) *
               C50937 * C111) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C50808 * C113 -
          (((C8226 + C8227 + C8228) * C50838 + (C8229 + C8230 + C8231) * C118) *
               C50937 * C50759 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C50937 * C51026) *
              C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C118 + (C8235 + C8236 + C8237) * C50838) *
               C50937 * C50759) *
              C50808 * C115 -
          (((C8182 * C648 + C8177 * C654 + C8181 * C313 + C8176 * C320 +
             C8180 * C134 + C8175 * C144) *
                C50838 +
            (C8182 * C639 + C8177 * C649 + C8181 * C302 + C8176 * C312 +
             C8180 * C123 + C8175 * C135) *
                C118) *
               C50937 * C50759 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C50937 * C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C630 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C50937 * C51026 +
            ((C8760 + C8761 + C8762) * C118 +
             (C8763 + C8764 + C8765) * C50838) *
                C50937 * C50759) *
               C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C631 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C630 -
           (((C8182 * C3162 + C8177 * C3168 + C8181 * C756 + C8176 * C763 +
              C8180 * C645 + C8175 * C652) *
                 C50838 +
             (C8182 * C3159 + C8177 * C3163 + C8181 * C751 + C8176 * C757 +
              C8180 * C637 + C8175 * C644) *
                 C118) *
                C50937 * C50759 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C50937 * C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C998 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C995 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C999 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C996) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C997 + (C8223 + C8224 + C8225) * C994 -
            (C8590 + C8591 + C8592) * C998 - (C8593 + C8594 + C8595) * C995 +
            (C9184 + C9185 + C9186) * C999 + (C9187 + C9188 + C9189) * C996) *
               C50937 * C50759) *
              C50808 * C51033 +
          (((C8592 + C8591 + C8590) * C998 -
            ((C8225 + C8224 + C8223) * C994 + (C8222 + C8221 + C8220) * C997) +
            (C8595 + C8594 + C8593) * C995 - (C9186 + C9185 + C9184) * C999 -
            (C9189 + C9188 + C9187) * C996) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C998 -
            ((C8226 + C8227 + C8228) * C994 + (C8229 + C8230 + C8231) * C997) +
            (C8599 + C8600 + C8601) * C995 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C999 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C996) *
               C50937 * C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C50937 * C108 +
           (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
              C745 -
          (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
           ((C117 * C310 + C50907 * C319) * C50838 +
            (C117 * C301 + C50907 * C311) * C118) *
               C50937 * C108) *
              C746 +
          (((C117 * C635 + C50907 * C640) * C118 +
            (C117 * C641 + C50907 * C650) * C50838) *
               C50937 * C108 +
           (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
           (C678 + C679) * C50937 * C111) *
              C747 -
          (((C117 * C754 + C50907 * C762) * C50838 +
            (C117 * C750 + C50907 * C755) * C118) *
               C50937 * C111 +
           ((C117 * C756 + C50907 * C763) * C50838 +
            (C117 * C751 + C50907 * C757) * C118) *
               C50937 * C110 +
           ((C117 * C758 + C50907 * C764) * C50838 +
            (C117 * C752 + C50907 * C759) * C118) *
               C50937 * C109 +
           ((C117 * C760 + C50907 * C765) * C50838 +
            (C117 * C753 + C50907 * C761) * C118) *
               C50937 * C108) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C51040 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C50824) *
              C295 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C50824 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C51040) *
              C296 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
            (C186 + C187) * C50937 * C111) *
               C51040 -
           (((C117 * C314 + C50907 * C321) * C50838 +
             (C117 * C303 + C50907 * C315) * C118) *
                C50937 * C111 +
            (C354 + C353) * C50937 * C110 + C357 * C109 + C358 * C108) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C997 +
            (C117 * C127 + C50907 * C140) * C994 -
            (C117 * C460 + C50907 * C466) * C998 -
            (C117 * C467 + C50907 * C478) * C995 +
            (C117 * C1000 + C50907 * C1005) * C999 +
            (C117 * C1006 + C50907 * C1015) * C996) *
               C50937 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50937 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50937 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50937 * C111) *
              C51040 +
          (((C117 * C864 + C50907 * C872) * C998 -
            ((C117 * C310 + C50907 * C319) * C994 +
             (C117 * C301 + C50907 * C311) * C997) +
            (C117 * C873 + C50907 * C888) * C995 -
            (C117 * C1154 + C50907 * C1158) * C999 -
            (C117 * C1159 + C50907 * C1166) * C996) *
               C50937 * C108 +
           ((C117 * C865 + C50907 * C874) * C998 - (C343 * C994 + C344 * C997) +
            (C117 * C875 + C50907 * C889) * C995 -
            (C117 * C1155 + C50907 * C1160) * C999 -
            (C117 * C1161 + C50907 * C1167) * C996) *
               C50937 * C109 +
           ((C117 * C866 + C50907 * C876) * C998 - (C341 * C994 + C342 * C997) +
            (C117 * C877 + C50907 * C890) * C995 -
            (C117 * C1156 + C50907 * C1162) * C999 -
            (C117 * C1163 + C50907 * C1168) * C996) *
               C50937 * C110 +
           ((C117 * C867 + C50907 * C878) * C998 - (C339 * C994 + C340 * C997) +
            (C117 * C879 + C50907 * C891) * C995 -
            (C117 * C1157 + C50907 * C1164) * C999 -
            (C117 * C1165 + C50907 * C1169) * C996) *
               C50937 * C111) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C50824 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C50937 * C51026 +
            ((C8232 + C8233 + C8234) * C118 +
             (C8235 + C8236 + C8237) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8182 * C754 + C8177 * C762 + C8181 * C647 + C8176 * C653 +
              C8180 * C304 + C8175 * C316) *
                 C50838 +
             (C8182 * C750 + C8177 * C755 + C8181 * C638 + C8176 * C646 +
              C8180 * C298 + C8175 * C305) *
                 C118) *
                C50937 * C50759 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C50937 * C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C745 -
          (((C8408 + C8409 + C8410) * C50838 + (C8411 + C8412 + C8413) * C118) *
               C50937 * C50759 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C50937 * C51026) *
              C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C118 + (C8763 + C8764 + C8765) * C50838) *
               C50937 * C50759) *
              C747 -
          (((C8182 * C8865 + C8177 * C8869 + C8181 * C3164 + C8176 * C3169 +
             C8180 * C758 + C8175 * C764) *
                C50838 +
            (C8182 * C8863 + C8177 * C8866 + C8181 * C3160 + C8176 * C3165 +
             C8180 * C752 + C8175 * C759) *
                C118) *
               C50937 * C50759 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C50937 * C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C998 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C995 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C999 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C996) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C997 + (C8223 + C8224 + C8225) * C994 -
            (C8590 + C8591 + C8592) * C998 - (C8593 + C8594 + C8595) * C995 +
            (C9184 + C9185 + C9186) * C999 + (C9187 + C9188 + C9189) * C996) *
               C50937 * C50759) *
              C51040 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C998 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C994 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C997) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C995 -
            (C8182 * C9335 + C8177 * C9337 + C8181 * C3645 + C8176 * C3648 +
             C8180 * C1154 + C8175 * C1158) *
                C999 -
            (C8182 * C9338 + C8177 * C9341 + C8181 * C3649 + C8176 * C3654 +
             C8180 * C1159 + C8175 * C1166) *
                C996) *
               C50937 * C51026 +
           ((C8180 * C865 + C8175 * C874 + C8181 * C869 + C8176 * C882 +
             C8182 * C3318 + C8177 * C3322) *
                C998 -
            ((C8408 + C8409 + C8410) * C994 + (C8411 + C8412 + C8413) * C997) +
            (C8180 * C875 + C8175 * C889 + C8181 * C883 + C8176 * C893 +
             C8182 * C3323 + C8177 * C3327) *
                C995 -
            (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
             C8180 * C1155 + C8175 * C1160) *
                C999 -
            (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
             C8180 * C1161 + C8175 * C1167) *
                C996) *
               C50937 * C50759) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 -
            (C117 * C460 + C50907 * C466) * C459 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
           C532 * C111) *
              C630 +
          (((C117 * C864 + C50907 * C872) * C459 -
            ((C117 * C310 + C50907 * C319) * C51042 +
             (C117 * C301 + C50907 * C311) * C458) +
            (C117 * C873 + C50907 * C888) * C50850) *
               C50937 * C108 +
           ((C117 * C865 + C50907 * C874) * C459 -
            (C343 * C51042 + C344 * C458) +
            (C117 * C875 + C50907 * C889) * C50850) *
               C50937 * C109 +
           ((C117 * C866 + C50907 * C876) * C459 -
            (C341 * C51042 + C342 * C458) +
            (C117 * C877 + C50907 * C890) * C50850) *
               C50937 * C110 +
           ((C117 * C867 + C50907 * C878) * C459 -
            (C339 * C51042 + C340 * C458) +
            (C117 * C879 + C50907 * C891) * C50850) *
               C50937 * C111) *
              C631 +
          (((C117 * C635 + C50907 * C640) * C458 +
            (C117 * C641 + C50907 * C650) * C51042 -
            (C117 * C868 + C50907 * C880) * C459 -
            (C117 * C881 + C50907 * C892) * C50850) *
               C50937 * C108 +
           (C668 * C458 + C669 * C51042 - (C117 * C869 + C50907 * C882) * C459 -
            (C117 * C883 + C50907 * C893) * C50850) *
               C50937 * C109 +
           (C670 * C458 + C671 * C51042 - (C117 * C870 + C50907 * C884) * C459 -
            (C117 * C885 + C50907 * C894) * C50850) *
               C50937 * C110 +
           (C672 * C458 + C673 * C51042 - (C117 * C871 + C50907 * C886) * C459 -
            (C117 * C887 + C50907 * C895) * C50850) *
               C50937 * C111) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 -
            (C117 * C460 + C50907 * C466) * C459 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
           C532 * C111) *
              C50808 * C295 +
          ((C519 - (C486 + C485) + C520) * C50937 * C108 +
           (C521 - (C492 + C491) + C522) * C50937 * C109 +
           (C523 - (C498 + C497) + C524) * C50937 * C110 +
           (C525 - (C505 + C506) + C526) * C50937 * C111) *
              C50808 * C296 +
          (C531 * C108 + C532 * C109 +
           (C506 + C505 - C525 - C526) * C50937 * C110 +
           (C176 * C458 + C177 * C51042 - (C117 * C465 + C50907 * C476) * C459 -
            (C117 * C477 + C50907 * C483) * C50850) *
               C50937 * C111) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50907 * C126) * C1240 +
           (C117 * C127 + C50907 * C140) * C1236 -
           (C117 * C460 + C50907 * C466) * C1241 -
           (C117 * C467 + C50907 * C478) * C1237 +
           (C117 * C1000 + C50907 * C1005) * C1242 +
           (C117 * C1006 + C50907 * C1015) * C1238 -
           (C117 * C1244 + C50907 * C1248) * C1243 -
           (C117 * C1249 + C50907 * C1256) * C1239) *
              C50937 * C108 +
          (C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
           C1045 * C1242 + C1046 * C1238 -
           (C117 * C1245 + C50907 * C1250) * C1243 -
           (C117 * C1251 + C50907 * C1257) * C1239) *
              C50937 * C109 +
          (C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
           C1047 * C1242 + C1048 * C1238 -
           (C117 * C1246 + C50907 * C1252) * C1243 -
           (C117 * C1253 + C50907 * C1258) * C1239) *
              C50937 * C110 +
          (C172 * C1240 + C173 * C1236 - C515 * C1241 - C516 * C1237 +
           C1049 * C1242 + C1050 * C1238 -
           (C117 * C1247 + C50907 * C1254) * C1243 -
           (C117 * C1255 + C50907 * C1259) * C1239) *
              C50937 * C111) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C459 -
            ((C8226 + C8227 + C8228) * C51042 +
             (C8229 + C8230 + C8231) * C458) +
            (C8599 + C8600 + C8601) * C50850) *
               C50937 * C50759) *
              C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C458 + (C8235 + C8236 + C8237) * C51042 -
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C459 -
            (C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50850) *
               C50937 * C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C630 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C50850) *
               C50937 * C51026 +
           ((C8180 * C865 + C8175 * C874 + C8181 * C869 + C8176 * C882 +
             C8182 * C3318 + C8177 * C3322) *
                C459 -
            ((C8408 + C8409 + C8410) * C51042 +
             (C8411 + C8412 + C8413) * C458) +
            (C8180 * C875 + C8175 * C889 + C8181 * C883 + C8176 * C893 +
             C8182 * C3323 + C8177 * C3327) *
                C50850) *
               C50937 * C50759) *
              C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C8182 * C9017 + C8177 * C9019 + C8181 * C3317 + C8176 * C3320 +
             C8180 * C868 + C8175 * C880) *
                C459 -
            (C8182 * C9020 + C8177 * C9023 + C8181 * C3321 + C8176 * C3326 +
             C8180 * C881 + C8175 * C892) *
                C50850) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C458 + (C8763 + C8764 + C8765) * C51042 -
            (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
             C8180 * C869 + C8175 * C882) *
                C459 -
            (C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
             C8180 * C883 + C8175 * C893) *
                C50850) *
               C50937 * C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
            C8182 * C635 + C8177 * C640) *
               C1240 +
           (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
            C8182 * C641 + C8177 * C650) *
               C1236 -
           (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
            C8180 * C460 + C8175 * C466) *
               C1241 -
           (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
            C8180 * C467 + C8175 * C478) *
               C1237 +
           (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
            C8182 * C3645 + C8177 * C3648) *
               C1242 +
           (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
            C8182 * C3649 + C8177 * C3654) *
               C1238 -
           (C8182 * C9441 + C8177 * C9443 + C8181 * C3755 + C8176 * C3758 +
            C8180 * C1244 + C8175 * C1248) *
               C1243 -
           (C8182 * C9444 + C8177 * C9447 + C8181 * C3759 + C8176 * C3764 +
            C8180 * C1249 + C8175 * C1256) *
               C1239) *
              C50937 * C51026 +
          ((C8220 + C8221 + C8222) * C1240 + (C8223 + C8224 + C8225) * C1236 -
           (C8590 + C8591 + C8592) * C1241 - (C8593 + C8594 + C8595) * C1237 +
           (C9184 + C9185 + C9186) * C1242 + (C9187 + C9188 + C9189) * C1238 -
           (C8182 * C9442 + C8177 * C9445 + C8181 * C3756 + C8176 * C3760 +
            C8180 * C1245 + C8175 * C1250) *
               C1243 -
           (C8182 * C9446 + C8177 * C9448 + C8181 * C3761 + C8176 * C3765 +
            C8180 * C1251 + C8175 * C1257) *
               C1239) *
              C50937 * C50759) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1730 +
            (C117 * C127 + C50907 * C140) * C1728 -
            (C117 * C460 + C50907 * C466) * C1731 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
           C1756 * C111) *
              C50808 * C51085 +
          ((C1735 - (C1734 + C1733) + C1736) * C50937 * C108 +
           (C1739 - (C1738 + C1737) + C1740) * C50937 * C109 +
           (C1743 - (C1742 + C1741) + C1744) * C50937 * C110 +
           (C1745 - (C1746 + C1747) + C1748) * C50937 * C111) *
              C50808 * C51071 +
          (C1755 * C108 + C1756 * C109 +
           (C1747 + C1746 - C1745 - C1748) * C50937 * C110 +
           (C176 * C1730 + C177 * C1728 -
            (C117 * C465 + C50907 * C476) * C1731 -
            (C117 * C477 + C50907 * C483) * C50850) *
               C50937 * C111) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C1731 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
            (C8590 + C8591 + C8592) * C1731 -
            (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C50808 * C51085 +
          (((C8592 + C8591 + C8590) * C1731 -
            ((C8225 + C8224 + C8223) * C1728 +
             (C8222 + C8221 + C8220) * C1730) +
            (C8595 + C8594 + C8593) * C50850) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C1731 -
            ((C8226 + C8227 + C8228) * C1728 +
             (C8229 + C8230 + C8231) * C1730) +
            (C8599 + C8600 + C8601) * C50850) *
               C50937 * C50759) *
              C50808 * C51071 +
          (((C8231 + C8230 + C8229) * C1730 + (C8228 + C8227 + C8226) * C1728 -
            (C8598 + C8597 + C8596) * C1731 -
            (C8601 + C8600 + C8599) * C50850) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C1730 + (C8235 + C8236 + C8237) * C1728 -
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C1731 -
            (C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50850) *
               C50937 * C50759) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 -
             (C117 * C460 + C50907 * C466) * C1731 -
             (C117 * C467 + C50907 * C478) * C50850) *
                C50937 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50937 * C109 + C1755 * C110 +
            C1756 * C111) *
               C51040 +
           (((C117 * C864 + C50907 * C872) * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             (C117 * C873 + C50907 * C888) * C50850) *
                C50937 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50937 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50937 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50937 * C111) *
               C50824) *
              C1464 +
          (((C1735 - (C1734 + C1733) + C1736) * C50937 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50937 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50937 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50937 * C111) *
               C51040 +
           ((C1889 + C1888 - C1887 - C1890) * C50937 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50937 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50937 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50907 * C1597) * C1731 -
             (C117 * C1598 + C50907 * C1599) * C50850) *
                C50937 * C111) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
              C8180 * C460 + C8175 * C466) *
                 C1731 -
             (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
              C8180 * C467 + C8175 * C478) *
                 C50850) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C1730 + (C8223 + C8224 + C8225) * C1728 -
             (C8590 + C8591 + C8592) * C1731 -
             (C8593 + C8594 + C8595) * C50850) *
                C50937 * C50759) *
               C51040 +
           (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
              C8182 * C3317 + C8177 * C3320) *
                 C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
              C8182 * C3321 + C8177 * C3326) *
                 C50850) *
                C50937 * C51026 +
            ((C9948 + C9949 + C9950) * C1731 -
             ((C8408 + C8409 + C8410) * C1728 +
              (C8411 + C8412 + C8413) * C1730) +
             (C9951 + C9952 + C9953) * C50850) *
                C50937 * C50759) *
               C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C50937 * C51026 +
            ((C8596 + C8597 + C8598) * C1731 -
             ((C8226 + C8227 + C8228) * C1728 +
              (C8229 + C8230 + C8231) * C1730) +
             (C8599 + C8600 + C8601) * C50850) *
                C50937 * C50759) *
               C51040 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C1730 + (C8417 + C8418 + C8419) * C1728 -
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C1731 -
             (C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50850) *
                C50937 * C50759) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1999 +
            (C117 * C127 + C50907 * C140) * C51087 -
            (C117 * C460 + C50907 * C466) * C2000 -
            (C117 * C467 + C50907 * C478) * C51077 +
            (C117 * C1000 + C50907 * C1005) * C2001 +
            (C117 * C1006 + C50907 * C1015) * C1998) *
               C50937 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50937 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50937 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50937 * C111) *
              C50808 * C1464 +
          ((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C50937 * C108 +
           (C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C50937 * C109 +
           (C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C50937 * C110 +
           (C517 * C2000 - (C174 * C51087 + C175 * C1999) + C518 * C51077 -
            (C117 * C1004 + C50907 * C1013) * C2001 -
            (C117 * C1014 + C50907 * C1019) * C1998) *
               C50937 * C111) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C2000 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C51077 +
            (C8180 * C1000 + C8175 * C1005 + C8181 * C1154 + C8176 * C1158 +
             C8182 * C3645 + C8177 * C3648) *
                C2001 +
            (C8180 * C1006 + C8175 * C1015 + C8181 * C1159 + C8176 * C1166 +
             C8182 * C3649 + C8177 * C3654) *
                C1998) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C1999 + (C8223 + C8224 + C8225) * C51087 -
            (C8590 + C8591 + C8592) * C2000 - (C8593 + C8594 + C8595) * C51077 +
            (C9184 + C9185 + C9186) * C2001 + (C9187 + C9188 + C9189) * C1998) *
               C50937 * C50759) *
              C50808 * C1464 +
          (((C8592 + C8591 + C8590) * C2000 -
            ((C8225 + C8224 + C8223) * C51087 +
             (C8222 + C8221 + C8220) * C1999) +
            (C8595 + C8594 + C8593) * C51077 - (C9186 + C9185 + C9184) * C2001 -
            (C9189 + C9188 + C9187) * C1998) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C2000 -
            ((C8226 + C8227 + C8228) * C51087 +
             (C8229 + C8230 + C8231) * C1999) +
            (C8599 + C8600 + C8601) * C51077 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C2001 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C1998) *
               C50937 * C50759) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C50937 * C108 +
           (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
              C50808 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
           (C179 + C178) * C50937 * C108) *
              C50808 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
           (C186 + C187) * C50937 * C111) *
              C50808 * C115 -
          (((C117 * C138 + C50907 * C146) * C50838 +
            (C117 * C125 + C50907 * C139) * C118) *
               C50937 * C111 +
           (C187 + C186) * C50937 * C110 + C194 * C109 + C195 * C108) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C630 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C631 +
           (((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C50937 * C108 +
            (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
            (C678 + C679) * C50937 * C111) *
               C632) *
              C51033 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C631 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C630 -
           (((C117 * C648 + C50907 * C654) * C50838 +
             (C117 * C639 + C50907 * C649) * C118) *
                C50937 * C111 +
            (C679 + C678) * C50937 * C110 + (C677 + C676) * C50937 * C109 +
            (C675 + C674) * C50937 * C108) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C50808 * C113 -
          (((C8226 + C8227 + C8228) * C50838 + (C8229 + C8230 + C8231) * C118) *
               C50937 * C50759 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C50937 * C51026) *
              C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C118 + (C8235 + C8236 + C8237) * C50838) *
               C50937 * C50759) *
              C50808 * C115 -
          (((C8182 * C648 + C8177 * C654 + C8181 * C313 + C8176 * C320 +
             C8180 * C134 + C8175 * C144) *
                C50838 +
            (C8182 * C639 + C8177 * C649 + C8181 * C302 + C8176 * C312 +
             C8180 * C123 + C8175 * C135) *
                C118) *
               C50937 * C50759 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C50937 * C51026) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C630 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C50937 * C51026 +
            ((C8760 + C8761 + C8762) * C118 +
             (C8763 + C8764 + C8765) * C50838) *
                C50937 * C50759) *
               C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C631 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C630 -
           (((C8182 * C3162 + C8177 * C3168 + C8181 * C756 + C8176 * C763 +
              C8180 * C645 + C8175 * C652) *
                 C50838 +
             (C8182 * C3159 + C8177 * C3163 + C8181 * C751 + C8176 * C757 +
              C8180 * C637 + C8175 * C644) *
                 C118) *
                C50937 * C50759 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C50937 * C51026) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C50937 * C108 +
            (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
               C51040 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C50937 * C108) *
               C50824) *
              C295 +
          (((C352 + C351) * C50937 * C108 + (C350 + C349) * C50937 * C109 +
            (C348 + C347) * C50937 * C110 + (C353 + C354) * C50937 * C111) *
               C50824 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50937 * C109 +
            (C179 + C178) * C50937 * C108) *
               C51040) *
              C296 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50937 * C110 +
            (C186 + C187) * C50937 * C111) *
               C51040 -
           (((C117 * C314 + C50907 * C321) * C50838 +
             (C117 * C303 + C50907 * C315) * C118) *
                C50937 * C111 +
            (C354 + C353) * C50937 * C110 + C357 * C109 + C358 * C108) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C118 +
            (C117 * C127 + C50907 * C140) * C50838) *
               C50937 * C108 +
           (C178 + C179) * C50937 * C109 + C192 * C110 + C193 * C111) *
              C745 -
          (C357 * C111 + C358 * C110 + (C351 + C352) * C50937 * C109 +
           ((C117 * C310 + C50907 * C319) * C50838 +
            (C117 * C301 + C50907 * C311) * C118) *
               C50937 * C108) *
              C746 +
          (((C117 * C635 + C50907 * C640) * C118 +
            (C117 * C641 + C50907 * C650) * C50838) *
               C50937 * C108 +
           (C674 + C675) * C50937 * C109 + (C676 + C677) * C50937 * C110 +
           (C678 + C679) * C50937 * C111) *
              C747 -
          (((C117 * C754 + C50907 * C762) * C50838 +
            (C117 * C750 + C50907 * C755) * C118) *
               C50937 * C111 +
           ((C117 * C756 + C50907 * C763) * C50838 +
            (C117 * C751 + C50907 * C757) * C118) *
               C50937 * C110 +
           ((C117 * C758 + C50907 * C764) * C50838 +
            (C117 * C752 + C50907 * C759) * C118) *
               C50937 * C109 +
           ((C117 * C760 + C50907 * C765) * C50838 +
            (C117 * C753 + C50907 * C761) * C118) *
               C50937 * C108) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C50937 * C51026 +
            ((C8220 + C8221 + C8222) * C118 +
             (C8223 + C8224 + C8225) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8408 + C8409 + C8410) * C50838 +
             (C8411 + C8412 + C8413) * C118) *
                C50937 * C50759 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C50937 * C51026) *
               C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C50937 * C51026 +
            ((C8414 + C8415 + C8416) * C118 +
             (C8417 + C8418 + C8419) * C50838) *
                C50937 * C50759) *
               C50824 -
           (((C8226 + C8227 + C8228) * C50838 +
             (C8229 + C8230 + C8231) * C118) *
                C50937 * C50759 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C50937 * C51026) *
               C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C50937 * C51026 +
            ((C8232 + C8233 + C8234) * C118 +
             (C8235 + C8236 + C8237) * C50838) *
                C50937 * C50759) *
               C51040 -
           (((C8182 * C754 + C8177 * C762 + C8181 * C647 + C8176 * C653 +
              C8180 * C304 + C8175 * C316) *
                 C50838 +
             (C8182 * C750 + C8177 * C755 + C8181 * C638 + C8176 * C646 +
              C8180 * C298 + C8175 * C305) *
                 C118) *
                C50937 * C50759 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C50937 * C51026) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C118 + (C8223 + C8224 + C8225) * C50838) *
               C50937 * C50759) *
              C745 -
          (((C8408 + C8409 + C8410) * C50838 + (C8411 + C8412 + C8413) * C118) *
               C50937 * C50759 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C50937 * C51026) *
              C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C118 + (C8763 + C8764 + C8765) * C50838) *
               C50937 * C50759) *
              C747 -
          (((C8182 * C8865 + C8177 * C8869 + C8181 * C3164 + C8176 * C3169 +
             C8180 * C758 + C8175 * C764) *
                C50838 +
            (C8182 * C8863 + C8177 * C8866 + C8181 * C3160 + C8176 * C3165 +
             C8180 * C752 + C8175 * C759) *
                C118) *
               C50937 * C50759 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C50937 * C51026) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 -
            (C117 * C460 + C50907 * C466) * C459 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
           C532 * C111) *
              C50808 * C295 +
          ((C519 - (C486 + C485) + C520) * C50937 * C108 +
           (C521 - (C492 + C491) + C522) * C50937 * C109 +
           (C523 - (C498 + C497) + C524) * C50937 * C110 +
           (C525 - (C505 + C506) + C526) * C50937 * C111) *
              C50808 * C296 +
          (C531 * C108 + C532 * C109 +
           (C506 + C505 - C525 - C526) * C50937 * C110 +
           (C176 * C458 + C177 * C51042 - (C117 * C465 + C50907 * C476) * C459 -
            (C117 * C477 + C50907 * C483) * C50850) *
               C50937 * C111) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C458 +
            (C117 * C127 + C50907 * C140) * C51042 -
            (C117 * C460 + C50907 * C466) * C459 -
            (C117 * C467 + C50907 * C478) * C50850) *
               C50937 * C108 +
           (C485 + C486 - C519 - C520) * C50937 * C109 + C531 * C110 +
           C532 * C111) *
              C630 +
          (((C117 * C864 + C50907 * C872) * C459 -
            ((C117 * C310 + C50907 * C319) * C51042 +
             (C117 * C301 + C50907 * C311) * C458) +
            (C117 * C873 + C50907 * C888) * C50850) *
               C50937 * C108 +
           ((C117 * C865 + C50907 * C874) * C459 -
            (C343 * C51042 + C344 * C458) +
            (C117 * C875 + C50907 * C889) * C50850) *
               C50937 * C109 +
           ((C117 * C866 + C50907 * C876) * C459 -
            (C341 * C51042 + C342 * C458) +
            (C117 * C877 + C50907 * C890) * C50850) *
               C50937 * C110 +
           ((C117 * C867 + C50907 * C878) * C459 -
            (C339 * C51042 + C340 * C458) +
            (C117 * C879 + C50907 * C891) * C50850) *
               C50937 * C111) *
              C631 +
          (((C117 * C635 + C50907 * C640) * C458 +
            (C117 * C641 + C50907 * C650) * C51042 -
            (C117 * C868 + C50907 * C880) * C459 -
            (C117 * C881 + C50907 * C892) * C50850) *
               C50937 * C108 +
           (C668 * C458 + C669 * C51042 - (C117 * C869 + C50907 * C882) * C459 -
            (C117 * C883 + C50907 * C893) * C50850) *
               C50937 * C109 +
           (C670 * C458 + C671 * C51042 - (C117 * C870 + C50907 * C884) * C459 -
            (C117 * C885 + C50907 * C894) * C50850) *
               C50937 * C110 +
           (C672 * C458 + C673 * C51042 - (C117 * C871 + C50907 * C886) * C459 -
            (C117 * C887 + C50907 * C895) * C50850) *
               C50937 * C111) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C50937 * C51026 +
           ((C8596 + C8597 + C8598) * C459 -
            ((C8226 + C8227 + C8228) * C51042 +
             (C8229 + C8230 + C8231) * C458) +
            (C8599 + C8600 + C8601) * C50850) *
               C50937 * C50759) *
              C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C50937 * C51026 +
           ((C8232 + C8233 + C8234) * C458 + (C8235 + C8236 + C8237) * C51042 -
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C459 -
            (C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50850) *
               C50937 * C50759) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C8182 * C868 + C8177 * C880 + C8181 * C864 + C8176 * C872 +
             C8180 * C460 + C8175 * C466) *
                C459 -
            (C8182 * C881 + C8177 * C892 + C8181 * C873 + C8176 * C888 +
             C8180 * C467 + C8175 * C478) *
                C50850) *
               C50937 * C51026 +
           ((C8220 + C8221 + C8222) * C458 + (C8223 + C8224 + C8225) * C51042 -
            (C8590 + C8591 + C8592) * C459 - (C8593 + C8594 + C8595) * C50850) *
               C50937 * C50759) *
              C630 +
          (((C8180 * C864 + C8175 * C872 + C8181 * C868 + C8176 * C880 +
             C8182 * C3317 + C8177 * C3320) *
                C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C8180 * C873 + C8175 * C888 + C8181 * C881 + C8176 * C892 +
             C8182 * C3321 + C8177 * C3326) *
                C50850) *
               C50937 * C51026 +
           ((C8180 * C865 + C8175 * C874 + C8181 * C869 + C8176 * C882 +
             C8182 * C3318 + C8177 * C3322) *
                C459 -
            ((C8408 + C8409 + C8410) * C51042 +
             (C8411 + C8412 + C8413) * C458) +
            (C8180 * C875 + C8175 * C889 + C8181 * C883 + C8176 * C893 +
             C8182 * C3323 + C8177 * C3327) *
                C50850) *
               C50937 * C50759) *
              C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C8182 * C9017 + C8177 * C9019 + C8181 * C3317 + C8176 * C3320 +
             C8180 * C868 + C8175 * C880) *
                C459 -
            (C8182 * C9020 + C8177 * C9023 + C8181 * C3321 + C8176 * C3326 +
             C8180 * C881 + C8175 * C892) *
                C50850) *
               C50937 * C51026 +
           ((C8760 + C8761 + C8762) * C458 + (C8763 + C8764 + C8765) * C51042 -
            (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
             C8180 * C869 + C8175 * C882) *
                C459 -
            (C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
             C8180 * C883 + C8175 * C893) *
                C50850) *
               C50937 * C50759) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C1358 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C50824) *
              C51085 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C50824 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C1358) *
              C51071 +
          ((C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                C2448) *
               C1358 -
           (((C2450 * C648 + C50923 * C654 + C2449 * C313 + C51053 * C320) *
                 C50838 +
             (C2450 * C639 + C50923 * C649 + C2449 * C302 + C51053 * C312) *
                 C118) *
                C50937 * C2448 +
            ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C50937 *
                C2447 +
            C2699 * C2446) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C1358 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C50824) *
              C51085 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C50824 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C1358) *
              C51071 +
          (((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
             C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
                C118 +
            (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
             C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
                C50838) *
               C50937 * C50754 * C1358 -
           ((C10999 * C3162 + C10994 * C3168 + C10998 * C756 + C10993 * C763 +
             C10997 * C645 + C10992 * C652 + C10996 * C306 + C10991 * C317) *
                C50838 +
            (C10999 * C3159 + C10994 * C3163 + C10998 * C751 + C10993 * C757 +
             C10997 * C637 + C10992 * C644 + C10996 * C299 + C10991 * C307) *
                C118) *
               C50937 * C50754 * C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C51086 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C51074 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C2446 +
            ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                C2447 +
            ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                C2448) *
               C1463) *
              C1464 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C51074 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C51086 -
           (((C2450 * C754 + C50923 * C762 + C2449 * C647 + C51053 * C653) *
                 C50838 +
             (C2450 * C750 + C50923 * C755 + C2449 * C638 + C51053 * C646) *
                 C118) *
                C50937 * C2448 +
            ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C50937 *
                C2447 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C50937 *
                C2446) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C51086 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C51074 +
           ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
             C10998 * C3161 + C10993 * C3167 + C10999 * C8864 +
             C10994 * C8868) *
                C118 +
            (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
             C10998 * C3166 + C10993 * C3170 + C10999 * C8867 +
             C10994 * C8870) *
                C50838) *
               C50937 * C50754 * C1463) *
              C1464 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C51074 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C51086 -
           ((C10999 * C8865 + C10994 * C8869 + C10998 * C3164 + C10993 * C3169 +
             C10997 * C758 + C10992 * C764 + C10996 * C643 + C10991 * C651) *
                C50838 +
            (C10999 * C8863 + C10994 * C8866 + C10998 * C3160 + C10993 * C3165 +
             C10997 * C752 + C10992 * C759 + C10996 * C636 + C10991 * C642) *
                C118) *
               C50937 * C50754 * C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C458 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C51042 -
             (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                 C459 -
             (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                 C50850) *
                C50937 * C2446 +
            ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
             (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
                C50937 * C2447 +
            C2891 * C2448) *
               C1358 +
           (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                 C459 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C51042 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C458) +
             (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C2446 +
            ((C4270 + C4271) * C459 -
             ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
             (C4272 + C4273) * C50850) *
                C50937 * C2447 +
            ((C4274 + C4275) * C459 - (C2694 * C51042 + C2695 * C458) +
             (C4276 + C4277) * C50850) *
                C50937 * C2448) *
               C50824) *
              C1464 +
          ((((C2873 + C2872) * C459 -
             ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
             (C2875 + C2874) * C50850) *
                C50937 * C2446 +
            ((C2878 + C2877) * C459 -
             ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
             (C2880 + C2879) * C50850) *
                C50937 * C2447 +
            ((C2881 + C2882) * C459 - (C2502 * C51042 + C2503 * C458) +
             (C2883 + C2884) * C50850) *
                C50937 * C2448) *
               C1358 +
           (((C2689 + C2688) * C458 + (C2687 + C2686) * C51042 -
             (C4271 + C4270) * C459 - (C4273 + C4272) * C50850) *
                C50937 * C2446 +
            ((C2685 + C2684) * C458 + (C2683 + C2682) * C51042 -
             (C4275 + C4274) * C459 - (C4277 + C4276) * C50850) *
                C50937 * C2447 +
            ((C2690 + C2691) * C458 + (C2692 + C2693) * C51042 -
             (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                 C459 -
             (C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                 C50850) *
                C50937 * C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C458 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C51042 -
            (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
             C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
                C459 -
            (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
             C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
             C10998 * C3317 + C10993 * C3320 + C10999 * C9017 +
             C10994 * C9019) *
                C459 -
            ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
              C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                 C51042 +
             (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
              C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                 C458) +
            (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
             C10998 * C3321 + C10993 * C3326 + C10999 * C9020 +
             C10994 * C9023) *
                C50850) *
               C50937 * C50754 * C50824) *
              C1464 +
          (((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
             C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
                C459 -
            ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
              C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                 C51042 +
             (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
              C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                 C458) +
            (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
             C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C458 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C51042 -
            (C10999 * C9018 + C10994 * C9021 + C10998 * C3318 + C10993 * C3322 +
             C10997 * C869 + C10992 * C882 + C10996 * C865 + C10991 * C874) *
                C459 -
            (C10999 * C9022 + C10994 * C9024 + C10998 * C3323 + C10993 * C3327 +
             C10997 * C883 + C10992 * C893 + C10996 * C875 + C10991 * C889) *
                C50850) *
               C50937 * C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                 C1731 -
             (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                 C50850) *
                C50937 * C2446 +
            ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
             (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
                C50937 * C2447 +
            C4431 * C2448) *
               C1358 +
           (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                 C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C2446 +
            ((C4270 + C4271) * C1731 -
             ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
             (C4272 + C4273) * C50850) *
                C50937 * C2447 +
            ((C4274 + C4275) * C1731 - (C2694 * C1728 + C2695 * C1730) +
             (C4276 + C4277) * C50850) *
                C50937 * C2448) *
               C50824) *
              C51033 +
          ((((C2873 + C2872) * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             (C2875 + C2874) * C50850) *
                C50937 * C2446 +
            ((C2878 + C2877) * C1731 -
             ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
             (C2880 + C2879) * C50850) *
                C50937 * C2447 +
            ((C2881 + C2882) * C1731 - (C2502 * C1728 + C2503 * C1730) +
             (C2883 + C2884) * C50850) *
                C50937 * C2448) *
               C1358 +
           (((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
             (C4271 + C4270) * C1731 - (C4273 + C4272) * C50850) *
                C50937 * C2446 +
            ((C2685 + C2684) * C1730 + (C2683 + C2682) * C1728 -
             (C4275 + C4274) * C1731 - (C4277 + C4276) * C50850) *
                C50937 * C2447 +
            ((C2690 + C2691) * C1730 + (C2692 + C2693) * C1728 -
             (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                 C1731 -
             (C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                 C50850) *
                C50937 * C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C1730 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C1728 -
            (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
             C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
                C1731 -
            (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
             C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
             C10998 * C3317 + C10993 * C3320 + C10999 * C9017 +
             C10994 * C9019) *
                C1731 -
            ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
              C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                 C1728 +
             (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
              C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                 C1730) +
            (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
             C10998 * C3321 + C10993 * C3326 + C10999 * C9020 +
             C10994 * C9023) *
                C50850) *
               C50937 * C50754 * C50824) *
              C51033 +
          (((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
             C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
                C1731 -
            ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
              C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                 C1728 +
             (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
              C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                 C1730) +
            (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
             C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
                C50850) *
               C50937 * C50754 * C1358 +
           ((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C1730 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C1728 -
            (C10999 * C9018 + C10994 * C9021 + C10998 * C3318 + C10993 * C3322 +
             C10997 * C869 + C10992 * C882 + C10996 * C865 + C10991 * C874) *
                C1731 -
            (C10999 * C9022 + C10994 * C9024 + C10998 * C3323 + C10993 * C3327 +
             C10997 * C883 + C10992 * C893 + C10996 * C875 + C10991 * C889) *
                C50850) *
               C50937 * C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1730 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1728 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C1731 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
            (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C4431 * C2448) *
              C51086 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C1731 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C1728 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C1730) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C4270 + C4271) * C1731 -
            ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
            (C4272 + C4273) * C50850) *
               C50937 * C2447 +
           ((C4274 + C4275) * C1731 - (C2694 * C1728 + C2695 * C1730) +
            (C4276 + C4277) * C50850) *
               C50937 * C2448) *
              C51074 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C1730 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C1728 -
            (C2450 * C3317 + C50923 * C3320 + C2449 * C868 + C51053 * C880) *
                C1731 -
            (C2450 * C3321 + C50923 * C3326 + C2449 * C881 + C51053 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C3054 + C3055) * C1730 + (C3056 + C3057) * C1728 -
            (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                C1731 -
            (C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C3058 + C3059) * C1730 + (C3060 + C3061) * C1728 -
            (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                C1731 -
            (C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                C50850) *
               C50937 * C2448) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1730 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C1728 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C1731 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C51086 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C1731 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C1728 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C1730) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C50850) *
              C50937 * C50754 * C51074 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C1730 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C1728 -
           (C10999 * C11462 + C10994 * C11463 + C10998 * C9017 +
            C10993 * C9019 + C10997 * C3317 + C10992 * C3320 + C10996 * C868 +
            C10991 * C880) *
               C1731 -
           (C10999 * C11464 + C10994 * C11465 + C10998 * C9020 +
            C10993 * C9023 + C10997 * C3321 + C10992 * C3326 + C10996 * C881 +
            C10991 * C892) *
               C50850) *
              C50937 * C50754 * C1463) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1999 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51087 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C2000 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C51077 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C2001 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C1998) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1999 + (C2486 + C2487) * C51087 -
            (C2872 + C2873) * C2000 - (C2874 + C2875) * C51077 +
            (C3492 + C3493) * C2001 + (C3494 + C3495) * C1998) *
               C50937 * C2447 +
           (C2500 * C1999 + C2501 * C51087 - C2885 * C2000 - C2886 * C51077 +
            (C3496 + C3497) * C2001 + (C3498 + C3499) * C1998) *
               C50937 * C2448) *
              C1358 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C2000 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51087 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C1999) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C51077 -
            (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                C2001 -
            (C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                C1998) *
               C50937 * C2446 +
           ((C4270 + C4271) * C2000 -
            ((C2686 + C2687) * C51087 + (C2688 + C2689) * C1999) +
            (C4272 + C4273) * C51077 -
            (C2450 * C3646 + C50923 * C3650 + C2449 * C1155 + C51053 * C1160) *
                C2001 -
            (C2450 * C3651 + C50923 * C3655 + C2449 * C1161 + C51053 * C1167) *
                C1998) *
               C50937 * C2447 +
           ((C4274 + C4275) * C2000 - (C2694 * C51087 + C2695 * C1999) +
            (C4276 + C4277) * C51077 -
            (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                C2001 -
            (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                C1998) *
               C50937 * C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1999 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51087 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C2000 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C51077 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C2001 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C1998) *
              C50937 * C50754 * C1358 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C2000 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C51087 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C1999) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C51077 -
           (C10999 * C11662 + C10994 * C11663 + C10998 * C9335 +
            C10993 * C9337 + C10997 * C3645 + C10992 * C3648 + C10996 * C1154 +
            C10991 * C1158) *
               C2001 -
           (C10999 * C11664 + C10994 * C11665 + C10998 * C9338 +
            C10993 * C9341 + C10997 * C3649 + C10992 * C3654 + C10996 * C1159 +
            C10991 * C1166) *
               C1998) *
              C50937 * C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C630 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C631 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C2446 +
            ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                C2447 +
            ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                C2448) *
               C632) *
              C51033 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C631 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C630 -
           (((C2450 * C754 + C50923 * C762 + C2449 * C647 + C51053 * C653) *
                 C50838 +
             (C2450 * C750 + C50923 * C755 + C2449 * C638 + C51053 * C646) *
                 C118) *
                C50937 * C2448 +
            ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C50937 *
                C2447 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C50937 *
                C2446) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
               C2447 +
           C2510 * C2448) *
              C50808 * C113 -
          (C2511 * C2448 +
           ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
               C2447 +
           ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
               C2446) *
              C50808 * C114 +
          (C2510 * C2446 +
           ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
               C2447 +
           ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
               C2448) *
              C50808 * C115 -
          (((C2450 * C314 + C50923 * C321 + C2449 * C137 + C51053 * C145) *
                C50838 +
            (C2450 * C303 + C50923 * C315 + C2449 * C124 + C51053 * C136) *
                C118) *
               C50937 * C2448 +
           ((C2499 + C2498) * C50838 + (C2497 + C2496) * C118) * C50937 *
               C2447 +
           C2511 * C2446) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C997 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C994 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C998 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C995 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C999 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C996) *
               C50937 * C2446 +
           ((C2484 + C2485) * C997 + (C2486 + C2487) * C994 -
            (C2872 + C2873) * C998 - (C2874 + C2875) * C995 +
            (C3492 + C3493) * C999 + (C3494 + C3495) * C996) *
               C50937 * C2447 +
           (C2500 * C997 + C2501 * C994 - C2885 * C998 - C2886 * C995 +
            (C3496 + C3497) * C999 + (C3498 + C3499) * C996) *
               C50937 * C2448) *
              C50808 * C51033 +
          (((C2873 + C2872) * C998 -
            ((C2487 + C2486) * C994 + (C2485 + C2484) * C997) +
            (C2875 + C2874) * C995 - (C3493 + C3492) * C999 -
            (C3495 + C3494) * C996) *
               C50937 * C2446 +
           ((C2878 + C2877) * C998 -
            ((C2491 + C2490) * C994 + (C2489 + C2488) * C997) +
            (C2880 + C2879) * C995 - (C3497 + C3496) * C999 -
            (C3499 + C3498) * C996) *
               C50937 * C2447 +
           ((C2881 + C2882) * C998 - (C2502 * C994 + C2503 * C997) +
            (C2883 + C2884) * C995 -
            (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                C999 -
            (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                C996) *
               C50937 * C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C50808 * C113 -
          ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
            C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
               C50838 +
           (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
            C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
               C118) *
              C50937 * C50754 * C50808 * C114 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C118 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C50838) *
              C50937 * C50754 * C50808 * C115 -
          ((C10999 * C754 + C10994 * C762 + C10998 * C647 + C10993 * C653 +
            C10997 * C304 + C10992 * C316 + C10996 * C133 + C10991 * C143) *
               C50838 +
           (C10999 * C750 + C10994 * C755 + C10998 * C638 + C10993 * C646 +
            C10997 * C298 + C10992 * C305 + C10996 * C122 + C10991 * C132) *
               C118) *
              C50937 * C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C630 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C631 +
           ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
             C10998 * C3161 + C10993 * C3167 + C10999 * C8864 +
             C10994 * C8868) *
                C118 +
            (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
             C10998 * C3166 + C10993 * C3170 + C10999 * C8867 +
             C10994 * C8870) *
                C50838) *
               C50937 * C50754 * C632) *
              C51033 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C631 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C630 -
           ((C10999 * C8865 + C10994 * C8869 + C10998 * C3164 + C10993 * C3169 +
             C10997 * C758 + C10992 * C764 + C10996 * C643 + C10991 * C651) *
                C50838 +
            (C10999 * C8863 + C10994 * C8866 + C10998 * C3160 + C10993 * C3165 +
             C10997 * C752 + C10992 * C759 + C10996 * C636 + C10991 * C642) *
                C118) *
               C50937 * C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C997 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C994 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C998 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C995 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C999 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C996) *
              C50937 * C50754 * C50808 * C51033 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C998 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C994 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C997) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C995 -
           (C10999 * C9336 + C10994 * C9339 + C10998 * C3646 + C10993 * C3650 +
            C10997 * C1155 + C10992 * C1160 + C10996 * C1001 + C10991 * C1007) *
               C999 -
           (C10999 * C9340 + C10994 * C9342 + C10998 * C3651 + C10993 * C3655 +
            C10997 * C1161 + C10992 * C1167 + C10996 * C1008 + C10991 * C1016) *
               C996) *
              C50937 * C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
               C2447 +
           C2510 * C2448) *
              C745 -
          (C2699 * C2448 +
           ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
               C2447 +
           ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                C50838 +
            (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                C118) *
               C50937 * C2446) *
              C746 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C118 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C50838) *
               C50937 * C2446 +
           ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
               C2447 +
           ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
               C2448) *
              C747 -
          (((C2450 * C3162 + C50923 * C3168 + C2449 * C756 + C51053 * C763) *
                C50838 +
            (C2450 * C3159 + C50923 * C3163 + C2449 * C751 + C51053 * C757) *
                C118) *
               C50937 * C2448 +
           ((C2450 * C3164 + C50923 * C3169 + C2449 * C758 + C51053 * C764) *
                C50838 +
            (C2450 * C3160 + C50923 * C3165 + C2449 * C752 + C51053 * C759) *
                C118) *
               C50937 * C2447 +
           ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                C50838 +
            (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                C118) *
               C50937 * C2446) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C51040 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C50824) *
              C295 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C50824 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C51040) *
              C296 +
          ((C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                C2448) *
               C51040 -
           (((C2450 * C648 + C50923 * C654 + C2449 * C313 + C51053 * C320) *
                 C50838 +
             (C2450 * C639 + C50923 * C649 + C2449 * C302 + C51053 * C312) *
                 C118) *
                C50937 * C2448 +
            ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C50937 *
                C2447 +
            C2699 * C2446) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C997 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C994 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C998 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C995 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C999 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C996) *
               C50937 * C2446 +
           ((C2484 + C2485) * C997 + (C2486 + C2487) * C994 -
            (C2872 + C2873) * C998 - (C2874 + C2875) * C995 +
            (C3492 + C3493) * C999 + (C3494 + C3495) * C996) *
               C50937 * C2447 +
           (C2500 * C997 + C2501 * C994 - C2885 * C998 - C2886 * C995 +
            (C3496 + C3497) * C999 + (C3498 + C3499) * C996) *
               C50937 * C2448) *
              C51040 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C998 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C994 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C997) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C995 -
            (C2450 * C3645 + C50923 * C3648 + C2449 * C1154 + C51053 * C1158) *
                C999 -
            (C2450 * C3649 + C50923 * C3654 + C2449 * C1159 + C51053 * C1166) *
                C996) *
               C50937 * C2446 +
           ((C2449 * C865 + C51053 * C874 + C2450 * C869 + C50923 * C882) *
                C998 -
            ((C2686 + C2687) * C994 + (C2688 + C2689) * C997) +
            (C2449 * C875 + C51053 * C889 + C2450 * C883 + C50923 * C893) *
                C995 -
            (C2450 * C3646 + C50923 * C3650 + C2449 * C1155 + C51053 * C1160) *
                C999 -
            (C2450 * C3651 + C50923 * C3655 + C2449 * C1161 + C51053 * C1167) *
                C996) *
               C50937 * C2447 +
           ((C2449 * C866 + C51053 * C876 + C2450 * C870 + C50923 * C884) *
                C998 -
            (C2694 * C994 + C2695 * C997) +
            (C2449 * C877 + C51053 * C890 + C2450 * C885 + C50923 * C894) *
                C995 -
            (C2450 * C3647 + C50923 * C3652 + C2449 * C1156 + C51053 * C1162) *
                C999 -
            (C2450 * C3653 + C50923 * C3656 + C2449 * C1163 + C51053 * C1168) *
                C996) *
               C50937 * C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C50824) *
              C295 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C50824 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C51040) *
              C296 +
          (((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
             C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
                C118 +
            (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
             C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3162 + C10994 * C3168 + C10998 * C756 + C10993 * C763 +
             C10997 * C645 + C10992 * C652 + C10996 * C306 + C10991 * C317) *
                C50838 +
            (C10999 * C3159 + C10994 * C3163 + C10998 * C751 + C10993 * C757 +
             C10997 * C637 + C10992 * C644 + C10996 * C299 + C10991 * C307) *
                C118) *
               C50937 * C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C745 -
          ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
            C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
               C50838 +
           (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
            C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
               C118) *
              C50937 * C50754 * C746 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C118 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C50838) *
              C50937 * C50754 * C747 -
          ((C10999 * C11361 + C10994 * C11363 + C10998 * C8867 +
            C10993 * C8870 + C10997 * C3166 + C10992 * C3170 + C10996 * C760 +
            C10991 * C765) *
               C50838 +
           (C10999 * C11360 + C10994 * C11362 + C10998 * C8864 +
            C10993 * C8868 + C10997 * C3161 + C10992 * C3167 + C10996 * C753 +
            C10991 * C761) *
               C118) *
              C50937 * C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C997 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C994 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C998 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C995 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C999 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C996) *
              C50937 * C50754 * C51040 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C998 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C994 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C997) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C995 -
           (C10999 * C11662 + C10994 * C11663 + C10998 * C9335 +
            C10993 * C9337 + C10997 * C3645 + C10992 * C3648 + C10996 * C1154 +
            C10991 * C1158) *
               C999 -
           (C10999 * C11664 + C10994 * C11665 + C10998 * C9338 +
            C10993 * C9341 + C10997 * C3649 + C10992 * C3654 + C10996 * C1159 +
            C10991 * C1166) *
               C996) *
              C50937 * C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C459 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
            (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C2891 * C2448) *
              C630 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C459 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51042 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C458) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C2449 * C865 + C51053 * C874 + C2450 * C869 + C50923 * C882) *
                C459 -
            ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
            (C2449 * C875 + C51053 * C889 + C2450 * C883 + C50923 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C2449 * C866 + C51053 * C876 + C2450 * C870 + C50923 * C884) *
                C459 -
            (C2694 * C51042 + C2695 * C458) +
            (C2449 * C877 + C51053 * C890 + C2450 * C885 + C50923 * C894) *
                C50850) *
               C50937 * C2448) *
              C631 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C458 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C51042 -
            (C2450 * C3317 + C50923 * C3320 + C2449 * C868 + C51053 * C880) *
                C459 -
            (C2450 * C3321 + C50923 * C3326 + C2449 * C881 + C51053 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C3054 + C3055) * C458 + (C3056 + C3057) * C51042 -
            (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                C459 -
            (C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C3058 + C3059) * C458 + (C3060 + C3061) * C51042 -
            (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                C459 -
            (C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                C50850) *
               C50937 * C2448) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C459 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
            (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C2891 * C2448) *
              C50808 * C295 +
          (((C2873 + C2872) * C459 -
            ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
            (C2875 + C2874) * C50850) *
               C50937 * C2446 +
           ((C2878 + C2877) * C459 -
            ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
            (C2880 + C2879) * C50850) *
               C50937 * C2447 +
           ((C2881 + C2882) * C459 - (C2502 * C51042 + C2503 * C458) +
            (C2883 + C2884) * C50850) *
               C50937 * C2448) *
              C50808 * C296 +
          (C2891 * C2446 +
           ((C2495 + C2494) * C458 + (C2493 + C2492) * C51042 -
            (C2882 + C2881) * C459 - (C2884 + C2883) * C50850) *
               C50937 * C2447 +
           ((C2496 + C2497) * C458 + (C2498 + C2499) * C51042 -
            (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                C459 -
            (C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                C50850) *
               C50937 * C2448) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
               C1240 +
           (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
               C1236 -
           (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
               C1241 -
           (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
               C1237 +
           (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
               C1242 +
           (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
               C1238 -
           (C2450 * C3755 + C50923 * C3758 + C2449 * C1244 + C51053 * C1248) *
               C1243 -
           (C2450 * C3759 + C50923 * C3764 + C2449 * C1249 + C51053 * C1256) *
               C1239) *
              C50937 * C2446 +
          ((C2484 + C2485) * C1240 + (C2486 + C2487) * C1236 -
           (C2872 + C2873) * C1241 - (C2874 + C2875) * C1237 +
           (C3492 + C3493) * C1242 + (C3494 + C3495) * C1238 -
           (C2450 * C3756 + C50923 * C3760 + C2449 * C1245 + C51053 * C1250) *
               C1243 -
           (C2450 * C3761 + C50923 * C3765 + C2449 * C1251 + C51053 * C1257) *
               C1239) *
              C50937 * C2447 +
          (C2500 * C1240 + C2501 * C1236 - C2885 * C1241 - C2886 * C1237 +
           (C3496 + C3497) * C1242 + (C3498 + C3499) * C1238 -
           (C2450 * C3757 + C50923 * C3762 + C2449 * C1246 + C51053 * C1252) *
               C1243 -
           (C2450 * C3763 + C50923 * C3766 + C2449 * C1253 + C51053 * C1258) *
               C1239) *
              C50937 * C2448) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C50808 * C295 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C459 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C51042 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C458) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C50850) *
              C50937 * C50754 * C50808 * C296 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C458 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C51042 -
           (C10999 * C3319 + C10994 * C3324 + C10998 * C870 + C10993 * C884 +
            C10997 * C866 + C10992 * C876 + C10996 * C462 + C10991 * C470) *
               C459 -
           (C10999 * C3325 + C10994 * C3328 + C10998 * C885 + C10993 * C894 +
            C10997 * C877 + C10992 * C890 + C10996 * C471 + C10991 * C480) *
               C50850) *
              C50937 * C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C630 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C459 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C51042 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C458) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C50850) *
              C50937 * C50754 * C631 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C458 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C51042 -
           (C10999 * C11462 + C10994 * C11463 + C10998 * C9017 +
            C10993 * C9019 + C10997 * C3317 + C10992 * C3320 + C10996 * C868 +
            C10991 * C880) *
               C459 -
           (C10999 * C11464 + C10994 * C11465 + C10998 * C9020 +
            C10993 * C9023 + C10997 * C3321 + C10992 * C3326 + C10996 * C881 +
            C10991 * C892) *
               C50850) *
              C50937 * C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
           C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
              C1240 +
          (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
           C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
              C1236 -
          (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
           C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
              C1241 -
          (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
           C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
              C1237 +
          (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
           C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
              C1242 +
          (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
           C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
              C1238 -
          (C10999 * C11732 + C10994 * C11733 + C10998 * C9441 + C10993 * C9443 +
           C10997 * C3755 + C10992 * C3758 + C10996 * C1244 + C10991 * C1248) *
              C1243 -
          (C10999 * C11734 + C10994 * C11735 + C10998 * C9444 + C10993 * C9447 +
           C10997 * C3759 + C10992 * C3764 + C10996 * C1249 + C10991 * C1256) *
              C1239) *
         C50937 * C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1730 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C1728 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C1731 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
            (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C4431 * C2448) *
              C50808 * C51085 +
          (((C2873 + C2872) * C1731 -
            ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
            (C2875 + C2874) * C50850) *
               C50937 * C2446 +
           ((C2878 + C2877) * C1731 -
            ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
            (C2880 + C2879) * C50850) *
               C50937 * C2447 +
           ((C2881 + C2882) * C1731 - (C2502 * C1728 + C2503 * C1730) +
            (C2883 + C2884) * C50850) *
               C50937 * C2448) *
              C50808 * C51071 +
          (C4431 * C2446 +
           ((C2495 + C2494) * C1730 + (C2493 + C2492) * C1728 -
            (C2882 + C2881) * C1731 - (C2884 + C2883) * C50850) *
               C50937 * C2447 +
           ((C2496 + C2497) * C1730 + (C2498 + C2499) * C1728 -
            (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                C1731 -
            (C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                C50850) *
               C50937 * C2448) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1730 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C1728 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C1731 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C50808 * C51085 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C1731 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C1728 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C1730) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C50850) *
              C50937 * C50754 * C50808 * C51071 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C1730 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C1728 -
           (C10999 * C3319 + C10994 * C3324 + C10998 * C870 + C10993 * C884 +
            C10997 * C866 + C10992 * C876 + C10996 * C462 + C10991 * C470) *
               C1731 -
           (C10999 * C3325 + C10994 * C3328 + C10998 * C885 + C10993 * C894 +
            C10997 * C877 + C10992 * C890 + C10996 * C471 + C10991 * C480) *
               C50850) *
              C50937 * C50754 * C50808 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C1730 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C1728 -
             (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                 C1731 -
             (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                 C50850) *
                C50937 * C2446 +
            ((C2484 + C2485) * C1730 + (C2486 + C2487) * C1728 -
             (C2872 + C2873) * C1731 - (C2874 + C2875) * C50850) *
                C50937 * C2447 +
            C4431 * C2448) *
               C51040 +
           (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                 C1731 -
             ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                  C1728 +
              (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                  C1730) +
             (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                 C50850) *
                C50937 * C2446 +
            ((C4270 + C4271) * C1731 -
             ((C2686 + C2687) * C1728 + (C2688 + C2689) * C1730) +
             (C4272 + C4273) * C50850) *
                C50937 * C2447 +
            ((C4274 + C4275) * C1731 - (C2694 * C1728 + C2695 * C1730) +
             (C4276 + C4277) * C50850) *
                C50937 * C2448) *
               C50824) *
              C1464 +
          ((((C2873 + C2872) * C1731 -
             ((C2487 + C2486) * C1728 + (C2485 + C2484) * C1730) +
             (C2875 + C2874) * C50850) *
                C50937 * C2446 +
            ((C2878 + C2877) * C1731 -
             ((C2491 + C2490) * C1728 + (C2489 + C2488) * C1730) +
             (C2880 + C2879) * C50850) *
                C50937 * C2447 +
            ((C2881 + C2882) * C1731 - (C2502 * C1728 + C2503 * C1730) +
             (C2883 + C2884) * C50850) *
                C50937 * C2448) *
               C51040 +
           (((C2689 + C2688) * C1730 + (C2687 + C2686) * C1728 -
             (C4271 + C4270) * C1731 - (C4273 + C4272) * C50850) *
                C50937 * C2446 +
            ((C2685 + C2684) * C1730 + (C2683 + C2682) * C1728 -
             (C4275 + C4274) * C1731 - (C4277 + C4276) * C50850) *
                C50937 * C2447 +
            ((C2690 + C2691) * C1730 + (C2692 + C2693) * C1728 -
             (C2450 * C871 + C50923 * C886 + C2449 * C867 + C51053 * C878) *
                 C1731 -
             (C2450 * C887 + C50923 * C895 + C2449 * C879 + C51053 * C891) *
                 C50850) *
                C50937 * C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C1730 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C1728 -
            (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
             C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
                C1731 -
            (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
             C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
                C50850) *
               C50937 * C50754 * C51040 +
           ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
             C10998 * C3317 + C10993 * C3320 + C10999 * C9017 +
             C10994 * C9019) *
                C1731 -
            ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
              C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                 C1728 +
             (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
              C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                 C1730) +
            (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
             C10998 * C3321 + C10993 * C3326 + C10999 * C9020 +
             C10994 * C9023) *
                C50850) *
               C50937 * C50754 * C50824) *
              C1464 +
          (((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
             C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
                C1731 -
            ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
              C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                 C1728 +
             (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
              C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                 C1730) +
            (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
             C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
                C50850) *
               C50937 * C50754 * C51040 +
           ((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C1730 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C1728 -
            (C10999 * C9018 + C10994 * C9021 + C10998 * C3318 + C10993 * C3322 +
             C10997 * C869 + C10992 * C882 + C10996 * C865 + C10991 * C874) *
                C1731 -
            (C10999 * C9022 + C10994 * C9024 + C10998 * C3323 + C10993 * C3327 +
             C10997 * C883 + C10992 * C893 + C10996 * C875 + C10991 * C889) *
                C50850) *
               C50937 * C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C1999 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51087 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C2000 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C51077 +
            (C2449 * C1000 + C51053 * C1005 + C2450 * C1154 + C50923 * C1158) *
                C2001 +
            (C2449 * C1006 + C51053 * C1015 + C2450 * C1159 + C50923 * C1166) *
                C1998) *
               C50937 * C2446 +
           ((C2484 + C2485) * C1999 + (C2486 + C2487) * C51087 -
            (C2872 + C2873) * C2000 - (C2874 + C2875) * C51077 +
            (C3492 + C3493) * C2001 + (C3494 + C3495) * C1998) *
               C50937 * C2447 +
           (C2500 * C1999 + C2501 * C51087 - C2885 * C2000 - C2886 * C51077 +
            (C3496 + C3497) * C2001 + (C3498 + C3499) * C1998) *
               C50937 * C2448) *
              C50808 * C1464 +
          (((C2873 + C2872) * C2000 -
            ((C2487 + C2486) * C51087 + (C2485 + C2484) * C1999) +
            (C2875 + C2874) * C51077 - (C3493 + C3492) * C2001 -
            (C3495 + C3494) * C1998) *
               C50937 * C2446 +
           ((C2878 + C2877) * C2000 -
            ((C2491 + C2490) * C51087 + (C2489 + C2488) * C1999) +
            (C2880 + C2879) * C51077 - (C3497 + C3496) * C2001 -
            (C3499 + C3498) * C1998) *
               C50937 * C2447 +
           ((C2881 + C2882) * C2000 - (C2502 * C51087 + C2503 * C1999) +
            (C2883 + C2884) * C51077 -
            (C2450 * C1157 + C50923 * C1164 + C2449 * C1003 + C51053 * C1011) *
                C2001 -
            (C2450 * C1165 + C50923 * C1169 + C2449 * C1012 + C51053 * C1018) *
                C1998) *
               C50937 * C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C1999 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51087 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C2000 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C51077 +
           (C10996 * C1000 + C10991 * C1005 + C10997 * C1154 + C10992 * C1158 +
            C10998 * C3645 + C10993 * C3648 + C10999 * C9335 + C10994 * C9337) *
               C2001 +
           (C10996 * C1006 + C10991 * C1015 + C10997 * C1159 + C10992 * C1166 +
            C10998 * C3649 + C10993 * C3654 + C10999 * C9338 + C10994 * C9341) *
               C1998) *
              C50937 * C50754 * C50808 * C1464 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C2000 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C51087 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C1999) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C51077 -
           (C10999 * C9336 + C10994 * C9339 + C10998 * C3646 + C10993 * C3650 +
            C10997 * C1155 + C10992 * C1160 + C10996 * C1001 + C10991 * C1007) *
               C2001 -
           (C10999 * C9340 + C10994 * C9342 + C10998 * C3651 + C10993 * C3655 +
            C10997 * C1161 + C10992 * C1167 + C10996 * C1008 + C10991 * C1016) *
               C1998) *
              C50937 * C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
               C2447 +
           C2510 * C2448) *
              C50808 * C113 -
          (C2511 * C2448 +
           ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
               C2447 +
           ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
               C2446) *
              C50808 * C114 +
          (C2510 * C2446 +
           ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
               C2447 +
           ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
               C2448) *
              C50808 * C115 -
          (((C2450 * C314 + C50923 * C321 + C2449 * C137 + C51053 * C145) *
                C50838 +
            (C2450 * C303 + C50923 * C315 + C2449 * C124 + C51053 * C136) *
                C118) *
               C50937 * C2448 +
           ((C2499 + C2498) * C50838 + (C2497 + C2496) * C118) * C50937 *
               C2447 +
           C2511 * C2446) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C630 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C631 +
           (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                 C118 +
             (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                 C50838) *
                C50937 * C2446 +
            ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
                C2447 +
            ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
                C2448) *
               C632) *
              C51033 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C631 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C630 -
           (((C2450 * C754 + C50923 * C762 + C2449 * C647 + C51053 * C653) *
                 C50838 +
             (C2450 * C750 + C50923 * C755 + C2449 * C638 + C51053 * C646) *
                 C118) *
                C50937 * C2448 +
            ((C3061 + C3060) * C50838 + (C3059 + C3058) * C118) * C50937 *
                C2447 +
            ((C3057 + C3056) * C50838 + (C3055 + C3054) * C118) * C50937 *
                C2446) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C50808 * C113 -
          ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
            C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
               C50838 +
           (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
            C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
               C118) *
              C50937 * C50754 * C50808 * C114 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C118 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C50838) *
              C50937 * C50754 * C50808 * C115 -
          ((C10999 * C754 + C10994 * C762 + C10998 * C647 + C10993 * C653 +
            C10997 * C304 + C10992 * C316 + C10996 * C133 + C10991 * C143) *
               C50838 +
           (C10999 * C750 + C10994 * C755 + C10998 * C638 + C10993 * C646 +
            C10997 * C298 + C10992 * C305 + C10996 * C122 + C10991 * C132) *
               C118) *
              C50937 * C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C630 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C631 +
           ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
             C10998 * C3161 + C10993 * C3167 + C10999 * C8864 +
             C10994 * C8868) *
                C118 +
            (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
             C10998 * C3166 + C10993 * C3170 + C10999 * C8867 +
             C10994 * C8870) *
                C50838) *
               C50937 * C50754 * C632) *
              C51033 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C631 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C630 -
           ((C10999 * C8865 + C10994 * C8869 + C10998 * C3164 + C10993 * C3169 +
             C10997 * C758 + C10992 * C764 + C10996 * C643 + C10991 * C651) *
                C50838 +
            (C10999 * C8863 + C10994 * C8866 + C10998 * C3160 + C10993 * C3165 +
             C10997 * C752 + C10992 * C759 + C10996 * C636 + C10991 * C642) *
                C118) *
               C50937 * C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                 C118 +
             (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                 C50838) *
                C50937 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
                C2447 +
            C2510 * C2448) *
               C51040 -
           (C2699 * C2448 +
            ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
                C2447 +
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C50838 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C118) *
                C50937 * C2446) *
               C50824) *
              C295 +
          ((((C2689 + C2688) * C118 + (C2687 + C2686) * C50838) * C50937 *
                C2446 +
            ((C2685 + C2684) * C118 + (C2683 + C2682) * C50838) * C50937 *
                C2447 +
            ((C2690 + C2691) * C118 + (C2692 + C2693) * C50838) * C50937 *
                C2448) *
               C50824 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C50838 + (C2489 + C2488) * C118) * C50937 *
                C2447 +
            ((C2487 + C2486) * C50838 + (C2485 + C2484) * C118) * C50937 *
                C2446) *
               C51040) *
              C296 +
          ((C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C50838) * C50937 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C50838) * C50937 *
                C2448) *
               C51040 -
           (((C2450 * C648 + C50923 * C654 + C2449 * C313 + C51053 * C320) *
                 C50838 +
             (C2450 * C639 + C50923 * C649 + C2449 * C302 + C51053 * C312) *
                 C118) *
                C50937 * C2448 +
            ((C2693 + C2692) * C50838 + (C2691 + C2690) * C118) * C50937 *
                C2447 +
            C2699 * C2446) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C118 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C50838) *
               C50937 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C50838) * C50937 *
               C2447 +
           C2510 * C2448) *
              C745 -
          (C2699 * C2448 +
           ((C2686 + C2687) * C50838 + (C2688 + C2689) * C118) * C50937 *
               C2447 +
           ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                C50838 +
            (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                C118) *
               C50937 * C2446) *
              C746 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C118 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C50838) *
               C50937 * C2446 +
           ((C3054 + C3055) * C118 + (C3056 + C3057) * C50838) * C50937 *
               C2447 +
           ((C3058 + C3059) * C118 + (C3060 + C3061) * C50838) * C50937 *
               C2448) *
              C747 -
          (((C2450 * C3162 + C50923 * C3168 + C2449 * C756 + C51053 * C763) *
                C50838 +
            (C2450 * C3159 + C50923 * C3163 + C2449 * C751 + C51053 * C757) *
                C118) *
               C50937 * C2448 +
           ((C2450 * C3164 + C50923 * C3169 + C2449 * C758 + C51053 * C764) *
                C50838 +
            (C2450 * C3160 + C50923 * C3165 + C2449 * C752 + C51053 * C759) *
                C118) *
               C50937 * C2447 +
           ((C2450 * C3166 + C50923 * C3170 + C2449 * C760 + C51053 * C765) *
                C50838 +
            (C2450 * C3161 + C50923 * C3167 + C2449 * C753 + C51053 * C761) *
                C118) *
               C50937 * C2446) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
             C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
                C118 +
            (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
             C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C50838 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C118) *
               C50937 * C50754 * C50824) *
              C295 +
          (((C10996 * C300 + C10991 * C309 + C10997 * C636 + C10992 * C642 +
             C10998 * C752 + C10993 * C759 + C10999 * C3160 + C10994 * C3165) *
                C118 +
            (C10996 * C308 + C10991 * C318 + C10997 * C643 + C10992 * C651 +
             C10998 * C758 + C10993 * C764 + C10999 * C3164 + C10994 * C3169) *
                C50838) *
               C50937 * C50754 * C50824 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C50838 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C118) *
               C50937 * C50754 * C51040) *
              C296 +
          (((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
             C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
                C118 +
            (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
             C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
                C50838) *
               C50937 * C50754 * C51040 -
           ((C10999 * C3162 + C10994 * C3168 + C10998 * C756 + C10993 * C763 +
             C10997 * C645 + C10992 * C652 + C10996 * C306 + C10991 * C317) *
                C50838 +
            (C10999 * C3159 + C10994 * C3163 + C10998 * C751 + C10993 * C757 +
             C10997 * C637 + C10992 * C644 + C10996 * C299 + C10991 * C307) *
                C118) *
               C50937 * C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C118 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C50838) *
              C50937 * C50754 * C745 -
          ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
            C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
               C50838 +
           (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
            C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
               C118) *
              C50937 * C50754 * C746 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C118 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C50838) *
              C50937 * C50754 * C747 -
          ((C10999 * C11361 + C10994 * C11363 + C10998 * C8867 +
            C10993 * C8870 + C10997 * C3166 + C10992 * C3170 + C10996 * C760 +
            C10991 * C765) *
               C50838 +
           (C10999 * C11360 + C10994 * C11362 + C10998 * C8864 +
            C10993 * C8868 + C10997 * C3161 + C10992 * C3167 + C10996 * C753 +
            C10991 * C761) *
               C118) *
              C50937 * C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C459 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
            (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C2891 * C2448) *
              C50808 * C295 +
          (((C2873 + C2872) * C459 -
            ((C2487 + C2486) * C51042 + (C2485 + C2484) * C458) +
            (C2875 + C2874) * C50850) *
               C50937 * C2446 +
           ((C2878 + C2877) * C459 -
            ((C2491 + C2490) * C51042 + (C2489 + C2488) * C458) +
            (C2880 + C2879) * C50850) *
               C50937 * C2447 +
           ((C2881 + C2882) * C459 - (C2502 * C51042 + C2503 * C458) +
            (C2883 + C2884) * C50850) *
               C50937 * C2448) *
              C50808 * C296 +
          (C2891 * C2446 +
           ((C2495 + C2494) * C458 + (C2493 + C2492) * C51042 -
            (C2882 + C2881) * C459 - (C2884 + C2883) * C50850) *
               C50937 * C2447 +
           ((C2496 + C2497) * C458 + (C2498 + C2499) * C51042 -
            (C2450 * C1596 + C50923 * C1597 + C2449 * C464 + C51053 * C474) *
                C459 -
            (C2450 * C1598 + C50923 * C1599 + C2449 * C475 + C51053 * C482) *
                C50850) *
               C50937 * C2448) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51053 * C126 + C2450 * C301 + C50923 * C311) *
                C458 +
            (C2449 * C127 + C51053 * C140 + C2450 * C310 + C50923 * C319) *
                C51042 -
            (C2450 * C864 + C50923 * C872 + C2449 * C460 + C51053 * C466) *
                C459 -
            (C2450 * C873 + C50923 * C888 + C2449 * C467 + C51053 * C478) *
                C50850) *
               C50937 * C2446 +
           ((C2484 + C2485) * C458 + (C2486 + C2487) * C51042 -
            (C2872 + C2873) * C459 - (C2874 + C2875) * C50850) *
               C50937 * C2447 +
           C2891 * C2448) *
              C630 +
          (((C2449 * C864 + C51053 * C872 + C2450 * C868 + C50923 * C880) *
                C459 -
            ((C2450 * C641 + C50923 * C650 + C2449 * C310 + C51053 * C319) *
                 C51042 +
             (C2450 * C635 + C50923 * C640 + C2449 * C301 + C51053 * C311) *
                 C458) +
            (C2449 * C873 + C51053 * C888 + C2450 * C881 + C50923 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C2449 * C865 + C51053 * C874 + C2450 * C869 + C50923 * C882) *
                C459 -
            ((C2686 + C2687) * C51042 + (C2688 + C2689) * C458) +
            (C2449 * C875 + C51053 * C889 + C2450 * C883 + C50923 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C2449 * C866 + C51053 * C876 + C2450 * C870 + C50923 * C884) *
                C459 -
            (C2694 * C51042 + C2695 * C458) +
            (C2449 * C877 + C51053 * C890 + C2450 * C885 + C50923 * C894) *
                C50850) *
               C50937 * C2448) *
              C631 +
          (((C2449 * C635 + C51053 * C640 + C2450 * C753 + C50923 * C761) *
                C458 +
            (C2449 * C641 + C51053 * C650 + C2450 * C760 + C50923 * C765) *
                C51042 -
            (C2450 * C3317 + C50923 * C3320 + C2449 * C868 + C51053 * C880) *
                C459 -
            (C2450 * C3321 + C50923 * C3326 + C2449 * C881 + C51053 * C892) *
                C50850) *
               C50937 * C2446 +
           ((C3054 + C3055) * C458 + (C3056 + C3057) * C51042 -
            (C2450 * C3318 + C50923 * C3322 + C2449 * C869 + C51053 * C882) *
                C459 -
            (C2450 * C3323 + C50923 * C3327 + C2449 * C883 + C51053 * C893) *
                C50850) *
               C50937 * C2447 +
           ((C3058 + C3059) * C458 + (C3060 + C3061) * C51042 -
            (C2450 * C3319 + C50923 * C3324 + C2449 * C870 + C51053 * C884) *
                C459 -
            (C2450 * C3325 + C50923 * C3328 + C2449 * C885 + C51053 * C894) *
                C50850) *
               C50937 * C2448) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C50808 * C295 +
          ((C10996 * C461 + C10991 * C468 + C10997 * C865 + C10992 * C874 +
            C10998 * C869 + C10993 * C882 + C10999 * C3318 + C10994 * C3322) *
               C459 -
           ((C10999 * C758 + C10994 * C764 + C10998 * C643 + C10993 * C651 +
             C10997 * C308 + C10992 * C318 + C10996 * C129 + C10991 * C141) *
                C51042 +
            (C10999 * C752 + C10994 * C759 + C10998 * C636 + C10993 * C642 +
             C10997 * C300 + C10992 * C309 + C10996 * C120 + C10991 * C128) *
                C458) +
           (C10996 * C469 + C10991 * C479 + C10997 * C875 + C10992 * C889 +
            C10998 * C883 + C10993 * C893 + C10999 * C3323 + C10994 * C3327) *
               C50850) *
              C50937 * C50754 * C50808 * C296 +
          ((C10996 * C121 + C10991 * C130 + C10997 * C299 + C10992 * C307 +
            C10998 * C637 + C10993 * C644 + C10999 * C751 + C10994 * C757) *
               C458 +
           (C10996 * C131 + C10991 * C142 + C10997 * C306 + C10992 * C317 +
            C10998 * C645 + C10993 * C652 + C10999 * C756 + C10994 * C763) *
               C51042 -
           (C10999 * C3319 + C10994 * C3324 + C10998 * C870 + C10993 * C884 +
            C10997 * C866 + C10992 * C876 + C10996 * C462 + C10991 * C470) *
               C459 -
           (C10999 * C3325 + C10994 * C3328 + C10998 * C885 + C10993 * C894 +
            C10997 * C877 + C10992 * C890 + C10996 * C471 + C10991 * C480) *
               C50850) *
              C50937 * C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10996 * C119 + C10991 * C126 + C10997 * C301 + C10992 * C311 +
            C10998 * C635 + C10993 * C640 + C10999 * C753 + C10994 * C761) *
               C458 +
           (C10996 * C127 + C10991 * C140 + C10997 * C310 + C10992 * C319 +
            C10998 * C641 + C10993 * C650 + C10999 * C760 + C10994 * C765) *
               C51042 -
           (C10999 * C3317 + C10994 * C3320 + C10998 * C868 + C10993 * C880 +
            C10997 * C864 + C10992 * C872 + C10996 * C460 + C10991 * C466) *
               C459 -
           (C10999 * C3321 + C10994 * C3326 + C10998 * C881 + C10993 * C892 +
            C10997 * C873 + C10992 * C888 + C10996 * C467 + C10991 * C478) *
               C50850) *
              C50937 * C50754 * C630 +
          ((C10996 * C864 + C10991 * C872 + C10997 * C868 + C10992 * C880 +
            C10998 * C3317 + C10993 * C3320 + C10999 * C9017 + C10994 * C9019) *
               C459 -
           ((C10999 * C3166 + C10994 * C3170 + C10998 * C760 + C10993 * C765 +
             C10997 * C641 + C10992 * C650 + C10996 * C310 + C10991 * C319) *
                C51042 +
            (C10999 * C3161 + C10994 * C3167 + C10998 * C753 + C10993 * C761 +
             C10997 * C635 + C10992 * C640 + C10996 * C301 + C10991 * C311) *
                C458) +
           (C10996 * C873 + C10991 * C888 + C10997 * C881 + C10992 * C892 +
            C10998 * C3321 + C10993 * C3326 + C10999 * C9020 + C10994 * C9023) *
               C50850) *
              C50937 * C50754 * C631 +
          ((C10996 * C635 + C10991 * C640 + C10997 * C753 + C10992 * C761 +
            C10998 * C3161 + C10993 * C3167 + C10999 * C8864 + C10994 * C8868) *
               C458 +
           (C10996 * C641 + C10991 * C650 + C10997 * C760 + C10992 * C765 +
            C10998 * C3166 + C10993 * C3170 + C10999 * C8867 + C10994 * C8870) *
               C51042 -
           (C10999 * C11462 + C10994 * C11463 + C10998 * C9017 +
            C10993 * C9019 + C10997 * C3317 + C10992 * C3320 + C10996 * C868 +
            C10991 * C880) *
               C459 -
           (C10999 * C11464 + C10994 * C11465 + C10998 * C9020 +
            C10993 * C9023 + C10997 * C3321 + C10992 * C3326 + C10996 * C881 +
            C10991 * C892) *
               C50850) *
              C50937 * C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C1358 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C50824) *
              C51085 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C50824 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C1358) *
              C51071 +
          ((C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
            ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
               C1358 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C51055) *
                C2448 +
            ((C5526 + C5525) * C50949 + C355 * C51055) * C2447 +
            C5529 * C2446) *
               C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C1358 -
           (((C13542 + C13541 + C13540) * C50838 +
             (C13539 + C13538 + C13537) * C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C50824) *
              C51085 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C50824 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C1358) *
              C51071 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C51055 +
            ((C8596 + C8597 + C8598) * C118 +
             (C8599 + C8600 + C8601) * C50838) *
                C50949) *
               C50754 * C1358 -
           (((C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50838 +
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C118) *
                C50949 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C51055) *
               C50754 * C50824) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C51086 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            ((C6115 * C50838 + C6114 * C118) * C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C51074 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51055 +
             (C6116 * C118 + C6117 * C50838) * C50949) *
                C2446 +
            ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
            ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C51074 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C51086 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C51055) *
                C2448 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C51055) * C2447 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C51055) * C2446) *
               C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C51086 -
           (((C13542 + C13541 + C13540) * C50838 +
             (C13539 + C13538 + C13537) * C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C51074 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C51055 +
            ((C13545 + C13544 + C13543) * C118 +
             (C13548 + C13547 + C13546) * C50838) *
                C50949) *
               C50754 * C1463) *
              C1464 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C51074 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C51086 -
           (((C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
              C8180 * C883 + C8175 * C893) *
                 C50838 +
             (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
              C8180 * C869 + C8175 * C882) *
                 C118) *
                C50949 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C51055) *
               C50754 * C1463) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C458 +
              (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
              C5694 * C50850) *
                 C51055 +
             (C5693 * C458 + C5694 * C51042 - C6284 * C459 - C6285 * C50850) *
                 C50949) *
                C2446 +
            ((C485 + C486 - C519 - C520) * C51055 +
             (C5680 + C5681 - C5682 - C5683) * C50949) *
                C2447 +
            C5699 * C2448) *
               C1358 +
           (((C6114 * C459 -
              ((C117 * C310 + C50907 * C319) * C51042 +
               (C117 * C301 + C50907 * C311) * C458) +
              C6115 * C50850) *
                 C51055 +
             (C6452 * C459 - (C6115 * C51042 + C6114 * C458) + C6453 * C50850) *
                 C50949) *
                C2446 +
            ((C1625 - (C1603 + C1604) + C1626) * C51055 +
             (C7060 - (C7061 + C7062) + C7063) * C50949) *
                C2447 +
            ((C1627 - (C1609 + C1610) + C1628) * C51055 +
             (C7064 - (C7065 + C7066) + C7067) * C50949) *
                C2448) *
               C50824) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C51055 +
             (C5682 - (C5681 + C5680) + C5683) * C50949) *
                C2446 +
            ((C521 - (C492 + C491) + C522) * C51055 +
             (C5687 - (C5686 + C5685) + C5688) * C50949) *
                C2447 +
            ((C523 - (C498 + C497) + C524) * C51055 +
             (C5689 - (C5690 + C5691) + C5692) * C50949) *
                C2448) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C51055 +
             (C7062 + C7061 - C7060 - C7063) * C50949) *
                C2446 +
            ((C1610 + C1609 - C1627 - C1628) * C51055 +
             (C7066 + C7065 - C7064 - C7067) * C50949) *
                C2447 +
            ((C1616 + C1615 - C1629 - C1630) * C51055 +
             (C1623 * C458 + C1624 * C51042 -
              (C117 * C1157 + C50907 * C1164) * C459 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C458 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C51042 -
             (C13117 + C13118 + C13119) * C459 -
             (C13120 + C13121 + C13122) * C50850) *
                C51055 +
            ((C13119 + C13118 + C13117) * C458 +
             (C13122 + C13121 + C13120) * C51042 -
             (C13709 + C13708 + C13707) * C459 -
             (C13712 + C13711 + C13710) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C13537 + C13538 + C13539) * C459 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C51042 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C458) +
             (C13540 + C13541 + C13542) * C50850) *
                C51055 +
            ((C13873 + C13872 + C13871) * C459 -
             ((C13542 + C13541 + C13540) * C51042 +
              (C13539 + C13538 + C13537) * C458) +
             (C13876 + C13875 + C13874) * C50850) *
                C50949) *
               C50754 * C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C459 -
             ((C8225 + C8224 + C8223) * C51042 +
              (C8222 + C8221 + C8220) * C458) +
             (C8595 + C8594 + C8593) * C50850) *
                C51055 +
            ((C9184 + C9185 + C9186) * C459 -
             ((C8593 + C8594 + C8595) * C51042 +
              (C8590 + C8591 + C8592) * C458) +
             (C9187 + C9188 + C9189) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C8413 + C8412 + C8411) * C458 + (C8410 + C8409 + C8408) * C51042 -
             (C9950 + C9949 + C9948) * C459 -
             (C9953 + C9952 + C9951) * C50850) *
                C51055 +
            ((C9948 + C9949 + C9950) * C458 + (C9951 + C9952 + C9953) * C51042 -
             (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
              C8180 * C1155 + C8175 * C1160) *
                 C459 -
             (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
              C8180 * C1161 + C8175 * C1167) *
                 C50850) *
                C50949) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C51055 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C50949) *
                C2446 +
            ((C1733 + C1734 - C1735 - C1736) * C51055 +
             (C7214 + C7215 - C7216 - C7217) * C50949) *
                C2447 +
            C7231 * C2448) *
               C1358 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C51055 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C50949) *
                C2446 +
            ((C1887 - (C1888 + C1889) + C1890) * C51055 +
             (C7426 - (C7427 + C7428) + C7429) * C50949) *
                C2447 +
            ((C1891 - (C1892 + C1893) + C1894) * C51055 +
             (C7430 - (C7431 + C7432) + C7433) * C50949) *
                C2448) *
               C50824) *
              C51033 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51055 +
             (C7216 - (C7215 + C7214) + C7217) * C50949) *
                C2446 +
            ((C1739 - (C1738 + C1737) + C1740) * C51055 +
             (C7221 - (C7220 + C7219) + C7222) * C50949) *
                C2447 +
            ((C1743 - (C1742 + C1741) + C1744) * C51055 +
             (C7223 - (C7224 + C7225) + C7226) * C50949) *
                C2448) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C51055 +
             (C7428 + C7427 - C7426 - C7429) * C50949) *
                C2446 +
            ((C1893 + C1892 - C1891 - C1894) * C51055 +
             (C7432 + C7431 - C7430 - C7433) * C50949) *
                C2447 +
            ((C1897 + C1896 - C1895 - C1898) * C51055 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50907 * C1164) * C1731 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C13117 + C13118 + C13119) * C1731 -
             (C13120 + C13121 + C13122) * C50850) *
                C51055 +
            ((C13119 + C13118 + C13117) * C1730 +
             (C13122 + C13121 + C13120) * C1728 -
             (C13709 + C13708 + C13707) * C1731 -
             (C13712 + C13711 + C13710) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C13537 + C13538 + C13539) * C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C13540 + C13541 + C13542) * C50850) *
                C51055 +
            ((C13873 + C13872 + C13871) * C1731 -
             ((C13542 + C13541 + C13540) * C1728 +
              (C13539 + C13538 + C13537) * C1730) +
             (C13876 + C13875 + C13874) * C50850) *
                C50949) *
               C50754 * C50824) *
              C51033 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C51055 +
            ((C9184 + C9185 + C9186) * C1731 -
             ((C8593 + C8594 + C8595) * C1728 +
              (C8590 + C8591 + C8592) * C1730) +
             (C9187 + C9188 + C9189) * C50850) *
                C50949) *
               C50754 * C1358 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C51055 +
            ((C9948 + C9949 + C9950) * C1730 + (C9951 + C9952 + C9953) * C1728 -
             (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
              C8180 * C1155 + C8175 * C1160) *
                 C1731 -
             (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
              C8180 * C1161 + C8175 * C1167) *
                 C50850) *
                C50949) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C50949) *
               C2446 +
           ((C1733 + C1734 - C1735 - C1736) * C51055 +
            (C7214 + C7215 - C7216 - C7217) * C50949) *
               C2447 +
           C7231 * C2448) *
              C51086 +
          (((C6114 * C1731 -
             ((C117 * C310 + C50907 * C319) * C1728 +
              (C117 * C301 + C50907 * C311) * C1730) +
             C6115 * C50850) *
                C51055 +
            (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) + C6453 * C50850) *
                C50949) *
               C2446 +
           ((C1887 - (C1888 + C1889) + C1890) * C51055 +
            (C7426 - (C7427 + C7428) + C7429) * C50949) *
               C2447 +
           ((C1891 - (C1892 + C1893) + C1894) * C51055 +
            (C7430 - (C7431 + C7432) + C7433) * C50949) *
               C2448) *
              C51074 +
          ((((C117 * C635 + C50907 * C640) * C1730 +
             (C117 * C641 + C50907 * C650) * C1728 - C6116 * C1731 -
             C6117 * C50850) *
                C51055 +
            (C6116 * C1730 + C6117 * C1728 -
             (C117 * C3645 + C50907 * C3648) * C1731 -
             (C117 * C3649 + C50907 * C3654) * C50850) *
                C50949) *
               C2446 +
           ((C668 * C1730 + C669 * C1728 - C5854 * C1731 - C5855 * C50850) *
                C51055 +
            (C5854 * C1730 + C5855 * C1728 -
             (C117 * C3646 + C50907 * C3650) * C1731 -
             (C117 * C3651 + C50907 * C3655) * C50850) *
                C50949) *
               C2447 +
           ((C670 * C1730 + C671 * C1728 - C5856 * C1731 - C5857 * C50850) *
                C51055 +
            (C5856 * C1730 + C5857 * C1728 -
             (C117 * C3647 + C50907 * C3652) * C1731 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C2448) *
              C1463) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C13117 + C13118 + C13119) * C1731 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1730 +
            (C13122 + C13121 + C13120) * C1728 -
            (C13709 + C13708 + C13707) * C1731 -
            (C13712 + C13711 + C13710) * C50850) *
               C50949) *
              C50754 * C51086 +
          (((C13537 + C13538 + C13539) * C1731 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C1728 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C1730) +
            (C13540 + C13541 + C13542) * C50850) *
               C51055 +
           ((C13873 + C13872 + C13871) * C1731 -
            ((C13542 + C13541 + C13540) * C1728 +
             (C13539 + C13538 + C13537) * C1730) +
            (C13876 + C13875 + C13874) * C50850) *
               C50949) *
              C50754 * C51074 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C1730 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C1728 -
            (C13543 + C13544 + C13545) * C1731 -
            (C13546 + C13547 + C13548) * C50850) *
               C51055 +
           ((C13545 + C13544 + C13543) * C1730 +
            (C13548 + C13547 + C13546) * C1728 -
            (C8182 * C11662 + C8177 * C11663 + C8181 * C9335 + C8176 * C9337 +
             C8180 * C3645 + C8175 * C3648) *
                C1731 -
            (C8182 * C11664 + C8177 * C11665 + C8181 * C9338 + C8176 * C9341 +
             C8180 * C3649 + C8175 * C3654) *
                C50850) *
               C50949) *
              C50754 * C1463) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[215] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50907 * C126) * C1999 +
                      (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
                      C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                         C51055 +
                     (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 -
                      C6285 * C51077 + C6572 * C2001 + C6573 * C1998) *
                         C50949) *
                        C2446 +
                    ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51055 +
                     (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C50949) *
                        C2447 +
                    ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C51055 +
                     (C7586 + C7587 - C7588 - C7589 + C7590 + C7591) * C50949) *
                        C2448) *
                       C1358 +
                   (((C6114 * C2000 -
                      ((C117 * C310 + C50907 * C319) * C51087 +
                       (C117 * C301 + C50907 * C311) * C1999) +
                      C6115 * C51077 - C6452 * C2001 - C6453 * C1998) *
                         C51055 +
                     (C6452 * C2000 - (C6115 * C51087 + C6114 * C1999) +
                      C6453 * C51077 - (C117 * C3755 + C50907 * C3758) * C2001 -
                      (C117 * C3759 + C50907 * C3764) * C1998) *
                         C50949) *
                        C2446 +
                    ((C1619 * C2000 - (C343 * C51087 + C344 * C1999) +
                      C1620 * C51077 - C6454 * C2001 - C6455 * C1998) *
                         C51055 +
                     (C6454 * C2000 - (C1620 * C51087 + C1619 * C1999) +
                      C6455 * C51077 - (C117 * C3756 + C50907 * C3760) * C2001 -
                      (C117 * C3761 + C50907 * C3765) * C1998) *
                         C50949) *
                        C2447 +
                    ((C1621 * C2000 - (C341 * C51087 + C342 * C1999) +
                      C1622 * C51077 - C6456 * C2001 - C6457 * C1998) *
                         C51055 +
                     (C6456 * C2000 - (C1622 * C51087 + C1621 * C1999) +
                      C6457 * C51077 - (C117 * C3757 + C50907 * C3762) * C2001 -
                      (C117 * C3763 + C50907 * C3766) * C1998) *
                         C50949) *
                        C2448) *
                       C50824) *
                  C50776) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C8180 * C119 + C8175 * C126 + C8181 * C301 +
                      C8176 * C311 + C8182 * C635 + C8177 * C640) *
                         C1999 +
                     (C8180 * C127 + C8175 * C140 + C8181 * C310 +
                      C8176 * C319 + C8182 * C641 + C8177 * C650) *
                         C51087 -
                     (C13117 + C13118 + C13119) * C2000 -
                     (C13120 + C13121 + C13122) * C51077 +
                     (C13707 + C13708 + C13709) * C2001 +
                     (C13710 + C13711 + C13712) * C1998) *
                        C51055 +
                    ((C13119 + C13118 + C13117) * C1999 +
                     (C13122 + C13121 + C13120) * C51087 -
                     (C13709 + C13708 + C13707) * C2000 -
                     (C13712 + C13711 + C13710) * C51077 +
                     (C13997 + C13996 + C13995) * C2001 +
                     (C14000 + C13999 + C13998) * C1998) *
                        C50949) *
                       C50754 * C1358 +
                   (((C13537 + C13538 + C13539) * C2000 -
                     ((C8182 * C760 + C8177 * C765 + C8181 * C641 +
                       C8176 * C650 + C8180 * C310 + C8175 * C319) *
                          C51087 +
                      (C8182 * C753 + C8177 * C761 + C8181 * C635 +
                       C8176 * C640 + C8180 * C301 + C8175 * C311) *
                          C1999) +
                     (C13540 + C13541 + C13542) * C51077 -
                     (C13871 + C13872 + C13873) * C2001 -
                     (C13874 + C13875 + C13876) * C1998) *
                        C51055 +
                    ((C13873 + C13872 + C13871) * C2000 -
                     ((C13542 + C13541 + C13540) * C51087 +
                      (C13539 + C13538 + C13537) * C1999) +
                     (C13876 + C13875 + C13874) * C51077 -
                     (C8182 * C11732 + C8177 * C11733 + C8181 * C9441 +
                      C8176 * C9443 + C8180 * C3755 + C8175 * C3758) *
                         C2001 -
                     (C8182 * C11734 + C8177 * C11735 + C8181 * C9444 +
                      C8176 * C9447 + C8180 * C3759 + C8175 * C3764) *
                         C1998) *
                        C50949) *
                       C50754 * C50824) *
                  C50776) /
                     (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C630 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            (((C117 * C873 + C50907 * C888) * C50838 +
              (C117 * C864 + C50907 * C872) * C118) *
                 C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51055 +
             ((C117 * C868 + C50907 * C880) * C118 +
              (C117 * C881 + C50907 * C892) * C50838) *
                 C50949) *
                C2446 +
            ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
            ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
               C632) *
              C51033 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C631 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C630 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C51055) *
                C2448 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C51055) * C2447 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C51055) * C2446) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51055 +
            ((C117 * C460 + C50907 * C466) * C118 +
             (C117 * C467 + C50907 * C478) * C50838) *
                C50949) *
               C2446 +
           ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
           C5372 * C2448) *
              C50808 * C113 -
          (C5373 * C2448 +
           ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
           ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
              C50808 * C114 +
          (C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
           ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
              C50808 * C115 -
          ((((C117 * C477 + C50907 * C483) * C50838 +
             (C117 * C465 + C50907 * C476) * C118) *
                C50949 +
            (C187 + C186) * C51055) *
               C2448 +
           ((C5367 + C5366) * C50949 + C190 * C51055) * C2447 + C5373 * C2446) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C51055 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             (C117 * C1244 + C50907 * C1248) * C999 +
             (C117 * C1249 + C50907 * C1256) * C996) *
                C50949) *
               C2446 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51055 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C50949) *
               C2447 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C51055 +
            (C6276 + C6277 - C6278 - C6279 + C6292 + C6293) * C50949) *
               C2448) *
              C50808 * C51033 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C51055 +
            (C6270 - (C6269 + C6268) + C6271 - C6290 - C6291) * C50949) *
               C2446 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C51055 +
            (C6278 - (C6277 + C6276) + C6279 - C6292 - C6293) * C50949) *
               C2447 +
           ((C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C51055 +
            (C1049 * C998 - (C516 * C994 + C515 * C997) + C1050 * C995 -
             (C117 * C1247 + C50907 * C1254) * C999 -
             (C117 * C1255 + C50907 * C1259) * C996) *
                C50949) *
               C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
             C8182 * C868 + C8177 * C880) *
                C118 +
            (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
             C8182 * C881 + C8177 * C892) *
                C50838) *
               C50949) *
              C50754 * C50808 * C113 -
          (((C8593 + C8594 + C8595) * C50838 + (C8590 + C8591 + C8592) * C118) *
               C50949 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C51055) *
              C50754 * C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C51055 +
           ((C8596 + C8597 + C8598) * C118 + (C8599 + C8600 + C8601) * C50838) *
               C50949) *
              C50754 * C50808 * C115 -
          (((C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50838 +
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C118) *
               C50949 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C51055) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C630 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C51055 +
            ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
              C8182 * C9017 + C8177 * C9019) *
                 C118 +
             (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
              C8182 * C9020 + C8177 * C9023) *
                 C50838) *
                C50949) *
               C50754 * C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C631 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C630 -
           (((C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
              C8180 * C883 + C8175 * C893) *
                 C50838 +
             (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
              C8180 * C869 + C8175 * C882) *
                 C118) *
                C50949 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C51055) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C13117 + C13118 + C13119) * C998 -
            (C13120 + C13121 + C13122) * C995 +
            (C13707 + C13708 + C13709) * C999 +
            (C13710 + C13711 + C13712) * C996) *
               C51055 +
           ((C13119 + C13118 + C13117) * C997 +
            (C13122 + C13121 + C13120) * C994 -
            (C13709 + C13708 + C13707) * C998 -
            (C13712 + C13711 + C13710) * C995 +
            (C8180 * C1244 + C8175 * C1248 + C8181 * C3755 + C8176 * C3758 +
             C8182 * C9441 + C8177 * C9443) *
                C999 +
            (C8180 * C1249 + C8175 * C1256 + C8181 * C3759 + C8176 * C3764 +
             C8182 * C9444 + C8177 * C9447) *
                C996) *
               C50949) *
              C50754 * C50808 * C51033 +
          (((C8592 + C8591 + C8590) * C998 -
            ((C8225 + C8224 + C8223) * C994 + (C8222 + C8221 + C8220) * C997) +
            (C8595 + C8594 + C8593) * C995 - (C9186 + C9185 + C9184) * C999 -
            (C9189 + C9188 + C9187) * C996) *
               C51055 +
           ((C9184 + C9185 + C9186) * C998 -
            ((C8593 + C8594 + C8595) * C994 + (C8590 + C8591 + C8592) * C997) +
            (C9187 + C9188 + C9189) * C995 -
            (C8182 * C9442 + C8177 * C9445 + C8181 * C3756 + C8176 * C3760 +
             C8180 * C1245 + C8175 * C1250) *
                C999 -
            (C8182 * C9446 + C8177 * C9448 + C8181 * C3761 + C8176 * C3765 +
             C8180 * C1251 + C8175 * C1257) *
                C996) *
               C50949) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51055 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C2446 +
           ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
           C5372 * C2448) *
              C745 -
          (C5529 * C2448 +
           ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
           (((C117 * C873 + C50907 * C888) * C50838 +
             (C117 * C864 + C50907 * C872) * C118) *
                C50949 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C51055) *
               C2446) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C51055 +
            ((C117 * C868 + C50907 * C880) * C118 +
             (C117 * C881 + C50907 * C892) * C50838) *
                C50949) *
               C2446 +
           ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
           ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
              C747 -
          ((((C117 * C3325 + C50907 * C3328) * C50838 +
             (C117 * C3319 + C50907 * C3324) * C118) *
                C50949 +
            ((C117 * C756 + C50907 * C763) * C50838 +
             (C117 * C751 + C50907 * C757) * C118) *
                C51055) *
               C2448 +
           (((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C50949 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C51055) *
               C2447 +
           (((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C50949 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C51055) *
               C2446) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             ((C117 * C460 + C50907 * C466) * C118 +
              (C117 * C467 + C50907 * C478) * C50838) *
                 C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C51040 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            (((C117 * C873 + C50907 * C888) * C50838 +
              (C117 * C864 + C50907 * C872) * C118) *
                 C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C50824) *
              C295 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C50824 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C51040) *
              C296 +
          ((C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
            ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
               C51040 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C51055) *
                C2448 +
            ((C5526 + C5525) * C50949 + C355 * C51055) * C2447 +
            C5529 * C2446) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C997 +
             (C117 * C127 + C50907 * C140) * C994 - C5693 * C998 -
             C5694 * C995 + C6284 * C999 + C6285 * C996) *
                C51055 +
            (C5693 * C997 + C5694 * C994 - C6284 * C998 - C6285 * C995 +
             (C117 * C1244 + C50907 * C1248) * C999 +
             (C117 * C1249 + C50907 * C1256) * C996) *
                C50949) *
               C2446 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51055 +
            (C6268 + C6269 - C6270 - C6271 + C6290 + C6291) * C50949) *
               C2447 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C51055 +
            (C6276 + C6277 - C6278 - C6279 + C6292 + C6293) * C50949) *
               C2448) *
              C51040 +
          (((C6114 * C998 -
             ((C117 * C310 + C50907 * C319) * C994 +
              (C117 * C301 + C50907 * C311) * C997) +
             C6115 * C995 - C6452 * C999 - C6453 * C996) *
                C51055 +
            (C6452 * C998 - (C6115 * C994 + C6114 * C997) + C6453 * C995 -
             (C117 * C3755 + C50907 * C3758) * C999 -
             (C117 * C3759 + C50907 * C3764) * C996) *
                C50949) *
               C2446 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C6454 * C999 - C6455 * C996) *
                C51055 +
            (C6454 * C998 - (C1620 * C994 + C1619 * C997) + C6455 * C995 -
             (C117 * C3756 + C50907 * C3760) * C999 -
             (C117 * C3761 + C50907 * C3765) * C996) *
                C50949) *
               C2447 +
           ((C1621 * C998 - (C341 * C994 + C342 * C997) + C1622 * C995 -
             C6456 * C999 - C6457 * C996) *
                C51055 +
            (C6456 * C998 - (C1622 * C994 + C1621 * C997) + C6457 * C995 -
             (C117 * C3757 + C50907 * C3762) * C999 -
             (C117 * C3763 + C50907 * C3766) * C996) *
                C50949) *
               C2448) *
              C50824) *
         C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
              C8182 * C868 + C8177 * C880) *
                 C118 +
             (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
              C8182 * C881 + C8177 * C892) *
                 C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C50824 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C51055 +
            ((C8596 + C8597 + C8598) * C118 +
             (C8599 + C8600 + C8601) * C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50838 +
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C118) *
                C50949 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C51055) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C13119 + C13118 + C13117) * C118 +
            (C13122 + C13121 + C13120) * C50838) *
               C50949) *
              C50754 * C745 -
          (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
             C8180 * C873 + C8175 * C888) *
                C50838 +
            (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
             C8180 * C864 + C8175 * C872) *
                C118) *
               C50949 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C51055) *
              C50754 * C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C51055 +
           ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
             C8182 * C9017 + C8177 * C9019) *
                C118 +
            (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
             C8182 * C9020 + C8177 * C9023) *
                C50838) *
               C50949) *
              C50754 * C747 -
          (((C8182 * C11464 + C8177 * C11465 + C8181 * C9020 + C8176 * C9023 +
             C8180 * C3321 + C8175 * C3326) *
                C50838 +
            (C8182 * C11462 + C8177 * C11463 + C8181 * C9017 + C8176 * C9019 +
             C8180 * C3317 + C8175 * C3320) *
                C118) *
               C50949 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C51055) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C997 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C994 -
            (C13117 + C13118 + C13119) * C998 -
            (C13120 + C13121 + C13122) * C995 +
            (C13707 + C13708 + C13709) * C999 +
            (C13710 + C13711 + C13712) * C996) *
               C51055 +
           ((C13119 + C13118 + C13117) * C997 +
            (C13122 + C13121 + C13120) * C994 -
            (C13709 + C13708 + C13707) * C998 -
            (C13712 + C13711 + C13710) * C995 +
            (C8180 * C1244 + C8175 * C1248 + C8181 * C3755 + C8176 * C3758 +
             C8182 * C9441 + C8177 * C9443) *
                C999 +
            (C8180 * C1249 + C8175 * C1256 + C8181 * C3759 + C8176 * C3764 +
             C8182 * C9444 + C8177 * C9447) *
                C996) *
               C50949) *
              C50754 * C51040 +
          (((C13537 + C13538 + C13539) * C998 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C994 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C997) +
            (C13540 + C13541 + C13542) * C995 -
            (C13871 + C13872 + C13873) * C999 -
            (C13874 + C13875 + C13876) * C996) *
               C51055 +
           ((C13873 + C13872 + C13871) * C998 -
            ((C13542 + C13541 + C13540) * C994 +
             (C13539 + C13538 + C13537) * C997) +
            (C13876 + C13875 + C13874) * C995 -
            (C8182 * C11732 + C8177 * C11733 + C8181 * C9441 + C8176 * C9443 +
             C8180 * C3755 + C8175 * C3758) *
                C999 -
            (C8182 * C11734 + C8177 * C11735 + C8181 * C9444 + C8176 * C9447 +
             C8180 * C3759 + C8175 * C3764) *
                C996) *
               C50949) *
              C50754 * C50824) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C458 + C5694 * C51042 -
             (C117 * C1000 + C50907 * C1005) * C459 -
             (C117 * C1006 + C50907 * C1015) * C50850) *
                C50949) *
               C2446 +
           ((C485 + C486 - C519 - C520) * C51055 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C2447 +
           C5699 * C2448) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C51055 +
            ((C117 * C1154 + C50907 * C1158) * C459 -
             (C6115 * C51042 + C6114 * C458) +
             (C117 * C1159 + C50907 * C1166) * C50850) *
                C50949) *
               C2446 +
           ((C1625 - (C1603 + C1604) + C1626) * C51055 +
            ((C117 * C1155 + C50907 * C1160) * C459 -
             (C1620 * C51042 + C1619 * C458) +
             (C117 * C1161 + C50907 * C1167) * C50850) *
                C50949) *
               C2447 +
           ((C1627 - (C1609 + C1610) + C1628) * C51055 +
            ((C117 * C1156 + C50907 * C1162) * C459 -
             (C1622 * C51042 + C1621 * C458) +
             (C117 * C1163 + C50907 * C1168) * C50850) *
                C50949) *
               C2448) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C51055 +
            (C6116 * C458 + C6117 * C51042 -
             (C117 * C3645 + C50907 * C3648) * C459 -
             (C117 * C3649 + C50907 * C3654) * C50850) *
                C50949) *
               C2446 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C51055 +
            (C5854 * C458 + C5855 * C51042 -
             (C117 * C3646 + C50907 * C3650) * C459 -
             (C117 * C3651 + C50907 * C3655) * C50850) *
                C50949) *
               C2447 +
           ((C670 * C458 + C671 * C51042 - C5856 * C459 - C5857 * C50850) *
                C51055 +
            (C5856 * C458 + C5857 * C51042 -
             (C117 * C3647 + C50907 * C3652) * C459 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C2448) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C458 + C5694 * C51042 -
             (C117 * C1000 + C50907 * C1005) * C459 -
             (C117 * C1006 + C50907 * C1015) * C50850) *
                C50949) *
               C2446 +
           ((C485 + C486 - C519 - C520) * C51055 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C2447 +
           C5699 * C2448) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C51055 +
            (C5682 - (C5681 + C5680) + C5683) * C50949) *
               C2446 +
           ((C521 - (C492 + C491) + C522) * C51055 +
            (C5687 - (C5686 + C5685) + C5688) * C50949) *
               C2447 +
           ((C523 - (C498 + C497) + C524) * C51055 +
            (C5689 - (C5690 + C5691) + C5692) * C50949) *
               C2448) *
              C50808 * C296 +
          (C5699 * C2446 +
           (C530 * C51055 + (C5691 + C5690 - C5689 - C5692) * C50949) * C2447 +
           ((C506 + C505 - C525 - C526) * C51055 +
            (C517 * C458 + C518 * C51042 -
             (C117 * C1004 + C50907 * C1013) * C459 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C2448) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50907 * C126) * C1240 +
            (C117 * C127 + C50907 * C140) * C1236 - C5693 * C1241 -
            C5694 * C1237 + C6284 * C1242 + C6285 * C1238 - C6572 * C1243 -
            C6573 * C1239) *
               C51055 +
           (C5693 * C1240 + C5694 * C1236 - C6284 * C1241 - C6285 * C1237 +
            C6572 * C1242 + C6573 * C1238 -
            (C117 * C6555 + C50907 * C6558) * C1243 -
            (C117 * C6559 + C50907 * C6564) * C1239) *
               C50949) *
              C2446 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C6286 * C1243 - C6287 * C1239) *
               C51055 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C6286 * C1242 + C6287 * C1238 -
            (C117 * C6556 + C50907 * C6560) * C1243 -
            (C117 * C6561 + C50907 * C6565) * C1239) *
               C50949) *
              C2447 +
          ((C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
            C1047 * C1242 + C1048 * C1238 - C6288 * C1243 - C6289 * C1239) *
               C51055 +
           (C512 * C1240 + C513 * C1236 - C1047 * C1241 - C1048 * C1237 +
            C6288 * C1242 + C6289 * C1238 -
            (C117 * C6557 + C50907 * C6562) * C1243 -
            (C117 * C6563 + C50907 * C6566) * C1239) *
               C50949) *
              C2448) *
         C50808 * C50776) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C51055 +
           ((C9184 + C9185 + C9186) * C459 -
            ((C8593 + C8594 + C8595) * C51042 +
             (C8590 + C8591 + C8592) * C458) +
            (C9187 + C9188 + C9189) * C50850) *
               C50949) *
              C50754 * C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C51055 +
           ((C8596 + C8597 + C8598) * C458 + (C8599 + C8600 + C8601) * C51042 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C459 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C50850) *
               C50949) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C630 +
          (((C13537 + C13538 + C13539) * C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C13540 + C13541 + C13542) * C50850) *
               C51055 +
           ((C8180 * C1154 + C8175 * C1158 + C8181 * C3645 + C8176 * C3648 +
             C8182 * C9335 + C8177 * C9337) *
                C459 -
            ((C13542 + C13541 + C13540) * C51042 +
             (C13539 + C13538 + C13537) * C458) +
            (C8180 * C1159 + C8175 * C1166 + C8181 * C3649 + C8176 * C3654 +
             C8182 * C9338 + C8177 * C9341) *
                C50850) *
               C50949) *
              C50754 * C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C13543 + C13544 + C13545) * C459 -
            (C13546 + C13547 + C13548) * C50850) *
               C51055 +
           ((C13545 + C13544 + C13543) * C458 +
            (C13548 + C13547 + C13546) * C51042 -
            (C8182 * C11662 + C8177 * C11663 + C8181 * C9335 + C8176 * C9337 +
             C8180 * C3645 + C8175 * C3648) *
                C459 -
            (C8182 * C11664 + C8177 * C11665 + C8181 * C9338 + C8176 * C9341 +
             C8180 * C3649 + C8175 * C3654) *
                C50850) *
               C50949) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
            C8182 * C635 + C8177 * C640) *
               C1240 +
           (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
            C8182 * C641 + C8177 * C650) *
               C1236 -
           (C13117 + C13118 + C13119) * C1241 -
           (C13120 + C13121 + C13122) * C1237 +
           (C13707 + C13708 + C13709) * C1242 +
           (C13710 + C13711 + C13712) * C1238 -
           (C13995 + C13996 + C13997) * C1243 -
           (C13998 + C13999 + C14000) * C1239) *
              C51055 +
          ((C13119 + C13118 + C13117) * C1240 +
           (C13122 + C13121 + C13120) * C1236 -
           (C13709 + C13708 + C13707) * C1241 -
           (C13712 + C13711 + C13710) * C1237 +
           (C13997 + C13996 + C13995) * C1242 +
           (C14000 + C13999 + C13998) * C1238 -
           (C8182 * C13974 + C8177 * C13976 + C8181 * C13975 + C8176 * C13977 +
            C8180 * C6555 + C8175 * C6558) *
               C1243 -
           (C8182 * C13978 + C8177 * C13980 + C8181 * C13979 + C8176 * C13981 +
            C8180 * C6559 + C8175 * C6564) *
               C1239) *
              C50949) *
         C50754 * C50808 * C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1730 +
             (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                C50949) *
               C2446 +
           ((C1733 + C1734 - C1735 - C1736) * C51055 +
            (C7214 + C7215 - C7216 - C7217) * C50949) *
               C2447 +
           C7231 * C2448) *
              C50808 * C51085 +
          (((C1735 - (C1734 + C1733) + C1736) * C51055 +
            (C7216 - (C7215 + C7214) + C7217) * C50949) *
               C2446 +
           ((C1739 - (C1738 + C1737) + C1740) * C51055 +
            (C7221 - (C7220 + C7219) + C7222) * C50949) *
               C2447 +
           ((C1743 - (C1742 + C1741) + C1744) * C51055 +
            (C7223 - (C7224 + C7225) + C7226) * C50949) *
               C2448) *
              C50808 * C51071 +
          (C7231 * C2446 +
           (C1754 * C51055 + (C7225 + C7224 - C7223 - C7226) * C50949) * C2447 +
           ((C1747 + C1746 - C1745 - C1748) * C51055 +
            (C517 * C1730 + C518 * C1728 -
             (C117 * C1004 + C50907 * C1013) * C1731 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C2448) *
              C50808 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1730 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C1728 -
            (C13117 + C13118 + C13119) * C1731 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1730 +
            (C13122 + C13121 + C13120) * C1728 -
            (C13709 + C13708 + C13707) * C1731 -
            (C13712 + C13711 + C13710) * C50850) *
               C50949) *
              C50754 * C50808 * C51085 +
          (((C8592 + C8591 + C8590) * C1731 -
            ((C8225 + C8224 + C8223) * C1728 +
             (C8222 + C8221 + C8220) * C1730) +
            (C8595 + C8594 + C8593) * C50850) *
               C51055 +
           ((C9184 + C9185 + C9186) * C1731 -
            ((C8593 + C8594 + C8595) * C1728 +
             (C8590 + C8591 + C8592) * C1730) +
            (C9187 + C9188 + C9189) * C50850) *
               C50949) *
              C50754 * C50808 * C51071 +
          (((C8231 + C8230 + C8229) * C1730 + (C8228 + C8227 + C8226) * C1728 -
            (C8598 + C8597 + C8596) * C1731 -
            (C8601 + C8600 + C8599) * C50850) *
               C51055 +
           ((C8596 + C8597 + C8598) * C1730 + (C8599 + C8600 + C8601) * C1728 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C1731 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C50850) *
               C50949) *
              C50754 * C50808 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C1730 +
              (C117 * C127 + C50907 * C140) * C1728 - C5693 * C1731 -
              C5694 * C50850) *
                 C51055 +
             (C5693 * C1730 + C5694 * C1728 - C6284 * C1731 - C6285 * C50850) *
                 C50949) *
                C2446 +
            ((C1733 + C1734 - C1735 - C1736) * C51055 +
             (C7214 + C7215 - C7216 - C7217) * C50949) *
                C2447 +
            C7231 * C2448) *
               C51040 +
           (((C6114 * C1731 -
              ((C117 * C310 + C50907 * C319) * C1728 +
               (C117 * C301 + C50907 * C311) * C1730) +
              C6115 * C50850) *
                 C51055 +
             (C6452 * C1731 - (C6115 * C1728 + C6114 * C1730) +
              C6453 * C50850) *
                 C50949) *
                C2446 +
            ((C1887 - (C1888 + C1889) + C1890) * C51055 +
             (C7426 - (C7427 + C7428) + C7429) * C50949) *
                C2447 +
            ((C1891 - (C1892 + C1893) + C1894) * C51055 +
             (C7430 - (C7431 + C7432) + C7433) * C50949) *
                C2448) *
               C50824) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51055 +
             (C7216 - (C7215 + C7214) + C7217) * C50949) *
                C2446 +
            ((C1739 - (C1738 + C1737) + C1740) * C51055 +
             (C7221 - (C7220 + C7219) + C7222) * C50949) *
                C2447 +
            ((C1743 - (C1742 + C1741) + C1744) * C51055 +
             (C7223 - (C7224 + C7225) + C7226) * C50949) *
                C2448) *
               C51040 +
           (((C1889 + C1888 - C1887 - C1890) * C51055 +
             (C7428 + C7427 - C7426 - C7429) * C50949) *
                C2446 +
            ((C1893 + C1892 - C1891 - C1894) * C51055 +
             (C7432 + C7431 - C7430 - C7433) * C50949) *
                C2447 +
            ((C1897 + C1896 - C1895 - C1898) * C51055 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50907 * C1164) * C1731 -
              (C117 * C1165 + C50907 * C1169) * C50850) *
                 C50949) *
                C2448) *
               C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C1730 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C1728 -
             (C13117 + C13118 + C13119) * C1731 -
             (C13120 + C13121 + C13122) * C50850) *
                C51055 +
            ((C13119 + C13118 + C13117) * C1730 +
             (C13122 + C13121 + C13120) * C1728 -
             (C13709 + C13708 + C13707) * C1731 -
             (C13712 + C13711 + C13710) * C50850) *
                C50949) *
               C50754 * C51040 +
           (((C13537 + C13538 + C13539) * C1731 -
             ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
               C8180 * C310 + C8175 * C319) *
                  C1728 +
              (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
               C8180 * C301 + C8175 * C311) *
                  C1730) +
             (C13540 + C13541 + C13542) * C50850) *
                C51055 +
            ((C13873 + C13872 + C13871) * C1731 -
             ((C13542 + C13541 + C13540) * C1728 +
              (C13539 + C13538 + C13537) * C1730) +
             (C13876 + C13875 + C13874) * C50850) *
                C50949) *
               C50754 * C50824) *
              C1464 +
          ((((C8592 + C8591 + C8590) * C1731 -
             ((C8225 + C8224 + C8223) * C1728 +
              (C8222 + C8221 + C8220) * C1730) +
             (C8595 + C8594 + C8593) * C50850) *
                C51055 +
            ((C9184 + C9185 + C9186) * C1731 -
             ((C8593 + C8594 + C8595) * C1728 +
              (C8590 + C8591 + C8592) * C1730) +
             (C9187 + C9188 + C9189) * C50850) *
                C50949) *
               C50754 * C51040 +
           (((C8413 + C8412 + C8411) * C1730 + (C8410 + C8409 + C8408) * C1728 -
             (C9950 + C9949 + C9948) * C1731 -
             (C9953 + C9952 + C9951) * C50850) *
                C51055 +
            ((C9948 + C9949 + C9950) * C1730 + (C9951 + C9952 + C9953) * C1728 -
             (C8182 * C9336 + C8177 * C9339 + C8181 * C3646 + C8176 * C3650 +
              C8180 * C1155 + C8175 * C1160) *
                 C1731 -
             (C8182 * C9340 + C8177 * C9342 + C8181 * C3651 + C8176 * C3655 +
              C8180 * C1161 + C8175 * C1167) *
                 C50850) *
                C50949) *
               C50754 * C50824) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C1999 +
             (C117 * C127 + C50907 * C140) * C51087 - C5693 * C2000 -
             C5694 * C51077 + C6284 * C2001 + C6285 * C1998) *
                C51055 +
            (C5693 * C1999 + C5694 * C51087 - C6284 * C2000 - C6285 * C51077 +
             C6572 * C2001 + C6573 * C1998) *
                C50949) *
               C2446 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51055 +
            (C7580 + C7581 - C7582 - C7583 + C7584 + C7585) * C50949) *
               C2447 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C51055 +
            (C7586 + C7587 - C7588 - C7589 + C7590 + C7591) * C50949) *
               C2448) *
              C50808 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C51055 +
            (C7582 - (C7581 + C7580) + C7583 - C7584 - C7585) * C50949) *
               C2446 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C51055 +
            (C7588 - (C7587 + C7586) + C7589 - C7590 - C7591) * C50949) *
               C2447 +
           ((C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C51055 +
            (C1049 * C2000 - (C516 * C51087 + C515 * C1999) + C1050 * C51077 -
             (C117 * C1247 + C50907 * C1254) * C2001 -
             (C117 * C1255 + C50907 * C1259) * C1998) *
                C50949) *
               C2448) *
              C50808 * C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C1999 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51087 -
            (C13117 + C13118 + C13119) * C2000 -
            (C13120 + C13121 + C13122) * C51077 +
            (C13707 + C13708 + C13709) * C2001 +
            (C13710 + C13711 + C13712) * C1998) *
               C51055 +
           ((C13119 + C13118 + C13117) * C1999 +
            (C13122 + C13121 + C13120) * C51087 -
            (C13709 + C13708 + C13707) * C2000 -
            (C13712 + C13711 + C13710) * C51077 +
            (C13997 + C13996 + C13995) * C2001 +
            (C14000 + C13999 + C13998) * C1998) *
               C50949) *
              C50754 * C50808 * C1464 +
          (((C8592 + C8591 + C8590) * C2000 -
            ((C8225 + C8224 + C8223) * C51087 +
             (C8222 + C8221 + C8220) * C1999) +
            (C8595 + C8594 + C8593) * C51077 - (C9186 + C9185 + C9184) * C2001 -
            (C9189 + C9188 + C9187) * C1998) *
               C51055 +
           ((C9184 + C9185 + C9186) * C2000 -
            ((C8593 + C8594 + C8595) * C51087 +
             (C8590 + C8591 + C8592) * C1999) +
            (C9187 + C9188 + C9189) * C51077 -
            (C8182 * C9442 + C8177 * C9445 + C8181 * C3756 + C8176 * C3760 +
             C8180 * C1245 + C8175 * C1250) *
                C2001 -
            (C8182 * C9446 + C8177 * C9448 + C8181 * C3761 + C8176 * C3765 +
             C8180 * C1251 + C8175 * C1257) *
                C1998) *
               C50949) *
              C50754 * C50808 * C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51055 +
            ((C117 * C460 + C50907 * C466) * C118 +
             (C117 * C467 + C50907 * C478) * C50838) *
                C50949) *
               C2446 +
           ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
           C5372 * C2448) *
              C50808 * C113 -
          (C5373 * C2448 +
           ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
           ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
              C50808 * C114 +
          (C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
           ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
              C50808 * C115 -
          ((((C117 * C477 + C50907 * C483) * C50838 +
             (C117 * C465 + C50907 * C476) * C118) *
                C50949 +
            (C187 + C186) * C51055) *
               C2448 +
           ((C5367 + C5366) * C50949 + C190 * C51055) * C2447 + C5373 * C2446) *
              C50808 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             (C5693 * C118 + C5694 * C50838) * C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C630 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            (((C117 * C873 + C50907 * C888) * C50838 +
              (C117 * C864 + C50907 * C872) * C118) *
                 C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C631 +
           ((((C117 * C635 + C50907 * C640) * C118 +
              (C117 * C641 + C50907 * C650) * C50838) *
                 C51055 +
             ((C117 * C868 + C50907 * C880) * C118 +
              (C117 * C881 + C50907 * C892) * C50838) *
                 C50949) *
                C2446 +
            ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
            ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
               C632) *
              C51033 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C631 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C630 -
           ((((C117 * C887 + C50907 * C895) * C50838 +
              (C117 * C871 + C50907 * C886) * C118) *
                 C50949 +
             (C679 + C678) * C51055) *
                C2448 +
            ((C5861 + C5860) * C50949 + (C677 + C676) * C51055) * C2447 +
            ((C5859 + C5858) * C50949 + (C675 + C674) * C51055) * C2446) *
               C632) *
              C50781)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
             C8182 * C868 + C8177 * C880) *
                C118 +
            (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
             C8182 * C881 + C8177 * C892) *
                C50838) *
               C50949) *
              C50754 * C50808 * C113 -
          (((C8593 + C8594 + C8595) * C50838 + (C8590 + C8591 + C8592) * C118) *
               C50949 +
           ((C8225 + C8224 + C8223) * C50838 + (C8222 + C8221 + C8220) * C118) *
               C51055) *
              C50754 * C50808 * C114 +
          (((C8231 + C8230 + C8229) * C118 + (C8228 + C8227 + C8226) * C50838) *
               C51055 +
           ((C8596 + C8597 + C8598) * C118 + (C8599 + C8600 + C8601) * C50838) *
               C50949) *
              C50754 * C50808 * C115 -
          (((C8182 * C887 + C8177 * C895 + C8181 * C879 + C8176 * C891 +
             C8180 * C473 + C8175 * C481) *
                C50838 +
            (C8182 * C871 + C8177 * C886 + C8181 * C867 + C8176 * C878 +
             C8180 * C463 + C8175 * C472) *
                C118) *
               C50949 +
           ((C8237 + C8236 + C8235) * C50838 + (C8234 + C8233 + C8232) * C118) *
               C51055) *
              C50754 * C50808 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C13119 + C13118 + C13117) * C118 +
             (C13122 + C13121 + C13120) * C50838) *
                C50949) *
               C50754 * C630 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C631 +
           (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
              C8182 * C3161 + C8177 * C3167) *
                 C118 +
             (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
              C8182 * C3166 + C8177 * C3170) *
                 C50838) *
                C51055 +
            ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
              C8182 * C9017 + C8177 * C9019) *
                 C118 +
             (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
              C8182 * C9020 + C8177 * C9023) *
                 C50838) *
                C50949) *
               C50754 * C632) *
              C51033 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C631 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C630 -
           (((C8182 * C9022 + C8177 * C9024 + C8181 * C3323 + C8176 * C3327 +
              C8180 * C883 + C8175 * C893) *
                 C50838 +
             (C8182 * C9018 + C8177 * C9021 + C8181 * C3318 + C8176 * C3322 +
              C8180 * C869 + C8175 * C882) *
                 C118) *
                C50949 +
            ((C8765 + C8764 + C8763) * C50838 +
             (C8762 + C8761 + C8760) * C118) *
                C51055) *
               C50754 * C632) *
              C50781)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50907 * C126) * C118 +
              (C117 * C127 + C50907 * C140) * C50838) *
                 C51055 +
             ((C117 * C460 + C50907 * C466) * C118 +
              (C117 * C467 + C50907 * C478) * C50838) *
                 C50949) *
                C2446 +
            ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
            C5372 * C2448) *
               C51040 -
           (C5529 * C2448 +
            ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
            (((C117 * C873 + C50907 * C888) * C50838 +
              (C117 * C864 + C50907 * C872) * C118) *
                 C50949 +
             ((C117 * C310 + C50907 * C319) * C50838 +
              (C117 * C301 + C50907 * C311) * C118) *
                 C51055) *
                C2446) *
               C50824) *
              C295 +
          ((((C352 + C351) * C51055 + (C5524 + C5523) * C50949) * C2446 +
            ((C350 + C349) * C51055 + (C5521 + C5520) * C50949) * C2447 +
            ((C348 + C347) * C51055 + (C5525 + C5526) * C50949) * C2448) *
               C50824 -
           (C5373 * C2448 +
            ((C5362 + C5361) * C50949 + (C181 + C180) * C51055) * C2447 +
            ((C5359 + C5358) * C50949 + (C179 + C178) * C51055) * C2446) *
               C51040) *
              C296 +
          ((C5372 * C2446 + (C189 * C51055 + (C5364 + C5363) * C50949) * C2447 +
            ((C185 + C184) * C51055 + (C5366 + C5367) * C50949) * C2448) *
               C51040 -
           ((((C117 * C1598 + C50907 * C1599) * C50838 +
              (C117 * C1596 + C50907 * C1597) * C118) *
                 C50949 +
             (C354 + C353) * C51055) *
                C2448 +
            ((C5526 + C5525) * C50949 + C355 * C51055) * C2447 +
            C5529 * C2446) *
               C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C118 +
             (C117 * C127 + C50907 * C140) * C50838) *
                C51055 +
            (C5693 * C118 + C5694 * C50838) * C50949) *
               C2446 +
           ((C178 + C179) * C51055 + (C5358 + C5359) * C50949) * C2447 +
           C5372 * C2448) *
              C745 -
          (C5529 * C2448 +
           ((C5523 + C5524) * C50949 + (C351 + C352) * C51055) * C2447 +
           (((C117 * C873 + C50907 * C888) * C50838 +
             (C117 * C864 + C50907 * C872) * C118) *
                C50949 +
            ((C117 * C310 + C50907 * C319) * C50838 +
             (C117 * C301 + C50907 * C311) * C118) *
                C51055) *
               C2446) *
              C746 +
          ((((C117 * C635 + C50907 * C640) * C118 +
             (C117 * C641 + C50907 * C650) * C50838) *
                C51055 +
            ((C117 * C868 + C50907 * C880) * C118 +
             (C117 * C881 + C50907 * C892) * C50838) *
                C50949) *
               C2446 +
           ((C674 + C675) * C51055 + (C5858 + C5859) * C50949) * C2447 +
           ((C676 + C677) * C51055 + (C5860 + C5861) * C50949) * C2448) *
              C747 -
          ((((C117 * C3325 + C50907 * C3328) * C50838 +
             (C117 * C3319 + C50907 * C3324) * C118) *
                C50949 +
            ((C117 * C756 + C50907 * C763) * C50838 +
             (C117 * C751 + C50907 * C757) * C118) *
                C51055) *
               C2448 +
           (((C117 * C3323 + C50907 * C3327) * C50838 +
             (C117 * C3318 + C50907 * C3322) * C118) *
                C50949 +
            ((C117 * C758 + C50907 * C764) * C50838 +
             (C117 * C752 + C50907 * C759) * C118) *
                C51055) *
               C2447 +
           (((C117 * C3321 + C50907 * C3326) * C50838 +
             (C117 * C3317 + C50907 * C3320) * C118) *
                C50949 +
            ((C117 * C760 + C50907 * C765) * C50838 +
             (C117 * C753 + C50907 * C761) * C118) *
                C51055) *
               C2446) *
              C748) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
              C8182 * C635 + C8177 * C640) *
                 C118 +
             (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
              C8182 * C641 + C8177 * C650) *
                 C50838) *
                C51055 +
            ((C8180 * C460 + C8175 * C466 + C8181 * C864 + C8176 * C872 +
              C8182 * C868 + C8177 * C880) *
                 C118 +
             (C8180 * C467 + C8175 * C478 + C8181 * C873 + C8176 * C888 +
              C8182 * C881 + C8177 * C892) *
                 C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
              C8180 * C873 + C8175 * C888) *
                 C50838 +
             (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
              C8180 * C864 + C8175 * C872) *
                 C118) *
                C50949 +
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C50838 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C118) *
                C51055) *
               C50754 * C50824) *
              C295 +
          ((((C8413 + C8412 + C8411) * C118 +
             (C8410 + C8409 + C8408) * C50838) *
                C51055 +
            ((C9948 + C9949 + C9950) * C118 +
             (C9951 + C9952 + C9953) * C50838) *
                C50949) *
               C50754 * C50824 -
           (((C8593 + C8594 + C8595) * C50838 +
             (C8590 + C8591 + C8592) * C118) *
                C50949 +
            ((C8225 + C8224 + C8223) * C50838 +
             (C8222 + C8221 + C8220) * C118) *
                C51055) *
               C50754 * C51040) *
              C296 +
          ((((C8231 + C8230 + C8229) * C118 +
             (C8228 + C8227 + C8226) * C50838) *
                C51055 +
            ((C8596 + C8597 + C8598) * C118 +
             (C8599 + C8600 + C8601) * C50838) *
                C50949) *
               C50754 * C51040 -
           (((C8182 * C3325 + C8177 * C3328 + C8181 * C885 + C8176 * C894 +
              C8180 * C877 + C8175 * C890) *
                 C50838 +
             (C8182 * C3319 + C8177 * C3324 + C8181 * C870 + C8176 * C884 +
              C8180 * C866 + C8175 * C876) *
                 C118) *
                C50949 +
            ((C8419 + C8418 + C8417) * C50838 +
             (C8416 + C8415 + C8414) * C118) *
                C51055) *
               C50754 * C50824) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C118 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C50838) *
               C51055 +
           ((C13119 + C13118 + C13117) * C118 +
            (C13122 + C13121 + C13120) * C50838) *
               C50949) *
              C50754 * C745 -
          (((C8182 * C3321 + C8177 * C3326 + C8181 * C881 + C8176 * C892 +
             C8180 * C873 + C8175 * C888) *
                C50838 +
            (C8182 * C3317 + C8177 * C3320 + C8181 * C868 + C8176 * C880 +
             C8180 * C864 + C8175 * C872) *
                C118) *
               C50949 +
           ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
             C8180 * C310 + C8175 * C319) *
                C50838 +
            (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
             C8180 * C301 + C8175 * C311) *
                C118) *
               C51055) *
              C50754 * C746 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C118 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C50838) *
               C51055 +
           ((C8180 * C868 + C8175 * C880 + C8181 * C3317 + C8176 * C3320 +
             C8182 * C9017 + C8177 * C9019) *
                C118 +
            (C8180 * C881 + C8175 * C892 + C8181 * C3321 + C8176 * C3326 +
             C8182 * C9020 + C8177 * C9023) *
                C50838) *
               C50949) *
              C50754 * C747 -
          (((C8182 * C11464 + C8177 * C11465 + C8181 * C9020 + C8176 * C9023 +
             C8180 * C3321 + C8175 * C3326) *
                C50838 +
            (C8182 * C11462 + C8177 * C11463 + C8181 * C9017 + C8176 * C9019 +
             C8180 * C3317 + C8175 * C3320) *
                C118) *
               C50949 +
           ((C8182 * C8867 + C8177 * C8870 + C8181 * C3166 + C8176 * C3170 +
             C8180 * C760 + C8175 * C765) *
                C50838 +
            (C8182 * C8864 + C8177 * C8868 + C8181 * C3161 + C8176 * C3167 +
             C8180 * C753 + C8175 * C761) *
                C118) *
               C51055) *
              C50754 * C748) *
         C50776) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C458 + C5694 * C51042 -
             (C117 * C1000 + C50907 * C1005) * C459 -
             (C117 * C1006 + C50907 * C1015) * C50850) *
                C50949) *
               C2446 +
           ((C485 + C486 - C519 - C520) * C51055 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C2447 +
           C5699 * C2448) *
              C50808 * C295 +
          (((C519 - (C486 + C485) + C520) * C51055 +
            (C5682 - (C5681 + C5680) + C5683) * C50949) *
               C2446 +
           ((C521 - (C492 + C491) + C522) * C51055 +
            (C5687 - (C5686 + C5685) + C5688) * C50949) *
               C2447 +
           ((C523 - (C498 + C497) + C524) * C51055 +
            (C5689 - (C5690 + C5691) + C5692) * C50949) *
               C2448) *
              C50808 * C296 +
          (C5699 * C2446 +
           (C530 * C51055 + (C5691 + C5690 - C5689 - C5692) * C50949) * C2447 +
           ((C506 + C505 - C525 - C526) * C51055 +
            (C517 * C458 + C518 * C51042 -
             (C117 * C1004 + C50907 * C1013) * C459 -
             (C117 * C1014 + C50907 * C1019) * C50850) *
                C50949) *
               C2448) *
              C50808 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50907 * C126) * C458 +
             (C117 * C127 + C50907 * C140) * C51042 - C5693 * C459 -
             C5694 * C50850) *
                C51055 +
            (C5693 * C458 + C5694 * C51042 -
             (C117 * C1000 + C50907 * C1005) * C459 -
             (C117 * C1006 + C50907 * C1015) * C50850) *
                C50949) *
               C2446 +
           ((C485 + C486 - C519 - C520) * C51055 +
            (C5680 + C5681 - C5682 - C5683) * C50949) *
               C2447 +
           C5699 * C2448) *
              C630 +
          (((C6114 * C459 -
             ((C117 * C310 + C50907 * C319) * C51042 +
              (C117 * C301 + C50907 * C311) * C458) +
             C6115 * C50850) *
                C51055 +
            ((C117 * C1154 + C50907 * C1158) * C459 -
             (C6115 * C51042 + C6114 * C458) +
             (C117 * C1159 + C50907 * C1166) * C50850) *
                C50949) *
               C2446 +
           ((C1625 - (C1603 + C1604) + C1626) * C51055 +
            ((C117 * C1155 + C50907 * C1160) * C459 -
             (C1620 * C51042 + C1619 * C458) +
             (C117 * C1161 + C50907 * C1167) * C50850) *
                C50949) *
               C2447 +
           ((C1627 - (C1609 + C1610) + C1628) * C51055 +
            ((C117 * C1156 + C50907 * C1162) * C459 -
             (C1622 * C51042 + C1621 * C458) +
             (C117 * C1163 + C50907 * C1168) * C50850) *
                C50949) *
               C2448) *
              C631 +
          ((((C117 * C635 + C50907 * C640) * C458 +
             (C117 * C641 + C50907 * C650) * C51042 - C6116 * C459 -
             C6117 * C50850) *
                C51055 +
            (C6116 * C458 + C6117 * C51042 -
             (C117 * C3645 + C50907 * C3648) * C459 -
             (C117 * C3649 + C50907 * C3654) * C50850) *
                C50949) *
               C2446 +
           ((C668 * C458 + C669 * C51042 - C5854 * C459 - C5855 * C50850) *
                C51055 +
            (C5854 * C458 + C5855 * C51042 -
             (C117 * C3646 + C50907 * C3650) * C459 -
             (C117 * C3651 + C50907 * C3655) * C50850) *
                C50949) *
               C2447 +
           ((C670 * C458 + C671 * C51042 - C5856 * C459 - C5857 * C50850) *
                C51055 +
            (C5856 * C458 + C5857 * C51042 -
             (C117 * C3647 + C50907 * C3652) * C459 -
             (C117 * C3653 + C50907 * C3656) * C50850) *
                C50949) *
               C2448) *
              C632) *
         C50776) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C50808 * C295 +
          (((C8592 + C8591 + C8590) * C459 -
            ((C8225 + C8224 + C8223) * C51042 +
             (C8222 + C8221 + C8220) * C458) +
            (C8595 + C8594 + C8593) * C50850) *
               C51055 +
           ((C9184 + C9185 + C9186) * C459 -
            ((C8593 + C8594 + C8595) * C51042 +
             (C8590 + C8591 + C8592) * C458) +
            (C9187 + C9188 + C9189) * C50850) *
               C50949) *
              C50754 * C50808 * C296 +
          (((C8231 + C8230 + C8229) * C458 + (C8228 + C8227 + C8226) * C51042 -
            (C8598 + C8597 + C8596) * C459 - (C8601 + C8600 + C8599) * C50850) *
               C51055 +
           ((C8596 + C8597 + C8598) * C458 + (C8599 + C8600 + C8601) * C51042 -
            (C8182 * C3647 + C8177 * C3652 + C8181 * C1156 + C8176 * C1162 +
             C8180 * C1002 + C8175 * C1009) *
                C459 -
            (C8182 * C3653 + C8177 * C3656 + C8181 * C1163 + C8176 * C1168 +
             C8180 * C1010 + C8175 * C1017) *
                C50850) *
               C50949) *
              C50754 * C50808 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8180 * C119 + C8175 * C126 + C8181 * C301 + C8176 * C311 +
             C8182 * C635 + C8177 * C640) *
                C458 +
            (C8180 * C127 + C8175 * C140 + C8181 * C310 + C8176 * C319 +
             C8182 * C641 + C8177 * C650) *
                C51042 -
            (C13117 + C13118 + C13119) * C459 -
            (C13120 + C13121 + C13122) * C50850) *
               C51055 +
           ((C13119 + C13118 + C13117) * C458 +
            (C13122 + C13121 + C13120) * C51042 -
            (C8182 * C3645 + C8177 * C3648 + C8181 * C1154 + C8176 * C1158 +
             C8180 * C1000 + C8175 * C1005) *
                C459 -
            (C8182 * C3649 + C8177 * C3654 + C8181 * C1159 + C8176 * C1166 +
             C8180 * C1006 + C8175 * C1015) *
                C50850) *
               C50949) *
              C50754 * C630 +
          (((C13537 + C13538 + C13539) * C459 -
            ((C8182 * C760 + C8177 * C765 + C8181 * C641 + C8176 * C650 +
              C8180 * C310 + C8175 * C319) *
                 C51042 +
             (C8182 * C753 + C8177 * C761 + C8181 * C635 + C8176 * C640 +
              C8180 * C301 + C8175 * C311) *
                 C458) +
            (C13540 + C13541 + C13542) * C50850) *
               C51055 +
           ((C8180 * C1154 + C8175 * C1158 + C8181 * C3645 + C8176 * C3648 +
             C8182 * C9335 + C8177 * C9337) *
                C459 -
            ((C13542 + C13541 + C13540) * C51042 +
             (C13539 + C13538 + C13537) * C458) +
            (C8180 * C1159 + C8175 * C1166 + C8181 * C3649 + C8176 * C3654 +
             C8182 * C9338 + C8177 * C9341) *
                C50850) *
               C50949) *
              C50754 * C631 +
          (((C8180 * C635 + C8175 * C640 + C8181 * C753 + C8176 * C761 +
             C8182 * C3161 + C8177 * C3167) *
                C458 +
            (C8180 * C641 + C8175 * C650 + C8181 * C760 + C8176 * C765 +
             C8182 * C3166 + C8177 * C3170) *
                C51042 -
            (C13543 + C13544 + C13545) * C459 -
            (C13546 + C13547 + C13548) * C50850) *
               C51055 +
           ((C13545 + C13544 + C13543) * C458 +
            (C13548 + C13547 + C13546) * C51042 -
            (C8182 * C11662 + C8177 * C11663 + C8181 * C9335 + C8176 * C9337 +
             C8180 * C3645 + C8175 * C3648) *
                C459 -
            (C8182 * C11664 + C8177 * C11665 + C8181 * C9338 + C8176 * C9341 +
             C8180 * C3649 + C8175 * C3654) *
                C50850) *
               C50949) *
              C50754 * C632) *
         C50776) /
            (p * q * std::sqrt(p + q));
}
