/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdp_AC_zx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2121_13_31(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49747 = 0 * ce;
    const double C49746 = ce * de;
    const double C49745 = 0 * de;
    const double C49744 = ce + de;
    const double C49743 = 0 * de;
    const double C49742 = xC - xD;
    const double C49806 = ae + be;
    const double C49805 = zA - zB;
    const double C49816 = ae * be;
    const double C49815 = 0 * be;
    const double C49834 = 0 * ae;
    const double C49830 = 0 * be;
    const double C49874 = zP - zQ;
    const double C49873 = p + q;
    const double C49872 = p * q;
    const double C49871 = xP - xQ;
    const double C49879 = bs[3];
    const double C49890 = bs[4];
    const double C49898 = bs[5];
    const double C49917 = bs[6];
    const double C49947 = bs[7];
    const double C50026 = yP - yQ;
    const double C50341 = bs[2];
    const double C122 = bs[0];
    const double C50767 = xA - xB;
    const double C50799 = yC - yD;
    const double C50804 = zC - zD;
    const double C50899 = yA - yB;
    const double C49752 = C49747 / C49744;
    const double C49749 = 2 * C49744;
    const double C49748 = std::pow(C49744, 2);
    const double C49751 = C49746 * C49742;
    const double C49750 = C49742 * C49745;
    const double C50750 = C49742 * de;
    const double C50749 = C49742 * ce;
    const double C50748 = std::pow(C49742, 2);
    const double C49814 = 2 * C49806;
    const double C49831 = std::pow(C49806, 2);
    const double C49882 = C49744 * C49806;
    const double C143 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (zP - zQ) * (xP - xQ) * ae * ce) /
                         C49744) /
                        C49806;
    const double C50938 = std::pow(C49805, 2);
    const double C50950 = C49805 * be;
    const double C50949 = C49805 * ae;
    const double C49817 = C49816 * C49805;
    const double C49832 = C49805 * C49815;
    const double C49838 = C49834 / C49806;
    const double C49880 = C49874 * ae;
    const double C50127 = std::pow(C49874, 2);
    const double C49875 = 2 * C49872;
    const double C49881 = C49874 * C49871;
    const double C49900 = std::pow(C49871, 2);
    const double C49987 = C49871 * ce;
    const double C50035 = std::pow(C50026, 2);
    const double C50770 = C50767 * be;
    const double C50769 = C50767 * ae;
    const double C50768 = std::pow(C50767, 2);
    const double C50813 = std::pow(C50799, 2);
    const double C50827 = C50799 * de;
    const double C50826 = C50799 * ce;
    const double C50839 = std::pow(C50804, 2);
    const double C50851 = C50804 * de;
    const double C50850 = C50804 * ce;
    const double C50912 = std::pow(C50899, 2);
    const double C50926 = C50899 * be;
    const double C50925 = C50899 * ae;
    const double C50758 = std::pow(C49749, -1);
    const double C51045 = std::pow(C49749, -2);
    const double C49753 = 2 * C49748;
    const double C51037 = 4 * C49748;
    const double C49754 = C49750 / C49744;
    const double C50751 = C50748 * C49746;
    const double C50778 = std::pow(C49814, -1);
    const double C51058 = std::pow(C49814, -2);
    const double C49835 = 2 * C49831;
    const double C51044 = 4 * C49831;
    const double C50939 = C50938 * C49816;
    const double C49836 = C49832 / C49806;
    const double C49884 = C49879 * C49880;
    const double C49892 = C49890 * C49880;
    const double C49903 = C49898 * C49880;
    const double C49923 = C49917 * C49880;
    const double C49955 = C49947 * C49880;
    const double C49876 = C49875 / C49873;
    const double C129 = (-(bs[1] * C49880 * C49875) / C49873) / C49806;
    const double C123 = -(C49871 * bs[1] * C49875) / C49873;
    const double C287 = -(C50026 * bs[1] * C49875) / C49873;
    const double C435 = -(C49874 * bs[1] * C49875) / C49873;
    const double C49885 = C49881 * ae;
    const double C49990 = C49890 * C49987;
    const double C49994 = C49898 * C49987;
    const double C50004 = C49917 * C49987;
    const double C50040 = C49879 * C49987;
    const double C50063 = C49947 * C49987;
    const double C130 = (bs[1] * C49987 * C49875) / (C49873 * C49744);
    const double C50771 = C50768 * C49816;
    const double C50814 = C50813 * C49746;
    const double C50840 = C50839 * C49746;
    const double C50913 = C50912 * C49816;
    const double C49759 = C49745 / C49753;
    const double C49757 = C49743 / C49753;
    const double C49756 = 0 - C49754;
    const double C50752 = C50751 / C49744;
    const double C49843 = C49815 / C49835;
    const double C49841 = C49830 / C49835;
    const double C50940 = C50939 / C49806;
    const double C49840 = 0 - C49836;
    const double C49878 = -C49876;
    const double C49889 = std::pow(C49876, 4);
    const double C49916 = std::pow(C49876, 6);
    const double C144 =
        (-(C49871 * std::pow(-C49876, 3) * bs[3] * C49874 * C49871 * ae * ce) /
         C49744) /
            C49806 -
        (std::pow(C49876, 2) * bs[2] * C49874 * ae * ce) / (C49744 * C49806);
    const double C50342 = std::pow(C49876, 2);
    const double C131 =
        (C49871 * std::pow(C49876, 2) * bs[2] * C49880) / C49806;
    const double C132 =
        (ce * bs[1] * C49875) / (C49873 * C49744) -
        (C49871 * std::pow(C49876, 2) * bs[2] * C49987) / C49744;
    const double C49887 = C49885 * ce;
    const double C50772 = C50771 / C49806;
    const double C50815 = C50814 / C49744;
    const double C50841 = C50840 / C49744;
    const double C50914 = C50913 / C49806;
    const double C49761 = C49756 * ce;
    const double C50753 = -C50752;
    const double C50941 = -C50940;
    const double C49845 = C49840 * ae;
    const double C49883 = std::pow(C49878, 3);
    const double C49897 = std::pow(C49878, 5);
    const double C49946 = std::pow(C49878, 7);
    const double C49894 = C49889 * C49892;
    const double C49991 = C49890 * C49889;
    const double C49992 = C49889 * C49990;
    const double C49926 = C49916 * C49923;
    const double C50007 = C49917 * C49916;
    const double C50008 = C49916 * C50004;
    const double C50343 = C50341 * C50342;
    const double C293 = -(C50026 * C50342 * C50341 * C49987) / C49744;
    const double C294 = (C50026 * C50342 * C50341 * C49880) / C49806;
    const double C441 = -(C49874 * C50342 * C50341 * C49987) / C49744;
    const double C442 = (C49874 * C50342 * C50341 * C49880) / C49806 -
                        (ae * bs[1] * C49875) / (C49873 * C49806);
    const double C49891 = C49890 * C49887;
    const double C49901 = C49898 * C49887;
    const double C49920 = C49917 * C49887;
    const double C49952 = C49947 * C49887;
    const double C50773 = -C50772;
    const double C50816 = -C50815;
    const double C50842 = -C50841;
    const double C50915 = -C50914;
    const double C49764 = C49761 / C49744;
    const double C50754 = std::exp(C50753);
    const double C50942 = std::exp(C50941);
    const double C49847 = C49845 / C49806;
    const double C49886 = C49883 * C49884;
    const double C49988 = C49879 * C49883;
    const double C50041 = C49883 * C50040;
    const double C304 =
        (-((yP - yQ) * C49883 * C49879 * C49887) / C49744) / C49806;
    const double C452 =
        (-(C49874 * C49883 * C49879 * C49887) / C49744) / C49806 -
        (ae * std::pow(C49876, 2) * bs[2] * C49871 * ce) / C49882;
    const double C49905 = C49897 * C49903;
    const double C49997 = C49898 * C49897;
    const double C49998 = C49897 * C49994;
    const double C49959 = C49946 * C49955;
    const double C50070 = C49946 * C50063;
    const double C49899 = C49894 * ce;
    const double C49896 = C49871 * C49894;
    const double C50485 = C50026 * C49894;
    const double C50505 = C49874 * C49894;
    const double C49996 = C49871 * C49991;
    const double C49995 = C49991 * ce;
    const double C50349 = C49991 * C49900;
    const double C50473 = C49991 * C50035;
    const double C50486 = C50026 * C49991;
    const double C50508 = C49991 * C50127;
    const double C50609 = C49874 * C49991;
    const double C50608 = C49991 * ae;
    const double C50043 = C49871 * C49992;
    const double C50093 = C50026 * C49992;
    const double C50143 = ae * C49992;
    const double C50141 = C49874 * C49992;
    const double C49929 = C49926 * C49900;
    const double C49948 = C49926 * ce;
    const double C49944 = C49871 * C49926;
    const double C50544 = C49926 * C50035;
    const double C50622 = C50026 * C49926;
    const double C50640 = C49874 * C49926;
    const double C50010 = C50007 * C49900;
    const double C50065 = C49871 * C50007;
    const double C50064 = C50007 * ce;
    const double C50555 = C50007 * C50035;
    const double C50625 = C50026 * C50007;
    const double C50644 = C50007 * C50127;
    const double C50012 = C49871 * C50008;
    const double C50172 = C50008 * C50035;
    const double C50194 = C50026 * C50008;
    const double C50257 = C50008 * C50127;
    const double C50307 = ae * C50008;
    const double C50305 = C49874 * C50008;
    const double C124 = C50343 * C49900 - (bs[1] * C49875) / C49873;
    const double C286 = C50026 * C49871 * C50343;
    const double C434 = C49874 * C49871 * C50343;
    const double C587 = C50343 * C50035 - (bs[1] * C49875) / C49873;
    const double C811 = C49874 * C50026 * C50343;
    const double C944 = C50343 * C50127 - (bs[1] * C49875) / C49873;
    const double C49893 = C49889 * C49891;
    const double C49904 = C49897 * C49901;
    const double C49925 = C49916 * C49920;
    const double C49958 = C49946 * C49952;
    const double C50774 = std::exp(C50773);
    const double C50817 = std::exp(C50816);
    const double C50843 = std::exp(C50842);
    const double C50916 = std::exp(C50915);
    const double C49766 = C49764 - C49757;
    const double C49755 = C49751 * C50754;
    const double C50755 = C50754 * C50749;
    const double C50759 = C50758 * C50754;
    const double C51033 = C50754 / C49749;
    const double C51032 = C50754 * C50750;
    const double C280 = C51045 * C50754;
    const double C154 = C50942 * C144;
    const double C152 = C50942 * C131;
    const double C2453 = C50942 * C294;
    const double C49818 = C49817 * C50942;
    const double C117 = -(2 * ae * be * (zA - zB) * C50942) / (ae + be);
    const double C5199 =
        ((C50942 - (C49805 * 2 * ae * be * C49805 * C50942) / C49806) * ae) /
            C49806 -
        (0 * be) / (2 * std::pow(C49806, 2));
    const double C5200 =
        (0 * ae) / C49806 - (ae * be * C49805 * C50942) / std::pow(C49806, 2);
    const double C50951 = C50942 * C50949;
    const double C50954 = C50778 * C50942;
    const double C51067 = C50942 * C50950;
    const double C51066 = C50942 / C49814;
    const double C15505 = C51058 * C50942;
    const double C49849 = C49847 - C49841;
    const double C145 =
        (-(C49871 * C49886 * ce) / C49744) / C49806 -
        (C49883 * C49879 * C49887) / C49882 +
        C49871 * ((-(C49871 * std::pow(C49876, 4) * bs[4] * C49887) / C49744) /
                      C49806 -
                  (C49886 * ce) / C49882);
    const double C133 =
        (std::pow(C49876, 2) * bs[2] * C49880 + C49886 * C49900) / C49806;
    const double C135 =
        (2 * C49871 * C49886 + C49871 * (C49886 + C49894 * C49900)) / C49806;
    const double C292 = (C50026 * C49871 * C49886) / C49806;
    const double C296 = (C50026 * (C49886 + C49894 * C49900)) / C49806;
    const double C440 =
        (C49874 * C49871 * C49886 + C49871 * C50343 * ae) / C49806;
    const double C592 = (C50342 * C50341 * C49880 + C49886 * C50035) / C49806;
    const double C708 =
        (2 * C50026 * C49886 + C50026 * (C49886 + C49894 * C50035)) / C49806;
    const double C819 =
        (C49874 * C50026 * C49886 + C50026 * C50343 * ae) / C49806;
    const double C949 =
        (C50342 * C50341 * C49880 + C49874 * (C49874 * C49886 + C50343 * ae) +
         C49874 * C50343 * ae) /
        C49806;
    const double C50044 = C49988 * ce;
    const double C50348 = C49871 * C49988;
    const double C50440 = C50026 * C49988;
    const double C50507 = C49874 * C49988;
    const double C50506 = C49988 * ae;
    const double C444 = (C49874 * (C49886 + C49894 * C49900) +
                         (C50343 + C49988 * C49900) * ae) /
                        C49806;
    const double C834 = (C49874 * (C49886 + C49894 * C50035) +
                         (C50343 + C49988 * C50035) * ae) /
                        C49806;
    const double C1177 =
        (2 * (C49874 * C49886 + C50343 * ae) +
         C49874 * (C49886 + C49874 * (C49874 * C49894 + C49988 * ae) +
                   C49874 * C49988 * ae) +
         (C50343 + C49988 * C50127) * ae) /
        C49806;
    const double C125 =
        2 * C49871 * C50343 + C49871 * (C50343 + C49988 * C49900);
    const double C288 = C50026 * (C50343 + C49988 * C49900);
    const double C436 = C49874 * (C50343 + C49988 * C49900);
    const double C700 =
        2 * C50026 * C50343 + C50026 * (C50343 + C49988 * C50035);
    const double C818 = C49874 * (C50343 + C49988 * C50035);
    const double C1169 =
        2 * C49874 * C50343 + C49874 * (C50343 + C49988 * C50127);
    const double C134 = -(C49871 * (C49871 * C50041 + C50343 * ce) +
                          C50342 * C50341 * C49987 + C49871 * C50343 * ce) /
                        C49744;
    const double C295 = -(C50026 * (C49871 * C50041 + C50343 * ce)) / C49744;
    const double C443 = -(C49874 * (C49871 * C50041 + C50343 * ce)) / C49744;
    const double C593 = -(C50041 * C50035 + C50342 * C50341 * C49987) / C49744;
    const double C707 = (-2 * C50026 * C50041) / C49744 -
                        (C50026 * (C49992 * C50035 + C50041)) / C49744;
    const double C820 = -(C49874 * C50026 * C50041) / C49744;
    const double C833 = -(C49874 * (C49992 * C50035 + C50041)) / C49744;
    const double C950 = -(C50041 * C50127 + C50342 * C50341 * C49987) / C49744;
    const double C1176 = (-2 * C49874 * C50041) / C49744 -
                         (C49874 * (C49992 * C50127 + C50041)) / C49744;
    const double C2455 = C50942 * C304;
    const double C49907 = C49905 * C49900;
    const double C49918 = C49905 * ce;
    const double C49914 = C49871 * C49905;
    const double C50517 = C49905 * C50035;
    const double C50543 = C50026 * C49905;
    const double C50607 = C49874 * C49905;
    const double C2915 =
        (3 * (C49886 + C49894 * C50035) +
         C50026 * (2 * C50026 * C49894 + C50026 * (C49894 + C49905 * C50035))) /
        C49806;
    const double C49999 = C49997 * C49900;
    const double C50006 = C49871 * C49997;
    const double C50005 = C49997 * ce;
    const double C50533 = C49997 * C50035;
    const double C50554 = C50026 * C49997;
    const double C50610 = C49997 * C50127;
    const double C50642 = C49874 * C49997;
    const double C50641 = C49997 * ae;
    const double C50000 = C49871 * C49998;
    const double C50112 = C49998 * C50035;
    const double C50122 = C50026 * C49998;
    const double C50144 = C49998 * C50127;
    const double C50256 = ae * C49998;
    const double C50254 = C49874 * C49998;
    const double C49962 = C49959 * C49900;
    const double C50074 = C49871 * C50070;
    const double C50195 = C50070 * C50035;
    const double C50281 = C50026 * C50070;
    const double C50309 = C50070 * C50127;
    const double C49902 = C49899 / C49882;
    const double C594 = (C49871 * C49886 + C49896 * C50035) / C49806;
    const double C50048 = C49996 * ce;
    const double C50353 = 2 * C49996;
    const double C50437 = C50026 * C49996;
    const double C50499 = C49874 * C49996;
    const double C50498 = C49996 * ae;
    const double C50350 = C49988 + C50349;
    const double C50474 = C49988 + C50473;
    const double C50532 = 2 * C50486;
    const double C50576 = C49874 * C50486;
    const double C50575 = C50486 * ae;
    const double C50510 = C49988 + C50508;
    const double C50614 = 2 * C50609;
    const double C50612 = C50609 * ae;
    const double C1090 = -(C50093 * C50127 + C50026 * C50041) / C49744;
    const double C50146 = C50143 / C49882;
    const double C49932 = C49905 + C49929;
    const double C49953 = C49948 / C49882;
    const double C49954 = 2 * C49944;
    const double C49951 = C49944 * ce;
    const double C50513 = C49944 * C50035;
    const double C50582 = C50026 * C49944;
    const double C50592 = C49874 * C49944;
    const double C50546 = C49905 + C50544;
    const double C50626 = C49874 * C50622;
    const double C50013 = C49997 + C50010;
    const double C50071 = C50065 * ce;
    const double C50526 = C50065 * C50035;
    const double C50585 = C50026 * C50065;
    const double C50595 = C50065 * C50127;
    const double C50557 = C49997 + C50555;
    const double C50628 = C50625 * C50127;
    const double C50648 = C49997 + C50644;
    const double C50174 = C50172 + C49998;
    const double C50197 = -2 * C50194;
    const double C50218 = C50194 * C50127;
    const double C50280 = ae * C50194;
    const double C50277 = C49874 * C50194;
    const double C50262 = C50257 + C49998;
    const double C50313 = C50307 / C49882;
    const double C50315 = -2 * C50305;
    const double C50311 = ae * C50305;
    const double C146 =
        2 * ((-(C49871 * C49893) / C49744) / C49806 - (C49886 * ce) / C49882) -
        ((C49886 + C49894 * std::pow(C49871, 2)) * ce) / C49882 +
        C49871 *
            ((-(C49871 * C49894 * ce) / C49744) / C49806 - C49893 / C49882 +
             C49871 *
                 ((-(C49871 * std::pow(C49878, 5) * bs[5] * C49887) / C49744) /
                      C49806 -
                  (C49894 * ce) / C49882));
    const double C305 = (yP - yQ) * ((-(C49871 * C49893) / C49744) / C49806 -
                                     (C49886 * ce) / C49882);
    const double C453 = C49874 * ((-(C49871 * C49893) / C49744) / C49806 -
                                  (C49886 * ce) / C49882) -
                        (ae * (C49871 * C49883 * C49879 * C49871 * ce +
                               bs[2] * std::pow(C49876, 2) * ce)) /
                            C49882;
    const double C602 = (-(C49893 * std::pow(yP - yQ, 2)) / C49744) / C49806 -
                        (C49883 * C49879 * C49887) / C49882;
    const double C835 = (-(C49874 * C50026 * C49893) / C49744) / C49806 -
                        (ae * C50026 * C49883 * C49879 * C49987) / C49882;
    const double C959 = (-(ae * C49874 * C50041) / C49744) / C49806 -
                        (C49883 * C49879 * C49887) / C49882 +
                        C49874 * ((-(C49874 * C49893) / C49744) / C49806 -
                                  (ae * C50041) / C49882);
    const double C49906 = C49871 * C49904;
    const double C49915 = C49904 / C49882;
    const double C50121 = C50026 * C49904;
    const double C50142 = C49874 * C49904;
    const double C712 =
        (-2 * C50026 * C49893) / C49882 +
        C50026 * ((-(C49904 * std::pow(C50026, 2)) / C49744) / C49806 -
                  C49893 / C49882);
    const double C842 =
        C49874 * ((-(C49904 * C50035) / C49744) / C49806 - C49893 / C49882) -
        (ae * (C49992 * C50035 + C49883 * C49879 * C49987)) / C49882;
    const double C1095 =
        (-(ae * C49874 * C50093) / C49744) / C49806 -
        (C50026 * C49893) / C49882 +
        C49874 * ((-(C49874 * C50026 * C49904) / C49744) / C49806 -
                  (ae * C50093) / C49882);
    const double C1181 =
        2 * ((-(C49874 * C49893) / C49744) / C49806 - (ae * C50041) / C49882) -
        (ae * (C49992 * std::pow(C49874, 2) + C50041)) / C49882 +
        C49874 *
            ((-(ae * C49874 * C49992) / C49744) / C49806 - C49893 / C49882 +
             C49874 * ((-(C49874 * C49904) / C49744) / C49806 -
                       (ae * C49992) / C49882));
    const double C49928 = C49871 * C49925;
    const double C49945 = C49925 / C49882;
    const double C50155 = C49925 * C50035;
    const double C50181 = C50026 * C49925;
    const double C50255 = C49874 * C49925;
    const double C49961 = C49871 * C49958;
    const double C50182 = C49958 * C50035;
    const double C50279 = C50026 * C49958;
    const double C50306 = C49874 * C49958;
    const double C50775 = C50774 * C50769;
    const double C50779 = C50778 * C50774;
    const double C51040 = C50774 / C49814;
    const double C51039 = C50774 * C50770;
    const double C2302 = C51058 * C50774;
    const double C50828 = C50817 * C50826;
    const double C50831 = C50758 * C50817;
    const double C51049 = C50817 * C50827;
    const double C51048 = C50817 / C49749;
    const double C584 = C51045 * C50817;
    const double C50852 = C50843 * C50850;
    const double C50855 = C50758 * C50843;
    const double C51054 = C50843 * C50851;
    const double C51053 = C50843 / C49749;
    const double C943 = C51045 * C50843;
    const double C50927 = C50916 * C50925;
    const double C50930 = C50778 * C50916;
    const double C51062 = C50916 * C50926;
    const double C51061 = C50916 / C49814;
    const double C8045 = C51058 * C50916;
    const double C49760 = C49755 / C49748;
    const double C49758 = 2 * C49755;
    const double C51035 = C50755 / C49753;
    const double C51034 = C50755 * C50750;
    const double C51031 = C50755 / C49744;
    const double C50762 = C50759 * C50750;
    const double C109 = C50759 / C51037;
    const double C1282 = C50759 / C49749;
    const double C278 = (C50754 * std::pow(C50750, 2)) / C49748 + C51033;
    const double C51071 = C51032 / C49744;
    const double C279 = (-2 * C50758 * C51032) / C49744;
    const double C49819 = 2 * C49818;
    const double C49839 = C49818 / C49831;
    const double C155 = C117 * C124;
    const double C153 = C117 * C132;
    const double C151 = C117 * C123;
    const double C311 = C117 * C286;
    const double C459 = C117 * C434;
    const double C2454 = C117 * C293;
    const double C2452 = C117 * C287;
    const double C2783 = C117 * C587;
    const double C3108 = C117 * C811;
    const double C5210 = C5199 * C124;
    const double C5208 = C5199 * C132;
    const double C5204 = C5199 * C123;
    const double C5400 = C5199 * C286;
    const double C5584 = C5199 * C434;
    const double C12854 = C5199 * C587;
    const double C12850 = C5199 * C293;
    const double C12846 = C5199 * C287;
    const double C13478 = C5199 * C811;
    const double C5202 = C5200 * C434;
    const double C12848 = C5200 * C811;
    const double C51069 = C50951 / C49835;
    const double C51068 = C50951 * C50950;
    const double C51060 = C50951 / C49806;
    const double C50957 = C50954 * C50950;
    const double C21040 = C50954 / C51044;
    const double C38090 = C50954 / C49814;
    const double C51086 = C51067 / C49806;
    const double C15504 = (-2 * C50778 * C51067) / C49806;
    const double C15503 = (C50942 * std::pow(C50950, 2)) / C49831 + C51066;
    const double C158 = C50942 * C145;
    const double C156 = C50942 * C133;
    const double C160 = C50942 * C135;
    const double C312 = C50942 * C292;
    const double C316 = C50942 * C296;
    const double C460 = C50942 * C440;
    const double C5203 = C50954 * C440;
    const double C31648 = C50954 * C440;
    const double C2784 = C50942 * C592;
    const double C2933 = C50942 * C708;
    const double C3109 = C50942 * C819;
    const double C12849 = C50954 * C819;
    const double C34704 = C50954 * C819;
    const double C50045 = C50043 + C50044;
    const double C821 =
        (C49874 * C50026 * C49896 + C50026 * C50348 * ae) / C49806;
    const double C951 =
        (C49871 * C49886 + C49874 * (C49874 * C49896 + C50348 * ae) +
         C49874 * C50348 * ae) /
        C49806;
    const double C588 = C49871 * C50343 + C50348 * C50035;
    const double C699 =
        2 * C50026 * C50348 + C50026 * (C50348 + C49996 * C50035);
    const double C812 = C49874 * C50026 * C50348;
    const double C817 = C49874 * (C50348 + C49996 * C50035);
    const double C945 = C49871 * C50343 + C50348 * C50127;
    const double C1168 =
        2 * C49874 * C50348 + C49874 * (C50348 + C49996 * C50127);
    const double C1091 =
        (C50026 * C49886 + C49874 * (C49874 * C50026 * C49894 + C50440 * ae) +
         C49874 * C50440 * ae) /
        C49806;
    const double C3097 =
        (C49874 * (2 * C50026 * C49894 + C50026 * (C49894 + C49905 * C50035)) +
         (2 * C50440 + C50026 * (C49988 + C49991 * C50035)) * ae) /
        C49806;
    const double C3571 =
        (2 * (C49874 * C50485 + C50440 * ae) +
         C49874 * (C50485 + C49874 * (C49874 * C50026 * C49905 + C50486 * ae) +
                   C49874 * C50486 * ae) +
         (C50440 + C50486 * C50127) * ae) /
        C49806;
    const double C1083 = C50026 * C50343 + C50440 * C50127;
    const double C3565 =
        2 * C49874 * C50440 + C49874 * (C50440 + C50486 * C50127);
    const double C50509 = C50505 + C50506;
    const double C464 = C50942 * C444;
    const double C5213 = C50954 * C444;
    const double C31658 = C50954 * C444;
    const double C3111 = C50942 * C834;
    const double C12857 = C50954 * C834;
    const double C35113 = C50954 * C834;
    const double C159 = C117 * C125;
    const double C5220 = C5199 * C125;
    const double C315 = C117 * C288;
    const double C5410 = C5199 * C288;
    const double C463 = C117 * C436;
    const double C5212 = C5200 * C436;
    const double C5594 = C5199 * C436;
    const double C2932 = C117 * C700;
    const double C13176 = C5199 * C700;
    const double C3110 = C117 * C818;
    const double C12856 = C5200 * C818;
    const double C13470 = C5199 * C818;
    const double C157 = C117 * C134;
    const double C5214 = C5199 * C134;
    const double C313 = C117 * C295;
    const double C5404 = C5199 * C295;
    const double C461 = C117 * C443;
    const double C5206 = C5200 * C443;
    const double C5588 = C5199 * C443;
    const double C2781 = C117 * C593;
    const double C12858 = C5199 * C593;
    const double C2934 = C117 * C707;
    const double C13172 = C5199 * C707;
    const double C3106 = C117 * C820;
    const double C12852 = C5200 * C820;
    const double C13474 = C5199 * C820;
    const double C3112 = C117 * C833;
    const double C12860 = C5200 * C833;
    const double C13466 = C5199 * C833;
    const double C49909 = C49894 + C49907;
    const double C49921 = C49918 / C49882;
    const double C49922 = 2 * C49914;
    const double C49919 = C49914 * ce;
    const double C50481 = C50026 * C49914;
    const double C50497 = C49874 * C49914;
    const double C706 =
        (2 * C50026 * C49896 + C50026 * (C49896 + C49914 * C50035)) / C49806;
    const double C832 = (C49874 * (C49896 + C49914 * C50035) +
                         (C50348 + C49996 * C50035) * ae) /
                        C49806;
    const double C1175 =
        (2 * (C49874 * C49896 + C50348 * ae) +
         C49874 * (C49896 + C49874 * (C49874 * C49914 + C49996 * ae) +
                   C49874 * C49996 * ae) +
         (C50348 + C49996 * C50127) * ae) /
        C49806;
    const double C2913 =
        (3 * (C49896 + C49914 * C50035) +
         C50026 * (2 * C50026 * C49914 + C50026 * (C49914 + C49944 * C50035))) /
        C49806;
    const double C50518 = C49894 + C50517;
    const double C50545 = 2 * C50543;
    const double C50574 = C49874 * C50543;
    const double C50611 = C50607 + C50608;
    const double C8631 = C50942 * C2915;
    const double C50001 = C49991 + C49999;
    const double C50011 = 2 * C50006;
    const double C50009 = C50006 * ce;
    const double C50469 = C50006 * C50035;
    const double C50482 = C50026 * C50006;
    const double C50500 = C50006 * C50127;
    const double C50594 = C49874 * C50006;
    const double C50593 = C50006 * ae;
    const double C50014 = C50012 + C50005;
    const double C50534 = C49991 + C50533;
    const double C50556 = 2 * C50554;
    const double C50577 = C50554 * C50127;
    const double C50624 = C49874 * C50554;
    const double C50623 = C50554 * ae;
    const double C50613 = C49991 + C50610;
    const double C50649 = 2 * C50642;
    const double C50647 = C50642 * ae;
    const double C50646 = C50640 + C50641;
    const double C50002 = C50000 + C49995;
    const double C50113 = C50112 + C49992;
    const double C50171 = -2 * C50122;
    const double C50217 = ae * C50122;
    const double C50215 = C49874 * C50122;
    const double C3570 = (-2 * C49874 * C50093) / C49744 -
                         (C49874 * (C50122 * C50127 + C50093)) / C49744;
    const double C50147 = C50144 + C49992;
    const double C50260 = C50256 / C49882;
    const double C50261 = -2 * C50254;
    const double C50258 = ae * C50254;
    const double C49965 = C49926 + C49962;
    const double C50075 = C50074 + C50064;
    const double C50198 = C50195 + C50008;
    const double C50286 = C50281 * C50127;
    const double C50316 = C50309 + C50008;
    const double C609 = C50942 * C594;
    const double C1089 =
        (C50026 * C49896 + C49874 * (C49874 * C50026 * C49914 + C50437 * ae) +
         C49874 * C50437 * ae) /
        C49806;
    const double C3095 =
        (C49874 * (2 * C50026 * C49914 + C50026 * (C49914 + C49944 * C50035)) +
         (2 * C50437 + C50026 * (C49996 + C50006 * C50035)) * ae) /
        C49806;
    const double C1082 = C50026 * C50348 + C50437 * C50127;
    const double C126 = 3 * (C50343 + C49988 * C49900) +
                        C49871 * (2 * C50348 + C49871 * C50350);
    const double C289 = C50026 * (2 * C50348 + C49871 * C50350);
    const double C437 = C49874 * (2 * C50348 + C49871 * C50350);
    const double C589 = C50343 + C49988 * C49900 + C50350 * C50035;
    const double C813 = C49874 * C50026 * C50350;
    const double C946 = C50343 + C49988 * C49900 + C50350 * C50127;
    const double C3449 =
        (C49886 + C49894 * C50035 +
         C49874 * (C49874 * (C49894 + C49905 * C50035) + C50474 * ae) +
         C49874 * C50474 * ae) /
        C49806;
    const double C2909 = 3 * (C50343 + C49988 * C50035) +
                         C50026 * (2 * C50440 + C50026 * C50474);
    const double C3091 = C49874 * (2 * C50440 + C50026 * C50474);
    const double C3443 = C50343 + C49988 * C50035 + C50474 * C50127;
    const double C6451 = 3 * (C50343 + C49988 * C50127) +
                         C49874 * (2 * C50507 + C49874 * C50510);
    const double C3456 = C117 * C1090;
    const double C13472 = C5200 * C1090;
    const double C13802 = C5199 * C1090;
    const double C49935 = C49871 * C49932;
    const double C49949 = 3 * C49932;
    const double C49943 = C49932 * ce;
    const double C50477 = C50026 * C49932;
    const double C50489 = C49874 * C49932;
    const double C49957 = C49951 / C49744;
    const double C50514 = C49914 + C50513;
    const double C50586 = C49874 * C50582;
    const double C50547 = C50026 * C50546;
    const double C50566 = C49874 * C50546;
    const double C50015 = C49871 * C50013;
    const double C50066 = C50013 * ce;
    const double C50465 = C50013 * C50035;
    const double C50478 = C50026 * C50013;
    const double C50492 = C50013 * C50127;
    const double C50527 = C50006 + C50526;
    const double C50587 = C50585 * C50127;
    const double C50598 = C50006 + C50595;
    const double C50558 = C50026 * C50557;
    const double C50569 = C50557 * C50127;
    const double C50631 = C50554 + C50628;
    const double C50651 = C49874 * C50648;
    const double C50175 = C50026 * C50174;
    const double C50193 = -3 * C50174;
    const double C50209 = ae * C50174;
    const double C50207 = C49874 * C50174;
    const double C50199 = C50197 / C49744;
    const double C50221 = C50218 + C50122;
    const double C50284 = C50280 / C49882;
    const double C50285 = -2 * C50277;
    const double C50282 = ae * C50277;
    const double C50266 = C49874 * C50262;
    const double C50308 = -3 * C50262;
    const double C50304 = ae * C50262;
    const double C50320 = C50315 / C49744;
    const double C50318 = C50311 / C49744;
    const double C162 = C50942 * C146;
    const double C314 = C50942 * C305;
    const double C462 = C50942 * C453;
    const double C5207 = C50954 * C453;
    const double C31652 = C50954 * C453;
    const double C2782 = C50942 * C602;
    const double C3107 = C50942 * C835;
    const double C12853 = C50954 * C835;
    const double C34708 = C50954 * C835;
    const double C49908 = C49906 / C49744;
    const double C2918 =
        3 * ((-(C49904 * C50035) / C49744) / C49806 - C49893 / C49882) +
        C50026 * ((-2 * C50026 * C49904) / C49882 +
                  C50026 * ((-(C49925 * C50035) / C49744) / C49806 - C49915));
    const double C3100 =
        (((-2 * C50093) / C49744 -
          (C50026 * (C49998 * C50035 + C49992)) / C49744) *
         ae) /
            C49806 +
        C49874 * ((-2 * C50026 * C49904) / C49882 +
                  C50026 * ((-(C49925 * C50035) / C49744) / C49806 - C49915));
    const double C3574 =
        2 * ((-(C49874 * C50121) / C49744) / C49806 - (ae * C50093) / C49882) -
        (ae * (C50122 * std::pow(C49874, 2) + C50093)) / C49882 +
        C49874 *
            ((-(ae * C49874 * C50122) / C49744) / C49806 - C50121 / C49882 +
             C49874 * ((-(C49874 * C50026 * C49925) / C49744) / C49806 -
                       (ae * C50122) / C49882));
    const double C50145 = C50142 / C49744;
    const double C2935 = C50942 * C712;
    const double C3113 = C50942 * C842;
    const double C12861 = C50954 * C842;
    const double C35109 = C50954 * C842;
    const double C3457 = C50942 * C1095;
    const double C13473 = C50954 * C1095;
    const double C18487 = C15505 * C1095;
    const double C35472 = C50954 * C1095;
    const double C49931 = C49928 / C49744;
    const double C50156 = C50155 / C49744;
    const double C50183 = -2 * C50181;
    const double C50216 = C49874 * C50181;
    const double C50278 = C50181 / C49882;
    const double C50259 = C50255 / C49744;
    const double C49964 = C49961 / C49744;
    const double C50184 = C50182 / C49744;
    const double C50283 = C49874 * C50279;
    const double C50312 = C50306 / C49744;
    const double C51042 = C50775 / C49835;
    const double C51041 = C50775 * C50770;
    const double C51038 = C50775 / C49806;
    const double C50782 = C50779 * C50770;
    const double C113 = C50779 / C51044;
    const double C22847 = C50779 / C49814;
    const double C2300 = (C50774 * std::pow(C50770, 2)) / C49831 + C51040;
    const double C51074 = C51039 / C49806;
    const double C2301 = (-2 * C50778 * C51039) / C49806;
    const double C51051 = C50828 / C49753;
    const double C51050 = C50828 * C50827;
    const double C51046 = C50828 / C49744;
    const double C50834 = C50831 * C50827;
    const double C695 = C50831 / C51037;
    const double C1390 = C50831 / C49749;
    const double C51077 = C51049 / C49744;
    const double C583 = (-2 * C50758 * C51049) / C49744;
    const double C582 = (C50817 * std::pow(C50827, 2)) / C49748 + C51048;
    const double C51056 = C50852 / C49753;
    const double C51055 = C50852 * C50851;
    const double C51047 = C50852 / C49744;
    const double C50858 = C50855 * C50851;
    const double C1165 = C50855 / C51037;
    const double C1875 = C50855 / C49749;
    const double C51080 = C51054 / C49744;
    const double C942 = (-2 * C50758 * C51054) / C49744;
    const double C941 = (C50843 * std::pow(C50851, 2)) / C49748 + C51053;
    const double C51064 = C50927 / C49835;
    const double C51063 = C50927 * C50926;
    const double C51059 = C50927 / C49806;
    const double C50933 = C50930 * C50926;
    const double C10815 = C50930 / C51044;
    const double C25482 = C50930 / C49814;
    const double C51083 = C51062 / C49806;
    const double C8044 = (-2 * C50778 * C51062) / C49806;
    const double C8043 = (C50916 * std::pow(C50926, 2)) / C49831 + C51061;
    const double C49763 = C49752 - C49760;
    const double C49762 = C49742 * C49758;
    const double C285 =
        ((-C49758 / C49744) / C49749 - (0 * de) / C49744) / C49749 -
        (0 * de) / C49744;
    const double C696 = -C49758 / C49744;
    const double C1392 = (-C49758 / C49744) / C49749 - (0 * de) / C49744;
    const double C51072 = C51034 / C49748;
    const double C51036 = C50762 / C49744;
    const double C1386 = -C51071;
    const double C49833 = C49805 * C49819;
    const double C15507 =
        ((-C49815 / C49806) / C49814 -
         ((C50942 - (C49805 * C49819) / C49806) * be) / C49806) /
            C49814 -
        ((C49805 * ((-C49819 / C49806) / C49814 - (0 * be) / C49806) + C50954) *
         be) /
            C49806;
    const double C15508 =
        ((-C49819 / C49806) / C49814 - (0 * be) / C49806) / C49814 -
        (0 * be) / C49806;
    const double C31645 = (-C49819 / C49806) / C49814 - (0 * be) / C49806;
    const double C49844 = C49838 - C49839;
    const double C172 = C153 + C154;
    const double C171 = C151 + C152;
    const double C2473 = C2454 + C2455;
    const double C2472 = C2452 + C2453;
    const double C51087 = C51068 / C49831;
    const double C5225 = C51060 * C146;
    const double C5221 = C51060 * C135;
    const double C5215 = C51060 * C145;
    const double C5211 = C51060 * C133;
    const double C5209 = C51060 * C144;
    const double C5205 = C51060 * C131;
    const double C5411 = C51060 * C296;
    const double C5405 = C51060 * C305;
    const double C5401 = C51060 * C292;
    const double C5595 = C51060 * C444;
    const double C5589 = C51060 * C453;
    const double C5585 = C51060 * C440;
    const double C5771 = C51060 * C594;
    const double C12859 = C51060 * C602;
    const double C12855 = C51060 * C592;
    const double C12851 = C51060 * C304;
    const double C12847 = C51060 * C294;
    const double C13177 = C51060 * C708;
    const double C13173 = C51060 * C712;
    const double C13301 = C51060 * C2915;
    const double C13479 = C51060 * C819;
    const double C13475 = C51060 * C835;
    const double C13471 = C51060 * C834;
    const double C13467 = C51060 * C842;
    const double C13803 = C51060 * C1095;
    const double C51070 = C50957 / C49806;
    const double C47250 = C38090 * C1095;
    const double C31642 = -C51086;
    const double C15525 = C15504 * C444;
    const double C15519 = C15504 * C453;
    const double C15513 = C15504 * C440;
    const double C18485 = C15504 * C835;
    const double C18479 = C15504 * C819;
    const double C18795 = C15504 * C834;
    const double C18789 = C15504 * C842;
    const double C19069 = C15504 * C1095;
    const double C15545 = C15503 * C146;
    const double C15539 = C15503 * C135;
    const double C15529 = C15503 * C145;
    const double C15523 = C15503 * C133;
    const double C15521 = C15503 * C144;
    const double C15515 = C15503 * C131;
    const double C15727 = C15503 * C296;
    const double C15717 = C15503 * C305;
    const double C15711 = C15503 * C292;
    const double C15909 = C15503 * C444;
    const double C15899 = C15503 * C453;
    const double C15893 = C15503 * C440;
    const double C16079 = C15503 * C594;
    const double C18483 = C15503 * C304;
    const double C18477 = C15503 * C294;
    const double C18797 = C15503 * C592;
    const double C18791 = C15503 * C602;
    const double C18909 = C15503 * C712;
    const double C18903 = C15503 * C708;
    const double C19085 = C15503 * C842;
    const double C19079 = C15503 * C834;
    const double C19077 = C15503 * C819;
    const double C19071 = C15503 * C835;
    const double C19401 = C15503 * C1095;
    const double C173 = C155 + C156;
    const double C327 = C311 + C312;
    const double C475 = C459 + C460;
    const double C5234 = C5202 + C5203;
    const double C2803 = C2783 + C2784;
    const double C3123 = C3108 + C3109;
    const double C12863 = C12848 + C12849;
    const double C136 =
        (-2 * (C49871 * C50041 + C50343 * ce)) / C49744 -
        (C49871 * (C49871 * C50045 + C50041 + C49871 * C49988 * ce)) / C49744 -
        ((C50343 + C49988 * C49900) * ce) / C49744;
    const double C297 =
        -(C50026 * (C49871 * C50045 + C50041 + C50348 * ce)) / C49744;
    const double C445 =
        -(C49874 * (C49871 * C50045 + C50041 + C50348 * ce)) / C49744;
    const double C595 =
        -(C50045 * C50035 + C49871 * C50041 + C50343 * ce) / C49744;
    const double C822 = -(C49874 * C50026 * C50045) / C49744;
    const double C952 =
        -(C50045 * C50127 + C49871 * C50041 + C50343 * ce) / C49744;
    const double C1529 = C50942 * C821;
    const double C5403 = C50954 * C821;
    const double C6951 = C51060 * C821;
    const double C15713 = C15504 * C821;
    const double C17247 = C15503 * C821;
    const double C31848 = C50954 * C821;
    const double C966 = C50942 * C951;
    const double C5587 = C50954 * C951;
    const double C6185 = C51060 * C951;
    const double C15511 = C15505 * C951;
    const double C15895 = C15504 * C951;
    const double C16487 = C15503 * C951;
    const double C32032 = C50954 * C951;
    const double C38096 = C38090 * C951;
    const double C608 = C117 * C588;
    const double C5770 = C5199 * C588;
    const double C2794 = C117 * C699;
    const double C13166 = C5199 * C699;
    const double C1528 = C117 * C812;
    const double C5402 = C5200 * C812;
    const double C6950 = C5199 * C812;
    const double C3114 = C117 * C817;
    const double C5768 = C5200 * C817;
    const double C14422 = C5199 * C817;
    const double C965 = C117 * C945;
    const double C5586 = C5200 * C945;
    const double C6184 = C5199 * C945;
    const double C6182 = C5200 * C1168;
    const double C3455 = C50942 * C1091;
    const double C13477 = C50954 * C1091;
    const double C13799 = C51060 * C1091;
    const double C18481 = C15505 * C1091;
    const double C19075 = C15504 * C1091;
    const double C19395 = C15503 * C1091;
    const double C35476 = C50954 * C1091;
    const double C47244 = C38090 * C1091;
    const double C8803 = C50942 * C3097;
    const double C13175 = C50954 * C3097;
    const double C13481 = C51060 * C3097;
    const double C18905 = C15504 * C3097;
    const double C35268 = C50954 * C3097;
    const double C13801 = C50954 * C3571;
    const double C19073 = C15505 * C3571;
    const double C19397 = C15504 * C3571;
    const double C35910 = C50954 * C3571;
    const double C47836 = C38090 * C3571;
    const double C3454 = C117 * C1083;
    const double C13476 = C5200 * C1083;
    const double C13798 = C5199 * C1083;
    const double C13800 = C5200 * C3565;
    const double C6457 =
        (3 * (C49886 + C49874 * C50509 + C50507 * ae) +
         C49874 * (2 * C50509 +
                   C49874 * (C49894 + C49874 * (C49874 * C49905 + C49991 * ae) +
                             C49874 * C49991 * ae) +
                   C50510 * ae) +
         (2 * C50507 + C49874 * C50510) * ae) /
        C49806;
    const double C175 = C159 + C160;
    const double C329 = C315 + C316;
    const double C477 = C463 + C464;
    const double C5239 = C5212 + C5213;
    const double C2940 = C2932 + C2933;
    const double C3124 = C3110 + C3111;
    const double C12867 = C12856 + C12857;
    const double C174 = C157 + C158;
    const double C137 = (3 * (C49886 + C49894 * C49900) +
                         C49871 * (2 * C49896 + C49871 * C49909)) /
                        C49806;
    const double C298 = (C50026 * (2 * C49896 + C49871 * C49909)) / C49806;
    const double C446 = (C49874 * (2 * C49896 + C49871 * C49909) +
                         (2 * C50348 + C49871 * C50350) * ae) /
                        C49806;
    const double C596 = (C49886 + C49894 * C49900 + C49909 * C50035) / C49806;
    const double C704 =
        (2 * C50026 * C49909 + C50026 * (C49909 + C49932 * C50035)) / C49806;
    const double C823 =
        (C49874 * C50026 * C49909 + C50026 * C50350 * ae) / C49806;
    const double C953 =
        (C49886 + C49894 * C49900 + C49874 * (C49874 * C49909 + C50350 * ae) +
         C49874 * C50350 * ae) /
        C49806;
    const double C49924 = C49919 / C49744;
    const double C50501 = C50497 + C50498;
    const double C2795 = C50942 * C706;
    const double C13167 = C51060 * C706;
    const double C3115 = C50942 * C832;
    const double C5769 = C50954 * C832;
    const double C14423 = C51060 * C832;
    const double C16077 = C15504 * C832;
    const double C32214 = C50954 * C832;
    const double C6183 = C50954 * C1175;
    const double C15897 = C15505 * C1175;
    const double C16485 = C15504 * C1175;
    const double C32628 = C50954 * C1175;
    const double C38482 = C38090 * C1175;
    const double C8508 = C50942 * C2913;
    const double C8622 =
        (4 * (2 * C50485 + C50026 * C50518) +
         C50026 *
             (3 * C50518 + C50026 * (2 * C50026 * C49905 +
                                     C50026 * (C49905 + C49926 * C50035)))) /
        C49806;
    const double C8796 =
        (C49874 *
             (3 * C50518 + C50026 * (2 * C50026 * C49905 +
                                     C50026 * (C49905 + C49926 * C50035))) +
         (3 * C50474 +
          C50026 * (2 * C50486 + C50026 * (C49991 + C49997 * C50035))) *
             ae) /
        C49806;
    const double C50578 = C50574 + C50575;
    const double C50615 = C49874 * C50611;
    const double C50639 = 2 * C50611;
    const double C50054 = C50001 * ce;
    const double C50354 = C49871 * C50001;
    const double C50358 = 3 * C50001;
    const double C50434 = C50026 * C50001;
    const double C50491 = C49874 * C50001;
    const double C50490 = C50001 * ae;
    const double C830 = (C49874 * (C49909 + C49932 * C50035) +
                         (C50350 + C50001 * C50035) * ae) /
                        C49806;
    const double C1173 =
        (2 * (C49874 * C49909 + C50350 * ae) +
         C49874 * (C49909 + C49874 * (C49874 * C49932 + C50001 * ae) +
                   C49874 * C50001 * ae) +
         (C50350 + C50001 * C50127) * ae) /
        C49806;
    const double C698 =
        2 * C50026 * C50350 + C50026 * (C50350 + C50001 * C50035);
    const double C816 = C49874 * (C50350 + C50001 * C50035);
    const double C1167 =
        2 * C49874 * C50350 + C49874 * (C50350 + C50001 * C50127);
    const double C50470 = C49996 + C50469;
    const double C50525 = 2 * C50482;
    const double C50584 = C49874 * C50482;
    const double C50583 = C50482 * ae;
    const double C3569 =
        (2 * (C49874 * C50481 + C50437 * ae) +
         C49874 * (C50481 + C49874 * (C49874 * C50026 * C49944 + C50482 * ae) +
                   C49874 * C50482 * ae) +
         (C50437 + C50482 * C50127) * ae) /
        C49806;
    const double C3564 =
        2 * C49874 * C50437 + C49874 * (C50437 + C50482 * C50127);
    const double C50502 = C49996 + C50500;
    const double C50599 = 2 * C50594;
    const double C50597 = C50594 * ae;
    const double C50596 = C50592 + C50593;
    const double C50016 = C49871 * C50014;
    const double C50062 = -2 * C50014;
    const double C50109 = C50014 * C50035;
    const double C50119 = C50026 * C50014;
    const double C50136 = C50014 * C50127;
    const double C50238 = ae * C50014;
    const double C50236 = C49874 * C50014;
    const double C50535 = C50026 * C50534;
    const double C50553 = 3 * C50534;
    const double C50568 = C49874 * C50534;
    const double C50567 = C50534 * ae;
    const double C9239 =
        (2 * (C49874 * C50518 + C50474 * ae) +
         C49874 *
             (C50518 +
              C49874 * (C49874 * (C49905 + C49926 * C50035) + C50534 * ae) +
              C49874 * C50534 * ae) +
         (C50474 + C50534 * C50127) * ae) /
        C49806;
    const double C9235 =
        2 * C49874 * C50474 + C49874 * (C50474 + C50534 * C50127);
    const double C50579 = C50486 + C50577;
    const double C50629 = 2 * C50624;
    const double C50627 = C50624 * ae;
    const double C50630 = C50626 + C50623;
    const double C50616 = C49874 * C50613;
    const double C50645 = 3 * C50613;
    const double C50643 = C50613 * ae;
    const double C50650 = C49874 * C50646;
    const double C50047 = C49871 * C50002;
    const double C50052 = -2 * C50002;
    const double C50091 = C50026 * C50002;
    const double C50135 = ae * C50002;
    const double C50133 = C49874 * C50002;
    const double C705 = (-2 * C50026 * C50045) / C49744 -
                        (C50026 * (C50002 * C50035 + C50045)) / C49744;
    const double C831 = -(C49874 * (C50002 * C50035 + C50045)) / C49744;
    const double C1174 = (-2 * C49874 * C50045) / C49744 -
                         (C49874 * (C50002 * C50127 + C50045)) / C49744;
    const double C3452 =
        (-(C49904 * C50035) / C49744) / C49806 - C49893 / C49882 -
        (ae * C49874 * C50113) / C49882 +
        C49874 * (C49874 * ((-(C49925 * C50035) / C49744) / C49806 - C49915) -
                  (ae * C50113) / C49882);
    const double C2914 =
        (-3 * (C49992 * C50035 + C50041)) / C49744 +
        C50026 * ((-2 * C50093) / C49744 - (C50026 * C50113) / C49744);
    const double C3096 =
        C49874 * ((-2 * C50093) / C49744 - (C50026 * C50113) / C49744);
    const double C3448 = -(C50113 * C50127 + C49992 * C50035 + C50041) / C49744;
    const double C9238 = (-2 * C49874 * C50113) / C49744 -
                         (C49874 * (C50174 * C50127 + C50113)) / C49744;
    const double C50173 = C50171 / C49744;
    const double C50220 = C50217 / C49882;
    const double C13804 = C5200 * C3570;
    const double C6456 =
        (-3 * (C49992 * C50127 + C50041)) / C49744 +
        C49874 * ((-2 * C50141) / C49744 - (C49874 * C50147) / C49744);
    const double C50265 = C50261 / C49744;
    const double C50263 = C50258 / C49744;
    const double C49968 = C49871 * C49965;
    const double C2911 =
        (3 * (C49909 + C49932 * C50035) +
         C50026 * (2 * C50026 * C49932 + C50026 * (C49932 + C49965 * C50035))) /
        C49806;
    const double C50076 = C49871 * C50075;
    const double C50164 = C50075 * C50035;
    const double C50229 = C50026 * C50075;
    const double C50239 = C50075 * C50127;
    const double C50200 = C50026 * C50198;
    const double C50210 = C50198 * C50127;
    const double C50290 = C50286 + C50194;
    const double C50321 = C49874 * C50316;
    const double C3285 = C50942 * C1089;
    const double C6949 = C50954 * C1089;
    const double C15715 = C15505 * C1089;
    const double C17245 = C15504 * C1089;
    const double C29270 = C51060 * C1089;
    const double C33382 = C50954 * C1089;
    const double C38300 = C38090 * C1089;
    const double C8807 = C50942 * C3095;
    const double C13169 = C50954 * C3095;
    const double C35120 = C50954 * C3095;
    const double C3284 = C117 * C1082;
    const double C6948 = C5200 * C1082;
    const double C29269 = C5199 * C1082;
    const double C163 = C117 * C126;
    const double C5228 = C5199 * C126;
    const double C319 = C117 * C289;
    const double C5418 = C5199 * C289;
    const double C467 = C117 * C437;
    const double C5218 = C5200 * C437;
    const double C5602 = C5199 * C437;
    const double C612 = C117 * C589;
    const double C5778 = C5199 * C589;
    const double C1532 = C117 * C813;
    const double C5408 = C5200 * C813;
    const double C6958 = C5199 * C813;
    const double C969 = C117 * C946;
    const double C5592 = C5200 * C946;
    const double C6192 = C5199 * C946;
    const double C9128 = C50942 * C3449;
    const double C13469 = C50954 * C3449;
    const double C13807 = C51060 * C3449;
    const double C18793 = C15505 * C3449;
    const double C19081 = C15504 * C3449;
    const double C35482 = C50954 * C3449;
    const double C47556 = C38090 * C3449;
    const double C8630 = C117 * C2909;
    const double C13300 = C5199 * C2909;
    const double C8802 = C117 * C3091;
    const double C13174 = C5200 * C3091;
    const double C13480 = C5199 * C3091;
    const double C9127 = C117 * C3443;
    const double C13468 = C5200 * C3443;
    const double C13806 = C5199 * C3443;
    const double C49937 = C49922 + C49935;
    const double C49950 = C49943 / C49882;
    const double C49960 = -C49957;
    const double C8620 =
        (4 * (2 * C50481 + C50026 * C50514) +
         C50026 * (3 * C50514 +
                   C50026 * (2 * C50026 * C49944 +
                             C50026 * (C49944 + C49871 * C49959 * C50035)))) /
        C49806;
    const double C50548 = C50545 + C50547;
    const double C50017 = C50011 + C50015;
    const double C50072 = C50066 / C49744;
    const double C50466 = C50001 + C50465;
    const double C50494 = C50001 + C50492;
    const double C50528 = C50026 * C50527;
    const double C50589 = C50482 + C50587;
    const double C50601 = C49874 * C50598;
    const double C50559 = C50556 + C50558;
    const double C50571 = C50534 + C50569;
    const double C50633 = C49874 * C50631;
    const double C50653 = C50649 + C50651;
    const double C50176 = C50175 / C49744;
    const double C50196 = C50193 / C49744;
    const double C50211 = C50209 / C49882;
    const double C13923 =
        (-3 * (C50122 * C50127 + C50093)) / C49744 +
        C49874 * ((-2 * C50215) / C49744 - (C49874 * C50221) / C49744);
    const double C50289 = C50285 / C49744;
    const double C50287 = C50282 / C49744;
    const double C50269 = C50266 / C49744;
    const double C50314 = C50308 / C49744;
    const double C50310 = C50304 / C49882;
    const double C50322 = -C50318;
    const double C328 = C313 + C314;
    const double C476 = C461 + C462;
    const double C5236 = C5206 + C5207;
    const double C2802 = C2781 + C2782;
    const double C3122 = C3106 + C3107;
    const double C12865 = C12852 + C12853;
    const double C49910 = -C49908;
    const double C8633 = C50942 * C2918;
    const double C13305 = C51060 * C2918;
    const double C8805 = C50942 * C3100;
    const double C13171 = C50954 * C3100;
    const double C13485 = C51060 * C3100;
    const double C18911 = C15504 * C3100;
    const double C35272 = C50954 * C3100;
    const double C13805 = C50954 * C3574;
    const double C19067 = C15505 * C3574;
    const double C19403 = C15504 * C3574;
    const double C35914 = C50954 * C3574;
    const double C47830 = C38090 * C3574;
    const double C50148 = -C50145;
    const double C2941 = C2934 + C2935;
    const double C3125 = C3112 + C3113;
    const double C12869 = C12860 + C12861;
    const double C3463 = C3456 + C3457;
    const double C13492 = C13472 + C13473;
    const double C49934 = -C49931;
    const double C50157 = -C50156;
    const double C50185 = C50183 / C49882;
    const double C50219 = C50216 / C49744;
    const double C50264 = -C50259;
    const double C49967 = -C49964;
    const double C50186 = -C50184;
    const double C50288 = C50283 / C49744;
    const double C50319 = -C50312;
    const double C51075 = C51041 / C49831;
    const double C51043 = C50782 / C49806;
    const double C25478 = -C51074;
    const double C51078 = C51050 / C49748;
    const double C51052 = C50834 / C49744;
    const double C1283 = -C51077;
    const double C51081 = C51055 / C49748;
    const double C51057 = C50858 / C49744;
    const double C1643 = -C51080;
    const double C51084 = C51063 / C49831;
    const double C51065 = C50933 / C49806;
    const double C22848 = -C51083;
    const double C121 =
        (C49763 / C49749 - (0 * de) / C49744) / C49749 - (0 * de) / C49744;
    const double C1287 = C49763 / C49749 - (0 * de) / C49744;
    const double C49765 = C49762 / C49744;
    const double C51089 = C51033 - C51072;
    const double C51073 = C51035 - C51036;
    const double C49837 = C49833 / C49806;
    const double C15536 = C15507 * C437;
    const double C15524 = C15507 * C436;
    const double C15518 = C15507 * C443;
    const double C15512 = C15507 * C434;
    const double C15724 = C15507 * C813;
    const double C15712 = C15507 * C812;
    const double C15906 = C15507 * C946;
    const double C15894 = C15507 * C945;
    const double C16076 = C15507 * C817;
    const double C16484 = C15507 * C1168;
    const double C17244 = C15507 * C1082;
    const double C18484 = C15507 * C820;
    const double C18478 = C15507 * C811;
    const double C18794 = C15507 * C818;
    const double C18788 = C15507 * C833;
    const double C18904 = C15507 * C3091;
    const double C19080 = C15507 * C3443;
    const double C19074 = C15507 * C1083;
    const double C19068 = C15507 * C1090;
    const double C19402 = C15507 * C3570;
    const double C19396 = C15507 * C3565;
    const double C15526 = C15508 * C946;
    const double C15510 = C15508 * C945;
    const double C15714 = C15508 * C1082;
    const double C15896 = C15508 * C1168;
    const double C18486 = C15508 * C1090;
    const double C18480 = C15508 * C1083;
    const double C18792 = C15508 * C3443;
    const double C19072 = C15508 * C3565;
    const double C19066 = C15508 * C3570;
    const double C31663 = C31645 * C437;
    const double C31657 = C31645 * C436;
    const double C31651 = C31645 * C443;
    const double C31647 = C31645 * C434;
    const double C31853 = C31645 * C813;
    const double C31847 = C31645 * C812;
    const double C32037 = C31645 * C946;
    const double C32031 = C31645 * C945;
    const double C32213 = C31645 * C817;
    const double C32627 = C31645 * C1168;
    const double C33381 = C31645 * C1082;
    const double C34707 = C31645 * C820;
    const double C34703 = C31645 * C811;
    const double C35112 = C31645 * C818;
    const double C35108 = C31645 * C833;
    const double C35267 = C31645 * C3091;
    const double C35481 = C31645 * C3443;
    const double C35475 = C31645 * C1083;
    const double C35471 = C31645 * C1090;
    const double C35913 = C31645 * C3570;
    const double C35909 = C31645 * C3565;
    const double C21044 =
        (C49844 / C49814 - (0 * be) / C49806) / C49814 - (0 * be) / C49806;
    const double C38093 = C49844 / C49814 - (0 * be) / C49806;
    const double C2475 = C2473 * C278;
    const double C2769 = C2473 * C51031;
    const double C2921 = C2473 * C50754;
    const double C3887 = C2473 * C1386;
    const double C2920 = C2472 * C696;
    const double C51094 = C51066 - C51087;
    const double C5243 = C5220 + C5221;
    const double C5240 = C5214 + C5215;
    const double C5238 = C5210 + C5211;
    const double C5237 = C5208 + C5209;
    const double C5235 = C5204 + C5205;
    const double C5429 = C5410 + C5411;
    const double C5426 = C5404 + C5405;
    const double C5424 = C5400 + C5401;
    const double C5613 = C5594 + C5595;
    const double C5610 = C5588 + C5589;
    const double C5608 = C5584 + C5585;
    const double C12868 = C12858 + C12859;
    const double C12866 = C12854 + C12855;
    const double C12864 = C12850 + C12851;
    const double C12862 = C12846 + C12847;
    const double C13191 = C13176 + C13177;
    const double C13189 = C13172 + C13173;
    const double C13495 = C13478 + C13479;
    const double C13493 = C13474 + C13475;
    const double C13491 = C13470 + C13471;
    const double C13489 = C13466 + C13467;
    const double C13816 = C13802 + C13803;
    const double C51088 = C51069 - C51070;
    const double C31670 = C31642 * C146;
    const double C31666 = C31642 * C135;
    const double C31660 = C31642 * C145;
    const double C31656 = C31642 * C133;
    const double C31654 = C31642 * C144;
    const double C31650 = C31642 * C131;
    const double C31856 = C31642 * C296;
    const double C31850 = C31642 * C305;
    const double C31846 = C31642 * C292;
    const double C32040 = C31642 * C444;
    const double C32034 = C31642 * C453;
    const double C32030 = C31642 * C440;
    const double C32216 = C31642 * C594;
    const double C32630 = C31642 * C951;
    const double C33384 = C31642 * C821;
    const double C34706 = C31642 * C304;
    const double C34702 = C31642 * C294;
    const double C35122 = C31642 * C706;
    const double C35115 = C31642 * C592;
    const double C35111 = C31642 * C602;
    const double C35270 = C31642 * C712;
    const double C35266 = C31642 * C708;
    const double C35488 = C31642 * C832;
    const double C35484 = C31642 * C842;
    const double C35480 = C31642 * C834;
    const double C35478 = C31642 * C819;
    const double C35474 = C31642 * C835;
    const double C35704 = C31642 * C1089;
    const double C35912 = C31642 * C1095;
    const double C35908 = C31642 * C1091;
    const double C44950 = C31642 * C2918;
    const double C44946 = C31642 * C2915;
    const double C45116 = C31642 * C3100;
    const double C45112 = C31642 * C3097;
    const double C45420 = C31642 * C3449;
    const double C15506 =
        ((-(0 * be) / C49806) / C49814 -
         ((0 - (C49805 * C49815) / C49806) * be) / C49806) /
            C49814 -
        ((C49805 * ((-C49815 / C49806) / C49814 -
                    ((C50942 - (C49805 * C49819) / C49806) * be) / C49806) +
          C31642) *
         be) /
            C49806 +
        (-C49819 / C49806) / C49814 - (0 * be) / C49806;
    const double C2770 = C327 * C49763;
    const double C2922 = C327 * C696;
    const double C3888 = C327 * C1392;
    const double C2931 = C2803 * C696;
    const double C3131 = C3123 * C696;
    const double C161 = C117 * C136;
    const double C5224 = C5199 * C136;
    const double C317 = C117 * C297;
    const double C5414 = C5199 * C297;
    const double C465 = C117 * C445;
    const double C5216 = C5200 * C445;
    const double C5598 = C5199 * C445;
    const double C15530 = C15507 * C445;
    const double C31661 = C31645 * C445;
    const double C610 = C117 * C595;
    const double C5774 = C5199 * C595;
    const double C1530 = C117 * C822;
    const double C5406 = C5200 * C822;
    const double C6954 = C5199 * C822;
    const double C15718 = C15507 * C822;
    const double C31851 = C31645 * C822;
    const double C967 = C117 * C952;
    const double C5590 = C5200 * C952;
    const double C6188 = C5199 * C952;
    const double C15516 = C15508 * C952;
    const double C15900 = C15507 * C952;
    const double C32035 = C31645 * C952;
    const double C620 = C608 + C609;
    const double C5785 = C5770 + C5771;
    const double C1540 = C1528 + C1529;
    const double C5425 = C5402 + C5403;
    const double C6965 = C6950 + C6951;
    const double C977 = C965 + C966;
    const double C5609 = C5586 + C5587;
    const double C6199 = C6184 + C6185;
    const double C3462 = C3454 + C3455;
    const double C13494 = C13476 + C13477;
    const double C13814 = C13798 + C13799;
    const double C13815 = C13800 + C13801;
    const double C2458 = C329 * C285;
    const double C2774 = C329 * C49763;
    const double C2924 = C329 * C696;
    const double C3892 = C329 * C1392;
    const double C2942 = C2940 * C696;
    const double C3132 = C3124 * C696;
    const double C164 = C50942 * C137;
    const double C5229 = C51060 * C137;
    const double C31674 = C31642 * C137;
    const double C320 = C50942 * C298;
    const double C5419 = C51060 * C298;
    const double C31864 = C31642 * C298;
    const double C468 = C50942 * C446;
    const double C5219 = C50954 * C446;
    const double C5603 = C51060 * C446;
    const double C15537 = C15504 * C446;
    const double C31664 = C50954 * C446;
    const double C32048 = C31642 * C446;
    const double C613 = C50942 * C596;
    const double C5779 = C51060 * C596;
    const double C32224 = C31642 * C596;
    const double C2799 = C50942 * C704;
    const double C1533 = C50942 * C823;
    const double C5409 = C50954 * C823;
    const double C6959 = C51060 * C823;
    const double C15725 = C15504 * C823;
    const double C31854 = C50954 * C823;
    const double C33392 = C31642 * C823;
    const double C970 = C50942 * C953;
    const double C5593 = C50954 * C953;
    const double C6193 = C51060 * C953;
    const double C15527 = C15505 * C953;
    const double C15907 = C15504 * C953;
    const double C32038 = C50954 * C953;
    const double C32638 = C31642 * C953;
    const double C38112 = C38090 * C953;
    const double C49927 = -C49924;
    const double C2804 = C2794 + C2795;
    const double C13186 = C13166 + C13167;
    const double C3126 = C3114 + C3115;
    const double C5784 = C5768 + C5769;
    const double C14430 = C14422 + C14423;
    const double C6198 = C6182 + C6183;
    const double C11201 = C50942 * C8622;
    const double C11315 = C50942 * C8796;
    const double C13303 = C50954 * C8796;
    const double C44948 = C50954 * C8796;
    const double C50617 = C49894 + C50615;
    const double C50057 = C50054 / C49744;
    const double C50355 = C50353 + C50354;
    const double C1087 =
        (C50026 * C49909 + C49874 * (C49874 * C50026 * C49932 + C50434 * ae) +
         C49874 * C50434 * ae) /
        C49806;
    const double C3093 =
        (C49874 * (2 * C50026 * C49932 + C50026 * (C49932 + C49965 * C50035)) +
         (2 * C50434 + C50026 * (C50001 + C50013 * C50035)) * ae) /
        C49806;
    const double C3567 =
        (2 * (C49874 * C50477 + C50434 * ae) +
         C49874 * (C50477 + C49874 * (C49874 * C50026 * C49965 + C50478 * ae) +
                   C49874 * C50478 * ae) +
         (C50434 + C50478 * C50127) * ae) /
        C49806;
    const double C1081 = C50026 * C50350 + C50434 * C50127;
    const double C3563 =
        2 * C49874 * C50434 + C49874 * (C50434 + C50478 * C50127);
    const double C50493 = C50489 + C50490;
    const double C3119 = C50942 * C830;
    const double C5777 = C50954 * C830;
    const double C32222 = C50954 * C830;
    const double C6191 = C50954 * C1173;
    const double C15905 = C15505 * C1173;
    const double C32636 = C50954 * C1173;
    const double C38490 = C38090 * C1173;
    const double C2798 = C117 * C698;
    const double C3118 = C117 * C816;
    const double C5776 = C5200 * C816;
    const double C32221 = C31645 * C816;
    const double C6190 = C5200 * C1167;
    const double C15904 = C15508 * C1167;
    const double C32635 = C31645 * C1167;
    const double C3447 =
        (C49896 + C49914 * C50035 +
         C49874 * (C49874 * (C49914 + C49944 * C50035) + C50470 * ae) +
         C49874 * C50470 * ae) /
        C49806;
    const double C8794 =
        (C49874 * (3 * C50514 +
                   C50026 * (2 * C50026 * C49944 +
                             C50026 * (C49944 + C49871 * C49959 * C50035))) +
         (3 * C50470 +
          C50026 * (2 * C50482 + C50026 * (C50006 + C50065 * C50035))) *
             ae) /
        C49806;
    const double C9237 =
        (2 * (C49874 * C50514 + C50470 * ae) +
         C49874 * (C50514 +
                   C49874 * (C49874 * (C49944 + C49871 * C49959 * C50035) +
                             C50527 * ae) +
                   C49874 * C50527 * ae) +
         (C50470 + C50527 * C50127) * ae) /
        C49806;
    const double C2908 = 3 * (C50348 + C49996 * C50035) +
                         C50026 * (2 * C50437 + C50026 * C50470);
    const double C3090 = C49874 * (2 * C50437 + C50026 * C50470);
    const double C3442 = C50348 + C49996 * C50035 + C50470 * C50127;
    const double C9234 =
        2 * C49874 * C50470 + C49874 * (C50470 + C50527 * C50127);
    const double C50588 = C50586 + C50583;
    const double C17243 = C15505 * C3569;
    const double C29268 = C50954 * C3569;
    const double C35702 = C50954 * C3569;
    const double C39816 = C38090 * C3569;
    const double C17242 = C15508 * C3564;
    const double C29267 = C5200 * C3564;
    const double C35701 = C31645 * C3564;
    const double C6455 =
        (3 * (C49896 + C49874 * C50501 + C50499 * ae) +
         C49874 * (2 * C50501 +
                   C49874 * (C49914 + C49874 * (C49874 * C49944 + C50006 * ae) +
                             C49874 * C50006 * ae) +
                   C50502 * ae) +
         (2 * C50499 + C49874 * C50502) * ae) /
        C49806;
    const double C6450 = 3 * (C50348 + C49996 * C50127) +
                         C49874 * (2 * C50499 + C49874 * C50502);
    const double C50600 = C49874 * C50596;
    const double C50018 = C50016 + C49998;
    const double C50069 = C50062 / C49744;
    const double C50110 = C50109 + C50002;
    const double C50163 = -2 * C50119;
    const double C50228 = ae * C50119;
    const double C50226 = C49874 * C50119;
    const double C50138 = C50136 + C50002;
    const double C50241 = C50238 / C49882;
    const double C50242 = -2 * C50236;
    const double C50240 = ae * C50236;
    const double C50536 = C50532 + C50535;
    const double C50570 = C50566 + C50567;
    const double C13809 = C50954 * C9239;
    const double C19083 = C15505 * C9239;
    const double C45422 = C50954 * C9239;
    const double C47846 = C38090 * C9239;
    const double C13808 = C5200 * C9235;
    const double C19082 = C15508 * C9235;
    const double C45421 = C31645 * C9235;
    const double C13924 =
        (3 * (C50485 + C49874 * C50578 + C50576 * ae) +
         C49874 * (2 * C50578 +
                   C49874 * (C50543 +
                             C49874 * (C49874 * C50026 * C49926 + C50554 * ae) +
                             C49874 * C50554 * ae) +
                   C50579 * ae) +
         (2 * C50576 + C49874 * C50579) * ae) /
        C49806;
    const double C13920 = 3 * (C50440 + C50486 * C50127) +
                          C49874 * (2 * C50576 + C49874 * C50579);
    const double C50632 = C49874 * C50630;
    const double C50618 = C50614 + C50616;
    const double C50652 = C49905 + C50650;
    const double C50049 = C50047 + C49992;
    const double C50055 = C50052 / C49744;
    const double C1088 = -(C50091 * C50127 + C50026 * C50045) / C49744;
    const double C3568 = (-2 * C49874 * C50091) / C49744 -
                         (C49874 * (C50119 * C50127 + C50091)) / C49744;
    const double C50137 = C50135 / C49882;
    const double C2796 = C117 * C705;
    const double C13178 = C5199 * C705;
    const double C3116 = C117 * C831;
    const double C5772 = C5200 * C831;
    const double C14426 = C5199 * C831;
    const double C16082 = C15507 * C831;
    const double C32217 = C31645 * C831;
    const double C6186 = C5200 * C1174;
    const double C15902 = C15508 * C1174;
    const double C16490 = C15507 * C1174;
    const double C32631 = C31645 * C1174;
    const double C9130 = C50942 * C3452;
    const double C13465 = C50954 * C3452;
    const double C13811 = C51060 * C3452;
    const double C18787 = C15505 * C3452;
    const double C19087 = C15504 * C3452;
    const double C35486 = C50954 * C3452;
    const double C45424 = C31642 * C3452;
    const double C47550 = C38090 * C3452;
    const double C8632 = C117 * C2914;
    const double C13304 = C5199 * C2914;
    const double C8804 = C117 * C3096;
    const double C13170 = C5200 * C3096;
    const double C13484 = C5199 * C3096;
    const double C18910 = C15507 * C3096;
    const double C35271 = C31645 * C3096;
    const double C9129 = C117 * C3448;
    const double C13464 = C5200 * C3448;
    const double C13810 = C5199 * C3448;
    const double C18786 = C15508 * C3448;
    const double C19086 = C15507 * C3448;
    const double C35485 = C31645 * C3448;
    const double C13812 = C5200 * C9238;
    const double C19088 = C15508 * C9238;
    const double C45425 = C31645 * C9238;
    const double C50267 = -C50263;
    const double C49970 = C49954 + C49968;
    const double C50077 = C50076 + C50008;
    const double C50166 = C50164 + C50014;
    const double C50232 = C50229 * C50127;
    const double C50243 = C50239 + C50014;
    const double C50201 = C50200 / C49744;
    const double C50212 = C50210 + C50174;
    const double C50293 = C49874 * C50290;
    const double C50324 = C50321 / C49744;
    const double C3292 = C3284 + C3285;
    const double C6964 = C6948 + C6949;
    const double C29276 = C29269 + C29270;
    const double C8640 = C8630 + C8631;
    const double C13311 = C13300 + C13301;
    const double C8812 = C8802 + C8803;
    const double C13190 = C13174 + C13175;
    const double C13496 = C13480 + C13481;
    const double C9133 = C9127 + C9128;
    const double C13490 = C13468 + C13469;
    const double C13818 = C13806 + C13807;
    const double C139 = (4 * (2 * C49896 + C49871 * C49909) +
                         C49871 * (3 * C49909 + C49871 * C49937)) /
                        C49806;
    const double C300 = (C50026 * (3 * C49909 + C49871 * C49937)) / C49806;
    const double C598 =
        (2 * C49896 + C49871 * C49909 + C49937 * C50035) / C49806;
    const double C49963 = C49960 / C49806;
    const double C11193 =
        (5 * (3 * C50518 + C50026 * C50548) +
         C50026 * (4 * C50548 +
                   C50026 * (3 * C50546 +
                             C50026 * (2 * C50026 * C49926 +
                                       C50026 * (C49926 + C49959 * C50035))))) /
        C49806;
    const double C50067 = C50017 * ce;
    const double C50359 = C49871 * C50017;
    const double C50431 = C50026 * C50017;
    const double C3445 =
        (C49909 + C49932 * C50035 +
         C49874 * (C49874 * (C49932 + C49965 * C50035) + C50466 * ae) +
         C49874 * C50466 * ae) /
        C49806;
    const double C2907 = 3 * (C50350 + C50001 * C50035) +
                         C50026 * (2 * C50434 + C50026 * C50466);
    const double C3089 = C49874 * (2 * C50434 + C50026 * C50466);
    const double C3441 = C50350 + C50001 * C50035 + C50466 * C50127;
    const double C6449 = 3 * (C50350 + C50001 * C50127) +
                         C49874 * (2 * C50491 + C49874 * C50494);
    const double C50529 = C50525 + C50528;
    const double C16645 = 3 * (C50437 + C50482 * C50127) +
                          C49874 * (2 * C50584 + C49874 * C50589);
    const double C50603 = C50599 + C50601;
    const double C50560 = C50026 * C50559;
    const double C13919 = 3 * (C50474 + C50534 * C50127) +
                          C49874 * (2 * C50568 + C49874 * C50571);
    const double C50635 = C50629 + C50633;
    const double C50655 = C49874 * C50653;
    const double C50177 = C50173 - C50176;
    const double C19404 = C15508 * C13923;
    const double C50291 = -C50287;
    const double C50272 = C50265 - C50269;
    const double C50325 = C50322 / C49806;
    const double C2461 = C328 * C278;
    const double C2457 = C328 * C279;
    const double C2773 = C328 * C51031;
    const double C2771 = C328 * C50759;
    const double C2923 = C328 * C50754;
    const double C3891 = C328 * C1386;
    const double C3889 = C328 * C50759;
    const double C2808 = C2802 * C51031;
    const double C2930 = C2802 * C50754;
    const double C3899 = C2802 * C1386;
    const double C8194 = C2802 * C278;
    const double C3130 = C3122 * C50754;
    const double C4105 = C3122 * C1386;
    const double C4797 = C3122 * C51031;
    const double C49911 = C49910 / C49806;
    const double C13817 = C13804 + C13805;
    const double C50149 = C50148 / C49806;
    const double C2943 = C2941 * C50754;
    const double C8500 = C2941 * C51031;
    const double C9550 = C2941 * C1386;
    const double C10916 = C2941 * C278;
    const double C3133 = C3125 * C50754;
    const double C9759 = C3125 * C1386;
    const double C10447 = C3125 * C51031;
    const double C3465 = C3463 * C50754;
    const double C49936 = C49934 / C49806;
    const double C50158 = C50157 / C49806;
    const double C50222 = -C50219;
    const double C50268 = C50264 / C49806;
    const double C49969 = C49967 / C49806;
    const double C50187 = C50186 / C49806;
    const double C50292 = -C50288;
    const double C50323 = C50319 / C49806;
    const double C51090 = C51040 - C51075;
    const double C51076 = C51042 - C51043;
    const double C51091 = C51048 - C51078;
    const double C51079 = C51051 - C51052;
    const double C51092 = C51053 - C51081;
    const double C51082 = C51056 - C51057;
    const double C51093 = C51061 - C51084;
    const double C51085 = C51064 - C51065;
    const double C3726 = C329 * C1287;
    const double C49767 = C50754 - C49765;
    const double C3729 = C328 * C51089;
    const double C3723 = C2473 * C51089;
    const double C9390 = C2802 * C51089;
    const double C11700 = C2941 * C51089;
    const double C106 = (C51031 - C51071) / C49749 - (C51089 * C50750) / C49744;
    const double C3725 = C328 * C51073;
    const double C107 =
        (2 * C50759 + C51089) / C49749 - (C51073 * C50750) / C49744;
    const double C108 = C51073 / C49749 - C50762 / C49753;
    const double C49842 = C50942 - C49837;
    const double C15553 = C15524 + C15525;
    const double C15550 = C15518 + C15519;
    const double C15547 = C15512 + C15513;
    const double C15735 = C15712 + C15713;
    const double C15917 = C15894 + C15895;
    const double C16087 = C16076 + C16077;
    const double C16495 = C16484 + C16485;
    const double C17255 = C17244 + C17245;
    const double C18492 = C18484 + C18485;
    const double C18489 = C18478 + C18479;
    const double C18802 = C18794 + C18795;
    const double C18799 = C18788 + C18789;
    const double C18915 = C18904 + C18905;
    const double C19097 = C19080 + C19081;
    const double C19094 = C19074 + C19075;
    const double C19091 = C19068 + C19069;
    const double C19410 = C19402 + C19403;
    const double C19407 = C19396 + C19397;
    const double C15546 = C15510 + C15511;
    const double C15736 = C15714 + C15715;
    const double C15918 = C15896 + C15897;
    const double C18493 = C18486 + C18487;
    const double C18490 = C18480 + C18481;
    const double C18801 = C18792 + C18793;
    const double C19093 = C19072 + C19073;
    const double C19090 = C19066 + C19067;
    const double C31684 = C31657 + C31658;
    const double C31681 = C31651 + C31652;
    const double C31679 = C31647 + C31648;
    const double C31870 = C31847 + C31848;
    const double C32054 = C32031 + C32032;
    const double C32229 = C32213 + C32214;
    const double C32643 = C32627 + C32628;
    const double C33397 = C33381 + C33382;
    const double C34718 = C34707 + C34708;
    const double C34716 = C34703 + C34704;
    const double C35129 = C35112 + C35113;
    const double C35127 = C35108 + C35109;
    const double C35274 = C35267 + C35268;
    const double C35500 = C35481 + C35482;
    const double C35497 = C35475 + C35476;
    const double C35495 = C35471 + C35472;
    const double C35918 = C35913 + C35914;
    const double C35916 = C35909 + C35910;
    const double C38111 = C38093 * C946;
    const double C38101 = C38093 * C952;
    const double C38095 = C38093 * C945;
    const double C38299 = C38093 * C1082;
    const double C38489 = C38093 * C1167;
    const double C38487 = C38093 * C1174;
    const double C38481 = C38093 * C1168;
    const double C39815 = C38093 * C3564;
    const double C47249 = C38093 * C1090;
    const double C47243 = C38093 * C1083;
    const double C47555 = C38093 * C3443;
    const double C47549 = C38093 * C3448;
    const double C47851 = C38093 * C9238;
    const double C47845 = C38093 * C9235;
    const double C47835 = C38093 * C3565;
    const double C47829 = C38093 * C3570;
    const double C48167 = C38093 * C13923;
    const double C38130 = C51094 * C146;
    const double C38124 = C51094 * C135;
    const double C38114 = C51094 * C145;
    const double C38108 = C51094 * C133;
    const double C38106 = C51094 * C144;
    const double C38100 = C51094 * C131;
    const double C38312 = C51094 * C296;
    const double C38302 = C51094 * C305;
    const double C38296 = C51094 * C292;
    const double C38494 = C51094 * C444;
    const double C38484 = C51094 * C453;
    const double C38478 = C51094 * C440;
    const double C38664 = C51094 * C594;
    const double C39072 = C51094 * C951;
    const double C39820 = C51094 * C821;
    const double C47246 = C51094 * C304;
    const double C47240 = C51094 * C294;
    const double C47560 = C51094 * C592;
    const double C47554 = C51094 * C602;
    const double C47672 = C51094 * C712;
    const double C47666 = C51094 * C708;
    const double C47848 = C51094 * C842;
    const double C47842 = C51094 * C834;
    const double C47840 = C51094 * C819;
    const double C47834 = C51094 * C835;
    const double C48164 = C51094 * C1095;
    const double C48158 = C51094 * C1091;
    const double C21037 =
        (C51060 - C51086) / C49814 - (C51094 * C50950) / C49806;
    const double C5250 = C5238 + C5239;
    const double C13163 = C12868 + C12869;
    const double C13162 = C12866 + C12867;
    const double C38122 = C51088 * C446;
    const double C38110 = C51088 * C444;
    const double C38104 = C51088 * C453;
    const double C38098 = C51088 * C440;
    const double C38310 = C51088 * C823;
    const double C38298 = C51088 * C821;
    const double C38492 = C51088 * C953;
    const double C38480 = C51088 * C951;
    const double C38662 = C51088 * C832;
    const double C39070 = C51088 * C1175;
    const double C39818 = C51088 * C1089;
    const double C47248 = C51088 * C835;
    const double C47242 = C51088 * C819;
    const double C47558 = C51088 * C834;
    const double C47552 = C51088 * C842;
    const double C47674 = C51088 * C3100;
    const double C47668 = C51088 * C3097;
    const double C47850 = C51088 * C3452;
    const double C47844 = C51088 * C3449;
    const double C47838 = C51088 * C1091;
    const double C47832 = C51088 * C1095;
    const double C48166 = C51088 * C3574;
    const double C48160 = C51088 * C3571;
    const double C21038 =
        (2 * C50954 + C51094) / C49814 - (C51088 * C50950) / C49806;
    const double C21039 = C51088 / C49814 - C50957 / C49835;
    const double C15544 = C15506 * C136;
    const double C15538 = C15506 * C125;
    const double C15528 = C15506 * C134;
    const double C15522 = C15506 * C124;
    const double C15520 = C15506 * C132;
    const double C15514 = C15506 * C123;
    const double C15732 = C15506 * C297;
    const double C15726 = C15506 * C288;
    const double C15716 = C15506 * C295;
    const double C15710 = C15506 * C286;
    const double C15914 = C15506 * C445;
    const double C15908 = C15506 * C436;
    const double C15898 = C15506 * C443;
    const double C15892 = C15506 * C434;
    const double C16084 = C15506 * C595;
    const double C16078 = C15506 * C588;
    const double C16492 = C15506 * C952;
    const double C16486 = C15506 * C945;
    const double C17252 = C15506 * C822;
    const double C17246 = C15506 * C812;
    const double C18482 = C15506 * C293;
    const double C18476 = C15506 * C287;
    const double C18796 = C15506 * C587;
    const double C18790 = C15506 * C593;
    const double C18908 = C15506 * C707;
    const double C18902 = C15506 * C700;
    const double C19084 = C15506 * C833;
    const double C19078 = C15506 * C818;
    const double C19076 = C15506 * C811;
    const double C19070 = C15506 * C820;
    const double C19400 = C15506 * C1090;
    const double C19394 = C15506 * C1083;
    const double C176 = C161 + C162;
    const double C5245 = C5224 + C5225;
    const double C2780 = C620 * C49763;
    const double C2929 = C620 * C696;
    const double C3898 = C620 * C1392;
    const double C3105 = C1540 * C696;
    const double C4104 = C1540 * C1392;
    const double C4796 = C1540 * C49763;
    const double C28357 = C5424 + C5425;
    const double C28353 = C5425 + C5424;
    const double C3464 = C3462 * C696;
    const double C177 = C163 + C164;
    const double C5247 = C5228 + C5229;
    const double C331 = C319 + C320;
    const double C5433 = C5418 + C5419;
    const double C479 = C467 + C468;
    const double C5242 = C5218 + C5219;
    const double C5617 = C5602 + C5603;
    const double C15559 = C15536 + C15537;
    const double C31687 = C31663 + C31664;
    const double C622 = C612 + C613;
    const double C5789 = C5778 + C5779;
    const double C1542 = C1532 + C1533;
    const double C5428 = C5408 + C5409;
    const double C6969 = C6958 + C6959;
    const double C15741 = C15724 + C15725;
    const double C31873 = C31853 + C31854;
    const double C979 = C969 + C970;
    const double C5612 = C5592 + C5593;
    const double C6203 = C6192 + C6193;
    const double C15554 = C15526 + C15527;
    const double C15923 = C15906 + C15907;
    const double C32057 = C32037 + C32038;
    const double C49930 = C49927 / C49806;
    const double C2936 = C2804 * C696;
    const double C8499 = C2804 * C49763;
    const double C9549 = C2804 * C1392;
    const double C3134 = C3126 * C696;
    const double C9758 = C3126 * C1392;
    const double C10446 = C3126 * C49763;
    const double C13164 = C5784 + C5785;
    const double C28747 = C5785 + C5784;
    const double C50619 = C50617 + C50612;
    const double C448 = (C49874 * (3 * C49909 + C49871 * C49937) +
                         (3 * C50350 + C49871 * C50355) * ae) /
                        C49806;
    const double C825 =
        (C49874 * C50026 * C49937 + C50026 * C50355 * ae) / C49806;
    const double C955 =
        (2 * C49896 + C49871 * C49909 +
         C49874 * (C49874 * C49937 + C50355 * ae) + C49874 * C50355 * ae) /
        C49806;
    const double C127 = 4 * (2 * C50348 + C49871 * C50350) +
                        C49871 * (3 * C50350 + C49871 * C50355);
    const double C290 = C50026 * (3 * C50350 + C49871 * C50355);
    const double C438 = C49874 * (3 * C50350 + C49871 * C50355);
    const double C590 = 2 * C50348 + C49871 * C50350 + C50355 * C50035;
    const double C697 =
        2 * C50026 * C50355 + C50026 * (C50355 + C50017 * C50035);
    const double C814 = C49874 * C50026 * C50355;
    const double C815 = C49874 * (C50355 + C50017 * C50035);
    const double C947 = 2 * C50348 + C49871 * C50350 + C50355 * C50127;
    const double C1166 =
        2 * C49874 * C50355 + C49874 * (C50355 + C50017 * C50127);
    const double C3289 = C50942 * C1087;
    const double C6957 = C50954 * C1087;
    const double C15723 = C15505 * C1087;
    const double C33390 = C50954 * C1087;
    const double C38308 = C38090 * C1087;
    const double C3288 = C117 * C1081;
    const double C6956 = C5200 * C1081;
    const double C15722 = C15508 * C1081;
    const double C33389 = C31645 * C1081;
    const double C38307 = C38093 * C1081;
    const double C6453 =
        (3 * (C49909 + C49874 * C50493 + C50491 * ae) +
         C49874 * (2 * C50493 +
                   C49874 * (C49932 + C49874 * (C49874 * C49965 + C50013 * ae) +
                             C49874 * C50013 * ae) +
                   C50494 * ae) +
         (2 * C50491 + C49874 * C50494) * ae) /
        C49806;
    const double C2806 = C2798 + C2799;
    const double C3128 = C3118 + C3119;
    const double C5788 = C5776 + C5777;
    const double C32233 = C32221 + C32222;
    const double C6202 = C6190 + C6191;
    const double C15922 = C15904 + C15905;
    const double C32647 = C32635 + C32636;
    const double C8968 = C50942 * C3447;
    const double C14425 = C50954 * C3447;
    const double C16075 = C15505 * C3447;
    const double C35490 = C50954 * C3447;
    const double C38660 = C38090 * C3447;
    const double C8507 = C117 * C2908;
    const double C8806 = C117 * C3090;
    const double C13168 = C5200 * C3090;
    const double C35119 = C31645 * C3090;
    const double C8967 = C117 * C3442;
    const double C14424 = C5200 * C3442;
    const double C16074 = C15508 * C3442;
    const double C35489 = C31645 * C3442;
    const double C38659 = C38093 * C3442;
    const double C16647 =
        (3 * (C50481 + C49874 * C50588 + C50584 * ae) +
         C49874 * (2 * C50588 +
                   C49874 * (C50582 +
                             C49874 * (C49874 * C50026 * C49871 * C49959 +
                                       C50585 * ae) +
                             C49874 * C50585 * ae) +
                   C50589 * ae) +
         (2 * C50584 + C49874 * C50589) * ae) /
        C49806;
    const double C17254 = C17242 + C17243;
    const double C29275 = C29267 + C29268;
    const double C35709 = C35701 + C35702;
    const double C16483 = C15505 * C6455;
    const double C39068 = C38090 * C6455;
    const double C16482 = C15508 * C6450;
    const double C39067 = C38093 * C6450;
    const double C50602 = C49914 + C50600;
    const double C50019 = C50018 + C50009;
    const double C2912 =
        (-3 * (C50002 * C50035 + C50045)) / C49744 +
        C50026 * ((-2 * C50091) / C49744 - (C50026 * C50110) / C49744);
    const double C3094 =
        C49874 * ((-2 * C50091) / C49744 - (C50026 * C50110) / C49744);
    const double C3446 = -(C50110 * C50127 + C50002 * C50035 + C50045) / C49744;
    const double C50165 = C50163 / C49744;
    const double C50231 = C50228 / C49882;
    const double C6454 =
        (-3 * (C50002 * C50127 + C50045)) / C49744 +
        C49874 * ((-2 * C50133) / C49744 - (C49874 * C50138) / C49744);
    const double C50246 = C50242 / C49744;
    const double C50244 = C50240 / C49882;
    const double C9123 =
        (2 * C50485 + C50026 * C50518 +
         C49874 * (C49874 * (2 * C50026 * C49905 +
                             C50026 * (C49905 + C49926 * C50035)) +
                   C50536 * ae) +
         C49874 * C50536 * ae) /
        C49806;
    const double C11309 =
        (C49874 * (4 * C50548 +
                   C50026 * (3 * C50546 +
                             C50026 * (2 * C50026 * C49926 +
                                       C50026 * (C49926 + C49959 * C50035)))) +
         (4 * C50536 +
          C50026 *
              (3 * C50534 + C50026 * (2 * C50026 * C49997 +
                                      C50026 * (C49997 + C50007 * C50035)))) *
             ae) /
        C49806;
    const double C11598 =
        (2 * (C49874 * C50548 + C50536 * ae) +
         C49874 * (C50548 +
                   C49874 * (C49874 * (2 * C50026 * C49926 +
                                       C50026 * (C49926 + C49959 * C50035)) +
                             C50559 * ae) +
                   C49874 * C50559 * ae) +
         (C50536 + C50559 * C50127) * ae) /
        C49806;
    const double C8618 = 4 * (2 * C50440 + C50026 * C50474) +
                         C50026 * (3 * C50474 + C50026 * C50536);
    const double C8792 = C49874 * (3 * C50474 + C50026 * C50536);
    const double C9119 = 2 * C50440 + C50026 * C50474 + C50536 * C50127;
    const double C11596 =
        2 * C49874 * C50536 + C49874 * (C50536 + C50559 * C50127);
    const double C13922 =
        (3 * (C50518 + C49874 * C50570 + C50568 * ae) +
         C49874 * (2 * C50570 +
                   C49874 * (C50546 +
                             C49874 * (C49874 * (C49926 + C49959 * C50035) +
                                       C50557 * ae) +
                             C49874 * C50557 * ae) +
                   C50571 * ae) +
         (2 * C50568 + C49874 * C50571) * ae) /
        C49806;
    const double C13819 = C13808 + C13809;
    const double C19098 = C19082 + C19083;
    const double C45428 = C45421 + C45422;
    const double C19399 = C15505 * C13924;
    const double C48162 = C38090 * C13924;
    const double C19398 = C15508 * C13920;
    const double C48161 = C38093 * C13920;
    const double C50634 = C50543 + C50632;
    const double C16748 = 4 * (2 * C50507 + C49874 * C50510) +
                          C49874 * (3 * C50510 + C49874 * C50618);
    const double C50654 = C50652 + C50647;
    const double C50050 = C50049 + C50048;
    const double C3286 = C117 * C1088;
    const double C6952 = C5200 * C1088;
    const double C15720 = C15508 * C1088;
    const double C17250 = C15507 * C1088;
    const double C29273 = C5199 * C1088;
    const double C33385 = C31645 * C1088;
    const double C38305 = C38093 * C1088;
    const double C17248 = C15508 * C3568;
    const double C29271 = C5200 * C3568;
    const double C35705 = C31645 * C3568;
    const double C39821 = C38093 * C3568;
    const double C8641 = C8632 + C8633;
    const double C13313 = C13304 + C13305;
    const double C8813 = C8804 + C8805;
    const double C13188 = C13170 + C13171;
    const double C13498 = C13484 + C13485;
    const double C18918 = C18910 + C18911;
    const double C35276 = C35271 + C35272;
    const double C9134 = C9129 + C9130;
    const double C13488 = C13464 + C13465;
    const double C13820 = C13810 + C13811;
    const double C18798 = C18786 + C18787;
    const double C19100 = C19086 + C19087;
    const double C35502 = C35485 + C35486;
    const double C50270 = C50267 / C49806;
    const double C49972 = C49871 * C49970;
    const double C702 =
        (2 * C50026 * C49937 + C50026 * (C49937 + C49970 * C50035)) / C49806;
    const double C828 = (C49874 * (C49937 + C49970 * C50035) +
                         (C50355 + C50017 * C50035) * ae) /
                        C49806;
    const double C1171 =
        (2 * (C49874 * C49937 + C50355 * ae) +
         C49874 * (C49937 + C49874 * (C49874 * C49970 + C50017 * ae) +
                   C49874 * C50017 * ae) +
         (C50355 + C50017 * C50127) * ae) /
        C49806;
    const double C50078 = C50077 + C50071;
    const double C50167 = C50026 * C50166;
    const double C9236 = (-2 * C49874 * C50110) / C49744 -
                         (C49874 * (C50166 * C50127 + C50110)) / C49744;
    const double C50234 = C50232 + C50119;
    const double C50247 = C49874 * C50243;
    const double C50202 = C50199 - C50201;
    const double C13921 =
        (-3 * (C50174 * C50127 + C50113)) / C49744 +
        C49874 * ((-2 * C50207) / C49744 - (C49874 * C50212) / C49744);
    const double C50296 = C50293 / C49744;
    const double C50327 = C50320 - C50324;
    const double C3458 = C3292 * C696;
    const double C30252 = C6964 + C6965;
    const double C30249 = C6965 + C6964;
    const double C8644 = C8640 * C696;
    const double C8817 = C8812 * C696;
    const double C13299 = C13190 + C13191;
    const double C9135 = C9133 * C696;
    const double C13501 = C13490 + C13491;
    const double C168 = C50942 * C139;
    const double C324 = C50942 * C300;
    const double C617 = C50942 * C598;
    const double C49966 = C49963 - C49945;
    const double C50073 = C50067 / C49744;
    const double C50360 = C50358 + C50359;
    const double C1085 =
        (C50026 * C49937 + C49874 * (C49874 * C50026 * C49970 + C50431 * ae) +
         C49874 * C50431 * ae) /
        C49806;
    const double C1080 = C50026 * C50355 + C50431 * C50127;
    const double C9121 =
        (2 * C50481 + C50026 * C50514 +
         C49874 * (C49874 * (2 * C50026 * C49944 +
                             C50026 * (C49944 + C49871 * C49959 * C50035)) +
                   C50529 * ae) +
         C49874 * C50529 * ae) /
        C49806;
    const double C8617 = 4 * (2 * C50437 + C50026 * C50470) +
                         C50026 * (3 * C50470 + C50026 * C50529);
    const double C8791 = C49874 * (3 * C50470 + C50026 * C50529);
    const double C9118 = 2 * C50437 + C50026 * C50470 + C50529 * C50127;
    const double C16747 = 4 * (2 * C50499 + C49874 * C50502) +
                          C49874 * (3 * C50502 + C49874 * C50603);
    const double C50561 = C50553 + C50560;
    const double C19509 = 4 * (2 * C50576 + C49874 * C50579) +
                          C49874 * (3 * C50579 + C49874 * C50635);
    const double C50657 = C50645 + C50655;
    const double C8621 =
        4 * ((-2 * C50093) / C49744 - (C50026 * C50113) / C49744) +
        C50026 * ((-3 * C50113) / C49744 + C50026 * C50177);
    const double C8795 = C49874 * ((-3 * C50113) / C49744 + C50026 * C50177);
    const double C9122 =
        (-2 * C50093) / C49744 - (C50026 * C50113) / C49744 + C50177 * C50127;
    const double C50294 = C50291 / C49806;
    const double C16751 =
        4 * ((-2 * C50141) / C49744 - (C49874 * C50147) / C49744) +
        C49874 * ((-3 * C50147) / C49744 + C49874 * C50272);
    const double C50328 = C50325 - C49945;
    const double C8626 = C2931 + C2930;
    const double C49912 = C49911 - C49902;
    const double C50150 = C50149 - C50146;
    const double C8629 = C2943 + C2942;
    const double C11197 = C2942 + C2943;
    const double C8801 = C3133 + C3132;
    const double C49938 = C49936 - C49921;
    const double C50159 = C50158 - C49915;
    const double C50223 = C50222 / C49806;
    const double C50271 = C50268 - C50260;
    const double C49971 = C49969 - C49953;
    const double C50188 = C50187 - C49945;
    const double C50295 = C50292 / C49806;
    const double C50326 = C50323 - C50313;
    const double C110 = (C51038 - C51074) / C49814 - (C51090 * C50770) / C49806;
    const double C111 =
        (2 * C50779 + C51090) / C49814 - (C51076 * C50770) / C49806;
    const double C112 = C51076 / C49814 - C50782 / C49835;
    const double C692 = (C51046 - C51077) / C49749 - (C51091 * C50827) / C49744;
    const double C693 =
        (2 * C50831 + C51091) / C49749 - (C51079 * C50827) / C49744;
    const double C694 = C51079 / C49749 - C50834 / C49753;
    const double C1162 =
        (C51047 - C51080) / C49749 - (C51092 * C50851) / C49744;
    const double C1163 =
        (2 * C50855 + C51092) / C49749 - (C51082 * C50851) / C49744;
    const double C1164 = C51082 / C49749 - C50858 / C49753;
    const double C10812 =
        (C51059 - C51083) / C49814 - (C51093 * C50926) / C49806;
    const double C10813 =
        (2 * C50930 + C51093) / C49814 - (C51085 * C50926) / C49806;
    const double C10814 = C51085 / C49814 - C50933 / C49835;
    const double C49768 = C49767 * ce;
    const double C283 =
        ((-C49743 / C49744) / C49749 - (C49756 * de) / C49744) / C49749 -
        ((C49742 * ((-C49745 / C49744) / C49749 - (C49767 * de) / C49744) +
          C1386) *
         de) /
            C49744 +
        (-C49758 / C49744) / C49749 - (0 * de) / C49744;
    const double C284 =
        ((-C49745 / C49744) / C49749 - (C49767 * de) / C49744) / C49749 -
        ((C49742 * ((-C49758 / C49744) / C49749 - (0 * de) / C49744) + C50759) *
         de) /
            C49744;
    const double C1391 = (-C49745 / C49744) / C49749 - (C49767 * de) / C49744;
    const double C49846 = C49842 * ae;
    const double C31644 = (-C49815 / C49806) / C49814 - (C49842 * be) / C49806;
    const double C38139 = C38111 + C38112;
    const double C38131 = C38095 + C38096;
    const double C38321 = C38299 + C38300;
    const double C38507 = C38489 + C38490;
    const double C38503 = C38481 + C38482;
    const double C39827 = C39815 + C39816;
    const double C47256 = C47249 + C47250;
    const double C47253 = C47243 + C47244;
    const double C47564 = C47555 + C47556;
    const double C47561 = C47549 + C47550;
    const double C47861 = C47845 + C47846;
    const double C47856 = C47835 + C47836;
    const double C47853 = C47829 + C47830;
    const double C13183 = C13163 * C51031;
    const double C13297 = C13163 * C50754;
    const double C14221 = C13163 * C1386;
    const double C13296 = C13162 * C696;
    const double C15563 = C15544 + C15545;
    const double C15560 = C15538 + C15539;
    const double C15555 = C15528 + C15529;
    const double C15552 = C15522 + C15523;
    const double C15551 = C15520 + C15521;
    const double C15548 = C15514 + C15515;
    const double C15742 = C15726 + C15727;
    const double C15737 = C15716 + C15717;
    const double C15734 = C15710 + C15711;
    const double C15924 = C15908 + C15909;
    const double C15919 = C15898 + C15899;
    const double C15916 = C15892 + C15893;
    const double C16088 = C16078 + C16079;
    const double C16496 = C16486 + C16487;
    const double C17256 = C17246 + C17247;
    const double C18491 = C18482 + C18483;
    const double C18488 = C18476 + C18477;
    const double C18803 = C18796 + C18797;
    const double C18800 = C18790 + C18791;
    const double C18917 = C18908 + C18909;
    const double C18914 = C18902 + C18903;
    const double C19099 = C19084 + C19085;
    const double C19096 = C19078 + C19079;
    const double C19095 = C19076 + C19077;
    const double C19092 = C19070 + C19071;
    const double C19409 = C19400 + C19401;
    const double C19406 = C19394 + C19395;
    const double C2464 = C331 * C285;
    const double C2778 = C331 * C49763;
    const double C3732 = C331 * C1287;
    const double C3896 = C331 * C1392;
    const double C5252 = C5242 + C5243;
    const double C2786 = C622 * C49763;
    const double C2927 = C622 * C696;
    const double C3902 = C622 * C1392;
    const double C8197 = C622 * C285;
    const double C9393 = C622 * C1287;
    const double C3103 = C1542 * C696;
    const double C4108 = C1542 * C1392;
    const double C4800 = C1542 * C49763;
    const double C5436 = C5428 + C5429;
    const double C28355 = C5429 + C5428;
    const double C5620 = C5612 + C5613;
    const double C49933 = C49930 - C49915;
    const double C13184 = C13164 * C49763;
    const double C14222 = C13164 * C1392;
    const double C16752 =
        (4 * (2 * C50509 + C49874 * C50619 + C50510 * ae) +
         C49874 *
             (3 * C50619 +
              C49874 *
                  (2 * C50611 +
                   C49874 * (C49905 + C49874 * (C49874 * C49926 + C49997 * ae) +
                             C49874 * C49997 * ae) +
                   C50613 * ae) +
              C50618 * ae) +
         (3 * C50510 + C49874 * C50618) * ae) /
        C49806;
    const double C472 = C50942 * C448;
    const double C5227 = C50954 * C448;
    const double C31672 = C50954 * C448;
    const double C1537 = C50942 * C825;
    const double C5417 = C50954 * C825;
    const double C31862 = C50954 * C825;
    const double C974 = C50942 * C955;
    const double C5601 = C50954 * C955;
    const double C15535 = C15505 * C955;
    const double C32046 = C50954 * C955;
    const double C38120 = C38090 * C955;
    const double C167 = C117 * C127;
    const double C323 = C117 * C290;
    const double C471 = C117 * C438;
    const double C5226 = C5200 * C438;
    const double C31671 = C31645 * C438;
    const double C616 = C117 * C590;
    const double C1536 = C117 * C814;
    const double C5416 = C5200 * C814;
    const double C31861 = C31645 * C814;
    const double C973 = C117 * C947;
    const double C5600 = C5200 * C947;
    const double C15534 = C15508 * C947;
    const double C32045 = C31645 * C947;
    const double C38119 = C38093 * C947;
    const double C3294 = C3288 + C3289;
    const double C6968 = C6956 + C6957;
    const double C15740 = C15722 + C15723;
    const double C33401 = C33389 + C33390;
    const double C38325 = C38307 + C38308;
    const double C2938 = C2806 * C696;
    const double C8503 = C2806 * C49763;
    const double C9553 = C2806 * C1392;
    const double C10919 = C2806 * C285;
    const double C11703 = C2806 * C1287;
    const double C3136 = C3128 * C696;
    const double C9762 = C3128 * C1392;
    const double C10450 = C3128 * C49763;
    const double C8513 = C8507 + C8508;
    const double C8814 = C8806 + C8807;
    const double C13187 = C13168 + C13169;
    const double C35131 = C35119 + C35120;
    const double C8971 = C8967 + C8968;
    const double C14431 = C14424 + C14425;
    const double C16086 = C16074 + C16075;
    const double C35504 = C35489 + C35490;
    const double C38671 = C38659 + C38660;
    const double C16494 = C16482 + C16483;
    const double C39079 = C39067 + C39068;
    const double C50604 = C50602 + C50597;
    const double C50053 = C49871 * C50019;
    const double C50061 = -3 * C50019;
    const double C50089 = C50026 * C50019;
    const double C50126 = ae * C50019;
    const double C50124 = C49874 * C50019;
    const double C8509 = C117 * C2912;
    const double C8808 = C117 * C3094;
    const double C13180 = C5200 * C3094;
    const double C35123 = C31645 * C3094;
    const double C8969 = C117 * C3446;
    const double C14428 = C5200 * C3446;
    const double C16080 = C15508 * C3446;
    const double C35493 = C31645 * C3446;
    const double C38665 = C38093 * C3446;
    const double C16488 = C15508 * C6454;
    const double C39073 = C38093 * C6454;
    const double C11524 = C50942 * C9123;
    const double C13483 = C50954 * C9123;
    const double C18907 = C15505 * C9123;
    const double C45114 = C50954 * C9123;
    const double C47670 = C38090 * C9123;
    const double C11200 = C117 * C8618;
    const double C11314 = C117 * C8792;
    const double C13302 = C5200 * C8792;
    const double C44947 = C31645 * C8792;
    const double C11523 = C117 * C9119;
    const double C13482 = C5200 * C9119;
    const double C18906 = C15508 * C9119;
    const double C45113 = C31645 * C9119;
    const double C47669 = C38093 * C9119;
    const double C19408 = C19398 + C19399;
    const double C48171 = C48161 + C48162;
    const double C50636 = C50634 + C50627;
    const double C50656 = C49874 * C50654;
    const double C138 =
        (-3 * (C49871 * C50045 + C50041 + C50348 * ce)) / C49744 +
        C49871 * ((-2 * C50045) / C49744 - (C49871 * C50050) / C49744 -
                  (C50350 * ce) / C49744) -
        ((2 * C50348 + C49871 * C50350) * ce) / C49744;
    const double C299 =
        C50026 * ((-2 * C50045) / C49744 - (C49871 * C50050) / C49744 -
                  (C50350 * ce) / C49744);
    const double C447 =
        C49874 * ((-2 * C50045) / C49744 - (C49871 * C50050) / C49744 -
                  (C50350 * ce) / C49744);
    const double C597 =
        -(C50050 * C50035 + C49871 * C50045 + C50041 + C50348 * ce) / C49744;
    const double C703 = (-2 * C50026 * C50050) / C49744 -
                        (C50026 * (C50019 * C50035 + C50050)) / C49744;
    const double C824 = -(C49874 * C50026 * C50050) / C49744;
    const double C829 = -(C49874 * (C50019 * C50035 + C50050)) / C49744;
    const double C954 =
        -(C50050 * C50127 + C49871 * C50045 + C50041 + C50348 * ce) / C49744;
    const double C1172 = (-2 * C49874 * C50050) / C49744 -
                         (C49874 * (C50019 * C50127 + C50050)) / C49744;
    const double C8645 = C8641 * C50754;
    const double C11120 = C8641 * C51031;
    const double C11806 = C8641 * C1386;
    const double C8818 = C8813 * C50754;
    const double C11943 = C8813 * C1386;
    const double C12403 = C8813 * C51031;
    const double C13298 = C13188 + C13189;
    const double C9136 = C9134 * C50754;
    const double C13500 = C13488 + C13489;
    const double C50273 = C50270 - C49915;
    const double C49974 = C49949 + C49972;
    const double C50079 = C49871 * C50078;
    const double C50106 = C50078 * C50035;
    const double C50116 = C50026 * C50078;
    const double C50129 = C50078 * C50127;
    const double C50168 = C50167 / C49744;
    const double C16646 =
        (-3 * (C50119 * C50127 + C50091)) / C49744 +
        C49874 * ((-2 * C50226) / C49744 - (C49874 * C50234) / C49744);
    const double C50250 = C50247 / C49744;
    const double C50203 = C50026 * C50202;
    const double C11597 =
        2 * C49874 * C50177 + C49874 * (C50177 + C50202 * C50127);
    const double C50299 = C50289 - C50296;
    const double C50330 = C49874 * C50327;
    const double C13310 = C13299 * C696;
    const double C13503 = C13501 * C696;
    const double C128 = 5 * (3 * C50350 + C49871 * C50355) +
                        C49871 * (4 * C50355 + C49871 * C50360);
    const double C291 = C50026 * (4 * C50355 + C49871 * C50360);
    const double C439 = C49874 * (4 * C50355 + C49871 * C50360);
    const double C591 = 3 * C50350 + C49871 * C50355 + C50360 * C50035;
    const double C948 = 3 * C50350 + C49871 * C50355 + C50360 * C50127;
    const double C1523 = C49874 * C50026 * C50360;
    const double C11520 =
        (3 * C50518 + C50026 * C50548 +
         C49874 * (C49874 * (3 * C50546 +
                             C50026 * (2 * C50026 * C49926 +
                                       C50026 * (C49926 + C49959 * C50035))) +
                   C50561 * ae) +
         C49874 * C50561 * ae) /
        C49806;
    const double C11191 = 5 * (3 * C50474 + C50026 * C50536) +
                          C50026 * (4 * C50536 + C50026 * C50561);
    const double C11307 = C49874 * (4 * C50536 + C50026 * C50561);
    const double C11518 = 3 * C50474 + C50026 * C50536 + C50561 * C50127;
    const double C21765 = 5 * (3 * C50510 + C49874 * C50618) +
                          C49874 * (4 * C50618 + C49874 * C50657);
    const double C11202 = C117 * C8621;
    const double C11316 = C117 * C8795;
    const double C13306 = C5200 * C8795;
    const double C44951 = C31645 * C8795;
    const double C11525 = C117 * C9122;
    const double C13486 = C5200 * C9122;
    const double C18912 = C15508 * C9122;
    const double C45117 = C31645 * C9122;
    const double C47675 = C38093 * C9122;
    const double C50297 = C50294 - C50278;
    const double C8636 = C8626 * C51038;
    const double C11196 = C8626 * C50774;
    const double C26023 = C8626 * C25478;
    const double C147 =
        3 * ((-(C49896 * ce) / C49744) / C49806 - C49893 / C49882 +
             C49871 * C49912) -
        ((2 * C49896 + C49871 * C49909) * ce) / C49882 +
        C49871 *
            (2 * C49912 - (C49909 * ce) / C49882 +
             C49871 *
                 ((-(C49871 * C49905 * ce) / C49744) / C49806 -
                  C49904 / C49882 +
                  C49871 * ((-(C49871 * std::pow(C49876, 6) * bs[6] * C49887) /
                             C49744) /
                                C49806 -
                            (C49905 * ce) / C49882)));
    const double C306 = (yP - yQ) * ((-(C49896 * ce) / C49744) / C49806 -
                                     C49893 / C49882 + C49871 * C49912);
    const double C454 =
        C49874 * ((-(C49896 * ce) / C49744) / C49806 - C49893 / C49882 +
                  C49871 * C49912) -
        (ae * (C49871 * (C49871 * C49889 * C49890 * C49987 + C49988 * ce) +
               C49883 * C49879 * C49987 + C49871 * C49988 * ce)) /
            C49882;
    const double C603 = (-(C49871 * C49893) / C49744) / C49806 -
                        (C49886 * ce) / C49882 + C49912 * std::pow(yP - yQ, 2);
    const double C836 =
        C49874 * C50026 * C49912 -
        (ae * C50026 * (C49871 * C49992 + C49988 * ce)) / C49882;
    const double C960 = (-(C49871 * C49893) / C49744) / C49806 -
                        (C49886 * ce) / C49882 -
                        (ae * C49874 * C50045) / C49882 +
                        C49874 * (C49874 * C49912 - (ae * C50045) / C49882);
    const double C6460 =
        3 * ((-(ae * C50141) / C49744) / C49806 - C49893 / C49882 +
             C49874 * C50150) +
        (((-2 * C50141) / C49744 - (C49874 * C50147) / C49744) * ae) / C49806 +
        C49874 *
            (2 * C50150 - (ae * C50147) / C49882 +
             C49874 * ((-(ae * C49874 * C49998) / C49744) / C49806 - C49915 +
                       C49874 * ((-(C49874 * C49925) / C49744) / C49806 -
                                 (ae * C49998) / C49882)));
    const double C8639 = C8629 * C51038;
    const double C11199 = C8629 * C50774;
    const double C26026 = C8629 * C25478;
    const double C11204 = C11197 * C50774;
    const double C8811 = C8801 * C51038;
    const double C11313 = C8801 * C50774;
    const double C26176 = C8801 * C25478;
    const double C49939 = C49871 * C49938;
    const double C49942 = 2 * C49938;
    const double C50118 = C50026 * C49938;
    const double C50134 = C49874 * C49938;
    const double C50248 = C49938 - C50244;
    const double C711 =
        2 * C50026 * C49912 + C50026 * (C49912 + C49938 * std::pow(C50026, 2));
    const double C841 =
        C49874 * (C49912 + C49938 * C50035) -
        (ae * (C50002 * C50035 + C49871 * C49992 + C49988 * ce)) / C49882;
    const double C1094 =
        C50026 * C49912 - (ae * C49874 * C50091) / C49882 +
        C49874 * (C49874 * C50026 * C49938 - (ae * C50091) / C49882);
    const double C1180 =
        2 * (C49874 * C49912 - (ae * C50045) / C49882) -
        (ae * (C50002 * std::pow(C49874, 2) + C50045)) / C49882 +
        C49874 * (C49912 - (ae * C49874 * C50002) / C49882 +
                  C49874 * (C49874 * C49938 - (ae * C50002) / C49882));
    const double C8624 =
        4 * ((-2 * C50121) / C49882 + C50026 * C50159) +
        C50026 * (3 * C50159 +
                  C50026 * ((-2 * C50026 * C49925) / C49882 +
                            C50026 * ((-(C49958 * C50035) / C49744) / C49806 -
                                      C49945)));
    const double C8798 =
        (((-3 * C50113) / C49744 +
          C50026 * ((-2 * C50122) / C49744 -
                    (C50026 * (C50008 * C50035 + C49998)) / C49744)) *
         ae) /
            C49806 +
        C49874 * (3 * C50159 +
                  C50026 * ((-2 * C50026 * C49925) / C49882 +
                            C50026 * ((-(C49958 * C50035) / C49744) / C49806 -
                                      C49945)));
    const double C9125 =
        (-2 * C50121) / C49882 + C50026 * C50159 +
        (C49874 * C50177 * ae) / C49806 +
        C49874 * ((C50177 * ae) / C49806 +
                  C49874 * ((-2 * C50026 * C49925) / C49882 +
                            C50026 * ((-(C49958 * C50035) / C49744) / C49806 -
                                      C49945)));
    const double C9241 =
        2 * (C49874 * C50159 - (ae * C50113) / C49882) -
        (ae * (C50174 * C50127 + C50113)) / C49882 +
        C49874 * (C50159 - (ae * C49874 * C50174) / C49882 +
                  C49874 * (C49874 * ((-(C49958 * C50035) / C49744) / C49806 -
                                      C49945) -
                            (ae * C50174) / C49882));
    const double C50224 = C50223 - C50220;
    const double C50274 = C49874 * C50271;
    const double C50303 = 2 * C50271;
    const double C49973 = C49871 * C49971;
    const double C50152 = C49971 * C50035;
    const double C50227 = C50026 * C49971;
    const double C50237 = C49874 * C49971;
    const double C2917 =
        3 * (C49912 + C49938 * C50035) +
        C50026 * (2 * C50026 * C49938 + C50026 * (C49938 + C49971 * C50035));
    const double C3099 =
        (((-2 * C50091) / C49744 -
          (C50026 * (C50014 * C50035 + C50002)) / C49744) *
         ae) /
            C49806 +
        C49874 * (2 * C50026 * C49938 + C50026 * (C49938 + C49971 * C50035));
    const double C3451 =
        C49912 + C49938 * C50035 - (ae * C49874 * C50110) / C49882 +
        C49874 * (C49874 * (C49938 + C49971 * C50035) - (ae * C50110) / C49882);
    const double C50189 = C50026 * C50188;
    const double C50208 = C49874 * C50188;
    const double C50298 = C50295 - C50284;
    const double C50329 = C49874 * C50326;
    const double C49769 = C49768 / C49744;
    const double C2466 = C329 * C283;
    const double C2460 = C327 * C283;
    const double C2474 = C2472 * C283;
    const double C8199 = C620 * C283;
    const double C8193 = C2803 * C283;
    const double C10915 = C2940 * C283;
    const double C2468 = C331 * C284;
    const double C2462 = C329 * C284;
    const double C2456 = C327 * C284;
    const double C8201 = C622 * C284;
    const double C8195 = C620 * C284;
    const double C10917 = C2804 * C284;
    const double C3908 = C622 * C1391;
    const double C3904 = C620 * C1391;
    const double C3900 = C2803 * C1391;
    const double C3894 = C329 * C1391;
    const double C3890 = C327 * C1391;
    const double C3886 = C2472 * C1391;
    const double C4114 = C1542 * C1391;
    const double C4110 = C1540 * C1391;
    const double C4106 = C3123 * C1391;
    const double C9555 = C2804 * C1391;
    const double C9551 = C2940 * C1391;
    const double C9764 = C3126 * C1391;
    const double C9760 = C3124 * C1391;
    const double C11807 = C8640 * C1391;
    const double C11944 = C8812 * C1391;
    const double C14220 = C13162 * C1391;
    const double C49848 = C49846 / C49806;
    const double C31673 = C31644 * C126;
    const double C31669 = C31644 * C136;
    const double C31665 = C31644 * C125;
    const double C31659 = C31644 * C134;
    const double C31655 = C31644 * C124;
    const double C31653 = C31644 * C132;
    const double C31649 = C31644 * C123;
    const double C31863 = C31644 * C289;
    const double C31859 = C31644 * C297;
    const double C31855 = C31644 * C288;
    const double C31849 = C31644 * C295;
    const double C31845 = C31644 * C286;
    const double C32047 = C31644 * C437;
    const double C32043 = C31644 * C445;
    const double C32039 = C31644 * C436;
    const double C32033 = C31644 * C443;
    const double C32029 = C31644 * C434;
    const double C32223 = C31644 * C589;
    const double C32219 = C31644 * C595;
    const double C32215 = C31644 * C588;
    const double C32637 = C31644 * C946;
    const double C32633 = C31644 * C952;
    const double C32629 = C31644 * C945;
    const double C33391 = C31644 * C813;
    const double C33387 = C31644 * C822;
    const double C33383 = C31644 * C812;
    const double C34705 = C31644 * C293;
    const double C34701 = C31644 * C287;
    const double C35125 = C31644 * C705;
    const double C35121 = C31644 * C699;
    const double C35114 = C31644 * C587;
    const double C35110 = C31644 * C593;
    const double C35269 = C31644 * C707;
    const double C35265 = C31644 * C700;
    const double C35491 = C31644 * C831;
    const double C35487 = C31644 * C817;
    const double C35483 = C31644 * C833;
    const double C35479 = C31644 * C818;
    const double C35477 = C31644 * C811;
    const double C35473 = C31644 * C820;
    const double C35707 = C31644 * C1088;
    const double C35703 = C31644 * C1082;
    const double C35911 = C31644 * C1090;
    const double C35907 = C31644 * C1083;
    const double C44949 = C31644 * C2914;
    const double C44945 = C31644 * C2909;
    const double C45115 = C31644 * C3096;
    const double C45111 = C31644 * C3091;
    const double C45423 = C31644 * C3448;
    const double C45419 = C31644 * C3443;
    const double C13308 = C13296 + C13297;
    const double C179 = C167 + C168;
    const double C333 = C323 + C324;
    const double C481 = C471 + C472;
    const double C5246 = C5226 + C5227;
    const double C31691 = C31671 + C31672;
    const double C624 = C616 + C617;
    const double C1544 = C1536 + C1537;
    const double C5432 = C5416 + C5417;
    const double C31877 = C31861 + C31862;
    const double C981 = C973 + C974;
    const double C5616 = C5600 + C5601;
    const double C15558 = C15534 + C15535;
    const double C32061 = C32045 + C32046;
    const double C38143 = C38119 + C38120;
    const double C3460 = C3294 * C696;
    const double C8634 = C8513 * C696;
    const double C11119 = C8513 * C49763;
    const double C11805 = C8513 * C1392;
    const double C8819 = C8814 * C696;
    const double C11942 = C8814 * C1392;
    const double C12402 = C8814 * C49763;
    const double C9131 = C8971 * C696;
    const double C16750 =
        (4 * (2 * C50501 + C49874 * C50604 + C50502 * ae) +
         C49874 * (3 * C50604 +
                   C49874 * (2 * C50596 +
                             C49874 * (C49944 +
                                       C49874 * (C49874 * C49871 * C49959 +
                                                 C50065 * ae) +
                                       C49874 * C50065 * ae) +
                             C50598 * ae) +
                   C50603 * ae) +
         (3 * C50502 + C49874 * C50603) * ae) /
        C49806;
    const double C50056 = C50053 / C49744;
    const double C50068 = C50061 / C49744;
    const double C1086 = -(C50089 * C50127 + C50026 * C50050) / C49744;
    const double C50128 = C50126 / C49882;
    const double C11206 = C11200 + C11201;
    const double C11319 = C11314 + C11315;
    const double C13312 = C13302 + C13303;
    const double C44957 = C44947 + C44948;
    const double C11527 = C11523 + C11524;
    const double C13497 = C13482 + C13483;
    const double C18916 = C18906 + C18907;
    const double C45122 = C45113 + C45114;
    const double C47679 = C47669 + C47670;
    const double C19511 =
        (4 * (2 * C50578 + C49874 * C50636 + C50579 * ae) +
         C49874 * (3 * C50636 +
                   C49874 * (2 * C50630 +
                             C49874 * (C50622 +
                                       C49874 * (C49874 * C50026 * C49959 +
                                                 C50625 * ae) +
                                       C49874 * C50625 * ae) +
                             C50631 * ae) +
                   C50635 * ae) +
         (3 * C50579 + C49874 * C50635) * ae) /
        C49806;
    const double C50658 = C50639 + C50656;
    const double C165 = C117 * C138;
    const double C5232 = C5199 * C138;
    const double C31677 = C31644 * C138;
    const double C321 = C117 * C299;
    const double C5422 = C5199 * C299;
    const double C31867 = C31644 * C299;
    const double C469 = C117 * C447;
    const double C5222 = C5200 * C447;
    const double C5606 = C5199 * C447;
    const double C15542 = C15507 * C447;
    const double C31667 = C31645 * C447;
    const double C32051 = C31644 * C447;
    const double C614 = C117 * C597;
    const double C5782 = C5199 * C597;
    const double C32227 = C31644 * C597;
    const double C2800 = C117 * C703;
    const double C1534 = C117 * C824;
    const double C5412 = C5200 * C824;
    const double C6962 = C5199 * C824;
    const double C15730 = C15507 * C824;
    const double C31857 = C31645 * C824;
    const double C33395 = C31644 * C824;
    const double C3120 = C117 * C829;
    const double C5780 = C5200 * C829;
    const double C32225 = C31645 * C829;
    const double C971 = C117 * C954;
    const double C5596 = C5200 * C954;
    const double C6196 = C5199 * C954;
    const double C15532 = C15508 * C954;
    const double C15912 = C15507 * C954;
    const double C32041 = C31645 * C954;
    const double C32641 = C31644 * C954;
    const double C38117 = C38093 * C954;
    const double C6194 = C5200 * C1172;
    const double C15910 = C15508 * C1172;
    const double C32639 = C31645 * C1172;
    const double C38495 = C38093 * C1172;
    const double C11198 = C8645 + C8644;
    const double C11312 = C8818 + C8817;
    const double C13309 = C13298 * C50754;
    const double C13502 = C13500 * C50754;
    const double C141 = (5 * (3 * C49909 + C49871 * C49937) +
                         C49871 * (4 * C49937 + C49871 * C49974)) /
                        C49806;
    const double C302 = (C50026 * (4 * C49937 + C49871 * C49974)) / C49806;
    const double C450 = (C49874 * (4 * C49937 + C49871 * C49974) +
                         (4 * C50355 + C49871 * C50360) * ae) /
                        C49806;
    const double C600 =
        (3 * C49909 + C49871 * C49937 + C49974 * C50035) / C49806;
    const double C957 =
        (3 * C49909 + C49871 * C49937 +
         C49874 * (C49874 * C49974 + C50360 * ae) + C49874 * C50360 * ae) /
        C49806;
    const double C1524 =
        (C49874 * C50026 * C49974 + C50026 * C50360 * ae) / C49806;
    const double C50080 = C50079 / C49744;
    const double C50107 = C50106 + C50019;
    const double C3566 = (-2 * C49874 * C50089) / C49744 -
                         (C49874 * (C50116 * C50127 + C50089)) / C49744;
    const double C50131 = C50129 + C50019;
    const double C50169 = C50165 - C50168;
    const double C50252 = C50246 - C50250;
    const double C50204 = C50196 + C50203;
    const double C19510 =
        4 * ((-2 * C50215) / C49744 - (C49874 * C50221) / C49744) +
        C49874 * ((-3 * C50221) / C49744 + C49874 * C50299);
    const double C50332 = C50314 + C50330;
    const double C166 = C50942 * C147;
    const double C5233 = C51060 * C147;
    const double C31678 = C31642 * C147;
    const double C318 = C50942 * C306;
    const double C5415 = C51060 * C306;
    const double C15733 = C15503 * C306;
    const double C31860 = C31642 * C306;
    const double C38318 = C51094 * C306;
    const double C466 = C50942 * C454;
    const double C5217 = C50954 * C454;
    const double C5599 = C51060 * C454;
    const double C15531 = C15504 * C454;
    const double C15915 = C15503 * C454;
    const double C31662 = C50954 * C454;
    const double C32044 = C31642 * C454;
    const double C38116 = C51088 * C454;
    const double C38500 = C51094 * C454;
    const double C611 = C50942 * C603;
    const double C5775 = C51060 * C603;
    const double C16085 = C15503 * C603;
    const double C32220 = C31642 * C603;
    const double C38670 = C51094 * C603;
    const double C1531 = C50942 * C836;
    const double C5407 = C50954 * C836;
    const double C6955 = C51060 * C836;
    const double C15719 = C15504 * C836;
    const double C17253 = C15503 * C836;
    const double C31852 = C50954 * C836;
    const double C33388 = C31642 * C836;
    const double C38304 = C51088 * C836;
    const double C39826 = C51094 * C836;
    const double C968 = C50942 * C960;
    const double C5591 = C50954 * C960;
    const double C6189 = C51060 * C960;
    const double C15517 = C15505 * C960;
    const double C15901 = C15504 * C960;
    const double C16493 = C15503 * C960;
    const double C32036 = C50954 * C960;
    const double C32634 = C31642 * C960;
    const double C38102 = C38090 * C960;
    const double C38486 = C51088 * C960;
    const double C39078 = C51094 * C960;
    const double C49940 = C49933 + C49939;
    const double C49956 = C49942 - C49950;
    const double C3573 =
        2 * (C49874 * C50118 - (ae * C50091) / C49882) -
        (ae * (C50119 * std::pow(C49874, 2) + C50091)) / C49882 +
        C49874 * (C50118 - (ae * C49874 * C50119) / C49882 +
                  C49874 * (C49874 * C50026 * C49971 - (ae * C50119) / C49882));
    const double C50139 = C50134 - C50137;
    const double C2797 = C50942 * C711;
    const double C13179 = C51060 * C711;
    const double C35126 = C31642 * C711;
    const double C3117 = C50942 * C841;
    const double C5773 = C50954 * C841;
    const double C14427 = C51060 * C841;
    const double C16083 = C15504 * C841;
    const double C32218 = C50954 * C841;
    const double C35492 = C31642 * C841;
    const double C38668 = C51088 * C841;
    const double C3287 = C50942 * C1094;
    const double C6953 = C50954 * C1094;
    const double C15721 = C15505 * C1094;
    const double C17251 = C15504 * C1094;
    const double C29274 = C51060 * C1094;
    const double C33386 = C50954 * C1094;
    const double C35708 = C31642 * C1094;
    const double C38306 = C38090 * C1094;
    const double C39824 = C51088 * C1094;
    const double C6187 = C50954 * C1180;
    const double C15903 = C15505 * C1180;
    const double C16491 = C15504 * C1180;
    const double C32632 = C50954 * C1180;
    const double C38488 = C38090 * C1180;
    const double C39076 = C51088 * C1180;
    const double C11203 = C50942 * C8624;
    const double C11317 = C50942 * C8798;
    const double C13307 = C50954 * C8798;
    const double C44952 = C50954 * C8798;
    const double C11526 = C50942 * C9125;
    const double C13487 = C50954 * C9125;
    const double C18913 = C15505 * C9125;
    const double C45118 = C50954 * C9125;
    const double C47676 = C38090 * C9125;
    const double C13813 = C50954 * C9241;
    const double C19089 = C15505 * C9241;
    const double C45426 = C50954 * C9241;
    const double C47852 = C38090 * C9241;
    const double C13926 =
        3 * ((-(ae * C50215) / C49744) / C49806 - C50121 / C49882 +
             C49874 * C50224) +
        (((-2 * C50215) / C49744 - (C49874 * C50221) / C49744) * ae) / C49806 +
        C49874 * (2 * C50224 - (ae * C50221) / C49882 +
                  C49874 * ((-(ae * C49874 * C50194) / C49744) / C49806 -
                            C50181 / C49882 +
                            C49874 * ((-(C49874 * C50026 * C49958) / C49744) /
                                          C49806 -
                                      (ae * C50194) / C49882)));
    const double C50275 = C50273 + C50274;
    const double C50317 = C50303 - C50310;
    const double C49975 = C49966 + C49973;
    const double C50153 = C49938 + C50152;
    const double C50230 = C49874 * C50227;
    const double C50245 = C50237 - C50241;
    const double C8510 = C50942 * C2917;
    const double C8809 = C50942 * C3099;
    const double C13181 = C50954 * C3099;
    const double C35124 = C50954 * C3099;
    const double C8970 = C50942 * C3451;
    const double C14429 = C50954 * C3451;
    const double C16081 = C15505 * C3451;
    const double C35494 = C50954 * C3451;
    const double C38666 = C38090 * C3451;
    const double C50190 = C50185 + C50189;
    const double C50213 = C50208 - C50211;
    const double C50300 = C49874 * C50298;
    const double C50331 = C50328 + C50329;
    const double C49770 = C49769 - C49759;
    const double C9547 = C3900 + C3899;
    const double C11804 = C9551 + C9550;
    const double C14224 = C14220 + C14221;
    const double C49850 = C49848 - C49843;
    const double C31692 = C31673 + C31674;
    const double C31690 = C31669 + C31670;
    const double C31688 = C31665 + C31666;
    const double C31685 = C31659 + C31660;
    const double C31683 = C31655 + C31656;
    const double C31682 = C31653 + C31654;
    const double C31680 = C31649 + C31650;
    const double C31878 = C31863 + C31864;
    const double C31874 = C31855 + C31856;
    const double C31871 = C31849 + C31850;
    const double C31869 = C31845 + C31846;
    const double C32062 = C32047 + C32048;
    const double C32058 = C32039 + C32040;
    const double C32055 = C32033 + C32034;
    const double C32053 = C32029 + C32030;
    const double C32234 = C32223 + C32224;
    const double C32230 = C32215 + C32216;
    const double C32648 = C32637 + C32638;
    const double C32644 = C32629 + C32630;
    const double C33402 = C33391 + C33392;
    const double C33398 = C33383 + C33384;
    const double C34717 = C34705 + C34706;
    const double C34715 = C34701 + C34702;
    const double C35132 = C35121 + C35122;
    const double C35130 = C35114 + C35115;
    const double C35128 = C35110 + C35111;
    const double C35275 = C35269 + C35270;
    const double C35273 = C35265 + C35266;
    const double C35503 = C35487 + C35488;
    const double C35501 = C35483 + C35484;
    const double C35499 = C35479 + C35480;
    const double C35498 = C35477 + C35478;
    const double C35496 = C35473 + C35474;
    const double C35710 = C35703 + C35704;
    const double C35917 = C35911 + C35912;
    const double C35915 = C35907 + C35908;
    const double C44958 = C44949 + C44950;
    const double C44956 = C44945 + C44946;
    const double C45123 = C45115 + C45116;
    const double C45121 = C45111 + C45112;
    const double C45429 = C45423 + C45424;
    const double C45427 = C45419 + C45420;
    const double C13315 = C13308 * C50774;
    const double C2470 = C333 * C285;
    const double C3738 = C333 * C1287;
    const double C2790 = C624 * C49763;
    const double C3906 = C624 * C1392;
    const double C8203 = C624 * C285;
    const double C9399 = C624 * C1287;
    const double C4112 = C1544 * C1392;
    const double C4804 = C1544 * C49763;
    const double C50058 = C50055 - C50056;
    const double C3290 = C117 * C1086;
    const double C6960 = C5200 * C1086;
    const double C15728 = C15508 * C1086;
    const double C33393 = C31645 * C1086;
    const double C38313 = C38093 * C1086;
    const double C11208 = C11206 * C696;
    const double C11321 = C11319 * C696;
    const double C11529 = C11527 * C696;
    const double C50659 = C50658 + C50643;
    const double C11205 = C11198 * C50774;
    const double C11318 = C11312 * C50774;
    const double C13316 = C13309 + C13310;
    const double C13504 = C13502 + C13503;
    const double C50081 = C50069 - C50080;
    const double C2910 =
        (-3 * (C50019 * C50035 + C50050)) / C49744 +
        C50026 * ((-2 * C50089) / C49744 - (C50026 * C50107) / C49744);
    const double C3092 =
        C49874 * ((-2 * C50089) / C49744 - (C50026 * C50107) / C49744);
    const double C3444 = -(C50107 * C50127 + C50019 * C50035 + C50050) / C49744;
    const double C6452 =
        (-3 * (C50019 * C50127 + C50050)) / C49744 +
        C49874 * ((-2 * C50124) / C49744 - (C49874 * C50131) / C49744);
    const double C8619 =
        4 * ((-2 * C50091) / C49744 - (C50026 * C50110) / C49744) +
        C50026 * ((-3 * C50110) / C49744 + C50026 * C50169);
    const double C8793 = C49874 * ((-3 * C50110) / C49744 + C50026 * C50169);
    const double C9120 =
        (-2 * C50091) / C49744 - (C50026 * C50110) / C49744 + C50169 * C50127;
    const double C16749 =
        4 * ((-2 * C50133) / C49744 - (C49874 * C50138) / C49744) +
        C49874 * ((-3 * C50138) / C49744 + C49874 * C50252);
    const double C11192 = 5 * ((-3 * C50113) / C49744 + C50026 * C50177) +
                          C50026 * (4 * C50177 + C50026 * C50204);
    const double C11308 = C49874 * (4 * C50177 + C50026 * C50204);
    const double C11519 =
        (-3 * C50113) / C49744 + C50026 * C50177 + C50204 * C50127;
    const double C21766 = 5 * ((-3 * C50147) / C49744 + C49874 * C50272) +
                          C49874 * (4 * C50272 + C49874 * C50332);
    const double C178 = C165 + C166;
    const double C5249 = C5232 + C5233;
    const double C31694 = C31677 + C31678;
    const double C330 = C317 + C318;
    const double C5431 = C5414 + C5415;
    const double C15745 = C15732 + C15733;
    const double C31876 = C31859 + C31860;
    const double C478 = C465 + C466;
    const double C5241 = C5216 + C5217;
    const double C5615 = C5598 + C5599;
    const double C15556 = C15530 + C15531;
    const double C15927 = C15914 + C15915;
    const double C31686 = C31661 + C31662;
    const double C32060 = C32043 + C32044;
    const double C621 = C610 + C611;
    const double C5787 = C5774 + C5775;
    const double C16091 = C16084 + C16085;
    const double C32232 = C32219 + C32220;
    const double C1541 = C1530 + C1531;
    const double C5427 = C5406 + C5407;
    const double C6967 = C6954 + C6955;
    const double C15738 = C15718 + C15719;
    const double C17259 = C17252 + C17253;
    const double C31872 = C31851 + C31852;
    const double C33400 = C33387 + C33388;
    const double C978 = C967 + C968;
    const double C5611 = C5590 + C5591;
    const double C6201 = C6188 + C6189;
    const double C15549 = C15516 + C15517;
    const double C15920 = C15900 + C15901;
    const double C16499 = C16492 + C16493;
    const double C32056 = C32035 + C32036;
    const double C32646 = C32633 + C32634;
    const double C38134 = C38101 + C38102;
    const double C148 =
        4 * (2 * C49912 - (C49909 * ce) / C49882 + C49871 * C49940) -
        ((3 * C49909 + C49871 * C49937) * ce) / C49882 +
        C49871 *
            (3 * C49940 - (C49937 * ce) / C49882 +
             C49871 * (2 * C49938 - (C49932 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49926 * ce) / C49744) / C49806 -
                                 C49925 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49878, 7) *
                                              bs[7] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49926 * ce) / C49882))));
    const double C307 =
        (yP - yQ) * (2 * C49912 - (C49909 * ce) / C49882 + C49871 * C49940);
    const double C455 =
        (((-2 * (C49871 * C49992 + C49988 * ce)) / C49744 -
          (C49871 *
           (C49871 * (C49871 * C49897 * C49898 * C49987 + C49991 * ce) +
            C49992 + C49871 * C49991 * ce)) /
              C49744 -
          ((C49988 + C49991 * C49900) * ce) / C49744) *
         ae) /
            C49806 +
        C49874 * (2 * C49912 - (C49909 * ce) / C49882 + C49871 * C49940);
    const double C604 = (-(C49896 * ce) / C49744) / C49806 - C49893 / C49882 +
                        C49871 * C49912 + C49940 * std::pow(yP - yQ, 2);
    const double C837 =
        C49874 * C50026 * C49940 -
        (ae * C50026 * (C49871 * C50002 + C49992 + C49996 * ce)) / C49882;
    const double C961 = (-(C49896 * ce) / C49744) / C49806 - C49893 / C49882 +
                        C49871 * C49912 - (ae * C49874 * C50050) / C49882 +
                        C49874 * (C49874 * C49940 - (ae * C50050) / C49882);
    const double C17249 = C15505 * C3573;
    const double C29272 = C50954 * C3573;
    const double C35706 = C50954 * C3573;
    const double C39822 = C38090 * C3573;
    const double C6459 =
        3 * (C49912 - (ae * C50133) / C49882 + C49874 * C50139) +
        (((-2 * C50133) / C49744 - (C49874 * C50138) / C49744) * ae) / C49806 +
        C49874 *
            (2 * C50139 - (ae * C50138) / C49882 +
             C49874 * (C49938 - (ae * C49874 * C50014) / C49882 +
                       C49874 * (C49874 * C49971 - (ae * C50014) / C49882)));
    const double C2805 = C2796 + C2797;
    const double C13192 = C13178 + C13179;
    const double C35134 = C35125 + C35126;
    const double C3127 = C3116 + C3117;
    const double C5786 = C5772 + C5773;
    const double C14432 = C14426 + C14427;
    const double C16090 = C16082 + C16083;
    const double C32231 = C32217 + C32218;
    const double C35505 = C35491 + C35492;
    const double C3293 = C3286 + C3287;
    const double C6966 = C6952 + C6953;
    const double C15739 = C15720 + C15721;
    const double C17258 = C17250 + C17251;
    const double C29278 = C29273 + C29274;
    const double C33399 = C33385 + C33386;
    const double C35712 = C35707 + C35708;
    const double C38324 = C38305 + C38306;
    const double C6200 = C6186 + C6187;
    const double C15921 = C15902 + C15903;
    const double C16498 = C16490 + C16491;
    const double C32645 = C32631 + C32632;
    const double C38506 = C38487 + C38488;
    const double C11207 = C11202 + C11203;
    const double C11320 = C11316 + C11317;
    const double C13314 = C13306 + C13307;
    const double C44959 = C44951 + C44952;
    const double C11528 = C11525 + C11526;
    const double C13499 = C13486 + C13487;
    const double C18919 = C18912 + C18913;
    const double C45124 = C45117 + C45118;
    const double C47682 = C47675 + C47676;
    const double C13821 = C13812 + C13813;
    const double C19101 = C19088 + C19089;
    const double C45430 = C45425 + C45426;
    const double C47864 = C47851 + C47852;
    const double C19405 = C15505 * C13926;
    const double C48168 = C38090 * C13926;
    const double C16754 =
        4 * (2 * C50150 - (ae * C50147) / C49882 + C49874 * C50275) +
        (((-3 * C50147) / C49744 + C49874 * C50272) * ae) / C49806 +
        C49874 *
            (3 * C50275 + (C50272 * ae) / C49806 +
             C49874 *
                 (2 * C50271 - (ae * C50262) / C49882 +
                  C49874 *
                      ((-(ae * C49874 * C50008) / C49744) / C49806 - C49945 +
                       C49874 * ((-(C49874 * C49958) / C49744) / C49806 -
                                 (ae * C50008) / C49882))));
    const double C49976 = C49871 * C49975;
    const double C50115 = C50026 * C49975;
    const double C50125 = C49874 * C49975;
    const double C710 =
        2 * C50026 * C49940 + C50026 * (C49940 + C49975 * std::pow(C50026, 2));
    const double C840 =
        C49874 * (C49940 + C49975 * C50035) -
        (ae * (C50019 * C50035 + C49871 * C50002 + C49992 + C49996 * ce)) /
            C49882;
    const double C1093 =
        C50026 * C49940 - (ae * C49874 * C50089) / C49882 +
        C49874 * (C49874 * C50026 * C49975 - (ae * C50089) / C49882);
    const double C1179 =
        2 * (C49874 * C49940 - (ae * C50050) / C49882) -
        (ae * (C50019 * std::pow(C49874, 2) + C50050)) / C49882 +
        C49874 * (C49940 - (ae * C49874 * C50019) / C49882 +
                  C49874 * (C49874 * C49975 - (ae * C50019) / C49882));
    const double C2916 =
        3 * (C49940 + C49975 * C50035) +
        C50026 *
            (2 * C50026 * C49975 +
             C50026 *
                 (C49975 +
                  ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                   C49958 / C49882 +
                   C49871 * ((-(C49871 * std::pow(C49876, 8) * bs[8] * C49887) /
                              C49744) /
                                 C49806 -
                             (C49959 * ce) / C49882)) *
                      C50035));
    const double C3098 =
        (((-2 * C50089) / C49744 -
          (C50026 * (C50078 * C50035 + C50019)) / C49744) *
         ae) /
            C49806 +
        C49874 *
            (2 * C50026 * C49975 +
             C50026 *
                 (C49975 +
                  ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                   C49958 / C49882 +
                   C49871 * ((-(C49871 * std::pow(C49876, 8) * bs[8] * C49887) /
                              C49744) /
                                 C49806 -
                             (C49959 * ce) / C49882)) *
                      C50035));
    const double C3450 =
        C49940 + C49975 * C50035 - (ae * C49874 * C50107) / C49882 +
        C49874 *
            (C49874 *
                 (C49975 +
                  ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                   C49958 / C49882 +
                   C49871 * ((-(C49871 * std::pow(C49876, 8) * bs[8] * C49887) /
                              C49744) /
                                 C49806 -
                             (C49959 * ce) / C49882)) *
                      C50035) -
             (ae * C50107) / C49882);
    const double C8623 =
        4 * (2 * C50118 + C50026 * C50153) +
        C50026 *
            (3 * C50153 +
             C50026 * (2 * C50026 * C49971 +
                       C50026 * (C49971 + ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882) *
                                              C50035)));
    const double C8797 =
        (((-3 * C50110) / C49744 +
          C50026 * ((-2 * C50119) / C49744 -
                    (C50026 * (C50075 * C50035 + C50014)) / C49744)) *
         ae) /
            C49806 +
        C49874 *
            (3 * C50153 +
             C50026 * (2 * C50026 * C49971 +
                       C50026 * (C49971 + ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882) *
                                              C50035)));
    const double C9124 =
        2 * C50118 + C50026 * C50153 + (C49874 * C50169 * ae) / C49806 +
        C49874 *
            ((C50169 * ae) / C49806 +
             C49874 * (2 * C50026 * C49971 +
                       C50026 * (C49971 + ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882) *
                                              C50035)));
    const double C9240 =
        2 * (C49874 * C50153 - (ae * C50110) / C49882) -
        (ae * (C50166 * C50127 + C50110)) / C49882 +
        C49874 *
            (C50153 - (ae * C49874 * C50166) / C49882 +
             C49874 * (C49874 * (C49971 + ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882) *
                                              C50035) -
                       (ae * C50166) / C49882));
    const double C50233 = C50230 - C50231;
    const double C50249 = C49874 * C50245;
    const double C8514 = C8509 + C8510;
    const double C8815 = C8808 + C8809;
    const double C13193 = C13180 + C13181;
    const double C35133 = C35123 + C35124;
    const double C8972 = C8969 + C8970;
    const double C14433 = C14428 + C14429;
    const double C16089 = C16080 + C16081;
    const double C35506 = C35493 + C35494;
    const double C38674 = C38665 + C38666;
    const double C11194 =
        5 * (3 * C50159 + C50026 * C50190) +
        C50026 * (4 * C50190 +
                  C50026 * (3 * C50188 +
                            C50026 * ((-2 * C50026 * C49958) / C49882 +
                                      C50026 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49887 * C50035) /
                                                 C49744) /
                                                    C49806 -
                                                C49958 / C49882))));
    const double C11310 =
        ((4 * C50177 +
          C50026 *
              ((-3 * C50174) / C49744 +
               C50026 * ((-2 * C50026 * C50008) / C49744 -
                         (C50026 * (C50070 * C50035 + C50008)) / C49744))) *
         ae) /
            C49806 +
        C49874 * (4 * C50190 +
                  C50026 * (3 * C50188 +
                            C50026 * ((-2 * C50026 * C49958) / C49882 +
                                      C50026 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49887 * C50035) /
                                                 C49744) /
                                                    C49806 -
                                                C49958 / C49882))));
    const double C11521 =
        3 * C50159 + C50026 * C50190 + (C49874 * C50204 * ae) / C49806 +
        C49874 * ((C50204 * ae) / C49806 +
                  C49874 * (3 * C50188 +
                            C50026 * ((-2 * C50026 * C49958) / C49882 +
                                      C50026 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49887 * C50035) /
                                                 C49744) /
                                                    C49806 -
                                                C49958 / C49882))));
    const double C11599 =
        2 * ((C50177 * ae) / C49806 + C49874 * C50190) +
        ((C50177 + C50202 * C50127) * ae) / C49806 +
        C49874 * (C50190 + (C49874 * C50202 * ae) / C49806 +
                  C49874 * ((C50202 * ae) / C49806 +
                            C49874 * ((-2 * C50026 * C49958) / C49882 +
                                      C50026 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49887 * C50035) /
                                                 C49744) /
                                                    C49806 -
                                                C49958 / C49882))));
    const double C13925 =
        3 * (C50159 - (ae * C50207) / C49882 + C49874 * C50213) +
        (((-2 * C50207) / C49744 - (C49874 * C50212) / C49744) * ae) / C49806 +
        C49874 * (2 * C50213 - (ae * C50212) / C49882 +
                  C49874 * (C50188 - (ae * C49874 * C50198) / C49882 +
                            C49874 * (C49874 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49887 * C50035) /
                                                 C49744) /
                                                    C49806 -
                                                C49958 / C49882) -
                                      (ae * C50198) / C49882)));
    const double C50301 = C50297 + C50300;
    const double C50333 = C49874 * C50331;
    const double C2792 = C622 * C49770;
    const double C2788 = C620 * C49770;
    const double C2776 = C329 * C49770;
    const double C2772 = C327 * C49770;
    const double C2768 = C2472 * C49770;
    const double C2809 = C2803 * C49770;
    const double C4806 = C1542 * C49770;
    const double C4802 = C1540 * C49770;
    const double C4798 = C3123 * C49770;
    const double C8505 = C2804 * C49770;
    const double C8501 = C2940 * C49770;
    const double C10452 = C3126 * C49770;
    const double C10448 = C3124 * C49770;
    const double C11121 = C8640 * C49770;
    const double C12404 = C8812 * C49770;
    const double C13182 = C13162 * C49770;
    const double C118 =
        ((((0 - (C49742 * C49743) / C49744) * ce) / C49744 - (0 * de) / C49753 +
          C49745 / C49744) /
             C49749 -
         ((C49742 * C49766 + 0) * de) / C49744) /
            C49749 -
        ((C49742 * (C49766 / C49749 -
                    ((C49742 * C49770 + C51031) * de) / C49744 + C49763) +
          C51089) *
         de) /
            C49744 +
        C49770 / C49749 - ((C49742 * C49763 + C50759) * de) / C49744;
    const double C119 =
        (C49766 / C49749 - ((C49742 * C49770 + C51031) * de) / C49744 +
         C49763) /
            C49749 -
        ((C49742 *
              (C49770 / C49749 - ((C49742 * C49763 + C50759) * de) / C49744) +
          C51073) *
         de) /
            C49744 +
        2 * (C49763 / C49749 - (0 * de) / C49744);
    const double C120 =
        (C49770 / C49749 - ((C49742 * C49763 + C50759) * de) / C49744) /
            C49749 -
        ((C49742 * (C49763 / C49749 - (0 * de) / C49744) + C1282) * de) /
            C49744;
    const double C1285 =
        C49766 / C49749 - ((C49742 * C49770 + C51031) * de) / C49744 + C49763;
    const double C1286 =
        C49770 / C49749 - ((C49742 * C49763 + C50759) * de) / C49744;
    const double C9557 = C9547 - C3898;
    const double C11809 = C11804 - C9549;
    const double C14225 = C14224 - C14222;
    const double C21041 =
        ((((0 - (C49805 * C49830) / C49806) * ae) / C49806 - (0 * be) / C49835 +
          C49815 / C49806) /
             C49814 -
         ((C49805 * C49849 + 0) * be) / C49806) /
            C49814 -
        ((C49805 * (C49849 / C49814 -
                    ((C49805 * C49850 + C51060) * be) / C49806 + C49844) +
          C51094) *
         be) /
            C49806 +
        C49850 / C49814 - ((C49805 * C49844 + C50954) * be) / C49806;
    const double C21042 =
        (C49849 / C49814 - ((C49805 * C49850 + C51060) * be) / C49806 +
         C49844) /
            C49814 -
        ((C49805 *
              (C49850 / C49814 - ((C49805 * C49844 + C50954) * be) / C49806) +
          C51088) *
         be) /
            C49806 +
        2 * (C49844 / C49814 - (0 * be) / C49806);
    const double C21043 =
        (C49850 / C49814 - ((C49805 * C49844 + C50954) * be) / C49806) /
            C49814 -
        ((C49805 * (C49844 / C49814 - (0 * be) / C49806) + C38090) * be) /
            C49806;
    const double C38091 =
        C49849 / C49814 - ((C49805 * C49850 + C51060) * be) / C49806 + C49844;
    const double C38092 =
        C49850 / C49814 - ((C49805 * C49844 + C50954) * be) / C49806;
    const double C31697 = C31687 + C31688;
    const double C31695 = C31683 + C31684;
    const double C31881 = C31873 + C31874;
    const double C34711 = C31874 + C31873;
    const double C34713 = C31869 + C31870;
    const double C34709 = C31870 + C31869;
    const double C32065 = C32057 + C32058;
    const double C35118 = C32229 + C32230;
    const double C35107 = C32230 + C32229;
    const double C36698 = C33397 + C33398;
    const double C36695 = C33398 + C33397;
    const double C44833 = C35130 + C35129;
    const double C44834 = C35128 + C35127;
    const double C44943 = C35276 + C35275;
    const double C44944 = C35274 + C35273;
    const double C45109 = C35502 + C35501;
    const double C45110 = C35500 + C35499;
    const double C50059 = C50058 - C50057;
    const double C21767 =
        (5 * (3 * C50619 + C49874 * C50659 + C50618 * ae) +
         C49874 * (4 * C50659 +
                   C49874 * (3 * C50654 +
                             C49874 * (2 * C50646 +
                                       C49874 * (C49926 +
                                                 C49874 * (C49874 * C49959 +
                                                           C50007 * ae) +
                                                 C49874 * C50007 * ae) +
                                       C50648 * ae) +
                             C50653 * ae) +
                   C50657 * ae) +
         (4 * C50618 + C49874 * C50657) * ae) /
        C49806;
    const double C13317 = C13316 * C50774;
    const double C13505 = C13504 * C50774;
    const double C50082 = C50081 - C50072;
    const double C2467 = C330 * C278;
    const double C2463 = C330 * C279;
    const double C2459 = C330 * C280;
    const double C2777 = C330 * C51031;
    const double C2775 = C330 * C50759;
    const double C2925 = C330 * C50754;
    const double C3735 = C330 * C51089;
    const double C3731 = C330 * C51073;
    const double C3727 = C330 * C1282;
    const double C3895 = C330 * C1386;
    const double C3893 = C330 * C50759;
    const double C5251 = C5240 + C5241;
    const double C31696 = C31685 + C31686;
    const double C2787 = C621 * C51031;
    const double C2785 = C621 * C50759;
    const double C2928 = C621 * C50754;
    const double C3903 = C621 * C1386;
    const double C3901 = C621 * C50759;
    const double C8200 = C621 * C278;
    const double C8196 = C621 * C279;
    const double C9396 = C621 * C51089;
    const double C9392 = C621 * C51073;
    const double C3104 = C1541 * C50754;
    const double C4109 = C1541 * C1386;
    const double C4107 = C1541 * C50759;
    const double C4801 = C1541 * C51031;
    const double C4799 = C1541 * C50759;
    const double C28358 = C5426 + C5427;
    const double C28354 = C5427 + C5426;
    const double C34714 = C31871 + C31872;
    const double C34710 = C31872 + C31871;
    const double C170 = C50942 * C148;
    const double C322 = C50942 * C307;
    const double C5423 = C51060 * C307;
    const double C31868 = C31642 * C307;
    const double C470 = C50942 * C455;
    const double C5223 = C50954 * C455;
    const double C5607 = C51060 * C455;
    const double C15543 = C15504 * C455;
    const double C31668 = C50954 * C455;
    const double C32052 = C31642 * C455;
    const double C38128 = C51088 * C455;
    const double C615 = C50942 * C604;
    const double C5783 = C51060 * C604;
    const double C32228 = C31642 * C604;
    const double C1535 = C50942 * C837;
    const double C5413 = C50954 * C837;
    const double C6963 = C51060 * C837;
    const double C15731 = C15504 * C837;
    const double C31858 = C50954 * C837;
    const double C33396 = C31642 * C837;
    const double C38316 = C51088 * C837;
    const double C972 = C50942 * C961;
    const double C5597 = C50954 * C961;
    const double C6197 = C51060 * C961;
    const double C15533 = C15505 * C961;
    const double C15913 = C15504 * C961;
    const double C32042 = C50954 * C961;
    const double C32642 = C31642 * C961;
    const double C38118 = C38090 * C961;
    const double C38498 = C51088 * C961;
    const double C17257 = C17248 + C17249;
    const double C29277 = C29271 + C29272;
    const double C35711 = C35705 + C35706;
    const double C39830 = C39821 + C39822;
    const double C16489 = C15505 * C6459;
    const double C39074 = C38090 * C6459;
    const double C2937 = C2805 * C50754;
    const double C8504 = C2805 * C51031;
    const double C8502 = C2805 * C50759;
    const double C9554 = C2805 * C1386;
    const double C9552 = C2805 * C50759;
    const double C10918 = C2805 * C279;
    const double C11702 = C2805 * C51073;
    const double C3135 = C3127 * C50754;
    const double C9763 = C3127 * C1386;
    const double C9761 = C3127 * C50759;
    const double C10451 = C3127 * C51031;
    const double C10449 = C3127 * C50759;
    const double C13165 = C5786 + C5787;
    const double C28748 = C5787 + C5786;
    const double C35117 = C32231 + C32232;
    const double C35116 = C32232 + C32231;
    const double C3459 = C3293 * C50754;
    const double C30251 = C6966 + C6967;
    const double C30250 = C6967 + C6966;
    const double C36697 = C33399 + C33400;
    const double C36696 = C33400 + C33399;
    const double C11209 = C11207 * C50754;
    const double C11322 = C11320 * C50754;
    const double C11530 = C11528 * C50754;
    const double C19411 = C19404 + C19405;
    const double C48174 = C48167 + C48168;
    const double C49977 = C49956 + C49976;
    const double C3572 =
        2 * (C49874 * C50115 - (ae * C50089) / C49882) -
        (ae * (C50116 * std::pow(C49874, 2) + C50089)) / C49882 +
        C49874 * (C50115 - (ae * C49874 * C50116) / C49882 +
                  C49874 * (C49874 * C50026 *
                                ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882)) -
                            (ae * C50116) / C49882));
    const double C50130 = C50125 - C50128;
    const double C2801 = C50942 * C710;
    const double C3121 = C50942 * C840;
    const double C5781 = C50954 * C840;
    const double C32226 = C50954 * C840;
    const double C3291 = C50942 * C1093;
    const double C6961 = C50954 * C1093;
    const double C15729 = C15505 * C1093;
    const double C33394 = C50954 * C1093;
    const double C38314 = C38090 * C1093;
    const double C6195 = C50954 * C1179;
    const double C15911 = C15505 * C1179;
    const double C32640 = C50954 * C1179;
    const double C38496 = C38090 * C1179;
    const double C16648 =
        3 * (C50118 - (ae * C50226) / C49882 + C49874 * C50233) +
        (((-2 * C50226) / C49744 - (C49874 * C50234) / C49744) * ae) / C49806 +
        C49874 * (2 * C50233 - (ae * C50234) / C49882 +
                  C49874 * (C50227 - (ae * C49874 * C50229) / C49882 +
                            C49874 * (C49874 * C50026 *
                                          ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882) -
                                      (ae * C50229) / C49882)));
    const double C50251 = C50248 + C50249;
    const double C8635 = C8514 * C50754;
    const double C11122 = C8514 * C50759;
    const double C11808 = C8514 * C50759;
    const double C8820 = C8815 * C50754;
    const double C11945 = C8815 * C50759;
    const double C12405 = C8815 * C50759;
    const double C9132 = C8972 * C50754;
    const double C19512 =
        4 * (2 * C50224 - (ae * C50221) / C49882 + C49874 * C50301) +
        (((-3 * C50221) / C49744 + C49874 * C50299) * ae) / C49806 +
        C49874 *
            (3 * C50301 + (C50299 * ae) / C49806 +
             C49874 *
                 (2 * C50298 - (ae * C50290) / C49882 +
                  C49874 * ((-(ae * C49874 * C50281) / C49744) / C49806 -
                            C50279 / C49882 +
                            C49874 * ((-(C49874 * C50026 * std::pow(C49876, 8) *
                                         bs[8] * C49887) /
                                       C49744) /
                                          C49806 -
                                      (ae * C50281) / C49882))));
    const double C50334 = C50317 + C50333;
    const double C8497 = C2809 + C2808;
    const double C11118 = C8501 + C8500;
    const double C13194 = C13182 + C13183;
    const double C3734 = C329 * C1285;
    const double C3728 = C327 * C1285;
    const double C3722 = C2472 * C1285;
    const double C9395 = C620 * C1285;
    const double C9389 = C2803 * C1285;
    const double C11699 = C2940 * C1285;
    const double C3736 = C331 * C1286;
    const double C3730 = C329 * C1286;
    const double C3724 = C327 * C1286;
    const double C9397 = C622 * C1286;
    const double C9391 = C620 * C1286;
    const double C11701 = C2804 * C1286;
    const double C38129 = C38091 * C136;
    const double C38123 = C38091 * C125;
    const double C38113 = C38091 * C134;
    const double C38107 = C38091 * C124;
    const double C38105 = C38091 * C132;
    const double C38099 = C38091 * C123;
    const double C38317 = C38091 * C297;
    const double C38311 = C38091 * C288;
    const double C38301 = C38091 * C295;
    const double C38295 = C38091 * C286;
    const double C38499 = C38091 * C445;
    const double C38493 = C38091 * C436;
    const double C38483 = C38091 * C443;
    const double C38477 = C38091 * C434;
    const double C38669 = C38091 * C595;
    const double C38663 = C38091 * C588;
    const double C39077 = C38091 * C952;
    const double C39071 = C38091 * C945;
    const double C39825 = C38091 * C822;
    const double C39819 = C38091 * C812;
    const double C47245 = C38091 * C293;
    const double C47239 = C38091 * C287;
    const double C47559 = C38091 * C587;
    const double C47553 = C38091 * C593;
    const double C47671 = C38091 * C707;
    const double C47665 = C38091 * C700;
    const double C47847 = C38091 * C833;
    const double C47841 = C38091 * C818;
    const double C47839 = C38091 * C811;
    const double C47833 = C38091 * C820;
    const double C48163 = C38091 * C1090;
    const double C48157 = C38091 * C1083;
    const double C38127 = C38092 * C447;
    const double C38121 = C38092 * C437;
    const double C38115 = C38092 * C445;
    const double C38109 = C38092 * C436;
    const double C38103 = C38092 * C443;
    const double C38097 = C38092 * C434;
    const double C38315 = C38092 * C824;
    const double C38309 = C38092 * C813;
    const double C38303 = C38092 * C822;
    const double C38297 = C38092 * C812;
    const double C38497 = C38092 * C954;
    const double C38491 = C38092 * C946;
    const double C38485 = C38092 * C952;
    const double C38479 = C38092 * C945;
    const double C38667 = C38092 * C831;
    const double C38661 = C38092 * C817;
    const double C39075 = C38092 * C1174;
    const double C39069 = C38092 * C1168;
    const double C39823 = C38092 * C1088;
    const double C39817 = C38092 * C1082;
    const double C47247 = C38092 * C820;
    const double C47241 = C38092 * C811;
    const double C47557 = C38092 * C818;
    const double C47551 = C38092 * C833;
    const double C47673 = C38092 * C3096;
    const double C47667 = C38092 * C3091;
    const double C47849 = C38092 * C3448;
    const double C47843 = C38092 * C3443;
    const double C47837 = C38092 * C1083;
    const double C47831 = C38092 * C1090;
    const double C48165 = C38092 * C3570;
    const double C48159 = C38092 * C3565;
    const double C44835 = C35118 * C49763;
    const double C45823 = C35118 * C1392;
    const double C44837 = C44833 * C49770;
    const double C44941 = C44833 * C696;
    const double C45821 = C44833 * C1391;
    const double C44838 = C44834 * C51031;
    const double C44942 = C44834 * C50754;
    const double C45822 = C44834 * C1386;
    const double C44954 = C44943 * C50754;
    const double C44955 = C44944 * C696;
    const double C45119 = C45109 * C50754;
    const double C45120 = C45110 * C696;
    const double C140 =
        4 * ((-2 * C50045) / C49744 - (C49871 * C50050) / C49744 -
             (C50350 * ce) / C49744) +
        C49871 * ((-3 * C50050) / C49744 + C49871 * C50059 -
                  (C50355 * ce) / C49744) -
        ((3 * C50350 + C49871 * C50355) * ce) / C49744;
    const double C301 = C50026 * ((-3 * C50050) / C49744 + C49871 * C50059 -
                                  (C50355 * ce) / C49744);
    const double C449 = C49874 * ((-3 * C50050) / C49744 + C49871 * C50059 -
                                  (C50355 * ce) / C49744);
    const double C599 = (-2 * C50045) / C49744 - (C49871 * C50050) / C49744 -
                        (C50350 * ce) / C49744 + C50059 * C50035;
    const double C826 = C49874 * C50026 * C50059;
    const double C956 = (-2 * C50045) / C49744 - (C49871 * C50050) / C49744 -
                        (C50350 * ce) / C49744 + C50059 * C50127;
    const double C50083 = C49871 * C50082;
    const double C50087 = C50026 * C50082;
    const double C701 =
        2 * C50026 * C50059 + C50026 * (C50059 + C50082 * C50035);
    const double C827 = C49874 * (C50059 + C50082 * C50035);
    const double C1170 =
        2 * C49874 * C50059 + C49874 * (C50059 + C50082 * C50127);
    const double C8498 = C2788 + C2787;
    const double C8627 = C2929 + C2928;
    const double C9548 = C3904 + C3903;
    const double C9559 = C9557 - C3901;
    const double C332 = C321 + C322;
    const double C5435 = C5422 + C5423;
    const double C31880 = C31867 + C31868;
    const double C480 = C469 + C470;
    const double C5244 = C5222 + C5223;
    const double C5619 = C5606 + C5607;
    const double C15562 = C15542 + C15543;
    const double C31689 = C31667 + C31668;
    const double C32064 = C32051 + C32052;
    const double C623 = C614 + C615;
    const double C5791 = C5782 + C5783;
    const double C32236 = C32227 + C32228;
    const double C1543 = C1534 + C1535;
    const double C5430 = C5412 + C5413;
    const double C6971 = C6962 + C6963;
    const double C15744 = C15730 + C15731;
    const double C31875 = C31857 + C31858;
    const double C33404 = C33395 + C33396;
    const double C980 = C971 + C972;
    const double C5614 = C5596 + C5597;
    const double C6205 = C6196 + C6197;
    const double C15557 = C15532 + C15533;
    const double C15926 = C15912 + C15913;
    const double C32059 = C32041 + C32042;
    const double C32650 = C32641 + C32642;
    const double C38142 = C38117 + C38118;
    const double C16497 = C16488 + C16489;
    const double C39082 = C39073 + C39074;
    const double C8628 = C2937 + C2936;
    const double C11810 = C11809 - C9552;
    const double C8800 = C3135 + C3134;
    const double C13185 = C13165 * C50759;
    const double C14223 = C13165 * C50759;
    const double C44836 = C35117 * C50759;
    const double C45824 = C35117 * C50759;
    const double C149 =
        5 * (3 * C49940 - (C49937 * ce) / C49882 + C49871 * C49977) -
        ((4 * C49937 + C49871 * C49974) * ce) / C49882 +
        C49871 *
            (4 * C49977 - (C49974 * ce) / C49882 +
             C49871 *
                 (3 * C49975 - (C49970 * ce) / C49882 +
                  C49871 *
                      (2 * C49971 - (C49965 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882)))));
    const double C308 =
        (yP - yQ) * (3 * C49940 - (C49937 * ce) / C49882 + C49871 * C49977);
    const double C309 =
        (yP - yQ) *
        (4 * C49977 - (C49974 * ce) / C49882 +
         C49871 *
             (3 * C49975 - (C49970 * ce) / C49882 +
              C49871 * (2 * C49971 - (C49965 * ce) / C49882 +
                        C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                  C49958 / C49882 +
                                  C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                               bs[8] * C49887) /
                                             C49744) /
                                                C49806 -
                                            (C49959 * ce) / C49882)))));
    const double C456 =
        (((-3 * (C49871 * C50002 + C49992 + C49996 * ce)) / C49744 +
          C49871 * ((-2 * C50002) / C49744 -
                    (C49871 * (C49871 * (C49871 * C49916 * C49917 * C49987 +
                                         C49997 * ce) +
                               C49998 + C49871 * C49997 * ce)) /
                        C49744 -
                    (C50001 * ce) / C49744) -
          ((2 * C49996 + C49871 * C50001) * ce) / C49744) *
         ae) /
            C49806 +
        C49874 * (3 * C49940 - (C49937 * ce) / C49882 + C49871 * C49977);
    const double C457 =
        ((4 * ((-2 * C50002) / C49744 - (C49871 * C50019) / C49744 -
               (C50001 * ce) / C49744) +
          C49871 * ((-3 * C50019) / C49744 +
                    C49871 * ((-2 * C50014) / C49744 -
                              (C49871 *
                               (C49871 * (C49871 * C49946 * C49947 * C49987 +
                                          C50007 * ce) +
                                C50008 + C49871 * C50007 * ce)) /
                                  C49744 -
                              (C50013 * ce) / C49744) -
                    (C50017 * ce) / C49744) -
          ((3 * C50001 + C49871 * C50017) * ce) / C49744) *
         ae) /
            C49806 +
        C49874 *
            (4 * C49977 - (C49974 * ce) / C49882 +
             C49871 *
                 (3 * C49975 - (C49970 * ce) / C49882 +
                  C49871 *
                      (2 * C49971 - (C49965 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882)))));
    const double C605 = 2 * C49912 - (C49909 * ce) / C49882 + C49871 * C49940 +
                        C49977 * std::pow(yP - yQ, 2);
    const double C606 =
        3 * C49940 - (C49937 * ce) / C49882 + C49871 * C49977 +
        (3 * C49975 - (C49970 * ce) / C49882 +
         C49871 *
             (2 * C49971 - (C49965 * ce) / C49882 +
              C49871 *
                  ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                   C49958 / C49882 +
                   C49871 * ((-(C49871 * std::pow(C49876, 8) * bs[8] * C49887) /
                              C49744) /
                                 C49806 -
                             (C49959 * ce) / C49882)))) *
            std::pow(yP - yQ, 2);
    const double C709 =
        2 * C50026 * C49977 +
        C50026 *
            (C49977 +
             (2 * C49971 - (C49965 * ce) / C49882 +
              C49871 *
                  ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                   C49958 / C49882 +
                   C49871 * ((-(C49871 * std::pow(C49876, 8) * bs[8] * C49887) /
                              C49744) /
                                 C49806 -
                             (C49959 * ce) / C49882))) *
                 std::pow(C50026, 2));
    const double C838 = (C50026 *
                         ((-2 * C50002) / C49744 - (C49871 * C50019) / C49744 -
                          (C50001 * ce) / C49744) *
                         ae) /
                            C49806 +
                        C49874 * C50026 * C49977;
    const double C839 =
        (((-2 * C50002) / C49744 - (C49871 * C50019) / C49744 -
          (C50001 * ce) / C49744 +
          ((-2 * C50014) / C49744 -
           (C49871 *
            (C49871 * (C49871 * C49946 * C49947 * C49987 + C50007 * ce) +
             C50008 + C49871 * C50007 * ce)) /
               C49744 -
           (C50013 * ce) / C49744) *
              C50035) *
         ae) /
            C49806 +
        C49874 *
            (C49977 +
             (2 * C49971 - (C49965 * ce) / C49882 +
              C49871 *
                  ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                   C49958 / C49882 +
                   C49871 * ((-(C49871 * std::pow(C49876, 8) * bs[8] * C49887) /
                              C49744) /
                                 C49806 -
                             (C49959 * ce) / C49882))) *
                 C50035);
    const double C962 = 2 * C49912 - (C49909 * ce) / C49882 + C49871 * C49940 +
                        (C49874 * C50059 * ae) / C49806 +
                        C49874 * ((C50059 * ae) / C49806 + C49874 * C49977);
    const double C1178 =
        2 * ((C50059 * ae) / C49806 + C49874 * C49977) +
        ((C50059 + C50082 * std::pow(C49874, 2)) * ae) / C49806 +
        C49874 *
            (C49977 + (C49874 * C50082 * ae) / C49806 +
             C49874 *
                 ((C50082 * ae) / C49806 +
                  C49874 *
                      (2 * C49971 - (C49965 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882)))));
    const double C6458 =
        3 * (C49940 - (ae * C50124) / C49882 + C49874 * C50130) +
        (((-2 * C50124) / C49744 - (C49874 * C50131) / C49744) * ae) / C49806 +
        C49874 *
            (2 * C50130 - (ae * C50131) / C49882 +
             C49874 *
                 (C49975 - (ae * C49874 * C50078) / C49882 +
                  C49874 *
                      (C49874 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882)) -
                       (ae * C50078) / C49882)));
    const double C2807 = C2800 + C2801;
    const double C3129 = C3120 + C3121;
    const double C5790 = C5780 + C5781;
    const double C32235 = C32225 + C32226;
    const double C3295 = C3290 + C3291;
    const double C6970 = C6960 + C6961;
    const double C15743 = C15728 + C15729;
    const double C33403 = C33393 + C33394;
    const double C38328 = C38313 + C38314;
    const double C6204 = C6194 + C6195;
    const double C15925 = C15910 + C15911;
    const double C32649 = C32639 + C32640;
    const double C38510 = C38495 + C38496;
    const double C16753 =
        4 * (2 * C50139 - (ae * C50138) / C49882 + C49874 * C50251) +
        (((-3 * C50138) / C49744 + C49874 * C50252) * ae) / C49806 +
        C49874 *
            (3 * C50251 + (C50252 * ae) / C49806 +
             C49874 *
                 (2 * C50245 - (ae * C50243) / C49882 +
                  C49874 *
                      (C49971 - (ae * C49874 * C50075) / C49882 +
                       C49874 * (C49874 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882) -
                                 (ae * C50075) / C49882))));
    const double C21768 =
        5 * (3 * C50275 + (C50272 * ae) / C49806 + C49874 * C50334) +
        ((4 * C50272 + C49874 * C50332) * ae) / C49806 +
        C49874 *
            (4 * C50334 + (C50332 * ae) / C49806 +
             C49874 *
                 (3 * C50331 + (C50327 * ae) / C49806 +
                  C49874 *
                      (2 * C50326 - (ae * C50316) / C49882 +
                       C49874 * ((-(ae * C49874 * C50070) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49874 * ((-(C49874 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (ae * C50070) / C49882)))));
    const double C8511 = C8497 - C2780;
    const double C11123 = C11118 - C8499;
    const double C13195 = C13194 - C13184;
    const double C38148 = C38129 + C38130;
    const double C38145 = C38123 + C38124;
    const double C38140 = C38113 + C38114;
    const double C38137 = C38107 + C38108;
    const double C38136 = C38105 + C38106;
    const double C38133 = C38099 + C38100;
    const double C38330 = C38317 + C38318;
    const double C38327 = C38311 + C38312;
    const double C38322 = C38301 + C38302;
    const double C38319 = C38295 + C38296;
    const double C38512 = C38499 + C38500;
    const double C38509 = C38493 + C38494;
    const double C38504 = C38483 + C38484;
    const double C38501 = C38477 + C38478;
    const double C38676 = C38669 + C38670;
    const double C38673 = C38663 + C38664;
    const double C39084 = C39077 + C39078;
    const double C39081 = C39071 + C39072;
    const double C39832 = C39825 + C39826;
    const double C39829 = C39819 + C39820;
    const double C47254 = C47245 + C47246;
    const double C47251 = C47239 + C47240;
    const double C47566 = C47559 + C47560;
    const double C47563 = C47553 + C47554;
    const double C47680 = C47671 + C47672;
    const double C47677 = C47665 + C47666;
    const double C47862 = C47847 + C47848;
    const double C47859 = C47841 + C47842;
    const double C47858 = C47839 + C47840;
    const double C47855 = C47833 + C47834;
    const double C48172 = C48163 + C48164;
    const double C48169 = C48157 + C48158;
    const double C38147 = C38127 + C38128;
    const double C38144 = C38121 + C38122;
    const double C38141 = C38115 + C38116;
    const double C38138 = C38109 + C38110;
    const double C38135 = C38103 + C38104;
    const double C38132 = C38097 + C38098;
    const double C38329 = C38315 + C38316;
    const double C38326 = C38309 + C38310;
    const double C38323 = C38303 + C38304;
    const double C38320 = C38297 + C38298;
    const double C38511 = C38497 + C38498;
    const double C38508 = C38491 + C38492;
    const double C38505 = C38485 + C38486;
    const double C38502 = C38479 + C38480;
    const double C38675 = C38667 + C38668;
    const double C38672 = C38661 + C38662;
    const double C39083 = C39075 + C39076;
    const double C39080 = C39069 + C39070;
    const double C39831 = C39823 + C39824;
    const double C39828 = C39817 + C39818;
    const double C47255 = C47247 + C47248;
    const double C47252 = C47241 + C47242;
    const double C47565 = C47557 + C47558;
    const double C47562 = C47551 + C47552;
    const double C47681 = C47673 + C47674;
    const double C47678 = C47667 + C47668;
    const double C47863 = C47849 + C47850;
    const double C47860 = C47843 + C47844;
    const double C47857 = C47837 + C47838;
    const double C47854 = C47831 + C47832;
    const double C48173 = C48165 + C48166;
    const double C48170 = C48159 + C48160;
    const double C44839 = C44837 + C44838;
    const double C44953 = C44941 + C44942;
    const double C45825 = C45821 + C45822;
    const double C44961 = C44954 + C44955;
    const double C45125 = C45119 + C45120;
    const double C169 = C117 * C140;
    const double C325 = C117 * C301;
    const double C473 = C117 * C449;
    const double C5230 = C5200 * C449;
    const double C31675 = C31645 * C449;
    const double C618 = C117 * C599;
    const double C1538 = C117 * C826;
    const double C5420 = C5200 * C826;
    const double C31865 = C31645 * C826;
    const double C975 = C117 * C956;
    const double C5604 = C5200 * C956;
    const double C15540 = C15508 * C956;
    const double C32049 = C31645 * C956;
    const double C38125 = C38093 * C956;
    const double C50084 = C50068 + C50083;
    const double C1092 =
        C50026 * C49977 + (C49874 * C50087 * ae) / C49806 +
        C49874 * ((C50087 * ae) / C49806 +
                  C49874 * C50026 *
                      (2 * C49971 - (C49965 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882))));
    const double C1084 = C50026 * C50059 + C50087 * C50127;
    const double C8512 = C8498 - C2786;
    const double C8637 = C8627 * C50779;
    const double C26024 = C8627 * C50779;
    const double C9558 = C9548 - C3902;
    const double C9561 = C9559 * C51038;
    const double C11803 = C9559 * C50774;
    const double C26860 = C9559 * C25478;
    const double C2469 = C332 * C279;
    const double C2465 = C332 * C280;
    const double C2779 = C332 * C50759;
    const double C3737 = C332 * C51073;
    const double C3733 = C332 * C1282;
    const double C3897 = C332 * C50759;
    const double C5253 = C5244 + C5245;
    const double C31698 = C31689 + C31690;
    const double C2791 = C623 * C51031;
    const double C2789 = C623 * C50759;
    const double C2926 = C623 * C50754;
    const double C3907 = C623 * C1386;
    const double C3905 = C623 * C50759;
    const double C8202 = C623 * C279;
    const double C8198 = C623 * C280;
    const double C9398 = C623 * C51073;
    const double C9394 = C623 * C1282;
    const double C3102 = C1543 * C50754;
    const double C4113 = C1543 * C1386;
    const double C4111 = C1543 * C50759;
    const double C4805 = C1543 * C51031;
    const double C4803 = C1543 * C50759;
    const double C5437 = C5430 + C5431;
    const double C28356 = C5431 + C5430;
    const double C31882 = C31875 + C31876;
    const double C34712 = C31876 + C31875;
    const double C5621 = C5614 + C5615;
    const double C32066 = C32059 + C32060;
    const double C8638 = C8628 * C50779;
    const double C26025 = C8628 * C50779;
    const double C11811 = C11810 * C50774;
    const double C8810 = C8800 * C50779;
    const double C26175 = C8800 * C50779;
    const double C14226 = C14225 - C14223;
    const double C326 = C50942 * C308;
    const double C474 = C50942 * C456;
    const double C5231 = C50954 * C456;
    const double C31676 = C50954 * C456;
    const double C619 = C50942 * C605;
    const double C1539 = C50942 * C838;
    const double C5421 = C50954 * C838;
    const double C31866 = C50954 * C838;
    const double C976 = C50942 * C962;
    const double C5605 = C50954 * C962;
    const double C15541 = C15505 * C962;
    const double C32050 = C50954 * C962;
    const double C38126 = C38090 * C962;
    const double C2939 = C2807 * C50754;
    const double C8506 = C2807 * C50759;
    const double C9556 = C2807 * C50759;
    const double C10920 = C2807 * C280;
    const double C11704 = C2807 * C1282;
    const double C3137 = C3129 * C50754;
    const double C9765 = C3129 * C50759;
    const double C10453 = C3129 * C50759;
    const double C3461 = C3295 * C50754;
    const double C8515 = C8511 - C2785;
    const double C11124 = C11123 - C8502;
    const double C13196 = C13195 - C13185;
    const double C44840 = C44839 - C44835;
    const double C44960 = C44953 * C50774;
    const double C45826 = C45825 - C45823;
    const double C44962 = C44961 * C50774;
    const double C45126 = C45125 * C50774;
    const double C180 = C169 + C170;
    const double C50085 = C50084 - C50073;
    const double C8642 = C8636 + C8637;
    const double C26027 = C26023 + C26024;
    const double C8516 = C8512 - C2789;
    const double C9560 = C9558 - C3905;
    const double C8643 = C8638 + C8639;
    const double C26028 = C26025 + C26026;
    const double C8816 = C8810 + C8811;
    const double C26177 = C26175 + C26176;
    const double C14227 = C14226 * C50774;
    const double C334 = C325 + C326;
    const double C482 = C473 + C474;
    const double C5248 = C5230 + C5231;
    const double C31693 = C31675 + C31676;
    const double C625 = C618 + C619;
    const double C1545 = C1538 + C1539;
    const double C5434 = C5420 + C5421;
    const double C31879 = C31865 + C31866;
    const double C982 = C975 + C976;
    const double C5618 = C5604 + C5605;
    const double C15561 = C15540 + C15541;
    const double C32063 = C32049 + C32050;
    const double C38146 = C38125 + C38126;
    const double C8517 = C8515 * C51038;
    const double C11117 = C8515 * C50774;
    const double C25922 = C8515 * C25478;
    const double C11125 = C11124 * C50774;
    const double C13197 = C13196 * C50774;
    const double C44841 = C44840 - C44836;
    const double C45827 = C45826 - C45824;
    const double C963 =
        3 * C49940 - (C49937 * ce) / C49882 + C49871 * C49977 +
        (C49874 * C50085 * ae) / C49806 +
        C49874 *
            ((C50085 * ae) / C49806 +
             C49874 *
                 (3 * C49975 - (C49970 * ce) / C49882 +
                  C49871 *
                      (2 * C49971 - (C49965 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882)))));
    const double C1526 =
        (C50026 * C50085 * ae) / C49806 +
        C49874 * C50026 *
            (3 * C49975 - (C49970 * ce) / C49882 +
             C49871 * (2 * C49971 - (C49965 * ce) / C49882 +
                       C49871 * ((-(C49871 * C49959 * ce) / C49744) / C49806 -
                                 C49958 / C49882 +
                                 C49871 * ((-(C49871 * std::pow(C49876, 8) *
                                              bs[8] * C49887) /
                                            C49744) /
                                               C49806 -
                                           (C49959 * ce) / C49882))));
    const double C142 =
        5 * ((-3 * C50050) / C49744 + C49871 * C50059 -
             (C50355 * ce) / C49744) +
        C49871 * (4 * C50059 + C49871 * C50085 - (C50360 * ce) / C49744) -
        ((4 * C50355 + C49871 * C50360) * ce) / C49744;
    const double C303 =
        C50026 * (4 * C50059 + C49871 * C50085 - (C50360 * ce) / C49744);
    const double C451 =
        C49874 * (4 * C50059 + C49871 * C50085 - (C50360 * ce) / C49744);
    const double C601 = (-3 * C50050) / C49744 + C49871 * C50059 -
                        (C50355 * ce) / C49744 + C50085 * C50035;
    const double C958 = (-3 * C50050) / C49744 + C49871 * C50059 -
                        (C50355 * ce) / C49744 + C50085 * C50127;
    const double C1525 = C49874 * C50026 * C50085;
    const double C8518 = C8516 * C50779;
    const double C25923 = C8516 * C50779;
    const double C9562 = C9560 * C50779;
    const double C26861 = C9560 * C50779;
    const double C2471 = C334 * C280;
    const double C3739 = C334 * C1282;
    const double C2793 = C625 * C50759;
    const double C3909 = C625 * C50759;
    const double C8204 = C625 * C280;
    const double C9400 = C625 * C1282;
    const double C4115 = C1545 * C50759;
    const double C4807 = C1545 * C50759;
    const double C44842 = C44841 * C50774;
    const double C45828 = C45827 * C50774;
    const double C8519 = C8517 + C8518;
    const double C25924 = C25922 + C25923;
    const double C9563 = C9561 + C9562;
    const double C26862 = C26860 + C26861;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50942 * C129) * C1285 +
                    (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                    C172 * C51073 + C173 * C1287 + C174 * C1282) *
                       C51090 +
                   (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                    C174 * C51073 + C175 * C1287 + C176 * C1282) *
                       C51076 +
                   (C173 * C1285 + C174 * C51089 - C175 * C1286 -
                    C176 * C51073 + C177 * C1287 + C178 * C1282) *
                       C22847) *
                      C22848 +
                  ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C51090 +
                   (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C51076 +
                   (C3734 + C3735 - C3736 - C3737 + C3738 + C3739) * C22847) *
                      C50930) *
                     C50843 * C1283 +
                 (((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C51090 +
                   (C3730 - (C3729 + C3728) + C3731 - C3732 - C3733) * C51076 +
                   (C3736 - (C3735 + C3734) + C3737 - C3738 - C3739) * C22847) *
                      C22848 +
                  ((C9391 - (C9390 + C9389) + C9392 - C9393 - C9394) * C51090 +
                   (C9397 - (C9396 + C9395) + C9398 - C9399 - C9400) * C51076 +
                   (C624 * C1286 - (C623 * C51089 + C622 * C1285) +
                    C625 * C51073 - (C117 * C591 + C50942 * C600) * C1287 -
                    (C117 * C601 + C50942 * C606) * C1282) *
                       C22847) *
                      C50930) *
                     C50843 * C50831)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C51090 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C51076 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C22847) *
               C22848 +
           ((C3886 + C3887 - C3888 - C3889) * C51090 +
            (C3890 + C3891 - C3892 - C3893) * C51076 +
            (C3894 + C3895 - C3896 - C3897) * C22847) *
               C50930) *
              C50843 * C51091 +
          (((C3888 - (C3887 + C3886) + C3889) * C51090 +
            (C3892 - (C3891 + C3890) + C3893) * C51076 +
            (C3896 - (C3895 + C3894) + C3897) * C22847) *
               C22848 +
           ((C3898 - (C3899 + C3900) + C3901) * C51090 +
            (C3902 - (C3903 + C3904) + C3905) * C51076 +
            (C3906 - (C3907 + C3908) + C3909) * C22847) *
               C50930) *
              C50843 * C51079 +
          ((C9559 * C51090 + C9560 * C51076 +
            (C3908 + C3907 - C3906 - C3909) * C22847) *
               C22848 +
           (C11810 * C51090 + (C9555 + C9554 - C9553 - C9556) * C51076 +
            (C2806 * C1391 + C2807 * C1386 -
             (C117 * C697 + C50942 * C702) * C1392 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C22847) *
               C50930) *
              C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C51090 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C51076 +
             (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                 C22847) *
                C22848 +
            ((C3886 + C3887 - C3888 - C3889) * C51090 +
             (C3890 + C3891 - C3892 - C3893) * C51076 +
             (C3894 + C3895 - C3896 - C3897) * C22847) *
                C50930) *
               C51047 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C51090 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C51076 +
             (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                 C22847) *
                C22848 +
            ((C4104 - (C4105 + C4106) + C4107) * C51090 +
             (C4108 - (C4109 + C4110) + C4111) * C51076 +
             (C4112 - (C4113 + C4114) + C4115) * C22847) *
                C50930) *
               C50855) *
              C1283 +
          ((((C3888 - (C3887 + C3886) + C3889) * C51090 +
             (C3892 - (C3891 + C3890) + C3893) * C51076 +
             (C3896 - (C3895 + C3894) + C3897) * C22847) *
                C22848 +
            ((C3898 - (C3899 + C3900) + C3901) * C51090 +
             (C3902 - (C3903 + C3904) + C3905) * C51076 +
             (C3906 - (C3907 + C3908) + C3909) * C22847) *
                C50930) *
               C51047 +
           (((C4106 + C4105 - C4104 - C4107) * C51090 +
             (C4110 + C4109 - C4108 - C4111) * C51076 +
             (C4114 + C4113 - C4112 - C4115) * C22847) *
                C22848 +
            ((C9760 + C9759 - C9758 - C9761) * C51090 +
             (C9764 + C9763 - C9762 - C9765) * C51076 +
             (C3128 * C1391 + C3129 * C1386 -
              (C117 * C815 + C50942 * C828) * C1392 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C22847) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C49770 +
              (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
              C172 * C50759) *
                 C51090 +
             (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                 C51076 +
             (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                 C22847) *
                C22848 +
            ((C2768 + C2769 - C2770 - C2771) * C51090 +
             (C2772 + C2773 - C2774 - C2775) * C51076 +
             (C2776 + C2777 - C2778 - C2779) * C22847) *
                C50930) *
               C1643 +
           (((C475 * C49763 -
              ((C117 * C441 + C50942 * C452) * C51031 +
               (C117 * C435 + C50942 * C442) * C49770) +
              C476 * C50759) *
                 C51090 +
             (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                 C51076 +
             (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                 C22847) *
                C22848 +
            ((C4796 - (C4797 + C4798) + C4799) * C51090 +
             (C4800 - (C4801 + C4802) + C4803) * C51076 +
             (C4804 - (C4805 + C4806) + C4807) * C22847) *
                C50930) *
               C50855) *
              C1283 +
          ((((C2770 - (C2769 + C2768) + C2771) * C51090 +
             (C2774 - (C2773 + C2772) + C2775) * C51076 +
             (C2778 - (C2777 + C2776) + C2779) * C22847) *
                C22848 +
            ((C2780 - (C2808 + C2809) + C2785) * C51090 +
             (C2786 - (C2787 + C2788) + C2789) * C51076 +
             (C2790 - (C2791 + C2792) + C2793) * C22847) *
                C50930) *
               C1643 +
           (((C4798 + C4797 - C4796 - C4799) * C51090 +
             (C4802 + C4801 - C4800 - C4803) * C51076 +
             (C4806 + C4805 - C4804 - C4807) * C22847) *
                C22848 +
            ((C10448 + C10447 - C10446 - C10449) * C51090 +
             (C10452 + C10451 - C10450 - C10453) * C51076 +
             (C3128 * C49770 + C3129 * C51031 -
              (C117 * C815 + C50942 * C828) * C49763 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C22847) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51090 +
             (C171 * C696 + C172 * C50754) * C51076 +
             (C173 * C696 + C174 * C50754) * C22847) *
                C22848 +
            ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
             (C2924 + C2925) * C22847) *
                C50930) *
               C1643 -
           (((C3102 + C3103) * C22847 + (C3104 + C3105) * C51076 +
             (C3130 + C3131) * C51090) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C22847 +
             (C476 * C50754 + C475 * C696) * C51076 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51090) *
                C22848) *
               C50855) *
              C51091 +
          ((((C3131 + C3130) * C51090 + (C3105 + C3104) * C51076 +
             (C3103 + C3102) * C22847) *
                C22848 +
            ((C3132 + C3133) * C51090 + (C3134 + C3135) * C51076 +
             (C3136 + C3137) * C22847) *
                C50930) *
               C50855 -
           (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
             (C2930 + C2931) * C51090) *
                C50930 +
            ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
             (C2921 + C2920) * C51090) *
                C22848) *
               C1643) *
              C51079 +
          (((C8626 * C51090 + C8627 * C51076 + (C2927 + C2926) * C22847) *
                C22848 +
            (C11197 * C51090 + (C2936 + C2937) * C51076 +
             (C2938 + C2939) * C22847) *
                C50930) *
               C1643 -
           ((((C117 * C3092 + C50942 * C3098) * C50754 +
              (C117 * C3089 + C50942 * C3093) * C696) *
                 C22847 +
             (C8820 + C8819) * C51076 + C11312 * C51090) *
                C50930 +
            ((C3137 + C3136) * C22847 + C8800 * C51076 + C8801 * C51090) *
                C22848) *
               C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C122 + C50942 * C129) * C696 +
                     (C117 * C130 + C50942 * C143) * C50754) *
                        C51090 +
                    (C171 * C696 + C172 * C50754) * C51076 +
                    (C173 * C696 + C174 * C50754) * C22847) *
                       C22848 +
                   ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
                    (C2924 + C2925) * C22847) *
                       C50930) *
                      C51092 -
                  (((C3102 + C3103) * C22847 + (C3104 + C3105) * C51076 +
                    (C3130 + C3131) * C51090) *
                       C50930 +
                   ((C478 * C50754 + C477 * C696) * C22847 +
                    (C476 * C50754 + C475 * C696) * C51076 +
                    ((C117 * C441 + C50942 * C452) * C50754 +
                     (C117 * C435 + C50942 * C442) * C696) *
                        C51090) *
                       C22848) *
                      C51082 +
                  ((((C117 * C944 + C50942 * C949) * C696 +
                     (C117 * C950 + C50942 * C959) * C50754) *
                        C51090 +
                    (C977 * C696 + C978 * C50754) * C51076 +
                    (C979 * C696 + C980 * C50754) * C22847) *
                       C22848 +
                   ((C3464 + C3465) * C51090 + (C3458 + C3459) * C51076 +
                    (C3460 + C3461) * C22847) *
                       C50930) *
                      C1875) *
                     C1283 +
                 ((((C3131 + C3130) * C51090 + (C3105 + C3104) * C51076 +
                    (C3103 + C3102) * C22847) *
                       C22848 +
                   ((C3132 + C3133) * C51090 + (C3134 + C3135) * C51076 +
                    (C3136 + C3137) * C22847) *
                       C50930) *
                      C51082 -
                  (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
                    (C2930 + C2931) * C51090) *
                       C50930 +
                   ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
                    (C2921 + C2920) * C51090) *
                       C22848) *
                      C51092 -
                  ((((C117 * C3444 + C50942 * C3450) * C50754 +
                     (C117 * C3441 + C50942 * C3445) * C696) *
                        C22847 +
                    (C9132 + C9131) * C51076 + (C9136 + C9135) * C51090) *
                       C50930 +
                   ((C3461 + C3460) * C22847 + (C3459 + C3458) * C51076 +
                    (C3465 + C3464) * C51090) *
                       C22848) *
                      C1875) *
                     C50831)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51090 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C51076 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C22847) *
               C22848 +
           ((C2768 + C2769 - C2770 - C2771) * C51090 +
            (C2772 + C2773 - C2774 - C2775) * C51076 +
            (C2776 + C2777 - C2778 - C2779) * C22847) *
               C50930) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C51090 +
            (C2774 - (C2773 + C2772) + C2775) * C51076 +
            (C2778 - (C2777 + C2776) + C2779) * C22847) *
               C22848 +
           ((C2780 - (C2808 + C2809) + C2785) * C51090 +
            (C2786 - (C2787 + C2788) + C2789) * C51076 +
            (C2790 - (C2791 + C2792) + C2793) * C22847) *
               C50930) *
              C50843 * C583 +
          ((C8515 * C51090 + C8516 * C51076 +
            (C2792 + C2791 - C2790 - C2793) * C22847) *
               C22848 +
           (C11124 * C51090 + (C8505 + C8504 - C8503 - C8506) * C51076 +
            (C2806 * C49770 + C2807 * C51031 -
             (C117 * C697 + C50942 * C702) * C49763 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C22847) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C51090 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C51076 +
           (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
            C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
               C22847) *
              C22848 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C51090 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C51076 +
           (C329 * C118 + C330 * C106 - C331 * C119 - C332 * C107 +
            C333 * C120 + C334 * C108 - (C117 * C291 + C50942 * C302) * C121 -
            (C117 * C303 + C50942 * C309) * C109) *
               C22847) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51090 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C51076 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C22847) *
               C22848 +
           ((C2768 + C2769 - C2770 - C2771) * C51090 +
            (C2772 + C2773 - C2774 - C2775) * C51076 +
            (C2776 + C2777 - C2778 - C2779) * C22847) *
               C50930) *
              C941 +
          (((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C51090 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C51076 +
            (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                C22847) *
               C22848 +
           ((C4796 - (C4797 + C4798) + C4799) * C51090 +
            (C4800 - (C4801 + C4802) + C4803) * C51076 +
            (C4804 - (C4805 + C4806) + C4807) * C22847) *
               C50930) *
              C942 +
          ((((C117 * C944 + C50942 * C949) * C49770 +
             (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
             C978 * C50759) *
                C51090 +
            (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
                C51076 +
            (C979 * C49770 + C980 * C51031 - C981 * C49763 - C982 * C50759) *
                C22847) *
               C22848 +
           ((C3462 * C49770 + C3463 * C51031 - C3292 * C49763 -
             C3293 * C50759) *
                C51090 +
            (C3292 * C49770 + C3293 * C51031 - C3294 * C49763 -
             C3295 * C50759) *
                C51076 +
            (C3294 * C49770 + C3295 * C51031 -
             (C117 * C1080 + C50942 * C1085) * C49763 -
             (C117 * C1084 + C50942 * C1092) * C50759) *
                C22847) *
               C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50942 * C129) * C696 +
                    (C117 * C130 + C50942 * C143) * C50754) *
                       C51090 +
                   (C171 * C696 + C172 * C50754) * C51076 +
                   (C173 * C696 + C174 * C50754) * C22847) *
                      C22848 +
                  ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
                   (C2924 + C2925) * C22847) *
                      C50930) *
                     C50843 * C692 -
                 (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
                   (C2930 + C2931) * C51090) *
                      C50930 +
                  ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
                   (C2921 + C2920) * C51090) *
                      C22848) *
                     C50843 * C693 +
                 ((C8626 * C51090 + C8627 * C51076 + (C2927 + C2926) * C22847) *
                      C22848 +
                  (C11197 * C51090 + (C2936 + C2937) * C51076 +
                   (C2938 + C2939) * C22847) *
                      C50930) *
                     C50843 * C694 -
                 ((((C117 * C2910 + C50942 * C2916) * C50754 +
                    (C117 * C2907 + C50942 * C2911) * C696) *
                       C22847 +
                   (C8635 + C8634) * C51076 + C11198 * C51090) *
                      C50930 +
                  ((C2939 + C2938) * C22847 + C8628 * C51076 + C8629 * C51090) *
                      C22848) *
                     C50843 * C695)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50942 * C129) * C283 +
                    (C117 * C130 + C50942 * C143) * C278 - C171 * C284 -
                    C172 * C279 + C173 * C285 + C174 * C280) *
                       C51090 +
                   (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
                    C175 * C285 + C176 * C280) *
                       C51076 +
                   (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
                    C177 * C285 + C178 * C280) *
                       C22847) *
                      C22848 +
                  ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51090 +
                   (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C51076 +
                   (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C22847) *
                      C50930) *
                     C50843 * C51046 +
                 (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C51090 +
                   (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C51076 +
                   (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471) * C22847) *
                      C22848 +
                  ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C51090 +
                   (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C51076 +
                   (C624 * C284 - (C623 * C278 + C622 * C283) + C625 * C279 -
                    (C117 * C591 + C50942 * C600) * C285 -
                    (C117 * C601 + C50942 * C606) * C280) *
                       C22847) *
                      C50930) *
                     C50843 * C50831)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C122 + C50942 * C129) * C696 +
                     (C117 * C130 + C50942 * C143) * C50754) *
                        C51090 +
                    (C171 * C696 + C172 * C50754) * C51076 +
                    (C173 * C696 + C174 * C50754) * C22847) *
                       C22848 +
                   ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
                    (C2924 + C2925) * C22847) *
                       C50930) *
                      C941 -
                  (((C3102 + C3103) * C22847 + (C3104 + C3105) * C51076 +
                    (C3130 + C3131) * C51090) *
                       C50930 +
                   ((C478 * C50754 + C477 * C696) * C22847 +
                    (C476 * C50754 + C475 * C696) * C51076 +
                    ((C117 * C441 + C50942 * C452) * C50754 +
                     (C117 * C435 + C50942 * C442) * C696) *
                        C51090) *
                       C22848) *
                      C942 +
                  ((((C117 * C944 + C50942 * C949) * C696 +
                     (C117 * C950 + C50942 * C959) * C50754) *
                        C51090 +
                    (C977 * C696 + C978 * C50754) * C51076 +
                    (C979 * C696 + C980 * C50754) * C22847) *
                       C22848 +
                   ((C3464 + C3465) * C51090 + (C3458 + C3459) * C51076 +
                    (C3460 + C3461) * C22847) *
                       C50930) *
                      C943) *
                     C51046 +
                 ((((C3131 + C3130) * C51090 + (C3105 + C3104) * C51076 +
                    (C3103 + C3102) * C22847) *
                       C22848 +
                   ((C3132 + C3133) * C51090 + (C3134 + C3135) * C51076 +
                    (C3136 + C3137) * C22847) *
                       C50930) *
                      C942 -
                  (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
                    (C2930 + C2931) * C51090) *
                       C50930 +
                   ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
                    (C2921 + C2920) * C51090) *
                       C22848) *
                      C941 -
                  ((((C117 * C3444 + C50942 * C3450) * C50754 +
                     (C117 * C3441 + C50942 * C3445) * C696) *
                        C22847 +
                    (C9132 + C9131) * C51076 + (C9136 + C9135) * C51090) *
                       C50930 +
                   ((C3461 + C3460) * C22847 + (C3459 + C3458) * C51076 +
                    (C3465 + C3464) * C51090) *
                       C22848) *
                      C943) *
                     C50831)) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51090 +
             (C171 * C696 + C172 * C50754) * C51076 +
             (C173 * C696 + C174 * C50754) * C22847) *
                C22848 +
            ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
             (C2924 + C2925) * C22847) *
                C50930) *
               C51047 -
           (((C3102 + C3103) * C22847 + (C3104 + C3105) * C51076 +
             (C3130 + C3131) * C51090) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C22847 +
             (C476 * C50754 + C475 * C696) * C51076 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51090) *
                C22848) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C51090 + (C3105 + C3104) * C51076 +
             (C3103 + C3102) * C22847) *
                C22848 +
            ((C3132 + C3133) * C51090 + (C3134 + C3135) * C51076 +
             (C3136 + C3137) * C22847) *
                C50930) *
               C50855 -
           (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
             (C2930 + C2931) * C51090) *
                C50930 +
            ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
             (C2921 + C2920) * C51090) *
                C22848) *
               C51047) *
              C583 +
          (((C8626 * C51090 + C8627 * C51076 + (C2927 + C2926) * C22847) *
                C22848 +
            (C11197 * C51090 + (C2936 + C2937) * C51076 +
             (C2938 + C2939) * C22847) *
                C50930) *
               C51047 -
           ((((C117 * C3092 + C50942 * C3098) * C50754 +
              (C117 * C3089 + C50942 * C3093) * C696) *
                 C22847 +
             (C8820 + C8819) * C51076 + C11312 * C51090) *
                C50930 +
            ((C3137 + C3136) * C22847 + C8800 * C51076 + C8801 * C51090) *
                C22848) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51090 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C51076 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C22847) *
               C22848 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51090 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C51076 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C22847) *
               C50930) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C51090 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C51076 +
            (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
             C481 * C285 - C482 * C280) *
                C22847) *
               C22848 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C51090 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C51076 +
            (C1544 * C284 - (C1543 * C278 + C1542 * C283) + C1545 * C279 -
             (C117 * C1523 + C50942 * C1524) * C285 -
             (C117 * C1525 + C50942 * C1526) * C280) *
                C22847) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51090 +
            (C171 * C696 + C172 * C50754) * C51076 +
            (C173 * C696 + C174 * C50754) * C22847) *
               C22848 +
           ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
            (C2924 + C2925) * C22847) *
               C50930) *
              C1162 -
          (((C3102 + C3103) * C22847 + (C3104 + C3105) * C51076 +
            (C3130 + C3131) * C51090) *
               C50930 +
           ((C478 * C50754 + C477 * C696) * C22847 +
            (C476 * C50754 + C475 * C696) * C51076 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C51090) *
               C22848) *
              C1163 +
          ((((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C51090 +
            (C977 * C696 + C978 * C50754) * C51076 +
            (C979 * C696 + C980 * C50754) * C22847) *
               C22848 +
           ((C3464 + C3465) * C51090 + (C3458 + C3459) * C51076 +
            (C3460 + C3461) * C22847) *
               C50930) *
              C1164 -
          ((((C117 * C3566 + C50942 * C3572) * C50754 +
             (C117 * C3563 + C50942 * C3567) * C696) *
                C22847 +
            ((C117 * C3568 + C50942 * C3573) * C50754 +
             (C117 * C3564 + C50942 * C3569) * C696) *
                C51076 +
            ((C117 * C3570 + C50942 * C3574) * C50754 +
             (C117 * C3565 + C50942 * C3571) * C696) *
                C51090) *
               C50930 +
           (((C117 * C1172 + C50942 * C1179) * C50754 +
             (C117 * C1167 + C50942 * C1173) * C696) *
                C22847 +
            ((C117 * C1174 + C50942 * C1180) * C50754 +
             (C117 * C1168 + C50942 * C1175) * C696) *
                C51076 +
            ((C117 * C1176 + C50942 * C1181) * C50754 +
             (C117 * C1169 + C50942 * C1177) * C696) *
                C51090) *
               C22848) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50942 * C129) * C1285 +
                    (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                    C172 * C51073 + C173 * C1287 + C174 * C1282) *
                       C51090 +
                   (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                    C174 * C51073 + C175 * C1287 + C176 * C1282) *
                       C51076 +
                   (C173 * C1285 + C174 * C51089 - C175 * C1286 -
                    C176 * C51073 + C177 * C1287 + C178 * C1282) *
                       C22847) *
                      C22848 +
                  ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C51090 +
                   (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C51076 +
                   (C3734 + C3735 - C3736 - C3737 + C3738 + C3739) * C22847) *
                      C50930) *
                     C1643 +
                 (((C475 * C1286 -
                    ((C117 * C441 + C50942 * C452) * C51089 +
                     (C117 * C435 + C50942 * C442) * C1285) +
                    C476 * C51073 - C477 * C1287 - C478 * C1282) *
                       C51090 +
                   (C477 * C1286 - (C476 * C51089 + C475 * C1285) +
                    C478 * C51073 - C479 * C1287 - C480 * C1282) *
                       C51076 +
                   (C479 * C1286 - (C478 * C51089 + C477 * C1285) +
                    C480 * C51073 - C481 * C1287 - C482 * C1282) *
                       C22847) *
                      C22848 +
                  ((C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) +
                    C1541 * C51073 - C1542 * C1287 - C1543 * C1282) *
                       C51090 +
                   (C1542 * C1286 - (C1541 * C51089 + C1540 * C1285) +
                    C1543 * C51073 - C1544 * C1287 - C1545 * C1282) *
                       C51076 +
                   (C1544 * C1286 - (C1543 * C51089 + C1542 * C1285) +
                    C1545 * C51073 - (C117 * C1523 + C50942 * C1524) * C1287 -
                    (C117 * C1525 + C50942 * C1526) * C1282) *
                       C22847) *
                      C50930) *
                     C50855) *
                C50817) /
               (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C51090 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C51076 +
             (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                 C22847) *
                C22848 +
            ((C3886 + C3887 - C3888 - C3889) * C51090 +
             (C3890 + C3891 - C3892 - C3893) * C51076 +
             (C3894 + C3895 - C3896 - C3897) * C22847) *
                C50930) *
               C1643 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C51090 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C51076 +
             (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                 C22847) *
                C22848 +
            ((C4104 - (C4105 + C4106) + C4107) * C51090 +
             (C4108 - (C4109 + C4110) + C4111) * C51076 +
             (C4112 - (C4113 + C4114) + C4115) * C22847) *
                C50930) *
               C50855) *
              C51046 +
          ((((C3888 - (C3887 + C3886) + C3889) * C51090 +
             (C3892 - (C3891 + C3890) + C3893) * C51076 +
             (C3896 - (C3895 + C3894) + C3897) * C22847) *
                C22848 +
            ((C3898 - (C3899 + C3900) + C3901) * C51090 +
             (C3902 - (C3903 + C3904) + C3905) * C51076 +
             (C3906 - (C3907 + C3908) + C3909) * C22847) *
                C50930) *
               C1643 +
           (((C4106 + C4105 - C4104 - C4107) * C51090 +
             (C4110 + C4109 - C4108 - C4111) * C51076 +
             (C4114 + C4113 - C4112 - C4115) * C22847) *
                C22848 +
            ((C9760 + C9759 - C9758 - C9761) * C51090 +
             (C9764 + C9763 - C9762 - C9765) * C51076 +
             (C3128 * C1391 + C3129 * C1386 -
              (C117 * C815 + C50942 * C828) * C1392 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C22847) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C51090 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C51076 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C22847) *
               C22848 +
           ((C3886 + C3887 - C3888 - C3889) * C51090 +
            (C3890 + C3891 - C3892 - C3893) * C51076 +
            (C3894 + C3895 - C3896 - C3897) * C22847) *
               C50930) *
              C51092 +
          (((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C51090 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C51076 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C22847) *
               C22848 +
           ((C4104 - (C4105 + C4106) + C4107) * C51090 +
            (C4108 - (C4109 + C4110) + C4111) * C51076 +
            (C4112 - (C4113 + C4114) + C4115) * C22847) *
               C50930) *
              C51082 +
          ((((C117 * C944 + C50942 * C949) * C1391 +
             (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
             C978 * C50759) *
                C51090 +
            (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) *
                C51076 +
            (C979 * C1391 + C980 * C1386 - C981 * C1392 - C982 * C50759) *
                C22847) *
               C22848 +
           ((C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
                C51090 +
            (C3292 * C1391 + C3293 * C1386 - C3294 * C1392 - C3295 * C50759) *
                C51076 +
            (C3294 * C1391 + C3295 * C1386 -
             (C117 * C1080 + C50942 * C1085) * C1392 -
             (C117 * C1084 + C50942 * C1092) * C50759) *
                C22847) *
               C50930) *
              C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C51090 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C51076 +
           (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
            C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
               C22847) *
              C22848 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C51090 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C51076 +
           (C329 * C118 + C330 * C106 - C331 * C119 - C332 * C107 +
            C333 * C120 + C334 * C108 - (C117 * C291 + C50942 * C302) * C121 -
            (C117 * C303 + C50942 * C309) * C109) *
               C22847) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51090 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C51076 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C22847) *
               C22848 +
           ((C2768 + C2769 - C2770 - C2771) * C51090 +
            (C2772 + C2773 - C2774 - C2775) * C51076 +
            (C2776 + C2777 - C2778 - C2779) * C22847) *
               C50930) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C51090 +
            (C2774 - (C2773 + C2772) + C2775) * C51076 +
            (C2778 - (C2777 + C2776) + C2779) * C22847) *
               C22848 +
           ((C2780 - (C2808 + C2809) + C2785) * C51090 +
            (C2786 - (C2787 + C2788) + C2789) * C51076 +
            (C2790 - (C2791 + C2792) + C2793) * C22847) *
               C50930) *
              C50843 * C583 +
          ((C8515 * C51090 + C8516 * C51076 +
            (C2792 + C2791 - C2790 - C2793) * C22847) *
               C22848 +
           (C11124 * C51090 + (C8505 + C8504 - C8503 - C8506) * C51076 +
            (C2806 * C49770 + C2807 * C51031 -
             (C117 * C697 + C50942 * C702) * C49763 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C22847) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51090 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C51076 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C22847) *
               C22848 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51090 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C51076 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C22847) *
               C50930) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C51090 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C51076 +
            (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471) * C22847) *
               C22848 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C51090 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C51076 +
            (C624 * C284 - (C623 * C278 + C622 * C283) + C625 * C279 -
             (C117 * C591 + C50942 * C600) * C285 -
             (C117 * C601 + C50942 * C606) * C280) *
                C22847) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51090 +
            (C171 * C696 + C172 * C50754) * C51076 +
            (C173 * C696 + C174 * C50754) * C22847) *
               C22848 +
           ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
            (C2924 + C2925) * C22847) *
               C50930) *
              C50843 * C692 -
          (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
            (C2930 + C2931) * C51090) *
               C50930 +
           ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
            (C2921 + C2920) * C51090) *
               C22848) *
              C50843 * C693 +
          ((C8626 * C51090 + C8627 * C51076 + (C2927 + C2926) * C22847) *
               C22848 +
           (C11197 * C51090 + (C2936 + C2937) * C51076 +
            (C2938 + C2939) * C22847) *
               C50930) *
              C50843 * C694 -
          ((((C117 * C2910 + C50942 * C2916) * C50754 +
             (C117 * C2907 + C50942 * C2911) * C696) *
                C22847 +
            (C8635 + C8634) * C51076 + C11198 * C51090) *
               C50930 +
           ((C2939 + C2938) * C22847 + C8628 * C51076 + C8629 * C51090) *
               C22848) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51090 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C51076 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C22847) *
               C22848 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51090 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C51076 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C22847) *
               C50930) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C51090 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C51076 +
            (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
             C481 * C285 - C482 * C280) *
                C22847) *
               C22848 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C51090 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C51076 +
            (C1544 * C284 - (C1543 * C278 + C1542 * C283) + C1545 * C279 -
             (C117 * C1523 + C50942 * C1524) * C285 -
             (C117 * C1525 + C50942 * C1526) * C280) *
                C22847) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51090 +
             (C171 * C696 + C172 * C50754) * C51076 +
             (C173 * C696 + C174 * C50754) * C22847) *
                C22848 +
            ((C2920 + C2921) * C51090 + (C2922 + C2923) * C51076 +
             (C2924 + C2925) * C22847) *
                C50930) *
               C51047 -
           (((C3102 + C3103) * C22847 + (C3104 + C3105) * C51076 +
             (C3130 + C3131) * C51090) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C22847 +
             (C476 * C50754 + C475 * C696) * C51076 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51090) *
                C22848) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C51090 + (C3105 + C3104) * C51076 +
             (C3103 + C3102) * C22847) *
                C22848 +
            ((C3132 + C3133) * C51090 + (C3134 + C3135) * C51076 +
             (C3136 + C3137) * C22847) *
                C50930) *
               C50855 -
           (((C2926 + C2927) * C22847 + (C2928 + C2929) * C51076 +
             (C2930 + C2931) * C51090) *
                C50930 +
            ((C2925 + C2924) * C22847 + (C2923 + C2922) * C51076 +
             (C2921 + C2920) * C51090) *
                C22848) *
               C51047) *
              C583 +
          (((C8626 * C51090 + C8627 * C51076 + (C2927 + C2926) * C22847) *
                C22848 +
            (C11197 * C51090 + (C2936 + C2937) * C51076 +
             (C2938 + C2939) * C22847) *
                C50930) *
               C51047 -
           ((((C117 * C3092 + C50942 * C3098) * C50754 +
              (C117 * C3089 + C50942 * C3093) * C696) *
                 C22847 +
             (C8820 + C8819) * C51076 + C11312 * C51090) *
                C50930 +
            ((C3137 + C3136) * C22847 + C8800 * C51076 + C8801 * C51090) *
                C22848) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C25478 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C50779) *
               C51093 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C25478 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C50779) *
               C51085 +
           ((C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C25478 +
            (C9395 + C9396 - C9397 - C9398 + C9399 + C9400) * C50779) *
               C25482) *
              C50843 * C1283 +
          (((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C25478 +
            (C3730 - (C3729 + C3728) + C3731 - C3732 - C3733) * C50779) *
               C51093 +
           ((C9391 - (C9390 + C9389) + C9392 - C9393 - C9394) * C25478 +
            (C9397 - (C9396 + C9395) + C9398 - C9399 - C9400) * C50779) *
               C51085 +
           ((C11701 - (C11700 + C11699) + C11702 - C11703 - C11704) * C25478 +
            (C2806 * C1286 - (C2805 * C51089 + C2804 * C1285) + C2807 * C51073 -
             (C117 * C697 + C50942 * C702) * C1287 -
             (C117 * C701 + C50942 * C709) * C1282) *
                C50779) *
               C25482) *
              C50843 * C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C25478 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C50779) *
               C51093 +
           ((C3886 + C3887 - C3888 - C3889) * C25478 +
            (C3890 + C3891 - C3892 - C3893) * C50779) *
               C51085 +
           C26862 * C25482) *
              C50843 * C51091 +
          (((C3888 - (C3887 + C3886) + C3889) * C25478 +
            (C3892 - (C3891 + C3890) + C3893) * C50779) *
               C51093 +
           ((C3898 - (C3899 + C3900) + C3901) * C25478 +
            (C3902 - (C3903 + C3904) + C3905) * C50779) *
               C51085 +
           ((C9549 - (C9550 + C9551) + C9552) * C25478 +
            (C9553 - (C9554 + C9555) + C9556) * C50779) *
               C25482) *
              C50843 * C51079 +
          (C26862 * C51093 +
           (C11810 * C25478 + (C9555 + C9554 - C9553 - C9556) * C50779) *
               C51085 +
           ((C11807 + C11806 - C11805 - C11808) * C25478 +
            (C8513 * C1391 + C8514 * C1386 -
             (C117 * C2907 + C50942 * C2911) * C1392 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C25482) *
              C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C25478 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C50779) *
                C51093 +
            ((C3886 + C3887 - C3888 - C3889) * C25478 +
             (C3890 + C3891 - C3892 - C3893) * C50779) *
                C51085 +
            C26862 * C25482) *
               C51047 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C25478 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C50779) *
                C51093 +
            ((C4104 - (C4105 + C4106) + C4107) * C25478 +
             (C4108 - (C4109 + C4110) + C4111) * C50779) *
                C51085 +
            ((C9758 - (C9759 + C9760) + C9761) * C25478 +
             (C9762 - (C9763 + C9764) + C9765) * C50779) *
                C25482) *
               C50855) *
              C1283 +
          ((((C3888 - (C3887 + C3886) + C3889) * C25478 +
             (C3892 - (C3891 + C3890) + C3893) * C50779) *
                C51093 +
            ((C3898 - (C3899 + C3900) + C3901) * C25478 +
             (C3902 - (C3903 + C3904) + C3905) * C50779) *
                C51085 +
            ((C9549 - (C9550 + C9551) + C9552) * C25478 +
             (C9553 - (C9554 + C9555) + C9556) * C50779) *
                C25482) *
               C51047 +
           (((C4106 + C4105 - C4104 - C4107) * C25478 +
             (C4110 + C4109 - C4108 - C4111) * C50779) *
                C51093 +
            ((C9760 + C9759 - C9758 - C9761) * C25478 +
             (C9764 + C9763 - C9762 - C9765) * C50779) *
                C51085 +
            ((C11944 + C11943 - C11942 - C11945) * C25478 +
             (C8814 * C1391 + C8815 * C1386 -
              (C117 * C3089 + C50942 * C3093) * C1392 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C25482) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C49770 +
              (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
              C172 * C50759) *
                 C25478 +
             (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                 C50779) *
                C51093 +
            ((C2768 + C2769 - C2770 - C2771) * C25478 +
             (C2772 + C2773 - C2774 - C2775) * C50779) *
                C51085 +
            C25924 * C25482) *
               C1643 +
           (((C475 * C49763 -
              ((C117 * C441 + C50942 * C452) * C51031 +
               (C117 * C435 + C50942 * C442) * C49770) +
              C476 * C50759) *
                 C25478 +
             (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                 C50779) *
                C51093 +
            ((C4796 - (C4797 + C4798) + C4799) * C25478 +
             (C4800 - (C4801 + C4802) + C4803) * C50779) *
                C51085 +
            ((C10446 - (C10447 + C10448) + C10449) * C25478 +
             (C10450 - (C10451 + C10452) + C10453) * C50779) *
                C25482) *
               C50855) *
              C1283 +
          ((((C2770 - (C2769 + C2768) + C2771) * C25478 +
             (C2774 - (C2773 + C2772) + C2775) * C50779) *
                C51093 +
            ((C2780 - (C2808 + C2809) + C2785) * C25478 +
             (C2786 - (C2787 + C2788) + C2789) * C50779) *
                C51085 +
            ((C8499 - (C8500 + C8501) + C8502) * C25478 +
             (C8503 - (C8504 + C8505) + C8506) * C50779) *
                C25482) *
               C1643 +
           (((C4798 + C4797 - C4796 - C4799) * C25478 +
             (C4802 + C4801 - C4800 - C4803) * C50779) *
                C51093 +
            ((C10448 + C10447 - C10446 - C10449) * C25478 +
             (C10452 + C10451 - C10450 - C10453) * C50779) *
                C51085 +
            ((C12404 + C12403 - C12402 - C12405) * C25478 +
             (C8814 * C49770 + C8815 * C51031 -
              (C117 * C3089 + C50942 * C3093) * C49763 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C25482) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C25478 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C51093 +
            ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
            C26027 * C25482) *
               C1643 -
           (C26177 * C25482 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C25478) * C51085 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C25478) *
                C51093) *
               C50855) *
              C51091 +
          ((((C3131 + C3130) * C25478 + (C3105 + C3104) * C50779) * C51093 +
            ((C3132 + C3133) * C25478 + (C3134 + C3135) * C50779) * C51085 +
            ((C8817 + C8818) * C25478 + (C8819 + C8820) * C50779) * C25482) *
               C50855 -
           (C26028 * C25482 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
               C1643) *
              C51079 +
          ((C26027 * C51093 +
            (C11197 * C25478 + (C2936 + C2937) * C50779) * C51085 +
            ((C8644 + C8645) * C25478 + (C8634 + C8635) * C50779) * C25482) *
               C1643 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             (C11322 + C11321) * C25478) *
                C25482 +
            ((C8820 + C8819) * C50779 + C11312 * C25478) * C51085 +
            C26177 * C51093) *
               C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C25478 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C51093 +
            ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
            C26027 * C25482) *
               C51092 -
           (C26177 * C25482 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C25478) * C51085 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C25478) *
                C51093) *
               C51082 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C25478 +
             (C977 * C696 + C978 * C50754) * C50779) *
                C51093 +
            ((C3464 + C3465) * C25478 + (C3458 + C3459) * C50779) * C51085 +
            ((C9135 + C9136) * C25478 + (C9131 + C9132) * C50779) * C25482) *
               C1875) *
              C1283 +
          ((((C3131 + C3130) * C25478 + (C3105 + C3104) * C50779) * C51093 +
            ((C3132 + C3133) * C25478 + (C3134 + C3135) * C50779) * C51085 +
            ((C8817 + C8818) * C25478 + (C8819 + C8820) * C50779) * C25482) *
               C51082 -
           (C26028 * C25482 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
               C51092 -
           ((((C117 * C9120 + C50942 * C9124) * C50754 +
              (C117 * C9118 + C50942 * C9121) * C696) *
                 C50779 +
             (C11530 + C11529) * C25478) *
                C25482 +
            ((C9132 + C9131) * C50779 + (C9136 + C9135) * C25478) * C51085 +
            ((C3459 + C3458) * C50779 + (C3465 + C3464) * C25478) * C51093) *
               C1875) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C25478 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C51093 +
           ((C2768 + C2769 - C2770 - C2771) * C25478 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C51085 +
           C25924 * C25482) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C25478 +
            (C2774 - (C2773 + C2772) + C2775) * C50779) *
               C51093 +
           ((C2780 - (C2808 + C2809) + C2785) * C25478 +
            (C2786 - (C2787 + C2788) + C2789) * C50779) *
               C51085 +
           ((C8499 - (C8500 + C8501) + C8502) * C25478 +
            (C8503 - (C8504 + C8505) + C8506) * C50779) *
               C25482) *
              C50843 * C583 +
          (C25924 * C51093 +
           (C11124 * C25478 + (C8505 + C8504 - C8503 - C8506) * C50779) *
               C51085 +
           ((C11121 + C11120 - C11119 - C11122) * C25478 +
            (C8513 * C49770 + C8514 * C51031 -
             (C117 * C2907 + C50942 * C2911) * C49763 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C25482) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C25478 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C50779) *
              C51093 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C25478 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C50779) *
              C51085 +
          ((C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
            C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
               C25478 +
           (C620 * C118 + C621 * C106 - C622 * C119 - C623 * C107 +
            C624 * C120 + C625 * C108 - (C117 * C591 + C50942 * C600) * C121 -
            (C117 * C601 + C50942 * C606) * C109) *
               C50779) *
              C25482) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C25478 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C51093 +
           ((C2768 + C2769 - C2770 - C2771) * C25478 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C51085 +
           C25924 * C25482) *
              C941 +
          (((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C25478 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C50779) *
               C51093 +
           ((C4796 - (C4797 + C4798) + C4799) * C25478 +
            (C4800 - (C4801 + C4802) + C4803) * C50779) *
               C51085 +
           ((C10446 - (C10447 + C10448) + C10449) * C25478 +
            (C10450 - (C10451 + C10452) + C10453) * C50779) *
               C25482) *
              C942 +
          ((((C117 * C944 + C50942 * C949) * C49770 +
             (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
             C978 * C50759) *
                C25478 +
            (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
                C50779) *
               C51093 +
           ((C3462 * C49770 + C3463 * C51031 - C3292 * C49763 -
             C3293 * C50759) *
                C25478 +
            (C3292 * C49770 + C3293 * C51031 - C3294 * C49763 -
             C3295 * C50759) *
                C50779) *
               C51085 +
           ((C9133 * C49770 + C9134 * C51031 - C8971 * C49763 -
             C8972 * C50759) *
                C25478 +
            (C8971 * C49770 + C8972 * C51031 -
             (C117 * C3441 + C50942 * C3445) * C49763 -
             (C117 * C3444 + C50942 * C3450) * C50759) *
                C50779) *
               C25482) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C25478 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C51093 +
           ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
           C26027 * C25482) *
              C50843 * C692 -
          (C26028 * C25482 +
           ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
           ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
              C50843 * C693 +
          (C26027 * C51093 +
           (C11197 * C25478 + (C2936 + C2937) * C50779) * C51085 +
           ((C8644 + C8645) * C25478 + (C8634 + C8635) * C50779) * C25482) *
              C50843 * C694 -
          ((((C117 * C8619 + C50942 * C8623) * C50754 +
             (C117 * C8617 + C50942 * C8620) * C696) *
                C50779 +
            (C11209 + C11208) * C25478) *
               C25482 +
           ((C8635 + C8634) * C50779 + C11198 * C25478) * C51085 +
           C26028 * C51093) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C25478 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C51093 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C25478 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C51085 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C25478 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C25482) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C25478 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C50779) *
               C51093 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C25478 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C50779) *
               C51085 +
           ((C10917 - (C10916 + C10915) + C10918 - C10919 - C10920) * C25478 +
            (C2806 * C284 - (C2805 * C278 + C2804 * C283) + C2807 * C279 -
             (C117 * C697 + C50942 * C702) * C285 -
             (C117 * C701 + C50942 * C709) * C280) *
                C50779) *
               C25482) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C25478 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C51093 +
            ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
            C26027 * C25482) *
               C941 -
           (C26177 * C25482 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C25478) * C51085 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C25478) *
                C51093) *
               C942 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C25478 +
             (C977 * C696 + C978 * C50754) * C50779) *
                C51093 +
            ((C3464 + C3465) * C25478 + (C3458 + C3459) * C50779) * C51085 +
            ((C9135 + C9136) * C25478 + (C9131 + C9132) * C50779) * C25482) *
               C943) *
              C51046 +
          ((((C3131 + C3130) * C25478 + (C3105 + C3104) * C50779) * C51093 +
            ((C3132 + C3133) * C25478 + (C3134 + C3135) * C50779) * C51085 +
            ((C8817 + C8818) * C25478 + (C8819 + C8820) * C50779) * C25482) *
               C942 -
           (C26028 * C25482 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
               C941 -
           ((((C117 * C9120 + C50942 * C9124) * C50754 +
              (C117 * C9118 + C50942 * C9121) * C696) *
                 C50779 +
             (C11530 + C11529) * C25478) *
                C25482 +
            ((C9132 + C9131) * C50779 + (C9136 + C9135) * C25478) * C51085 +
            ((C3459 + C3458) * C50779 + (C3465 + C3464) * C25478) * C51093) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C25478 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C51093 +
            ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
            C26027 * C25482) *
               C51047 -
           (C26177 * C25482 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C25478) * C51085 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C25478) *
                C51093) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C25478 + (C3105 + C3104) * C50779) * C51093 +
            ((C3132 + C3133) * C25478 + (C3134 + C3135) * C50779) * C51085 +
            ((C8817 + C8818) * C25478 + (C8819 + C8820) * C50779) * C25482) *
               C50855 -
           (C26028 * C25482 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
               C51047) *
              C583 +
          ((C26027 * C51093 +
            (C11197 * C25478 + (C2936 + C2937) * C50779) * C51085 +
            ((C8644 + C8645) * C25478 + (C8634 + C8635) * C50779) * C25482) *
               C51047 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             (C11322 + C11321) * C25478) *
                C25482 +
            ((C8820 + C8819) * C50779 + C11312 * C25478) * C51085 +
            C26177 * C51093) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C25478 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C51093 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C25478 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C51085 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C25478 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C25482) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C25478 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C50779) *
               C51093 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C25478 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C50779) *
               C51085 +
           ((C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
             C3128 * C285 - C3129 * C280) *
                C25478 +
            (C3128 * C284 - (C3127 * C278 + C3126 * C283) + C3129 * C279 -
             (C117 * C815 + C50942 * C828) * C285 -
             (C117 * C827 + C50942 * C839) * C280) *
                C50779) *
               C25482) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C25478 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C51093 +
           ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
           C26027 * C25482) *
              C1162 -
          (C26177 * C25482 +
           ((C3104 + C3105) * C50779 + (C3130 + C3131) * C25478) * C51085 +
           ((C476 * C50754 + C475 * C696) * C50779 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C25478) *
               C51093) *
              C1163 +
          ((((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C25478 +
            (C977 * C696 + C978 * C50754) * C50779) *
               C51093 +
           ((C3464 + C3465) * C25478 + (C3458 + C3459) * C50779) * C51085 +
           ((C9135 + C9136) * C25478 + (C9131 + C9132) * C50779) * C25482) *
              C1164 -
          ((((C117 * C9236 + C50942 * C9240) * C50754 +
             (C117 * C9234 + C50942 * C9237) * C696) *
                C50779 +
            ((C117 * C9238 + C50942 * C9241) * C50754 +
             (C117 * C9235 + C50942 * C9239) * C696) *
                C25478) *
               C25482 +
           (((C117 * C3568 + C50942 * C3573) * C50754 +
             (C117 * C3564 + C50942 * C3569) * C696) *
                C50779 +
            ((C117 * C3570 + C50942 * C3574) * C50754 +
             (C117 * C3565 + C50942 * C3571) * C696) *
                C25478) *
               C51085 +
           (((C117 * C1174 + C50942 * C1180) * C50754 +
             (C117 * C1168 + C50942 * C1175) * C696) *
                C50779 +
            ((C117 * C1176 + C50942 * C1181) * C50754 +
             (C117 * C1169 + C50942 * C1177) * C696) *
                C25478) *
               C51093) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50942 * C129) * C1285 +
                     (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                     C172 * C51073 + C173 * C1287 + C174 * C1282) *
                        C25478 +
                    (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                     C174 * C51073 + C175 * C1287 + C176 * C1282) *
                        C50779) *
                       C51093 +
                   ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C25478 +
                    (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C50779) *
                       C51085 +
                   ((C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C25478 +
                    (C9395 + C9396 - C9397 - C9398 + C9399 + C9400) * C50779) *
                       C25482) *
                      C1643 +
                  (((C475 * C1286 -
                     ((C117 * C441 + C50942 * C452) * C51089 +
                      (C117 * C435 + C50942 * C442) * C1285) +
                     C476 * C51073 - C477 * C1287 - C478 * C1282) *
                        C25478 +
                    (C477 * C1286 - (C476 * C51089 + C475 * C1285) +
                     C478 * C51073 - C479 * C1287 - C480 * C1282) *
                        C50779) *
                       C51093 +
                   ((C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) +
                     C1541 * C51073 - C1542 * C1287 - C1543 * C1282) *
                        C25478 +
                    (C1542 * C1286 - (C1541 * C51089 + C1540 * C1285) +
                     C1543 * C51073 - C1544 * C1287 - C1545 * C1282) *
                        C50779) *
                       C51085 +
                   ((C3126 * C1286 - (C3125 * C51089 + C3124 * C1285) +
                     C3127 * C51073 - C3128 * C1287 - C3129 * C1282) *
                        C25478 +
                    (C3128 * C1286 - (C3127 * C51089 + C3126 * C1285) +
                     C3129 * C51073 - (C117 * C815 + C50942 * C828) * C1287 -
                     (C117 * C827 + C50942 * C839) * C1282) *
                        C50779) *
                       C25482) *
                      C50855) *
                 C50817) /
                (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C25478 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C50779) *
                C51093 +
            ((C3886 + C3887 - C3888 - C3889) * C25478 +
             (C3890 + C3891 - C3892 - C3893) * C50779) *
                C51085 +
            C26862 * C25482) *
               C1643 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C25478 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C50779) *
                C51093 +
            ((C4104 - (C4105 + C4106) + C4107) * C25478 +
             (C4108 - (C4109 + C4110) + C4111) * C50779) *
                C51085 +
            ((C9758 - (C9759 + C9760) + C9761) * C25478 +
             (C9762 - (C9763 + C9764) + C9765) * C50779) *
                C25482) *
               C50855) *
              C51046 +
          ((((C3888 - (C3887 + C3886) + C3889) * C25478 +
             (C3892 - (C3891 + C3890) + C3893) * C50779) *
                C51093 +
            ((C3898 - (C3899 + C3900) + C3901) * C25478 +
             (C3902 - (C3903 + C3904) + C3905) * C50779) *
                C51085 +
            ((C9549 - (C9550 + C9551) + C9552) * C25478 +
             (C9553 - (C9554 + C9555) + C9556) * C50779) *
                C25482) *
               C1643 +
           (((C4106 + C4105 - C4104 - C4107) * C25478 +
             (C4110 + C4109 - C4108 - C4111) * C50779) *
                C51093 +
            ((C9760 + C9759 - C9758 - C9761) * C25478 +
             (C9764 + C9763 - C9762 - C9765) * C50779) *
                C51085 +
            ((C11944 + C11943 - C11942 - C11945) * C25478 +
             (C8814 * C1391 + C8815 * C1386 -
              (C117 * C3089 + C50942 * C3093) * C1392 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C25482) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C25478 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C50779) *
               C51093 +
           ((C3886 + C3887 - C3888 - C3889) * C25478 +
            (C3890 + C3891 - C3892 - C3893) * C50779) *
               C51085 +
           C26862 * C25482) *
              C51092 +
          (((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C25478 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C50779) *
               C51093 +
           ((C4104 - (C4105 + C4106) + C4107) * C25478 +
            (C4108 - (C4109 + C4110) + C4111) * C50779) *
               C51085 +
           ((C9758 - (C9759 + C9760) + C9761) * C25478 +
            (C9762 - (C9763 + C9764) + C9765) * C50779) *
               C25482) *
              C51082 +
          ((((C117 * C944 + C50942 * C949) * C1391 +
             (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
             C978 * C50759) *
                C25478 +
            (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) *
                C50779) *
               C51093 +
           ((C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
                C25478 +
            (C3292 * C1391 + C3293 * C1386 - C3294 * C1392 - C3295 * C50759) *
                C50779) *
               C51085 +
           ((C9133 * C1391 + C9134 * C1386 - C8971 * C1392 - C8972 * C50759) *
                C25478 +
            (C8971 * C1391 + C8972 * C1386 -
             (C117 * C3441 + C50942 * C3445) * C1392 -
             (C117 * C3444 + C50942 * C3450) * C50759) *
                C50779) *
               C25482) *
              C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C25478 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C50779) *
              C51093 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C25478 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C50779) *
              C51085 +
          ((C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
            C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
               C25478 +
           (C620 * C118 + C621 * C106 - C622 * C119 - C623 * C107 +
            C624 * C120 + C625 * C108 - (C117 * C591 + C50942 * C600) * C121 -
            (C117 * C601 + C50942 * C606) * C109) *
               C50779) *
              C25482) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C25478 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C51093 +
           ((C2768 + C2769 - C2770 - C2771) * C25478 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C51085 +
           C25924 * C25482) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C25478 +
            (C2774 - (C2773 + C2772) + C2775) * C50779) *
               C51093 +
           ((C2780 - (C2808 + C2809) + C2785) * C25478 +
            (C2786 - (C2787 + C2788) + C2789) * C50779) *
               C51085 +
           ((C8499 - (C8500 + C8501) + C8502) * C25478 +
            (C8503 - (C8504 + C8505) + C8506) * C50779) *
               C25482) *
              C50843 * C583 +
          (C25924 * C51093 +
           (C11124 * C25478 + (C8505 + C8504 - C8503 - C8506) * C50779) *
               C51085 +
           ((C11121 + C11120 - C11119 - C11122) * C25478 +
            (C8513 * C49770 + C8514 * C51031 -
             (C117 * C2907 + C50942 * C2911) * C49763 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C25482) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C25478 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C51093 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C25478 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C51085 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C25478 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C25482) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C25478 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C50779) *
               C51093 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C25478 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C50779) *
               C51085 +
           ((C10917 - (C10916 + C10915) + C10918 - C10919 - C10920) * C25478 +
            (C2806 * C284 - (C2805 * C278 + C2804 * C283) + C2807 * C279 -
             (C117 * C697 + C50942 * C702) * C285 -
             (C117 * C701 + C50942 * C709) * C280) *
                C50779) *
               C25482) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C25478 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C51093 +
           ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
           C26027 * C25482) *
              C50843 * C692 -
          (C26028 * C25482 +
           ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
           ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
              C50843 * C693 +
          (C26027 * C51093 +
           (C11197 * C25478 + (C2936 + C2937) * C50779) * C51085 +
           ((C8644 + C8645) * C25478 + (C8634 + C8635) * C50779) * C25482) *
              C50843 * C694 -
          ((((C117 * C8619 + C50942 * C8623) * C50754 +
             (C117 * C8617 + C50942 * C8620) * C696) *
                C50779 +
            (C11209 + C11208) * C25478) *
               C25482 +
           ((C8635 + C8634) * C50779 + C11198 * C25478) * C51085 +
           C26028 * C51093) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C25478 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C51093 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C25478 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C51085 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C25478 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C25482) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C25478 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C50779) *
               C51093 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C25478 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C50779) *
               C51085 +
           ((C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
             C3128 * C285 - C3129 * C280) *
                C25478 +
            (C3128 * C284 - (C3127 * C278 + C3126 * C283) + C3129 * C279 -
             (C117 * C815 + C50942 * C828) * C285 -
             (C117 * C827 + C50942 * C839) * C280) *
                C50779) *
               C25482) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C25478 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C51093 +
            ((C2920 + C2921) * C25478 + (C2922 + C2923) * C50779) * C51085 +
            C26027 * C25482) *
               C51047 -
           (C26177 * C25482 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C25478) * C51085 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C25478) *
                C51093) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C25478 + (C3105 + C3104) * C50779) * C51093 +
            ((C3132 + C3133) * C25478 + (C3134 + C3135) * C50779) * C51085 +
            ((C8817 + C8818) * C25478 + (C8819 + C8820) * C50779) * C25482) *
               C50855 -
           (C26028 * C25482 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C25478) * C51085 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C25478) * C51093) *
               C51047) *
              C583 +
          ((C26027 * C51093 +
            (C11197 * C25478 + (C2936 + C2937) * C50779) * C51085 +
            ((C8644 + C8645) * C25478 + (C8634 + C8635) * C50779) * C25482) *
               C51047 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             (C11322 + C11321) * C25478) *
                C25482 +
            ((C8820 + C8819) * C50779 + C11312 * C25478) * C51085 +
            C26177 * C51093) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1285 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51089 -
             (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 +
             C5250 * C1287 + C5251 * C1282) *
                C25478 +
            ((C5235 + C5234) * C1285 + (C5237 + C5236) * C51089 -
             (C5239 + C5238) * C1286 - (C5241 + C5240) * C51073 +
             (C5243 + C5242) * C1287 + (C5245 + C5244) * C1282) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C1285 + (C12864 + C12865) * C51089 -
             C28353 * C1286 - C28354 * C51073 + C28355 * C1287 +
             C28356 * C1282) *
                C25478 +
            (C28357 * C1285 + C28358 * C51089 - C5436 * C1286 - C5437 * C51073 +
             (C5433 + C5432) * C1287 + (C5435 + C5434) * C1282) *
                C50779) *
               C50930) *
              C50843 * C1283 +
          (((C28357 * C1286 -
             ((C12865 + C12864) * C51089 + (C12863 + C12862) * C1285) +
             C28358 * C51073 - C5436 * C1287 - C5437 * C1282) *
                C25478 +
            (C28355 * C1286 - (C28354 * C51089 + C28353 * C1285) +
             C28356 * C51073 - (C5432 + C5433) * C1287 -
             (C5434 + C5435) * C1282) *
                C50779) *
               C22848 +
           ((C28747 * C1286 -
             ((C12869 + C12868) * C51089 + (C12867 + C12866) * C1285) +
             C28748 * C51073 - (C5788 + C5789) * C1287 -
             (C5790 + C5791) * C1282) *
                C25478 +
            ((C5789 + C5788) * C1286 - (C13165 * C51089 + C13164 * C1285) +
             (C5791 + C5790) * C51073 -
             (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                 C1287 -
             (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                 C1282) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C25478 +
            ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
             (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
             C28353 * C1392 - C28354 * C50759) *
                C25478 +
            (C28357 * C1391 + C28358 * C1386 - C5436 * C1392 - C5437 * C50759) *
                C50779) *
               C50930) *
              C50843 * C51091 +
          (((C28357 * C1392 -
             ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
             C28358 * C50759) *
                C25478 +
            (C28355 * C1392 - (C28354 * C1386 + C28353 * C1391) +
             C28356 * C50759) *
                C50779) *
               C22848 +
           ((C28747 * C1392 -
             ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
             C28748 * C50759) *
                C25478 +
            ((C5789 + C5788) * C1392 - (C13165 * C1386 + C13164 * C1391) +
             (C5791 + C5790) * C50759) *
                C50779) *
               C50930) *
              C50843 * C51079 +
          ((C14226 * C25478 +
            (C28747 * C1391 + C28748 * C1386 - (C5788 + C5789) * C1392 -
             (C5790 + C5791) * C50759) *
                C50779) *
               C22848 +
           (((C13191 + C13190) * C1391 + (C13189 + C13188) * C1386 -
             (C13187 + C13186) * C1392 - (C13193 + C13192) * C50759) *
                C25478 +
            ((C13186 + C13187) * C1391 + (C13192 + C13193) * C1386 -
             (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                 C1392 -
             (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C1391 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C1386 -
              (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                 C25478 +
             ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
              (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                 C50779) *
                C22848 +
            (((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
              C28353 * C1392 - C28354 * C50759) *
                 C25478 +
             (C28357 * C1391 + C28358 * C1386 - C5436 * C1392 -
              C5437 * C50759) *
                 C50779) *
                C50930) *
               C51047 +
           ((((C5608 + C5609) * C1392 -
              ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                   C1386 +
               (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                   C1391) +
              (C5610 + C5611) * C50759) *
                 C25478 +
             ((C5613 + C5612) * C1392 -
              ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
              (C5615 + C5614) * C50759) *
                 C50779) *
                C22848 +
            ((C30249 * C1392 -
              ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
              C30250 * C50759) *
                 C25478 +
             ((C6969 + C6968) * C1392 - (C30251 * C1386 + C30252 * C1391) +
              (C6971 + C6970) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C1283 +
          ((((C28357 * C1392 -
              ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
              C28358 * C50759) *
                 C25478 +
             (C28355 * C1392 - (C28354 * C1386 + C28353 * C1391) +
              C28356 * C50759) *
                 C50779) *
                C22848 +
            ((C28747 * C1392 -
              ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
              C28748 * C50759) *
                 C25478 +
             ((C5789 + C5788) * C1392 - (C13165 * C1386 + C13164 * C1391) +
              (C5791 + C5790) * C50759) *
                 C50779) *
                C50930) *
               C51047 +
           ((((C13495 + C13494) * C1391 + (C13493 + C13492) * C1386 -
              C30252 * C1392 - C30251 * C50759) *
                 C25478 +
             (C30249 * C1391 + C30250 * C1386 - (C6968 + C6969) * C1392 -
              (C6970 + C6971) * C50759) *
                 C50779) *
                C22848 +
            (((C13491 + C13490) * C1391 + (C13489 + C13488) * C1386 -
              (C14431 + C14430) * C1392 - (C14433 + C14432) * C50759) *
                 C25478 +
             ((C14430 + C14431) * C1391 + (C14432 + C14433) * C1386 -
              (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                  C1392 -
              (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C49770 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C51031 -
              (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                 C25478 +
             ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
              (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                 C50779) *
                C22848 +
            (((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
              C28353 * C49763 - C28354 * C50759) *
                 C25478 +
             (C28357 * C49770 + C28358 * C51031 - C5436 * C49763 -
              C5437 * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C5608 + C5609) * C49763 -
              ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                   C51031 +
               (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                   C49770) +
              (C5610 + C5611) * C50759) *
                 C25478 +
             ((C5613 + C5612) * C49763 -
              ((C5611 + C5610) * C51031 + (C5609 + C5608) * C49770) +
              (C5615 + C5614) * C50759) *
                 C50779) *
                C22848 +
            ((C30249 * C49763 -
              ((C13492 + C13493) * C51031 + (C13494 + C13495) * C49770) +
              C30250 * C50759) *
                 C25478 +
             ((C6969 + C6968) * C49763 - (C30251 * C51031 + C30252 * C49770) +
              (C6971 + C6970) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C1283 +
          ((((C28357 * C49763 -
              ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
              C28358 * C50759) *
                 C25478 +
             (C28355 * C49763 - (C28354 * C51031 + C28353 * C49770) +
              C28356 * C50759) *
                 C50779) *
                C22848 +
            ((C28747 * C49763 -
              ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
              C28748 * C50759) *
                 C25478 +
             ((C5789 + C5788) * C49763 - (C13165 * C51031 + C13164 * C49770) +
              (C5791 + C5790) * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C13495 + C13494) * C49770 + (C13493 + C13492) * C51031 -
              C30252 * C49763 - C30251 * C50759) *
                 C25478 +
             (C30249 * C49770 + C30250 * C51031 - (C6968 + C6969) * C49763 -
              (C6970 + C6971) * C50759) *
                 C50779) *
                C22848 +
            (((C13491 + C13490) * C49770 + (C13489 + C13488) * C51031 -
              (C14431 + C14430) * C49763 - (C14433 + C14432) * C50759) *
                 C25478 +
             ((C14430 + C14431) * C49770 + (C14432 + C14433) * C51031 -
              (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                  C49763 -
              (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C696 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
                C22848 +
            (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
             (C28357 * C696 + C28358 * C50754) * C50779) *
                C50930) *
               C1643 -
           (((C30251 * C50754 + C30252 * C696) * C50779 +
             ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C25478) *
                C50930 +
            (((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C50779 +
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C50754 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C696) *
                 C25478) *
                C22848) *
               C50855) *
              C51091 +
          (((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C25478 +
             (C30249 * C696 + C30250 * C50754) * C50779) *
                C22848 +
            (((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C25478 +
             ((C14430 + C14431) * C696 + (C14432 + C14433) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C13165 * C50754 + C13164 * C696) * C50779 +
             ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
                C50930 +
            ((C28354 * C50754 + C28353 * C696) * C50779 +
             ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
                C22848) *
               C1643) *
              C51079 +
          (((C13308 * C25478 + (C28747 * C696 + C28748 * C50754) * C50779) *
                C22848 +
            (((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C25478 +
             ((C13186 + C13187) * C696 + (C13192 + C13193) * C50754) * C50779) *
                C50930) *
               C1643 -
           ((((C5200 * C9120 + C50954 * C9124 + C5199 * C3094 +
               C51060 * C3099) *
                  C50754 +
              (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 +
               C51060 * C3095) *
                  C696) *
                 C50779 +
             ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C25478) *
                C50930 +
            (((C14433 + C14432) * C50754 + (C14431 + C14430) * C696) * C50779 +
             C13504 * C25478) *
                C22848) *
               C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C696 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
                C22848 +
            (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
             (C28357 * C696 + C28358 * C50754) * C50779) *
                C50930) *
               C51092 -
           (((C30251 * C50754 + C30252 * C696) * C50779 +
             ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C25478) *
                C50930 +
            (((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C50779 +
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C50754 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C696) *
                 C25478) *
                C22848) *
               C51082 +
           ((((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                  C696 +
              (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                  C50754) *
                 C25478 +
             ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C50779) *
                C22848 +
            (((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C25478 +
             ((C29276 + C29275) * C696 + (C29278 + C29277) * C50754) * C50779) *
                C50930) *
               C1875) *
              C1283 +
          (((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C25478 +
             (C30249 * C696 + C30250 * C50754) * C50779) *
                C22848 +
            (((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C25478 +
             ((C14430 + C14431) * C696 + (C14432 + C14433) * C50754) * C50779) *
                C50930) *
               C51082 -
           (((C13165 * C50754 + C13164 * C696) * C50779 +
             ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
                C50930 +
            ((C28354 * C50754 + C28353 * C696) * C50779 +
             ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
                C22848) *
               C51092 -
           ((((C5200 * C9236 + C50954 * C9240 + C5199 * C3446 +
               C51060 * C3451) *
                  C50754 +
              (C5200 * C9234 + C50954 * C9237 + C5199 * C3442 +
               C51060 * C3447) *
                  C696) *
                 C50779 +
             ((C13821 + C13820) * C50754 + (C13819 + C13818) * C696) * C25478) *
                C50930 +
            (((C29277 + C29278) * C50754 + (C29275 + C29276) * C696) * C50779 +
             ((C13817 + C13816) * C50754 + (C13815 + C13814) * C696) * C25478) *
                C22848) *
               C1875) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C25478 +
            ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
             (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
             C28353 * C49763 - C28354 * C50759) *
                C25478 +
            (C28357 * C49770 + C28358 * C51031 - C5436 * C49763 -
             C5437 * C50759) *
                C50779) *
               C50930) *
              C50843 * C582 +
          (((C28357 * C49763 -
             ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
             C28358 * C50759) *
                C25478 +
            (C28355 * C49763 - (C28354 * C51031 + C28353 * C49770) +
             C28356 * C50759) *
                C50779) *
               C22848 +
           ((C28747 * C49763 -
             ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
             C28748 * C50759) *
                C25478 +
            ((C5789 + C5788) * C49763 - (C13165 * C51031 + C13164 * C49770) +
             (C5791 + C5790) * C50759) *
                C50779) *
               C50930) *
              C50843 * C583 +
          ((C13196 * C25478 +
            (C28747 * C49770 + C28748 * C51031 - (C5788 + C5789) * C49763 -
             (C5790 + C5791) * C50759) *
                C50779) *
               C22848 +
           (((C13191 + C13190) * C49770 + (C13189 + C13188) * C51031 -
             (C13187 + C13186) * C49763 - (C13193 + C13192) * C50759) *
                C25478 +
            ((C13186 + C13187) * C49770 + (C13192 + C13193) * C51031 -
             (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                 C49763 -
             (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C118 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C106 -
            (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
            C5251 * C108 - C5252 * C121 - C5253 * C109) *
               C25478 +
           ((C5235 + C5234) * C118 + (C5237 + C5236) * C106 -
            (C5239 + C5238) * C119 - (C5241 + C5240) * C107 +
            (C5243 + C5242) * C120 + (C5245 + C5244) * C108 -
            (C5246 + C5247) * C121 - (C5248 + C5249) * C109) *
               C50779) *
              C22848 +
          (((C12862 + C12863) * C118 + (C12864 + C12865) * C106 -
            (C5425 + C5424) * C119 - (C5427 + C5426) * C107 +
            (C5429 + C5428) * C120 + (C5431 + C5430) * C108 -
            (C5432 + C5433) * C121 - (C5434 + C5435) * C109) *
               C25478 +
           ((C5424 + C5425) * C118 + (C5426 + C5427) * C106 - C5436 * C119 -
            C5437 * C107 + (C5433 + C5432) * C120 + (C5435 + C5434) * C108 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C121 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C109) *
               C50779) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C25478 +
            ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
             (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
             C28353 * C49763 - C28354 * C50759) *
                C25478 +
            (C28357 * C49770 + C28358 * C51031 - C5436 * C49763 -
             C5437 * C50759) *
                C50779) *
               C50930) *
              C941 +
          ((((C5608 + C5609) * C49763 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C51031 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C49770) +
             (C5610 + C5611) * C50759) *
                C25478 +
            ((C5613 + C5612) * C49763 -
             ((C5611 + C5610) * C51031 + (C5609 + C5608) * C49770) +
             (C5615 + C5614) * C50759) *
                C50779) *
               C22848 +
           (((C6965 + C6964) * C49763 -
             ((C13492 + C13493) * C51031 + (C13494 + C13495) * C49770) +
             (C6967 + C6966) * C50759) *
                C25478 +
            ((C6969 + C6968) * C49763 -
             ((C6966 + C6967) * C51031 + (C6964 + C6965) * C49770) +
             (C6971 + C6970) * C50759) *
                C50779) *
               C50930) *
              C942 +
          ((((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C49770 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C51031 -
             (C6198 + C6199) * C49763 - (C6200 + C6201) * C50759) *
                C25478 +
            ((C6199 + C6198) * C49770 + (C6201 + C6200) * C51031 -
             (C6202 + C6203) * C49763 - (C6204 + C6205) * C50759) *
                C50779) *
               C22848 +
           (((C13814 + C13815) * C49770 + (C13816 + C13817) * C51031 -
             (C29275 + C29276) * C49763 - (C29277 + C29278) * C50759) *
                C25478 +
            ((C29276 + C29275) * C49770 + (C29278 + C29277) * C51031 -
             (C5200 * C3563 + C50954 * C3567 + C5199 * C1081 + C51060 * C1087) *
                 C49763 -
             (C5200 * C3566 + C50954 * C3572 + C5199 * C1086 + C51060 * C1093) *
                 C50759) *
                C50779) *
               C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C25478 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
               C22848 +
           (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
            (C28357 * C696 + C28358 * C50754) * C50779) *
               C50930) *
              C50843 * C692 -
          (((C13165 * C50754 + C13164 * C696) * C50779 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
               C50930 +
           ((C28354 * C50754 + C28353 * C696) * C50779 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
               C22848) *
              C50843 * C693 +
          ((C13308 * C25478 + (C28747 * C696 + C28748 * C50754) * C50779) *
               C22848 +
           (((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C25478 +
            ((C13186 + C13187) * C696 + (C13192 + C13193) * C50754) * C50779) *
               C50930) *
              C50843 * C694 -
          ((((C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                 C50754 +
             (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                 C696) *
                C50779 +
            ((C13314 + C13313) * C50754 + (C13312 + C13311) * C696) * C25478) *
               C50930 +
           (((C13193 + C13192) * C50754 + (C13187 + C13186) * C696) * C50779 +
            C13316 * C25478) *
               C22848) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C283 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C278 -
             (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
             C5251 * C280) *
                C25478 +
            ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
             (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
             (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
             C28353 * C284 - C28354 * C279 + C28355 * C285 + C28356 * C280) *
                C25478 +
            (C28357 * C283 + C28358 * C278 - C5436 * C284 - C5437 * C279 +
             (C5433 + C5432) * C285 + (C5435 + C5434) * C280) *
                C50779) *
               C50930) *
              C50843 * C51046 +
          (((C28357 * C284 -
             ((C12865 + C12864) * C278 + (C12863 + C12862) * C283) +
             C28358 * C279 - C5436 * C285 - C5437 * C280) *
                C25478 +
            (C28355 * C284 - (C28354 * C278 + C28353 * C283) + C28356 * C279 -
             (C5432 + C5433) * C285 - (C5434 + C5435) * C280) *
                C50779) *
               C22848 +
           (((C5785 + C5784) * C284 -
             ((C12869 + C12868) * C278 + (C12867 + C12866) * C283) +
             (C5787 + C5786) * C279 - (C5788 + C5789) * C285 -
             (C5790 + C5791) * C280) *
                C25478 +
            ((C5789 + C5788) * C284 - (C13165 * C278 + C13164 * C283) +
             (C5791 + C5790) * C279 -
             (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                 C285 -
             (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                 C280) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C696 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
                C22848 +
            (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
             (C28357 * C696 + C28358 * C50754) * C50779) *
                C50930) *
               C941 -
           ((((C6966 + C6967) * C50754 + (C6964 + C6965) * C696) * C50779 +
             ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C25478) *
                C50930 +
            (((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C50779 +
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C50754 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C696) *
                 C25478) *
                C22848) *
               C942 +
           ((((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                  C696 +
              (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                  C50754) *
                 C25478 +
             ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C50779) *
                C22848 +
            (((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C25478 +
             ((C29276 + C29275) * C696 + (C29278 + C29277) * C50754) * C50779) *
                C50930) *
               C943) *
              C51046 +
          (((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C25478 +
             ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C50779) *
                C22848 +
            (((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C25478 +
             ((C14430 + C14431) * C696 + (C14432 + C14433) * C50754) * C50779) *
                C50930) *
               C942 -
           (((C13165 * C50754 + C13164 * C696) * C50779 +
             ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
                C50930 +
            ((C28354 * C50754 + C28353 * C696) * C50779 +
             ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
                C22848) *
               C941 -
           ((((C5200 * C9236 + C50954 * C9240 + C5199 * C3446 +
               C51060 * C3451) *
                  C50754 +
              (C5200 * C9234 + C50954 * C9237 + C5199 * C3442 +
               C51060 * C3447) *
                  C696) *
                 C50779 +
             ((C13821 + C13820) * C50754 + (C13819 + C13818) * C696) * C25478) *
                C50930 +
            (((C29277 + C29278) * C50754 + (C29275 + C29276) * C696) * C50779 +
             ((C13817 + C13816) * C50754 + (C13815 + C13814) * C696) * C25478) *
                C22848) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C696 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
                C22848 +
            (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
             (C28357 * C696 + C28358 * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C6966 + C6967) * C50754 + (C6964 + C6965) * C696) * C50779 +
             ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C25478) *
                C50930 +
            (((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C50779 +
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C50754 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C696) *
                 C25478) *
                C22848) *
               C50855) *
              C582 +
          (((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C25478 +
             ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C50779) *
                C22848 +
            (((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C25478 +
             ((C14430 + C14431) * C696 + (C14432 + C14433) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C13165 * C50754 + C13164 * C696) * C50779 +
             ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
                C50930 +
            ((C28354 * C50754 + C28353 * C696) * C50779 +
             ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
                C22848) *
               C51047) *
              C583 +
          (((C13308 * C25478 + (C28747 * C696 + C28748 * C50754) * C50779) *
                C22848 +
            (((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C25478 +
             ((C13186 + C13187) * C696 + (C13192 + C13193) * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C5200 * C9120 + C50954 * C9124 + C5199 * C3094 +
               C51060 * C3099) *
                  C50754 +
              (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 +
               C51060 * C3095) *
                  C696) *
                 C50779 +
             ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C25478) *
                C50930 +
            (((C14433 + C14432) * C50754 + (C14431 + C14430) * C696) * C50779 +
             C13504 * C25478) *
                C22848) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C283 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C278 -
             (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
             C5251 * C280) *
                C25478 +
            ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
             (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
             (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
             C28353 * C284 - C28354 * C279 + C28355 * C285 + C28356 * C280) *
                C25478 +
            (C28357 * C283 + C28358 * C278 - C5436 * C284 - C5437 * C279 +
             (C5433 + C5432) * C285 + (C5435 + C5434) * C280) *
                C50779) *
               C50930) *
              C51047 +
          ((((C5608 + C5609) * C284 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C278 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C283) +
             (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
                C25478 +
            ((C5613 + C5612) * C284 -
             ((C5611 + C5610) * C278 + (C5609 + C5608) * C283) +
             (C5615 + C5614) * C279 - (C5616 + C5617) * C285 -
             (C5618 + C5619) * C280) *
                C50779) *
               C22848 +
           (((C6965 + C6964) * C284 -
             ((C13492 + C13493) * C278 + (C13494 + C13495) * C283) +
             (C6967 + C6966) * C279 - (C6968 + C6969) * C285 -
             (C6970 + C6971) * C280) *
                C25478 +
            ((C6969 + C6968) * C284 -
             ((C6966 + C6967) * C278 + (C6964 + C6965) * C283) +
             (C6971 + C6970) * C279 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C285 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C280) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C25478 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
               C22848 +
           (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
            (C28357 * C696 + C28358 * C50754) * C50779) *
               C50930) *
              C1162 -
          ((((C6966 + C6967) * C50754 + (C6964 + C6965) * C696) * C50779 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C25478) *
               C50930 +
           (((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C50779 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C25478) *
               C22848) *
              C1163 +
          ((((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C25478 +
            ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C50779) *
               C22848 +
           (((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C25478 +
            ((C29276 + C29275) * C696 + (C29278 + C29277) * C50754) * C50779) *
               C50930) *
              C1164 -
          ((((C5200 * C16646 + C50954 * C16648 + C5199 * C3568 +
              C51060 * C3573) *
                 C50754 +
             (C5200 * C16645 + C50954 * C16647 + C5199 * C3564 +
              C51060 * C3569) *
                 C696) *
                C50779 +
            ((C5200 * C13923 + C50954 * C13926 + C5199 * C3570 +
              C51060 * C3574) *
                 C50754 +
             (C5200 * C13920 + C50954 * C13924 + C5199 * C3565 +
              C51060 * C3571) *
                 C696) *
                C25478) *
               C50930 +
           (((C5200 * C6454 + C50954 * C6459 + C5199 * C1174 + C51060 * C1180) *
                 C50754 +
             (C5200 * C6450 + C50954 * C6455 + C5199 * C1168 + C51060 * C1175) *
                 C696) *
                C50779 +
            ((C5200 * C6456 + C50954 * C6460 + C5199 * C1176 + C51060 * C1181) *
                 C50754 +
             (C5200 * C6451 + C50954 * C6457 + C5199 * C1169 + C51060 * C1177) *
                 C696) *
                C25478) *
               C22848) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1285 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51089 -
             (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 +
             C5250 * C1287 + C5251 * C1282) *
                C25478 +
            ((C5235 + C5234) * C1285 + (C5237 + C5236) * C51089 -
             (C5239 + C5238) * C1286 - (C5241 + C5240) * C51073 +
             (C5243 + C5242) * C1287 + (C5245 + C5244) * C1282) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C1285 + (C12864 + C12865) * C51089 -
             C28353 * C1286 - C28354 * C51073 + C28355 * C1287 +
             C28356 * C1282) *
                C25478 +
            (C28357 * C1285 + C28358 * C51089 - C5436 * C1286 - C5437 * C51073 +
             (C5433 + C5432) * C1287 + (C5435 + C5434) * C1282) *
                C50779) *
               C50930) *
              C1643 +
          ((((C5608 + C5609) * C1286 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C51089 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1285) +
             (C5610 + C5611) * C51073 - C5620 * C1287 - C5621 * C1282) *
                C25478 +
            ((C5613 + C5612) * C1286 -
             ((C5611 + C5610) * C51089 + (C5609 + C5608) * C1285) +
             (C5615 + C5614) * C51073 - (C5616 + C5617) * C1287 -
             (C5618 + C5619) * C1282) *
                C50779) *
               C22848 +
           ((C30249 * C1286 -
             ((C13492 + C13493) * C51089 + (C13494 + C13495) * C1285) +
             C30250 * C51073 - (C6968 + C6969) * C1287 -
             (C6970 + C6971) * C1282) *
                C25478 +
            ((C6969 + C6968) * C1286 - (C30251 * C51089 + C30252 * C1285) +
             (C6971 + C6970) * C51073 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C1287 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C1282) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C1391 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C1386 -
              (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                 C25478 +
             ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
              (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                 C50779) *
                C22848 +
            (((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
              C28353 * C1392 - C28354 * C50759) *
                 C25478 +
             (C28357 * C1391 + C28358 * C1386 - C5436 * C1392 -
              C5437 * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C5608 + C5609) * C1392 -
              ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                   C1386 +
               (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                   C1391) +
              (C5610 + C5611) * C50759) *
                 C25478 +
             ((C5613 + C5612) * C1392 -
              ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
              (C5615 + C5614) * C50759) *
                 C50779) *
                C22848 +
            ((C30249 * C1392 -
              ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
              C30250 * C50759) *
                 C25478 +
             ((C6969 + C6968) * C1392 - (C30251 * C1386 + C30252 * C1391) +
              (C6971 + C6970) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C51046 +
          ((((C28357 * C1392 -
              ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
              C28358 * C50759) *
                 C25478 +
             (C28355 * C1392 - (C28354 * C1386 + C28353 * C1391) +
              C28356 * C50759) *
                 C50779) *
                C22848 +
            ((C28747 * C1392 -
              ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
              C28748 * C50759) *
                 C25478 +
             ((C5789 + C5788) * C1392 - (C13165 * C1386 + C13164 * C1391) +
              (C5791 + C5790) * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C13495 + C13494) * C1391 + (C13493 + C13492) * C1386 -
              C30252 * C1392 - C30251 * C50759) *
                 C25478 +
             (C30249 * C1391 + C30250 * C1386 - (C6968 + C6969) * C1392 -
              (C6970 + C6971) * C50759) *
                 C50779) *
                C22848 +
            (((C13491 + C13490) * C1391 + (C13489 + C13488) * C1386 -
              (C14431 + C14430) * C1392 - (C14433 + C14432) * C50759) *
                 C25478 +
             ((C14430 + C14431) * C1391 + (C14432 + C14433) * C1386 -
              (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                  C1392 -
              (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C25478 +
            ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
             (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
             C28353 * C1392 - C28354 * C50759) *
                C25478 +
            (C28357 * C1391 + C28358 * C1386 - C5436 * C1392 - C5437 * C50759) *
                C50779) *
               C50930) *
              C51092 +
          ((((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C25478 +
            ((C5613 + C5612) * C1392 -
             ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
             (C5615 + C5614) * C50759) *
                C50779) *
               C22848 +
           ((C30249 * C1392 -
             ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
             C30250 * C50759) *
                C25478 +
            ((C6969 + C6968) * C1392 - (C30251 * C1386 + C30252 * C1391) +
             (C6971 + C6970) * C50759) *
                C50779) *
               C50930) *
              C51082 +
          ((((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C1391 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C1386 -
             (C6198 + C6199) * C1392 - (C6200 + C6201) * C50759) *
                C25478 +
            ((C6199 + C6198) * C1391 + (C6201 + C6200) * C1386 -
             (C6202 + C6203) * C1392 - (C6204 + C6205) * C50759) *
                C50779) *
               C22848 +
           (((C13814 + C13815) * C1391 + (C13816 + C13817) * C1386 -
             (C29275 + C29276) * C1392 - (C29277 + C29278) * C50759) *
                C25478 +
            ((C29276 + C29275) * C1391 + (C29278 + C29277) * C1386 -
             (C5200 * C3563 + C50954 * C3567 + C5199 * C1081 + C51060 * C1087) *
                 C1392 -
             (C5200 * C3566 + C50954 * C3572 + C5199 * C1086 + C51060 * C1093) *
                 C50759) *
                C50779) *
               C50930) *
              C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C118 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C106 -
            (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
            C5251 * C108 - C5252 * C121 - C5253 * C109) *
               C25478 +
           ((C5235 + C5234) * C118 + (C5237 + C5236) * C106 -
            (C5239 + C5238) * C119 - (C5241 + C5240) * C107 +
            (C5243 + C5242) * C120 + (C5245 + C5244) * C108 -
            (C5246 + C5247) * C121 - (C5248 + C5249) * C109) *
               C50779) *
              C22848 +
          (((C12862 + C12863) * C118 + (C12864 + C12865) * C106 -
            (C5425 + C5424) * C119 - (C5427 + C5426) * C107 +
            (C5429 + C5428) * C120 + (C5431 + C5430) * C108 -
            (C5432 + C5433) * C121 - (C5434 + C5435) * C109) *
               C25478 +
           ((C5424 + C5425) * C118 + (C5426 + C5427) * C106 - C5436 * C119 -
            C5437 * C107 + (C5433 + C5432) * C120 + (C5435 + C5434) * C108 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C121 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C109) *
               C50779) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C25478 +
            ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
             (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
             C28353 * C49763 - C28354 * C50759) *
                C25478 +
            (C28357 * C49770 + C28358 * C51031 - C5436 * C49763 -
             C5437 * C50759) *
                C50779) *
               C50930) *
              C50843 * C582 +
          (((C28357 * C49763 -
             ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
             C28358 * C50759) *
                C25478 +
            (C28355 * C49763 - (C28354 * C51031 + C28353 * C49770) +
             C28356 * C50759) *
                C50779) *
               C22848 +
           ((C28747 * C49763 -
             ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
             C28748 * C50759) *
                C25478 +
            ((C5789 + C5788) * C49763 - (C13165 * C51031 + C13164 * C49770) +
             (C5791 + C5790) * C50759) *
                C50779) *
               C50930) *
              C50843 * C583 +
          ((C13196 * C25478 +
            (C28747 * C49770 + C28748 * C51031 - (C5788 + C5789) * C49763 -
             (C5790 + C5791) * C50759) *
                C50779) *
               C22848 +
           (((C13191 + C13190) * C49770 + (C13189 + C13188) * C51031 -
             (C13187 + C13186) * C49763 - (C13193 + C13192) * C50759) *
                C25478 +
            ((C13186 + C13187) * C49770 + (C13192 + C13193) * C51031 -
             (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                 C49763 -
             (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C283 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C278 -
             (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
             C5251 * C280) *
                C25478 +
            ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
             (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
             (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
             C28353 * C284 - C28354 * C279 + C28355 * C285 + C28356 * C280) *
                C25478 +
            (C28357 * C283 + C28358 * C278 - C5436 * C284 - C5437 * C279 +
             (C5433 + C5432) * C285 + (C5435 + C5434) * C280) *
                C50779) *
               C50930) *
              C50843 * C51046 +
          (((C28357 * C284 -
             ((C12865 + C12864) * C278 + (C12863 + C12862) * C283) +
             C28358 * C279 - C5436 * C285 - C5437 * C280) *
                C25478 +
            (C28355 * C284 - (C28354 * C278 + C28353 * C283) + C28356 * C279 -
             (C5432 + C5433) * C285 - (C5434 + C5435) * C280) *
                C50779) *
               C22848 +
           (((C5785 + C5784) * C284 -
             ((C12869 + C12868) * C278 + (C12867 + C12866) * C283) +
             (C5787 + C5786) * C279 - (C5788 + C5789) * C285 -
             (C5790 + C5791) * C280) *
                C25478 +
            ((C5789 + C5788) * C284 - (C13165 * C278 + C13164 * C283) +
             (C5791 + C5790) * C279 -
             (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                 C285 -
             (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                 C280) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C25478 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
               C22848 +
           (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
            (C28357 * C696 + C28358 * C50754) * C50779) *
               C50930) *
              C50843 * C692 -
          (((C13165 * C50754 + C13164 * C696) * C50779 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
               C50930 +
           ((C28354 * C50754 + C28353 * C696) * C50779 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
               C22848) *
              C50843 * C693 +
          ((C13308 * C25478 + (C28747 * C696 + C28748 * C50754) * C50779) *
               C22848 +
           (((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C25478 +
            ((C13186 + C13187) * C696 + (C13192 + C13193) * C50754) * C50779) *
               C50930) *
              C50843 * C694 -
          ((((C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                 C50754 +
             (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                 C696) *
                C50779 +
            ((C13314 + C13313) * C50754 + (C13312 + C13311) * C696) * C25478) *
               C50930 +
           (((C13193 + C13192) * C50754 + (C13187 + C13186) * C696) * C50779 +
            C13316 * C25478) *
               C22848) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C283 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C278 -
             (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
             C5251 * C280) *
                C25478 +
            ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
             (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
             (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
                C50779) *
               C22848 +
           (((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
             C28353 * C284 - C28354 * C279 + C28355 * C285 + C28356 * C280) *
                C25478 +
            (C28357 * C283 + C28358 * C278 - C5436 * C284 - C5437 * C279 +
             (C5433 + C5432) * C285 + (C5435 + C5434) * C280) *
                C50779) *
               C50930) *
              C51047 +
          ((((C5608 + C5609) * C284 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C278 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C283) +
             (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
                C25478 +
            ((C5613 + C5612) * C284 -
             ((C5611 + C5610) * C278 + (C5609 + C5608) * C283) +
             (C5615 + C5614) * C279 - (C5616 + C5617) * C285 -
             (C5618 + C5619) * C280) *
                C50779) *
               C22848 +
           (((C6965 + C6964) * C284 -
             ((C13492 + C13493) * C278 + (C13494 + C13495) * C283) +
             (C6967 + C6966) * C279 - (C6968 + C6969) * C285 -
             (C6970 + C6971) * C280) *
                C25478 +
            ((C6969 + C6968) * C284 -
             ((C6966 + C6967) * C278 + (C6964 + C6965) * C283) +
             (C6971 + C6970) * C279 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C285 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C280) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                  C696 +
              (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C50779) *
                C22848 +
            (((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C25478 +
             (C28357 * C696 + C28358 * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C6966 + C6967) * C50754 + (C6964 + C6965) * C696) * C50779 +
             ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C25478) *
                C50930 +
            (((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C50779 +
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C50754 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C696) *
                 C25478) *
                C22848) *
               C50855) *
              C582 +
          (((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C25478 +
             ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C50779) *
                C22848 +
            (((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C25478 +
             ((C14430 + C14431) * C696 + (C14432 + C14433) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C13165 * C50754 + C13164 * C696) * C50779 +
             ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C25478) *
                C50930 +
            ((C28354 * C50754 + C28353 * C696) * C50779 +
             ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C25478) *
                C22848) *
               C51047) *
              C583 +
          (((C13308 * C25478 + (C28747 * C696 + C28748 * C50754) * C50779) *
                C22848 +
            (((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C25478 +
             ((C13186 + C13187) * C696 + (C13192 + C13193) * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C5200 * C9120 + C50954 * C9124 + C5199 * C3094 +
               C51060 * C3099) *
                  C50754 +
              (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 +
               C51060 * C3095) *
                  C696) *
                 C50779 +
             ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C25478) *
                C50930 +
            (((C14433 + C14432) * C50754 + (C14431 + C14430) * C696) * C50779 +
             C13504 * C25478) *
                C22848) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1285 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51089 -
             (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
             C31695 * C1287 + C31696 * C1282) *
                C51038 +
            ((C31680 + C31679) * C1285 + (C31682 + C31681) * C51089 -
             (C31684 + C31683) * C1286 - (C31686 + C31685) * C51073 +
             (C31688 + C31687) * C1287 + (C31690 + C31689) * C1282) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C1285 + (C34717 + C34718) * C51089 -
             C34709 * C1286 - C34710 * C51073 + C34711 * C1287 +
             C34712 * C1282) *
                C51038 +
            (C34713 * C1285 + C34714 * C51089 - C31881 * C1286 -
             C31882 * C51073 + (C31878 + C31877) * C1287 +
             (C31880 + C31879) * C1282) *
                C50779) *
               C50930) *
              C50843 * C1283 +
          (((C34713 * C1286 -
             ((C34718 + C34717) * C51089 + (C34716 + C34715) * C1285) +
             C34714 * C51073 - C31881 * C1287 - C31882 * C1282) *
                C51038 +
            (C34711 * C1286 - (C34710 * C51089 + C34709 * C1285) +
             C34712 * C51073 - (C31877 + C31878) * C1287 -
             (C31879 + C31880) * C1282) *
                C50779) *
               C22848 +
           ((C35107 * C1286 -
             ((C35127 + C35128) * C51089 + (C35129 + C35130) * C1285) +
             C35116 * C51073 - (C32233 + C32234) * C1287 -
             (C32235 + C32236) * C1282) *
                C51038 +
            ((C32234 + C32233) * C1286 - (C35117 * C51089 + C35118 * C1285) +
             (C32236 + C32235) * C51073 -
             (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                 C1287 -
             (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                 C1282) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C51038 +
            ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
             (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
             C34709 * C1392 - C34710 * C50759) *
                C51038 +
            (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C50843 * C51091 +
          (((C34713 * C1392 -
             ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
             C34714 * C50759) *
                C51038 +
            (C34711 * C1392 - (C34710 * C1386 + C34709 * C1391) +
             C34712 * C50759) *
                C50779) *
               C22848 +
           ((C35107 * C1392 -
             ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
             C35116 * C50759) *
                C51038 +
            ((C32234 + C32233) * C1392 - (C35117 * C1386 + C35118 * C1391) +
             (C32236 + C32235) * C50759) *
                C50779) *
               C50930) *
              C50843 * C51079 +
          ((((C35130 + C35129) * C1391 + (C35128 + C35127) * C1386 -
             C35118 * C1392 - C35117 * C50759) *
                C51038 +
            (C35107 * C1391 + C35116 * C1386 - (C32233 + C32234) * C1392 -
             (C32235 + C32236) * C50759) *
                C50779) *
               C22848 +
           (((C35273 + C35274) * C1391 + (C35275 + C35276) * C1386 -
             (C35131 + C35132) * C1392 - (C35133 + C35134) * C50759) *
                C51038 +
            ((C35132 + C35131) * C1391 + (C35134 + C35133) * C1386 -
             (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                 C1392 -
             (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C1391 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C1386 -
              (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                 C51038 +
             ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
              (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                 C50779) *
                C22848 +
            (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
              C34709 * C1392 - C34710 * C50759) *
                 C51038 +
             (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
              C31882 * C50759) *
                 C50779) *
                C50930) *
               C51047 +
           ((((C32053 + C32054) * C1392 -
              ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                   C1386 +
               (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                   C1391) +
              (C32055 + C32056) * C50759) *
                 C51038 +
             ((C32058 + C32057) * C1392 -
              ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
              (C32060 + C32059) * C50759) *
                 C50779) *
                C22848 +
            ((C36695 * C1392 -
              ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
              C36696 * C50759) *
                 C51038 +
             ((C33402 + C33401) * C1392 - (C36697 * C1386 + C36698 * C1391) +
              (C33404 + C33403) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C1283 +
          ((((C34713 * C1392 -
              ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
              C34714 * C50759) *
                 C51038 +
             (C34711 * C1392 - (C34710 * C1386 + C34709 * C1391) +
              C34712 * C50759) *
                 C50779) *
                C22848 +
            ((C35107 * C1392 -
              ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
              C35116 * C50759) *
                 C51038 +
             ((C32234 + C32233) * C1392 - (C35117 * C1386 + C35118 * C1391) +
              (C32236 + C32235) * C50759) *
                 C50779) *
                C50930) *
               C51047 +
           ((((C35498 + C35497) * C1391 + (C35496 + C35495) * C1386 -
              C36698 * C1392 - C36697 * C50759) *
                 C51038 +
             (C36695 * C1391 + C36696 * C1386 - (C33401 + C33402) * C1392 -
              (C33403 + C33404) * C50759) *
                 C50779) *
                C22848 +
            (((C35499 + C35500) * C1391 + (C35501 + C35502) * C1386 -
              (C35504 + C35503) * C1392 - (C35506 + C35505) * C50759) *
                 C51038 +
             ((C35503 + C35504) * C1391 + (C35505 + C35506) * C1386 -
              (C31645 * C3441 + C50954 * C3445 + C31644 * C816 +
               C31642 * C830) *
                  C1392 -
              (C31645 * C3444 + C50954 * C3450 + C31644 * C829 +
               C31642 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C49770 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C51031 -
              (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                 C51038 +
             ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
              (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                 C50779) *
                C22848 +
            (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
              C34709 * C49763 - C34710 * C50759) *
                 C51038 +
             (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
              C31882 * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C32053 + C32054) * C49763 -
              ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                   C51031 +
               (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                   C49770) +
              (C32055 + C32056) * C50759) *
                 C51038 +
             ((C32058 + C32057) * C49763 -
              ((C32056 + C32055) * C51031 + (C32054 + C32053) * C49770) +
              (C32060 + C32059) * C50759) *
                 C50779) *
                C22848 +
            ((C36695 * C49763 -
              ((C35495 + C35496) * C51031 + (C35497 + C35498) * C49770) +
              C36696 * C50759) *
                 C51038 +
             ((C33402 + C33401) * C49763 - (C36697 * C51031 + C36698 * C49770) +
              (C33404 + C33403) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C1283 +
          ((((C34713 * C49763 -
              ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
              C34714 * C50759) *
                 C51038 +
             (C34711 * C49763 - (C34710 * C51031 + C34709 * C49770) +
              C34712 * C50759) *
                 C50779) *
                C22848 +
            ((C35107 * C49763 -
              ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
              C35116 * C50759) *
                 C51038 +
             ((C32234 + C32233) * C49763 - (C35117 * C51031 + C35118 * C49770) +
              (C32236 + C32235) * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C35498 + C35497) * C49770 + (C35496 + C35495) * C51031 -
              C36698 * C49763 - C36697 * C50759) *
                 C51038 +
             (C36695 * C49770 + C36696 * C51031 - (C33401 + C33402) * C49763 -
              (C33403 + C33404) * C50759) *
                 C50779) *
                C22848 +
            (((C35499 + C35500) * C49770 + (C35501 + C35502) * C51031 -
              (C35504 + C35503) * C49763 - (C35506 + C35505) * C50759) *
                 C51038 +
             ((C35503 + C35504) * C49770 + (C35505 + C35506) * C51031 -
              (C31645 * C3441 + C50954 * C3445 + C31644 * C816 +
               C31642 * C830) *
                  C49763 -
              (C31645 * C3444 + C50954 * C3450 + C31644 * C829 +
               C31642 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C51038 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C22848 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C1643 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C51038) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C51038) *
                C22848) *
               C50855) *
              C51091 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C51038 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C22848 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C51038 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
                C22848) *
               C1643) *
              C51079 +
          (((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C51038 +
             (C35107 * C696 + C35116 * C50754) * C50779) *
                C22848 +
            (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C51038 +
             ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
                C50930) *
               C1643 -
           ((((C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
               C31642 * C3099) *
                  C50754 +
              (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
               C31642 * C3095) *
                  C696) *
                 C50779 +
             ((C31645 * C9122 + C50954 * C9125 + C31644 * C3096 +
               C31642 * C3100) *
                  C50754 +
              (C31645 * C9119 + C50954 * C9123 + C31644 * C3091 +
               C31642 * C3097) *
                  C696) *
                 C51038) *
                C50930 +
            (((C35506 + C35505) * C50754 + (C35504 + C35503) * C696) * C50779 +
             ((C35502 + C35501) * C50754 + (C35500 + C35499) * C696) * C51038) *
                C22848) *
               C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C51038 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C22848 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C51092 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C51038) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C51038) *
                C22848) *
               C51082 +
           ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 +
               C50954 * C1177) *
                  C696 +
              (C31644 * C950 + C31642 * C959 + C31645 * C1176 +
               C50954 * C1181) *
                  C50754) *
                 C51038 +
             ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C50779) *
                C22848 +
            (((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C51038 +
             ((C35710 + C35709) * C696 + (C35712 + C35711) * C50754) * C50779) *
                C50930) *
               C1875) *
              C1283 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C51038 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C22848 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C51038 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C51082 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
                C22848) *
               C51092 -
           ((((C31645 * C9236 + C50954 * C9240 + C31644 * C3446 +
               C31642 * C3451) *
                  C50754 +
              (C31645 * C9234 + C50954 * C9237 + C31644 * C3442 +
               C31642 * C3447) *
                  C696) *
                 C50779 +
             ((C31645 * C9238 + C50954 * C9241 + C31644 * C3448 +
               C31642 * C3452) *
                  C50754 +
              (C31645 * C9235 + C50954 * C9239 + C31644 * C3443 +
               C31642 * C3449) *
                  C696) *
                 C51038) *
                C50930 +
            (((C35711 + C35712) * C50754 + (C35709 + C35710) * C696) * C50779 +
             ((C35918 + C35917) * C50754 + (C35916 + C35915) * C696) * C51038) *
                C22848) *
               C1875) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C51038 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C51038 +
            (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C50843 * C582 +
          (((C34713 * C49763 -
             ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
             C34714 * C50759) *
                C51038 +
            (C34711 * C49763 - (C34710 * C51031 + C34709 * C49770) +
             C34712 * C50759) *
                C50779) *
               C22848 +
           ((C35107 * C49763 -
             ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
             C35116 * C50759) *
                C51038 +
            ((C32234 + C32233) * C49763 - (C35117 * C51031 + C35118 * C49770) +
             (C32236 + C32235) * C50759) *
                C50779) *
               C50930) *
              C50843 * C583 +
          ((((C35130 + C35129) * C49770 + (C35128 + C35127) * C51031 -
             C35118 * C49763 - C35117 * C50759) *
                C51038 +
            (C35107 * C49770 + C35116 * C51031 - (C32233 + C32234) * C49763 -
             (C32235 + C32236) * C50759) *
                C50779) *
               C22848 +
           (((C35273 + C35274) * C49770 + (C35275 + C35276) * C51031 -
             (C35131 + C35132) * C49763 - (C35133 + C35134) * C50759) *
                C51038 +
            ((C35132 + C35131) * C49770 + (C35134 + C35133) * C51031 -
             (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                 C49763 -
             (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C118 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C106 -
            (C31679 + C31680) * C119 - (C31681 + C31682) * C107 +
            C31695 * C120 + C31696 * C108 - C31697 * C121 - C31698 * C109) *
               C51038 +
           ((C31680 + C31679) * C118 + (C31682 + C31681) * C106 -
            (C31684 + C31683) * C119 - (C31686 + C31685) * C107 +
            (C31688 + C31687) * C120 + (C31690 + C31689) * C108 -
            (C31691 + C31692) * C121 - (C31693 + C31694) * C109) *
               C50779) *
              C22848 +
          (((C34715 + C34716) * C118 + (C34717 + C34718) * C106 -
            C34709 * C119 - C34710 * C107 + C34711 * C120 + C34712 * C108 -
            (C31877 + C31878) * C121 - (C31879 + C31880) * C109) *
               C51038 +
           (C34713 * C118 + C34714 * C106 - C31881 * C119 - C31882 * C107 +
            (C31878 + C31877) * C120 + (C31880 + C31879) * C108 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C121 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C109) *
               C50779) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C51038 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C51038 +
            (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C941 +
          ((((C32053 + C32054) * C49763 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C51031 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C49770) +
             (C32055 + C32056) * C50759) *
                C51038 +
            ((C32058 + C32057) * C49763 -
             ((C32056 + C32055) * C51031 + (C32054 + C32053) * C49770) +
             (C32060 + C32059) * C50759) *
                C50779) *
               C22848 +
           ((C36695 * C49763 -
             ((C35495 + C35496) * C51031 + (C35497 + C35498) * C49770) +
             C36696 * C50759) *
                C51038 +
            ((C33402 + C33401) * C49763 - (C36697 * C51031 + C36698 * C49770) +
             (C33404 + C33403) * C50759) *
                C50779) *
               C50930) *
              C942 +
          ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C49770 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C51031 -
             (C32643 + C32644) * C49763 - (C32645 + C32646) * C50759) *
                C51038 +
            ((C32644 + C32643) * C49770 + (C32646 + C32645) * C51031 -
             (C32647 + C32648) * C49763 - (C32649 + C32650) * C50759) *
                C50779) *
               C22848 +
           (((C35915 + C35916) * C49770 + (C35917 + C35918) * C51031 -
             (C35709 + C35710) * C49763 - (C35711 + C35712) * C50759) *
                C51038 +
            ((C35710 + C35709) * C49770 + (C35712 + C35711) * C51031 -
             (C31645 * C3563 + C50954 * C3567 + C31644 * C1081 +
              C31642 * C1087) *
                 C49763 -
             (C31645 * C3566 + C50954 * C3572 + C31644 * C1086 +
              C31642 * C1093) *
                 C50759) *
                C50779) *
               C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51038 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
               C22848 +
           (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
            (C34713 * C696 + C34714 * C50754) * C50779) *
               C50930) *
              C50843 * C692 -
          (((C35117 * C50754 + C35118 * C696) * C50779 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
               C50930 +
           ((C34710 * C50754 + C34709 * C696) * C50779 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
               C22848) *
              C50843 * C693 +
          ((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C51038 +
            (C35107 * C696 + C35116 * C50754) * C50779) *
               C22848 +
           (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C51038 +
            ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
               C50930) *
              C50843 * C694 -
          ((((C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
              C31642 * C2917) *
                 C50754 +
             (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
              C31642 * C2913) *
                 C696) *
                C50779 +
            ((C31645 * C8795 + C50954 * C8798 + C31644 * C2914 +
              C31642 * C2918) *
                 C50754 +
             (C31645 * C8792 + C50954 * C8796 + C31644 * C2909 +
              C31642 * C2915) *
                 C696) *
                C51038) *
               C50930 +
           (((C35133 + C35134) * C50754 + (C35131 + C35132) * C696) * C50779 +
            ((C35276 + C35275) * C50754 + (C35274 + C35273) * C696) * C51038) *
               C22848) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C51038 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C51038 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C50843 * C51046 +
          (((C34713 * C284 -
             ((C34718 + C34717) * C278 + (C34716 + C34715) * C283) +
             C34714 * C279 - C31881 * C285 - C31882 * C280) *
                C51038 +
            (C34711 * C284 - (C34710 * C278 + C34709 * C283) + C34712 * C279 -
             (C31877 + C31878) * C285 - (C31879 + C31880) * C280) *
                C50779) *
               C22848 +
           ((C35107 * C284 -
             ((C35127 + C35128) * C278 + (C35129 + C35130) * C283) +
             C35116 * C279 - (C32233 + C32234) * C285 -
             (C32235 + C32236) * C280) *
                C51038 +
            ((C32234 + C32233) * C284 - (C35117 * C278 + C35118 * C283) +
             (C32236 + C32235) * C279 -
             (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                 C285 -
             (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                 C280) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C51038 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C22848 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C941 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C51038) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C51038) *
                C22848) *
               C942 +
           ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 +
               C50954 * C1177) *
                  C696 +
              (C31644 * C950 + C31642 * C959 + C31645 * C1176 +
               C50954 * C1181) *
                  C50754) *
                 C51038 +
             ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C50779) *
                C22848 +
            (((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C51038 +
             ((C35710 + C35709) * C696 + (C35712 + C35711) * C50754) * C50779) *
                C50930) *
               C943) *
              C51046 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C51038 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C22848 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C51038 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C942 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
                C22848) *
               C941 -
           ((((C31645 * C9236 + C50954 * C9240 + C31644 * C3446 +
               C31642 * C3451) *
                  C50754 +
              (C31645 * C9234 + C50954 * C9237 + C31644 * C3442 +
               C31642 * C3447) *
                  C696) *
                 C50779 +
             ((C31645 * C9238 + C50954 * C9241 + C31644 * C3448 +
               C31642 * C3452) *
                  C50754 +
              (C31645 * C9235 + C50954 * C9239 + C31644 * C3443 +
               C31642 * C3449) *
                  C696) *
                 C51038) *
                C50930 +
            (((C35711 + C35712) * C50754 + (C35709 + C35710) * C696) * C50779 +
             ((C35918 + C35917) * C50754 + (C35916 + C35915) * C696) * C51038) *
                C22848) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C51038 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C22848 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C51047 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C51038) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C51038) *
                C22848) *
               C50855) *
              C582 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C51038 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C22848 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C51038 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
                C22848) *
               C51047) *
              C583 +
          (((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C51038 +
             (C35107 * C696 + C35116 * C50754) * C50779) *
                C22848 +
            (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C51038 +
             ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
               C31642 * C3099) *
                  C50754 +
              (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
               C31642 * C3095) *
                  C696) *
                 C50779 +
             ((C31645 * C9122 + C50954 * C9125 + C31644 * C3096 +
               C31642 * C3100) *
                  C50754 +
              (C31645 * C9119 + C50954 * C9123 + C31644 * C3091 +
               C31642 * C3097) *
                  C696) *
                 C51038) *
                C50930 +
            (((C35506 + C35505) * C50754 + (C35504 + C35503) * C696) * C50779 +
             ((C35502 + C35501) * C50754 + (C35500 + C35499) * C696) * C51038) *
                C22848) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C51038 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C51038 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C51047 +
          ((((C32053 + C32054) * C284 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C278 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C283) +
             (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
                C51038 +
            ((C32058 + C32057) * C284 -
             ((C32056 + C32055) * C278 + (C32054 + C32053) * C283) +
             (C32060 + C32059) * C279 - (C32061 + C32062) * C285 -
             (C32063 + C32064) * C280) *
                C50779) *
               C22848 +
           ((C36695 * C284 -
             ((C35495 + C35496) * C278 + (C35497 + C35498) * C283) +
             C36696 * C279 - (C33401 + C33402) * C285 -
             (C33403 + C33404) * C280) *
                C51038 +
            ((C33402 + C33401) * C284 - (C36697 * C278 + C36698 * C283) +
             (C33404 + C33403) * C279 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C285 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C280) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51038 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
               C22848 +
           (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
            (C34713 * C696 + C34714 * C50754) * C50779) *
               C50930) *
              C1162 -
          (((C36697 * C50754 + C36698 * C696) * C50779 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C51038) *
               C50930 +
           (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C51038) *
               C22848) *
              C1163 +
          ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C696 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C50754) *
                C51038 +
            ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C50779) *
               C22848 +
           (((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C51038 +
            ((C35710 + C35709) * C696 + (C35712 + C35711) * C50754) * C50779) *
               C50930) *
              C1164 -
          ((((C31645 * C16646 + C50954 * C16648 + C31644 * C3568 +
              C31642 * C3573) *
                 C50754 +
             (C31645 * C16645 + C50954 * C16647 + C31644 * C3564 +
              C31642 * C3569) *
                 C696) *
                C50779 +
            ((C31645 * C13923 + C50954 * C13926 + C31644 * C3570 +
              C31642 * C3574) *
                 C50754 +
             (C31645 * C13920 + C50954 * C13924 + C31644 * C3565 +
              C31642 * C3571) *
                 C696) *
                C51038) *
               C50930 +
           (((C31645 * C6454 + C50954 * C6459 + C31644 * C1174 +
              C31642 * C1180) *
                 C50754 +
             (C31645 * C6450 + C50954 * C6455 + C31644 * C1168 +
              C31642 * C1175) *
                 C696) *
                C50779 +
            ((C31645 * C6456 + C50954 * C6460 + C31644 * C1176 +
              C31642 * C1181) *
                 C50754 +
             (C31645 * C6451 + C50954 * C6457 + C31644 * C1169 +
              C31642 * C1177) *
                 C696) *
                C51038) *
               C22848) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1285 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51089 -
             (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
             C31695 * C1287 + C31696 * C1282) *
                C51038 +
            ((C31680 + C31679) * C1285 + (C31682 + C31681) * C51089 -
             (C31684 + C31683) * C1286 - (C31686 + C31685) * C51073 +
             (C31688 + C31687) * C1287 + (C31690 + C31689) * C1282) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C1285 + (C34717 + C34718) * C51089 -
             C34709 * C1286 - C34710 * C51073 + C34711 * C1287 +
             C34712 * C1282) *
                C51038 +
            (C34713 * C1285 + C34714 * C51089 - C31881 * C1286 -
             C31882 * C51073 + (C31878 + C31877) * C1287 +
             (C31880 + C31879) * C1282) *
                C50779) *
               C50930) *
              C1643 +
          ((((C32053 + C32054) * C1286 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C51089 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1285) +
             (C32055 + C32056) * C51073 - C32065 * C1287 - C32066 * C1282) *
                C51038 +
            ((C32058 + C32057) * C1286 -
             ((C32056 + C32055) * C51089 + (C32054 + C32053) * C1285) +
             (C32060 + C32059) * C51073 - (C32061 + C32062) * C1287 -
             (C32063 + C32064) * C1282) *
                C50779) *
               C22848 +
           ((C36695 * C1286 -
             ((C35495 + C35496) * C51089 + (C35497 + C35498) * C1285) +
             C36696 * C51073 - (C33401 + C33402) * C1287 -
             (C33403 + C33404) * C1282) *
                C51038 +
            ((C33402 + C33401) * C1286 - (C36697 * C51089 + C36698 * C1285) +
             (C33404 + C33403) * C51073 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C1287 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C1282) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C1391 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C1386 -
              (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                 C51038 +
             ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
              (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                 C50779) *
                C22848 +
            (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
              C34709 * C1392 - C34710 * C50759) *
                 C51038 +
             (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
              C31882 * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C32053 + C32054) * C1392 -
              ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                   C1386 +
               (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                   C1391) +
              (C32055 + C32056) * C50759) *
                 C51038 +
             ((C32058 + C32057) * C1392 -
              ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
              (C32060 + C32059) * C50759) *
                 C50779) *
                C22848 +
            ((C36695 * C1392 -
              ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
              C36696 * C50759) *
                 C51038 +
             ((C33402 + C33401) * C1392 - (C36697 * C1386 + C36698 * C1391) +
              (C33404 + C33403) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C51046 +
          ((((C34713 * C1392 -
              ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
              C34714 * C50759) *
                 C51038 +
             (C34711 * C1392 - (C34710 * C1386 + C34709 * C1391) +
              C34712 * C50759) *
                 C50779) *
                C22848 +
            ((C35107 * C1392 -
              ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
              C35116 * C50759) *
                 C51038 +
             ((C32234 + C32233) * C1392 - (C35117 * C1386 + C35118 * C1391) +
              (C32236 + C32235) * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C35498 + C35497) * C1391 + (C35496 + C35495) * C1386 -
              C36698 * C1392 - C36697 * C50759) *
                 C51038 +
             (C36695 * C1391 + C36696 * C1386 - (C33401 + C33402) * C1392 -
              (C33403 + C33404) * C50759) *
                 C50779) *
                C22848 +
            (((C35499 + C35500) * C1391 + (C35501 + C35502) * C1386 -
              (C35504 + C35503) * C1392 - (C35506 + C35505) * C50759) *
                 C51038 +
             ((C35503 + C35504) * C1391 + (C35505 + C35506) * C1386 -
              (C31645 * C3441 + C50954 * C3445 + C31644 * C816 +
               C31642 * C830) *
                  C1392 -
              (C31645 * C3444 + C50954 * C3450 + C31644 * C829 +
               C31642 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C51038 +
            ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
             (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
             C34709 * C1392 - C34710 * C50759) *
                C51038 +
            (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C51092 +
          ((((C32053 + C32054) * C1392 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C1386 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1391) +
             (C32055 + C32056) * C50759) *
                C51038 +
            ((C32058 + C32057) * C1392 -
             ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
             (C32060 + C32059) * C50759) *
                C50779) *
               C22848 +
           ((C36695 * C1392 -
             ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
             C36696 * C50759) *
                C51038 +
            ((C33402 + C33401) * C1392 - (C36697 * C1386 + C36698 * C1391) +
             (C33404 + C33403) * C50759) *
                C50779) *
               C50930) *
              C51082 +
          ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C1391 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C1386 -
             (C32643 + C32644) * C1392 - (C32645 + C32646) * C50759) *
                C51038 +
            ((C32644 + C32643) * C1391 + (C32646 + C32645) * C1386 -
             (C32647 + C32648) * C1392 - (C32649 + C32650) * C50759) *
                C50779) *
               C22848 +
           (((C35915 + C35916) * C1391 + (C35917 + C35918) * C1386 -
             (C35709 + C35710) * C1392 - (C35711 + C35712) * C50759) *
                C51038 +
            ((C35710 + C35709) * C1391 + (C35712 + C35711) * C1386 -
             (C31645 * C3563 + C50954 * C3567 + C31644 * C1081 +
              C31642 * C1087) *
                 C1392 -
             (C31645 * C3566 + C50954 * C3572 + C31644 * C1086 +
              C31642 * C1093) *
                 C50759) *
                C50779) *
               C50930) *
              C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C118 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C106 -
            (C31679 + C31680) * C119 - (C31681 + C31682) * C107 +
            C31695 * C120 + C31696 * C108 - C31697 * C121 - C31698 * C109) *
               C51038 +
           ((C31680 + C31679) * C118 + (C31682 + C31681) * C106 -
            (C31684 + C31683) * C119 - (C31686 + C31685) * C107 +
            (C31688 + C31687) * C120 + (C31690 + C31689) * C108 -
            (C31691 + C31692) * C121 - (C31693 + C31694) * C109) *
               C50779) *
              C22848 +
          (((C34715 + C34716) * C118 + (C34717 + C34718) * C106 -
            C34709 * C119 - C34710 * C107 + C34711 * C120 + C34712 * C108 -
            (C31877 + C31878) * C121 - (C31879 + C31880) * C109) *
               C51038 +
           (C34713 * C118 + C34714 * C106 - C31881 * C119 - C31882 * C107 +
            (C31878 + C31877) * C120 + (C31880 + C31879) * C108 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C121 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C109) *
               C50779) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C51038 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C51038 +
            (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C50843 * C582 +
          (((C34713 * C49763 -
             ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
             C34714 * C50759) *
                C51038 +
            (C34711 * C49763 - (C34710 * C51031 + C34709 * C49770) +
             C34712 * C50759) *
                C50779) *
               C22848 +
           ((C35107 * C49763 -
             ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
             C35116 * C50759) *
                C51038 +
            ((C32234 + C32233) * C49763 - (C35117 * C51031 + C35118 * C49770) +
             (C32236 + C32235) * C50759) *
                C50779) *
               C50930) *
              C50843 * C583 +
          ((((C35130 + C35129) * C49770 + (C35128 + C35127) * C51031 -
             C35118 * C49763 - C35117 * C50759) *
                C51038 +
            (C35107 * C49770 + C35116 * C51031 - (C32233 + C32234) * C49763 -
             (C32235 + C32236) * C50759) *
                C50779) *
               C22848 +
           (((C35273 + C35274) * C49770 + (C35275 + C35276) * C51031 -
             (C35131 + C35132) * C49763 - (C35133 + C35134) * C50759) *
                C51038 +
            ((C35132 + C35131) * C49770 + (C35134 + C35133) * C51031 -
             (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                 C49763 -
             (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C51038 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C51038 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C50843 * C51046 +
          (((C34713 * C284 -
             ((C34718 + C34717) * C278 + (C34716 + C34715) * C283) +
             C34714 * C279 - C31881 * C285 - C31882 * C280) *
                C51038 +
            (C34711 * C284 - (C34710 * C278 + C34709 * C283) + C34712 * C279 -
             (C31877 + C31878) * C285 - (C31879 + C31880) * C280) *
                C50779) *
               C22848 +
           ((C35107 * C284 -
             ((C35127 + C35128) * C278 + (C35129 + C35130) * C283) +
             C35116 * C279 - (C32233 + C32234) * C285 -
             (C32235 + C32236) * C280) *
                C51038 +
            ((C32234 + C32233) * C284 - (C35117 * C278 + C35118 * C283) +
             (C32236 + C32235) * C279 -
             (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                 C285 -
             (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                 C280) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51038 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
               C22848 +
           (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
            (C34713 * C696 + C34714 * C50754) * C50779) *
               C50930) *
              C50843 * C692 -
          (((C35117 * C50754 + C35118 * C696) * C50779 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
               C50930 +
           ((C34710 * C50754 + C34709 * C696) * C50779 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
               C22848) *
              C50843 * C693 +
          ((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C51038 +
            (C35107 * C696 + C35116 * C50754) * C50779) *
               C22848 +
           (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C51038 +
            ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
               C50930) *
              C50843 * C694 -
          ((((C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
              C31642 * C2917) *
                 C50754 +
             (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
              C31642 * C2913) *
                 C696) *
                C50779 +
            ((C31645 * C8795 + C50954 * C8798 + C31644 * C2914 +
              C31642 * C2918) *
                 C50754 +
             (C31645 * C8792 + C50954 * C8796 + C31644 * C2909 +
              C31642 * C2915) *
                 C696) *
                C51038) *
               C50930 +
           (((C35133 + C35134) * C50754 + (C35131 + C35132) * C696) * C50779 +
            ((C35276 + C35275) * C50754 + (C35274 + C35273) * C696) * C51038) *
               C22848) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C51038 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C22848 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C51038 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C51047 +
          ((((C32053 + C32054) * C284 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C278 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C283) +
             (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
                C51038 +
            ((C32058 + C32057) * C284 -
             ((C32056 + C32055) * C278 + (C32054 + C32053) * C283) +
             (C32060 + C32059) * C279 - (C32061 + C32062) * C285 -
             (C32063 + C32064) * C280) *
                C50779) *
               C22848 +
           ((C36695 * C284 -
             ((C35495 + C35496) * C278 + (C35497 + C35498) * C283) +
             C36696 * C279 - (C33401 + C33402) * C285 -
             (C33403 + C33404) * C280) *
                C51038 +
            ((C33402 + C33401) * C284 - (C36697 * C278 + C36698 * C283) +
             (C33404 + C33403) * C279 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C285 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C280) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C51038 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C22848 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C51038 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C51047 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C51038) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C51038) *
                C22848) *
               C50855) *
              C582 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C51038 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C22848 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C51038 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C51038) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C51038) *
                C22848) *
               C51047) *
              C583 +
          (((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C51038 +
             (C35107 * C696 + C35116 * C50754) * C50779) *
                C22848 +
            (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C51038 +
             ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
               C31642 * C3099) *
                  C50754 +
              (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
               C31642 * C3095) *
                  C696) *
                 C50779 +
             ((C31645 * C9122 + C50954 * C9125 + C31644 * C3096 +
               C31642 * C3100) *
                  C50754 +
              (C31645 * C9119 + C50954 * C9123 + C31644 * C3091 +
               C31642 * C3097) *
                  C696) *
                 C51038) *
                C50930 +
            (((C35506 + C35505) * C50754 + (C35504 + C35503) * C696) * C50779 +
             ((C35502 + C35501) * C50754 + (C35500 + C35499) * C696) * C51038) *
                C22848) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1285 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51089 -
            (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
            C31695 * C1287 + C31696 * C1282) *
               C50774 * C51093 +
           ((C34715 + C34716) * C1285 + (C34717 + C34718) * C51089 -
            C34709 * C1286 - C34710 * C51073 + C34711 * C1287 +
            C34712 * C1282) *
               C50774 * C51085 +
           (C44833 * C1285 + C44834 * C51089 - C35118 * C1286 -
            C35117 * C51073 + (C32234 + C32233) * C1287 +
            (C32236 + C32235) * C1282) *
               C50774 * C25482) *
              C50843 * C1283 +
          ((C34713 * C1286 -
            ((C34718 + C34717) * C51089 + (C34716 + C34715) * C1285) +
            C34714 * C51073 - C31881 * C1287 - C31882 * C1282) *
               C50774 * C51093 +
           (C35107 * C1286 -
            ((C35127 + C35128) * C51089 + (C35129 + C35130) * C1285) +
            C35116 * C51073 - (C32233 + C32234) * C1287 -
            (C32235 + C32236) * C1282) *
               C50774 * C51085 +
           ((C35132 + C35131) * C1286 - (C44943 * C51089 + C44944 * C1285) +
            (C35134 + C35133) * C51073 -
            (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                C1287 -
            (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                C1282) *
               C50774 * C25482) *
              C50843 * C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1391 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C1386 -
            (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
               C50774 * C51093 +
           ((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
            C34709 * C1392 - C34710 * C50759) *
               C50774 * C51085 +
           C45828 * C25482) *
              C50843 * C51091 +
          ((C34713 * C1392 -
            ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
            C34714 * C50759) *
               C50774 * C51093 +
           (C35107 * C1392 -
            ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
            C35116 * C50759) *
               C50774 * C51085 +
           ((C35132 + C35131) * C1392 - (C44943 * C1386 + C44944 * C1391) +
            (C35134 + C35133) * C50759) *
               C50774 * C25482) *
              C50843 * C51079 +
          (C45828 * C51093 +
           ((C35273 + C35274) * C1391 + (C35275 + C35276) * C1386 -
            (C35131 + C35132) * C1392 - (C35133 + C35134) * C50759) *
               C50774 * C51085 +
           ((C44956 + C44957) * C1391 + (C44958 + C44959) * C1386 -
            (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
             C31642 * C2913) *
                C1392 -
            (C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
             C31642 * C2917) *
                C50759) *
               C50774 * C25482) *
              C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C50774 * C51093 +
            ((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
             C34709 * C1392 - C34710 * C50759) *
                C50774 * C51085 +
            C45828 * C25482) *
               C51047 +
           (((C32053 + C32054) * C1392 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C1386 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1391) +
             (C32055 + C32056) * C50759) *
                C50774 * C51093 +
            (C36695 * C1392 -
             ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
             C36696 * C50759) *
                C50774 * C51085 +
            ((C35503 + C35504) * C1392 - (C45109 * C1386 + C45110 * C1391) +
             (C35505 + C35506) * C50759) *
                C50774 * C25482) *
               C50855) *
              C1283 +
          (((C34713 * C1392 -
             ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
             C34714 * C50759) *
                C50774 * C51093 +
            (C35107 * C1392 -
             ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
             C35116 * C50759) *
                C50774 * C51085 +
            ((C35132 + C35131) * C1392 - (C44943 * C1386 + C44944 * C1391) +
             (C35134 + C35133) * C50759) *
                C50774 * C25482) *
               C51047 +
           (((C35498 + C35497) * C1391 + (C35496 + C35495) * C1386 -
             C36698 * C1392 - C36697 * C50759) *
                C50774 * C51093 +
            ((C35499 + C35500) * C1391 + (C35501 + C35502) * C1386 -
             (C35504 + C35503) * C1392 - (C35506 + C35505) * C50759) *
                C50774 * C51085 +
            ((C45121 + C45122) * C1391 + (C45123 + C45124) * C1386 -
             (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
              C31642 * C3095) *
                 C1392 -
             (C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
              C31642 * C3099) *
                 C50759) *
                C50774 * C25482) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C50774 * C51093 +
            ((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C50774 * C51085 +
            C44842 * C25482) *
               C1643 +
           (((C32053 + C32054) * C49763 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C51031 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C49770) +
             (C32055 + C32056) * C50759) *
                C50774 * C51093 +
            (C36695 * C49763 -
             ((C35495 + C35496) * C51031 + (C35497 + C35498) * C49770) +
             C36696 * C50759) *
                C50774 * C51085 +
            ((C35503 + C35504) * C49763 - (C45109 * C51031 + C45110 * C49770) +
             (C35505 + C35506) * C50759) *
                C50774 * C25482) *
               C50855) *
              C1283 +
          (((C34713 * C49763 -
             ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
             C34714 * C50759) *
                C50774 * C51093 +
            (C35107 * C49763 -
             ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
             C35116 * C50759) *
                C50774 * C51085 +
            ((C35132 + C35131) * C49763 - (C44943 * C51031 + C44944 * C49770) +
             (C35134 + C35133) * C50759) *
                C50774 * C25482) *
               C1643 +
           (((C35498 + C35497) * C49770 + (C35496 + C35495) * C51031 -
             C36698 * C49763 - C36697 * C50759) *
                C50774 * C51093 +
            ((C35499 + C35500) * C49770 + (C35501 + C35502) * C51031 -
             (C35504 + C35503) * C49763 - (C35506 + C35505) * C50759) *
                C50774 * C51085 +
            ((C45121 + C45122) * C49770 + (C45123 + C45124) * C51031 -
             (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
              C31642 * C3095) *
                 C49763 -
             (C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
              C31642 * C3099) *
                 C50759) *
                C50774 * C25482) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C51093 +
            ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
                C51085 +
            C44960 * C25482) *
               C1643 -
           (C45126 * C25482 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C50774 *
                C51085 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C50774 * C51093) *
               C50855) *
              C51091 +
          ((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C50774 *
                C51093 +
            ((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C50774 *
                C51085 +
            ((C45121 + C45122) * C696 + (C45123 + C45124) * C50754) * C50774 *
                C25482) *
               C50855 -
           (C44962 * C25482 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
                C51085 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
                C51093) *
               C1643) *
              C51079 +
          ((C44960 * C51093 +
            ((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C50774 *
                C51085 +
            ((C44956 + C44957) * C696 + (C44958 + C44959) * C50754) * C50774 *
                C25482) *
               C1643 -
           (((C31645 * C11519 + C50954 * C11521 + C31644 * C8795 +
              C31642 * C8798) *
                 C50754 +
             (C31645 * C11518 + C50954 * C11520 + C31644 * C8792 +
              C31642 * C8796) *
                 C696) *
                C50774 * C25482 +
            ((C45124 + C45123) * C50754 + (C45122 + C45121) * C696) * C50774 *
                C51085 +
            C45126 * C51093) *
               C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C51093 +
            ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
                C51085 +
            C44960 * C25482) *
               C51092 -
           (C45126 * C25482 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C50774 *
                C51085 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C50774 * C51093) *
               C51082 +
           (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C696 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C50754) *
                C50774 * C51093 +
            ((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C50774 *
                C51085 +
            ((C45427 + C45428) * C696 + (C45429 + C45430) * C50754) * C50774 *
                C25482) *
               C1875) *
              C1283 +
          ((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C50774 *
                C51093 +
            ((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C50774 *
                C51085 +
            ((C45121 + C45122) * C696 + (C45123 + C45124) * C50754) * C50774 *
                C25482) *
               C51082 -
           (C44962 * C25482 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
                C51085 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
                C51093) *
               C51092 -
           (((C31645 * C11597 + C50954 * C11599 + C31644 * C9122 +
              C31642 * C9125) *
                 C50754 +
             (C31645 * C11596 + C50954 * C11598 + C31644 * C9119 +
              C31642 * C9123) *
                 C696) *
                C50774 * C25482 +
            ((C45430 + C45429) * C50754 + (C45428 + C45427) * C696) * C50774 *
                C51085 +
            ((C35918 + C35917) * C50754 + (C35916 + C35915) * C696) * C50774 *
                C51093) *
               C1875) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C49770 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51031 -
            (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
               C50774 * C51093 +
           ((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
            C34709 * C49763 - C34710 * C50759) *
               C50774 * C51085 +
           C44842 * C25482) *
              C50843 * C582 +
          ((C34713 * C49763 -
            ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
            C34714 * C50759) *
               C50774 * C51093 +
           (C35107 * C49763 -
            ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
            C35116 * C50759) *
               C50774 * C51085 +
           ((C35132 + C35131) * C49763 -
            ((C35276 + C35275) * C51031 + (C35274 + C35273) * C49770) +
            (C35134 + C35133) * C50759) *
               C50774 * C25482) *
              C50843 * C583 +
          (C44842 * C51093 +
           ((C35273 + C35274) * C49770 + (C35275 + C35276) * C51031 -
            (C35131 + C35132) * C49763 - (C35133 + C35134) * C50759) *
               C50774 * C51085 +
           ((C31644 * C2909 + C31642 * C2915 + C31645 * C8792 +
             C50954 * C8796) *
                C49770 +
            (C31644 * C2914 + C31642 * C2918 + C31645 * C8795 +
             C50954 * C8798) *
                C51031 -
            (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
             C31642 * C2913) *
                C49763 -
            (C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
             C31642 * C2917) *
                C50759) *
               C50774 * C25482) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
               C118 +
           (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
               C106 -
           (C31679 + C31680) * C119 - (C31681 + C31682) * C107 + C31695 * C120 +
           C31696 * C108 - C31697 * C121 - C31698 * C109) *
              C50774 * C51093 +
          ((C34715 + C34716) * C118 + (C34717 + C34718) * C106 - C34709 * C119 -
           C34710 * C107 + C34711 * C120 + C34712 * C108 -
           (C31877 + C31878) * C121 - (C31879 + C31880) * C109) *
              C50774 * C51085 +
          ((C35130 + C35129) * C118 + (C35128 + C35127) * C106 - C35118 * C119 -
           C35117 * C107 + (C32234 + C32233) * C120 + (C32236 + C32235) * C108 -
           (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
               C121 -
           (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
               C109) *
              C50774 * C25482) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C49770 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51031 -
            (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
               C50774 * C51093 +
           ((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
            C34709 * C49763 - C34710 * C50759) *
               C50774 * C51085 +
           C44842 * C25482) *
              C941 +
          (((C32053 + C32054) * C49763 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C51031 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C49770) +
            (C32055 + C32056) * C50759) *
               C50774 * C51093 +
           (C36695 * C49763 -
            ((C35495 + C35496) * C51031 + (C35497 + C35498) * C49770) +
            C36696 * C50759) *
               C50774 * C51085 +
           ((C35503 + C35504) * C49763 - (C45109 * C51031 + C45110 * C49770) +
            (C35505 + C35506) * C50759) *
               C50774 * C25482) *
              C942 +
          (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                C49770 +
            (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                C51031 -
            (C32643 + C32644) * C49763 - (C32645 + C32646) * C50759) *
               C50774 * C51093 +
           ((C35915 + C35916) * C49770 + (C35917 + C35918) * C51031 -
            (C35709 + C35710) * C49763 - (C35711 + C35712) * C50759) *
               C50774 * C51085 +
           ((C31644 * C3443 + C31642 * C3449 + C31645 * C9235 +
             C50954 * C9239) *
                C49770 +
            (C31644 * C3448 + C31642 * C3452 + C31645 * C9238 +
             C50954 * C9241) *
                C51031 -
            (C31645 * C9234 + C50954 * C9237 + C31644 * C3442 +
             C31642 * C3447) *
                C49763 -
            (C31645 * C9236 + C50954 * C9240 + C31644 * C3446 +
             C31642 * C3451) *
                C50759) *
               C50774 * C25482) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C696 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C51093 +
           ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
               C51085 +
           C44960 * C25482) *
              C50843 * C692 -
          (C44962 * C25482 +
           ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
               C51085 +
           ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
               C51093) *
              C50843 * C693 +
          (C44960 * C51093 +
           ((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C50774 *
               C51085 +
           ((C44956 + C44957) * C696 + (C44958 + C44959) * C50754) * C50774 *
               C25482) *
              C50843 * C694 -
          (((C31645 * C11308 + C50954 * C11310 + C31644 * C8621 +
             C31642 * C8624) *
                C50754 +
            (C31645 * C11307 + C50954 * C11309 + C31644 * C8618 +
             C31642 * C8622) *
                C696) *
               C50774 * C25482 +
           ((C44959 + C44958) * C50754 + (C44957 + C44956) * C696) * C50774 *
               C51085 +
           C44962 * C51093) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C50774 * C51093 +
           ((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
            C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
               C50774 * C51085 +
           ((C35130 + C35129) * C283 + (C35128 + C35127) * C278 -
            C35118 * C284 - C35117 * C279 + (C32234 + C32233) * C285 +
            (C32236 + C32235) * C280) *
               C50774 * C25482) *
              C50843 * C51046 +
          ((C34713 * C284 -
            ((C34718 + C34717) * C278 + (C34716 + C34715) * C283) +
            C34714 * C279 - C31881 * C285 - C31882 * C280) *
               C50774 * C51093 +
           (C35107 * C284 -
            ((C35127 + C35128) * C278 + (C35129 + C35130) * C283) +
            C35116 * C279 - (C32233 + C32234) * C285 -
            (C32235 + C32236) * C280) *
               C50774 * C51085 +
           ((C35132 + C35131) * C284 -
            ((C35276 + C35275) * C278 + (C35274 + C35273) * C283) +
            (C35134 + C35133) * C279 -
            (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                C285 -
            (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                C280) *
               C50774 * C25482) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C51093 +
            ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
                C51085 +
            C44960 * C25482) *
               C941 -
           (C45126 * C25482 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C50774 *
                C51085 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C50774 * C51093) *
               C942 +
           (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C696 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C50754) *
                C50774 * C51093 +
            ((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C50774 *
                C51085 +
            ((C45427 + C45428) * C696 + (C45429 + C45430) * C50754) * C50774 *
                C25482) *
               C943) *
              C51046 +
          ((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C50774 *
                C51093 +
            ((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C50774 *
                C51085 +
            ((C45121 + C45122) * C696 + (C45123 + C45124) * C50754) * C50774 *
                C25482) *
               C942 -
           (C44962 * C25482 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
                C51085 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
                C51093) *
               C941 -
           (((C31645 * C11597 + C50954 * C11599 + C31644 * C9122 +
              C31642 * C9125) *
                 C50754 +
             (C31645 * C11596 + C50954 * C11598 + C31644 * C9119 +
              C31642 * C9123) *
                 C696) *
                C50774 * C25482 +
            ((C45430 + C45429) * C50754 + (C45428 + C45427) * C696) * C50774 *
                C51085 +
            ((C35918 + C35917) * C50754 + (C35916 + C35915) * C696) * C50774 *
                C51093) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C51093 +
            ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
                C51085 +
            C44960 * C25482) *
               C51047 -
           (C45126 * C25482 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C50774 *
                C51085 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C50774 * C51093) *
               C50855) *
              C582 +
          ((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C50774 *
                C51093 +
            ((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C50774 *
                C51085 +
            ((C45121 + C45122) * C696 + (C45123 + C45124) * C50754) * C50774 *
                C25482) *
               C50855 -
           (C44962 * C25482 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
                C51085 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
                C51093) *
               C51047) *
              C583 +
          ((C44960 * C51093 +
            ((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C50774 *
                C51085 +
            ((C44956 + C44957) * C696 + (C44958 + C44959) * C50754) * C50774 *
                C25482) *
               C51047 -
           (((C31645 * C11519 + C50954 * C11521 + C31644 * C8795 +
              C31642 * C8798) *
                 C50754 +
             (C31645 * C11518 + C50954 * C11520 + C31644 * C8792 +
              C31642 * C8796) *
                 C696) *
                C50774 * C25482 +
            ((C45124 + C45123) * C50754 + (C45122 + C45121) * C696) * C50774 *
                C51085 +
            C45126 * C51093) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C50774 * C51093 +
           ((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
            C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
               C50774 * C51085 +
           ((C35130 + C35129) * C283 + (C35128 + C35127) * C278 -
            C35118 * C284 - C35117 * C279 + (C32234 + C32233) * C285 +
            (C32236 + C32235) * C280) *
               C50774 * C25482) *
              C51047 +
          (((C32053 + C32054) * C284 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C278 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C283) +
            (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
               C50774 * C51093 +
           (C36695 * C284 -
            ((C35495 + C35496) * C278 + (C35497 + C35498) * C283) +
            C36696 * C279 - (C33401 + C33402) * C285 -
            (C33403 + C33404) * C280) *
               C50774 * C51085 +
           ((C35503 + C35504) * C284 -
            ((C35502 + C35501) * C278 + (C35500 + C35499) * C283) +
            (C35505 + C35506) * C279 -
            (C31645 * C3441 + C50954 * C3445 + C31644 * C816 + C31642 * C830) *
                C285 -
            (C31645 * C3444 + C50954 * C3450 + C31644 * C829 + C31642 * C840) *
                C280) *
               C50774 * C25482) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C696 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C51093 +
           ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
               C51085 +
           C44960 * C25482) *
              C1162 -
          (C45126 * C25482 +
           ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C50774 *
               C51085 +
           ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                C50754 +
            (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                C696) *
               C50774 * C51093) *
              C1163 +
          (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                C696 +
            (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                C50754) *
               C50774 * C51093 +
           ((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C50774 *
               C51085 +
           ((C45427 + C45428) * C696 + (C45429 + C45430) * C50754) * C50774 *
               C25482) *
              C1164 -
          (((C31645 * C13921 + C50954 * C13925 + C31644 * C9238 +
             C31642 * C9241) *
                C50754 +
            (C31645 * C13919 + C50954 * C13922 + C31644 * C9235 +
             C31642 * C9239) *
                C696) *
               C50774 * C25482 +
           ((C31645 * C13923 + C50954 * C13926 + C31644 * C3570 +
             C31642 * C3574) *
                C50754 +
            (C31645 * C13920 + C50954 * C13924 + C31644 * C3565 +
             C31642 * C3571) *
                C696) *
               C50774 * C51085 +
           ((C31645 * C6456 + C50954 * C6460 + C31644 * C1176 +
             C31642 * C1181) *
                C50754 +
            (C31645 * C6451 + C50954 * C6457 + C31644 * C1169 +
             C31642 * C1177) *
                C696) *
               C50774 * C51093) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1285 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51089 -
            (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
            C31695 * C1287 + C31696 * C1282) *
               C50774 * C51093 +
           ((C34715 + C34716) * C1285 + (C34717 + C34718) * C51089 -
            C34709 * C1286 - C34710 * C51073 + C34711 * C1287 +
            C34712 * C1282) *
               C50774 * C51085 +
           (C44833 * C1285 + C44834 * C51089 - C35118 * C1286 -
            C35117 * C51073 + (C32234 + C32233) * C1287 +
            (C32236 + C32235) * C1282) *
               C50774 * C25482) *
              C1643 +
          (((C32053 + C32054) * C1286 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C51089 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C1285) +
            (C32055 + C32056) * C51073 - C32065 * C1287 - C32066 * C1282) *
               C50774 * C51093 +
           (C36695 * C1286 -
            ((C35495 + C35496) * C51089 + (C35497 + C35498) * C1285) +
            C36696 * C51073 - (C33401 + C33402) * C1287 -
            (C33403 + C33404) * C1282) *
               C50774 * C51085 +
           ((C35503 + C35504) * C1286 - (C45109 * C51089 + C45110 * C1285) +
            (C35505 + C35506) * C51073 -
            (C31645 * C3441 + C50954 * C3445 + C31644 * C816 + C31642 * C830) *
                C1287 -
            (C31645 * C3444 + C50954 * C3450 + C31644 * C829 + C31642 * C840) *
                C1282) *
               C50774 * C25482) *
              C50855) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C50774 * C51093 +
            ((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
             C34709 * C1392 - C34710 * C50759) *
                C50774 * C51085 +
            C45828 * C25482) *
               C1643 +
           (((C32053 + C32054) * C1392 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C1386 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1391) +
             (C32055 + C32056) * C50759) *
                C50774 * C51093 +
            (C36695 * C1392 -
             ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
             C36696 * C50759) *
                C50774 * C51085 +
            ((C35503 + C35504) * C1392 - (C45109 * C1386 + C45110 * C1391) +
             (C35505 + C35506) * C50759) *
                C50774 * C25482) *
               C50855) *
              C51046 +
          (((C34713 * C1392 -
             ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
             C34714 * C50759) *
                C50774 * C51093 +
            (C35107 * C1392 -
             ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
             C35116 * C50759) *
                C50774 * C51085 +
            ((C35132 + C35131) * C1392 - (C44943 * C1386 + C44944 * C1391) +
             (C35134 + C35133) * C50759) *
                C50774 * C25482) *
               C1643 +
           (((C35498 + C35497) * C1391 + (C35496 + C35495) * C1386 -
             C36698 * C1392 - C36697 * C50759) *
                C50774 * C51093 +
            ((C35499 + C35500) * C1391 + (C35501 + C35502) * C1386 -
             (C35504 + C35503) * C1392 - (C35506 + C35505) * C50759) *
                C50774 * C51085 +
            ((C45121 + C45122) * C1391 + (C45123 + C45124) * C1386 -
             (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
              C31642 * C3095) *
                 C1392 -
             (C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
              C31642 * C3099) *
                 C50759) *
                C50774 * C25482) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1391 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C1386 -
            (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
               C50774 * C51093 +
           ((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
            C34709 * C1392 - C34710 * C50759) *
               C50774 * C51085 +
           C45828 * C25482) *
              C51092 +
          (((C32053 + C32054) * C1392 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C1386 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C1391) +
            (C32055 + C32056) * C50759) *
               C50774 * C51093 +
           (C36695 * C1392 -
            ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
            C36696 * C50759) *
               C50774 * C51085 +
           ((C35503 + C35504) * C1392 - (C45109 * C1386 + C45110 * C1391) +
            (C35505 + C35506) * C50759) *
               C50774 * C25482) *
              C51082 +
          (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                C1391 +
            (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                C1386 -
            (C32643 + C32644) * C1392 - (C32645 + C32646) * C50759) *
               C50774 * C51093 +
           ((C35915 + C35916) * C1391 + (C35917 + C35918) * C1386 -
            (C35709 + C35710) * C1392 - (C35711 + C35712) * C50759) *
               C50774 * C51085 +
           ((C45427 + C45428) * C1391 + (C45429 + C45430) * C1386 -
            (C31645 * C9234 + C50954 * C9237 + C31644 * C3442 +
             C31642 * C3447) *
                C1392 -
            (C31645 * C9236 + C50954 * C9240 + C31644 * C3446 +
             C31642 * C3451) *
                C50759) *
               C50774 * C25482) *
              C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
               C118 +
           (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
               C106 -
           (C31679 + C31680) * C119 - (C31681 + C31682) * C107 + C31695 * C120 +
           C31696 * C108 - C31697 * C121 - C31698 * C109) *
              C50774 * C51093 +
          ((C34715 + C34716) * C118 + (C34717 + C34718) * C106 - C34709 * C119 -
           C34710 * C107 + C34711 * C120 + C34712 * C108 -
           (C31877 + C31878) * C121 - (C31879 + C31880) * C109) *
              C50774 * C51085 +
          ((C35130 + C35129) * C118 + (C35128 + C35127) * C106 - C35118 * C119 -
           C35117 * C107 + (C32234 + C32233) * C120 + (C32236 + C32235) * C108 -
           (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
               C121 -
           (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
               C109) *
              C50774 * C25482) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C49770 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51031 -
            (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
               C50774 * C51093 +
           ((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
            C34709 * C49763 - C34710 * C50759) *
               C50774 * C51085 +
           C44842 * C25482) *
              C50843 * C582 +
          ((C34713 * C49763 -
            ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
            C34714 * C50759) *
               C50774 * C51093 +
           (C35107 * C49763 -
            ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
            C35116 * C50759) *
               C50774 * C51085 +
           ((C35132 + C35131) * C49763 -
            ((C35276 + C35275) * C51031 + (C35274 + C35273) * C49770) +
            (C35134 + C35133) * C50759) *
               C50774 * C25482) *
              C50843 * C583 +
          (C44842 * C51093 +
           ((C35273 + C35274) * C49770 + (C35275 + C35276) * C51031 -
            (C35131 + C35132) * C49763 - (C35133 + C35134) * C50759) *
               C50774 * C51085 +
           ((C31644 * C2909 + C31642 * C2915 + C31645 * C8792 +
             C50954 * C8796) *
                C49770 +
            (C31644 * C2914 + C31642 * C2918 + C31645 * C8795 +
             C50954 * C8798) *
                C51031 -
            (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
             C31642 * C2913) *
                C49763 -
            (C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
             C31642 * C2917) *
                C50759) *
               C50774 * C25482) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C50774 * C51093 +
           ((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
            C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
               C50774 * C51085 +
           ((C35130 + C35129) * C283 + (C35128 + C35127) * C278 -
            C35118 * C284 - C35117 * C279 + (C32234 + C32233) * C285 +
            (C32236 + C32235) * C280) *
               C50774 * C25482) *
              C50843 * C51046 +
          ((C34713 * C284 -
            ((C34718 + C34717) * C278 + (C34716 + C34715) * C283) +
            C34714 * C279 - C31881 * C285 - C31882 * C280) *
               C50774 * C51093 +
           (C35107 * C284 -
            ((C35127 + C35128) * C278 + (C35129 + C35130) * C283) +
            C35116 * C279 - (C32233 + C32234) * C285 -
            (C32235 + C32236) * C280) *
               C50774 * C51085 +
           ((C35132 + C35131) * C284 -
            ((C35276 + C35275) * C278 + (C35274 + C35273) * C283) +
            (C35134 + C35133) * C279 -
            (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                C285 -
            (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                C280) *
               C50774 * C25482) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C696 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C51093 +
           ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
               C51085 +
           C44960 * C25482) *
              C50843 * C692 -
          (C44962 * C25482 +
           ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
               C51085 +
           ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
               C51093) *
              C50843 * C693 +
          (C44960 * C51093 +
           ((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C50774 *
               C51085 +
           ((C44956 + C44957) * C696 + (C44958 + C44959) * C50754) * C50774 *
               C25482) *
              C50843 * C694 -
          (((C31645 * C11308 + C50954 * C11310 + C31644 * C8621 +
             C31642 * C8624) *
                C50754 +
            (C31645 * C11307 + C50954 * C11309 + C31644 * C8618 +
             C31642 * C8622) *
                C696) *
               C50774 * C25482 +
           ((C44959 + C44958) * C50754 + (C44957 + C44956) * C696) * C50774 *
               C51085 +
           C44962 * C51093) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C50774 * C51093 +
           ((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
            C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
               C50774 * C51085 +
           ((C35130 + C35129) * C283 + (C35128 + C35127) * C278 -
            C35118 * C284 - C35117 * C279 + (C32234 + C32233) * C285 +
            (C32236 + C32235) * C280) *
               C50774 * C25482) *
              C51047 +
          (((C32053 + C32054) * C284 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C278 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C283) +
            (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
               C50774 * C51093 +
           (C36695 * C284 -
            ((C35495 + C35496) * C278 + (C35497 + C35498) * C283) +
            C36696 * C279 - (C33401 + C33402) * C285 -
            (C33403 + C33404) * C280) *
               C50774 * C51085 +
           ((C35503 + C35504) * C284 -
            ((C35502 + C35501) * C278 + (C35500 + C35499) * C283) +
            (C35505 + C35506) * C279 -
            (C31645 * C3441 + C50954 * C3445 + C31644 * C816 + C31642 * C830) *
                C285 -
            (C31645 * C3444 + C50954 * C3450 + C31644 * C829 + C31642 * C840) *
                C280) *
               C50774 * C25482) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C51093 +
            ((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C50774 *
                C51085 +
            C44960 * C25482) *
               C51047 -
           (C45126 * C25482 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C50774 *
                C51085 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C50774 * C51093) *
               C50855) *
              C582 +
          ((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C50774 *
                C51093 +
            ((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C50774 *
                C51085 +
            ((C45121 + C45122) * C696 + (C45123 + C45124) * C50754) * C50774 *
                C25482) *
               C50855 -
           (C44962 * C25482 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C50774 *
                C51085 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C50774 *
                C51093) *
               C51047) *
              C583 +
          ((C44960 * C51093 +
            ((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C50774 *
                C51085 +
            ((C44956 + C44957) * C696 + (C44958 + C44959) * C50754) * C50774 *
                C25482) *
               C51047 -
           (((C31645 * C11519 + C50954 * C11521 + C31644 * C8795 +
              C31642 * C8798) *
                 C50754 +
             (C31645 * C11518 + C50954 * C11520 + C31644 * C8792 +
              C31642 * C8796) *
                 C696) *
                C50774 * C25482 +
            ((C45124 + C45123) * C50754 + (C45122 + C45121) * C696) * C50774 *
                C51085 +
            C45126 * C51093) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C1285 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C51089 -
                    (C38131 + C38132 + C38133) * C1286 -
                    (C38134 + C38135 + C38136) * C51073 +
                    (C38137 + C38138 + C38139) * C1287 +
                    (C38140 + C38141 + C38142) * C1282) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C1285 +
                    (C47254 + C47255 + C47256) * C51089 -
                    (C38321 + C38320 + C38319) * C1286 -
                    (C38324 + C38323 + C38322) * C51073 +
                    (C38327 + C38326 + C38325) * C1287 +
                    (C38330 + C38329 + C38328) * C1282) *
                       C50774 * C50930) *
                      C50843 * C1283 +
                  (((C38319 + C38320 + C38321) * C1286 -
                    ((C47256 + C47255 + C47254) * C51089 +
                     (C47253 + C47252 + C47251) * C1285) +
                    (C38322 + C38323 + C38324) * C51073 -
                    (C38325 + C38326 + C38327) * C1287 -
                    (C38328 + C38329 + C38330) * C1282) *
                       C50774 * C22848 +
                   ((C38673 + C38672 + C38671) * C1286 -
                    ((C47561 + C47562 + C47563) * C51089 +
                     (C47564 + C47565 + C47566) * C1285) +
                    (C38676 + C38675 + C38674) * C51073 -
                    (C38093 * C3441 + C38090 * C3445 + C38092 * C816 +
                     C51088 * C830 + C38091 * C589 + C51094 * C596) *
                        C1287 -
                    (C38093 * C3444 + C38090 * C3450 + C38092 * C829 +
                     C51088 * C840 + C38091 * C597 + C51094 * C604) *
                        C1282) *
                       C50774 * C50930) *
                      C50843 * C50831)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C1391 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C1386 -
                    (C38131 + C38132 + C38133) * C1392 -
                    (C38134 + C38135 + C38136) * C50759) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C1391 +
                    (C47254 + C47255 + C47256) * C1386 -
                    (C38321 + C38320 + C38319) * C1392 -
                    (C38324 + C38323 + C38322) * C50759) *
                       C50774 * C50930) *
                      C50843 * C51091 +
                  (((C38319 + C38320 + C38321) * C1392 -
                    ((C47256 + C47255 + C47254) * C1386 +
                     (C47253 + C47252 + C47251) * C1391) +
                    (C38322 + C38323 + C38324) * C50759) *
                       C50774 * C22848 +
                   ((C38673 + C38672 + C38671) * C1392 -
                    ((C47561 + C47562 + C47563) * C1386 +
                     (C47564 + C47565 + C47566) * C1391) +
                    (C38676 + C38675 + C38674) * C50759) *
                       C50774 * C50930) *
                      C50843 * C51079 +
                  (((C47566 + C47565 + C47564) * C1391 +
                    (C47563 + C47562 + C47561) * C1386 -
                    (C38671 + C38672 + C38673) * C1392 -
                    (C38674 + C38675 + C38676) * C50759) *
                       C50774 * C22848 +
                   ((C47677 + C47678 + C47679) * C1391 +
                    (C47680 + C47681 + C47682) * C1386 -
                    (C38093 * C9118 + C38090 * C9121 + C38092 * C3090 +
                     C51088 * C3095 + C38091 * C699 + C51094 * C706) *
                        C1392 -
                    (C38093 * C9120 + C38090 * C9124 + C38092 * C3094 +
                     C51088 * C3099 + C38091 * C705 + C51094 * C711) *
                        C50759) *
                       C50774 * C50930) *
                      C50843 * C1390)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C1391 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C1386 -
                     (C38131 + C38132 + C38133) * C1392 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C1391 +
                     (C47254 + C47255 + C47256) * C1386 -
                     (C38321 + C38320 + C38319) * C1392 -
                     (C38324 + C38323 + C38322) * C50759) *
                        C50774 * C50930) *
                       C51047 +
                   (((C38501 + C38502 + C38503) * C1392 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C1386 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C1391) +
                     (C38504 + C38505 + C38506) * C50759) *
                        C50774 * C22848 +
                    ((C39829 + C39828 + C39827) * C1392 -
                     ((C47853 + C47854 + C47855) * C1386 +
                      (C47856 + C47857 + C47858) * C1391) +
                     (C39832 + C39831 + C39830) * C50759) *
                        C50774 * C50930) *
                       C50855) *
                      C1283 +
                  ((((C38319 + C38320 + C38321) * C1392 -
                     ((C47256 + C47255 + C47254) * C1386 +
                      (C47253 + C47252 + C47251) * C1391) +
                     (C38322 + C38323 + C38324) * C50759) *
                        C50774 * C22848 +
                    ((C38673 + C38672 + C38671) * C1392 -
                     ((C47561 + C47562 + C47563) * C1386 +
                      (C47564 + C47565 + C47566) * C1391) +
                     (C38676 + C38675 + C38674) * C50759) *
                        C50774 * C50930) *
                       C51047 +
                   (((C47858 + C47857 + C47856) * C1391 +
                     (C47855 + C47854 + C47853) * C1386 -
                     (C39827 + C39828 + C39829) * C1392 -
                     (C39830 + C39831 + C39832) * C50759) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C1391 +
                     (C47862 + C47863 + C47864) * C1386 -
                     (C38093 * C9234 + C38090 * C9237 + C38092 * C3442 +
                      C51088 * C3447 + C38091 * C817 + C51094 * C832) *
                         C1392 -
                     (C38093 * C9236 + C38090 * C9240 + C38092 * C3446 +
                      C51088 * C3451 + C38091 * C831 + C51094 * C841) *
                         C50759) *
                        C50774 * C50930) *
                       C50855) *
                      C50831)) /
                (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C49770 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C51031 -
                     (C38131 + C38132 + C38133) * C49763 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C49770 +
                     (C47254 + C47255 + C47256) * C51031 -
                     (C38321 + C38320 + C38319) * C49763 -
                     (C38324 + C38323 + C38322) * C50759) *
                        C50774 * C50930) *
                       C1643 +
                   (((C38501 + C38502 + C38503) * C49763 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C51031 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C49770) +
                     (C38504 + C38505 + C38506) * C50759) *
                        C50774 * C22848 +
                    ((C39829 + C39828 + C39827) * C49763 -
                     ((C47853 + C47854 + C47855) * C51031 +
                      (C47856 + C47857 + C47858) * C49770) +
                     (C39832 + C39831 + C39830) * C50759) *
                        C50774 * C50930) *
                       C50855) *
                      C1283 +
                  ((((C38319 + C38320 + C38321) * C49763 -
                     ((C47256 + C47255 + C47254) * C51031 +
                      (C47253 + C47252 + C47251) * C49770) +
                     (C38322 + C38323 + C38324) * C50759) *
                        C50774 * C22848 +
                    ((C38673 + C38672 + C38671) * C49763 -
                     ((C47561 + C47562 + C47563) * C51031 +
                      (C47564 + C47565 + C47566) * C49770) +
                     (C38676 + C38675 + C38674) * C50759) *
                        C50774 * C50930) *
                       C1643 +
                   (((C47858 + C47857 + C47856) * C49770 +
                     (C47855 + C47854 + C47853) * C51031 -
                     (C39827 + C39828 + C39829) * C49763 -
                     (C39830 + C39831 + C39832) * C50759) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C49770 +
                     (C47862 + C47863 + C47864) * C51031 -
                     (C38093 * C9234 + C38090 * C9237 + C38092 * C3442 +
                      C51088 * C3447 + C38091 * C817 + C51094 * C832) *
                         C49763 -
                     (C38093 * C9236 + C38090 * C9240 + C38092 * C3446 +
                      C51088 * C3451 + C38091 * C831 + C51094 * C841) *
                         C50759) *
                        C50774 * C50930) *
                       C50855) *
                      C50831)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C696 +
                     (C47254 + C47255 + C47256) * C50754) *
                        C50774 * C50930) *
                       C1643 -
                   (((C47853 + C47854 + C47855) * C50754 +
                     (C47856 + C47857 + C47858) * C696) *
                        C50774 * C50930 +
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C50754 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C696) *
                        C50774 * C22848) *
                       C50855) *
                      C51091 +
                  ((((C47858 + C47857 + C47856) * C696 +
                     (C47855 + C47854 + C47853) * C50754) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C696 +
                     (C47862 + C47863 + C47864) * C50754) *
                        C50774 * C50930) *
                       C50855 -
                   (((C47561 + C47562 + C47563) * C50754 +
                     (C47564 + C47565 + C47566) * C696) *
                        C50774 * C50930 +
                    ((C47256 + C47255 + C47254) * C50754 +
                     (C47253 + C47252 + C47251) * C696) *
                        C50774 * C22848) *
                       C1643) *
                      C51079 +
                  ((((C47566 + C47565 + C47564) * C696 +
                     (C47563 + C47562 + C47561) * C50754) *
                        C50774 * C22848 +
                    ((C47677 + C47678 + C47679) * C696 +
                     (C47680 + C47681 + C47682) * C50754) *
                        C50774 * C50930) *
                       C1643 -
                   (((C38093 * C11597 + C38090 * C11599 + C38092 * C9122 +
                      C51088 * C9125 + C38091 * C3096 + C51094 * C3100) *
                         C50754 +
                     (C38093 * C11596 + C38090 * C11598 + C38092 * C9119 +
                      C51088 * C9123 + C38091 * C3091 + C51094 * C3097) *
                         C696) *
                        C50774 * C50930 +
                    ((C47864 + C47863 + C47862) * C50754 +
                     (C47861 + C47860 + C47859) * C696) *
                        C50774 * C22848) *
                       C50855) *
                      C1390)) /
                (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C696 +
                     (C47254 + C47255 + C47256) * C50754) *
                        C50774 * C50930) *
                       C51092 -
                   (((C47853 + C47854 + C47855) * C50754 +
                     (C47856 + C47857 + C47858) * C696) *
                        C50774 * C50930 +
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C50754 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C696) *
                        C50774 * C22848) *
                       C51082 +
                   (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                      C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                         C696 +
                     (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                      C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                         C50754) *
                        C50774 * C22848 +
                    ((C48169 + C48170 + C48171) * C696 +
                     (C48172 + C48173 + C48174) * C50754) *
                        C50774 * C50930) *
                       C1875) *
                      C1283 +
                  ((((C47858 + C47857 + C47856) * C696 +
                     (C47855 + C47854 + C47853) * C50754) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C696 +
                     (C47862 + C47863 + C47864) * C50754) *
                        C50774 * C50930) *
                       C51082 -
                   (((C47561 + C47562 + C47563) * C50754 +
                     (C47564 + C47565 + C47566) * C696) *
                        C50774 * C50930 +
                    ((C47256 + C47255 + C47254) * C50754 +
                     (C47253 + C47252 + C47251) * C696) *
                        C50774 * C22848) *
                       C51092 -
                   (((C38093 * C13921 + C38090 * C13925 + C38092 * C9238 +
                      C51088 * C9241 + C38091 * C3448 + C51094 * C3452) *
                         C50754 +
                     (C38093 * C13919 + C38090 * C13922 + C38092 * C9235 +
                      C51088 * C9239 + C38091 * C3443 + C51094 * C3449) *
                         C696) *
                        C50774 * C50930 +
                    ((C48174 + C48173 + C48172) * C50754 +
                     (C48171 + C48170 + C48169) * C696) *
                        C50774 * C22848) *
                       C1875) *
                      C50831)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C49770 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C51031 -
                    (C38131 + C38132 + C38133) * C49763 -
                    (C38134 + C38135 + C38136) * C50759) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C49770 +
                    (C47254 + C47255 + C47256) * C51031 -
                    (C38321 + C38320 + C38319) * C49763 -
                    (C38324 + C38323 + C38322) * C50759) *
                       C50774 * C50930) *
                      C50843 * C582 +
                  (((C38319 + C38320 + C38321) * C49763 -
                    ((C47256 + C47255 + C47254) * C51031 +
                     (C47253 + C47252 + C47251) * C49770) +
                    (C38322 + C38323 + C38324) * C50759) *
                       C50774 * C22848 +
                   ((C38673 + C38672 + C38671) * C49763 -
                    ((C47561 + C47562 + C47563) * C51031 +
                     (C47564 + C47565 + C47566) * C49770) +
                    (C38676 + C38675 + C38674) * C50759) *
                       C50774 * C50930) *
                      C50843 * C583 +
                  (((C47566 + C47565 + C47564) * C49770 +
                    (C47563 + C47562 + C47561) * C51031 -
                    (C38671 + C38672 + C38673) * C49763 -
                    (C38674 + C38675 + C38676) * C50759) *
                       C50774 * C22848 +
                   ((C38091 * C700 + C51094 * C708 + C38092 * C3091 +
                     C51088 * C3097 + C38093 * C9119 + C38090 * C9123) *
                        C49770 +
                    (C38091 * C707 + C51094 * C712 + C38092 * C3096 +
                     C51088 * C3100 + C38093 * C9122 + C38090 * C9125) *
                        C51031 -
                    (C38093 * C9118 + C38090 * C9121 + C38092 * C3090 +
                     C51088 * C3095 + C38091 * C699 + C51094 * C706) *
                        C49763 -
                    (C38093 * C9120 + C38090 * C9124 + C38092 * C3094 +
                     C51088 * C3099 + C38091 * C705 + C51094 * C711) *
                        C50759) *
                       C50774 * C50930) *
                      C50843 * C584)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                    C51088 * C442 + C38093 * C944 + C38090 * C949) *
                       C118 +
                   (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                    C51088 * C452 + C38093 * C950 + C38090 * C959) *
                       C106 -
                   (C38131 + C38132 + C38133) * C119 -
                   (C38134 + C38135 + C38136) * C107 +
                   (C38137 + C38138 + C38139) * C120 +
                   (C38140 + C38141 + C38142) * C108 -
                   (C38143 + C38144 + C38145) * C121 -
                   (C38146 + C38147 + C38148) * C109) *
                      C50774 * C22848 +
                  ((C38091 * C287 + C51094 * C294 + C38092 * C811 +
                    C51088 * C819 + C38093 * C1083 + C38090 * C1091) *
                       C118 +
                   (C38091 * C293 + C51094 * C304 + C38092 * C820 +
                    C51088 * C835 + C38093 * C1090 + C38090 * C1095) *
                       C106 -
                   (C38321 + C38320 + C38319) * C119 -
                   (C38324 + C38323 + C38322) * C107 +
                   (C38327 + C38326 + C38325) * C120 +
                   (C38330 + C38329 + C38328) * C108 -
                   (C38093 * C1080 + C38090 * C1085 + C38092 * C814 +
                    C51088 * C825 + C38091 * C289 + C51094 * C298) *
                       C121 -
                   (C38093 * C1084 + C38090 * C1092 + C38092 * C826 +
                    C51088 * C838 + C38091 * C299 + C51094 * C307) *
                       C109) *
                      C50774 * C50930) *
                 C50843 * C50817) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C49770 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C51031 -
                    (C38131 + C38132 + C38133) * C49763 -
                    (C38134 + C38135 + C38136) * C50759) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C49770 +
                    (C47254 + C47255 + C47256) * C51031 -
                    (C38321 + C38320 + C38319) * C49763 -
                    (C38324 + C38323 + C38322) * C50759) *
                       C50774 * C50930) *
                      C941 +
                  (((C38501 + C38502 + C38503) * C49763 -
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C51031 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C49770) +
                    (C38504 + C38505 + C38506) * C50759) *
                       C50774 * C22848 +
                   ((C39829 + C39828 + C39827) * C49763 -
                    ((C47853 + C47854 + C47855) * C51031 +
                     (C47856 + C47857 + C47858) * C49770) +
                    (C39832 + C39831 + C39830) * C50759) *
                       C50774 * C50930) *
                      C942 +
                  (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                     C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                        C49770 +
                    (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                     C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                        C51031 -
                    (C39079 + C39080 + C39081) * C49763 -
                    (C39082 + C39083 + C39084) * C50759) *
                       C50774 * C22848 +
                   ((C38091 * C1083 + C51094 * C1091 + C38092 * C3565 +
                     C51088 * C3571 + C38093 * C13920 + C38090 * C13924) *
                        C49770 +
                    (C38091 * C1090 + C51094 * C1095 + C38092 * C3570 +
                     C51088 * C3574 + C38093 * C13923 + C38090 * C13926) *
                        C51031 -
                    (C38093 * C16645 + C38090 * C16647 + C38092 * C3564 +
                     C51088 * C3569 + C38091 * C1082 + C51094 * C1089) *
                        C49763 -
                    (C38093 * C16646 + C38090 * C16648 + C38092 * C3568 +
                     C51088 * C3573 + C38091 * C1088 + C51094 * C1094) *
                        C50759) *
                       C50774 * C50930) *
                      C943) *
                 C50817) /
                    (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C696 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C50754) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C696 +
                    (C47254 + C47255 + C47256) * C50754) *
                       C50774 * C50930) *
                      C50843 * C692 -
                  (((C47561 + C47562 + C47563) * C50754 +
                    (C47564 + C47565 + C47566) * C696) *
                       C50774 * C50930 +
                   ((C47256 + C47255 + C47254) * C50754 +
                    (C47253 + C47252 + C47251) * C696) *
                       C50774 * C22848) *
                      C50843 * C693 +
                  (((C47566 + C47565 + C47564) * C696 +
                    (C47563 + C47562 + C47561) * C50754) *
                       C50774 * C22848 +
                   ((C47677 + C47678 + C47679) * C696 +
                    (C47680 + C47681 + C47682) * C50754) *
                       C50774 * C50930) *
                      C50843 * C694 -
                  (((C38093 * C11519 + C38090 * C11521 + C38092 * C8795 +
                     C51088 * C8798 + C38091 * C2914 + C51094 * C2918) *
                        C50754 +
                    (C38093 * C11518 + C38090 * C11520 + C38092 * C8792 +
                     C51088 * C8796 + C38091 * C2909 + C51094 * C2915) *
                        C696) *
                       C50774 * C50930 +
                   ((C47682 + C47681 + C47680) * C50754 +
                    (C47679 + C47678 + C47677) * C696) *
                       C50774 * C22848) *
                      C50843 * C695)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C283 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C278 -
                    (C38131 + C38132 + C38133) * C284 -
                    (C38134 + C38135 + C38136) * C279 +
                    (C38137 + C38138 + C38139) * C285 +
                    (C38140 + C38141 + C38142) * C280) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C283 +
                    (C47254 + C47255 + C47256) * C278 -
                    (C38321 + C38320 + C38319) * C284 -
                    (C38324 + C38323 + C38322) * C279 +
                    (C38327 + C38326 + C38325) * C285 +
                    (C38330 + C38329 + C38328) * C280) *
                       C50774 * C50930) *
                      C50843 * C51046 +
                  (((C38319 + C38320 + C38321) * C284 -
                    ((C47256 + C47255 + C47254) * C278 +
                     (C47253 + C47252 + C47251) * C283) +
                    (C38322 + C38323 + C38324) * C279 -
                    (C38325 + C38326 + C38327) * C285 -
                    (C38328 + C38329 + C38330) * C280) *
                       C50774 * C22848 +
                   ((C38673 + C38672 + C38671) * C284 -
                    ((C38093 * C3448 + C38090 * C3452 + C38092 * C833 +
                      C51088 * C842 + C38091 * C593 + C51094 * C602) *
                         C278 +
                     (C38093 * C3443 + C38090 * C3449 + C38092 * C818 +
                      C51088 * C834 + C38091 * C587 + C51094 * C592) *
                         C283) +
                    (C38676 + C38675 + C38674) * C279 -
                    (C38093 * C3441 + C38090 * C3445 + C38092 * C816 +
                     C51088 * C830 + C38091 * C589 + C51094 * C596) *
                        C285 -
                    (C38093 * C3444 + C38090 * C3450 + C38092 * C829 +
                     C51088 * C840 + C38091 * C597 + C51094 * C604) *
                        C280) *
                       C50774 * C50930) *
                      C50843 * C50831)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C696 +
                     (C47254 + C47255 + C47256) * C50754) *
                        C50774 * C50930) *
                       C941 -
                   (((C47853 + C47854 + C47855) * C50754 +
                     (C47856 + C47857 + C47858) * C696) *
                        C50774 * C50930 +
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C50754 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C696) *
                        C50774 * C22848) *
                       C942 +
                   (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                      C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                         C696 +
                     (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                      C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                         C50754) *
                        C50774 * C22848 +
                    ((C48169 + C48170 + C48171) * C696 +
                     (C48172 + C48173 + C48174) * C50754) *
                        C50774 * C50930) *
                       C943) *
                      C51046 +
                  ((((C47858 + C47857 + C47856) * C696 +
                     (C47855 + C47854 + C47853) * C50754) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C696 +
                     (C47862 + C47863 + C47864) * C50754) *
                        C50774 * C50930) *
                       C942 -
                   (((C47561 + C47562 + C47563) * C50754 +
                     (C47564 + C47565 + C47566) * C696) *
                        C50774 * C50930 +
                    ((C47256 + C47255 + C47254) * C50754 +
                     (C47253 + C47252 + C47251) * C696) *
                        C50774 * C22848) *
                       C941 -
                   (((C38093 * C13921 + C38090 * C13925 + C38092 * C9238 +
                      C51088 * C9241 + C38091 * C3448 + C51094 * C3452) *
                         C50754 +
                     (C38093 * C13919 + C38090 * C13922 + C38092 * C9235 +
                      C51088 * C9239 + C38091 * C3443 + C51094 * C3449) *
                         C696) *
                        C50774 * C50930 +
                    ((C48174 + C48173 + C48172) * C50754 +
                     (C48171 + C48170 + C48169) * C696) *
                        C50774 * C22848) *
                       C943) *
                      C50831)) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C696 +
                     (C47254 + C47255 + C47256) * C50754) *
                        C50774 * C50930) *
                       C51047 -
                   (((C47853 + C47854 + C47855) * C50754 +
                     (C47856 + C47857 + C47858) * C696) *
                        C50774 * C50930 +
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C50754 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C696) *
                        C50774 * C22848) *
                       C50855) *
                      C582 +
                  ((((C47858 + C47857 + C47856) * C696 +
                     (C47855 + C47854 + C47853) * C50754) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C696 +
                     (C47862 + C47863 + C47864) * C50754) *
                        C50774 * C50930) *
                       C50855 -
                   (((C47561 + C47562 + C47563) * C50754 +
                     (C47564 + C47565 + C47566) * C696) *
                        C50774 * C50930 +
                    ((C47256 + C47255 + C47254) * C50754 +
                     (C47253 + C47252 + C47251) * C696) *
                        C50774 * C22848) *
                       C51047) *
                      C583 +
                  ((((C47566 + C47565 + C47564) * C696 +
                     (C47563 + C47562 + C47561) * C50754) *
                        C50774 * C22848 +
                    ((C47677 + C47678 + C47679) * C696 +
                     (C47680 + C47681 + C47682) * C50754) *
                        C50774 * C50930) *
                       C51047 -
                   (((C38093 * C11597 + C38090 * C11599 + C38092 * C9122 +
                      C51088 * C9125 + C38091 * C3096 + C51094 * C3100) *
                         C50754 +
                     (C38093 * C11596 + C38090 * C11598 + C38092 * C9119 +
                      C51088 * C9123 + C38091 * C3091 + C51094 * C3097) *
                         C696) *
                        C50774 * C50930 +
                    ((C47864 + C47863 + C47862) * C50754 +
                     (C47861 + C47860 + C47859) * C696) *
                        C50774 * C22848) *
                       C50855) *
                      C584)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C283 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C278 -
                    (C38131 + C38132 + C38133) * C284 -
                    (C38134 + C38135 + C38136) * C279 +
                    (C38137 + C38138 + C38139) * C285 +
                    (C38140 + C38141 + C38142) * C280) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C283 +
                    (C47254 + C47255 + C47256) * C278 -
                    (C38321 + C38320 + C38319) * C284 -
                    (C38324 + C38323 + C38322) * C279 +
                    (C38327 + C38326 + C38325) * C285 +
                    (C38330 + C38329 + C38328) * C280) *
                       C50774 * C50930) *
                      C51047 +
                  (((C38501 + C38502 + C38503) * C284 -
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C278 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C283) +
                    (C38504 + C38505 + C38506) * C279 -
                    (C38507 + C38508 + C38509) * C285 -
                    (C38510 + C38511 + C38512) * C280) *
                       C50774 * C22848 +
                   ((C39829 + C39828 + C39827) * C284 -
                    ((C38093 * C3570 + C38090 * C3574 + C38092 * C1090 +
                      C51088 * C1095 + C38091 * C820 + C51094 * C835) *
                         C278 +
                     (C38093 * C3565 + C38090 * C3571 + C38092 * C1083 +
                      C51088 * C1091 + C38091 * C811 + C51094 * C819) *
                         C283) +
                    (C39832 + C39831 + C39830) * C279 -
                    (C38093 * C3563 + C38090 * C3567 + C38092 * C1081 +
                     C51088 * C1087 + C38091 * C813 + C51094 * C823) *
                        C285 -
                    (C38093 * C3566 + C38090 * C3572 + C38092 * C1086 +
                     C51088 * C1093 + C38091 * C824 + C51094 * C837) *
                        C280) *
                       C50774 * C50930) *
                      C50855) *
                 C50817) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C696 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C50754) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C696 +
                    (C47254 + C47255 + C47256) * C50754) *
                       C50774 * C50930) *
                      C1162 -
                  (((C47853 + C47854 + C47855) * C50754 +
                    (C47856 + C47857 + C47858) * C696) *
                       C50774 * C50930 +
                   ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                     C51088 * C959 + C38091 * C441 + C51094 * C452) *
                        C50754 +
                    (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                     C51088 * C949 + C38091 * C435 + C51094 * C442) *
                        C696) *
                       C50774 * C22848) *
                      C1163 +
                  (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                     C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                        C696 +
                    (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                     C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                        C50754) *
                       C50774 * C22848 +
                   ((C48169 + C48170 + C48171) * C696 +
                    (C48172 + C48173 + C48174) * C50754) *
                       C50774 * C50930) *
                      C1164 -
                  (((C38093 * C19510 + C38090 * C19512 + C38092 * C13923 +
                     C51088 * C13926 + C38091 * C3570 + C51094 * C3574) *
                        C50754 +
                    (C38093 * C19509 + C38090 * C19511 + C38092 * C13920 +
                     C51088 * C13924 + C38091 * C3565 + C51094 * C3571) *
                        C696) *
                       C50774 * C50930 +
                   ((C38093 * C16751 + C38090 * C16754 + C38092 * C6456 +
                     C51088 * C6460 + C38091 * C1176 + C51094 * C1181) *
                        C50754 +
                    (C38093 * C16748 + C38090 * C16752 + C38092 * C6451 +
                     C51088 * C6457 + C38091 * C1169 + C51094 * C1177) *
                        C696) *
                       C50774 * C22848) *
                      C1165) *
                 C50817) /
                    (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C1285 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C51089 -
                    (C38131 + C38132 + C38133) * C1286 -
                    (C38134 + C38135 + C38136) * C51073 +
                    (C38137 + C38138 + C38139) * C1287 +
                    (C38140 + C38141 + C38142) * C1282) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C1285 +
                    (C47254 + C47255 + C47256) * C51089 -
                    (C38321 + C38320 + C38319) * C1286 -
                    (C38324 + C38323 + C38322) * C51073 +
                    (C38327 + C38326 + C38325) * C1287 +
                    (C38330 + C38329 + C38328) * C1282) *
                       C50774 * C50930) *
                      C1643 +
                  (((C38501 + C38502 + C38503) * C1286 -
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C51089 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C1285) +
                    (C38504 + C38505 + C38506) * C51073 -
                    (C38507 + C38508 + C38509) * C1287 -
                    (C38510 + C38511 + C38512) * C1282) *
                       C50774 * C22848 +
                   ((C39829 + C39828 + C39827) * C1286 -
                    ((C47853 + C47854 + C47855) * C51089 +
                     (C47856 + C47857 + C47858) * C1285) +
                    (C39832 + C39831 + C39830) * C51073 -
                    (C38093 * C3563 + C38090 * C3567 + C38092 * C1081 +
                     C51088 * C1087 + C38091 * C813 + C51094 * C823) *
                        C1287 -
                    (C38093 * C3566 + C38090 * C3572 + C38092 * C1086 +
                     C51088 * C1093 + C38091 * C824 + C51094 * C837) *
                        C1282) *
                       C50774 * C50930) *
                      C50855) *
                 C50817) /
                (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C1391 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C1386 -
                     (C38131 + C38132 + C38133) * C1392 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C1391 +
                     (C47254 + C47255 + C47256) * C1386 -
                     (C38321 + C38320 + C38319) * C1392 -
                     (C38324 + C38323 + C38322) * C50759) *
                        C50774 * C50930) *
                       C1643 +
                   (((C38501 + C38502 + C38503) * C1392 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C1386 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C1391) +
                     (C38504 + C38505 + C38506) * C50759) *
                        C50774 * C22848 +
                    ((C39829 + C39828 + C39827) * C1392 -
                     ((C47853 + C47854 + C47855) * C1386 +
                      (C47856 + C47857 + C47858) * C1391) +
                     (C39832 + C39831 + C39830) * C50759) *
                        C50774 * C50930) *
                       C50855) *
                      C51046 +
                  ((((C38319 + C38320 + C38321) * C1392 -
                     ((C47256 + C47255 + C47254) * C1386 +
                      (C47253 + C47252 + C47251) * C1391) +
                     (C38322 + C38323 + C38324) * C50759) *
                        C50774 * C22848 +
                    ((C38673 + C38672 + C38671) * C1392 -
                     ((C47561 + C47562 + C47563) * C1386 +
                      (C47564 + C47565 + C47566) * C1391) +
                     (C38676 + C38675 + C38674) * C50759) *
                        C50774 * C50930) *
                       C1643 +
                   (((C47858 + C47857 + C47856) * C1391 +
                     (C47855 + C47854 + C47853) * C1386 -
                     (C39827 + C39828 + C39829) * C1392 -
                     (C39830 + C39831 + C39832) * C50759) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C1391 +
                     (C47862 + C47863 + C47864) * C1386 -
                     (C38093 * C9234 + C38090 * C9237 + C38092 * C3442 +
                      C51088 * C3447 + C38091 * C817 + C51094 * C832) *
                         C1392 -
                     (C38093 * C9236 + C38090 * C9240 + C38092 * C3446 +
                      C51088 * C3451 + C38091 * C831 + C51094 * C841) *
                         C50759) *
                        C50774 * C50930) *
                       C50855) *
                      C50831)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C1391 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C1386 -
                    (C38131 + C38132 + C38133) * C1392 -
                    (C38134 + C38135 + C38136) * C50759) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C1391 +
                    (C47254 + C47255 + C47256) * C1386 -
                    (C38321 + C38320 + C38319) * C1392 -
                    (C38324 + C38323 + C38322) * C50759) *
                       C50774 * C50930) *
                      C51092 +
                  (((C38501 + C38502 + C38503) * C1392 -
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C1386 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C1391) +
                    (C38504 + C38505 + C38506) * C50759) *
                       C50774 * C22848 +
                   ((C39829 + C39828 + C39827) * C1392 -
                    ((C47853 + C47854 + C47855) * C1386 +
                     (C47856 + C47857 + C47858) * C1391) +
                    (C39832 + C39831 + C39830) * C50759) *
                       C50774 * C50930) *
                      C51082 +
                  (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                     C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                        C1391 +
                    (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                     C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                        C1386 -
                    (C39079 + C39080 + C39081) * C1392 -
                    (C39082 + C39083 + C39084) * C50759) *
                       C50774 * C22848 +
                   ((C48169 + C48170 + C48171) * C1391 +
                    (C48172 + C48173 + C48174) * C1386 -
                    (C38093 * C16645 + C38090 * C16647 + C38092 * C3564 +
                     C51088 * C3569 + C38091 * C1082 + C51094 * C1089) *
                        C1392 -
                    (C38093 * C16646 + C38090 * C16648 + C38092 * C3568 +
                     C51088 * C3573 + C38091 * C1088 + C51094 * C1094) *
                        C50759) *
                       C50774 * C50930) *
                      C1875) *
                 C50817) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                    C51088 * C442 + C38093 * C944 + C38090 * C949) *
                       C118 +
                   (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                    C51088 * C452 + C38093 * C950 + C38090 * C959) *
                       C106 -
                   (C38131 + C38132 + C38133) * C119 -
                   (C38134 + C38135 + C38136) * C107 +
                   (C38137 + C38138 + C38139) * C120 +
                   (C38140 + C38141 + C38142) * C108 -
                   (C38143 + C38144 + C38145) * C121 -
                   (C38146 + C38147 + C38148) * C109) *
                      C50774 * C22848 +
                  ((C38091 * C287 + C51094 * C294 + C38092 * C811 +
                    C51088 * C819 + C38093 * C1083 + C38090 * C1091) *
                       C118 +
                   (C38091 * C293 + C51094 * C304 + C38092 * C820 +
                    C51088 * C835 + C38093 * C1090 + C38090 * C1095) *
                       C106 -
                   (C38321 + C38320 + C38319) * C119 -
                   (C38324 + C38323 + C38322) * C107 +
                   (C38327 + C38326 + C38325) * C120 +
                   (C38330 + C38329 + C38328) * C108 -
                   (C38093 * C1080 + C38090 * C1085 + C38092 * C814 +
                    C51088 * C825 + C38091 * C289 + C51094 * C298) *
                       C121 -
                   (C38093 * C1084 + C38090 * C1092 + C38092 * C826 +
                    C51088 * C838 + C38091 * C299 + C51094 * C307) *
                       C109) *
                      C50774 * C50930) *
                 C50843 * C50817) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C49770 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C51031 -
                    (C38131 + C38132 + C38133) * C49763 -
                    (C38134 + C38135 + C38136) * C50759) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C49770 +
                    (C47254 + C47255 + C47256) * C51031 -
                    (C38321 + C38320 + C38319) * C49763 -
                    (C38324 + C38323 + C38322) * C50759) *
                       C50774 * C50930) *
                      C50843 * C582 +
                  (((C38319 + C38320 + C38321) * C49763 -
                    ((C47256 + C47255 + C47254) * C51031 +
                     (C47253 + C47252 + C47251) * C49770) +
                    (C38322 + C38323 + C38324) * C50759) *
                       C50774 * C22848 +
                   ((C38673 + C38672 + C38671) * C49763 -
                    ((C47561 + C47562 + C47563) * C51031 +
                     (C47564 + C47565 + C47566) * C49770) +
                    (C38676 + C38675 + C38674) * C50759) *
                       C50774 * C50930) *
                      C50843 * C583 +
                  (((C47566 + C47565 + C47564) * C49770 +
                    (C47563 + C47562 + C47561) * C51031 -
                    (C38671 + C38672 + C38673) * C49763 -
                    (C38674 + C38675 + C38676) * C50759) *
                       C50774 * C22848 +
                   ((C38091 * C700 + C51094 * C708 + C38092 * C3091 +
                     C51088 * C3097 + C38093 * C9119 + C38090 * C9123) *
                        C49770 +
                    (C38091 * C707 + C51094 * C712 + C38092 * C3096 +
                     C51088 * C3100 + C38093 * C9122 + C38090 * C9125) *
                        C51031 -
                    (C38093 * C9118 + C38090 * C9121 + C38092 * C3090 +
                     C51088 * C3095 + C38091 * C699 + C51094 * C706) *
                        C49763 -
                    (C38093 * C9120 + C38090 * C9124 + C38092 * C3094 +
                     C51088 * C3099 + C38091 * C705 + C51094 * C711) *
                        C50759) *
                       C50774 * C50930) *
                      C50843 * C584)) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C283 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C278 -
                    (C38131 + C38132 + C38133) * C284 -
                    (C38134 + C38135 + C38136) * C279 +
                    (C38137 + C38138 + C38139) * C285 +
                    (C38140 + C38141 + C38142) * C280) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C283 +
                    (C47254 + C47255 + C47256) * C278 -
                    (C38321 + C38320 + C38319) * C284 -
                    (C38324 + C38323 + C38322) * C279 +
                    (C38327 + C38326 + C38325) * C285 +
                    (C38330 + C38329 + C38328) * C280) *
                       C50774 * C50930) *
                      C50843 * C51046 +
                  (((C38319 + C38320 + C38321) * C284 -
                    ((C47256 + C47255 + C47254) * C278 +
                     (C47253 + C47252 + C47251) * C283) +
                    (C38322 + C38323 + C38324) * C279 -
                    (C38325 + C38326 + C38327) * C285 -
                    (C38328 + C38329 + C38330) * C280) *
                       C50774 * C22848 +
                   ((C38673 + C38672 + C38671) * C284 -
                    ((C38093 * C3448 + C38090 * C3452 + C38092 * C833 +
                      C51088 * C842 + C38091 * C593 + C51094 * C602) *
                         C278 +
                     (C38093 * C3443 + C38090 * C3449 + C38092 * C818 +
                      C51088 * C834 + C38091 * C587 + C51094 * C592) *
                         C283) +
                    (C38676 + C38675 + C38674) * C279 -
                    (C38093 * C3441 + C38090 * C3445 + C38092 * C816 +
                     C51088 * C830 + C38091 * C589 + C51094 * C596) *
                        C285 -
                    (C38093 * C3444 + C38090 * C3450 + C38092 * C829 +
                     C51088 * C840 + C38091 * C597 + C51094 * C604) *
                        C280) *
                       C50774 * C50930) *
                      C50843 * C50831)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C696 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C50754) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C696 +
                    (C47254 + C47255 + C47256) * C50754) *
                       C50774 * C50930) *
                      C50843 * C692 -
                  (((C47561 + C47562 + C47563) * C50754 +
                    (C47564 + C47565 + C47566) * C696) *
                       C50774 * C50930 +
                   ((C47256 + C47255 + C47254) * C50754 +
                    (C47253 + C47252 + C47251) * C696) *
                       C50774 * C22848) *
                      C50843 * C693 +
                  (((C47566 + C47565 + C47564) * C696 +
                    (C47563 + C47562 + C47561) * C50754) *
                       C50774 * C22848 +
                   ((C47677 + C47678 + C47679) * C696 +
                    (C47680 + C47681 + C47682) * C50754) *
                       C50774 * C50930) *
                      C50843 * C694 -
                  (((C38093 * C11519 + C38090 * C11521 + C38092 * C8795 +
                     C51088 * C8798 + C38091 * C2914 + C51094 * C2918) *
                        C50754 +
                    (C38093 * C11518 + C38090 * C11520 + C38092 * C8792 +
                     C51088 * C8796 + C38091 * C2909 + C51094 * C2915) *
                        C696) *
                       C50774 * C50930 +
                   ((C47682 + C47681 + C47680) * C50754 +
                    (C47679 + C47678 + C47677) * C696) *
                       C50774 * C22848) *
                      C50843 * C695)) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C283 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C278 -
                    (C38131 + C38132 + C38133) * C284 -
                    (C38134 + C38135 + C38136) * C279 +
                    (C38137 + C38138 + C38139) * C285 +
                    (C38140 + C38141 + C38142) * C280) *
                       C50774 * C22848 +
                   ((C47251 + C47252 + C47253) * C283 +
                    (C47254 + C47255 + C47256) * C278 -
                    (C38321 + C38320 + C38319) * C284 -
                    (C38324 + C38323 + C38322) * C279 +
                    (C38327 + C38326 + C38325) * C285 +
                    (C38330 + C38329 + C38328) * C280) *
                       C50774 * C50930) *
                      C51047 +
                  (((C38501 + C38502 + C38503) * C284 -
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C278 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C283) +
                    (C38504 + C38505 + C38506) * C279 -
                    (C38507 + C38508 + C38509) * C285 -
                    (C38510 + C38511 + C38512) * C280) *
                       C50774 * C22848 +
                   ((C39829 + C39828 + C39827) * C284 -
                    ((C38093 * C3570 + C38090 * C3574 + C38092 * C1090 +
                      C51088 * C1095 + C38091 * C820 + C51094 * C835) *
                         C278 +
                     (C38093 * C3565 + C38090 * C3571 + C38092 * C1083 +
                      C51088 * C1091 + C38091 * C811 + C51094 * C819) *
                         C283) +
                    (C39832 + C39831 + C39830) * C279 -
                    (C38093 * C3563 + C38090 * C3567 + C38092 * C1081 +
                     C51088 * C1087 + C38091 * C813 + C51094 * C823) *
                        C285 -
                    (C38093 * C3566 + C38090 * C3572 + C38092 * C1086 +
                     C51088 * C1093 + C38091 * C824 + C51094 * C837) *
                        C280) *
                       C50774 * C50930) *
                      C50855) *
                 C50817) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C50774 * C22848 +
                    ((C47251 + C47252 + C47253) * C696 +
                     (C47254 + C47255 + C47256) * C50754) *
                        C50774 * C50930) *
                       C51047 -
                   (((C47853 + C47854 + C47855) * C50754 +
                     (C47856 + C47857 + C47858) * C696) *
                        C50774 * C50930 +
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C50754 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C696) *
                        C50774 * C22848) *
                       C50855) *
                      C582 +
                  ((((C47858 + C47857 + C47856) * C696 +
                     (C47855 + C47854 + C47853) * C50754) *
                        C50774 * C22848 +
                    ((C47859 + C47860 + C47861) * C696 +
                     (C47862 + C47863 + C47864) * C50754) *
                        C50774 * C50930) *
                       C50855 -
                   (((C47561 + C47562 + C47563) * C50754 +
                     (C47564 + C47565 + C47566) * C696) *
                        C50774 * C50930 +
                    ((C47256 + C47255 + C47254) * C50754 +
                     (C47253 + C47252 + C47251) * C696) *
                        C50774 * C22848) *
                       C51047) *
                      C583 +
                  ((((C47566 + C47565 + C47564) * C696 +
                     (C47563 + C47562 + C47561) * C50754) *
                        C50774 * C22848 +
                    ((C47677 + C47678 + C47679) * C696 +
                     (C47680 + C47681 + C47682) * C50754) *
                        C50774 * C50930) *
                       C51047 -
                   (((C38093 * C11597 + C38090 * C11599 + C38092 * C9122 +
                      C51088 * C9125 + C38091 * C3096 + C51094 * C3100) *
                         C50754 +
                     (C38093 * C11596 + C38090 * C11598 + C38092 * C9119 +
                      C51088 * C9123 + C38091 * C3091 + C51094 * C3097) *
                         C696) *
                        C50774 * C50930 +
                    ((C47864 + C47863 + C47862) * C50754 +
                     (C47861 + C47860 + C47859) * C696) *
                        C50774 * C22848) *
                       C50855) *
                      C584)) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C51038 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C50779) *
               C8043 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C51038 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C50779) *
               C8044 +
           ((C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C51038 +
            (C9395 + C9396 - C9397 - C9398 + C9399 + C9400) * C50779) *
               C8045) *
              C50843 * C1283 +
          (((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C51038 +
            (C3730 - (C3729 + C3728) + C3731 - C3732 - C3733) * C50779) *
               C8043 +
           ((C9391 - (C9390 + C9389) + C9392 - C9393 - C9394) * C51038 +
            (C9397 - (C9396 + C9395) + C9398 - C9399 - C9400) * C50779) *
               C8044 +
           ((C2804 * C1286 - (C2941 * C51089 + C2940 * C1285) + C2805 * C51073 -
             C2806 * C1287 - C2807 * C1282) *
                C51038 +
            (C2806 * C1286 - (C2805 * C51089 + C2804 * C1285) + C2807 * C51073 -
             (C117 * C697 + C50942 * C702) * C1287 -
             (C117 * C701 + C50942 * C709) * C1282) *
                C50779) *
               C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1285 +
            (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
            C172 * C51073 + C173 * C1287 + C174 * C1282) *
               C110 +
           (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
            C175 * C1287 + C176 * C1282) *
               C111 +
           (C173 * C1285 + C174 * C51089 - C175 * C1286 - C176 * C51073 +
            C177 * C1287 + C178 * C1282) *
               C112 +
           (C175 * C1285 + C176 * C51089 - C177 * C1286 - C178 * C51073 +
            C179 * C1287 + C180 * C1282) *
               C113) *
              C50916 * C50843 * C1283 +
          ((C327 * C1286 -
            ((C117 * C293 + C50942 * C304) * C51089 +
             (C117 * C287 + C50942 * C294) * C1285) +
            C328 * C51073 - C329 * C1287 - C330 * C1282) *
               C110 +
           (C329 * C1286 - (C328 * C51089 + C327 * C1285) + C330 * C51073 -
            C331 * C1287 - C332 * C1282) *
               C111 +
           (C331 * C1286 - (C330 * C51089 + C329 * C1285) + C332 * C51073 -
            C333 * C1287 - C334 * C1282) *
               C112 +
           (C333 * C1286 - (C332 * C51089 + C331 * C1285) + C334 * C51073 -
            (C117 * C291 + C50942 * C302) * C1287 -
            (C117 * C303 + C50942 * C309) * C1282) *
               C113) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1285 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51089 -
            (C15546 + C15547 + C15548) * C1286 -
            (C15549 + C15550 + C15551) * C51073 +
            (C15552 + C15553 + C15554) * C1287 +
            (C15555 + C15556 + C15557) * C1282) *
               C51038 +
           ((C15548 + C15547 + C15546) * C1285 +
            (C15551 + C15550 + C15549) * C51089 -
            (C15554 + C15553 + C15552) * C1286 -
            (C15557 + C15556 + C15555) * C51073 +
            (C15560 + C15559 + C15558) * C1287 +
            (C15563 + C15562 + C15561) * C1282) *
               C50779) *
              C50916 * C50843 * C1283 +
          (((C15734 + C15735 + C15736) * C1286 -
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C51089 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C1285) +
            (C15737 + C15738 + C15739) * C51073 -
            (C15740 + C15741 + C15742) * C1287 -
            (C15743 + C15744 + C15745) * C1282) *
               C51038 +
           ((C15742 + C15741 + C15740) * C1286 -
            ((C15739 + C15738 + C15737) * C51089 +
             (C15736 + C15735 + C15734) * C1285) +
            (C15745 + C15744 + C15743) * C51073 -
            (C15508 * C1080 + C15505 * C1085 + C15507 * C814 + C15504 * C825 +
             C15506 * C289 + C15503 * C298) *
                C1287 -
            (C15508 * C1084 + C15505 * C1092 + C15507 * C826 + C15504 * C838 +
             C15506 * C299 + C15503 * C307) *
                C1282) *
               C50779) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C51038 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C3886 + C3887 - C3888 - C3889) * C51038 +
            (C3890 + C3891 - C3892 - C3893) * C50779) *
               C8044 +
           C9563 * C8045) *
              C50843 * C51091 +
          (((C3888 - (C3887 + C3886) + C3889) * C51038 +
            (C3892 - (C3891 + C3890) + C3893) * C50779) *
               C8043 +
           ((C3898 - (C3899 + C3900) + C3901) * C51038 +
            (C3902 - (C3903 + C3904) + C3905) * C50779) *
               C8044 +
           ((C9549 - (C9550 + C9551) + C9552) * C51038 +
            (C9553 - (C9554 + C9555) + C9556) * C50779) *
               C8045) *
              C50843 * C51079 +
          (C9563 * C8043 +
           ((C9551 + C9550 - C9549 - C9552) * C51038 +
            (C9555 + C9554 - C9553 - C9556) * C50779) *
               C8044 +
           ((C8640 * C1391 + C8641 * C1386 - C8513 * C1392 - C8514 * C50759) *
                C51038 +
            (C8513 * C1391 + C8514 * C1386 -
             (C117 * C2907 + C50942 * C2911) * C1392 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C8045) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C110 +
           (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) * C111 +
           (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) * C112 +
           (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
               C113) *
              C50916 * C50843 * C51091 +
          ((C327 * C1392 -
            ((C117 * C293 + C50942 * C304) * C1386 +
             (C117 * C287 + C50942 * C294) * C1391) +
            C328 * C50759) *
               C110 +
           (C329 * C1392 - (C328 * C1386 + C327 * C1391) + C330 * C50759) *
               C111 +
           (C331 * C1392 - (C330 * C1386 + C329 * C1391) + C332 * C50759) *
               C112 +
           (C333 * C1392 - (C332 * C1386 + C331 * C1391) + C334 * C50759) *
               C113) *
              C50916 * C50843 * C51079 +
          (((C117 * C587 + C50942 * C592) * C1391 +
            (C117 * C593 + C50942 * C602) * C1386 - C620 * C1392 -
            C621 * C50759) *
               C110 +
           (C620 * C1391 + C621 * C1386 - C622 * C1392 - C623 * C50759) * C111 +
           (C622 * C1391 + C623 * C1386 - C624 * C1392 - C625 * C50759) * C112 +
           (C624 * C1391 + C625 * C1386 -
            (C117 * C591 + C50942 * C600) * C1392 -
            (C117 * C601 + C50942 * C606) * C50759) *
               C113) *
              C50916 * C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1391 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C1386 -
            (C15546 + C15547 + C15548) * C1392 -
            (C15549 + C15550 + C15551) * C50759) *
               C51038 +
           ((C15548 + C15547 + C15546) * C1391 +
            (C15551 + C15550 + C15549) * C1386 -
            (C15554 + C15553 + C15552) * C1392 -
            (C15557 + C15556 + C15555) * C50759) *
               C50779) *
              C50916 * C50843 * C51091 +
          (((C15734 + C15735 + C15736) * C1392 -
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C1386 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C1391) +
            (C15737 + C15738 + C15739) * C50759) *
               C51038 +
           ((C15742 + C15741 + C15740) * C1392 -
            ((C15739 + C15738 + C15737) * C1386 +
             (C15736 + C15735 + C15734) * C1391) +
            (C15745 + C15744 + C15743) * C50759) *
               C50779) *
              C50916 * C50843 * C51079 +
          (((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
             C15508 * C3443 + C15505 * C3449) *
                C1391 +
            (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
             C15508 * C3448 + C15505 * C3452) *
                C1386 -
            (C16086 + C16087 + C16088) * C1392 -
            (C16089 + C16090 + C16091) * C50759) *
               C51038 +
           ((C16088 + C16087 + C16086) * C1391 +
            (C16091 + C16090 + C16089) * C1386 -
            (C15508 * C3441 + C15505 * C3445 + C15507 * C816 + C15504 * C830 +
             C15506 * C589 + C15503 * C596) *
                C1392 -
            (C15508 * C3444 + C15505 * C3450 + C15507 * C829 + C15504 * C840 +
             C15506 * C597 + C15503 * C604) *
                C50759) *
               C50779) *
              C50916 * C50843 * C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C51038 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C50779) *
                C8043 +
            ((C3886 + C3887 - C3888 - C3889) * C51038 +
             (C3890 + C3891 - C3892 - C3893) * C50779) *
                C8044 +
            C9563 * C8045) *
               C51047 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C51038 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C50779) *
                C8043 +
            ((C4104 - (C4105 + C4106) + C4107) * C51038 +
             (C4108 - (C4109 + C4110) + C4111) * C50779) *
                C8044 +
            ((C9758 - (C9759 + C9760) + C9761) * C51038 +
             (C9762 - (C9763 + C9764) + C9765) * C50779) *
                C8045) *
               C50855) *
              C1283 +
          ((((C3888 - (C3887 + C3886) + C3889) * C51038 +
             (C3892 - (C3891 + C3890) + C3893) * C50779) *
                C8043 +
            ((C3898 - (C3899 + C3900) + C3901) * C51038 +
             (C3902 - (C3903 + C3904) + C3905) * C50779) *
                C8044 +
            ((C9549 - (C9550 + C9551) + C9552) * C51038 +
             (C9553 - (C9554 + C9555) + C9556) * C50779) *
                C8045) *
               C51047 +
           (((C4106 + C4105 - C4104 - C4107) * C51038 +
             (C4110 + C4109 - C4108 - C4111) * C50779) *
                C8043 +
            ((C9760 + C9759 - C9758 - C9761) * C51038 +
             (C9764 + C9763 - C9762 - C9765) * C50779) *
                C8044 +
            ((C8812 * C1391 + C8813 * C1386 - C8814 * C1392 - C8815 * C50759) *
                 C51038 +
             (C8814 * C1391 + C8815 * C1386 -
              (C117 * C3089 + C50942 * C3093) * C1392 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C110 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C111 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C112 +
            (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
                C113) *
               C50916 * C51047 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C110 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C111 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C112 +
            (C481 * C1392 - (C480 * C1386 + C479 * C1391) + C482 * C50759) *
                C113) *
               C50916 * C50855) *
              C1283 +
          (((C327 * C1392 -
             ((C117 * C293 + C50942 * C304) * C1386 +
              (C117 * C287 + C50942 * C294) * C1391) +
             C328 * C50759) *
                C110 +
            (C329 * C1392 - (C328 * C1386 + C327 * C1391) + C330 * C50759) *
                C111 +
            (C331 * C1392 - (C330 * C1386 + C329 * C1391) + C332 * C50759) *
                C112 +
            (C333 * C1392 - (C332 * C1386 + C331 * C1391) + C334 * C50759) *
                C113) *
               C50916 * C51047 +
           (((C117 * C811 + C50942 * C819) * C1391 +
             (C117 * C820 + C50942 * C835) * C1386 - C1540 * C1392 -
             C1541 * C50759) *
                C110 +
            (C1540 * C1391 + C1541 * C1386 - C1542 * C1392 - C1543 * C50759) *
                C111 +
            (C1542 * C1391 + C1543 * C1386 - C1544 * C1392 - C1545 * C50759) *
                C112 +
            (C1544 * C1391 + C1545 * C1386 -
             (C117 * C1523 + C50942 * C1524) * C1392 -
             (C117 * C1525 + C50942 * C1526) * C50759) *
                C113) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C1391 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C1386 -
             (C15546 + C15547 + C15548) * C1392 -
             (C15549 + C15550 + C15551) * C50759) *
                C51038 +
            ((C15548 + C15547 + C15546) * C1391 +
             (C15551 + C15550 + C15549) * C1386 -
             (C15554 + C15553 + C15552) * C1392 -
             (C15557 + C15556 + C15555) * C50759) *
                C50779) *
               C50916 * C51047 +
           (((C15916 + C15917 + C15918) * C1392 -
             ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
               C15506 * C441 + C15503 * C452) *
                  C1386 +
              (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
               C15506 * C435 + C15503 * C442) *
                  C1391) +
             (C15919 + C15920 + C15921) * C50759) *
                C51038 +
            ((C15924 + C15923 + C15922) * C1392 -
             ((C15921 + C15920 + C15919) * C1386 +
              (C15918 + C15917 + C15916) * C1391) +
             (C15927 + C15926 + C15925) * C50759) *
                C50779) *
               C50916 * C50855) *
              C1283 +
          ((((C15734 + C15735 + C15736) * C1392 -
             ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
               C15506 * C293 + C15503 * C304) *
                  C1386 +
              (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
               C15506 * C287 + C15503 * C294) *
                  C1391) +
             (C15737 + C15738 + C15739) * C50759) *
                C51038 +
            ((C15742 + C15741 + C15740) * C1392 -
             ((C15739 + C15738 + C15737) * C1386 +
              (C15736 + C15735 + C15734) * C1391) +
             (C15745 + C15744 + C15743) * C50759) *
                C50779) *
               C50916 * C51047 +
           (((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C1391 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C1386 -
             (C17254 + C17255 + C17256) * C1392 -
             (C17257 + C17258 + C17259) * C50759) *
                C51038 +
            ((C17256 + C17255 + C17254) * C1391 +
             (C17259 + C17258 + C17257) * C1386 -
             (C15508 * C3563 + C15505 * C3567 + C15507 * C1081 +
              C15504 * C1087 + C15506 * C813 + C15503 * C823) *
                 C1392 -
             (C15508 * C3566 + C15505 * C3572 + C15507 * C1086 +
              C15504 * C1093 + C15506 * C824 + C15503 * C837) *
                 C50759) *
                C50779) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C49770 +
              (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
              C172 * C50759) *
                 C51038 +
             (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                 C50779) *
                C8043 +
            ((C2768 + C2769 - C2770 - C2771) * C51038 +
             (C2772 + C2773 - C2774 - C2775) * C50779) *
                C8044 +
            C8519 * C8045) *
               C1643 +
           (((C475 * C49763 -
              ((C117 * C441 + C50942 * C452) * C51031 +
               (C117 * C435 + C50942 * C442) * C49770) +
              C476 * C50759) *
                 C51038 +
             (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                 C50779) *
                C8043 +
            ((C4796 - (C4797 + C4798) + C4799) * C51038 +
             (C4800 - (C4801 + C4802) + C4803) * C50779) *
                C8044 +
            ((C10446 - (C10447 + C10448) + C10449) * C51038 +
             (C10450 - (C10451 + C10452) + C10453) * C50779) *
                C8045) *
               C50855) *
              C1283 +
          ((((C2770 - (C2769 + C2768) + C2771) * C51038 +
             (C2774 - (C2773 + C2772) + C2775) * C50779) *
                C8043 +
            ((C2780 - (C2808 + C2809) + C2785) * C51038 +
             (C2786 - (C2787 + C2788) + C2789) * C50779) *
                C8044 +
            ((C8499 - (C8500 + C8501) + C8502) * C51038 +
             (C8503 - (C8504 + C8505) + C8506) * C50779) *
                C8045) *
               C1643 +
           (((C4798 + C4797 - C4796 - C4799) * C51038 +
             (C4802 + C4801 - C4800 - C4803) * C50779) *
                C8043 +
            ((C10448 + C10447 - C10446 - C10449) * C51038 +
             (C10452 + C10451 - C10450 - C10453) * C50779) *
                C8044 +
            ((C8812 * C49770 + C8813 * C51031 - C8814 * C49763 -
              C8815 * C50759) *
                 C51038 +
             (C8814 * C49770 + C8815 * C51031 -
              (C117 * C3089 + C50942 * C3093) * C49763 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C110 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C111 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C112 +
            (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
                C113) *
               C50916 * C1643 +
           ((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C110 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C111 +
            (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                C112 +
            (C481 * C49763 - (C480 * C51031 + C479 * C49770) + C482 * C50759) *
                C113) *
               C50916 * C50855) *
              C1283 +
          (((C327 * C49763 -
             ((C117 * C293 + C50942 * C304) * C51031 +
              (C117 * C287 + C50942 * C294) * C49770) +
             C328 * C50759) *
                C110 +
            (C329 * C49763 - (C328 * C51031 + C327 * C49770) + C330 * C50759) *
                C111 +
            (C331 * C49763 - (C330 * C51031 + C329 * C49770) + C332 * C50759) *
                C112 +
            (C333 * C49763 - (C332 * C51031 + C331 * C49770) + C334 * C50759) *
                C113) *
               C50916 * C1643 +
           (((C117 * C811 + C50942 * C819) * C49770 +
             (C117 * C820 + C50942 * C835) * C51031 - C1540 * C49763 -
             C1541 * C50759) *
                C110 +
            (C1540 * C49770 + C1541 * C51031 - C1542 * C49763 -
             C1543 * C50759) *
                C111 +
            (C1542 * C49770 + C1543 * C51031 - C1544 * C49763 -
             C1545 * C50759) *
                C112 +
            (C1544 * C49770 + C1545 * C51031 -
             (C117 * C1523 + C50942 * C1524) * C49763 -
             (C117 * C1525 + C50942 * C1526) * C50759) *
                C113) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C49770 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C51031 -
             (C15546 + C15547 + C15548) * C49763 -
             (C15549 + C15550 + C15551) * C50759) *
                C51038 +
            ((C15548 + C15547 + C15546) * C49770 +
             (C15551 + C15550 + C15549) * C51031 -
             (C15554 + C15553 + C15552) * C49763 -
             (C15557 + C15556 + C15555) * C50759) *
                C50779) *
               C50916 * C1643 +
           (((C15916 + C15917 + C15918) * C49763 -
             ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
               C15506 * C441 + C15503 * C452) *
                  C51031 +
              (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
               C15506 * C435 + C15503 * C442) *
                  C49770) +
             (C15919 + C15920 + C15921) * C50759) *
                C51038 +
            ((C15924 + C15923 + C15922) * C49763 -
             ((C15921 + C15920 + C15919) * C51031 +
              (C15918 + C15917 + C15916) * C49770) +
             (C15927 + C15926 + C15925) * C50759) *
                C50779) *
               C50916 * C50855) *
              C1283 +
          ((((C15734 + C15735 + C15736) * C49763 -
             ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
               C15506 * C293 + C15503 * C304) *
                  C51031 +
              (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
               C15506 * C287 + C15503 * C294) *
                  C49770) +
             (C15737 + C15738 + C15739) * C50759) *
                C51038 +
            ((C15742 + C15741 + C15740) * C49763 -
             ((C15739 + C15738 + C15737) * C51031 +
              (C15736 + C15735 + C15734) * C49770) +
             (C15745 + C15744 + C15743) * C50759) *
                C50779) *
               C50916 * C1643 +
           (((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C49770 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C51031 -
             (C17254 + C17255 + C17256) * C49763 -
             (C17257 + C17258 + C17259) * C50759) *
                C51038 +
            ((C17256 + C17255 + C17254) * C49770 +
             (C17259 + C17258 + C17257) * C51031 -
             (C15508 * C3563 + C15505 * C3567 + C15507 * C1081 +
              C15504 * C1087 + C15506 * C813 + C15503 * C823) *
                 C49763 -
             (C15508 * C3566 + C15505 * C3572 + C15507 * C1086 +
              C15504 * C1093 + C15506 * C824 + C15503 * C837) *
                 C50759) *
                C50779) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C1643 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C50855) *
              C51091 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C50855 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C1643) *
              C51079 +
          ((C8642 * C8043 +
            ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
            ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
               C1643 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             ((C117 * C8795 + C50942 * C8798) * C50754 +
              (C117 * C8792 + C50942 * C8796) * C696) *
                 C51038) *
                C8045 +
            ((C8820 + C8819) * C50779 + (C8818 + C8817) * C51038) * C8044 +
            C8816 * C8043) *
               C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C1643 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C50855) *
              C51091 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            (C1540 * C696 + C1541 * C50754) * C111 +
            (C1542 * C696 + C1543 * C50754) * C112 +
            (C1544 * C696 + C1545 * C50754) * C113) *
               C50916 * C50855 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C1643) *
              C51079 +
          ((((C117 * C587 + C50942 * C592) * C696 +
             (C117 * C593 + C50942 * C602) * C50754) *
                C110 +
            (C620 * C696 + C621 * C50754) * C111 +
            (C622 * C696 + C623 * C50754) * C112 +
            (C624 * C696 + C625 * C50754) * C113) *
               C50916 * C1643 -
           (((C117 * C827 + C50942 * C839) * C50754 +
             (C117 * C815 + C50942 * C828) * C696) *
                C113 +
            ((C117 * C829 + C50942 * C840) * C50754 +
             (C117 * C816 + C50942 * C830) * C696) *
                C112 +
            ((C117 * C831 + C50942 * C841) * C50754 +
             (C117 * C817 + C50942 * C832) * C696) *
                C111 +
            ((C117 * C833 + C50942 * C842) * C50754 +
             (C117 * C818 + C50942 * C834) * C696) *
                C110) *
               C50916 * C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C51038 +
            ((C15548 + C15547 + C15546) * C696 +
             (C15551 + C15550 + C15549) * C50754) *
                C50779) *
               C50916 * C1643 -
           (((C15921 + C15920 + C15919) * C50754 +
             (C15918 + C15917 + C15916) * C696) *
                C50779 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C51038) *
               C50916 * C50855) *
              C51091 +
          ((((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C696 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C50754) *
                C51038 +
            ((C17256 + C17255 + C17254) * C696 +
             (C17259 + C17258 + C17257) * C50754) *
                C50779) *
               C50916 * C50855 -
           (((C15739 + C15738 + C15737) * C50754 +
             (C15736 + C15735 + C15734) * C696) *
                C50779 +
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C50754 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C696) *
                C51038) *
               C50916 * C1643) *
              C51079 +
          ((((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
              C15508 * C3443 + C15505 * C3449) *
                 C696 +
             (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
              C15508 * C3448 + C15505 * C3452) *
                 C50754) *
                C51038 +
            ((C16088 + C16087 + C16086) * C696 +
             (C16091 + C16090 + C16089) * C50754) *
                C50779) *
               C50916 * C1643 -
           (((C15508 * C9236 + C15505 * C9240 + C15507 * C3446 +
              C15504 * C3451 + C15506 * C831 + C15503 * C841) *
                 C50754 +
             (C15508 * C9234 + C15505 * C9237 + C15507 * C3442 +
              C15504 * C3447 + C15506 * C817 + C15503 * C832) *
                 C696) *
                C50779 +
            ((C15508 * C9238 + C15505 * C9241 + C15507 * C3448 +
              C15504 * C3452 + C15506 * C833 + C15503 * C842) *
                 C50754 +
             (C15508 * C9235 + C15505 * C9239 + C15507 * C3443 +
              C15504 * C3449 + C15506 * C818 + C15503 * C834) *
                 C696) *
                C51038) *
               C50916 * C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C51092 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C51082 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C51038 +
             (C977 * C696 + C978 * C50754) * C50779) *
                C8043 +
            ((C3464 + C3465) * C51038 + (C3458 + C3459) * C50779) * C8044 +
            ((C9135 + C9136) * C51038 + (C9131 + C9132) * C50779) * C8045) *
               C1875) *
              C1283 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C51082 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C51092 -
           ((((C117 * C9120 + C50942 * C9124) * C50754 +
              (C117 * C9118 + C50942 * C9121) * C696) *
                 C50779 +
             ((C117 * C9122 + C50942 * C9125) * C50754 +
              (C117 * C9119 + C50942 * C9123) * C696) *
                 C51038) *
                C8045 +
            ((C9132 + C9131) * C50779 + (C9136 + C9135) * C51038) * C8044 +
            ((C3459 + C3458) * C50779 + (C3465 + C3464) * C51038) * C8043) *
               C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C51092 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C51082 +
           (((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C110 +
            (C977 * C696 + C978 * C50754) * C111 +
            (C979 * C696 + C980 * C50754) * C112 +
            (C981 * C696 + C982 * C50754) * C113) *
               C50916 * C1875) *
              C1283 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            (C1540 * C696 + C1541 * C50754) * C111 +
            (C1542 * C696 + C1543 * C50754) * C112 +
            (C1544 * C696 + C1545 * C50754) * C113) *
               C50916 * C51082 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C51092 -
           (((C117 * C1084 + C50942 * C1092) * C50754 +
             (C117 * C1080 + C50942 * C1085) * C696) *
                C113 +
            ((C117 * C1086 + C50942 * C1093) * C50754 +
             (C117 * C1081 + C50942 * C1087) * C696) *
                C112 +
            ((C117 * C1088 + C50942 * C1094) * C50754 +
             (C117 * C1082 + C50942 * C1089) * C696) *
                C111 +
            ((C117 * C1090 + C50942 * C1095) * C50754 +
             (C117 * C1083 + C50942 * C1091) * C696) *
                C110) *
               C50916 * C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C51038 +
            ((C15548 + C15547 + C15546) * C696 +
             (C15551 + C15550 + C15549) * C50754) *
                C50779) *
               C50916 * C51092 -
           (((C15921 + C15920 + C15919) * C50754 +
             (C15918 + C15917 + C15916) * C696) *
                C50779 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C51038) *
               C50916 * C51082 +
           (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
              C15508 * C6451 + C15505 * C6457) *
                 C696 +
             (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
              C15508 * C6456 + C15505 * C6460) *
                 C50754) *
                C51038 +
            ((C16496 + C16495 + C16494) * C696 +
             (C16499 + C16498 + C16497) * C50754) *
                C50779) *
               C50916 * C1875) *
              C1283 +
          ((((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C696 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C50754) *
                C51038 +
            ((C17256 + C17255 + C17254) * C696 +
             (C17259 + C17258 + C17257) * C50754) *
                C50779) *
               C50916 * C51082 -
           (((C15739 + C15738 + C15737) * C50754 +
             (C15736 + C15735 + C15734) * C696) *
                C50779 +
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C50754 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C696) *
                C51038) *
               C50916 * C51092 -
           (((C15508 * C16646 + C15505 * C16648 + C15507 * C3568 +
              C15504 * C3573 + C15506 * C1088 + C15503 * C1094) *
                 C50754 +
             (C15508 * C16645 + C15505 * C16647 + C15507 * C3564 +
              C15504 * C3569 + C15506 * C1082 + C15503 * C1089) *
                 C696) *
                C50779 +
            ((C15508 * C13923 + C15505 * C13926 + C15507 * C3570 +
              C15504 * C3574 + C15506 * C1090 + C15503 * C1095) *
                 C50754 +
             (C15508 * C13920 + C15505 * C13924 + C15507 * C3565 +
              C15504 * C3571 + C15506 * C1083 + C15503 * C1091) *
                 C696) *
                C51038) *
               C50916 * C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50942 * C129) * C118 +
               (C117 * C130 + C50942 * C143) * C106 - C171 * C119 -
               C172 * C107 + C173 * C120 + C174 * C108 - C175 * C121 -
               C176 * C109) *
                  C110 +
              (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
               C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
                  C111 +
              (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
               C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
                  C112 +
              (C175 * C118 + C176 * C106 - C177 * C119 - C178 * C107 +
               C179 * C120 + C180 * C108 -
               (C117 * C128 + C50942 * C141) * C121 -
               (C117 * C142 + C50942 * C149) * C109) *
                  C113) *
             C50916 * C50843 * C50817 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50942 * C129) * C49770 +
                (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
                C172 * C50759) *
                   C110 +
               (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                   C111 +
               (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                   C112 +
               (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
                   C113) *
                  C50916 * C50843 * C582 +
              ((C327 * C49763 -
                ((C117 * C293 + C50942 * C304) * C51031 +
                 (C117 * C287 + C50942 * C294) * C49770) +
                C328 * C50759) *
                   C110 +
               (C329 * C49763 - (C328 * C51031 + C327 * C49770) +
                C330 * C50759) *
                   C111 +
               (C331 * C49763 - (C330 * C51031 + C329 * C49770) +
                C332 * C50759) *
                   C112 +
               (C333 * C49763 - (C332 * C51031 + C331 * C49770) +
                C334 * C50759) *
                   C113) *
                  C50916 * C50843 * C583 +
              (((C117 * C587 + C50942 * C592) * C49770 +
                (C117 * C593 + C50942 * C602) * C51031 - C620 * C49763 -
                C621 * C50759) *
                   C110 +
               (C620 * C49770 + C621 * C51031 - C622 * C49763 - C623 * C50759) *
                   C111 +
               (C622 * C49770 + C623 * C51031 - C624 * C49763 - C625 * C50759) *
                   C112 +
               (C624 * C49770 + C625 * C51031 -
                (C117 * C591 + C50942 * C600) * C49763 -
                (C117 * C601 + C50942 * C606) * C50759) *
                   C113) *
                  C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C110 +
           (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
               C111 +
           (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
               C112 +
           (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
               C113) *
              C50916 * C941 +
          ((C475 * C49763 -
            ((C117 * C441 + C50942 * C452) * C51031 +
             (C117 * C435 + C50942 * C442) * C49770) +
            C476 * C50759) *
               C110 +
           (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
               C111 +
           (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
               C112 +
           (C481 * C49763 - (C480 * C51031 + C479 * C49770) + C482 * C50759) *
               C113) *
              C50916 * C942 +
          (((C117 * C944 + C50942 * C949) * C49770 +
            (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
            C978 * C50759) *
               C110 +
           (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
               C111 +
           (C979 * C49770 + C980 * C51031 - C981 * C49763 - C982 * C50759) *
               C112 +
           (C981 * C49770 + C982 * C51031 -
            (C117 * C948 + C50942 * C957) * C49763 -
            (C117 * C958 + C50942 * C963) * C50759) *
               C113) *
              C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C51038 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C50779) *
              C8043 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C51038 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C50779) *
              C8044 +
          ((C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
            C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
               C51038 +
           (C620 * C118 + C621 * C106 - C622 * C119 - C623 * C107 +
            C624 * C120 + C625 * C108 - (C117 * C591 + C50942 * C600) * C121 -
            (C117 * C601 + C50942 * C606) * C109) *
               C50779) *
              C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51038 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C2768 + C2769 - C2770 - C2771) * C51038 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C8044 +
           C8519 * C8045) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C51038 +
            (C2774 - (C2773 + C2772) + C2775) * C50779) *
               C8043 +
           ((C2780 - (C2808 + C2809) + C2785) * C51038 +
            (C2786 - (C2787 + C2788) + C2789) * C50779) *
               C8044 +
           ((C8499 - (C8500 + C8501) + C8502) * C51038 +
            (C8503 - (C8504 + C8505) + C8506) * C50779) *
               C8045) *
              C50843 * C583 +
          (C8519 * C8043 +
           ((C8501 + C8500 - C8499 - C8502) * C51038 +
            (C8505 + C8504 - C8503 - C8506) * C50779) *
               C8044 +
           (((C117 * C2909 + C50942 * C2915) * C49770 +
             (C117 * C2914 + C50942 * C2918) * C51031 - C8513 * C49763 -
             C8514 * C50759) *
                C51038 +
            (C8513 * C49770 + C8514 * C51031 -
             (C117 * C2907 + C50942 * C2911) * C49763 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51038 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C2768 + C2769 - C2770 - C2771) * C51038 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C8044 +
           C8519 * C8045) *
              C941 +
          (((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C51038 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C50779) *
               C8043 +
           ((C4796 - (C4797 + C4798) + C4799) * C51038 +
            (C4800 - (C4801 + C4802) + C4803) * C50779) *
               C8044 +
           ((C3126 * C49763 - (C3125 * C51031 + C3124 * C49770) +
             C3127 * C50759) *
                C51038 +
            (C3128 * C49763 - (C3127 * C51031 + C3126 * C49770) +
             C3129 * C50759) *
                C50779) *
               C8045) *
              C942 +
          ((((C117 * C944 + C50942 * C949) * C49770 +
             (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
             C978 * C50759) *
                C51038 +
            (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
                C50779) *
               C8043 +
           ((C3462 * C49770 + C3463 * C51031 - C3292 * C49763 -
             C3293 * C50759) *
                C51038 +
            (C3292 * C49770 + C3293 * C51031 - C3294 * C49763 -
             C3295 * C50759) *
                C50779) *
               C8044 +
           (((C117 * C3443 + C50942 * C3449) * C49770 +
             (C117 * C3448 + C50942 * C3452) * C51031 - C8971 * C49763 -
             C8972 * C50759) *
                C51038 +
            (C8971 * C49770 + C8972 * C51031 -
             (C117 * C3441 + C50942 * C3445) * C49763 -
             (C117 * C3444 + C50942 * C3450) * C50759) *
                C50779) *
               C8045) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
            C15508 * C944 + C15505 * C949) *
               C118 +
           (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
            C15508 * C950 + C15505 * C959) *
               C106 -
           (C15546 + C15547 + C15548) * C119 -
           (C15549 + C15550 + C15551) * C107 +
           (C15552 + C15553 + C15554) * C120 +
           (C15555 + C15556 + C15557) * C108 -
           (C15558 + C15559 + C15560) * C121 -
           (C15561 + C15562 + C15563) * C109) *
              C51038 +
          ((C15548 + C15547 + C15546) * C118 +
           (C15551 + C15550 + C15549) * C106 -
           (C15554 + C15553 + C15552) * C119 -
           (C15557 + C15556 + C15555) * C107 +
           (C15560 + C15559 + C15558) * C120 +
           (C15563 + C15562 + C15561) * C108 -
           (C15508 * C948 + C15505 * C957 + C15507 * C438 + C15504 * C448 +
            C15506 * C126 + C15503 * C137) *
               C121 -
           (C15508 * C958 + C15505 * C963 + C15507 * C449 + C15504 * C456 +
            C15506 * C138 + C15503 * C147) *
               C109) *
              C50779) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C49770 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51031 -
            (C15546 + C15547 + C15548) * C49763 -
            (C15549 + C15550 + C15551) * C50759) *
               C51038 +
           ((C15548 + C15547 + C15546) * C49770 +
            (C15551 + C15550 + C15549) * C51031 -
            (C15554 + C15553 + C15552) * C49763 -
            (C15557 + C15556 + C15555) * C50759) *
               C50779) *
              C50916 * C50843 * C582 +
          (((C15734 + C15735 + C15736) * C49763 -
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C51031 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C49770) +
            (C15737 + C15738 + C15739) * C50759) *
               C51038 +
           ((C15742 + C15741 + C15740) * C49763 -
            ((C15739 + C15738 + C15737) * C51031 +
             (C15736 + C15735 + C15734) * C49770) +
            (C15745 + C15744 + C15743) * C50759) *
               C50779) *
              C50916 * C50843 * C583 +
          (((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
             C15508 * C3443 + C15505 * C3449) *
                C49770 +
            (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
             C15508 * C3448 + C15505 * C3452) *
                C51031 -
            (C16086 + C16087 + C16088) * C49763 -
            (C16089 + C16090 + C16091) * C50759) *
               C51038 +
           ((C16088 + C16087 + C16086) * C49770 +
            (C16091 + C16090 + C16089) * C51031 -
            (C15508 * C3441 + C15505 * C3445 + C15507 * C816 + C15504 * C830 +
             C15506 * C589 + C15503 * C596) *
                C49763 -
            (C15508 * C3444 + C15505 * C3450 + C15507 * C829 + C15504 * C840 +
             C15506 * C597 + C15503 * C604) *
                C50759) *
               C50779) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C49770 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51031 -
            (C15546 + C15547 + C15548) * C49763 -
            (C15549 + C15550 + C15551) * C50759) *
               C51038 +
           ((C15548 + C15547 + C15546) * C49770 +
            (C15551 + C15550 + C15549) * C51031 -
            (C15554 + C15553 + C15552) * C49763 -
            (C15557 + C15556 + C15555) * C50759) *
               C50779) *
              C50916 * C941 +
          (((C15916 + C15917 + C15918) * C49763 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C51031 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C49770) +
            (C15919 + C15920 + C15921) * C50759) *
               C51038 +
           ((C15924 + C15923 + C15922) * C49763 -
            ((C15921 + C15920 + C15919) * C51031 +
             (C15918 + C15917 + C15916) * C49770) +
            (C15927 + C15926 + C15925) * C50759) *
               C50779) *
              C50916 * C942 +
          (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
             C15508 * C6451 + C15505 * C6457) *
                C49770 +
            (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
             C15508 * C6456 + C15505 * C6460) *
                C51031 -
            (C16494 + C16495 + C16496) * C49763 -
            (C16497 + C16498 + C16499) * C50759) *
               C51038 +
           ((C16496 + C16495 + C16494) * C49770 +
            (C16499 + C16498 + C16497) * C51031 -
            (C15508 * C6449 + C15505 * C6453 + C15507 * C1167 + C15504 * C1173 +
             C15506 * C946 + C15503 * C953) *
                C49763 -
            (C15508 * C6452 + C15505 * C6458 + C15507 * C1172 + C15504 * C1179 +
             C15506 * C954 + C15503 * C961) *
                C50759) *
               C50779) *
              C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50942 * C129) * C283 +
                (C117 * C130 + C50942 * C143) * C278 - C171 * C284 -
                C172 * C279 + C173 * C285 + C174 * C280) *
                   C110 +
               (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
                C175 * C285 + C176 * C280) *
                   C111 +
               (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
                C177 * C285 + C178 * C280) *
                   C112 +
               (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
                C179 * C285 + C180 * C280) *
                   C113) *
                  C50916 * C50843 * C51046 +
              ((C327 * C284 -
                ((C117 * C293 + C50942 * C304) * C278 +
                 (C117 * C287 + C50942 * C294) * C283) +
                C328 * C279 - C329 * C285 - C330 * C280) *
                   C110 +
               (C329 * C284 - (C328 * C278 + C327 * C283) + C330 * C279 -
                C331 * C285 - C332 * C280) *
                   C111 +
               (C331 * C284 - (C330 * C278 + C329 * C283) + C332 * C279 -
                C333 * C285 - C334 * C280) *
                   C112 +
               (C333 * C284 - (C332 * C278 + C331 * C283) + C334 * C279 -
                (C117 * C291 + C50942 * C302) * C285 -
                (C117 * C303 + C50942 * C309) * C280) *
                   C113) *
                  C50916 * C50843 * C50831) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50942 * C129) * C696 +
                (C117 * C130 + C50942 * C143) * C50754) *
                   C110 +
               (C171 * C696 + C172 * C50754) * C111 +
               (C173 * C696 + C174 * C50754) * C112 +
               (C175 * C696 + C176 * C50754) * C113) *
                  C50916 * C50843 * C692 -
              ((C332 * C50754 + C331 * C696) * C113 +
               (C330 * C50754 + C329 * C696) * C112 +
               (C328 * C50754 + C327 * C696) * C111 +
               ((C117 * C293 + C50942 * C304) * C50754 +
                (C117 * C287 + C50942 * C294) * C696) *
                   C110) *
                  C50916 * C50843 * C693 +
              (((C117 * C587 + C50942 * C592) * C696 +
                (C117 * C593 + C50942 * C602) * C50754) *
                   C110 +
               (C620 * C696 + C621 * C50754) * C111 +
               (C622 * C696 + C623 * C50754) * C112 +
               (C624 * C696 + C625 * C50754) * C113) *
                  C50916 * C50843 * C694 -
              (((C117 * C701 + C50942 * C709) * C50754 +
                (C117 * C697 + C50942 * C702) * C696) *
                   C113 +
               ((C117 * C703 + C50942 * C710) * C50754 +
                (C117 * C698 + C50942 * C704) * C696) *
                   C112 +
               ((C117 * C705 + C50942 * C711) * C50754 +
                (C117 * C699 + C50942 * C706) * C696) *
                   C111 +
               ((C117 * C707 + C50942 * C712) * C50754 +
                (C117 * C700 + C50942 * C708) * C696) *
                   C110) *
                  C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C117 * C122 + C50942 * C129) * C696 +
                                 (C117 * C130 + C50942 * C143) * C50754) *
                                    C110 +
                                (C171 * C696 + C172 * C50754) * C111 +
                                (C173 * C696 + C174 * C50754) * C112 +
                                (C175 * C696 + C176 * C50754) * C113) *
                                   C50916 * C941 -
                               ((C480 * C50754 + C479 * C696) * C113 +
                                (C478 * C50754 + C477 * C696) * C112 +
                                (C476 * C50754 + C475 * C696) * C111 +
                                ((C117 * C441 + C50942 * C452) * C50754 +
                                 (C117 * C435 + C50942 * C442) * C696) *
                                    C110) *
                                   C50916 * C942 +
                               (((C117 * C944 + C50942 * C949) * C696 +
                                 (C117 * C950 + C50942 * C959) * C50754) *
                                    C110 +
                                (C977 * C696 + C978 * C50754) * C111 +
                                (C979 * C696 + C980 * C50754) * C112 +
                                (C981 * C696 + C982 * C50754) * C113) *
                                   C50916 * C943) *
                                  C51046 +
                              ((((C117 * C811 + C50942 * C819) * C696 +
                                 (C117 * C820 + C50942 * C835) * C50754) *
                                    C110 +
                                ((C117 * C812 + C50942 * C821) * C696 +
                                 (C117 * C822 + C50942 * C836) * C50754) *
                                    C111 +
                                ((C117 * C813 + C50942 * C823) * C696 +
                                 (C117 * C824 + C50942 * C837) * C50754) *
                                    C112 +
                                ((C117 * C814 + C50942 * C825) * C696 +
                                 (C117 * C826 + C50942 * C838) * C50754) *
                                    C113) *
                                   C50916 * C942 -
                               ((C332 * C50754 + C331 * C696) * C113 +
                                (C330 * C50754 + C329 * C696) * C112 +
                                (C328 * C50754 + C327 * C696) * C111 +
                                ((C117 * C293 + C50942 * C304) * C50754 +
                                 (C117 * C287 + C50942 * C294) * C696) *
                                    C110) *
                                   C50916 * C941 -
                               (((C117 * C1084 + C50942 * C1092) * C50754 +
                                 (C117 * C1080 + C50942 * C1085) * C696) *
                                    C113 +
                                ((C117 * C1086 + C50942 * C1093) * C50754 +
                                 (C117 * C1081 + C50942 * C1087) * C696) *
                                    C112 +
                                ((C117 * C1088 + C50942 * C1094) * C50754 +
                                 (C117 * C1082 + C50942 * C1089) * C696) *
                                    C111 +
                                ((C117 * C1090 + C50942 * C1095) * C50754 +
                                 (C117 * C1083 + C50942 * C1091) * C696) *
                                    C110) *
                                   C50916 * C943) *
                                  C50831)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C51038 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C50779) *
               C8043 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C51038 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C50779) *
               C8044 +
           ((C2804 * C284 - (C2941 * C278 + C2940 * C283) + C2805 * C279 -
             C2806 * C285 - C2807 * C280) *
                C51038 +
            (C2806 * C284 - (C2805 * C278 + C2804 * C283) + C2807 * C279 -
             (C117 * C697 + C50942 * C702) * C285 -
             (C117 * C701 + C50942 * C709) * C280) *
                C50779) *
               C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51038 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C8043 +
           ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
           C8642 * C8045) *
              C50843 * C692 -
          (C8643 * C8045 +
           ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
           ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
              C50843 * C693 +
          (C8642 * C8043 +
           ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
           ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
              C50843 * C694 -
          ((((C117 * C8619 + C50942 * C8623) * C50754 +
             (C117 * C8617 + C50942 * C8620) * C696) *
                C50779 +
            ((C117 * C8621 + C50942 * C8624) * C50754 +
             (C117 * C8618 + C50942 * C8622) * C696) *
                C51038) *
               C8045 +
           ((C8635 + C8634) * C50779 + (C8645 + C8644) * C51038) * C8044 +
           C8643 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C941 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C942 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C51038 +
             (C977 * C696 + C978 * C50754) * C50779) *
                C8043 +
            ((C3464 + C3465) * C51038 + (C3458 + C3459) * C50779) * C8044 +
            ((C9135 + C9136) * C51038 + (C9131 + C9132) * C50779) * C8045) *
               C943) *
              C51046 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C942 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C941 -
           ((((C117 * C9120 + C50942 * C9124) * C50754 +
              (C117 * C9118 + C50942 * C9121) * C696) *
                 C50779 +
             ((C117 * C9122 + C50942 * C9125) * C50754 +
              (C117 * C9119 + C50942 * C9123) * C696) *
                 C51038) *
                C8045 +
            ((C9132 + C9131) * C50779 + (C9136 + C9135) * C51038) * C8044 +
            ((C3459 + C3458) * C50779 + (C3465 + C3464) * C51038) * C8043) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C51038 +
           ((C15548 + C15547 + C15546) * C283 +
            (C15551 + C15550 + C15549) * C278 -
            (C15554 + C15553 + C15552) * C284 -
            (C15557 + C15556 + C15555) * C279 +
            (C15560 + C15559 + C15558) * C285 +
            (C15563 + C15562 + C15561) * C280) *
               C50779) *
              C50916 * C50843 * C51046 +
          (((C15734 + C15735 + C15736) * C284 -
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C278 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C283) +
            (C15737 + C15738 + C15739) * C279 -
            (C15740 + C15741 + C15742) * C285 -
            (C15743 + C15744 + C15745) * C280) *
               C51038 +
           ((C15742 + C15741 + C15740) * C284 -
            ((C15739 + C15738 + C15737) * C278 +
             (C15736 + C15735 + C15734) * C283) +
            (C15745 + C15744 + C15743) * C279 -
            (C15508 * C1080 + C15505 * C1085 + C15507 * C814 + C15504 * C825 +
             C15506 * C289 + C15503 * C298) *
                C285 -
            (C15508 * C1084 + C15505 * C1092 + C15507 * C826 + C15504 * C838 +
             C15506 * C299 + C15503 * C307) *
                C280) *
               C50779) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C696 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C50754) *
               C51038 +
           ((C15548 + C15547 + C15546) * C696 +
            (C15551 + C15550 + C15549) * C50754) *
               C50779) *
              C50916 * C50843 * C692 -
          (((C15739 + C15738 + C15737) * C50754 +
            (C15736 + C15735 + C15734) * C696) *
               C50779 +
           ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
             C15506 * C293 + C15503 * C304) *
                C50754 +
            (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
             C15506 * C287 + C15503 * C294) *
                C696) *
               C51038) *
              C50916 * C50843 * C693 +
          (((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
             C15508 * C3443 + C15505 * C3449) *
                C696 +
            (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
             C15508 * C3448 + C15505 * C3452) *
                C50754) *
               C51038 +
           ((C16088 + C16087 + C16086) * C696 +
            (C16091 + C16090 + C16089) * C50754) *
               C50779) *
              C50916 * C50843 * C694 -
          (((C15508 * C9120 + C15505 * C9124 + C15507 * C3094 + C15504 * C3099 +
             C15506 * C705 + C15503 * C711) *
                C50754 +
            (C15508 * C9118 + C15505 * C9121 + C15507 * C3090 + C15504 * C3095 +
             C15506 * C699 + C15503 * C706) *
                C696) *
               C50779 +
           ((C15508 * C9122 + C15505 * C9125 + C15507 * C3096 + C15504 * C3100 +
             C15506 * C707 + C15503 * C712) *
                C50754 +
            (C15508 * C9119 + C15505 * C9123 + C15507 * C3091 + C15504 * C3097 +
             C15506 * C700 + C15503 * C708) *
                C696) *
               C51038) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C51038 +
            ((C15548 + C15547 + C15546) * C696 +
             (C15551 + C15550 + C15549) * C50754) *
                C50779) *
               C50916 * C941 -
           (((C15921 + C15920 + C15919) * C50754 +
             (C15918 + C15917 + C15916) * C696) *
                C50779 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C51038) *
               C50916 * C942 +
           (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
              C15508 * C6451 + C15505 * C6457) *
                 C696 +
             (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
              C15508 * C6456 + C15505 * C6460) *
                 C50754) *
                C51038 +
            ((C16496 + C16495 + C16494) * C696 +
             (C16499 + C16498 + C16497) * C50754) *
                C50779) *
               C50916 * C943) *
              C51046 +
          ((((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C696 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C50754) *
                C51038 +
            ((C15506 * C812 + C15503 * C821 + C15507 * C1082 + C15504 * C1089 +
              C15508 * C3564 + C15505 * C3569) *
                 C696 +
             (C15506 * C822 + C15503 * C836 + C15507 * C1088 + C15504 * C1094 +
              C15508 * C3568 + C15505 * C3573) *
                 C50754) *
                C50779) *
               C50916 * C942 -
           (((C15739 + C15738 + C15737) * C50754 +
             (C15736 + C15735 + C15734) * C696) *
                C50779 +
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C50754 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C696) *
                C51038) *
               C50916 * C941 -
           (((C15508 * C16646 + C15505 * C16648 + C15507 * C3568 +
              C15504 * C3573 + C15506 * C1088 + C15503 * C1094) *
                 C50754 +
             (C15508 * C16645 + C15505 * C16647 + C15507 * C3564 +
              C15504 * C3569 + C15506 * C1082 + C15503 * C1089) *
                 C696) *
                C50779 +
            ((C15508 * C13923 + C15505 * C13926 + C15507 * C3570 +
              C15504 * C3574 + C15506 * C1090 + C15503 * C1095) *
                 C50754 +
             (C15508 * C13920 + C15505 * C13924 + C15507 * C3565 +
              C15504 * C3571 + C15506 * C1083 + C15503 * C1091) *
                 C696) *
                C51038) *
               C50916 * C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50942 * C129) * C283 +
                (C117 * C130 + C50942 * C143) * C278 - C171 * C284 -
                C172 * C279 + C173 * C285 + C174 * C280) *
                   C110 +
               (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
                C175 * C285 + C176 * C280) *
                   C111 +
               (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
                C177 * C285 + C178 * C280) *
                   C112 +
               (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
                C179 * C285 + C180 * C280) *
                   C113) *
                  C50916 * C51047 +
              ((C475 * C284 -
                ((C117 * C441 + C50942 * C452) * C278 +
                 (C117 * C435 + C50942 * C442) * C283) +
                C476 * C279 - C477 * C285 - C478 * C280) *
                   C110 +
               (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
                C479 * C285 - C480 * C280) *
                   C111 +
               (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
                C481 * C285 - C482 * C280) *
                   C112 +
               (C481 * C284 - (C480 * C278 + C479 * C283) + C482 * C279 -
                (C117 * C439 + C50942 * C450) * C285 -
                (C117 * C451 + C50942 * C457) * C280) *
                   C113) *
                  C50916 * C50855) *
             C50817 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50942 * C129) * C696 +
                 (C117 * C130 + C50942 * C143) * C50754) *
                    C110 +
                (C171 * C696 + C172 * C50754) * C111 +
                (C173 * C696 + C174 * C50754) * C112 +
                (C175 * C696 + C176 * C50754) * C113) *
                   C50916 * C51047 -
               ((C480 * C50754 + C479 * C696) * C113 +
                (C478 * C50754 + C477 * C696) * C112 +
                (C476 * C50754 + C475 * C696) * C111 +
                ((C117 * C441 + C50942 * C452) * C50754 +
                 (C117 * C435 + C50942 * C442) * C696) *
                    C110) *
                   C50916 * C50855) *
                  C582 +
              ((((C117 * C811 + C50942 * C819) * C696 +
                 (C117 * C820 + C50942 * C835) * C50754) *
                    C110 +
                ((C117 * C812 + C50942 * C821) * C696 +
                 (C117 * C822 + C50942 * C836) * C50754) *
                    C111 +
                ((C117 * C813 + C50942 * C823) * C696 +
                 (C117 * C824 + C50942 * C837) * C50754) *
                    C112 +
                ((C117 * C814 + C50942 * C825) * C696 +
                 (C117 * C826 + C50942 * C838) * C50754) *
                    C113) *
                   C50916 * C50855 -
               ((C332 * C50754 + C331 * C696) * C113 +
                (C330 * C50754 + C329 * C696) * C112 +
                (C328 * C50754 + C327 * C696) * C111 +
                ((C117 * C293 + C50942 * C304) * C50754 +
                 (C117 * C287 + C50942 * C294) * C696) *
                    C110) *
                   C50916 * C51047) *
                  C583 +
              ((((C117 * C587 + C50942 * C592) * C696 +
                 (C117 * C593 + C50942 * C602) * C50754) *
                    C110 +
                (C620 * C696 + C621 * C50754) * C111 +
                (C622 * C696 + C623 * C50754) * C112 +
                (C624 * C696 + C625 * C50754) * C113) *
                   C50916 * C51047 -
               (((C117 * C827 + C50942 * C839) * C50754 +
                 (C117 * C815 + C50942 * C828) * C696) *
                    C113 +
                ((C117 * C829 + C50942 * C840) * C50754 +
                 (C117 * C816 + C50942 * C830) * C696) *
                    C112 +
                ((C117 * C831 + C50942 * C841) * C50754 +
                 (C117 * C817 + C50942 * C832) * C696) *
                    C111 +
                ((C117 * C833 + C50942 * C842) * C50754 +
                 (C117 * C818 + C50942 * C834) * C696) *
                    C110) *
                   C50916 * C50855) *
                  C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C110 +
           (C171 * C696 + C172 * C50754) * C111 +
           (C173 * C696 + C174 * C50754) * C112 +
           (C175 * C696 + C176 * C50754) * C113) *
              C50916 * C1162 -
          ((C480 * C50754 + C479 * C696) * C113 +
           (C478 * C50754 + C477 * C696) * C112 +
           (C476 * C50754 + C475 * C696) * C111 +
           ((C117 * C441 + C50942 * C452) * C50754 +
            (C117 * C435 + C50942 * C442) * C696) *
               C110) *
              C50916 * C1163 +
          (((C117 * C944 + C50942 * C949) * C696 +
            (C117 * C950 + C50942 * C959) * C50754) *
               C110 +
           (C977 * C696 + C978 * C50754) * C111 +
           (C979 * C696 + C980 * C50754) * C112 +
           (C981 * C696 + C982 * C50754) * C113) *
              C50916 * C1164 -
          (((C117 * C1170 + C50942 * C1178) * C50754 +
            (C117 * C1166 + C50942 * C1171) * C696) *
               C113 +
           ((C117 * C1172 + C50942 * C1179) * C50754 +
            (C117 * C1167 + C50942 * C1173) * C696) *
               C112 +
           ((C117 * C1174 + C50942 * C1180) * C50754 +
            (C117 * C1168 + C50942 * C1175) * C696) *
               C111 +
           ((C117 * C1176 + C50942 * C1181) * C50754 +
            (C117 * C1169 + C50942 * C1177) * C696) *
               C110) *
              C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C51038 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C50779) *
               C8043 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C51038 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C50779) *
               C8044 +
           ((C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
             C3128 * C285 - C3129 * C280) *
                C51038 +
            (C3128 * C284 - (C3127 * C278 + C3126 * C283) + C3129 * C279 -
             (C117 * C815 + C50942 * C828) * C285 -
             (C117 * C827 + C50942 * C839) * C280) *
                C50779) *
               C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C51047 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C50855 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C51047) *
              C583 +
          ((C8642 * C8043 +
            ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
            ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
               C51047 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             ((C117 * C8795 + C50942 * C8798) * C50754 +
              (C117 * C8792 + C50942 * C8796) * C696) *
                 C51038) *
                C8045 +
            ((C8820 + C8819) * C50779 + (C8818 + C8817) * C51038) * C8044 +
            C8816 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51038 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C8043 +
           ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
           C8642 * C8045) *
              C1162 -
          (C8816 * C8045 +
           ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
           ((C476 * C50754 + C475 * C696) * C50779 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C51038) *
               C8043) *
              C1163 +
          ((((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C51038 +
            (C977 * C696 + C978 * C50754) * C50779) *
               C8043 +
           ((C3464 + C3465) * C51038 + (C3458 + C3459) * C50779) * C8044 +
           ((C9135 + C9136) * C51038 + (C9131 + C9132) * C50779) * C8045) *
              C1164 -
          ((((C117 * C9236 + C50942 * C9240) * C50754 +
             (C117 * C9234 + C50942 * C9237) * C696) *
                C50779 +
            ((C117 * C9238 + C50942 * C9241) * C50754 +
             (C117 * C9235 + C50942 * C9239) * C696) *
                C51038) *
               C8045 +
           (((C117 * C3568 + C50942 * C3573) * C50754 +
             (C117 * C3564 + C50942 * C3569) * C696) *
                C50779 +
            ((C117 * C3570 + C50942 * C3574) * C50754 +
             (C117 * C3565 + C50942 * C3571) * C696) *
                C51038) *
               C8044 +
           (((C117 * C1174 + C50942 * C1180) * C50754 +
             (C117 * C1168 + C50942 * C1175) * C696) *
                C50779 +
            ((C117 * C1176 + C50942 * C1181) * C50754 +
             (C117 * C1169 + C50942 * C1177) * C696) *
                C51038) *
               C8043) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C51038 +
           ((C15548 + C15547 + C15546) * C283 +
            (C15551 + C15550 + C15549) * C278 -
            (C15554 + C15553 + C15552) * C284 -
            (C15557 + C15556 + C15555) * C279 +
            (C15560 + C15559 + C15558) * C285 +
            (C15563 + C15562 + C15561) * C280) *
               C50779) *
              C50916 * C51047 +
          (((C15916 + C15917 + C15918) * C284 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C278 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C283) +
            (C15919 + C15920 + C15921) * C279 -
            (C15922 + C15923 + C15924) * C285 -
            (C15925 + C15926 + C15927) * C280) *
               C51038 +
           ((C15924 + C15923 + C15922) * C284 -
            ((C15921 + C15920 + C15919) * C278 +
             (C15918 + C15917 + C15916) * C283) +
            (C15927 + C15926 + C15925) * C279 -
            (C15508 * C1166 + C15505 * C1171 + C15507 * C947 + C15504 * C955 +
             C15506 * C437 + C15503 * C446) *
                C285 -
            (C15508 * C1170 + C15505 * C1178 + C15507 * C956 + C15504 * C962 +
             C15506 * C447 + C15503 * C455) *
                C280) *
               C50779) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C51038 +
            ((C15548 + C15547 + C15546) * C696 +
             (C15551 + C15550 + C15549) * C50754) *
                C50779) *
               C50916 * C51047 -
           (((C15921 + C15920 + C15919) * C50754 +
             (C15918 + C15917 + C15916) * C696) *
                C50779 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C51038) *
               C50916 * C50855) *
              C582 +
          ((((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C696 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C50754) *
                C51038 +
            ((C15506 * C812 + C15503 * C821 + C15507 * C1082 + C15504 * C1089 +
              C15508 * C3564 + C15505 * C3569) *
                 C696 +
             (C15506 * C822 + C15503 * C836 + C15507 * C1088 + C15504 * C1094 +
              C15508 * C3568 + C15505 * C3573) *
                 C50754) *
                C50779) *
               C50916 * C50855 -
           (((C15739 + C15738 + C15737) * C50754 +
             (C15736 + C15735 + C15734) * C696) *
                C50779 +
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C50754 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C696) *
                C51038) *
               C50916 * C51047) *
              C583 +
          ((((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
              C15508 * C3443 + C15505 * C3449) *
                 C696 +
             (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
              C15508 * C3448 + C15505 * C3452) *
                 C50754) *
                C51038 +
            ((C16088 + C16087 + C16086) * C696 +
             (C16091 + C16090 + C16089) * C50754) *
                C50779) *
               C50916 * C51047 -
           (((C15508 * C9236 + C15505 * C9240 + C15507 * C3446 +
              C15504 * C3451 + C15506 * C831 + C15503 * C841) *
                 C50754 +
             (C15508 * C9234 + C15505 * C9237 + C15507 * C3442 +
              C15504 * C3447 + C15506 * C817 + C15503 * C832) *
                 C696) *
                C50779 +
            ((C15508 * C9238 + C15505 * C9241 + C15507 * C3448 +
              C15504 * C3452 + C15506 * C833 + C15503 * C842) *
                 C50754 +
             (C15508 * C9235 + C15505 * C9239 + C15507 * C3443 +
              C15504 * C3449 + C15506 * C818 + C15503 * C834) *
                 C696) *
                C51038) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C696 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C50754) *
               C51038 +
           ((C15548 + C15547 + C15546) * C696 +
            (C15551 + C15550 + C15549) * C50754) *
               C50779) *
              C50916 * C1162 -
          (((C15921 + C15920 + C15919) * C50754 +
            (C15918 + C15917 + C15916) * C696) *
               C50779 +
           ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
             C15506 * C441 + C15503 * C452) *
                C50754 +
            (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
             C15506 * C435 + C15503 * C442) *
                C696) *
               C51038) *
              C50916 * C1163 +
          (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
             C15508 * C6451 + C15505 * C6457) *
                C696 +
            (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
             C15508 * C6456 + C15505 * C6460) *
                C50754) *
               C51038 +
           ((C16496 + C16495 + C16494) * C696 +
            (C16499 + C16498 + C16497) * C50754) *
               C50779) *
              C50916 * C1164 -
          (((C15508 * C16749 + C15505 * C16753 + C15507 * C6454 +
             C15504 * C6459 + C15506 * C1174 + C15503 * C1180) *
                C50754 +
            (C15508 * C16747 + C15505 * C16750 + C15507 * C6450 +
             C15504 * C6455 + C15506 * C1168 + C15503 * C1175) *
                C696) *
               C50779 +
           ((C15508 * C16751 + C15505 * C16754 + C15507 * C6456 +
             C15504 * C6460 + C15506 * C1176 + C15503 * C1181) *
                C50754 +
            (C15508 * C16748 + C15505 * C16752 + C15507 * C6451 +
             C15504 * C6457 + C15506 * C1169 + C15503 * C1177) *
                C696) *
               C51038) *
              C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[99] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50942 * C129) * C1285 +
                     (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                     C172 * C51073 + C173 * C1287 + C174 * C1282) *
                        C51038 +
                    (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                     C174 * C51073 + C175 * C1287 + C176 * C1282) *
                        C50779) *
                       C8043 +
                   ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C51038 +
                    (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C50779) *
                       C8044 +
                   ((C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C51038 +
                    (C9395 + C9396 - C9397 - C9398 + C9399 + C9400) * C50779) *
                       C8045) *
                      C1643 +
                  (((C475 * C1286 -
                     ((C117 * C441 + C50942 * C452) * C51089 +
                      (C117 * C435 + C50942 * C442) * C1285) +
                     C476 * C51073 - C477 * C1287 - C478 * C1282) *
                        C51038 +
                    (C477 * C1286 - (C476 * C51089 + C475 * C1285) +
                     C478 * C51073 - C479 * C1287 - C480 * C1282) *
                        C50779) *
                       C8043 +
                   ((C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) +
                     C1541 * C51073 - C1542 * C1287 - C1543 * C1282) *
                        C51038 +
                    (C1542 * C1286 - (C1541 * C51089 + C1540 * C1285) +
                     C1543 * C51073 - C1544 * C1287 - C1545 * C1282) *
                        C50779) *
                       C8044 +
                   ((C3126 * C1286 - (C3125 * C51089 + C3124 * C1285) +
                     C3127 * C51073 - C3128 * C1287 - C3129 * C1282) *
                        C51038 +
                    (C3128 * C1286 - (C3127 * C51089 + C3126 * C1285) +
                     C3129 * C51073 - (C117 * C815 + C50942 * C828) * C1287 -
                     (C117 * C827 + C50942 * C839) * C1282) *
                        C50779) *
                       C8045) *
                      C50855) *
                 C50817) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C122 + C50942 * C129) * C1285 +
                    (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                    C172 * C51073 + C173 * C1287 + C174 * C1282) *
                       C110 +
                   (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                    C174 * C51073 + C175 * C1287 + C176 * C1282) *
                       C111 +
                   (C173 * C1285 + C174 * C51089 - C175 * C1286 -
                    C176 * C51073 + C177 * C1287 + C178 * C1282) *
                       C112 +
                   (C175 * C1285 + C176 * C51089 - C177 * C1286 -
                    C178 * C51073 + C179 * C1287 + C180 * C1282) *
                       C113) *
                      C50916 * C1643 +
                  ((C475 * C1286 -
                    ((C117 * C441 + C50942 * C452) * C51089 +
                     (C117 * C435 + C50942 * C442) * C1285) +
                    C476 * C51073 - C477 * C1287 - C478 * C1282) *
                       C110 +
                   (C477 * C1286 - (C476 * C51089 + C475 * C1285) +
                    C478 * C51073 - C479 * C1287 - C480 * C1282) *
                       C111 +
                   (C479 * C1286 - (C478 * C51089 + C477 * C1285) +
                    C480 * C51073 - C481 * C1287 - C482 * C1282) *
                       C112 +
                   (C481 * C1286 - (C480 * C51089 + C479 * C1285) +
                    C482 * C51073 - (C117 * C439 + C50942 * C450) * C1287 -
                    (C117 * C451 + C50942 * C457) * C1282) *
                       C113) *
                      C50916 * C50855) *
                 C50817) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C15506 * C122 + C15503 * C129 + C15507 * C435 +
                     C15504 * C442 + C15508 * C944 + C15505 * C949) *
                        C1285 +
                    (C15506 * C130 + C15503 * C143 + C15507 * C441 +
                     C15504 * C452 + C15508 * C950 + C15505 * C959) *
                        C51089 -
                    (C15546 + C15547 + C15548) * C1286 -
                    (C15549 + C15550 + C15551) * C51073 +
                    (C15552 + C15553 + C15554) * C1287 +
                    (C15555 + C15556 + C15557) * C1282) *
                       C51038 +
                   ((C15548 + C15547 + C15546) * C1285 +
                    (C15551 + C15550 + C15549) * C51089 -
                    (C15554 + C15553 + C15552) * C1286 -
                    (C15557 + C15556 + C15555) * C51073 +
                    (C15560 + C15559 + C15558) * C1287 +
                    (C15563 + C15562 + C15561) * C1282) *
                       C50779) *
                      C50916 * C1643 +
                  (((C15916 + C15917 + C15918) * C1286 -
                    ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 +
                      C15504 * C959 + C15506 * C441 + C15503 * C452) *
                         C51089 +
                     (C15508 * C1169 + C15505 * C1177 + C15507 * C944 +
                      C15504 * C949 + C15506 * C435 + C15503 * C442) *
                         C1285) +
                    (C15919 + C15920 + C15921) * C51073 -
                    (C15922 + C15923 + C15924) * C1287 -
                    (C15925 + C15926 + C15927) * C1282) *
                       C51038 +
                   ((C15924 + C15923 + C15922) * C1286 -
                    ((C15921 + C15920 + C15919) * C51089 +
                     (C15918 + C15917 + C15916) * C1285) +
                    (C15927 + C15926 + C15925) * C51073 -
                    (C15508 * C1166 + C15505 * C1171 + C15507 * C947 +
                     C15504 * C955 + C15506 * C437 + C15503 * C446) *
                        C1287 -
                    (C15508 * C1170 + C15505 * C1178 + C15507 * C956 +
                     C15504 * C962 + C15506 * C447 + C15503 * C455) *
                        C1282) *
                       C50779) *
                      C50916 * C50855) *
                 C50817) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C51038 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C50779) *
                C8043 +
            ((C3886 + C3887 - C3888 - C3889) * C51038 +
             (C3890 + C3891 - C3892 - C3893) * C50779) *
                C8044 +
            C9563 * C8045) *
               C1643 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C51038 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C50779) *
                C8043 +
            ((C4104 - (C4105 + C4106) + C4107) * C51038 +
             (C4108 - (C4109 + C4110) + C4111) * C50779) *
                C8044 +
            ((C9758 - (C9759 + C9760) + C9761) * C51038 +
             (C9762 - (C9763 + C9764) + C9765) * C50779) *
                C8045) *
               C50855) *
              C51046 +
          ((((C3888 - (C3887 + C3886) + C3889) * C51038 +
             (C3892 - (C3891 + C3890) + C3893) * C50779) *
                C8043 +
            ((C3898 - (C3899 + C3900) + C3901) * C51038 +
             (C3902 - (C3903 + C3904) + C3905) * C50779) *
                C8044 +
            ((C9549 - (C9550 + C9551) + C9552) * C51038 +
             (C9553 - (C9554 + C9555) + C9556) * C50779) *
                C8045) *
               C1643 +
           (((C4106 + C4105 - C4104 - C4107) * C51038 +
             (C4110 + C4109 - C4108 - C4111) * C50779) *
                C8043 +
            ((C9760 + C9759 - C9758 - C9761) * C51038 +
             (C9764 + C9763 - C9762 - C9765) * C50779) *
                C8044 +
            ((C8812 * C1391 + C8813 * C1386 - C8814 * C1392 - C8815 * C50759) *
                 C51038 +
             (C8814 * C1391 + C8815 * C1386 -
              (C117 * C3089 + C50942 * C3093) * C1392 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C110 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C111 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C112 +
            (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
                C113) *
               C50916 * C1643 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C110 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C111 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C112 +
            (C481 * C1392 - (C480 * C1386 + C479 * C1391) + C482 * C50759) *
                C113) *
               C50916 * C50855) *
              C51046 +
          (((C327 * C1392 -
             ((C117 * C293 + C50942 * C304) * C1386 +
              (C117 * C287 + C50942 * C294) * C1391) +
             C328 * C50759) *
                C110 +
            (C329 * C1392 - (C328 * C1386 + C327 * C1391) + C330 * C50759) *
                C111 +
            (C331 * C1392 - (C330 * C1386 + C329 * C1391) + C332 * C50759) *
                C112 +
            (C333 * C1392 - (C332 * C1386 + C331 * C1391) + C334 * C50759) *
                C113) *
               C50916 * C1643 +
           (((C117 * C811 + C50942 * C819) * C1391 +
             (C117 * C820 + C50942 * C835) * C1386 - C1540 * C1392 -
             C1541 * C50759) *
                C110 +
            (C1540 * C1391 + C1541 * C1386 - C1542 * C1392 - C1543 * C50759) *
                C111 +
            (C1542 * C1391 + C1543 * C1386 - C1544 * C1392 - C1545 * C50759) *
                C112 +
            (C1544 * C1391 + C1545 * C1386 -
             (C117 * C1523 + C50942 * C1524) * C1392 -
             (C117 * C1525 + C50942 * C1526) * C50759) *
                C113) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C1391 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C1386 -
             (C15546 + C15547 + C15548) * C1392 -
             (C15549 + C15550 + C15551) * C50759) *
                C51038 +
            ((C15548 + C15547 + C15546) * C1391 +
             (C15551 + C15550 + C15549) * C1386 -
             (C15554 + C15553 + C15552) * C1392 -
             (C15557 + C15556 + C15555) * C50759) *
                C50779) *
               C50916 * C1643 +
           (((C15916 + C15917 + C15918) * C1392 -
             ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
               C15506 * C441 + C15503 * C452) *
                  C1386 +
              (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
               C15506 * C435 + C15503 * C442) *
                  C1391) +
             (C15919 + C15920 + C15921) * C50759) *
                C51038 +
            ((C15924 + C15923 + C15922) * C1392 -
             ((C15921 + C15920 + C15919) * C1386 +
              (C15918 + C15917 + C15916) * C1391) +
             (C15927 + C15926 + C15925) * C50759) *
                C50779) *
               C50916 * C50855) *
              C51046 +
          ((((C15734 + C15735 + C15736) * C1392 -
             ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
               C15506 * C293 + C15503 * C304) *
                  C1386 +
              (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
               C15506 * C287 + C15503 * C294) *
                  C1391) +
             (C15737 + C15738 + C15739) * C50759) *
                C51038 +
            ((C15742 + C15741 + C15740) * C1392 -
             ((C15739 + C15738 + C15737) * C1386 +
              (C15736 + C15735 + C15734) * C1391) +
             (C15745 + C15744 + C15743) * C50759) *
                C50779) *
               C50916 * C1643 +
           (((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C1391 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C1386 -
             (C17254 + C17255 + C17256) * C1392 -
             (C17257 + C17258 + C17259) * C50759) *
                C51038 +
            ((C17256 + C17255 + C17254) * C1391 +
             (C17259 + C17258 + C17257) * C1386 -
             (C15508 * C3563 + C15505 * C3567 + C15507 * C1081 +
              C15504 * C1087 + C15506 * C813 + C15503 * C823) *
                 C1392 -
             (C15508 * C3566 + C15505 * C3572 + C15507 * C1086 +
              C15504 * C1093 + C15506 * C824 + C15503 * C837) *
                 C50759) *
                C50779) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C51038 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C3886 + C3887 - C3888 - C3889) * C51038 +
            (C3890 + C3891 - C3892 - C3893) * C50779) *
               C8044 +
           C9563 * C8045) *
              C51092 +
          (((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C51038 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C50779) *
               C8043 +
           ((C4104 - (C4105 + C4106) + C4107) * C51038 +
            (C4108 - (C4109 + C4110) + C4111) * C50779) *
               C8044 +
           ((C9758 - (C9759 + C9760) + C9761) * C51038 +
            (C9762 - (C9763 + C9764) + C9765) * C50779) *
               C8045) *
              C51082 +
          ((((C117 * C944 + C50942 * C949) * C1391 +
             (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
             C978 * C50759) *
                C51038 +
            (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) *
                C50779) *
               C8043 +
           ((C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
                C51038 +
            (C3292 * C1391 + C3293 * C1386 - C3294 * C1392 - C3295 * C50759) *
                C50779) *
               C8044 +
           ((C9133 * C1391 + C9134 * C1386 - C8971 * C1392 - C8972 * C50759) *
                C51038 +
            (C8971 * C1391 + C8972 * C1386 -
             (C117 * C3441 + C50942 * C3445) * C1392 -
             (C117 * C3444 + C50942 * C3450) * C50759) *
                C50779) *
               C8045) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C110 +
           (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) * C111 +
           (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) * C112 +
           (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
               C113) *
              C50916 * C51092 +
          ((C475 * C1392 -
            ((C117 * C441 + C50942 * C452) * C1386 +
             (C117 * C435 + C50942 * C442) * C1391) +
            C476 * C50759) *
               C110 +
           (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
               C111 +
           (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
               C112 +
           (C481 * C1392 - (C480 * C1386 + C479 * C1391) + C482 * C50759) *
               C113) *
              C50916 * C51082 +
          (((C117 * C944 + C50942 * C949) * C1391 +
            (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
            C978 * C50759) *
               C110 +
           (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) * C111 +
           (C979 * C1391 + C980 * C1386 - C981 * C1392 - C982 * C50759) * C112 +
           (C981 * C1391 + C982 * C1386 -
            (C117 * C948 + C50942 * C957) * C1392 -
            (C117 * C958 + C50942 * C963) * C50759) *
               C113) *
              C50916 * C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1391 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C1386 -
            (C15546 + C15547 + C15548) * C1392 -
            (C15549 + C15550 + C15551) * C50759) *
               C51038 +
           ((C15548 + C15547 + C15546) * C1391 +
            (C15551 + C15550 + C15549) * C1386 -
            (C15554 + C15553 + C15552) * C1392 -
            (C15557 + C15556 + C15555) * C50759) *
               C50779) *
              C50916 * C51092 +
          (((C15916 + C15917 + C15918) * C1392 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C1386 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C1391) +
            (C15919 + C15920 + C15921) * C50759) *
               C51038 +
           ((C15924 + C15923 + C15922) * C1392 -
            ((C15921 + C15920 + C15919) * C1386 +
             (C15918 + C15917 + C15916) * C1391) +
            (C15927 + C15926 + C15925) * C50759) *
               C50779) *
              C50916 * C51082 +
          (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
             C15508 * C6451 + C15505 * C6457) *
                C1391 +
            (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
             C15508 * C6456 + C15505 * C6460) *
                C1386 -
            (C16494 + C16495 + C16496) * C1392 -
            (C16497 + C16498 + C16499) * C50759) *
               C51038 +
           ((C16496 + C16495 + C16494) * C1391 +
            (C16499 + C16498 + C16497) * C1386 -
            (C15508 * C6449 + C15505 * C6453 + C15507 * C1167 + C15504 * C1173 +
             C15506 * C946 + C15503 * C953) *
                C1392 -
            (C15508 * C6452 + C15505 * C6458 + C15507 * C1172 + C15504 * C1179 +
             C15506 * C954 + C15503 * C961) *
                C50759) *
               C50779) *
              C50916 * C1875) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C110 +
           (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
               C111 +
           (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
               C112 +
           (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
               C113) *
              C50916 * C50843 * C582 +
          ((C327 * C49763 -
            ((C117 * C293 + C50942 * C304) * C51031 +
             (C117 * C287 + C50942 * C294) * C49770) +
            C328 * C50759) *
               C110 +
           (C329 * C49763 - (C328 * C51031 + C327 * C49770) + C330 * C50759) *
               C111 +
           (C331 * C49763 - (C330 * C51031 + C329 * C49770) + C332 * C50759) *
               C112 +
           (C333 * C49763 - (C332 * C51031 + C331 * C49770) + C334 * C50759) *
               C113) *
              C50916 * C50843 * C583 +
          (((C117 * C587 + C50942 * C592) * C49770 +
            (C117 * C593 + C50942 * C602) * C51031 - C620 * C49763 -
            C621 * C50759) *
               C110 +
           (C620 * C49770 + C621 * C51031 - C622 * C49763 - C623 * C50759) *
               C111 +
           (C622 * C49770 + C623 * C51031 - C624 * C49763 - C625 * C50759) *
               C112 +
           (C624 * C49770 + C625 * C51031 -
            (C117 * C591 + C50942 * C600) * C49763 -
            (C117 * C601 + C50942 * C606) * C50759) *
               C113) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C110 +
          (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 + C175 * C120 +
           C176 * C108 - C177 * C121 - C178 * C109) *
              C111 +
          (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 + C177 * C120 +
           C178 * C108 - C179 * C121 - C180 * C109) *
              C112 +
          (C175 * C118 + C176 * C106 - C177 * C119 - C178 * C107 + C179 * C120 +
           C180 * C108 - (C117 * C128 + C50942 * C141) * C121 -
           (C117 * C142 + C50942 * C149) * C109) *
              C113) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C51038 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C50779) *
              C8043 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C51038 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C50779) *
              C8044 +
          ((C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
            C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
               C51038 +
           (C620 * C118 + C621 * C106 - C622 * C119 - C623 * C107 +
            C624 * C120 + C625 * C108 - (C117 * C591 + C50942 * C600) * C121 -
            (C117 * C601 + C50942 * C606) * C109) *
               C50779) *
              C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51038 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C2768 + C2769 - C2770 - C2771) * C51038 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C8044 +
           C8519 * C8045) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C51038 +
            (C2774 - (C2773 + C2772) + C2775) * C50779) *
               C8043 +
           ((C2780 - (C2808 + C2809) + C2785) * C51038 +
            (C2786 - (C2787 + C2788) + C2789) * C50779) *
               C8044 +
           ((C8499 - (C8500 + C8501) + C8502) * C51038 +
            (C8503 - (C8504 + C8505) + C8506) * C50779) *
               C8045) *
              C50843 * C583 +
          (C8519 * C8043 +
           ((C8501 + C8500 - C8499 - C8502) * C51038 +
            (C8505 + C8504 - C8503 - C8506) * C50779) *
               C8044 +
           (((C117 * C2909 + C50942 * C2915) * C49770 +
             (C117 * C2914 + C50942 * C2918) * C51031 - C8513 * C49763 -
             C8514 * C50759) *
                C51038 +
            (C8513 * C49770 + C8514 * C51031 -
             (C117 * C2907 + C50942 * C2911) * C49763 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
            C15508 * C944 + C15505 * C949) *
               C118 +
           (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
            C15508 * C950 + C15505 * C959) *
               C106 -
           (C15546 + C15547 + C15548) * C119 -
           (C15549 + C15550 + C15551) * C107 +
           (C15552 + C15553 + C15554) * C120 +
           (C15555 + C15556 + C15557) * C108 -
           (C15558 + C15559 + C15560) * C121 -
           (C15561 + C15562 + C15563) * C109) *
              C51038 +
          ((C15548 + C15547 + C15546) * C118 +
           (C15551 + C15550 + C15549) * C106 -
           (C15554 + C15553 + C15552) * C119 -
           (C15557 + C15556 + C15555) * C107 +
           (C15560 + C15559 + C15558) * C120 +
           (C15563 + C15562 + C15561) * C108 -
           (C15508 * C948 + C15505 * C957 + C15507 * C438 + C15504 * C448 +
            C15506 * C126 + C15503 * C137) *
               C121 -
           (C15508 * C958 + C15505 * C963 + C15507 * C449 + C15504 * C456 +
            C15506 * C138 + C15503 * C147) *
               C109) *
              C50779) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C49770 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51031 -
            (C15546 + C15547 + C15548) * C49763 -
            (C15549 + C15550 + C15551) * C50759) *
               C51038 +
           ((C15548 + C15547 + C15546) * C49770 +
            (C15551 + C15550 + C15549) * C51031 -
            (C15554 + C15553 + C15552) * C49763 -
            (C15557 + C15556 + C15555) * C50759) *
               C50779) *
              C50916 * C50843 * C582 +
          (((C15734 + C15735 + C15736) * C49763 -
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C51031 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C49770) +
            (C15737 + C15738 + C15739) * C50759) *
               C51038 +
           ((C15742 + C15741 + C15740) * C49763 -
            ((C15739 + C15738 + C15737) * C51031 +
             (C15736 + C15735 + C15734) * C49770) +
            (C15745 + C15744 + C15743) * C50759) *
               C50779) *
              C50916 * C50843 * C583 +
          (((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
             C15508 * C3443 + C15505 * C3449) *
                C49770 +
            (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
             C15508 * C3448 + C15505 * C3452) *
                C51031 -
            (C16086 + C16087 + C16088) * C49763 -
            (C16089 + C16090 + C16091) * C50759) *
               C51038 +
           ((C16088 + C16087 + C16086) * C49770 +
            (C16091 + C16090 + C16089) * C51031 -
            (C15508 * C3441 + C15505 * C3445 + C15507 * C816 + C15504 * C830 +
             C15506 * C589 + C15503 * C596) *
                C49763 -
            (C15508 * C3444 + C15505 * C3450 + C15507 * C829 + C15504 * C840 +
             C15506 * C597 + C15503 * C604) *
                C50759) *
               C50779) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C110 +
           (C171 * C696 + C172 * C50754) * C111 +
           (C173 * C696 + C174 * C50754) * C112 +
           (C175 * C696 + C176 * C50754) * C113) *
              C50916 * C50843 * C692 -
          ((C332 * C50754 + C331 * C696) * C113 +
           (C330 * C50754 + C329 * C696) * C112 +
           (C328 * C50754 + C327 * C696) * C111 +
           ((C117 * C293 + C50942 * C304) * C50754 +
            (C117 * C287 + C50942 * C294) * C696) *
               C110) *
              C50916 * C50843 * C693 +
          (((C117 * C587 + C50942 * C592) * C696 +
            (C117 * C593 + C50942 * C602) * C50754) *
               C110 +
           (C620 * C696 + C621 * C50754) * C111 +
           (C622 * C696 + C623 * C50754) * C112 +
           (C624 * C696 + C625 * C50754) * C113) *
              C50916 * C50843 * C694 -
          (((C117 * C701 + C50942 * C709) * C50754 +
            (C117 * C697 + C50942 * C702) * C696) *
               C113 +
           ((C117 * C703 + C50942 * C710) * C50754 +
            (C117 * C698 + C50942 * C704) * C696) *
               C112 +
           ((C117 * C705 + C50942 * C711) * C50754 +
            (C117 * C699 + C50942 * C706) * C696) *
               C111 +
           ((C117 * C707 + C50942 * C712) * C50754 +
            (C117 * C700 + C50942 * C708) * C696) *
               C110) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C110 +
           (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
            C175 * C285 + C176 * C280) *
               C111 +
           (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
            C177 * C285 + C178 * C280) *
               C112 +
           (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
            C179 * C285 + C180 * C280) *
               C113) *
              C50916 * C50843 * C51046 +
          ((C327 * C284 -
            ((C117 * C293 + C50942 * C304) * C278 +
             (C117 * C287 + C50942 * C294) * C283) +
            C328 * C279 - C329 * C285 - C330 * C280) *
               C110 +
           (C329 * C284 - (C328 * C278 + C327 * C283) + C330 * C279 -
            C331 * C285 - C332 * C280) *
               C111 +
           (C331 * C284 - (C330 * C278 + C329 * C283) + C332 * C279 -
            C333 * C285 - C334 * C280) *
               C112 +
           (C333 * C284 - (C332 * C278 + C331 * C283) + C334 * C279 -
            (C117 * C291 + C50942 * C302) * C285 -
            (C117 * C303 + C50942 * C309) * C280) *
               C113) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C51038 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C50779) *
               C8043 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C51038 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C50779) *
               C8044 +
           ((C2804 * C284 - (C2941 * C278 + C2940 * C283) + C2805 * C279 -
             C2806 * C285 - C2807 * C280) *
                C51038 +
            (C2806 * C284 - (C2805 * C278 + C2804 * C283) + C2807 * C279 -
             (C117 * C697 + C50942 * C702) * C285 -
             (C117 * C701 + C50942 * C709) * C280) *
                C50779) *
               C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51038 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C8043 +
           ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
           C8642 * C8045) *
              C50843 * C692 -
          (C8643 * C8045 +
           ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
           ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
              C50843 * C693 +
          (C8642 * C8043 +
           ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
           ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
              C50843 * C694 -
          ((((C117 * C8619 + C50942 * C8623) * C50754 +
             (C117 * C8617 + C50942 * C8620) * C696) *
                C50779 +
            ((C117 * C8621 + C50942 * C8624) * C50754 +
             (C117 * C8618 + C50942 * C8622) * C696) *
                C51038) *
               C8045 +
           ((C8635 + C8634) * C50779 + (C8645 + C8644) * C51038) * C8044 +
           C8643 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C51038 +
           ((C15548 + C15547 + C15546) * C283 +
            (C15551 + C15550 + C15549) * C278 -
            (C15554 + C15553 + C15552) * C284 -
            (C15557 + C15556 + C15555) * C279 +
            (C15560 + C15559 + C15558) * C285 +
            (C15563 + C15562 + C15561) * C280) *
               C50779) *
              C50916 * C50843 * C51046 +
          (((C15734 + C15735 + C15736) * C284 -
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C278 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C283) +
            (C15737 + C15738 + C15739) * C279 -
            (C15740 + C15741 + C15742) * C285 -
            (C15743 + C15744 + C15745) * C280) *
               C51038 +
           ((C15742 + C15741 + C15740) * C284 -
            ((C15739 + C15738 + C15737) * C278 +
             (C15736 + C15735 + C15734) * C283) +
            (C15745 + C15744 + C15743) * C279 -
            (C15508 * C1080 + C15505 * C1085 + C15507 * C814 + C15504 * C825 +
             C15506 * C289 + C15503 * C298) *
                C285 -
            (C15508 * C1084 + C15505 * C1092 + C15507 * C826 + C15504 * C838 +
             C15506 * C299 + C15503 * C307) *
                C280) *
               C50779) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C696 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C50754) *
               C51038 +
           ((C15548 + C15547 + C15546) * C696 +
            (C15551 + C15550 + C15549) * C50754) *
               C50779) *
              C50916 * C50843 * C692 -
          (((C15739 + C15738 + C15737) * C50754 +
            (C15736 + C15735 + C15734) * C696) *
               C50779 +
           ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
             C15506 * C293 + C15503 * C304) *
                C50754 +
            (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
             C15506 * C287 + C15503 * C294) *
                C696) *
               C51038) *
              C50916 * C50843 * C693 +
          (((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
             C15508 * C3443 + C15505 * C3449) *
                C696 +
            (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
             C15508 * C3448 + C15505 * C3452) *
                C50754) *
               C51038 +
           ((C16088 + C16087 + C16086) * C696 +
            (C16091 + C16090 + C16089) * C50754) *
               C50779) *
              C50916 * C50843 * C694 -
          (((C15508 * C9120 + C15505 * C9124 + C15507 * C3094 + C15504 * C3099 +
             C15506 * C705 + C15503 * C711) *
                C50754 +
            (C15508 * C9118 + C15505 * C9121 + C15507 * C3090 + C15504 * C3095 +
             C15506 * C699 + C15503 * C706) *
                C696) *
               C50779 +
           ((C15508 * C9122 + C15505 * C9125 + C15507 * C3096 + C15504 * C3100 +
             C15506 * C707 + C15503 * C712) *
                C50754 +
            (C15508 * C9119 + C15505 * C9123 + C15507 * C3091 + C15504 * C3097 +
             C15506 * C700 + C15503 * C708) *
                C696) *
               C51038) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C51047 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C50855) *
              C582 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            ((C117 * C812 + C50942 * C821) * C696 +
             (C117 * C822 + C50942 * C836) * C50754) *
                C111 +
            ((C117 * C813 + C50942 * C823) * C696 +
             (C117 * C824 + C50942 * C837) * C50754) *
                C112 +
            ((C117 * C814 + C50942 * C825) * C696 +
             (C117 * C826 + C50942 * C838) * C50754) *
                C113) *
               C50916 * C50855 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C51047) *
              C583 +
          ((((C117 * C587 + C50942 * C592) * C696 +
             (C117 * C593 + C50942 * C602) * C50754) *
                C110 +
            (C620 * C696 + C621 * C50754) * C111 +
            (C622 * C696 + C623 * C50754) * C112 +
            (C624 * C696 + C625 * C50754) * C113) *
               C50916 * C51047 -
           (((C117 * C827 + C50942 * C839) * C50754 +
             (C117 * C815 + C50942 * C828) * C696) *
                C113 +
            ((C117 * C829 + C50942 * C840) * C50754 +
             (C117 * C816 + C50942 * C830) * C696) *
                C112 +
            ((C117 * C831 + C50942 * C841) * C50754 +
             (C117 * C817 + C50942 * C832) * C696) *
                C111 +
            ((C117 * C833 + C50942 * C842) * C50754 +
             (C117 * C818 + C50942 * C834) * C696) *
                C110) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C110 +
           (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
            C175 * C285 + C176 * C280) *
               C111 +
           (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
            C177 * C285 + C178 * C280) *
               C112 +
           (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
            C179 * C285 + C180 * C280) *
               C113) *
              C50916 * C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C110 +
           (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
            C479 * C285 - C480 * C280) *
               C111 +
           (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
            C481 * C285 - C482 * C280) *
               C112 +
           (C481 * C284 - (C480 * C278 + C479 * C283) + C482 * C279 -
            (C117 * C439 + C50942 * C450) * C285 -
            (C117 * C451 + C50942 * C457) * C280) *
               C113) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C51038 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C50779) *
               C8043 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C51038 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C50779) *
               C8044 +
           ((C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
             C3128 * C285 - C3129 * C280) *
                C51038 +
            (C3128 * C284 - (C3127 * C278 + C3126 * C283) + C3129 * C279 -
             (C117 * C815 + C50942 * C828) * C285 -
             (C117 * C827 + C50942 * C839) * C280) *
                C50779) *
               C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C51047 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C50855 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C51047) *
              C583 +
          ((C8642 * C8043 +
            ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
            ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
               C51047 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             ((C117 * C8795 + C50942 * C8798) * C50754 +
              (C117 * C8792 + C50942 * C8796) * C696) *
                 C51038) *
                C8045 +
            ((C8820 + C8819) * C50779 + (C8818 + C8817) * C51038) * C8044 +
            C8816 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C51038 +
           ((C15548 + C15547 + C15546) * C283 +
            (C15551 + C15550 + C15549) * C278 -
            (C15554 + C15553 + C15552) * C284 -
            (C15557 + C15556 + C15555) * C279 +
            (C15560 + C15559 + C15558) * C285 +
            (C15563 + C15562 + C15561) * C280) *
               C50779) *
              C50916 * C51047 +
          (((C15916 + C15917 + C15918) * C284 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C278 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C283) +
            (C15919 + C15920 + C15921) * C279 -
            (C15922 + C15923 + C15924) * C285 -
            (C15925 + C15926 + C15927) * C280) *
               C51038 +
           ((C15924 + C15923 + C15922) * C284 -
            ((C15921 + C15920 + C15919) * C278 +
             (C15918 + C15917 + C15916) * C283) +
            (C15927 + C15926 + C15925) * C279 -
            (C15508 * C1166 + C15505 * C1171 + C15507 * C947 + C15504 * C955 +
             C15506 * C437 + C15503 * C446) *
                C285 -
            (C15508 * C1170 + C15505 * C1178 + C15507 * C956 + C15504 * C962 +
             C15506 * C447 + C15503 * C455) *
                C280) *
               C50779) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C51038 +
            ((C15548 + C15547 + C15546) * C696 +
             (C15551 + C15550 + C15549) * C50754) *
                C50779) *
               C50916 * C51047 -
           (((C15921 + C15920 + C15919) * C50754 +
             (C15918 + C15917 + C15916) * C696) *
                C50779 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C51038) *
               C50916 * C50855) *
              C582 +
          ((((C15506 * C811 + C15503 * C819 + C15507 * C1083 + C15504 * C1091 +
              C15508 * C3565 + C15505 * C3571) *
                 C696 +
             (C15506 * C820 + C15503 * C835 + C15507 * C1090 + C15504 * C1095 +
              C15508 * C3570 + C15505 * C3574) *
                 C50754) *
                C51038 +
            ((C15506 * C812 + C15503 * C821 + C15507 * C1082 + C15504 * C1089 +
              C15508 * C3564 + C15505 * C3569) *
                 C696 +
             (C15506 * C822 + C15503 * C836 + C15507 * C1088 + C15504 * C1094 +
              C15508 * C3568 + C15505 * C3573) *
                 C50754) *
                C50779) *
               C50916 * C50855 -
           (((C15739 + C15738 + C15737) * C50754 +
             (C15736 + C15735 + C15734) * C696) *
                C50779 +
            ((C15508 * C1090 + C15505 * C1095 + C15507 * C820 + C15504 * C835 +
              C15506 * C293 + C15503 * C304) *
                 C50754 +
             (C15508 * C1083 + C15505 * C1091 + C15507 * C811 + C15504 * C819 +
              C15506 * C287 + C15503 * C294) *
                 C696) *
                C51038) *
               C50916 * C51047) *
              C583 +
          ((((C15506 * C587 + C15503 * C592 + C15507 * C818 + C15504 * C834 +
              C15508 * C3443 + C15505 * C3449) *
                 C696 +
             (C15506 * C593 + C15503 * C602 + C15507 * C833 + C15504 * C842 +
              C15508 * C3448 + C15505 * C3452) *
                 C50754) *
                C51038 +
            ((C16088 + C16087 + C16086) * C696 +
             (C16091 + C16090 + C16089) * C50754) *
                C50779) *
               C50916 * C51047 -
           (((C15508 * C9236 + C15505 * C9240 + C15507 * C3446 +
              C15504 * C3451 + C15506 * C831 + C15503 * C841) *
                 C50754 +
             (C15508 * C9234 + C15505 * C9237 + C15507 * C3442 +
              C15504 * C3447 + C15506 * C817 + C15503 * C832) *
                 C696) *
                C50779 +
            ((C15508 * C9238 + C15505 * C9241 + C15507 * C3448 +
              C15504 * C3452 + C15506 * C833 + C15503 * C842) *
                 C50754 +
             (C15508 * C9235 + C15505 * C9239 + C15507 * C3443 +
              C15504 * C3449 + C15506 * C818 + C15503 * C834) *
                 C696) *
                C51038) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1285 +
            (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
            C172 * C51073 + C173 * C1287 + C174 * C1282) *
               C50774 * C10812 +
           (C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C50774 * C10813 +
           (C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C50774 * C10814 +
           (C11699 + C11700 - C11701 - C11702 + C11703 + C11704) * C50774 *
               C10815) *
              C50843 * C1283 +
          ((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C50774 * C10812 +
           (C9391 - (C9390 + C9389) + C9392 - C9393 - C9394) * C50774 * C10813 +
           (C11701 - (C11700 + C11699) + C11702 - C11703 - C11704) * C50774 *
               C10814 +
           (C8513 * C1286 - (C8641 * C51089 + C8640 * C1285) + C8514 * C51073 -
            (C117 * C2907 + C50942 * C2911) * C1287 -
            (C117 * C2910 + C50942 * C2916) * C1282) *
               C50774 * C10815) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C2300 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C2301 +
            (C173 * C1285 + C174 * C51089 - C175 * C1286 - C176 * C51073 +
             C177 * C1287 + C178 * C1282) *
                C2302) *
               C51059 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C2300 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C2301 +
            (C3734 + C3735 - C3736 - C3737 + C3738 + C3739) * C2302) *
               C50930) *
              C50843 * C1283 +
          (((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C2300 +
            (C3730 - (C3729 + C3728) + C3731 - C3732 - C3733) * C2301 +
            (C3736 - (C3735 + C3734) + C3737 - C3738 - C3739) * C2302) *
               C51059 +
           ((C620 * C1286 - (C2802 * C51089 + C2803 * C1285) + C621 * C51073 -
             C622 * C1287 - C623 * C1282) *
                C2300 +
            (C622 * C1286 - (C621 * C51089 + C620 * C1285) + C623 * C51073 -
             C624 * C1287 - C625 * C1282) *
                C2301 +
            (C624 * C1286 - (C623 * C51089 + C622 * C1285) + C625 * C51073 -
             (C117 * C591 + C50942 * C600) * C1287 -
             (C117 * C601 + C50942 * C606) * C1282) *
                C2302) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1285 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51089 -
            (C15546 + C15547 + C15548) * C1286 -
            (C15549 + C15550 + C15551) * C51073 +
            (C15552 + C15553 + C15554) * C1287 +
            (C15555 + C15556 + C15557) * C1282) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C1285 +
            (C18491 + C18492 + C18493) * C51089 -
            (C15736 + C15735 + C15734) * C1286 -
            (C15739 + C15738 + C15737) * C51073 +
            (C15742 + C15741 + C15740) * C1287 +
            (C15745 + C15744 + C15743) * C1282) *
               C50774 * C50930) *
              C50843 * C1283 +
          (((C15734 + C15735 + C15736) * C1286 -
            ((C18493 + C18492 + C18491) * C51089 +
             (C18490 + C18489 + C18488) * C1285) +
            (C15737 + C15738 + C15739) * C51073 -
            (C15740 + C15741 + C15742) * C1287 -
            (C15743 + C15744 + C15745) * C1282) *
               C50774 * C51059 +
           ((C16088 + C16087 + C16086) * C1286 -
            ((C18798 + C18799 + C18800) * C51089 +
             (C18801 + C18802 + C18803) * C1285) +
            (C16091 + C16090 + C16089) * C51073 -
            (C15508 * C3441 + C15505 * C3445 + C15507 * C816 + C15504 * C830 +
             C15506 * C589 + C15503 * C596) *
                C1287 -
            (C15508 * C3444 + C15505 * C3450 + C15507 * C829 + C15504 * C840 +
             C15506 * C597 + C15503 * C604) *
                C1282) *
               C50774 * C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C50774 * C10812 +
           (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 + C11803 * C10814 +
           C11811 * C10815) *
              C50843 * C51091 +
          ((C3888 - (C3887 + C3886) + C3889) * C50774 * C10812 +
           (C3898 - (C3899 + C3900) + C3901) * C50774 * C10813 +
           (C9549 - (C9550 + C9551) + C9552) * C50774 * C10814 +
           (C11805 - (C11806 + C11807) + C11808) * C50774 * C10815) *
              C50843 * C51079 +
          (C11803 * C10812 + C11811 * C10813 +
           (C11807 + C11806 - C11805 - C11808) * C50774 * C10814 +
           (C11206 * C1391 + C11207 * C1386 -
            (C117 * C8617 + C50942 * C8620) * C1392 -
            (C117 * C8619 + C50942 * C8623) * C50759) *
               C50774 * C10815) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C2300 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C2301 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C3886 + C3887 - C3888 - C3889) * C2300 +
            (C3890 + C3891 - C3892 - C3893) * C2301 +
            (C3894 + C3895 - C3896 - C3897) * C2302) *
               C50930) *
              C50843 * C51091 +
          (((C3888 - (C3887 + C3886) + C3889) * C2300 +
            (C3892 - (C3891 + C3890) + C3893) * C2301 +
            (C3896 - (C3895 + C3894) + C3897) * C2302) *
               C51059 +
           ((C3898 - (C3899 + C3900) + C3901) * C2300 +
            (C3902 - (C3903 + C3904) + C3905) * C2301 +
            (C3906 - (C3907 + C3908) + C3909) * C2302) *
               C50930) *
              C50843 * C51079 +
          (((C3900 + C3899 - C3898 - C3901) * C2300 +
            (C3904 + C3903 - C3902 - C3905) * C2301 +
            (C3908 + C3907 - C3906 - C3909) * C2302) *
               C51059 +
           ((C2940 * C1391 + C2941 * C1386 - C2804 * C1392 - C2805 * C50759) *
                C2300 +
            (C2804 * C1391 + C2805 * C1386 - C2806 * C1392 - C2807 * C50759) *
                C2301 +
            (C2806 * C1391 + C2807 * C1386 -
             (C117 * C697 + C50942 * C702) * C1392 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C2302) *
               C50930) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1391 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C1386 -
            (C15546 + C15547 + C15548) * C1392 -
            (C15549 + C15550 + C15551) * C50759) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C1391 +
            (C18491 + C18492 + C18493) * C1386 -
            (C15736 + C15735 + C15734) * C1392 -
            (C15739 + C15738 + C15737) * C50759) *
               C50774 * C50930) *
              C50843 * C51091 +
          (((C15734 + C15735 + C15736) * C1392 -
            ((C18493 + C18492 + C18491) * C1386 +
             (C18490 + C18489 + C18488) * C1391) +
            (C15737 + C15738 + C15739) * C50759) *
               C50774 * C51059 +
           ((C16088 + C16087 + C16086) * C1392 -
            ((C18798 + C18799 + C18800) * C1386 +
             (C18801 + C18802 + C18803) * C1391) +
            (C16091 + C16090 + C16089) * C50759) *
               C50774 * C50930) *
              C50843 * C51079 +
          (((C18803 + C18802 + C18801) * C1391 +
            (C18800 + C18799 + C18798) * C1386 -
            (C16086 + C16087 + C16088) * C1392 -
            (C16089 + C16090 + C16091) * C50759) *
               C50774 * C51059 +
           ((C18914 + C18915 + C18916) * C1391 +
            (C18917 + C18918 + C18919) * C1386 -
            (C15508 * C9118 + C15505 * C9121 + C15507 * C3090 + C15504 * C3095 +
             C15506 * C699 + C15503 * C706) *
                C1392 -
            (C15508 * C9120 + C15505 * C9124 + C15507 * C3094 + C15504 * C3099 +
             C15506 * C705 + C15503 * C711) *
                C50759) *
               C50774 * C50930) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C50774 * C10812 +
            (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 +
            C11803 * C10814 + C11811 * C10815) *
               C51047 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C50774 * C10812 +
            (C4104 - (C4105 + C4106) + C4107) * C50774 * C10813 +
            (C9758 - (C9759 + C9760) + C9761) * C50774 * C10814 +
            (C11942 - (C11943 + C11944) + C11945) * C50774 * C10815) *
               C50855) *
              C1283 +
          (((C3888 - (C3887 + C3886) + C3889) * C50774 * C10812 +
            (C3898 - (C3899 + C3900) + C3901) * C50774 * C10813 +
            (C9549 - (C9550 + C9551) + C9552) * C50774 * C10814 +
            (C11805 - (C11806 + C11807) + C11808) * C50774 * C10815) *
               C51047 +
           ((C4106 + C4105 - C4104 - C4107) * C50774 * C10812 +
            (C9760 + C9759 - C9758 - C9761) * C50774 * C10813 +
            (C11944 + C11943 - C11942 - C11945) * C50774 * C10814 +
            (C11319 * C1391 + C11320 * C1386 -
             (C117 * C8791 + C50942 * C8794) * C1392 -
             (C117 * C8793 + C50942 * C8797) * C50759) *
                C50774 * C10815) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C2300 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C2301 +
             (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                 C2302) *
                C51059 +
            ((C3886 + C3887 - C3888 - C3889) * C2300 +
             (C3890 + C3891 - C3892 - C3893) * C2301 +
             (C3894 + C3895 - C3896 - C3897) * C2302) *
                C50930) *
               C51047 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C2300 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C2301 +
             (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                 C2302) *
                C51059 +
            ((C4104 - (C4105 + C4106) + C4107) * C2300 +
             (C4108 - (C4109 + C4110) + C4111) * C2301 +
             (C4112 - (C4113 + C4114) + C4115) * C2302) *
                C50930) *
               C50855) *
              C1283 +
          ((((C3888 - (C3887 + C3886) + C3889) * C2300 +
             (C3892 - (C3891 + C3890) + C3893) * C2301 +
             (C3896 - (C3895 + C3894) + C3897) * C2302) *
                C51059 +
            ((C3898 - (C3899 + C3900) + C3901) * C2300 +
             (C3902 - (C3903 + C3904) + C3905) * C2301 +
             (C3906 - (C3907 + C3908) + C3909) * C2302) *
                C50930) *
               C51047 +
           (((C4106 + C4105 - C4104 - C4107) * C2300 +
             (C4110 + C4109 - C4108 - C4111) * C2301 +
             (C4114 + C4113 - C4112 - C4115) * C2302) *
                C51059 +
            ((C3124 * C1391 + C3125 * C1386 - C3126 * C1392 - C3127 * C50759) *
                 C2300 +
             (C3126 * C1391 + C3127 * C1386 - C3128 * C1392 - C3129 * C50759) *
                 C2301 +
             (C3128 * C1391 + C3129 * C1386 -
              (C117 * C815 + C50942 * C828) * C1392 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C2302) *
                C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C1391 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C1386 -
             (C15546 + C15547 + C15548) * C1392 -
             (C15549 + C15550 + C15551) * C50759) *
                C50774 * C51059 +
            ((C18488 + C18489 + C18490) * C1391 +
             (C18491 + C18492 + C18493) * C1386 -
             (C15736 + C15735 + C15734) * C1392 -
             (C15739 + C15738 + C15737) * C50759) *
                C50774 * C50930) *
               C51047 +
           (((C15916 + C15917 + C15918) * C1392 -
             ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
               C15506 * C441 + C15503 * C452) *
                  C1386 +
              (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
               C15506 * C435 + C15503 * C442) *
                  C1391) +
             (C15919 + C15920 + C15921) * C50759) *
                C50774 * C51059 +
            ((C17256 + C17255 + C17254) * C1392 -
             ((C19090 + C19091 + C19092) * C1386 +
              (C19093 + C19094 + C19095) * C1391) +
             (C17259 + C17258 + C17257) * C50759) *
                C50774 * C50930) *
               C50855) *
              C1283 +
          ((((C15734 + C15735 + C15736) * C1392 -
             ((C18493 + C18492 + C18491) * C1386 +
              (C18490 + C18489 + C18488) * C1391) +
             (C15737 + C15738 + C15739) * C50759) *
                C50774 * C51059 +
            ((C16088 + C16087 + C16086) * C1392 -
             ((C18798 + C18799 + C18800) * C1386 +
              (C18801 + C18802 + C18803) * C1391) +
             (C16091 + C16090 + C16089) * C50759) *
                C50774 * C50930) *
               C51047 +
           (((C19095 + C19094 + C19093) * C1391 +
             (C19092 + C19091 + C19090) * C1386 -
             (C17254 + C17255 + C17256) * C1392 -
             (C17257 + C17258 + C17259) * C50759) *
                C50774 * C51059 +
            ((C19096 + C19097 + C19098) * C1391 +
             (C19099 + C19100 + C19101) * C1386 -
             (C15508 * C9234 + C15505 * C9237 + C15507 * C3442 +
              C15504 * C3447 + C15506 * C817 + C15503 * C832) *
                 C1392 -
             (C15508 * C9236 + C15505 * C9240 + C15507 * C3446 +
              C15504 * C3451 + C15506 * C831 + C15503 * C841) *
                 C50759) *
                C50774 * C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C50774 * C10812 +
            (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 +
            C11117 * C10814 + C11125 * C10815) *
               C1643 +
           ((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C50774 * C10812 +
            (C4796 - (C4797 + C4798) + C4799) * C50774 * C10813 +
            (C10446 - (C10447 + C10448) + C10449) * C50774 * C10814 +
            (C12402 - (C12403 + C12404) + C12405) * C50774 * C10815) *
               C50855) *
              C1283 +
          (((C2770 - (C2769 + C2768) + C2771) * C50774 * C10812 +
            (C2780 - (C2808 + C2809) + C2785) * C50774 * C10813 +
            (C8499 - (C8500 + C8501) + C8502) * C50774 * C10814 +
            (C11119 - (C11120 + C11121) + C11122) * C50774 * C10815) *
               C1643 +
           ((C4798 + C4797 - C4796 - C4799) * C50774 * C10812 +
            (C10448 + C10447 - C10446 - C10449) * C50774 * C10813 +
            (C12404 + C12403 - C12402 - C12405) * C50774 * C10814 +
            (C11319 * C49770 + C11320 * C51031 -
             (C117 * C8791 + C50942 * C8794) * C49763 -
             (C117 * C8793 + C50942 * C8797) * C50759) *
                C50774 * C10815) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C49770 +
              (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
              C172 * C50759) *
                 C2300 +
             (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                 C2301 +
             (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                 C2302) *
                C51059 +
            ((C2768 + C2769 - C2770 - C2771) * C2300 +
             (C2772 + C2773 - C2774 - C2775) * C2301 +
             (C2776 + C2777 - C2778 - C2779) * C2302) *
                C50930) *
               C1643 +
           (((C475 * C49763 -
              ((C117 * C441 + C50942 * C452) * C51031 +
               (C117 * C435 + C50942 * C442) * C49770) +
              C476 * C50759) *
                 C2300 +
             (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                 C2301 +
             (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                 C2302) *
                C51059 +
            ((C4796 - (C4797 + C4798) + C4799) * C2300 +
             (C4800 - (C4801 + C4802) + C4803) * C2301 +
             (C4804 - (C4805 + C4806) + C4807) * C2302) *
                C50930) *
               C50855) *
              C1283 +
          ((((C2770 - (C2769 + C2768) + C2771) * C2300 +
             (C2774 - (C2773 + C2772) + C2775) * C2301 +
             (C2778 - (C2777 + C2776) + C2779) * C2302) *
                C51059 +
            ((C2780 - (C2808 + C2809) + C2785) * C2300 +
             (C2786 - (C2787 + C2788) + C2789) * C2301 +
             (C2790 - (C2791 + C2792) + C2793) * C2302) *
                C50930) *
               C1643 +
           (((C4798 + C4797 - C4796 - C4799) * C2300 +
             (C4802 + C4801 - C4800 - C4803) * C2301 +
             (C4806 + C4805 - C4804 - C4807) * C2302) *
                C51059 +
            ((C3124 * C49770 + C3125 * C51031 - C3126 * C49763 -
              C3127 * C50759) *
                 C2300 +
             (C3126 * C49770 + C3127 * C51031 - C3128 * C49763 -
              C3129 * C50759) *
                 C2301 +
             (C3128 * C49770 + C3129 * C51031 -
              (C117 * C815 + C50942 * C828) * C49763 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C2302) *
                C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C49770 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C51031 -
             (C15546 + C15547 + C15548) * C49763 -
             (C15549 + C15550 + C15551) * C50759) *
                C50774 * C51059 +
            ((C18488 + C18489 + C18490) * C49770 +
             (C18491 + C18492 + C18493) * C51031 -
             (C15736 + C15735 + C15734) * C49763 -
             (C15739 + C15738 + C15737) * C50759) *
                C50774 * C50930) *
               C1643 +
           (((C15916 + C15917 + C15918) * C49763 -
             ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
               C15506 * C441 + C15503 * C452) *
                  C51031 +
              (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
               C15506 * C435 + C15503 * C442) *
                  C49770) +
             (C15919 + C15920 + C15921) * C50759) *
                C50774 * C51059 +
            ((C17256 + C17255 + C17254) * C49763 -
             ((C19090 + C19091 + C19092) * C51031 +
              (C19093 + C19094 + C19095) * C49770) +
             (C17259 + C17258 + C17257) * C50759) *
                C50774 * C50930) *
               C50855) *
              C1283 +
          ((((C15734 + C15735 + C15736) * C49763 -
             ((C18493 + C18492 + C18491) * C51031 +
              (C18490 + C18489 + C18488) * C49770) +
             (C15737 + C15738 + C15739) * C50759) *
                C50774 * C51059 +
            ((C16088 + C16087 + C16086) * C49763 -
             ((C18798 + C18799 + C18800) * C51031 +
              (C18801 + C18802 + C18803) * C49770) +
             (C16091 + C16090 + C16089) * C50759) *
                C50774 * C50930) *
               C1643 +
           (((C19095 + C19094 + C19093) * C49770 +
             (C19092 + C19091 + C19090) * C51031 -
             (C17254 + C17255 + C17256) * C49763 -
             (C17257 + C17258 + C17259) * C50759) *
                C50774 * C51059 +
            ((C19096 + C19097 + C19098) * C49770 +
             (C19099 + C19100 + C19101) * C51031 -
             (C15508 * C9234 + C15505 * C9237 + C15507 * C3442 +
              C15504 * C3447 + C15506 * C817 + C15503 * C832) *
                 C49763 -
             (C15508 * C9236 + C15505 * C9240 + C15507 * C3446 +
              C15504 * C3451 + C15506 * C831 + C15503 * C841) *
                 C50759) *
                C50774 * C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50942 * C129) * C696 +
                      (C117 * C130 + C50942 * C143) * C50754) *
                         C50774 * C10812 +
                     (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
                     C11204 * C10815) *
                        C1643 -
                    (C11318 * C10815 + C11313 * C10814 +
                     (C3130 + C3131) * C50774 * C10813 +
                     ((C117 * C441 + C50942 * C452) * C50754 +
                      (C117 * C435 + C50942 * C442) * C696) *
                         C50774 * C10812) *
                        C50855) *
                       C51091 +
                   (((C3131 + C3130) * C50774 * C10812 +
                     (C3132 + C3133) * C50774 * C10813 +
                     (C8817 + C8818) * C50774 * C10814 +
                     (C11321 + C11322) * C50774 * C10815) *
                        C50855 -
                    (C11205 * C10815 + C11199 * C10814 +
                     (C2930 + C2931) * C50774 * C10813 +
                     (C2921 + C2920) * C50774 * C10812) *
                        C1643) *
                       C51079 +
                   ((C11196 * C10812 + C11204 * C10813 +
                     (C8644 + C8645) * C50774 * C10814 +
                     (C11208 + C11209) * C50774 * C10815) *
                        C1643 -
                    (((C117 * C11308 + C50942 * C11310) * C50754 +
                      (C117 * C11307 + C50942 * C11309) * C696) *
                         C50774 * C10815 +
                     (C11322 + C11321) * C50774 * C10814 + C11318 * C10813 +
                     C11313 * C10812) *
                        C50855) *
                       C1390)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C122 + C50942 * C129) * C696 +
                       (C117 * C130 + C50942 * C143) * C50754) *
                          C2300 +
                      (C171 * C696 + C172 * C50754) * C2301 +
                      (C173 * C696 + C174 * C50754) * C2302) *
                         C51059 +
                     ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
                      (C2924 + C2925) * C2302) *
                         C50930) *
                        C1643 -
                    (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
                      (C3130 + C3131) * C2300) *
                         C50930 +
                     ((C478 * C50754 + C477 * C696) * C2302 +
                      (C476 * C50754 + C475 * C696) * C2301 +
                      ((C117 * C441 + C50942 * C452) * C50754 +
                       (C117 * C435 + C50942 * C442) * C696) *
                          C2300) *
                         C51059) *
                        C50855) *
                       C51091 +
                   ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
                      (C3103 + C3102) * C2302) *
                         C51059 +
                     ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
                      (C3136 + C3137) * C2302) *
                         C50930) *
                        C50855 -
                    (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
                      (C2930 + C2931) * C2300) *
                         C50930 +
                     ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
                      (C2921 + C2920) * C2300) *
                         C51059) *
                        C1643) *
                       C51079 +
                   ((((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
                      (C2927 + C2926) * C2302) *
                         C51059 +
                     ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
                      (C2938 + C2939) * C2302) *
                         C50930) *
                        C1643 -
                    ((((C117 * C3092 + C50942 * C3098) * C50754 +
                       (C117 * C3089 + C50942 * C3093) * C696) *
                          C2302 +
                      ((C117 * C3094 + C50942 * C3099) * C50754 +
                       (C117 * C3090 + C50942 * C3095) * C696) *
                          C2301 +
                      ((C117 * C3096 + C50942 * C3100) * C50754 +
                       (C117 * C3091 + C50942 * C3097) * C696) *
                          C2300) *
                         C50930 +
                     ((C3137 + C3136) * C2302 + (C3135 + C3134) * C2301 +
                      (C3133 + C3132) * C2300) *
                         C51059) *
                        C50855) *
                       C1390)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15506 * C122 + C15503 * C129 + C15507 * C435 +
                       C15504 * C442 + C15508 * C944 + C15505 * C949) *
                          C696 +
                      (C15506 * C130 + C15503 * C143 + C15507 * C441 +
                       C15504 * C452 + C15508 * C950 + C15505 * C959) *
                          C50754) *
                         C50774 * C51059 +
                     ((C18488 + C18489 + C18490) * C696 +
                      (C18491 + C18492 + C18493) * C50754) *
                         C50774 * C50930) *
                        C1643 -
                    (((C19090 + C19091 + C19092) * C50754 +
                      (C19093 + C19094 + C19095) * C696) *
                         C50774 * C50930 +
                     ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 +
                       C15504 * C959 + C15506 * C441 + C15503 * C452) *
                          C50754 +
                      (C15508 * C1169 + C15505 * C1177 + C15507 * C944 +
                       C15504 * C949 + C15506 * C435 + C15503 * C442) *
                          C696) *
                         C50774 * C51059) *
                        C50855) *
                       C51091 +
                   ((((C19095 + C19094 + C19093) * C696 +
                      (C19092 + C19091 + C19090) * C50754) *
                         C50774 * C51059 +
                     ((C19096 + C19097 + C19098) * C696 +
                      (C19099 + C19100 + C19101) * C50754) *
                         C50774 * C50930) *
                        C50855 -
                    (((C18798 + C18799 + C18800) * C50754 +
                      (C18801 + C18802 + C18803) * C696) *
                         C50774 * C50930 +
                     ((C18493 + C18492 + C18491) * C50754 +
                      (C18490 + C18489 + C18488) * C696) *
                         C50774 * C51059) *
                        C1643) *
                       C51079 +
                   ((((C18803 + C18802 + C18801) * C696 +
                      (C18800 + C18799 + C18798) * C50754) *
                         C50774 * C51059 +
                     ((C18914 + C18915 + C18916) * C696 +
                      (C18917 + C18918 + C18919) * C50754) *
                         C50774 * C50930) *
                        C1643 -
                    (((C15508 * C11597 + C15505 * C11599 + C15507 * C9122 +
                       C15504 * C9125 + C15506 * C3096 + C15503 * C3100) *
                          C50754 +
                      (C15508 * C11596 + C15505 * C11598 + C15507 * C9119 +
                       C15504 * C9123 + C15506 * C3091 + C15503 * C3097) *
                          C696) *
                         C50774 * C50930 +
                     ((C19101 + C19100 + C19099) * C50754 +
                      (C19098 + C19097 + C19096) * C696) *
                         C50774 * C51059) *
                        C50855) *
                       C1390)) /
                     (p * q * std::sqrt(p + q));
    d2ee[110] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50942 * C129) * C696 +
                      (C117 * C130 + C50942 * C143) * C50754) *
                         C50774 * C10812 +
                     (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
                     C11204 * C10815) *
                        C51092 -
                    (C11318 * C10815 + C11313 * C10814 +
                     (C3130 + C3131) * C50774 * C10813 +
                     ((C117 * C441 + C50942 * C452) * C50754 +
                      (C117 * C435 + C50942 * C442) * C696) *
                         C50774 * C10812) *
                        C51082 +
                    (((C117 * C944 + C50942 * C949) * C696 +
                      (C117 * C950 + C50942 * C959) * C50754) *
                         C50774 * C10812 +
                     (C3464 + C3465) * C50774 * C10813 +
                     (C9135 + C9136) * C50774 * C10814 +
                     (C11529 + C11530) * C50774 * C10815) *
                        C1875) *
                       C1283 +
                   (((C3131 + C3130) * C50774 * C10812 +
                     (C3132 + C3133) * C50774 * C10813 +
                     (C8817 + C8818) * C50774 * C10814 +
                     (C11321 + C11322) * C50774 * C10815) *
                        C51082 -
                    (C11205 * C10815 + C11199 * C10814 +
                     (C2930 + C2931) * C50774 * C10813 +
                     (C2921 + C2920) * C50774 * C10812) *
                        C51092 -
                    (((C117 * C11519 + C50942 * C11521) * C50754 +
                      (C117 * C11518 + C50942 * C11520) * C696) *
                         C50774 * C10815 +
                     (C11530 + C11529) * C50774 * C10814 +
                     (C9136 + C9135) * C50774 * C10813 +
                     (C3465 + C3464) * C50774 * C10812) *
                        C1875) *
                       C50831)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C122 + C50942 * C129) * C696 +
                       (C117 * C130 + C50942 * C143) * C50754) *
                          C2300 +
                      (C171 * C696 + C172 * C50754) * C2301 +
                      (C173 * C696 + C174 * C50754) * C2302) *
                         C51059 +
                     ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
                      (C2924 + C2925) * C2302) *
                         C50930) *
                        C51092 -
                    (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
                      (C3130 + C3131) * C2300) *
                         C50930 +
                     ((C478 * C50754 + C477 * C696) * C2302 +
                      (C476 * C50754 + C475 * C696) * C2301 +
                      ((C117 * C441 + C50942 * C452) * C50754 +
                       (C117 * C435 + C50942 * C442) * C696) *
                          C2300) *
                         C51059) *
                        C51082 +
                    ((((C117 * C944 + C50942 * C949) * C696 +
                       (C117 * C950 + C50942 * C959) * C50754) *
                          C2300 +
                      (C977 * C696 + C978 * C50754) * C2301 +
                      (C979 * C696 + C980 * C50754) * C2302) *
                         C51059 +
                     ((C3464 + C3465) * C2300 + (C3458 + C3459) * C2301 +
                      (C3460 + C3461) * C2302) *
                         C50930) *
                        C1875) *
                       C1283 +
                   ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
                      (C3103 + C3102) * C2302) *
                         C51059 +
                     ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
                      (C3136 + C3137) * C2302) *
                         C50930) *
                        C51082 -
                    (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
                      (C2930 + C2931) * C2300) *
                         C50930 +
                     ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
                      (C2921 + C2920) * C2300) *
                         C51059) *
                        C51092 -
                    ((((C117 * C3444 + C50942 * C3450) * C50754 +
                       (C117 * C3441 + C50942 * C3445) * C696) *
                          C2302 +
                      ((C117 * C3446 + C50942 * C3451) * C50754 +
                       (C117 * C3442 + C50942 * C3447) * C696) *
                          C2301 +
                      ((C117 * C3448 + C50942 * C3452) * C50754 +
                       (C117 * C3443 + C50942 * C3449) * C696) *
                          C2300) *
                         C50930 +
                     ((C3461 + C3460) * C2302 + (C3459 + C3458) * C2301 +
                      (C3465 + C3464) * C2300) *
                         C51059) *
                        C1875) *
                       C50831)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15506 * C122 + C15503 * C129 + C15507 * C435 +
                       C15504 * C442 + C15508 * C944 + C15505 * C949) *
                          C696 +
                      (C15506 * C130 + C15503 * C143 + C15507 * C441 +
                       C15504 * C452 + C15508 * C950 + C15505 * C959) *
                          C50754) *
                         C50774 * C51059 +
                     ((C18488 + C18489 + C18490) * C696 +
                      (C18491 + C18492 + C18493) * C50754) *
                         C50774 * C50930) *
                        C51092 -
                    (((C19090 + C19091 + C19092) * C50754 +
                      (C19093 + C19094 + C19095) * C696) *
                         C50774 * C50930 +
                     ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 +
                       C15504 * C959 + C15506 * C441 + C15503 * C452) *
                          C50754 +
                      (C15508 * C1169 + C15505 * C1177 + C15507 * C944 +
                       C15504 * C949 + C15506 * C435 + C15503 * C442) *
                          C696) *
                         C50774 * C51059) *
                        C51082 +
                    (((C15506 * C944 + C15503 * C949 + C15507 * C1169 +
                       C15504 * C1177 + C15508 * C6451 + C15505 * C6457) *
                          C696 +
                      (C15506 * C950 + C15503 * C959 + C15507 * C1176 +
                       C15504 * C1181 + C15508 * C6456 + C15505 * C6460) *
                          C50754) *
                         C50774 * C51059 +
                     ((C19406 + C19407 + C19408) * C696 +
                      (C19409 + C19410 + C19411) * C50754) *
                         C50774 * C50930) *
                        C1875) *
                       C1283 +
                   ((((C19095 + C19094 + C19093) * C696 +
                      (C19092 + C19091 + C19090) * C50754) *
                         C50774 * C51059 +
                     ((C19096 + C19097 + C19098) * C696 +
                      (C19099 + C19100 + C19101) * C50754) *
                         C50774 * C50930) *
                        C51082 -
                    (((C18798 + C18799 + C18800) * C50754 +
                      (C18801 + C18802 + C18803) * C696) *
                         C50774 * C50930 +
                     ((C18493 + C18492 + C18491) * C50754 +
                      (C18490 + C18489 + C18488) * C696) *
                         C50774 * C51059) *
                        C51092 -
                    (((C15508 * C13921 + C15505 * C13925 + C15507 * C9238 +
                       C15504 * C9241 + C15506 * C3448 + C15503 * C3452) *
                          C50754 +
                      (C15508 * C13919 + C15505 * C13922 + C15507 * C9235 +
                       C15504 * C9239 + C15506 * C3443 + C15503 * C3449) *
                          C696) *
                         C50774 * C50930 +
                     ((C19411 + C19410 + C19409) * C50754 +
                      (C19408 + C19407 + C19406) * C696) *
                         C50774 * C51059) *
                        C1875) *
                       C50831)) /
                     (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50942 * C129) * C118 +
                (C117 * C130 + C50942 * C143) * C106 - C171 * C119 -
                C172 * C107 + C173 * C120 + C174 * C108 - C175 * C121 -
                C176 * C109) *
                   C2300 +
               (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
                C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
                   C2301 +
               (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
                C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
                   C2302) *
                  C51059 +
              (((C117 * C287 + C50942 * C294) * C118 +
                (C117 * C293 + C50942 * C304) * C106 - C327 * C119 -
                C328 * C107 + C329 * C120 + C330 * C108 - C331 * C121 -
                C332 * C109) *
                   C2300 +
               (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
                C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
                   C2301 +
               (C329 * C118 + C330 * C106 - C331 * C119 - C332 * C107 +
                C333 * C120 + C334 * C108 -
                (C117 * C291 + C50942 * C302) * C121 -
                (C117 * C303 + C50942 * C309) * C109) *
                   C2302) *
                  C50930) *
             C50843 * C50817 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50942 * C129) * C49770 +
                 (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
                 C172 * C50759) *
                    C2300 +
                (C171 * C49770 + C172 * C51031 - C173 * C49763 -
                 C174 * C50759) *
                    C2301 +
                (C173 * C49770 + C174 * C51031 - C175 * C49763 -
                 C176 * C50759) *
                    C2302) *
                   C51059 +
               ((C2768 + C2769 - C2770 - C2771) * C2300 +
                (C2772 + C2773 - C2774 - C2775) * C2301 +
                (C2776 + C2777 - C2778 - C2779) * C2302) *
                   C50930) *
                  C50843 * C582 +
              (((C2770 - (C2769 + C2768) + C2771) * C2300 +
                (C2774 - (C2773 + C2772) + C2775) * C2301 +
                (C2778 - (C2777 + C2776) + C2779) * C2302) *
                   C51059 +
               ((C2780 - (C2808 + C2809) + C2785) * C2300 +
                (C2786 - (C2787 + C2788) + C2789) * C2301 +
                (C2790 - (C2791 + C2792) + C2793) * C2302) *
                   C50930) *
                  C50843 * C583 +
              (((C2809 + C2808 - C2780 - C2785) * C2300 +
                (C2788 + C2787 - C2786 - C2789) * C2301 +
                (C2792 + C2791 - C2790 - C2793) * C2302) *
                   C51059 +
               (((C117 * C700 + C50942 * C708) * C49770 +
                 (C117 * C707 + C50942 * C712) * C51031 - C2804 * C49763 -
                 C2805 * C50759) *
                    C2300 +
                (C2804 * C49770 + C2805 * C51031 - C2806 * C49763 -
                 C2807 * C50759) *
                    C2301 +
                (C2806 * C49770 + C2807 * C51031 -
                 (C117 * C697 + C50942 * C702) * C49763 -
                 (C117 * C701 + C50942 * C709) * C50759) *
                    C2302) *
                   C50930) *
                  C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C2300 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C2301 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C2768 + C2769 - C2770 - C2771) * C2300 +
            (C2772 + C2773 - C2774 - C2775) * C2301 +
            (C2776 + C2777 - C2778 - C2779) * C2302) *
               C50930) *
              C941 +
          (((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C2300 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C2301 +
            (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                C2302) *
               C51059 +
           ((C1540 * C49763 - (C3122 * C51031 + C3123 * C49770) +
             C1541 * C50759) *
                C2300 +
            (C1542 * C49763 - (C1541 * C51031 + C1540 * C49770) +
             C1543 * C50759) *
                C2301 +
            (C1544 * C49763 - (C1543 * C51031 + C1542 * C49770) +
             C1545 * C50759) *
                C2302) *
               C50930) *
              C942 +
          ((((C117 * C944 + C50942 * C949) * C49770 +
             (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
             C978 * C50759) *
                C2300 +
            (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
                C2301 +
            (C979 * C49770 + C980 * C51031 - C981 * C49763 - C982 * C50759) *
                C2302) *
               C51059 +
           (((C117 * C1083 + C50942 * C1091) * C49770 +
             (C117 * C1090 + C50942 * C1095) * C51031 - C3292 * C49763 -
             C3293 * C50759) *
                C2300 +
            (C3292 * C49770 + C3293 * C51031 - C3294 * C49763 -
             C3295 * C50759) *
                C2301 +
            (C3294 * C49770 + C3295 * C51031 -
             (C117 * C1080 + C50942 * C1085) * C49763 -
             (C117 * C1084 + C50942 * C1092) * C50759) *
                C2302) *
               C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C50774 * C10812 +
          (C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
           C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
              C50774 * C10813 +
          (C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
           C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
              C50774 * C10814 +
          (C2940 * C118 + C2941 * C106 - C2804 * C119 - C2805 * C107 +
           C2806 * C120 + C2807 * C108 - (C117 * C697 + C50942 * C702) * C121 -
           (C117 * C701 + C50942 * C709) * C109) *
              C50774 * C10815) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C50774 * C10812 +
           (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 + C11117 * C10814 +
           C11125 * C10815) *
              C50843 * C582 +
          ((C2770 - (C2769 + C2768) + C2771) * C50774 * C10812 +
           (C2780 - (C2808 + C2809) + C2785) * C50774 * C10813 +
           (C8499 - (C8500 + C8501) + C8502) * C50774 * C10814 +
           (C11119 - (C11120 + C11121) + C11122) * C50774 * C10815) *
              C50843 * C583 +
          (C11117 * C10812 + C11125 * C10813 +
           (C11121 + C11120 - C11119 - C11122) * C50774 * C10814 +
           ((C117 * C8618 + C50942 * C8622) * C49770 +
            (C117 * C8621 + C50942 * C8624) * C51031 -
            (C117 * C8617 + C50942 * C8620) * C49763 -
            (C117 * C8619 + C50942 * C8623) * C50759) *
               C50774 * C10815) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C50774 * C10812 +
           (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 + C11117 * C10814 +
           C11125 * C10815) *
              C941 +
          ((C475 * C49763 -
            ((C117 * C441 + C50942 * C452) * C51031 +
             (C117 * C435 + C50942 * C442) * C49770) +
            C476 * C50759) *
               C50774 * C10812 +
           (C4796 - (C4797 + C4798) + C4799) * C50774 * C10813 +
           (C10446 - (C10447 + C10448) + C10449) * C50774 * C10814 +
           (C8814 * C49763 - (C8813 * C51031 + C8812 * C49770) +
            C8815 * C50759) *
               C50774 * C10815) *
              C942 +
          (((C117 * C944 + C50942 * C949) * C49770 +
            (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
            C978 * C50759) *
               C50774 * C10812 +
           (C3462 * C49770 + C3463 * C51031 - C3292 * C49763 - C3293 * C50759) *
               C50774 * C10813 +
           (C9133 * C49770 + C9134 * C51031 - C8971 * C49763 - C8972 * C50759) *
               C50774 * C10814 +
           ((C117 * C9119 + C50942 * C9123) * C49770 +
            (C117 * C9122 + C50942 * C9125) * C51031 -
            (C117 * C9118 + C50942 * C9121) * C49763 -
            (C117 * C9120 + C50942 * C9124) * C50759) *
               C50774 * C10815) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
            C15508 * C944 + C15505 * C949) *
               C118 +
           (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
            C15508 * C950 + C15505 * C959) *
               C106 -
           (C15546 + C15547 + C15548) * C119 -
           (C15549 + C15550 + C15551) * C107 +
           (C15552 + C15553 + C15554) * C120 +
           (C15555 + C15556 + C15557) * C108 -
           (C15558 + C15559 + C15560) * C121 -
           (C15561 + C15562 + C15563) * C109) *
              C50774 * C51059 +
          ((C15506 * C287 + C15503 * C294 + C15507 * C811 + C15504 * C819 +
            C15508 * C1083 + C15505 * C1091) *
               C118 +
           (C15506 * C293 + C15503 * C304 + C15507 * C820 + C15504 * C835 +
            C15508 * C1090 + C15505 * C1095) *
               C106 -
           (C15736 + C15735 + C15734) * C119 -
           (C15739 + C15738 + C15737) * C107 +
           (C15742 + C15741 + C15740) * C120 +
           (C15745 + C15744 + C15743) * C108 -
           (C15508 * C1080 + C15505 * C1085 + C15507 * C814 + C15504 * C825 +
            C15506 * C289 + C15503 * C298) *
               C121 -
           (C15508 * C1084 + C15505 * C1092 + C15507 * C826 + C15504 * C838 +
            C15506 * C299 + C15503 * C307) *
               C109) *
              C50774 * C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C49770 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51031 -
            (C15546 + C15547 + C15548) * C49763 -
            (C15549 + C15550 + C15551) * C50759) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C49770 +
            (C18491 + C18492 + C18493) * C51031 -
            (C15736 + C15735 + C15734) * C49763 -
            (C15739 + C15738 + C15737) * C50759) *
               C50774 * C50930) *
              C50843 * C582 +
          (((C15734 + C15735 + C15736) * C49763 -
            ((C18493 + C18492 + C18491) * C51031 +
             (C18490 + C18489 + C18488) * C49770) +
            (C15737 + C15738 + C15739) * C50759) *
               C50774 * C51059 +
           ((C16088 + C16087 + C16086) * C49763 -
            ((C18798 + C18799 + C18800) * C51031 +
             (C18801 + C18802 + C18803) * C49770) +
            (C16091 + C16090 + C16089) * C50759) *
               C50774 * C50930) *
              C50843 * C583 +
          (((C18803 + C18802 + C18801) * C49770 +
            (C18800 + C18799 + C18798) * C51031 -
            (C16086 + C16087 + C16088) * C49763 -
            (C16089 + C16090 + C16091) * C50759) *
               C50774 * C51059 +
           ((C15506 * C700 + C15503 * C708 + C15507 * C3091 + C15504 * C3097 +
             C15508 * C9119 + C15505 * C9123) *
                C49770 +
            (C15506 * C707 + C15503 * C712 + C15507 * C3096 + C15504 * C3100 +
             C15508 * C9122 + C15505 * C9125) *
                C51031 -
            (C15508 * C9118 + C15505 * C9121 + C15507 * C3090 + C15504 * C3095 +
             C15506 * C699 + C15503 * C706) *
                C49763 -
            (C15508 * C9120 + C15505 * C9124 + C15507 * C3094 + C15504 * C3099 +
             C15506 * C705 + C15503 * C711) *
                C50759) *
               C50774 * C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C49770 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51031 -
            (C15546 + C15547 + C15548) * C49763 -
            (C15549 + C15550 + C15551) * C50759) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C49770 +
            (C18491 + C18492 + C18493) * C51031 -
            (C15736 + C15735 + C15734) * C49763 -
            (C15739 + C15738 + C15737) * C50759) *
               C50774 * C50930) *
              C941 +
          (((C15916 + C15917 + C15918) * C49763 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C51031 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C49770) +
            (C15919 + C15920 + C15921) * C50759) *
               C50774 * C51059 +
           ((C17256 + C17255 + C17254) * C49763 -
            ((C19090 + C19091 + C19092) * C51031 +
             (C19093 + C19094 + C19095) * C49770) +
            (C17259 + C17258 + C17257) * C50759) *
               C50774 * C50930) *
              C942 +
          (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
             C15508 * C6451 + C15505 * C6457) *
                C49770 +
            (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
             C15508 * C6456 + C15505 * C6460) *
                C51031 -
            (C16494 + C16495 + C16496) * C49763 -
            (C16497 + C16498 + C16499) * C50759) *
               C50774 * C51059 +
           ((C15506 * C1083 + C15503 * C1091 + C15507 * C3565 + C15504 * C3571 +
             C15508 * C13920 + C15505 * C13924) *
                C49770 +
            (C15506 * C1090 + C15503 * C1095 + C15507 * C3570 + C15504 * C3574 +
             C15508 * C13923 + C15505 * C13926) *
                C51031 -
            (C15508 * C16645 + C15505 * C16647 + C15507 * C3564 +
             C15504 * C3569 + C15506 * C1082 + C15503 * C1089) *
                C49763 -
            (C15508 * C16646 + C15505 * C16648 + C15507 * C3568 +
             C15504 * C3573 + C15506 * C1088 + C15503 * C1094) *
                C50759) *
               C50774 * C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50942 * C129) * C283 +
                 (C117 * C130 + C50942 * C143) * C278 - C171 * C284 -
                 C172 * C279 + C173 * C285 + C174 * C280) *
                    C2300 +
                (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
                 C175 * C285 + C176 * C280) *
                    C2301 +
                (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
                 C177 * C285 + C178 * C280) *
                    C2302) *
                   C51059 +
               ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
                (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
                (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
                   C50930) *
                  C50843 * C51046 +
              (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C2300 +
                (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C2301 +
                (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471) * C2302) *
                   C51059 +
               ((C620 * C284 -
                 ((C117 * C593 + C50942 * C602) * C278 +
                  (C117 * C587 + C50942 * C592) * C283) +
                 C621 * C279 - C622 * C285 - C623 * C280) *
                    C2300 +
                (C622 * C284 - (C621 * C278 + C620 * C283) + C623 * C279 -
                 C624 * C285 - C625 * C280) *
                    C2301 +
                (C624 * C284 - (C623 * C278 + C622 * C283) + C625 * C279 -
                 (C117 * C591 + C50942 * C600) * C285 -
                 (C117 * C601 + C50942 * C606) * C280) *
                    C2302) *
                   C50930) *
                  C50843 * C50831) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50942 * C129) * C696 +
                 (C117 * C130 + C50942 * C143) * C50754) *
                    C2300 +
                (C171 * C696 + C172 * C50754) * C2301 +
                (C173 * C696 + C174 * C50754) * C2302) *
                   C51059 +
               ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
                (C2924 + C2925) * C2302) *
                   C50930) *
                  C50843 * C692 -
              (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
                (C2930 + C2931) * C2300) *
                   C50930 +
               ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
                (C2921 + C2920) * C2300) *
                   C51059) *
                  C50843 * C693 +
              (((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
                (C2927 + C2926) * C2302) *
                   C51059 +
               ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
                (C2938 + C2939) * C2302) *
                   C50930) *
                  C50843 * C694 -
              ((((C117 * C2910 + C50942 * C2916) * C50754 +
                 (C117 * C2907 + C50942 * C2911) * C696) *
                    C2302 +
                ((C117 * C2912 + C50942 * C2917) * C50754 +
                 (C117 * C2908 + C50942 * C2913) * C696) *
                    C2301 +
                ((C117 * C2914 + C50942 * C2918) * C50754 +
                 (C117 * C2909 + C50942 * C2915) * C696) *
                    C2300) *
                   C50930 +
               ((C2939 + C2938) * C2302 + (C2937 + C2936) * C2301 +
                (C2943 + C2942) * C2300) *
                   C51059) *
                  C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C2300 +
             (C171 * C696 + C172 * C50754) * C2301 +
             (C173 * C696 + C174 * C50754) * C2302) *
                C51059 +
            ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
             (C2924 + C2925) * C2302) *
                C50930) *
               C941 -
           (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
             (C3130 + C3131) * C2300) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C2302 +
             (C476 * C50754 + C475 * C696) * C2301 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C2300) *
                C51059) *
               C942 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C2300 +
             (C977 * C696 + C978 * C50754) * C2301 +
             (C979 * C696 + C980 * C50754) * C2302) *
                C51059 +
            ((C3464 + C3465) * C2300 + (C3458 + C3459) * C2301 +
             (C3460 + C3461) * C2302) *
                C50930) *
               C943) *
              C51046 +
          ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
             (C3103 + C3102) * C2302) *
                C51059 +
            ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
             (C3136 + C3137) * C2302) *
                C50930) *
               C942 -
           (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
             (C2930 + C2931) * C2300) *
                C50930 +
            ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
             (C2921 + C2920) * C2300) *
                C51059) *
               C941 -
           ((((C117 * C3444 + C50942 * C3450) * C50754 +
              (C117 * C3441 + C50942 * C3445) * C696) *
                 C2302 +
             ((C117 * C3446 + C50942 * C3451) * C50754 +
              (C117 * C3442 + C50942 * C3447) * C696) *
                 C2301 +
             ((C117 * C3448 + C50942 * C3452) * C50754 +
              (C117 * C3443 + C50942 * C3449) * C696) *
                 C2300) *
                C50930 +
            ((C3461 + C3460) * C2302 + (C3459 + C3458) * C2301 +
             (C3465 + C3464) * C2300) *
                C51059) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C50843 * C51046 +
          ((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C50774 * C10812 +
           (C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C50774 * C10813 +
           (C10917 - (C10916 + C10915) + C10918 - C10919 - C10920) * C50774 *
               C10814 +
           (C8513 * C284 - (C8641 * C278 + C8640 * C283) + C8514 * C279 -
            (C117 * C2907 + C50942 * C2911) * C285 -
            (C117 * C2910 + C50942 * C2916) * C280) *
               C50774 * C10815) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C50774 * C10812 +
           (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
           C11204 * C10815) *
              C50843 * C692 -
          (C11205 * C10815 + C11199 * C10814 +
           (C2930 + C2931) * C50774 * C10813 +
           (C2921 + C2920) * C50774 * C10812) *
              C50843 * C693 +
          (C11196 * C10812 + C11204 * C10813 +
           (C8644 + C8645) * C50774 * C10814 +
           (C11208 + C11209) * C50774 * C10815) *
              C50843 * C694 -
          (((C117 * C11192 + C50942 * C11194) * C50754 +
            (C117 * C11191 + C50942 * C11193) * C696) *
               C50774 * C10815 +
           (C11209 + C11208) * C50774 * C10814 + C11205 * C10813 +
           C11199 * C10812) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C117 * C122 + C50942 * C129) * C696 +
                                 (C117 * C130 + C50942 * C143) * C50754) *
                                    C50774 * C10812 +
                                (C2920 + C2921) * C50774 * C10813 +
                                C11196 * C10814 + C11204 * C10815) *
                                   C941 -
                               (C11318 * C10815 + C11313 * C10814 +
                                (C3130 + C3131) * C50774 * C10813 +
                                ((C117 * C441 + C50942 * C452) * C50754 +
                                 (C117 * C435 + C50942 * C442) * C696) *
                                    C50774 * C10812) *
                                   C942 +
                               (((C117 * C944 + C50942 * C949) * C696 +
                                 (C117 * C950 + C50942 * C959) * C50754) *
                                    C50774 * C10812 +
                                (C3464 + C3465) * C50774 * C10813 +
                                (C9135 + C9136) * C50774 * C10814 +
                                (C11529 + C11530) * C50774 * C10815) *
                                   C943) *
                                  C51046 +
                              (((C3131 + C3130) * C50774 * C10812 +
                                (C3132 + C3133) * C50774 * C10813 +
                                (C8817 + C8818) * C50774 * C10814 +
                                (C11321 + C11322) * C50774 * C10815) *
                                   C942 -
                               (C11205 * C10815 + C11199 * C10814 +
                                (C2930 + C2931) * C50774 * C10813 +
                                (C2921 + C2920) * C50774 * C10812) *
                                   C941 -
                               (((C117 * C11519 + C50942 * C11521) * C50754 +
                                 (C117 * C11518 + C50942 * C11520) * C696) *
                                    C50774 * C10815 +
                                (C11530 + C11529) * C50774 * C10814 +
                                (C9136 + C9135) * C50774 * C10813 +
                                (C3465 + C3464) * C50774 * C10812) *
                                   C943) *
                                  C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C283 +
            (C18491 + C18492 + C18493) * C278 -
            (C15736 + C15735 + C15734) * C284 -
            (C15739 + C15738 + C15737) * C279 +
            (C15742 + C15741 + C15740) * C285 +
            (C15745 + C15744 + C15743) * C280) *
               C50774 * C50930) *
              C50843 * C51046 +
          (((C15734 + C15735 + C15736) * C284 -
            ((C18493 + C18492 + C18491) * C278 +
             (C18490 + C18489 + C18488) * C283) +
            (C15737 + C15738 + C15739) * C279 -
            (C15740 + C15741 + C15742) * C285 -
            (C15743 + C15744 + C15745) * C280) *
               C50774 * C51059 +
           ((C16088 + C16087 + C16086) * C284 -
            ((C15508 * C3448 + C15505 * C3452 + C15507 * C833 + C15504 * C842 +
              C15506 * C593 + C15503 * C602) *
                 C278 +
             (C15508 * C3443 + C15505 * C3449 + C15507 * C818 + C15504 * C834 +
              C15506 * C587 + C15503 * C592) *
                 C283) +
            (C16091 + C16090 + C16089) * C279 -
            (C15508 * C3441 + C15505 * C3445 + C15507 * C816 + C15504 * C830 +
             C15506 * C589 + C15503 * C596) *
                C285 -
            (C15508 * C3444 + C15505 * C3450 + C15507 * C829 + C15504 * C840 +
             C15506 * C597 + C15503 * C604) *
                C280) *
               C50774 * C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C696 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C50754) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C696 +
            (C18491 + C18492 + C18493) * C50754) *
               C50774 * C50930) *
              C50843 * C692 -
          (((C18798 + C18799 + C18800) * C50754 +
            (C18801 + C18802 + C18803) * C696) *
               C50774 * C50930 +
           ((C18493 + C18492 + C18491) * C50754 +
            (C18490 + C18489 + C18488) * C696) *
               C50774 * C51059) *
              C50843 * C693 +
          (((C18803 + C18802 + C18801) * C696 +
            (C18800 + C18799 + C18798) * C50754) *
               C50774 * C51059 +
           ((C18914 + C18915 + C18916) * C696 +
            (C18917 + C18918 + C18919) * C50754) *
               C50774 * C50930) *
              C50843 * C694 -
          (((C15508 * C11519 + C15505 * C11521 + C15507 * C8795 +
             C15504 * C8798 + C15506 * C2914 + C15503 * C2918) *
                C50754 +
            (C15508 * C11518 + C15505 * C11520 + C15507 * C8792 +
             C15504 * C8796 + C15506 * C2909 + C15503 * C2915) *
                C696) *
               C50774 * C50930 +
           ((C18919 + C18918 + C18917) * C50754 +
            (C18916 + C18915 + C18914) * C696) *
               C50774 * C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C50774 * C51059 +
            ((C18488 + C18489 + C18490) * C696 +
             (C18491 + C18492 + C18493) * C50754) *
                C50774 * C50930) *
               C941 -
           (((C19090 + C19091 + C19092) * C50754 +
             (C19093 + C19094 + C19095) * C696) *
                C50774 * C50930 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C50774 * C51059) *
               C942 +
           (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
              C15508 * C6451 + C15505 * C6457) *
                 C696 +
             (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
              C15508 * C6456 + C15505 * C6460) *
                 C50754) *
                C50774 * C51059 +
            ((C19406 + C19407 + C19408) * C696 +
             (C19409 + C19410 + C19411) * C50754) *
                C50774 * C50930) *
               C943) *
              C51046 +
          ((((C19095 + C19094 + C19093) * C696 +
             (C19092 + C19091 + C19090) * C50754) *
                C50774 * C51059 +
            ((C19096 + C19097 + C19098) * C696 +
             (C19099 + C19100 + C19101) * C50754) *
                C50774 * C50930) *
               C942 -
           (((C18798 + C18799 + C18800) * C50754 +
             (C18801 + C18802 + C18803) * C696) *
                C50774 * C50930 +
            ((C18493 + C18492 + C18491) * C50754 +
             (C18490 + C18489 + C18488) * C696) *
                C50774 * C51059) *
               C941 -
           (((C15508 * C13921 + C15505 * C13925 + C15507 * C9238 +
              C15504 * C9241 + C15506 * C3448 + C15503 * C3452) *
                 C50754 +
             (C15508 * C13919 + C15505 * C13922 + C15507 * C9235 +
              C15504 * C9239 + C15506 * C3443 + C15503 * C3449) *
                 C696) *
                C50774 * C50930 +
            ((C19411 + C19410 + C19409) * C50754 +
             (C19408 + C19407 + C19406) * C696) *
                C50774 * C51059) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50942 * C129) * C283 +
                 (C117 * C130 + C50942 * C143) * C278 - C171 * C284 -
                 C172 * C279 + C173 * C285 + C174 * C280) *
                    C2300 +
                (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
                 C175 * C285 + C176 * C280) *
                    C2301 +
                (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
                 C177 * C285 + C178 * C280) *
                    C2302) *
                   C51059 +
               ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
                (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
                (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
                   C50930) *
                  C51047 +
              (((C475 * C284 -
                 ((C117 * C441 + C50942 * C452) * C278 +
                  (C117 * C435 + C50942 * C442) * C283) +
                 C476 * C279 - C477 * C285 - C478 * C280) *
                    C2300 +
                (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
                 C479 * C285 - C480 * C280) *
                    C2301 +
                (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
                 C481 * C285 - C482 * C280) *
                    C2302) *
                   C51059 +
               ((C1540 * C284 -
                 ((C117 * C820 + C50942 * C835) * C278 +
                  (C117 * C811 + C50942 * C819) * C283) +
                 C1541 * C279 - C1542 * C285 - C1543 * C280) *
                    C2300 +
                (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
                 C1544 * C285 - C1545 * C280) *
                    C2301 +
                (C1544 * C284 - (C1543 * C278 + C1542 * C283) + C1545 * C279 -
                 (C117 * C1523 + C50942 * C1524) * C285 -
                 (C117 * C1525 + C50942 * C1526) * C280) *
                    C2302) *
                   C50930) *
                  C50855) *
             C50817 +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C122 + C50942 * C129) * C696 +
                  (C117 * C130 + C50942 * C143) * C50754) *
                     C2300 +
                 (C171 * C696 + C172 * C50754) * C2301 +
                 (C173 * C696 + C174 * C50754) * C2302) *
                    C51059 +
                ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
                 (C2924 + C2925) * C2302) *
                    C50930) *
                   C51047 -
               (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
                 (C3130 + C3131) * C2300) *
                    C50930 +
                ((C478 * C50754 + C477 * C696) * C2302 +
                 (C476 * C50754 + C475 * C696) * C2301 +
                 ((C117 * C441 + C50942 * C452) * C50754 +
                  (C117 * C435 + C50942 * C442) * C696) *
                     C2300) *
                    C51059) *
                   C50855) *
                  C582 +
              ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
                 (C3103 + C3102) * C2302) *
                    C51059 +
                ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
                 (C3136 + C3137) * C2302) *
                    C50930) *
                   C50855 -
               (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
                 (C2930 + C2931) * C2300) *
                    C50930 +
                ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
                 (C2921 + C2920) * C2300) *
                    C51059) *
                   C51047) *
                  C583 +
              ((((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
                 (C2927 + C2926) * C2302) *
                    C51059 +
                ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
                 (C2938 + C2939) * C2302) *
                    C50930) *
                   C51047 -
               ((((C117 * C3092 + C50942 * C3098) * C50754 +
                  (C117 * C3089 + C50942 * C3093) * C696) *
                     C2302 +
                 ((C117 * C3094 + C50942 * C3099) * C50754 +
                  (C117 * C3090 + C50942 * C3095) * C696) *
                     C2301 +
                 ((C117 * C3096 + C50942 * C3100) * C50754 +
                  (C117 * C3091 + C50942 * C3097) * C696) *
                     C2300) *
                    C50930 +
                ((C3137 + C3136) * C2302 + (C3135 + C3134) * C2301 +
                 (C3133 + C3132) * C2300) *
                    C51059) *
                   C50855) *
                  C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C2300 +
            (C171 * C696 + C172 * C50754) * C2301 +
            (C173 * C696 + C174 * C50754) * C2302) *
               C51059 +
           ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
            (C2924 + C2925) * C2302) *
               C50930) *
              C1162 -
          (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
            (C3130 + C3131) * C2300) *
               C50930 +
           ((C478 * C50754 + C477 * C696) * C2302 +
            (C476 * C50754 + C475 * C696) * C2301 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C2300) *
               C51059) *
              C1163 +
          ((((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C2300 +
            (C977 * C696 + C978 * C50754) * C2301 +
            (C979 * C696 + C980 * C50754) * C2302) *
               C51059 +
           ((C3464 + C3465) * C2300 + (C3458 + C3459) * C2301 +
            (C3460 + C3461) * C2302) *
               C50930) *
              C1164 -
          ((((C117 * C3566 + C50942 * C3572) * C50754 +
             (C117 * C3563 + C50942 * C3567) * C696) *
                C2302 +
            ((C117 * C3568 + C50942 * C3573) * C50754 +
             (C117 * C3564 + C50942 * C3569) * C696) *
                C2301 +
            ((C117 * C3570 + C50942 * C3574) * C50754 +
             (C117 * C3565 + C50942 * C3571) * C696) *
                C2300) *
               C50930 +
           (((C117 * C1172 + C50942 * C1179) * C50754 +
             (C117 * C1167 + C50942 * C1173) * C696) *
                C2302 +
            ((C117 * C1174 + C50942 * C1180) * C50754 +
             (C117 * C1168 + C50942 * C1175) * C696) *
                C2301 +
            ((C117 * C1176 + C50942 * C1181) * C50754 +
             (C117 * C1169 + C50942 * C1177) * C696) *
                C2300) *
               C51059) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C50774 * C10812 +
           (C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
            C1542 * C285 - C1543 * C280) *
               C50774 * C10813 +
           (C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
            C3128 * C285 - C3129 * C280) *
               C50774 * C10814 +
           (C8814 * C284 - (C8813 * C278 + C8812 * C283) + C8815 * C279 -
            (C117 * C3089 + C50942 * C3093) * C285 -
            (C117 * C3092 + C50942 * C3098) * C280) *
               C50774 * C10815) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C50774 * C10812 +
            (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
            C11204 * C10815) *
               C51047 -
           (C11318 * C10815 + C11313 * C10814 +
            (C3130 + C3131) * C50774 * C10813 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C50774 * C10812) *
               C50855) *
              C582 +
          (((C3131 + C3130) * C50774 * C10812 +
            (C3132 + C3133) * C50774 * C10813 +
            (C8817 + C8818) * C50774 * C10814 +
            (C11321 + C11322) * C50774 * C10815) *
               C50855 -
           (C11205 * C10815 + C11199 * C10814 +
            (C2930 + C2931) * C50774 * C10813 +
            (C2921 + C2920) * C50774 * C10812) *
               C51047) *
              C583 +
          ((C11196 * C10812 + C11204 * C10813 +
            (C8644 + C8645) * C50774 * C10814 +
            (C11208 + C11209) * C50774 * C10815) *
               C51047 -
           (((C117 * C11308 + C50942 * C11310) * C50754 +
             (C117 * C11307 + C50942 * C11309) * C696) *
                C50774 * C10815 +
            (C11322 + C11321) * C50774 * C10814 + C11318 * C10813 +
            C11313 * C10812) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C50774 * C10812 +
           (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
           C11204 * C10815) *
              C1162 -
          (C11318 * C10815 + C11313 * C10814 +
           (C3130 + C3131) * C50774 * C10813 +
           ((C117 * C441 + C50942 * C452) * C50754 +
            (C117 * C435 + C50942 * C442) * C696) *
               C50774 * C10812) *
              C1163 +
          (((C117 * C944 + C50942 * C949) * C696 +
            (C117 * C950 + C50942 * C959) * C50754) *
               C50774 * C10812 +
           (C3464 + C3465) * C50774 * C10813 +
           (C9135 + C9136) * C50774 * C10814 +
           (C11529 + C11530) * C50774 * C10815) *
              C1164 -
          (((C117 * C11597 + C50942 * C11599) * C50754 +
            (C117 * C11596 + C50942 * C11598) * C696) *
               C50774 * C10815 +
           ((C117 * C9238 + C50942 * C9241) * C50754 +
            (C117 * C9235 + C50942 * C9239) * C696) *
               C50774 * C10814 +
           ((C117 * C3570 + C50942 * C3574) * C50754 +
            (C117 * C3565 + C50942 * C3571) * C696) *
               C50774 * C10813 +
           ((C117 * C1176 + C50942 * C1181) * C50754 +
            (C117 * C1169 + C50942 * C1177) * C696) *
               C50774 * C10812) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C283 +
            (C18491 + C18492 + C18493) * C278 -
            (C15736 + C15735 + C15734) * C284 -
            (C15739 + C15738 + C15737) * C279 +
            (C15742 + C15741 + C15740) * C285 +
            (C15745 + C15744 + C15743) * C280) *
               C50774 * C50930) *
              C51047 +
          (((C15916 + C15917 + C15918) * C284 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C278 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C283) +
            (C15919 + C15920 + C15921) * C279 -
            (C15922 + C15923 + C15924) * C285 -
            (C15925 + C15926 + C15927) * C280) *
               C50774 * C51059 +
           ((C17256 + C17255 + C17254) * C284 -
            ((C15508 * C3570 + C15505 * C3574 + C15507 * C1090 +
              C15504 * C1095 + C15506 * C820 + C15503 * C835) *
                 C278 +
             (C15508 * C3565 + C15505 * C3571 + C15507 * C1083 +
              C15504 * C1091 + C15506 * C811 + C15503 * C819) *
                 C283) +
            (C17259 + C17258 + C17257) * C279 -
            (C15508 * C3563 + C15505 * C3567 + C15507 * C1081 + C15504 * C1087 +
             C15506 * C813 + C15503 * C823) *
                C285 -
            (C15508 * C3566 + C15505 * C3572 + C15507 * C1086 + C15504 * C1093 +
             C15506 * C824 + C15503 * C837) *
                C280) *
               C50774 * C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C50774 * C51059 +
            ((C18488 + C18489 + C18490) * C696 +
             (C18491 + C18492 + C18493) * C50754) *
                C50774 * C50930) *
               C51047 -
           (((C19090 + C19091 + C19092) * C50754 +
             (C19093 + C19094 + C19095) * C696) *
                C50774 * C50930 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C50774 * C51059) *
               C50855) *
              C582 +
          ((((C19095 + C19094 + C19093) * C696 +
             (C19092 + C19091 + C19090) * C50754) *
                C50774 * C51059 +
            ((C19096 + C19097 + C19098) * C696 +
             (C19099 + C19100 + C19101) * C50754) *
                C50774 * C50930) *
               C50855 -
           (((C18798 + C18799 + C18800) * C50754 +
             (C18801 + C18802 + C18803) * C696) *
                C50774 * C50930 +
            ((C18493 + C18492 + C18491) * C50754 +
             (C18490 + C18489 + C18488) * C696) *
                C50774 * C51059) *
               C51047) *
              C583 +
          ((((C18803 + C18802 + C18801) * C696 +
             (C18800 + C18799 + C18798) * C50754) *
                C50774 * C51059 +
            ((C18914 + C18915 + C18916) * C696 +
             (C18917 + C18918 + C18919) * C50754) *
                C50774 * C50930) *
               C51047 -
           (((C15508 * C11597 + C15505 * C11599 + C15507 * C9122 +
              C15504 * C9125 + C15506 * C3096 + C15503 * C3100) *
                 C50754 +
             (C15508 * C11596 + C15505 * C11598 + C15507 * C9119 +
              C15504 * C9123 + C15506 * C3091 + C15503 * C3097) *
                 C696) *
                C50774 * C50930 +
            ((C19101 + C19100 + C19099) * C50754 +
             (C19098 + C19097 + C19096) * C696) *
                C50774 * C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C696 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C50754) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C696 +
            (C18491 + C18492 + C18493) * C50754) *
               C50774 * C50930) *
              C1162 -
          (((C19090 + C19091 + C19092) * C50754 +
            (C19093 + C19094 + C19095) * C696) *
               C50774 * C50930 +
           ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
             C15506 * C441 + C15503 * C452) *
                C50754 +
            (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
             C15506 * C435 + C15503 * C442) *
                C696) *
               C50774 * C51059) *
              C1163 +
          (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
             C15508 * C6451 + C15505 * C6457) *
                C696 +
            (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
             C15508 * C6456 + C15505 * C6460) *
                C50754) *
               C50774 * C51059 +
           ((C19406 + C19407 + C19408) * C696 +
            (C19409 + C19410 + C19411) * C50754) *
               C50774 * C50930) *
              C1164 -
          (((C15508 * C19510 + C15505 * C19512 + C15507 * C13923 +
             C15504 * C13926 + C15506 * C3570 + C15503 * C3574) *
                C50754 +
            (C15508 * C19509 + C15505 * C19511 + C15507 * C13920 +
             C15504 * C13924 + C15506 * C3565 + C15503 * C3571) *
                C696) *
               C50774 * C50930 +
           ((C15508 * C16751 + C15505 * C16754 + C15507 * C6456 +
             C15504 * C6460 + C15506 * C1176 + C15503 * C1181) *
                C50754 +
            (C15508 * C16748 + C15505 * C16752 + C15507 * C6451 +
             C15504 * C6457 + C15506 * C1169 + C15503 * C1177) *
                C696) *
               C50774 * C51059) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1285 +
            (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
            C172 * C51073 + C173 * C1287 + C174 * C1282) *
               C50774 * C10812 +
           (C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C50774 * C10813 +
           (C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C50774 * C10814 +
           (C11699 + C11700 - C11701 - C11702 + C11703 + C11704) * C50774 *
               C10815) *
              C1643 +
          ((C475 * C1286 -
            ((C117 * C441 + C50942 * C452) * C51089 +
             (C117 * C435 + C50942 * C442) * C1285) +
            C476 * C51073 - C477 * C1287 - C478 * C1282) *
               C50774 * C10812 +
           (C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) + C1541 * C51073 -
            C1542 * C1287 - C1543 * C1282) *
               C50774 * C10813 +
           (C3126 * C1286 - (C3125 * C51089 + C3124 * C1285) + C3127 * C51073 -
            C3128 * C1287 - C3129 * C1282) *
               C50774 * C10814 +
           (C8814 * C1286 - (C8813 * C51089 + C8812 * C1285) + C8815 * C51073 -
            (C117 * C3089 + C50942 * C3093) * C1287 -
            (C117 * C3092 + C50942 * C3098) * C1282) *
               C50774 * C10815) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C2300 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C2301 +
            (C173 * C1285 + C174 * C51089 - C175 * C1286 - C176 * C51073 +
             C177 * C1287 + C178 * C1282) *
                C2302) *
               C51059 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C2300 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C2301 +
            (C3734 + C3735 - C3736 - C3737 + C3738 + C3739) * C2302) *
               C50930) *
              C1643 +
          (((C475 * C1286 -
             ((C117 * C441 + C50942 * C452) * C51089 +
              (C117 * C435 + C50942 * C442) * C1285) +
             C476 * C51073 - C477 * C1287 - C478 * C1282) *
                C2300 +
            (C477 * C1286 - (C476 * C51089 + C475 * C1285) + C478 * C51073 -
             C479 * C1287 - C480 * C1282) *
                C2301 +
            (C479 * C1286 - (C478 * C51089 + C477 * C1285) + C480 * C51073 -
             C481 * C1287 - C482 * C1282) *
                C2302) *
               C51059 +
           ((C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) + C1541 * C51073 -
             C1542 * C1287 - C1543 * C1282) *
                C2300 +
            (C1542 * C1286 - (C1541 * C51089 + C1540 * C1285) + C1543 * C51073 -
             C1544 * C1287 - C1545 * C1282) *
                C2301 +
            (C1544 * C1286 - (C1543 * C51089 + C1542 * C1285) + C1545 * C51073 -
             (C117 * C1523 + C50942 * C1524) * C1287 -
             (C117 * C1525 + C50942 * C1526) * C1282) *
                C2302) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1285 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51089 -
            (C15546 + C15547 + C15548) * C1286 -
            (C15549 + C15550 + C15551) * C51073 +
            (C15552 + C15553 + C15554) * C1287 +
            (C15555 + C15556 + C15557) * C1282) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C1285 +
            (C18491 + C18492 + C18493) * C51089 -
            (C15736 + C15735 + C15734) * C1286 -
            (C15739 + C15738 + C15737) * C51073 +
            (C15742 + C15741 + C15740) * C1287 +
            (C15745 + C15744 + C15743) * C1282) *
               C50774 * C50930) *
              C1643 +
          (((C15916 + C15917 + C15918) * C1286 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C51089 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C1285) +
            (C15919 + C15920 + C15921) * C51073 -
            (C15922 + C15923 + C15924) * C1287 -
            (C15925 + C15926 + C15927) * C1282) *
               C50774 * C51059 +
           ((C17256 + C17255 + C17254) * C1286 -
            ((C19090 + C19091 + C19092) * C51089 +
             (C19093 + C19094 + C19095) * C1285) +
            (C17259 + C17258 + C17257) * C51073 -
            (C15508 * C3563 + C15505 * C3567 + C15507 * C1081 + C15504 * C1087 +
             C15506 * C813 + C15503 * C823) *
                C1287 -
            (C15508 * C3566 + C15505 * C3572 + C15507 * C1086 + C15504 * C1093 +
             C15506 * C824 + C15503 * C837) *
                C1282) *
               C50774 * C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C50774 * C10812 +
            (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 +
            C11803 * C10814 + C11811 * C10815) *
               C1643 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C50774 * C10812 +
            (C4104 - (C4105 + C4106) + C4107) * C50774 * C10813 +
            (C9758 - (C9759 + C9760) + C9761) * C50774 * C10814 +
            (C11942 - (C11943 + C11944) + C11945) * C50774 * C10815) *
               C50855) *
              C51046 +
          (((C3888 - (C3887 + C3886) + C3889) * C50774 * C10812 +
            (C3898 - (C3899 + C3900) + C3901) * C50774 * C10813 +
            (C9549 - (C9550 + C9551) + C9552) * C50774 * C10814 +
            (C11805 - (C11806 + C11807) + C11808) * C50774 * C10815) *
               C1643 +
           ((C4106 + C4105 - C4104 - C4107) * C50774 * C10812 +
            (C9760 + C9759 - C9758 - C9761) * C50774 * C10813 +
            (C11944 + C11943 - C11942 - C11945) * C50774 * C10814 +
            (C11319 * C1391 + C11320 * C1386 -
             (C117 * C8791 + C50942 * C8794) * C1392 -
             (C117 * C8793 + C50942 * C8797) * C50759) *
                C50774 * C10815) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C2300 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C2301 +
             (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                 C2302) *
                C51059 +
            ((C3886 + C3887 - C3888 - C3889) * C2300 +
             (C3890 + C3891 - C3892 - C3893) * C2301 +
             (C3894 + C3895 - C3896 - C3897) * C2302) *
                C50930) *
               C1643 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C2300 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C2301 +
             (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                 C2302) *
                C51059 +
            ((C4104 - (C4105 + C4106) + C4107) * C2300 +
             (C4108 - (C4109 + C4110) + C4111) * C2301 +
             (C4112 - (C4113 + C4114) + C4115) * C2302) *
                C50930) *
               C50855) *
              C51046 +
          ((((C3888 - (C3887 + C3886) + C3889) * C2300 +
             (C3892 - (C3891 + C3890) + C3893) * C2301 +
             (C3896 - (C3895 + C3894) + C3897) * C2302) *
                C51059 +
            ((C3898 - (C3899 + C3900) + C3901) * C2300 +
             (C3902 - (C3903 + C3904) + C3905) * C2301 +
             (C3906 - (C3907 + C3908) + C3909) * C2302) *
                C50930) *
               C1643 +
           (((C4106 + C4105 - C4104 - C4107) * C2300 +
             (C4110 + C4109 - C4108 - C4111) * C2301 +
             (C4114 + C4113 - C4112 - C4115) * C2302) *
                C51059 +
            ((C3124 * C1391 + C3125 * C1386 - C3126 * C1392 - C3127 * C50759) *
                 C2300 +
             (C3126 * C1391 + C3127 * C1386 - C3128 * C1392 - C3129 * C50759) *
                 C2301 +
             (C3128 * C1391 + C3129 * C1386 -
              (C117 * C815 + C50942 * C828) * C1392 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C2302) *
                C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C1391 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C1386 -
             (C15546 + C15547 + C15548) * C1392 -
             (C15549 + C15550 + C15551) * C50759) *
                C50774 * C51059 +
            ((C18488 + C18489 + C18490) * C1391 +
             (C18491 + C18492 + C18493) * C1386 -
             (C15736 + C15735 + C15734) * C1392 -
             (C15739 + C15738 + C15737) * C50759) *
                C50774 * C50930) *
               C1643 +
           (((C15916 + C15917 + C15918) * C1392 -
             ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
               C15506 * C441 + C15503 * C452) *
                  C1386 +
              (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
               C15506 * C435 + C15503 * C442) *
                  C1391) +
             (C15919 + C15920 + C15921) * C50759) *
                C50774 * C51059 +
            ((C17256 + C17255 + C17254) * C1392 -
             ((C19090 + C19091 + C19092) * C1386 +
              (C19093 + C19094 + C19095) * C1391) +
             (C17259 + C17258 + C17257) * C50759) *
                C50774 * C50930) *
               C50855) *
              C51046 +
          ((((C15734 + C15735 + C15736) * C1392 -
             ((C18493 + C18492 + C18491) * C1386 +
              (C18490 + C18489 + C18488) * C1391) +
             (C15737 + C15738 + C15739) * C50759) *
                C50774 * C51059 +
            ((C16088 + C16087 + C16086) * C1392 -
             ((C18798 + C18799 + C18800) * C1386 +
              (C18801 + C18802 + C18803) * C1391) +
             (C16091 + C16090 + C16089) * C50759) *
                C50774 * C50930) *
               C1643 +
           (((C19095 + C19094 + C19093) * C1391 +
             (C19092 + C19091 + C19090) * C1386 -
             (C17254 + C17255 + C17256) * C1392 -
             (C17257 + C17258 + C17259) * C50759) *
                C50774 * C51059 +
            ((C19096 + C19097 + C19098) * C1391 +
             (C19099 + C19100 + C19101) * C1386 -
             (C15508 * C9234 + C15505 * C9237 + C15507 * C3442 +
              C15504 * C3447 + C15506 * C817 + C15503 * C832) *
                 C1392 -
             (C15508 * C9236 + C15505 * C9240 + C15507 * C3446 +
              C15504 * C3451 + C15506 * C831 + C15503 * C841) *
                 C50759) *
                C50774 * C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C50774 * C10812 +
           (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 + C11803 * C10814 +
           C11811 * C10815) *
              C51092 +
          ((C475 * C1392 -
            ((C117 * C441 + C50942 * C452) * C1386 +
             (C117 * C435 + C50942 * C442) * C1391) +
            C476 * C50759) *
               C50774 * C10812 +
           (C4104 - (C4105 + C4106) + C4107) * C50774 * C10813 +
           (C9758 - (C9759 + C9760) + C9761) * C50774 * C10814 +
           (C11942 - (C11943 + C11944) + C11945) * C50774 * C10815) *
              C51082 +
          (((C117 * C944 + C50942 * C949) * C1391 +
            (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
            C978 * C50759) *
               C50774 * C10812 +
           (C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
               C50774 * C10813 +
           (C9133 * C1391 + C9134 * C1386 - C8971 * C1392 - C8972 * C50759) *
               C50774 * C10814 +
           (C11527 * C1391 + C11528 * C1386 -
            (C117 * C9118 + C50942 * C9121) * C1392 -
            (C117 * C9120 + C50942 * C9124) * C50759) *
               C50774 * C10815) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C2300 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C2301 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C3886 + C3887 - C3888 - C3889) * C2300 +
            (C3890 + C3891 - C3892 - C3893) * C2301 +
            (C3894 + C3895 - C3896 - C3897) * C2302) *
               C50930) *
              C51092 +
          (((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C2300 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C2301 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C2302) *
               C51059 +
           ((C4104 - (C4105 + C4106) + C4107) * C2300 +
            (C4108 - (C4109 + C4110) + C4111) * C2301 +
            (C4112 - (C4113 + C4114) + C4115) * C2302) *
               C50930) *
              C51082 +
          ((((C117 * C944 + C50942 * C949) * C1391 +
             (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
             C978 * C50759) *
                C2300 +
            (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) *
                C2301 +
            (C979 * C1391 + C980 * C1386 - C981 * C1392 - C982 * C50759) *
                C2302) *
               C51059 +
           ((C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
                C2300 +
            (C3292 * C1391 + C3293 * C1386 - C3294 * C1392 - C3295 * C50759) *
                C2301 +
            (C3294 * C1391 + C3295 * C1386 -
             (C117 * C1080 + C50942 * C1085) * C1392 -
             (C117 * C1084 + C50942 * C1092) * C50759) *
                C2302) *
               C50930) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C1391 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C1386 -
            (C15546 + C15547 + C15548) * C1392 -
            (C15549 + C15550 + C15551) * C50759) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C1391 +
            (C18491 + C18492 + C18493) * C1386 -
            (C15736 + C15735 + C15734) * C1392 -
            (C15739 + C15738 + C15737) * C50759) *
               C50774 * C50930) *
              C51092 +
          (((C15916 + C15917 + C15918) * C1392 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C1386 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C1391) +
            (C15919 + C15920 + C15921) * C50759) *
               C50774 * C51059 +
           ((C17256 + C17255 + C17254) * C1392 -
            ((C19090 + C19091 + C19092) * C1386 +
             (C19093 + C19094 + C19095) * C1391) +
            (C17259 + C17258 + C17257) * C50759) *
               C50774 * C50930) *
              C51082 +
          (((C15506 * C944 + C15503 * C949 + C15507 * C1169 + C15504 * C1177 +
             C15508 * C6451 + C15505 * C6457) *
                C1391 +
            (C15506 * C950 + C15503 * C959 + C15507 * C1176 + C15504 * C1181 +
             C15508 * C6456 + C15505 * C6460) *
                C1386 -
            (C16494 + C16495 + C16496) * C1392 -
            (C16497 + C16498 + C16499) * C50759) *
               C50774 * C51059 +
           ((C19406 + C19407 + C19408) * C1391 +
            (C19409 + C19410 + C19411) * C1386 -
            (C15508 * C16645 + C15505 * C16647 + C15507 * C3564 +
             C15504 * C3569 + C15506 * C1082 + C15503 * C1089) *
                C1392 -
            (C15508 * C16646 + C15505 * C16648 + C15507 * C3568 +
             C15504 * C3573 + C15506 * C1088 + C15503 * C1094) *
                C50759) *
               C50774 * C50930) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C2300 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C2301 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C2768 + C2769 - C2770 - C2771) * C2300 +
            (C2772 + C2773 - C2774 - C2775) * C2301 +
            (C2776 + C2777 - C2778 - C2779) * C2302) *
               C50930) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C2300 +
            (C2774 - (C2773 + C2772) + C2775) * C2301 +
            (C2778 - (C2777 + C2776) + C2779) * C2302) *
               C51059 +
           ((C2780 - (C2808 + C2809) + C2785) * C2300 +
            (C2786 - (C2787 + C2788) + C2789) * C2301 +
            (C2790 - (C2791 + C2792) + C2793) * C2302) *
               C50930) *
              C50843 * C583 +
          (((C2809 + C2808 - C2780 - C2785) * C2300 +
            (C2788 + C2787 - C2786 - C2789) * C2301 +
            (C2792 + C2791 - C2790 - C2793) * C2302) *
               C51059 +
           (((C117 * C700 + C50942 * C708) * C49770 +
             (C117 * C707 + C50942 * C712) * C51031 - C2804 * C49763 -
             C2805 * C50759) *
                C2300 +
            (C2804 * C49770 + C2805 * C51031 - C2806 * C49763 -
             C2807 * C50759) *
                C2301 +
            (C2806 * C49770 + C2807 * C51031 -
             (C117 * C697 + C50942 * C702) * C49763 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C2302) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C2300 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C2301 +
           (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
            C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
               C2302) *
              C51059 +
          (((C117 * C287 + C50942 * C294) * C118 +
            (C117 * C293 + C50942 * C304) * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C2300 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C2301 +
           (C329 * C118 + C330 * C106 - C331 * C119 - C332 * C107 +
            C333 * C120 + C334 * C108 - (C117 * C291 + C50942 * C302) * C121 -
            (C117 * C303 + C50942 * C309) * C109) *
               C2302) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C50774 * C10812 +
          (C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
           C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
              C50774 * C10813 +
          (C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
           C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
              C50774 * C10814 +
          (C2940 * C118 + C2941 * C106 - C2804 * C119 - C2805 * C107 +
           C2806 * C120 + C2807 * C108 - (C117 * C697 + C50942 * C702) * C121 -
           (C117 * C701 + C50942 * C709) * C109) *
              C50774 * C10815) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C50774 * C10812 +
           (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 + C11117 * C10814 +
           C11125 * C10815) *
              C50843 * C582 +
          ((C2770 - (C2769 + C2768) + C2771) * C50774 * C10812 +
           (C2780 - (C2808 + C2809) + C2785) * C50774 * C10813 +
           (C8499 - (C8500 + C8501) + C8502) * C50774 * C10814 +
           (C11119 - (C11120 + C11121) + C11122) * C50774 * C10815) *
              C50843 * C583 +
          (C11117 * C10812 + C11125 * C10813 +
           (C11121 + C11120 - C11119 - C11122) * C50774 * C10814 +
           ((C117 * C8618 + C50942 * C8622) * C49770 +
            (C117 * C8621 + C50942 * C8624) * C51031 -
            (C117 * C8617 + C50942 * C8620) * C49763 -
            (C117 * C8619 + C50942 * C8623) * C50759) *
               C50774 * C10815) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
            C15508 * C944 + C15505 * C949) *
               C118 +
           (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
            C15508 * C950 + C15505 * C959) *
               C106 -
           (C15546 + C15547 + C15548) * C119 -
           (C15549 + C15550 + C15551) * C107 +
           (C15552 + C15553 + C15554) * C120 +
           (C15555 + C15556 + C15557) * C108 -
           (C15558 + C15559 + C15560) * C121 -
           (C15561 + C15562 + C15563) * C109) *
              C50774 * C51059 +
          ((C15506 * C287 + C15503 * C294 + C15507 * C811 + C15504 * C819 +
            C15508 * C1083 + C15505 * C1091) *
               C118 +
           (C15506 * C293 + C15503 * C304 + C15507 * C820 + C15504 * C835 +
            C15508 * C1090 + C15505 * C1095) *
               C106 -
           (C15736 + C15735 + C15734) * C119 -
           (C15739 + C15738 + C15737) * C107 +
           (C15742 + C15741 + C15740) * C120 +
           (C15745 + C15744 + C15743) * C108 -
           (C15508 * C1080 + C15505 * C1085 + C15507 * C814 + C15504 * C825 +
            C15506 * C289 + C15503 * C298) *
               C121 -
           (C15508 * C1084 + C15505 * C1092 + C15507 * C826 + C15504 * C838 +
            C15506 * C299 + C15503 * C307) *
               C109) *
              C50774 * C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C49770 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C51031 -
            (C15546 + C15547 + C15548) * C49763 -
            (C15549 + C15550 + C15551) * C50759) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C49770 +
            (C18491 + C18492 + C18493) * C51031 -
            (C15736 + C15735 + C15734) * C49763 -
            (C15739 + C15738 + C15737) * C50759) *
               C50774 * C50930) *
              C50843 * C582 +
          (((C15734 + C15735 + C15736) * C49763 -
            ((C18493 + C18492 + C18491) * C51031 +
             (C18490 + C18489 + C18488) * C49770) +
            (C15737 + C15738 + C15739) * C50759) *
               C50774 * C51059 +
           ((C16088 + C16087 + C16086) * C49763 -
            ((C18798 + C18799 + C18800) * C51031 +
             (C18801 + C18802 + C18803) * C49770) +
            (C16091 + C16090 + C16089) * C50759) *
               C50774 * C50930) *
              C50843 * C583 +
          (((C18803 + C18802 + C18801) * C49770 +
            (C18800 + C18799 + C18798) * C51031 -
            (C16086 + C16087 + C16088) * C49763 -
            (C16089 + C16090 + C16091) * C50759) *
               C50774 * C51059 +
           ((C15506 * C700 + C15503 * C708 + C15507 * C3091 + C15504 * C3097 +
             C15508 * C9119 + C15505 * C9123) *
                C49770 +
            (C15506 * C707 + C15503 * C712 + C15507 * C3096 + C15504 * C3100 +
             C15508 * C9122 + C15505 * C9125) *
                C51031 -
            (C15508 * C9118 + C15505 * C9121 + C15507 * C3090 + C15504 * C3095 +
             C15506 * C699 + C15503 * C706) *
                C49763 -
            (C15508 * C9120 + C15505 * C9124 + C15507 * C3094 + C15504 * C3099 +
             C15506 * C705 + C15503 * C711) *
                C50759) *
               C50774 * C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C2300 +
            (C171 * C696 + C172 * C50754) * C2301 +
            (C173 * C696 + C174 * C50754) * C2302) *
               C51059 +
           ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
            (C2924 + C2925) * C2302) *
               C50930) *
              C50843 * C692 -
          (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
            (C2930 + C2931) * C2300) *
               C50930 +
           ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
            (C2921 + C2920) * C2300) *
               C51059) *
              C50843 * C693 +
          (((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
            (C2927 + C2926) * C2302) *
               C51059 +
           ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
            (C2938 + C2939) * C2302) *
               C50930) *
              C50843 * C694 -
          ((((C117 * C2910 + C50942 * C2916) * C50754 +
             (C117 * C2907 + C50942 * C2911) * C696) *
                C2302 +
            ((C117 * C2912 + C50942 * C2917) * C50754 +
             (C117 * C2908 + C50942 * C2913) * C696) *
                C2301 +
            ((C117 * C2914 + C50942 * C2918) * C50754 +
             (C117 * C2909 + C50942 * C2915) * C696) *
                C2300) *
               C50930 +
           ((C2939 + C2938) * C2302 + (C2937 + C2936) * C2301 +
            (C2943 + C2942) * C2300) *
               C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C2300 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C2301 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C2302) *
               C51059 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
               C50930) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C2300 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C2301 +
            (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471) * C2302) *
               C51059 +
           ((C620 * C284 -
             ((C117 * C593 + C50942 * C602) * C278 +
              (C117 * C587 + C50942 * C592) * C283) +
             C621 * C279 - C622 * C285 - C623 * C280) *
                C2300 +
            (C622 * C284 - (C621 * C278 + C620 * C283) + C623 * C279 -
             C624 * C285 - C625 * C280) *
                C2301 +
            (C624 * C284 - (C623 * C278 + C622 * C283) + C625 * C279 -
             (C117 * C591 + C50942 * C600) * C285 -
             (C117 * C601 + C50942 * C606) * C280) *
                C2302) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C50843 * C51046 +
          ((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C50774 * C10812 +
           (C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C50774 * C10813 +
           (C10917 - (C10916 + C10915) + C10918 - C10919 - C10920) * C50774 *
               C10814 +
           (C8513 * C284 - (C8641 * C278 + C8640 * C283) + C8514 * C279 -
            (C117 * C2907 + C50942 * C2911) * C285 -
            (C117 * C2910 + C50942 * C2916) * C280) *
               C50774 * C10815) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C50774 * C10812 +
           (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
           C11204 * C10815) *
              C50843 * C692 -
          (C11205 * C10815 + C11199 * C10814 +
           (C2930 + C2931) * C50774 * C10813 +
           (C2921 + C2920) * C50774 * C10812) *
              C50843 * C693 +
          (C11196 * C10812 + C11204 * C10813 +
           (C8644 + C8645) * C50774 * C10814 +
           (C11208 + C11209) * C50774 * C10815) *
              C50843 * C694 -
          (((C117 * C11192 + C50942 * C11194) * C50754 +
            (C117 * C11191 + C50942 * C11193) * C696) *
               C50774 * C10815 +
           (C11209 + C11208) * C50774 * C10814 + C11205 * C10813 +
           C11199 * C10812) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C283 +
            (C18491 + C18492 + C18493) * C278 -
            (C15736 + C15735 + C15734) * C284 -
            (C15739 + C15738 + C15737) * C279 +
            (C15742 + C15741 + C15740) * C285 +
            (C15745 + C15744 + C15743) * C280) *
               C50774 * C50930) *
              C50843 * C51046 +
          (((C15734 + C15735 + C15736) * C284 -
            ((C18493 + C18492 + C18491) * C278 +
             (C18490 + C18489 + C18488) * C283) +
            (C15737 + C15738 + C15739) * C279 -
            (C15740 + C15741 + C15742) * C285 -
            (C15743 + C15744 + C15745) * C280) *
               C50774 * C51059 +
           ((C16088 + C16087 + C16086) * C284 -
            ((C15508 * C3448 + C15505 * C3452 + C15507 * C833 + C15504 * C842 +
              C15506 * C593 + C15503 * C602) *
                 C278 +
             (C15508 * C3443 + C15505 * C3449 + C15507 * C818 + C15504 * C834 +
              C15506 * C587 + C15503 * C592) *
                 C283) +
            (C16091 + C16090 + C16089) * C279 -
            (C15508 * C3441 + C15505 * C3445 + C15507 * C816 + C15504 * C830 +
             C15506 * C589 + C15503 * C596) *
                C285 -
            (C15508 * C3444 + C15505 * C3450 + C15507 * C829 + C15504 * C840 +
             C15506 * C597 + C15503 * C604) *
                C280) *
               C50774 * C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C696 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C50754) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C696 +
            (C18491 + C18492 + C18493) * C50754) *
               C50774 * C50930) *
              C50843 * C692 -
          (((C18798 + C18799 + C18800) * C50754 +
            (C18801 + C18802 + C18803) * C696) *
               C50774 * C50930 +
           ((C18493 + C18492 + C18491) * C50754 +
            (C18490 + C18489 + C18488) * C696) *
               C50774 * C51059) *
              C50843 * C693 +
          (((C18803 + C18802 + C18801) * C696 +
            (C18800 + C18799 + C18798) * C50754) *
               C50774 * C51059 +
           ((C18914 + C18915 + C18916) * C696 +
            (C18917 + C18918 + C18919) * C50754) *
               C50774 * C50930) *
              C50843 * C694 -
          (((C15508 * C11519 + C15505 * C11521 + C15507 * C8795 +
             C15504 * C8798 + C15506 * C2914 + C15503 * C2918) *
                C50754 +
            (C15508 * C11518 + C15505 * C11520 + C15507 * C8792 +
             C15504 * C8796 + C15506 * C2909 + C15503 * C2915) *
                C696) *
               C50774 * C50930 +
           ((C18919 + C18918 + C18917) * C50754 +
            (C18916 + C18915 + C18914) * C696) *
               C50774 * C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C2300 +
             (C171 * C696 + C172 * C50754) * C2301 +
             (C173 * C696 + C174 * C50754) * C2302) *
                C51059 +
            ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
             (C2924 + C2925) * C2302) *
                C50930) *
               C51047 -
           (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
             (C3130 + C3131) * C2300) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C2302 +
             (C476 * C50754 + C475 * C696) * C2301 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C2300) *
                C51059) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
             (C3103 + C3102) * C2302) *
                C51059 +
            ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
             (C3136 + C3137) * C2302) *
                C50930) *
               C50855 -
           (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
             (C2930 + C2931) * C2300) *
                C50930 +
            ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
             (C2921 + C2920) * C2300) *
                C51059) *
               C51047) *
              C583 +
          ((((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
             (C2927 + C2926) * C2302) *
                C51059 +
            ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
             (C2938 + C2939) * C2302) *
                C50930) *
               C51047 -
           ((((C117 * C3092 + C50942 * C3098) * C50754 +
              (C117 * C3089 + C50942 * C3093) * C696) *
                 C2302 +
             ((C117 * C3094 + C50942 * C3099) * C50754 +
              (C117 * C3090 + C50942 * C3095) * C696) *
                 C2301 +
             ((C117 * C3096 + C50942 * C3100) * C50754 +
              (C117 * C3091 + C50942 * C3097) * C696) *
                 C2300) *
                C50930 +
            ((C3137 + C3136) * C2302 + (C3135 + C3134) * C2301 +
             (C3133 + C3132) * C2300) *
                C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C2300 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C2301 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C2302) *
               C51059 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
               C50930) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C2300 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C2301 +
            (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
             C481 * C285 - C482 * C280) *
                C2302) *
               C51059 +
           ((C1540 * C284 -
             ((C117 * C820 + C50942 * C835) * C278 +
              (C117 * C811 + C50942 * C819) * C283) +
             C1541 * C279 - C1542 * C285 - C1543 * C280) *
                C2300 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C2301 +
            (C1544 * C284 - (C1543 * C278 + C1542 * C283) + C1545 * C279 -
             (C117 * C1523 + C50942 * C1524) * C285 -
             (C117 * C1525 + C50942 * C1526) * C280) *
                C2302) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C50774 * C10812 +
           (C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
            C1542 * C285 - C1543 * C280) *
               C50774 * C10813 +
           (C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
            C3128 * C285 - C3129 * C280) *
               C50774 * C10814 +
           (C8814 * C284 - (C8813 * C278 + C8812 * C283) + C8815 * C279 -
            (C117 * C3089 + C50942 * C3093) * C285 -
            (C117 * C3092 + C50942 * C3098) * C280) *
               C50774 * C10815) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C50774 * C10812 +
            (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
            C11204 * C10815) *
               C51047 -
           (C11318 * C10815 + C11313 * C10814 +
            (C3130 + C3131) * C50774 * C10813 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C50774 * C10812) *
               C50855) *
              C582 +
          (((C3131 + C3130) * C50774 * C10812 +
            (C3132 + C3133) * C50774 * C10813 +
            (C8817 + C8818) * C50774 * C10814 +
            (C11321 + C11322) * C50774 * C10815) *
               C50855 -
           (C11205 * C10815 + C11199 * C10814 +
            (C2930 + C2931) * C50774 * C10813 +
            (C2921 + C2920) * C50774 * C10812) *
               C51047) *
              C583 +
          ((C11196 * C10812 + C11204 * C10813 +
            (C8644 + C8645) * C50774 * C10814 +
            (C11208 + C11209) * C50774 * C10815) *
               C51047 -
           (((C117 * C11308 + C50942 * C11310) * C50754 +
             (C117 * C11307 + C50942 * C11309) * C696) *
                C50774 * C10815 +
            (C11322 + C11321) * C50774 * C10814 + C11318 * C10813 +
            C11313 * C10812) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
             C15508 * C944 + C15505 * C949) *
                C283 +
            (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
             C15508 * C950 + C15505 * C959) *
                C278 -
            (C15546 + C15547 + C15548) * C284 -
            (C15549 + C15550 + C15551) * C279 +
            (C15552 + C15553 + C15554) * C285 +
            (C15555 + C15556 + C15557) * C280) *
               C50774 * C51059 +
           ((C18488 + C18489 + C18490) * C283 +
            (C18491 + C18492 + C18493) * C278 -
            (C15736 + C15735 + C15734) * C284 -
            (C15739 + C15738 + C15737) * C279 +
            (C15742 + C15741 + C15740) * C285 +
            (C15745 + C15744 + C15743) * C280) *
               C50774 * C50930) *
              C51047 +
          (((C15916 + C15917 + C15918) * C284 -
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C278 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C283) +
            (C15919 + C15920 + C15921) * C279 -
            (C15922 + C15923 + C15924) * C285 -
            (C15925 + C15926 + C15927) * C280) *
               C50774 * C51059 +
           ((C17256 + C17255 + C17254) * C284 -
            ((C15508 * C3570 + C15505 * C3574 + C15507 * C1090 +
              C15504 * C1095 + C15506 * C820 + C15503 * C835) *
                 C278 +
             (C15508 * C3565 + C15505 * C3571 + C15507 * C1083 +
              C15504 * C1091 + C15506 * C811 + C15503 * C819) *
                 C283) +
            (C17259 + C17258 + C17257) * C279 -
            (C15508 * C3563 + C15505 * C3567 + C15507 * C1081 + C15504 * C1087 +
             C15506 * C813 + C15503 * C823) *
                C285 -
            (C15508 * C3566 + C15505 * C3572 + C15507 * C1086 + C15504 * C1093 +
             C15506 * C824 + C15503 * C837) *
                C280) *
               C50774 * C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15506 * C122 + C15503 * C129 + C15507 * C435 + C15504 * C442 +
              C15508 * C944 + C15505 * C949) *
                 C696 +
             (C15506 * C130 + C15503 * C143 + C15507 * C441 + C15504 * C452 +
              C15508 * C950 + C15505 * C959) *
                 C50754) *
                C50774 * C51059 +
            ((C18488 + C18489 + C18490) * C696 +
             (C18491 + C18492 + C18493) * C50754) *
                C50774 * C50930) *
               C51047 -
           (((C19090 + C19091 + C19092) * C50754 +
             (C19093 + C19094 + C19095) * C696) *
                C50774 * C50930 +
            ((C15508 * C1176 + C15505 * C1181 + C15507 * C950 + C15504 * C959 +
              C15506 * C441 + C15503 * C452) *
                 C50754 +
             (C15508 * C1169 + C15505 * C1177 + C15507 * C944 + C15504 * C949 +
              C15506 * C435 + C15503 * C442) *
                 C696) *
                C50774 * C51059) *
               C50855) *
              C582 +
          ((((C19095 + C19094 + C19093) * C696 +
             (C19092 + C19091 + C19090) * C50754) *
                C50774 * C51059 +
            ((C19096 + C19097 + C19098) * C696 +
             (C19099 + C19100 + C19101) * C50754) *
                C50774 * C50930) *
               C50855 -
           (((C18798 + C18799 + C18800) * C50754 +
             (C18801 + C18802 + C18803) * C696) *
                C50774 * C50930 +
            ((C18493 + C18492 + C18491) * C50754 +
             (C18490 + C18489 + C18488) * C696) *
                C50774 * C51059) *
               C51047) *
              C583 +
          ((((C18803 + C18802 + C18801) * C696 +
             (C18800 + C18799 + C18798) * C50754) *
                C50774 * C51059 +
            ((C18914 + C18915 + C18916) * C696 +
             (C18917 + C18918 + C18919) * C50754) *
                C50774 * C50930) *
               C51047 -
           (((C15508 * C11597 + C15505 * C11599 + C15507 * C9122 +
              C15504 * C9125 + C15506 * C3096 + C15503 * C3100) *
                 C50754 +
             (C15508 * C11596 + C15505 * C11598 + C15507 * C9119 +
              C15504 * C9123 + C15506 * C3091 + C15503 * C3097) *
                 C696) *
                C50774 * C50930 +
            ((C19101 + C19100 + C19099) * C50754 +
             (C19098 + C19097 + C19096) * C696) *
                C50774 * C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1285 + (C12864 + C12865) * C51089 -
            (C5425 + C5424) * C1286 - (C5427 + C5426) * C51073 +
            (C5429 + C5428) * C1287 + (C5431 + C5430) * C1282) *
               C50774 * C8044 +
           (C13162 * C1285 + C13163 * C51089 - C13164 * C1286 -
            C13165 * C51073 + (C5789 + C5788) * C1287 +
            (C5791 + C5790) * C1282) *
               C50774 * C8045) *
              C50843 * C1283 +
          (((C5424 + C5425) * C1286 -
            ((C12865 + C12864) * C51089 + (C12863 + C12862) * C1285) +
            (C5426 + C5427) * C51073 - C5436 * C1287 - C5437 * C1282) *
               C50774 * C8043 +
           ((C5785 + C5784) * C1286 -
            ((C12869 + C12868) * C51089 + (C12867 + C12866) * C1285) +
            (C5787 + C5786) * C51073 - (C5788 + C5789) * C1287 -
            (C5790 + C5791) * C1282) *
               C50774 * C8044 +
           ((C13186 + C13187) * C1286 - (C13298 * C51089 + C13299 * C1285) +
            (C13192 + C13193) * C51073 -
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C1287 -
            (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C1282) *
               C50774 * C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C2300 +
           ((C5235 + C5234) * C1285 + (C5237 + C5236) * C51089 -
            (C5239 + C5238) * C1286 - (C5241 + C5240) * C51073 +
            (C5243 + C5242) * C1287 + (C5245 + C5244) * C1282) *
               C2301 +
           (C5250 * C1285 + C5251 * C51089 - C5252 * C1286 - C5253 * C51073 +
            (C5247 + C5246) * C1287 + (C5249 + C5248) * C1282) *
               C2302) *
              C50916 * C50843 * C1283 +
          (((C5424 + C5425) * C1286 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C51089 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C1285) +
            (C5426 + C5427) * C51073 - C5436 * C1287 - C5437 * C1282) *
               C2300 +
           ((C5429 + C5428) * C1286 -
            ((C5427 + C5426) * C51089 + (C5425 + C5424) * C1285) +
            (C5431 + C5430) * C51073 - (C5432 + C5433) * C1287 -
            (C5434 + C5435) * C1282) *
               C2301 +
           ((C5433 + C5432) * C1286 - (C5437 * C51089 + C5436 * C1285) +
            (C5435 + C5434) * C51073 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C1287 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C1282) *
               C2302) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C1285 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C51089 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C1286 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C51073 +
           (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
            C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
               C1287 +
           (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
            C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
               C1282) *
              C50774 * C50916 * C50843 * C1283 +
          ((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
            C21043 * C1082 + C21039 * C1089 + C21044 * C3564 + C21040 * C3569) *
               C1286 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C51089 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C1285) +
           (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
            C21043 * C1088 + C21039 * C1094 + C21044 * C3568 + C21040 * C3573) *
               C51073 -
           (C21044 * C3563 + C21040 * C3567 + C21043 * C1081 + C21039 * C1087 +
            C21042 * C813 + C21038 * C823 + C21041 * C288 + C21037 * C296) *
               C1287 -
           (C21044 * C3566 + C21040 * C3572 + C21043 * C1086 + C21039 * C1093 +
            C21042 * C824 + C21038 * C837 + C21041 * C297 + C21037 * C306) *
               C1282) *
              C50774 * C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
            (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C14227 * C8045) *
              C50843 * C51091 +
          (((C5424 + C5425) * C1392 -
            ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
            (C5426 + C5427) * C50759) *
               C50774 * C8043 +
           ((C5785 + C5784) * C1392 -
            ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
            (C5787 + C5786) * C50759) *
               C50774 * C8044 +
           ((C13186 + C13187) * C1392 - (C13298 * C1386 + C13299 * C1391) +
            (C13192 + C13193) * C50759) *
               C50774 * C8045) *
              C50843 * C51079 +
          (C14227 * C8043 +
           ((C13191 + C13190) * C1391 + (C13189 + C13188) * C1386 -
            (C13187 + C13186) * C1392 - (C13193 + C13192) * C50759) *
               C50774 * C8044 +
           ((C13311 + C13312) * C1391 + (C13313 + C13314) * C1386 -
            (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                C1392 -
            (C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                C50759) *
               C50774 * C8045) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
            (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
               C2302) *
              C50916 * C50843 * C51091 +
          (((C5424 + C5425) * C1392 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C1386 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C1391) +
            (C5426 + C5427) * C50759) *
               C2300 +
           ((C5429 + C5428) * C1392 -
            ((C5427 + C5426) * C1386 + (C5425 + C5424) * C1391) +
            (C5431 + C5430) * C50759) *
               C2301 +
           ((C5433 + C5432) * C1392 - (C5437 * C1386 + C5436 * C1391) +
            (C5435 + C5434) * C50759) *
               C2302) *
              C50916 * C50843 * C51079 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C1391 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C1386 -
            (C5784 + C5785) * C1392 - (C5786 + C5787) * C50759) *
               C2300 +
           ((C5785 + C5784) * C1391 + (C5787 + C5786) * C1386 -
            (C5788 + C5789) * C1392 - (C5790 + C5791) * C50759) *
               C2301 +
           ((C5789 + C5788) * C1391 + (C5791 + C5790) * C1386 -
            (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                C1392 -
            (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                C50759) *
               C2302) *
              C50916 * C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C1391 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C1386 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C1392 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C50759) *
              C50774 * C50916 * C50843 * C51091 +
          ((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
            C21043 * C1082 + C21039 * C1089 + C21044 * C3564 + C21040 * C3569) *
               C1392 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C1386 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C1391) +
           (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
            C21043 * C1088 + C21039 * C1094 + C21044 * C3568 + C21040 * C3573) *
               C50759) *
              C50774 * C50916 * C50843 * C51079 +
          ((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
            C21043 * C3443 + C21039 * C3449 + C21044 * C9235 + C21040 * C9239) *
               C1391 +
           (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
            C21043 * C3448 + C21039 * C3452 + C21044 * C9238 + C21040 * C9241) *
               C1386 -
           (C21044 * C9234 + C21040 * C9237 + C21043 * C3442 + C21039 * C3447 +
            C21042 * C817 + C21038 * C832 + C21041 * C588 + C21037 * C594) *
               C1392 -
           (C21044 * C9236 + C21040 * C9240 + C21043 * C3446 + C21039 * C3451 +
            C21042 * C831 + C21038 * C841 + C21041 * C595 + C21037 * C603) *
               C50759) *
              C50774 * C50916 * C50843 * C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C50774 * C8043 +
            ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
             (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
                C50774 * C8044 +
            C14227 * C8045) *
               C51047 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C50774 * C8043 +
            ((C6965 + C6964) * C1392 -
             ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
             (C6967 + C6966) * C50759) *
                C50774 * C8044 +
            ((C14430 + C14431) * C1392 - (C13500 * C1386 + C13501 * C1391) +
             (C14432 + C14433) * C50759) *
                C50774 * C8045) *
               C50855) *
              C1283 +
          ((((C5424 + C5425) * C1392 -
             ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
             (C5426 + C5427) * C50759) *
                C50774 * C8043 +
            ((C5785 + C5784) * C1392 -
             ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
             (C5787 + C5786) * C50759) *
                C50774 * C8044 +
            ((C13186 + C13187) * C1392 - (C13298 * C1386 + C13299 * C1391) +
             (C13192 + C13193) * C50759) *
                C50774 * C8045) *
               C51047 +
           (((C13495 + C13494) * C1391 + (C13493 + C13492) * C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C50774 * C8043 +
            ((C13491 + C13490) * C1391 + (C13489 + C13488) * C1386 -
             (C14431 + C14430) * C1392 - (C14433 + C14432) * C50759) *
                C50774 * C8044 +
            ((C13496 + C13497) * C1391 + (C13498 + C13499) * C1386 -
             (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 + C51060 * C3095) *
                 C1392 -
             (C5200 * C9120 + C50954 * C9124 + C5199 * C3094 + C51060 * C3099) *
                 C50759) *
                C50774 * C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C2300 +
            ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
             (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                C2301 +
            (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
                C2302) *
               C50916 * C51047 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C2300 +
            ((C5613 + C5612) * C1392 -
             ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
             (C5615 + C5614) * C50759) *
                C2301 +
            ((C5617 + C5616) * C1392 - (C5621 * C1386 + C5620 * C1391) +
             (C5619 + C5618) * C50759) *
                C2302) *
               C50916 * C50855) *
              C1283 +
          ((((C5424 + C5425) * C1392 -
             ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                  C1386 +
              (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                  C1391) +
             (C5426 + C5427) * C50759) *
                C2300 +
            ((C5429 + C5428) * C1392 -
             ((C5427 + C5426) * C1386 + (C5425 + C5424) * C1391) +
             (C5431 + C5430) * C50759) *
                C2301 +
            ((C5433 + C5432) * C1392 - (C5437 * C1386 + C5436 * C1391) +
             (C5435 + C5434) * C50759) *
                C2302) *
               C50916 * C51047 +
           (((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C1391 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C2300 +
            ((C6965 + C6964) * C1391 + (C6967 + C6966) * C1386 -
             (C6968 + C6969) * C1392 - (C6970 + C6971) * C50759) *
                C2301 +
            ((C6969 + C6968) * C1391 + (C6971 + C6970) * C1386 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C1392 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C50759) *
                C2302) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C1391 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C1386 -
            (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
             C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
                C1392 -
            (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
             C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
                C50759) *
               C50774 * C50916 * C51047 +
           ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
             C21043 * C1168 + C21039 * C1175 + C21044 * C6450 +
             C21040 * C6455) *
                C1392 -
            ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 +
              C21039 * C1181 + C21042 * C950 + C21038 * C959 + C21041 * C441 +
              C21037 * C452) *
                 C1386 +
             (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 +
              C21039 * C1177 + C21042 * C944 + C21038 * C949 + C21041 * C435 +
              C21037 * C442) *
                 C1391) +
            (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
             C21043 * C1174 + C21039 * C1180 + C21044 * C6454 +
             C21040 * C6459) *
                C50759) *
               C50774 * C50916 * C50855) *
              C1283 +
          (((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
             C21043 * C1082 + C21039 * C1089 + C21044 * C3564 +
             C21040 * C3569) *
                C1392 -
            ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 +
              C21039 * C1095 + C21042 * C820 + C21038 * C835 + C21041 * C293 +
              C21037 * C304) *
                 C1386 +
             (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 +
              C21039 * C1091 + C21042 * C811 + C21038 * C819 + C21041 * C287 +
              C21037 * C294) *
                 C1391) +
            (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
             C21043 * C1088 + C21039 * C1094 + C21044 * C3568 +
             C21040 * C3573) *
                C50759) *
               C50774 * C50916 * C51047 +
           ((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C1391 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C1386 -
            (C21044 * C16645 + C21040 * C16647 + C21043 * C3564 +
             C21039 * C3569 + C21042 * C1082 + C21038 * C1089 + C21041 * C812 +
             C21037 * C821) *
                C1392 -
            (C21044 * C16646 + C21040 * C16648 + C21043 * C3568 +
             C21039 * C3573 + C21042 * C1088 + C21038 * C1094 + C21041 * C822 +
             C21037 * C836) *
                C50759) *
               C50774 * C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C50774 * C8043 +
            ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
             (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
                C50774 * C8044 +
            C13197 * C8045) *
               C1643 +
           (((C5608 + C5609) * C49763 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C51031 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C49770) +
             (C5610 + C5611) * C50759) *
                C50774 * C8043 +
            ((C6965 + C6964) * C49763 -
             ((C13492 + C13493) * C51031 + (C13494 + C13495) * C49770) +
             (C6967 + C6966) * C50759) *
                C50774 * C8044 +
            ((C14430 + C14431) * C49763 - (C13500 * C51031 + C13501 * C49770) +
             (C14432 + C14433) * C50759) *
                C50774 * C8045) *
               C50855) *
              C1283 +
          ((((C5424 + C5425) * C49763 -
             ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
             (C5426 + C5427) * C50759) *
                C50774 * C8043 +
            ((C5785 + C5784) * C49763 -
             ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
             (C5787 + C5786) * C50759) *
                C50774 * C8044 +
            ((C13186 + C13187) * C49763 - (C13298 * C51031 + C13299 * C49770) +
             (C13192 + C13193) * C50759) *
                C50774 * C8045) *
               C1643 +
           (((C13495 + C13494) * C49770 + (C13493 + C13492) * C51031 -
             (C6964 + C6965) * C49763 - (C6966 + C6967) * C50759) *
                C50774 * C8043 +
            ((C13491 + C13490) * C49770 + (C13489 + C13488) * C51031 -
             (C14431 + C14430) * C49763 - (C14433 + C14432) * C50759) *
                C50774 * C8044 +
            ((C13496 + C13497) * C49770 + (C13498 + C13499) * C51031 -
             (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 + C51060 * C3095) *
                 C49763 -
             (C5200 * C9120 + C50954 * C9124 + C5199 * C3094 + C51060 * C3099) *
                 C50759) *
                C50774 * C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C2300 +
            ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
             (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                C2301 +
            (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 -
             C5253 * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5608 + C5609) * C49763 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C51031 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C49770) +
             (C5610 + C5611) * C50759) *
                C2300 +
            ((C5613 + C5612) * C49763 -
             ((C5611 + C5610) * C51031 + (C5609 + C5608) * C49770) +
             (C5615 + C5614) * C50759) *
                C2301 +
            ((C5617 + C5616) * C49763 - (C5621 * C51031 + C5620 * C49770) +
             (C5619 + C5618) * C50759) *
                C2302) *
               C50916 * C50855) *
              C1283 +
          ((((C5424 + C5425) * C49763 -
             ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                  C51031 +
              (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                  C49770) +
             (C5426 + C5427) * C50759) *
                C2300 +
            ((C5429 + C5428) * C49763 -
             ((C5427 + C5426) * C51031 + (C5425 + C5424) * C49770) +
             (C5431 + C5430) * C50759) *
                C2301 +
            ((C5433 + C5432) * C49763 - (C5437 * C51031 + C5436 * C49770) +
             (C5435 + C5434) * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C49770 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C51031 -
             (C6964 + C6965) * C49763 - (C6966 + C6967) * C50759) *
                C2300 +
            ((C6965 + C6964) * C49770 + (C6967 + C6966) * C51031 -
             (C6968 + C6969) * C49763 - (C6970 + C6971) * C50759) *
                C2301 +
            ((C6969 + C6968) * C49770 + (C6971 + C6970) * C51031 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C49763 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C50759) *
                C2302) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C49770 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C51031 -
            (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
             C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
                C49763 -
            (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
             C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
                C50759) *
               C50774 * C50916 * C1643 +
           ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
             C21043 * C1168 + C21039 * C1175 + C21044 * C6450 +
             C21040 * C6455) *
                C49763 -
            ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 +
              C21039 * C1181 + C21042 * C950 + C21038 * C959 + C21041 * C441 +
              C21037 * C452) *
                 C51031 +
             (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 +
              C21039 * C1177 + C21042 * C944 + C21038 * C949 + C21041 * C435 +
              C21037 * C442) *
                 C49770) +
            (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
             C21043 * C1174 + C21039 * C1180 + C21044 * C6454 +
             C21040 * C6459) *
                C50759) *
               C50774 * C50916 * C50855) *
              C1283 +
          (((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
             C21043 * C1082 + C21039 * C1089 + C21044 * C3564 +
             C21040 * C3569) *
                C49763 -
            ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 +
              C21039 * C1095 + C21042 * C820 + C21038 * C835 + C21041 * C293 +
              C21037 * C304) *
                 C51031 +
             (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 +
              C21039 * C1091 + C21042 * C811 + C21038 * C819 + C21041 * C287 +
              C21037 * C294) *
                 C49770) +
            (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
             C21043 * C1088 + C21039 * C1094 + C21044 * C3568 +
             C21040 * C3573) *
                C50759) *
               C50774 * C50916 * C1643 +
           ((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C49770 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C51031 -
            (C21044 * C16645 + C21040 * C16647 + C21043 * C3564 +
             C21039 * C3569 + C21042 * C1082 + C21038 * C1089 + C21041 * C812 +
             C21037 * C821) *
                C49763 -
            (C21044 * C16646 + C21040 * C16648 + C21043 * C3568 +
             C21039 * C3573 + C21042 * C1088 + C21038 * C1094 + C21041 * C822 +
             C21037 * C836) *
                C50759) *
               C50774 * C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C1643 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C50855) *
              C51091 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C50855 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C1643) *
              C51079 +
          ((C13315 * C8043 +
            ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
                C8044 +
            ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
                C8045) *
               C1643 -
           (((C5200 * C11519 + C50954 * C11521 + C5199 * C8795 +
              C51060 * C8798) *
                 C50754 +
             (C5200 * C11518 + C50954 * C11520 + C5199 * C8792 +
              C51060 * C8796) *
                 C696) *
                C50774 * C8045 +
            ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C50774 *
                C8044 +
            C13505 * C8043) *
               C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C1643 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C51091 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C2301 +
            ((C6969 + C6968) * C696 + (C6971 + C6970) * C50754) * C2302) *
               C50916 * C50855 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C1643) *
              C51079 +
          ((((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                 C696 +
             (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                 C50754) *
                C2300 +
            ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
            ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
               C50916 * C1643 -
           (((C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                 C50754 +
             (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                 C696) *
                C2302 +
            ((C5200 * C3446 + C50954 * C3451 + C5199 * C831 + C51060 * C841) *
                 C50754 +
             (C5200 * C3442 + C50954 * C3447 + C5199 * C817 + C51060 * C832) *
                 C696) *
                C2301 +
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C50754 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C696 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C50754) *
               C50774 * C50916 * C1643 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C50754 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C696) *
               C50774 * C50916 * C50855) *
              C51091 +
          (((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C696 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C50754) *
               C50774 * C50916 * C50855 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C50754 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C696) *
               C50774 * C50916 * C1643) *
              C51079 +
          (((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
             C21043 * C3443 + C21039 * C3449 + C21044 * C9235 +
             C21040 * C9239) *
                C696 +
            (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
             C21043 * C3448 + C21039 * C3452 + C21044 * C9238 +
             C21040 * C9241) *
                C50754) *
               C50774 * C50916 * C1643 -
           ((C21044 * C13921 + C21040 * C13925 + C21043 * C9238 +
             C21039 * C9241 + C21042 * C3448 + C21038 * C3452 + C21041 * C833 +
             C21037 * C842) *
                C50754 +
            (C21044 * C13919 + C21040 * C13922 + C21043 * C9235 +
             C21039 * C9239 + C21042 * C3443 + C21038 * C3449 + C21041 * C818 +
             C21037 * C834) *
                C696) *
               C50774 * C50916 * C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C51092 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C51082 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C50774 * C8043 +
            ((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C50774 *
                C8044 +
            ((C13818 + C13819) * C696 + (C13820 + C13821) * C50754) * C50774 *
                C8045) *
               C1875) *
              C1283 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C51082 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C51092 -
           (((C5200 * C11597 + C50954 * C11599 + C5199 * C9122 +
              C51060 * C9125) *
                 C50754 +
             (C5200 * C11596 + C50954 * C11598 + C5199 * C9119 +
              C51060 * C9123) *
                 C696) *
                C50774 * C8045 +
            ((C13821 + C13820) * C50754 + (C13819 + C13818) * C696) * C50774 *
                C8044 +
            ((C13817 + C13816) * C50754 + (C13815 + C13814) * C696) * C50774 *
                C8043) *
               C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C51092 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C51082 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C2300 +
            ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C2301 +
            ((C6203 + C6202) * C696 + (C6205 + C6204) * C50754) * C2302) *
               C50916 * C1875) *
              C1283 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C2301 +
            ((C6969 + C6968) * C696 + (C6971 + C6970) * C50754) * C2302) *
               C50916 * C51082 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C51092 -
           (((C5200 * C3566 + C50954 * C3572 + C5199 * C1086 + C51060 * C1093) *
                 C50754 +
             (C5200 * C3563 + C50954 * C3567 + C5199 * C1081 + C51060 * C1087) *
                 C696) *
                C2302 +
            ((C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                 C50754 +
             (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                 C696) *
                C2301 +
            ((C5200 * C3570 + C50954 * C3574 + C5199 * C1090 + C51060 * C1095) *
                 C50754 +
             (C5200 * C3565 + C50954 * C3571 + C5199 * C1083 + C51060 * C1091) *
                 C696) *
                C2300) *
               C50916 * C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C696 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C50754) *
               C50774 * C50916 * C51092 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C50754 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C696) *
               C50774 * C50916 * C51082 +
           ((C21041 * C944 + C21037 * C949 + C21042 * C1169 + C21038 * C1177 +
             C21043 * C6451 + C21039 * C6457 + C21044 * C16748 +
             C21040 * C16752) *
                C696 +
            (C21041 * C950 + C21037 * C959 + C21042 * C1176 + C21038 * C1181 +
             C21043 * C6456 + C21039 * C6460 + C21044 * C16751 +
             C21040 * C16754) *
                C50754) *
               C50774 * C50916 * C1875) *
              C1283 +
          (((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C696 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C50754) *
               C50774 * C50916 * C51082 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C50754 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C696) *
               C50774 * C50916 * C51092 -
           ((C21044 * C19510 + C21040 * C19512 + C21043 * C13923 +
             C21039 * C13926 + C21042 * C3570 + C21038 * C3574 +
             C21041 * C1090 + C21037 * C1095) *
                C50754 +
            (C21044 * C19509 + C21040 * C19511 + C21043 * C13920 +
             C21039 * C13924 + C21042 * C3565 + C21038 * C3571 +
             C21041 * C1083 + C21037 * C1091) *
                C696) *
               C50774 * C50916 * C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                   C118 +
               (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                   C106 -
               (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
               C5251 * C108 - C5252 * C121 - C5253 * C109) *
                  C2300 +
              ((C5235 + C5234) * C118 + (C5237 + C5236) * C106 -
               (C5239 + C5238) * C119 - (C5241 + C5240) * C107 +
               (C5243 + C5242) * C120 + (C5245 + C5244) * C108 -
               (C5246 + C5247) * C121 - (C5248 + C5249) * C109) *
                  C2301 +
              (C5250 * C118 + C5251 * C106 - C5252 * C119 - C5253 * C107 +
               (C5247 + C5246) * C120 + (C5249 + C5248) * C108 -
               (C5200 * C439 + C50954 * C450 + C5199 * C127 + C51060 * C139) *
                   C121 -
               (C5200 * C451 + C50954 * C457 + C5199 * C140 + C51060 * C148) *
                   C109) *
                  C2302) *
             C50916 * C50843 * C50817 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                    C49770 +
                (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                    C51031 -
                (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                   C2300 +
               ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
                (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                   C2301 +
               (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 -
                C5253 * C50759) *
                   C2302) *
                  C50916 * C50843 * C582 +
              (((C5424 + C5425) * C49763 -
                ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                     C51031 +
                 (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                     C49770) +
                (C5426 + C5427) * C50759) *
                   C2300 +
               ((C5429 + C5428) * C49763 -
                ((C5427 + C5426) * C51031 + (C5425 + C5424) * C49770) +
                (C5431 + C5430) * C50759) *
                   C2301 +
               ((C5433 + C5432) * C49763 - (C5437 * C51031 + C5436 * C49770) +
                (C5435 + C5434) * C50759) *
                   C2302) *
                  C50916 * C50843 * C583 +
              (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                    C49770 +
                (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                    C51031 -
                (C5784 + C5785) * C49763 - (C5786 + C5787) * C50759) *
                   C2300 +
               ((C5785 + C5784) * C49770 + (C5787 + C5786) * C51031 -
                (C5788 + C5789) * C49763 - (C5790 + C5791) * C50759) *
                   C2301 +
               ((C5789 + C5788) * C49770 + (C5791 + C5790) * C51031 -
                (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                    C49763 -
                (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                    C50759) *
                   C2302) *
                  C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
            (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 - C5253 * C50759) *
               C2302) *
              C50916 * C941 +
          (((C5608 + C5609) * C49763 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51031 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C49770) +
            (C5610 + C5611) * C50759) *
               C2300 +
           ((C5613 + C5612) * C49763 -
            ((C5611 + C5610) * C51031 + (C5609 + C5608) * C49770) +
            (C5615 + C5614) * C50759) *
               C2301 +
           ((C5617 + C5616) * C49763 - (C5621 * C51031 + C5620 * C49770) +
            (C5619 + C5618) * C50759) *
               C2302) *
              C50916 * C942 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C49770 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C51031 -
            (C6198 + C6199) * C49763 - (C6200 + C6201) * C50759) *
               C2300 +
           ((C6199 + C6198) * C49770 + (C6201 + C6200) * C51031 -
            (C6202 + C6203) * C49763 - (C6204 + C6205) * C50759) *
               C2301 +
           ((C6203 + C6202) * C49770 + (C6205 + C6204) * C51031 -
            (C5200 * C1166 + C50954 * C1171 + C5199 * C947 + C51060 * C955) *
                C49763 -
            (C5200 * C1170 + C50954 * C1178 + C5199 * C956 + C51060 * C962) *
                C50759) *
               C2302) *
              C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C50774 * C8043 +
          ((C5199 * C287 + C51060 * C294 + C5200 * C811 + C50954 * C819) *
               C118 +
           (C5199 * C293 + C51060 * C304 + C5200 * C820 + C50954 * C835) *
               C106 -
           (C5425 + C5424) * C119 - (C5427 + C5426) * C107 +
           (C5429 + C5428) * C120 + (C5431 + C5430) * C108 -
           (C5432 + C5433) * C121 - (C5434 + C5435) * C109) *
              C50774 * C8044 +
          ((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
               C118 +
           (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
               C106 -
           (C5784 + C5785) * C119 - (C5786 + C5787) * C107 +
           (C5789 + C5788) * C120 + (C5791 + C5790) * C108 -
           (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
               C121 -
           (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
               C109) *
              C50774 * C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
            (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C13197 * C8045) *
              C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
            (C5426 + C5427) * C50759) *
               C50774 * C8043 +
           ((C5785 + C5784) * C49763 -
            ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
            (C5787 + C5786) * C50759) *
               C50774 * C8044 +
           ((C13186 + C13187) * C49763 -
            ((C13188 + C13189) * C51031 + (C13190 + C13191) * C49770) +
            (C13192 + C13193) * C50759) *
               C50774 * C8045) *
              C50843 * C583 +
          (C13197 * C8043 +
           ((C13191 + C13190) * C49770 + (C13189 + C13188) * C51031 -
            (C13187 + C13186) * C49763 - (C13193 + C13192) * C50759) *
               C50774 * C8044 +
           ((C5199 * C2909 + C51060 * C2915 + C5200 * C8792 + C50954 * C8796) *
                C49770 +
            (C5199 * C2914 + C51060 * C2918 + C5200 * C8795 + C50954 * C8798) *
                C51031 -
            (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                C49763 -
            (C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                C50759) *
               C50774 * C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
            (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C13197 * C8045) *
              C941 +
          (((C5608 + C5609) * C49763 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51031 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C49770) +
            (C5610 + C5611) * C50759) *
               C50774 * C8043 +
           ((C6965 + C6964) * C49763 -
            ((C13492 + C13493) * C51031 + (C13494 + C13495) * C49770) +
            (C6967 + C6966) * C50759) *
               C50774 * C8044 +
           ((C5199 * C817 + C51060 * C832 + C5200 * C3442 + C50954 * C3447) *
                C49763 -
            (C13500 * C51031 + C13501 * C49770) +
            (C5199 * C831 + C51060 * C841 + C5200 * C3446 + C50954 * C3451) *
                C50759) *
               C50774 * C8045) *
              C942 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C49770 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C51031 -
            (C6198 + C6199) * C49763 - (C6200 + C6201) * C50759) *
               C50774 * C8043 +
           ((C5199 * C1083 + C51060 * C1091 + C5200 * C3565 + C50954 * C3571) *
                C49770 +
            (C5199 * C1090 + C51060 * C1095 + C5200 * C3570 + C50954 * C3574) *
                C51031 -
            (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                C49763 -
            (C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                C50759) *
               C50774 * C8044 +
           ((C5199 * C3443 + C51060 * C3449 + C5200 * C9235 + C50954 * C9239) *
                C49770 +
            (C5199 * C3448 + C51060 * C3452 + C5200 * C9238 + C50954 * C9241) *
                C51031 -
            (C5200 * C9234 + C50954 * C9237 + C5199 * C3442 + C51060 * C3447) *
                C49763 -
            (C5200 * C9236 + C50954 * C9240 + C5199 * C3446 + C51060 * C3451) *
                C50759) *
               C50774 * C8045) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
           C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
              C118 +
          (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
           C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
              C106 -
          (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
           C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
              C119 -
          (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
           C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
              C107 +
          (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
           C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
              C120 +
          (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
           C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
              C108 -
          (C21044 * C1166 + C21040 * C1171 + C21043 * C947 + C21039 * C955 +
           C21042 * C437 + C21038 * C446 + C21041 * C125 + C21037 * C135) *
              C121 -
          (C21044 * C1170 + C21040 * C1178 + C21043 * C956 + C21039 * C962 +
           C21042 * C447 + C21038 * C455 + C21041 * C136 + C21037 * C146) *
              C109) *
         C50774 * C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C49770 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C51031 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C49763 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C50759) *
              C50774 * C50916 * C50843 * C582 +
          ((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
            C21043 * C1082 + C21039 * C1089 + C21044 * C3564 + C21040 * C3569) *
               C49763 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C51031 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C49770) +
           (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
            C21043 * C1088 + C21039 * C1094 + C21044 * C3568 + C21040 * C3573) *
               C50759) *
              C50774 * C50916 * C50843 * C583 +
          ((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
            C21043 * C3443 + C21039 * C3449 + C21044 * C9235 + C21040 * C9239) *
               C49770 +
           (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
            C21043 * C3448 + C21039 * C3452 + C21044 * C9238 + C21040 * C9241) *
               C51031 -
           (C21044 * C9234 + C21040 * C9237 + C21043 * C3442 + C21039 * C3447 +
            C21042 * C817 + C21038 * C832 + C21041 * C588 + C21037 * C594) *
               C49763 -
           (C21044 * C9236 + C21040 * C9240 + C21043 * C3446 + C21039 * C3451 +
            C21042 * C831 + C21038 * C841 + C21041 * C595 + C21037 * C603) *
               C50759) *
              C50774 * C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C49770 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C51031 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C49763 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C50759) *
              C50774 * C50916 * C941 +
          ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
            C21043 * C1168 + C21039 * C1175 + C21044 * C6450 + C21040 * C6455) *
               C49763 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C51031 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C49770) +
           (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
            C21043 * C1174 + C21039 * C1180 + C21044 * C6454 + C21040 * C6459) *
               C50759) *
              C50774 * C50916 * C942 +
          ((C21041 * C944 + C21037 * C949 + C21042 * C1169 + C21038 * C1177 +
            C21043 * C6451 + C21039 * C6457 + C21044 * C16748 +
            C21040 * C16752) *
               C49770 +
           (C21041 * C950 + C21037 * C959 + C21042 * C1176 + C21038 * C1181 +
            C21043 * C6456 + C21039 * C6460 + C21044 * C16751 +
            C21040 * C16754) *
               C51031 -
           (C21044 * C16747 + C21040 * C16750 + C21043 * C6450 +
            C21039 * C6455 + C21042 * C1168 + C21038 * C1175 + C21041 * C945 +
            C21037 * C951) *
               C49763 -
           (C21044 * C16749 + C21040 * C16753 + C21043 * C6454 +
            C21039 * C6459 + C21042 * C1174 + C21038 * C1180 + C21041 * C952 +
            C21037 * C960) *
               C50759) *
              C50774 * C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                    C283 +
                (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                    C278 -
                (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
                C5251 * C280) *
                   C2300 +
               ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
                (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
                (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
                   C2301 +
               (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
                (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
                   C2302) *
                  C50916 * C50843 * C51046 +
              (((C5424 + C5425) * C284 -
                ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                     C278 +
                 (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                     C283) +
                (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
                   C2300 +
               ((C5429 + C5428) * C284 -
                ((C5427 + C5426) * C278 + (C5425 + C5424) * C283) +
                (C5431 + C5430) * C279 - (C5432 + C5433) * C285 -
                (C5434 + C5435) * C280) *
                   C2301 +
               ((C5433 + C5432) * C284 - (C5437 * C278 + C5436 * C283) +
                (C5435 + C5434) * C279 -
                (C5200 * C1523 + C50954 * C1524 + C5199 * C290 +
                 C51060 * C300) *
                    C285 -
                (C5200 * C1525 + C50954 * C1526 + C5199 * C301 +
                 C51060 * C308) *
                    C280) *
                   C2302) *
                  C50916 * C50843 * C50831) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                    C696 +
                (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                    C50754) *
                   C2300 +
               ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
               (C5250 * C696 + C5251 * C50754) * C2302) *
                  C50916 * C50843 * C692 -
              ((C5437 * C50754 + C5436 * C696) * C2302 +
               ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
               ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                    C50754 +
                (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                    C696) *
                   C2300) *
                  C50916 * C50843 * C693 +
              (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                    C696 +
                (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                    C50754) *
                   C2300 +
               ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
               ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
                  C50916 * C50843 * C694 -
              (((C5200 * C3092 + C50954 * C3098 + C5199 * C703 +
                 C51060 * C710) *
                    C50754 +
                (C5200 * C3089 + C50954 * C3093 + C5199 * C698 +
                 C51060 * C704) *
                    C696) *
                   C2302 +
               ((C5200 * C3094 + C50954 * C3099 + C5199 * C705 +
                 C51060 * C711) *
                    C50754 +
                (C5200 * C3090 + C50954 * C3095 + C5199 * C699 +
                 C51060 * C706) *
                    C696) *
                   C2301 +
               ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 +
                 C51060 * C712) *
                    C50754 +
                (C5200 * C3091 + C50954 * C3097 + C5199 * C700 +
                 C51060 * C708) *
                    C696) *
                   C2300) *
                  C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C941 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C942 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C2300 +
            ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C2301 +
            ((C6203 + C6202) * C696 + (C6205 + C6204) * C50754) * C2302) *
               C50916 * C943) *
              C51046 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C5199 * C812 + C51060 * C821 + C5200 * C1082 + C50954 * C1089) *
                 C696 +
             (C5199 * C822 + C51060 * C836 + C5200 * C1088 + C50954 * C1094) *
                 C50754) *
                C2301 +
            ((C5199 * C813 + C51060 * C823 + C5200 * C1081 + C50954 * C1087) *
                 C696 +
             (C5199 * C824 + C51060 * C837 + C5200 * C1086 + C50954 * C1093) *
                 C50754) *
                C2302) *
               C50916 * C942 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C941 -
           (((C5200 * C3566 + C50954 * C3572 + C5199 * C1086 + C51060 * C1093) *
                 C50754 +
             (C5200 * C3563 + C50954 * C3567 + C5199 * C1081 + C51060 * C1087) *
                 C696) *
                C2302 +
            ((C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                 C50754 +
             (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                 C696) *
                C2301 +
            ((C5200 * C3570 + C50954 * C3574 + C5199 * C1090 + C51060 * C1095) *
                 C50754 +
             (C5200 * C3565 + C50954 * C3571 + C5199 * C1083 + C51060 * C1091) *
                 C696) *
                C2300) *
               C50916 * C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C12865 + C12864) * C278 + (C12863 + C12862) * C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C50774 * C8043 +
           ((C5785 + C5784) * C284 -
            ((C12869 + C12868) * C278 + (C12867 + C12866) * C283) +
            (C5787 + C5786) * C279 - (C5788 + C5789) * C285 -
            (C5790 + C5791) * C280) *
               C50774 * C8044 +
           ((C5199 * C699 + C51060 * C706 + C5200 * C3090 + C50954 * C3095) *
                C284 -
            ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                 C278 +
             (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                 C283) +
            (C5199 * C705 + C51060 * C711 + C5200 * C3094 + C50954 * C3099) *
                C279 -
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C285 -
            (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C280) *
               C50774 * C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C8043 +
           ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
               C8044 +
           C13315 * C8045) *
              C50843 * C692 -
          (C13317 * C8045 +
           ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
               C8044 +
           ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
               C8043) *
              C50843 * C693 +
          (C13315 * C8043 +
           ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
               C8044 +
           ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
               C8045) *
              C50843 * C694 -
          (((C5200 * C11308 + C50954 * C11310 + C5199 * C8621 +
             C51060 * C8624) *
                C50754 +
            (C5200 * C11307 + C50954 * C11309 + C5199 * C8618 +
             C51060 * C8622) *
                C696) *
               C50774 * C8045 +
           ((C13314 + C13313) * C50754 + (C13312 + C13311) * C696) * C50774 *
               C8044 +
           C13317 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C941 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C942 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C50774 * C8043 +
            ((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C50774 *
                C8044 +
            ((C13818 + C13819) * C696 + (C13820 + C13821) * C50754) * C50774 *
                C8045) *
               C943) *
              C51046 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C942 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C941 -
           (((C5200 * C11597 + C50954 * C11599 + C5199 * C9122 +
              C51060 * C9125) *
                 C50754 +
             (C5200 * C11596 + C50954 * C11598 + C5199 * C9119 +
              C51060 * C9123) *
                 C696) *
                C50774 * C8045 +
            ((C13821 + C13820) * C50754 + (C13819 + C13818) * C696) * C50774 *
                C8044 +
            ((C13817 + C13816) * C50754 + (C13815 + C13814) * C696) * C50774 *
                C8043) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C283 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C278 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C284 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C279 +
           (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
            C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
               C285 +
           (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
            C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
               C280) *
              C50774 * C50916 * C50843 * C51046 +
          ((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
            C21043 * C1082 + C21039 * C1089 + C21044 * C3564 + C21040 * C3569) *
               C284 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C278 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C283) +
           (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
            C21043 * C1088 + C21039 * C1094 + C21044 * C3568 + C21040 * C3573) *
               C279 -
           (C21044 * C3563 + C21040 * C3567 + C21043 * C1081 + C21039 * C1087 +
            C21042 * C813 + C21038 * C823 + C21041 * C288 + C21037 * C296) *
               C285 -
           (C21044 * C3566 + C21040 * C3572 + C21043 * C1086 + C21039 * C1093 +
            C21042 * C824 + C21038 * C837 + C21041 * C297 + C21037 * C306) *
               C280) *
              C50774 * C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C696 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C50754) *
              C50774 * C50916 * C50843 * C692 -
          ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
            C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
               C50754 +
           (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
            C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
               C696) *
              C50774 * C50916 * C50843 * C693 +
          ((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
            C21043 * C3443 + C21039 * C3449 + C21044 * C9235 + C21040 * C9239) *
               C696 +
           (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
            C21043 * C3448 + C21039 * C3452 + C21044 * C9238 + C21040 * C9241) *
               C50754) *
              C50774 * C50916 * C50843 * C694 -
          ((C21044 * C11597 + C21040 * C11599 + C21043 * C9122 +
            C21039 * C9125 + C21042 * C3096 + C21038 * C3100 + C21041 * C707 +
            C21037 * C712) *
               C50754 +
           (C21044 * C11596 + C21040 * C11598 + C21043 * C9119 +
            C21039 * C9123 + C21042 * C3091 + C21038 * C3097 + C21041 * C700 +
            C21037 * C708) *
               C696) *
              C50774 * C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C696 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C50754) *
               C50774 * C50916 * C941 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C50754 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C696) *
               C50774 * C50916 * C942 +
           ((C21041 * C944 + C21037 * C949 + C21042 * C1169 + C21038 * C1177 +
             C21043 * C6451 + C21039 * C6457 + C21044 * C16748 +
             C21040 * C16752) *
                C696 +
            (C21041 * C950 + C21037 * C959 + C21042 * C1176 + C21038 * C1181 +
             C21043 * C6456 + C21039 * C6460 + C21044 * C16751 +
             C21040 * C16754) *
                C50754) *
               C50774 * C50916 * C943) *
              C51046 +
          (((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C696 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C50754) *
               C50774 * C50916 * C942 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C50754 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C696) *
               C50774 * C50916 * C941 -
           ((C21044 * C19510 + C21040 * C19512 + C21043 * C13923 +
             C21039 * C13926 + C21042 * C3570 + C21038 * C3574 +
             C21041 * C1090 + C21037 * C1095) *
                C50754 +
            (C21044 * C19509 + C21040 * C19511 + C21043 * C13920 +
             C21039 * C13924 + C21042 * C3565 + C21038 * C3571 +
             C21041 * C1083 + C21037 * C1091) *
                C696) *
               C50774 * C50916 * C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                    C283 +
                (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                    C278 -
                (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
                C5251 * C280) *
                   C2300 +
               ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
                (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
                (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
                   C2301 +
               (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
                (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
                   C2302) *
                  C50916 * C51047 +
              (((C5608 + C5609) * C284 -
                ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                     C278 +
                 (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                     C283) +
                (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
                   C2300 +
               ((C5613 + C5612) * C284 -
                ((C5611 + C5610) * C278 + (C5609 + C5608) * C283) +
                (C5615 + C5614) * C279 - (C5616 + C5617) * C285 -
                (C5618 + C5619) * C280) *
                   C2301 +
               ((C5617 + C5616) * C284 - (C5621 * C278 + C5620 * C283) +
                (C5619 + C5618) * C279 -
                (C5200 * C948 + C50954 * C957 + C5199 * C438 + C51060 * C448) *
                    C285 -
                (C5200 * C958 + C50954 * C963 + C5199 * C449 + C51060 * C456) *
                    C280) *
                   C2302) *
                  C50916 * C50855) *
             C50817 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                     C696 +
                 (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                     C50754) *
                    C2300 +
                ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
                (C5250 * C696 + C5251 * C50754) * C2302) *
                   C50916 * C51047 -
               ((C5621 * C50754 + C5620 * C696) * C2302 +
                ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
                ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                     C50754 +
                 (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                     C696) *
                    C2300) *
                   C50916 * C50855) *
                  C582 +
              ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 +
                  C50954 * C1091) *
                     C696 +
                 (C5199 * C820 + C51060 * C835 + C5200 * C1090 +
                  C50954 * C1095) *
                     C50754) *
                    C2300 +
                ((C5199 * C812 + C51060 * C821 + C5200 * C1082 +
                  C50954 * C1089) *
                     C696 +
                 (C5199 * C822 + C51060 * C836 + C5200 * C1088 +
                  C50954 * C1094) *
                     C50754) *
                    C2301 +
                ((C5199 * C813 + C51060 * C823 + C5200 * C1081 +
                  C50954 * C1087) *
                     C696 +
                 (C5199 * C824 + C51060 * C837 + C5200 * C1086 +
                  C50954 * C1093) *
                     C50754) *
                    C2302) *
                   C50916 * C50855 -
               ((C5437 * C50754 + C5436 * C696) * C2302 +
                ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
                ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                     C50754 +
                 (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                     C696) *
                    C2300) *
                   C50916 * C51047) *
                  C583 +
              ((((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                     C696 +
                 (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                     C50754) *
                    C2300 +
                ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
                ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
                   C50916 * C51047 -
               (((C5200 * C3444 + C50954 * C3450 + C5199 * C829 +
                  C51060 * C840) *
                     C50754 +
                 (C5200 * C3441 + C50954 * C3445 + C5199 * C816 +
                  C51060 * C830) *
                     C696) *
                    C2302 +
                ((C5200 * C3446 + C50954 * C3451 + C5199 * C831 +
                  C51060 * C841) *
                     C50754 +
                 (C5200 * C3442 + C50954 * C3447 + C5199 * C817 +
                  C51060 * C832) *
                     C696) *
                    C2301 +
                ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 +
                  C51060 * C842) *
                     C50754 +
                 (C5200 * C3443 + C50954 * C3449 + C5199 * C818 +
                  C51060 * C834) *
                     C696) *
                    C2300) *
                   C50916 * C50855) *
                  C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C2300 +
           ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
           (C5250 * C696 + C5251 * C50754) * C2302) *
              C50916 * C1162 -
          ((C5621 * C50754 + C5620 * C696) * C2302 +
           ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
           ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                C50754 +
            (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                C696) *
               C2300) *
              C50916 * C1163 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C696 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C50754) *
               C2300 +
           ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C2301 +
           ((C6203 + C6202) * C696 + (C6205 + C6204) * C50754) * C2302) *
              C50916 * C1164 -
          (((C5200 * C6452 + C50954 * C6458 + C5199 * C1172 + C51060 * C1179) *
                C50754 +
            (C5200 * C6449 + C50954 * C6453 + C5199 * C1167 + C51060 * C1173) *
                C696) *
               C2302 +
           ((C5200 * C6454 + C50954 * C6459 + C5199 * C1174 + C51060 * C1180) *
                C50754 +
            (C5200 * C6450 + C50954 * C6455 + C5199 * C1168 + C51060 * C1175) *
                C696) *
               C2301 +
           ((C5200 * C6456 + C50954 * C6460 + C5199 * C1176 + C51060 * C1181) *
                C50754 +
            (C5200 * C6451 + C50954 * C6457 + C5199 * C1169 + C51060 * C1177) *
                C696) *
               C2300) *
              C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C50774 * C8043 +
           ((C6965 + C6964) * C284 -
            ((C5200 * C1090 + C50954 * C1095 + C5199 * C820 + C51060 * C835) *
                 C278 +
             (C5200 * C1083 + C50954 * C1091 + C5199 * C811 + C51060 * C819) *
                 C283) +
            (C6967 + C6966) * C279 - (C6968 + C6969) * C285 -
            (C6970 + C6971) * C280) *
               C50774 * C8044 +
           ((C5199 * C817 + C51060 * C832 + C5200 * C3442 + C50954 * C3447) *
                C284 -
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C278 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C283) +
            (C5199 * C831 + C51060 * C841 + C5200 * C3446 + C50954 * C3451) *
                C279 -
            (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                C285 -
            (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                C280) *
               C50774 * C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C51047 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C50855) *
              C582 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C50855 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C51047) *
              C583 +
          ((C13315 * C8043 +
            ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
                C8044 +
            ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
                C8045) *
               C51047 -
           (((C5200 * C11519 + C50954 * C11521 + C5199 * C8795 +
              C51060 * C8798) *
                 C50754 +
             (C5200 * C11518 + C50954 * C11520 + C5199 * C8792 +
              C51060 * C8796) *
                 C696) *
                C50774 * C8045 +
            ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C50774 *
                C8044 +
            C13505 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C8043 +
           ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
               C8044 +
           C13315 * C8045) *
              C1162 -
          (C13505 * C8045 +
           ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
               C8044 +
           ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                C50754 +
            (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                C696) *
               C50774 * C8043) *
              C1163 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C696 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C50754) *
               C50774 * C8043 +
           ((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C50774 *
               C8044 +
           ((C13818 + C13819) * C696 + (C13820 + C13821) * C50754) * C50774 *
               C8045) *
              C1164 -
          (((C5200 * C13921 + C50954 * C13925 + C5199 * C9238 +
             C51060 * C9241) *
                C50754 +
            (C5200 * C13919 + C50954 * C13922 + C5199 * C9235 +
             C51060 * C9239) *
                C696) *
               C50774 * C8045 +
           ((C5200 * C13923 + C50954 * C13926 + C5199 * C3570 +
             C51060 * C3574) *
                C50754 +
            (C5200 * C13920 + C50954 * C13924 + C5199 * C3565 +
             C51060 * C3571) *
                C696) *
               C50774 * C8044 +
           ((C5200 * C6456 + C50954 * C6460 + C5199 * C1176 + C51060 * C1181) *
                C50754 +
            (C5200 * C6451 + C50954 * C6457 + C5199 * C1169 + C51060 * C1177) *
                C696) *
               C50774 * C8043) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C283 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C278 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C284 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C279 +
           (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
            C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
               C285 +
           (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
            C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
               C280) *
              C50774 * C50916 * C51047 +
          ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
            C21043 * C1168 + C21039 * C1175 + C21044 * C6450 + C21040 * C6455) *
               C284 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C278 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C283) +
           (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
            C21043 * C1174 + C21039 * C1180 + C21044 * C6454 + C21040 * C6459) *
               C279 -
           (C21044 * C6449 + C21040 * C6453 + C21043 * C1167 + C21039 * C1173 +
            C21042 * C946 + C21038 * C953 + C21041 * C436 + C21037 * C444) *
               C285 -
           (C21044 * C6452 + C21040 * C6458 + C21043 * C1172 + C21039 * C1179 +
            C21042 * C954 + C21038 * C961 + C21041 * C445 + C21037 * C454) *
               C280) *
              C50774 * C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C696 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C50754) *
               C50774 * C50916 * C51047 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C50754 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C696) *
               C50774 * C50916 * C50855) *
              C582 +
          (((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C696 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C50754) *
               C50774 * C50916 * C50855 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C50754 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C696) *
               C50774 * C50916 * C51047) *
              C583 +
          (((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
             C21043 * C3443 + C21039 * C3449 + C21044 * C9235 +
             C21040 * C9239) *
                C696 +
            (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
             C21043 * C3448 + C21039 * C3452 + C21044 * C9238 +
             C21040 * C9241) *
                C50754) *
               C50774 * C50916 * C51047 -
           ((C21044 * C13921 + C21040 * C13925 + C21043 * C9238 +
             C21039 * C9241 + C21042 * C3448 + C21038 * C3452 + C21041 * C833 +
             C21037 * C842) *
                C50754 +
            (C21044 * C13919 + C21040 * C13922 + C21043 * C9235 +
             C21039 * C9239 + C21042 * C3443 + C21038 * C3449 + C21041 * C818 +
             C21037 * C834) *
                C696) *
               C50774 * C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C696 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C50754) *
              C50774 * C50916 * C1162 -
          ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
            C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
               C50754 +
           (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
            C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
               C696) *
              C50774 * C50916 * C1163 +
          ((C21041 * C944 + C21037 * C949 + C21042 * C1169 + C21038 * C1177 +
            C21043 * C6451 + C21039 * C6457 + C21044 * C16748 +
            C21040 * C16752) *
               C696 +
           (C21041 * C950 + C21037 * C959 + C21042 * C1176 + C21038 * C1181 +
            C21043 * C6456 + C21039 * C6460 + C21044 * C16751 +
            C21040 * C16754) *
               C50754) *
              C50774 * C50916 * C1164 -
          ((C21044 * C21766 + C21040 * C21768 + C21043 * C16751 +
            C21039 * C16754 + C21042 * C6456 + C21038 * C6460 + C21041 * C1176 +
            C21037 * C1181) *
               C50754 +
           (C21044 * C21765 + C21040 * C21767 + C21043 * C16748 +
            C21039 * C16752 + C21042 * C6451 + C21038 * C6457 + C21041 * C1169 +
            C21037 * C1177) *
               C696) *
              C50774 * C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1285 + (C12864 + C12865) * C51089 -
            (C5425 + C5424) * C1286 - (C5427 + C5426) * C51073 +
            (C5429 + C5428) * C1287 + (C5431 + C5430) * C1282) *
               C50774 * C8044 +
           (C13162 * C1285 + C13163 * C51089 - C13164 * C1286 -
            C13165 * C51073 + (C5789 + C5788) * C1287 +
            (C5791 + C5790) * C1282) *
               C50774 * C8045) *
              C1643 +
          (((C5608 + C5609) * C1286 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51089 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1285) +
            (C5610 + C5611) * C51073 - C5620 * C1287 - C5621 * C1282) *
               C50774 * C8043 +
           ((C6965 + C6964) * C1286 -
            ((C13492 + C13493) * C51089 + (C13494 + C13495) * C1285) +
            (C6967 + C6966) * C51073 - (C6968 + C6969) * C1287 -
            (C6970 + C6971) * C1282) *
               C50774 * C8044 +
           ((C14430 + C14431) * C1286 - (C13500 * C51089 + C13501 * C1285) +
            (C14432 + C14433) * C51073 -
            (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                C1287 -
            (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                C1282) *
               C50774 * C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C2300 +
           ((C5235 + C5234) * C1285 + (C5237 + C5236) * C51089 -
            (C5239 + C5238) * C1286 - (C5241 + C5240) * C51073 +
            (C5243 + C5242) * C1287 + (C5245 + C5244) * C1282) *
               C2301 +
           (C5250 * C1285 + C5251 * C51089 - C5252 * C1286 - C5253 * C51073 +
            (C5247 + C5246) * C1287 + (C5249 + C5248) * C1282) *
               C2302) *
              C50916 * C1643 +
          (((C5608 + C5609) * C1286 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51089 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1285) +
            (C5610 + C5611) * C51073 - C5620 * C1287 - C5621 * C1282) *
               C2300 +
           ((C5613 + C5612) * C1286 -
            ((C5611 + C5610) * C51089 + (C5609 + C5608) * C1285) +
            (C5615 + C5614) * C51073 - (C5616 + C5617) * C1287 -
            (C5618 + C5619) * C1282) *
               C2301 +
           ((C5617 + C5616) * C1286 - (C5621 * C51089 + C5620 * C1285) +
            (C5619 + C5618) * C51073 -
            (C5200 * C948 + C50954 * C957 + C5199 * C438 + C51060 * C448) *
                C1287 -
            (C5200 * C958 + C50954 * C963 + C5199 * C449 + C51060 * C456) *
                C1282) *
               C2302) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C1285 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C51089 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C1286 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C51073 +
           (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
            C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
               C1287 +
           (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
            C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
               C1282) *
              C50774 * C50916 * C1643 +
          ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
            C21043 * C1168 + C21039 * C1175 + C21044 * C6450 + C21040 * C6455) *
               C1286 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C51089 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C1285) +
           (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
            C21043 * C1174 + C21039 * C1180 + C21044 * C6454 + C21040 * C6459) *
               C51073 -
           (C21044 * C6449 + C21040 * C6453 + C21043 * C1167 + C21039 * C1173 +
            C21042 * C946 + C21038 * C953 + C21041 * C436 + C21037 * C444) *
               C1287 -
           (C21044 * C6452 + C21040 * C6458 + C21043 * C1172 + C21039 * C1179 +
            C21042 * C954 + C21038 * C961 + C21041 * C445 + C21037 * C454) *
               C1282) *
              C50774 * C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C50774 * C8043 +
            ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
             (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
                C50774 * C8044 +
            C14227 * C8045) *
               C1643 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C50774 * C8043 +
            ((C6965 + C6964) * C1392 -
             ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
             (C6967 + C6966) * C50759) *
                C50774 * C8044 +
            ((C14430 + C14431) * C1392 - (C13500 * C1386 + C13501 * C1391) +
             (C14432 + C14433) * C50759) *
                C50774 * C8045) *
               C50855) *
              C51046 +
          ((((C5424 + C5425) * C1392 -
             ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
             (C5426 + C5427) * C50759) *
                C50774 * C8043 +
            ((C5785 + C5784) * C1392 -
             ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
             (C5787 + C5786) * C50759) *
                C50774 * C8044 +
            ((C13186 + C13187) * C1392 - (C13298 * C1386 + C13299 * C1391) +
             (C13192 + C13193) * C50759) *
                C50774 * C8045) *
               C1643 +
           (((C13495 + C13494) * C1391 + (C13493 + C13492) * C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C50774 * C8043 +
            ((C13491 + C13490) * C1391 + (C13489 + C13488) * C1386 -
             (C14431 + C14430) * C1392 - (C14433 + C14432) * C50759) *
                C50774 * C8044 +
            ((C13496 + C13497) * C1391 + (C13498 + C13499) * C1386 -
             (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 + C51060 * C3095) *
                 C1392 -
             (C5200 * C9120 + C50954 * C9124 + C5199 * C3094 + C51060 * C3099) *
                 C50759) *
                C50774 * C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C2300 +
            ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
             (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                C2301 +
            (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C2300 +
            ((C5613 + C5612) * C1392 -
             ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
             (C5615 + C5614) * C50759) *
                C2301 +
            ((C5617 + C5616) * C1392 - (C5621 * C1386 + C5620 * C1391) +
             (C5619 + C5618) * C50759) *
                C2302) *
               C50916 * C50855) *
              C51046 +
          ((((C5424 + C5425) * C1392 -
             ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                  C1386 +
              (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                  C1391) +
             (C5426 + C5427) * C50759) *
                C2300 +
            ((C5429 + C5428) * C1392 -
             ((C5427 + C5426) * C1386 + (C5425 + C5424) * C1391) +
             (C5431 + C5430) * C50759) *
                C2301 +
            ((C5433 + C5432) * C1392 - (C5437 * C1386 + C5436 * C1391) +
             (C5435 + C5434) * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C1391 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C2300 +
            ((C6965 + C6964) * C1391 + (C6967 + C6966) * C1386 -
             (C6968 + C6969) * C1392 - (C6970 + C6971) * C50759) *
                C2301 +
            ((C6969 + C6968) * C1391 + (C6971 + C6970) * C1386 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C1392 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C50759) *
                C2302) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C1391 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C1386 -
            (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
             C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
                C1392 -
            (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
             C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
                C50759) *
               C50774 * C50916 * C1643 +
           ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
             C21043 * C1168 + C21039 * C1175 + C21044 * C6450 +
             C21040 * C6455) *
                C1392 -
            ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 +
              C21039 * C1181 + C21042 * C950 + C21038 * C959 + C21041 * C441 +
              C21037 * C452) *
                 C1386 +
             (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 +
              C21039 * C1177 + C21042 * C944 + C21038 * C949 + C21041 * C435 +
              C21037 * C442) *
                 C1391) +
            (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
             C21043 * C1174 + C21039 * C1180 + C21044 * C6454 +
             C21040 * C6459) *
                C50759) *
               C50774 * C50916 * C50855) *
              C51046 +
          (((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
             C21043 * C1082 + C21039 * C1089 + C21044 * C3564 +
             C21040 * C3569) *
                C1392 -
            ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 +
              C21039 * C1095 + C21042 * C820 + C21038 * C835 + C21041 * C293 +
              C21037 * C304) *
                 C1386 +
             (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 +
              C21039 * C1091 + C21042 * C811 + C21038 * C819 + C21041 * C287 +
              C21037 * C294) *
                 C1391) +
            (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
             C21043 * C1088 + C21039 * C1094 + C21044 * C3568 +
             C21040 * C3573) *
                C50759) *
               C50774 * C50916 * C1643 +
           ((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C1391 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C1386 -
            (C21044 * C16645 + C21040 * C16647 + C21043 * C3564 +
             C21039 * C3569 + C21042 * C1082 + C21038 * C1089 + C21041 * C812 +
             C21037 * C821) *
                C1392 -
            (C21044 * C16646 + C21040 * C16648 + C21043 * C3568 +
             C21039 * C3573 + C21042 * C1088 + C21038 * C1094 + C21041 * C822 +
             C21037 * C836) *
                C50759) *
               C50774 * C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
            (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C14227 * C8045) *
              C51092 +
          (((C5608 + C5609) * C1392 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C1386 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1391) +
            (C5610 + C5611) * C50759) *
               C50774 * C8043 +
           ((C6965 + C6964) * C1392 -
            ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
            (C6967 + C6966) * C50759) *
               C50774 * C8044 +
           ((C14430 + C14431) * C1392 - (C13500 * C1386 + C13501 * C1391) +
            (C14432 + C14433) * C50759) *
               C50774 * C8045) *
              C51082 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C1391 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C1386 -
            (C6198 + C6199) * C1392 - (C6200 + C6201) * C50759) *
               C50774 * C8043 +
           ((C13814 + C13815) * C1391 + (C13816 + C13817) * C1386 -
            (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                C1392 -
            (C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                C50759) *
               C50774 * C8044 +
           ((C13818 + C13819) * C1391 + (C13820 + C13821) * C1386 -
            (C5200 * C9234 + C50954 * C9237 + C5199 * C3442 + C51060 * C3447) *
                C1392 -
            (C5200 * C9236 + C50954 * C9240 + C5199 * C3446 + C51060 * C3451) *
                C50759) *
               C50774 * C8045) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
            (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
               C2302) *
              C50916 * C51092 +
          (((C5608 + C5609) * C1392 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C1386 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1391) +
            (C5610 + C5611) * C50759) *
               C2300 +
           ((C5613 + C5612) * C1392 -
            ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
            (C5615 + C5614) * C50759) *
               C2301 +
           ((C5617 + C5616) * C1392 - (C5621 * C1386 + C5620 * C1391) +
            (C5619 + C5618) * C50759) *
               C2302) *
              C50916 * C51082 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C1391 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C1386 -
            (C6198 + C6199) * C1392 - (C6200 + C6201) * C50759) *
               C2300 +
           ((C6199 + C6198) * C1391 + (C6201 + C6200) * C1386 -
            (C6202 + C6203) * C1392 - (C6204 + C6205) * C50759) *
               C2301 +
           ((C6203 + C6202) * C1391 + (C6205 + C6204) * C1386 -
            (C5200 * C1166 + C50954 * C1171 + C5199 * C947 + C51060 * C955) *
                C1392 -
            (C5200 * C1170 + C50954 * C1178 + C5199 * C956 + C51060 * C962) *
                C50759) *
               C2302) *
              C50916 * C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C1391 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C1386 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C1392 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C50759) *
              C50774 * C50916 * C51092 +
          ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
            C21043 * C1168 + C21039 * C1175 + C21044 * C6450 + C21040 * C6455) *
               C1392 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C1386 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C1391) +
           (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
            C21043 * C1174 + C21039 * C1180 + C21044 * C6454 + C21040 * C6459) *
               C50759) *
              C50774 * C50916 * C51082 +
          ((C21041 * C944 + C21037 * C949 + C21042 * C1169 + C21038 * C1177 +
            C21043 * C6451 + C21039 * C6457 + C21044 * C16748 +
            C21040 * C16752) *
               C1391 +
           (C21041 * C950 + C21037 * C959 + C21042 * C1176 + C21038 * C1181 +
            C21043 * C6456 + C21039 * C6460 + C21044 * C16751 +
            C21040 * C16754) *
               C1386 -
           (C21044 * C16747 + C21040 * C16750 + C21043 * C6450 +
            C21039 * C6455 + C21042 * C1168 + C21038 * C1175 + C21041 * C945 +
            C21037 * C951) *
               C1392 -
           (C21044 * C16749 + C21040 * C16753 + C21043 * C6454 +
            C21039 * C6459 + C21042 * C1174 + C21038 * C1180 + C21041 * C952 +
            C21037 * C960) *
               C50759) *
              C50774 * C50916 * C1875) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
            (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 - C5253 * C50759) *
               C2302) *
              C50916 * C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C51031 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C49770) +
            (C5426 + C5427) * C50759) *
               C2300 +
           ((C5429 + C5428) * C49763 -
            ((C5427 + C5426) * C51031 + (C5425 + C5424) * C49770) +
            (C5431 + C5430) * C50759) *
               C2301 +
           ((C5433 + C5432) * C49763 - (C5437 * C51031 + C5436 * C49770) +
            (C5435 + C5434) * C50759) *
               C2302) *
              C50916 * C50843 * C583 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C49770 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C51031 -
            (C5784 + C5785) * C49763 - (C5786 + C5787) * C50759) *
               C2300 +
           ((C5785 + C5784) * C49770 + (C5787 + C5786) * C51031 -
            (C5788 + C5789) * C49763 - (C5790 + C5791) * C50759) *
               C2301 +
           ((C5789 + C5788) * C49770 + (C5791 + C5790) * C51031 -
            (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                C49763 -
            (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                C50759) *
               C2302) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C2300 +
          ((C5235 + C5234) * C118 + (C5237 + C5236) * C106 -
           (C5239 + C5238) * C119 - (C5241 + C5240) * C107 +
           (C5243 + C5242) * C120 + (C5245 + C5244) * C108 -
           (C5246 + C5247) * C121 - (C5248 + C5249) * C109) *
              C2301 +
          (C5250 * C118 + C5251 * C106 - C5252 * C119 - C5253 * C107 +
           (C5247 + C5246) * C120 + (C5249 + C5248) * C108 -
           (C5200 * C439 + C50954 * C450 + C5199 * C127 + C51060 * C139) *
               C121 -
           (C5200 * C451 + C50954 * C457 + C5199 * C140 + C51060 * C148) *
               C109) *
              C2302) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C50774 * C8043 +
          ((C5199 * C287 + C51060 * C294 + C5200 * C811 + C50954 * C819) *
               C118 +
           (C5199 * C293 + C51060 * C304 + C5200 * C820 + C50954 * C835) *
               C106 -
           (C5425 + C5424) * C119 - (C5427 + C5426) * C107 +
           (C5429 + C5428) * C120 + (C5431 + C5430) * C108 -
           (C5432 + C5433) * C121 - (C5434 + C5435) * C109) *
              C50774 * C8044 +
          ((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
               C118 +
           (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
               C106 -
           (C5784 + C5785) * C119 - (C5786 + C5787) * C107 +
           (C5789 + C5788) * C120 + (C5791 + C5790) * C108 -
           (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
               C121 -
           (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
               C109) *
              C50774 * C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
            (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C13197 * C8045) *
              C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
            (C5426 + C5427) * C50759) *
               C50774 * C8043 +
           ((C5785 + C5784) * C49763 -
            ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
            (C5787 + C5786) * C50759) *
               C50774 * C8044 +
           ((C13186 + C13187) * C49763 -
            ((C13188 + C13189) * C51031 + (C13190 + C13191) * C49770) +
            (C13192 + C13193) * C50759) *
               C50774 * C8045) *
              C50843 * C583 +
          (C13197 * C8043 +
           ((C13191 + C13190) * C49770 + (C13189 + C13188) * C51031 -
            (C13187 + C13186) * C49763 - (C13193 + C13192) * C50759) *
               C50774 * C8044 +
           ((C5199 * C2909 + C51060 * C2915 + C5200 * C8792 + C50954 * C8796) *
                C49770 +
            (C5199 * C2914 + C51060 * C2918 + C5200 * C8795 + C50954 * C8798) *
                C51031 -
            (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                C49763 -
            (C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                C50759) *
               C50774 * C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
           C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
              C118 +
          (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
           C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
              C106 -
          (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
           C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
              C119 -
          (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
           C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
              C107 +
          (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
           C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
              C120 +
          (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
           C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
              C108 -
          (C21044 * C1166 + C21040 * C1171 + C21043 * C947 + C21039 * C955 +
           C21042 * C437 + C21038 * C446 + C21041 * C125 + C21037 * C135) *
              C121 -
          (C21044 * C1170 + C21040 * C1178 + C21043 * C956 + C21039 * C962 +
           C21042 * C447 + C21038 * C455 + C21041 * C136 + C21037 * C146) *
              C109) *
         C50774 * C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C49770 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C51031 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C49763 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C50759) *
              C50774 * C50916 * C50843 * C582 +
          ((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
            C21043 * C1082 + C21039 * C1089 + C21044 * C3564 + C21040 * C3569) *
               C49763 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C51031 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C49770) +
           (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
            C21043 * C1088 + C21039 * C1094 + C21044 * C3568 + C21040 * C3573) *
               C50759) *
              C50774 * C50916 * C50843 * C583 +
          ((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
            C21043 * C3443 + C21039 * C3449 + C21044 * C9235 + C21040 * C9239) *
               C49770 +
           (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
            C21043 * C3448 + C21039 * C3452 + C21044 * C9238 + C21040 * C9241) *
               C51031 -
           (C21044 * C9234 + C21040 * C9237 + C21043 * C3442 + C21039 * C3447 +
            C21042 * C817 + C21038 * C832 + C21041 * C588 + C21037 * C594) *
               C49763 -
           (C21044 * C9236 + C21040 * C9240 + C21043 * C3446 + C21039 * C3451 +
            C21042 * C831 + C21038 * C841 + C21041 * C595 + C21037 * C603) *
               C50759) *
              C50774 * C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C2300 +
           ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
           (C5250 * C696 + C5251 * C50754) * C2302) *
              C50916 * C50843 * C692 -
          ((C5437 * C50754 + C5436 * C696) * C2302 +
           ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
           ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                C50754 +
            (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                C696) *
               C2300) *
              C50916 * C50843 * C693 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C696 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C50754) *
               C2300 +
           ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
           ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
              C50916 * C50843 * C694 -
          (((C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C50754 +
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C696) *
               C2302 +
           ((C5200 * C3094 + C50954 * C3099 + C5199 * C705 + C51060 * C711) *
                C50754 +
            (C5200 * C3090 + C50954 * C3095 + C5199 * C699 + C51060 * C706) *
                C696) *
               C2301 +
           ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                C50754 +
            (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                C696) *
               C2300) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C2300 +
           ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
            (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
            (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
               C2301 +
           (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
            (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
               C2302) *
              C50916 * C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C278 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C2300 +
           ((C5429 + C5428) * C284 -
            ((C5427 + C5426) * C278 + (C5425 + C5424) * C283) +
            (C5431 + C5430) * C279 - (C5432 + C5433) * C285 -
            (C5434 + C5435) * C280) *
               C2301 +
           ((C5433 + C5432) * C284 - (C5437 * C278 + C5436 * C283) +
            (C5435 + C5434) * C279 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C285 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C280) *
               C2302) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C12865 + C12864) * C278 + (C12863 + C12862) * C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C50774 * C8043 +
           ((C5785 + C5784) * C284 -
            ((C12869 + C12868) * C278 + (C12867 + C12866) * C283) +
            (C5787 + C5786) * C279 - (C5788 + C5789) * C285 -
            (C5790 + C5791) * C280) *
               C50774 * C8044 +
           ((C5199 * C699 + C51060 * C706 + C5200 * C3090 + C50954 * C3095) *
                C284 -
            ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                 C278 +
             (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                 C283) +
            (C5199 * C705 + C51060 * C711 + C5200 * C3094 + C50954 * C3099) *
                C279 -
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C285 -
            (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C280) *
               C50774 * C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C8043 +
           ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
               C8044 +
           C13315 * C8045) *
              C50843 * C692 -
          (C13317 * C8045 +
           ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
               C8044 +
           ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
               C8043) *
              C50843 * C693 +
          (C13315 * C8043 +
           ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
               C8044 +
           ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
               C8045) *
              C50843 * C694 -
          (((C5200 * C11308 + C50954 * C11310 + C5199 * C8621 +
             C51060 * C8624) *
                C50754 +
            (C5200 * C11307 + C50954 * C11309 + C5199 * C8618 +
             C51060 * C8622) *
                C696) *
               C50774 * C8045 +
           ((C13314 + C13313) * C50754 + (C13312 + C13311) * C696) * C50774 *
               C8044 +
           C13317 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C283 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C278 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C284 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C279 +
           (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
            C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
               C285 +
           (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
            C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
               C280) *
              C50774 * C50916 * C50843 * C51046 +
          ((C21041 * C286 + C21037 * C292 + C21042 * C812 + C21038 * C821 +
            C21043 * C1082 + C21039 * C1089 + C21044 * C3564 + C21040 * C3569) *
               C284 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C278 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C283) +
           (C21041 * C295 + C21037 * C305 + C21042 * C822 + C21038 * C836 +
            C21043 * C1088 + C21039 * C1094 + C21044 * C3568 + C21040 * C3573) *
               C279 -
           (C21044 * C3563 + C21040 * C3567 + C21043 * C1081 + C21039 * C1087 +
            C21042 * C813 + C21038 * C823 + C21041 * C288 + C21037 * C296) *
               C285 -
           (C21044 * C3566 + C21040 * C3572 + C21043 * C1086 + C21039 * C1093 +
            C21042 * C824 + C21038 * C837 + C21041 * C297 + C21037 * C306) *
               C280) *
              C50774 * C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C696 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C50754) *
              C50774 * C50916 * C50843 * C692 -
          ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
            C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
               C50754 +
           (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
            C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
               C696) *
              C50774 * C50916 * C50843 * C693 +
          ((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
            C21043 * C3443 + C21039 * C3449 + C21044 * C9235 + C21040 * C9239) *
               C696 +
           (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
            C21043 * C3448 + C21039 * C3452 + C21044 * C9238 + C21040 * C9241) *
               C50754) *
              C50774 * C50916 * C50843 * C694 -
          ((C21044 * C11597 + C21040 * C11599 + C21043 * C9122 +
            C21039 * C9125 + C21042 * C3096 + C21038 * C3100 + C21041 * C707 +
            C21037 * C712) *
               C50754 +
           (C21044 * C11596 + C21040 * C11598 + C21043 * C9119 +
            C21039 * C9123 + C21042 * C3091 + C21038 * C3097 + C21041 * C700 +
            C21037 * C708) *
               C696) *
              C50774 * C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C51047 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C582 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C5199 * C812 + C51060 * C821 + C5200 * C1082 + C50954 * C1089) *
                 C696 +
             (C5199 * C822 + C51060 * C836 + C5200 * C1088 + C50954 * C1094) *
                 C50754) *
                C2301 +
            ((C5199 * C813 + C51060 * C823 + C5200 * C1081 + C50954 * C1087) *
                 C696 +
             (C5199 * C824 + C51060 * C837 + C5200 * C1086 + C50954 * C1093) *
                 C50754) *
                C2302) *
               C50916 * C50855 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C51047) *
              C583 +
          ((((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                 C696 +
             (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                 C50754) *
                C2300 +
            ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
            ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
               C50916 * C51047 -
           (((C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                 C50754 +
             (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                 C696) *
                C2302 +
            ((C5200 * C3446 + C50954 * C3451 + C5199 * C831 + C51060 * C841) *
                 C50754 +
             (C5200 * C3442 + C50954 * C3447 + C5199 * C817 + C51060 * C832) *
                 C696) *
                C2301 +
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C50754 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C2300 +
           ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
            (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
            (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
               C2301 +
           (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
            (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
               C2302) *
              C50916 * C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C2300 +
           ((C5613 + C5612) * C284 -
            ((C5611 + C5610) * C278 + (C5609 + C5608) * C283) +
            (C5615 + C5614) * C279 - (C5616 + C5617) * C285 -
            (C5618 + C5619) * C280) *
               C2301 +
           ((C5617 + C5616) * C284 - (C5621 * C278 + C5620 * C283) +
            (C5619 + C5618) * C279 -
            (C5200 * C948 + C50954 * C957 + C5199 * C438 + C51060 * C448) *
                C285 -
            (C5200 * C958 + C50954 * C963 + C5199 * C449 + C51060 * C456) *
                C280) *
               C2302) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C50774 * C8043 +
           ((C6965 + C6964) * C284 -
            ((C5200 * C1090 + C50954 * C1095 + C5199 * C820 + C51060 * C835) *
                 C278 +
             (C5200 * C1083 + C50954 * C1091 + C5199 * C811 + C51060 * C819) *
                 C283) +
            (C6967 + C6966) * C279 - (C6968 + C6969) * C285 -
            (C6970 + C6971) * C280) *
               C50774 * C8044 +
           ((C5199 * C817 + C51060 * C832 + C5200 * C3442 + C50954 * C3447) *
                C284 -
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C278 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C283) +
            (C5199 * C831 + C51060 * C841 + C5200 * C3446 + C50954 * C3451) *
                C279 -
            (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                C285 -
            (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                C280) *
               C50774 * C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C51047 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C50855) *
              C582 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C50855 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C51047) *
              C583 +
          ((C13315 * C8043 +
            ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
                C8044 +
            ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
                C8045) *
               C51047 -
           (((C5200 * C11519 + C50954 * C11521 + C5199 * C8795 +
              C51060 * C8798) *
                 C50754 +
             (C5200 * C11518 + C50954 * C11520 + C5199 * C8792 +
              C51060 * C8796) *
                 C696) *
                C50774 * C8045 +
            ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C50774 *
                C8044 +
            C13505 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
            C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
               C283 +
           (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
            C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
               C278 -
           (C21044 * C1168 + C21040 * C1175 + C21043 * C945 + C21039 * C951 +
            C21042 * C434 + C21038 * C440 + C21041 * C123 + C21037 * C131) *
               C284 -
           (C21044 * C1174 + C21040 * C1180 + C21043 * C952 + C21039 * C960 +
            C21042 * C443 + C21038 * C453 + C21041 * C132 + C21037 * C144) *
               C279 +
           (C21041 * C124 + C21037 * C133 + C21042 * C436 + C21038 * C444 +
            C21043 * C946 + C21039 * C953 + C21044 * C1167 + C21040 * C1173) *
               C285 +
           (C21041 * C134 + C21037 * C145 + C21042 * C445 + C21038 * C454 +
            C21043 * C954 + C21039 * C961 + C21044 * C1172 + C21040 * C1179) *
               C280) *
              C50774 * C50916 * C51047 +
          ((C21041 * C434 + C21037 * C440 + C21042 * C945 + C21038 * C951 +
            C21043 * C1168 + C21039 * C1175 + C21044 * C6450 + C21040 * C6455) *
               C284 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C278 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C283) +
           (C21041 * C443 + C21037 * C453 + C21042 * C952 + C21038 * C960 +
            C21043 * C1174 + C21039 * C1180 + C21044 * C6454 + C21040 * C6459) *
               C279 -
           (C21044 * C6449 + C21040 * C6453 + C21043 * C1167 + C21039 * C1173 +
            C21042 * C946 + C21038 * C953 + C21041 * C436 + C21037 * C444) *
               C285 -
           (C21044 * C6452 + C21040 * C6458 + C21043 * C1172 + C21039 * C1179 +
            C21042 * C954 + C21038 * C961 + C21041 * C445 + C21037 * C454) *
               C280) *
              C50774 * C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21041 * C122 + C21037 * C129 + C21042 * C435 + C21038 * C442 +
             C21043 * C944 + C21039 * C949 + C21044 * C1169 + C21040 * C1177) *
                C696 +
            (C21041 * C130 + C21037 * C143 + C21042 * C441 + C21038 * C452 +
             C21043 * C950 + C21039 * C959 + C21044 * C1176 + C21040 * C1181) *
                C50754) *
               C50774 * C50916 * C51047 -
           ((C21044 * C6456 + C21040 * C6460 + C21043 * C1176 + C21039 * C1181 +
             C21042 * C950 + C21038 * C959 + C21041 * C441 + C21037 * C452) *
                C50754 +
            (C21044 * C6451 + C21040 * C6457 + C21043 * C1169 + C21039 * C1177 +
             C21042 * C944 + C21038 * C949 + C21041 * C435 + C21037 * C442) *
                C696) *
               C50774 * C50916 * C50855) *
              C582 +
          (((C21041 * C811 + C21037 * C819 + C21042 * C1083 + C21038 * C1091 +
             C21043 * C3565 + C21039 * C3571 + C21044 * C13920 +
             C21040 * C13924) *
                C696 +
            (C21041 * C820 + C21037 * C835 + C21042 * C1090 + C21038 * C1095 +
             C21043 * C3570 + C21039 * C3574 + C21044 * C13923 +
             C21040 * C13926) *
                C50754) *
               C50774 * C50916 * C50855 -
           ((C21044 * C3570 + C21040 * C3574 + C21043 * C1090 + C21039 * C1095 +
             C21042 * C820 + C21038 * C835 + C21041 * C293 + C21037 * C304) *
                C50754 +
            (C21044 * C3565 + C21040 * C3571 + C21043 * C1083 + C21039 * C1091 +
             C21042 * C811 + C21038 * C819 + C21041 * C287 + C21037 * C294) *
                C696) *
               C50774 * C50916 * C51047) *
              C583 +
          (((C21041 * C587 + C21037 * C592 + C21042 * C818 + C21038 * C834 +
             C21043 * C3443 + C21039 * C3449 + C21044 * C9235 +
             C21040 * C9239) *
                C696 +
            (C21041 * C593 + C21037 * C602 + C21042 * C833 + C21038 * C842 +
             C21043 * C3448 + C21039 * C3452 + C21044 * C9238 +
             C21040 * C9241) *
                C50754) *
               C50774 * C50916 * C51047 -
           ((C21044 * C13921 + C21040 * C13925 + C21043 * C9238 +
             C21039 * C9241 + C21042 * C3448 + C21038 * C3452 + C21041 * C833 +
             C21037 * C842) *
                C50754 +
            (C21044 * C13919 + C21040 * C13922 + C21043 * C9235 +
             C21039 * C9239 + C21042 * C3443 + C21038 * C3449 + C21041 * C818 +
             C21037 * C834) *
                C696) *
               C50774 * C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1285 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51089 -
            (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
            C31695 * C1287 + C31696 * C1282) *
               C51090 +
           ((C31680 + C31679) * C1285 + (C31682 + C31681) * C51089 -
            (C31684 + C31683) * C1286 - (C31686 + C31685) * C51073 +
            (C31688 + C31687) * C1287 + (C31690 + C31689) * C1282) *
               C51076 +
           (C31695 * C1285 + C31696 * C51089 - C31697 * C1286 -
            C31698 * C51073 + (C31692 + C31691) * C1287 +
            (C31694 + C31693) * C1282) *
               C22847) *
              C50916 * C50843 * C1283 +
          (((C31869 + C31870) * C1286 -
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C51089 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C1285) +
            (C31871 + C31872) * C51073 - C31881 * C1287 - C31882 * C1282) *
               C51090 +
           ((C31874 + C31873) * C1286 -
            ((C31872 + C31871) * C51089 + (C31870 + C31869) * C1285) +
            (C31876 + C31875) * C51073 - (C31877 + C31878) * C1287 -
            (C31879 + C31880) * C1282) *
               C51076 +
           ((C31878 + C31877) * C1286 - (C31882 * C51089 + C31881 * C1285) +
            (C31880 + C31879) * C51073 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C1287 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C1282) *
               C22847) *
              C50916 * C50843 * C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1391 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C1386 -
            (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
               C51090 +
           ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
            (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
               C51076 +
           (C31695 * C1391 + C31696 * C1386 - C31697 * C1392 -
            C31698 * C50759) *
               C22847) *
              C50916 * C50843 * C51091 +
          (((C31869 + C31870) * C1392 -
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C1386 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C1391) +
            (C31871 + C31872) * C50759) *
               C51090 +
           ((C31874 + C31873) * C1392 -
            ((C31872 + C31871) * C1386 + (C31870 + C31869) * C1391) +
            (C31876 + C31875) * C50759) *
               C51076 +
           ((C31878 + C31877) * C1392 - (C31882 * C1386 + C31881 * C1391) +
            (C31880 + C31879) * C50759) *
               C22847) *
              C50916 * C50843 * C51079 +
          (((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                C1391 +
            (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                C1386 -
            (C32229 + C32230) * C1392 - (C32231 + C32232) * C50759) *
               C51090 +
           ((C32230 + C32229) * C1391 + (C32232 + C32231) * C1386 -
            (C32233 + C32234) * C1392 - (C32235 + C32236) * C50759) *
               C51076 +
           ((C32234 + C32233) * C1391 + (C32236 + C32235) * C1386 -
            (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                C1392 -
            (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                C50759) *
               C22847) *
              C50916 * C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C51090 +
            ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
             (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                C51076 +
            (C31695 * C1391 + C31696 * C1386 - C31697 * C1392 -
             C31698 * C50759) *
                C22847) *
               C50916 * C51047 +
           (((C32053 + C32054) * C1392 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C1386 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1391) +
             (C32055 + C32056) * C50759) *
                C51090 +
            ((C32058 + C32057) * C1392 -
             ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
             (C32060 + C32059) * C50759) *
                C51076 +
            ((C32062 + C32061) * C1392 - (C32066 * C1386 + C32065 * C1391) +
             (C32064 + C32063) * C50759) *
                C22847) *
               C50916 * C50855) *
              C1283 +
          ((((C31869 + C31870) * C1392 -
             ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                  C1386 +
              (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                  C1391) +
             (C31871 + C31872) * C50759) *
                C51090 +
            ((C31874 + C31873) * C1392 -
             ((C31872 + C31871) * C1386 + (C31870 + C31869) * C1391) +
             (C31876 + C31875) * C50759) *
                C51076 +
            ((C31878 + C31877) * C1392 - (C31882 * C1386 + C31881 * C1391) +
             (C31880 + C31879) * C50759) *
                C22847) *
               C50916 * C51047 +
           (((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C1391 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C1386 -
             (C33397 + C33398) * C1392 - (C33399 + C33400) * C50759) *
                C51090 +
            ((C33398 + C33397) * C1391 + (C33400 + C33399) * C1386 -
             (C33401 + C33402) * C1392 - (C33403 + C33404) * C50759) *
                C51076 +
            ((C33402 + C33401) * C1391 + (C33404 + C33403) * C1386 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C1392 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C50759) *
                C22847) *
               C50916 * C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C51090 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C51076 +
            (C31695 * C49770 + C31696 * C51031 - C31697 * C49763 -
             C31698 * C50759) *
                C22847) *
               C50916 * C1643 +
           (((C32053 + C32054) * C49763 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C51031 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C49770) +
             (C32055 + C32056) * C50759) *
                C51090 +
            ((C32058 + C32057) * C49763 -
             ((C32056 + C32055) * C51031 + (C32054 + C32053) * C49770) +
             (C32060 + C32059) * C50759) *
                C51076 +
            ((C32062 + C32061) * C49763 - (C32066 * C51031 + C32065 * C49770) +
             (C32064 + C32063) * C50759) *
                C22847) *
               C50916 * C50855) *
              C1283 +
          ((((C31869 + C31870) * C49763 -
             ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                  C51031 +
              (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                  C49770) +
             (C31871 + C31872) * C50759) *
                C51090 +
            ((C31874 + C31873) * C49763 -
             ((C31872 + C31871) * C51031 + (C31870 + C31869) * C49770) +
             (C31876 + C31875) * C50759) *
                C51076 +
            ((C31878 + C31877) * C49763 - (C31882 * C51031 + C31881 * C49770) +
             (C31880 + C31879) * C50759) *
                C22847) *
               C50916 * C1643 +
           (((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C49770 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C51031 -
             (C33397 + C33398) * C49763 - (C33399 + C33400) * C50759) *
                C51090 +
            ((C33398 + C33397) * C49770 + (C33400 + C33399) * C51031 -
             (C33401 + C33402) * C49763 - (C33403 + C33404) * C50759) *
                C51076 +
            ((C33402 + C33401) * C49770 + (C33404 + C33403) * C51031 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C49763 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C50759) *
                C22847) *
               C50916 * C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51090 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
            (C31695 * C696 + C31696 * C50754) * C22847) *
               C50916 * C1643 -
           ((C32066 * C50754 + C32065 * C696) * C22847 +
            ((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C51076 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C51090) *
               C50916 * C50855) *
              C51091 +
          ((((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C696 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C50754) *
                C51090 +
            ((C33398 + C33397) * C696 + (C33400 + C33399) * C50754) * C51076 +
            ((C33402 + C33401) * C696 + (C33404 + C33403) * C50754) * C22847) *
               C50916 * C50855 -
           ((C31882 * C50754 + C31881 * C696) * C22847 +
            ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C50754 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C696) *
                C51090) *
               C50916 * C1643) *
              C51079 +
          ((((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                 C696 +
             (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                 C50754) *
                C51090 +
            ((C32230 + C32229) * C696 + (C32232 + C32231) * C50754) * C51076 +
            ((C32234 + C32233) * C696 + (C32236 + C32235) * C50754) * C22847) *
               C50916 * C1643 -
           (((C31645 * C3444 + C50954 * C3450 + C31644 * C829 + C31642 * C840) *
                 C50754 +
             (C31645 * C3441 + C50954 * C3445 + C31644 * C816 + C31642 * C830) *
                 C696) *
                C22847 +
            ((C31645 * C3446 + C50954 * C3451 + C31644 * C831 + C31642 * C841) *
                 C50754 +
             (C31645 * C3442 + C50954 * C3447 + C31644 * C817 + C31642 * C832) *
                 C696) *
                C51076 +
            ((C31645 * C3448 + C50954 * C3452 + C31644 * C833 + C31642 * C842) *
                 C50754 +
             (C31645 * C3443 + C50954 * C3449 + C31644 * C818 + C31642 * C834) *
                 C696) *
                C51090) *
               C50916 * C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51090 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
            (C31695 * C696 + C31696 * C50754) * C22847) *
               C50916 * C51092 -
           ((C32066 * C50754 + C32065 * C696) * C22847 +
            ((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C51076 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C51090) *
               C50916 * C51082 +
           (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C696 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C50754) *
                C51090 +
            ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C51076 +
            ((C32648 + C32647) * C696 + (C32650 + C32649) * C50754) * C22847) *
               C50916 * C1875) *
              C1283 +
          ((((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C696 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C50754) *
                C51090 +
            ((C33398 + C33397) * C696 + (C33400 + C33399) * C50754) * C51076 +
            ((C33402 + C33401) * C696 + (C33404 + C33403) * C50754) * C22847) *
               C50916 * C51082 -
           ((C31882 * C50754 + C31881 * C696) * C22847 +
            ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C50754 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C696) *
                C51090) *
               C50916 * C51092 -
           (((C31645 * C3566 + C50954 * C3572 + C31644 * C1086 +
              C31642 * C1093) *
                 C50754 +
             (C31645 * C3563 + C50954 * C3567 + C31644 * C1081 +
              C31642 * C1087) *
                 C696) *
                C22847 +
            ((C31645 * C3568 + C50954 * C3573 + C31644 * C1088 +
              C31642 * C1094) *
                 C50754 +
             (C31645 * C3564 + C50954 * C3569 + C31644 * C1082 +
              C31642 * C1089) *
                 C696) *
                C51076 +
            ((C31645 * C3570 + C50954 * C3574 + C31644 * C1090 +
              C31642 * C1095) *
                 C50754 +
             (C31645 * C3565 + C50954 * C3571 + C31644 * C1083 +
              C31642 * C1091) *
                 C696) *
                C51090) *
               C50916 * C1875) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C49770 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51031 -
            (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
               C51090 +
           ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
            (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
               C51076 +
           (C31695 * C49770 + C31696 * C51031 - C31697 * C49763 -
            C31698 * C50759) *
               C22847) *
              C50916 * C50843 * C582 +
          (((C31869 + C31870) * C49763 -
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C51031 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C49770) +
            (C31871 + C31872) * C50759) *
               C51090 +
           ((C31874 + C31873) * C49763 -
            ((C31872 + C31871) * C51031 + (C31870 + C31869) * C49770) +
            (C31876 + C31875) * C50759) *
               C51076 +
           ((C31878 + C31877) * C49763 - (C31882 * C51031 + C31881 * C49770) +
            (C31880 + C31879) * C50759) *
               C22847) *
              C50916 * C50843 * C583 +
          (((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                C49770 +
            (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                C51031 -
            (C32229 + C32230) * C49763 - (C32231 + C32232) * C50759) *
               C51090 +
           ((C32230 + C32229) * C49770 + (C32232 + C32231) * C51031 -
            (C32233 + C32234) * C49763 - (C32235 + C32236) * C50759) *
               C51076 +
           ((C32234 + C32233) * C49770 + (C32236 + C32235) * C51031 -
            (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                C49763 -
            (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                C50759) *
               C22847) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
               C118 +
           (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
               C106 -
           (C31679 + C31680) * C119 - (C31681 + C31682) * C107 + C31695 * C120 +
           C31696 * C108 - C31697 * C121 - C31698 * C109) *
              C51090 +
          ((C31680 + C31679) * C118 + (C31682 + C31681) * C106 -
           (C31684 + C31683) * C119 - (C31686 + C31685) * C107 +
           (C31688 + C31687) * C120 + (C31690 + C31689) * C108 -
           (C31691 + C31692) * C121 - (C31693 + C31694) * C109) *
              C51076 +
          (C31695 * C118 + C31696 * C106 - C31697 * C119 - C31698 * C107 +
           (C31692 + C31691) * C120 + (C31694 + C31693) * C108 -
           (C31645 * C439 + C50954 * C450 + C31644 * C127 + C31642 * C139) *
               C121 -
           (C31645 * C451 + C50954 * C457 + C31644 * C140 + C31642 * C148) *
               C109) *
              C22847) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C49770 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51031 -
            (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
               C51090 +
           ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
            (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
               C51076 +
           (C31695 * C49770 + C31696 * C51031 - C31697 * C49763 -
            C31698 * C50759) *
               C22847) *
              C50916 * C941 +
          (((C32053 + C32054) * C49763 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C51031 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C49770) +
            (C32055 + C32056) * C50759) *
               C51090 +
           ((C32058 + C32057) * C49763 -
            ((C32056 + C32055) * C51031 + (C32054 + C32053) * C49770) +
            (C32060 + C32059) * C50759) *
               C51076 +
           ((C32062 + C32061) * C49763 - (C32066 * C51031 + C32065 * C49770) +
            (C32064 + C32063) * C50759) *
               C22847) *
              C50916 * C942 +
          (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                C49770 +
            (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                C51031 -
            (C32643 + C32644) * C49763 - (C32645 + C32646) * C50759) *
               C51090 +
           ((C32644 + C32643) * C49770 + (C32646 + C32645) * C51031 -
            (C32647 + C32648) * C49763 - (C32649 + C32650) * C50759) *
               C51076 +
           ((C32648 + C32647) * C49770 + (C32650 + C32649) * C51031 -
            (C31645 * C1166 + C50954 * C1171 + C31644 * C947 + C31642 * C955) *
                C49763 -
            (C31645 * C1170 + C50954 * C1178 + C31644 * C956 + C31642 * C962) *
                C50759) *
               C22847) *
              C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C696 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C50754) *
               C51090 +
           ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
           (C31695 * C696 + C31696 * C50754) * C22847) *
              C50916 * C50843 * C692 -
          ((C31882 * C50754 + C31881 * C696) * C22847 +
           ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
           ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                C50754 +
            (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                C696) *
               C51090) *
              C50916 * C50843 * C693 +
          (((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                C696 +
            (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                C50754) *
               C51090 +
           ((C32230 + C32229) * C696 + (C32232 + C32231) * C50754) * C51076 +
           ((C32234 + C32233) * C696 + (C32236 + C32235) * C50754) * C22847) *
              C50916 * C50843 * C694 -
          (((C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                C50754 +
            (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                C696) *
               C22847 +
           ((C31645 * C3094 + C50954 * C3099 + C31644 * C705 + C31642 * C711) *
                C50754 +
            (C31645 * C3090 + C50954 * C3095 + C31644 * C699 + C31642 * C706) *
                C696) *
               C51076 +
           ((C31645 * C3096 + C50954 * C3100 + C31644 * C707 + C31642 * C712) *
                C50754 +
            (C31645 * C3091 + C50954 * C3097 + C31644 * C700 + C31642 * C708) *
                C696) *
               C51090) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C51090 +
           ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
            (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
            (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
               C51076 +
           (C31695 * C283 + C31696 * C278 - C31697 * C284 - C31698 * C279 +
            (C31692 + C31691) * C285 + (C31694 + C31693) * C280) *
               C22847) *
              C50916 * C50843 * C51046 +
          (((C31869 + C31870) * C284 -
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C278 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C283) +
            (C31871 + C31872) * C279 - C31881 * C285 - C31882 * C280) *
               C51090 +
           ((C31874 + C31873) * C284 -
            ((C31872 + C31871) * C278 + (C31870 + C31869) * C283) +
            (C31876 + C31875) * C279 - (C31877 + C31878) * C285 -
            (C31879 + C31880) * C280) *
               C51076 +
           ((C31878 + C31877) * C284 - (C31882 * C278 + C31881 * C283) +
            (C31880 + C31879) * C279 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C285 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C280) *
               C22847) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51090 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
            (C31695 * C696 + C31696 * C50754) * C22847) *
               C50916 * C941 -
           ((C32066 * C50754 + C32065 * C696) * C22847 +
            ((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C51076 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C51090) *
               C50916 * C942 +
           (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C696 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C50754) *
                C51090 +
            ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C51076 +
            ((C32648 + C32647) * C696 + (C32650 + C32649) * C50754) * C22847) *
               C50916 * C943) *
              C51046 +
          ((((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C696 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C50754) *
                C51090 +
            ((C31644 * C812 + C31642 * C821 + C31645 * C1082 + C50954 * C1089) *
                 C696 +
             (C31644 * C822 + C31642 * C836 + C31645 * C1088 + C50954 * C1094) *
                 C50754) *
                C51076 +
            ((C31644 * C813 + C31642 * C823 + C31645 * C1081 + C50954 * C1087) *
                 C696 +
             (C31644 * C824 + C31642 * C837 + C31645 * C1086 + C50954 * C1093) *
                 C50754) *
                C22847) *
               C50916 * C942 -
           ((C31882 * C50754 + C31881 * C696) * C22847 +
            ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C50754 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C696) *
                C51090) *
               C50916 * C941 -
           (((C31645 * C3566 + C50954 * C3572 + C31644 * C1086 +
              C31642 * C1093) *
                 C50754 +
             (C31645 * C3563 + C50954 * C3567 + C31644 * C1081 +
              C31642 * C1087) *
                 C696) *
                C22847 +
            ((C31645 * C3568 + C50954 * C3573 + C31644 * C1088 +
              C31642 * C1094) *
                 C50754 +
             (C31645 * C3564 + C50954 * C3569 + C31644 * C1082 +
              C31642 * C1089) *
                 C696) *
                C51076 +
            ((C31645 * C3570 + C50954 * C3574 + C31644 * C1090 +
              C31642 * C1095) *
                 C50754 +
             (C31645 * C3565 + C50954 * C3571 + C31644 * C1083 +
              C31642 * C1091) *
                 C696) *
                C51090) *
               C50916 * C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51090 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
            (C31695 * C696 + C31696 * C50754) * C22847) *
               C50916 * C51047 -
           ((C32066 * C50754 + C32065 * C696) * C22847 +
            ((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C51076 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C51090) *
               C50916 * C50855) *
              C582 +
          ((((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C696 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C50754) *
                C51090 +
            ((C31644 * C812 + C31642 * C821 + C31645 * C1082 + C50954 * C1089) *
                 C696 +
             (C31644 * C822 + C31642 * C836 + C31645 * C1088 + C50954 * C1094) *
                 C50754) *
                C51076 +
            ((C31644 * C813 + C31642 * C823 + C31645 * C1081 + C50954 * C1087) *
                 C696 +
             (C31644 * C824 + C31642 * C837 + C31645 * C1086 + C50954 * C1093) *
                 C50754) *
                C22847) *
               C50916 * C50855 -
           ((C31882 * C50754 + C31881 * C696) * C22847 +
            ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C50754 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C696) *
                C51090) *
               C50916 * C51047) *
              C583 +
          ((((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                 C696 +
             (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                 C50754) *
                C51090 +
            ((C32230 + C32229) * C696 + (C32232 + C32231) * C50754) * C51076 +
            ((C32234 + C32233) * C696 + (C32236 + C32235) * C50754) * C22847) *
               C50916 * C51047 -
           (((C31645 * C3444 + C50954 * C3450 + C31644 * C829 + C31642 * C840) *
                 C50754 +
             (C31645 * C3441 + C50954 * C3445 + C31644 * C816 + C31642 * C830) *
                 C696) *
                C22847 +
            ((C31645 * C3446 + C50954 * C3451 + C31644 * C831 + C31642 * C841) *
                 C50754 +
             (C31645 * C3442 + C50954 * C3447 + C31644 * C817 + C31642 * C832) *
                 C696) *
                C51076 +
            ((C31645 * C3448 + C50954 * C3452 + C31644 * C833 + C31642 * C842) *
                 C50754 +
             (C31645 * C3443 + C50954 * C3449 + C31644 * C818 + C31642 * C834) *
                 C696) *
                C51090) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C51090 +
           ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
            (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
            (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
               C51076 +
           (C31695 * C283 + C31696 * C278 - C31697 * C284 - C31698 * C279 +
            (C31692 + C31691) * C285 + (C31694 + C31693) * C280) *
               C22847) *
              C50916 * C51047 +
          (((C32053 + C32054) * C284 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C278 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C283) +
            (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
               C51090 +
           ((C32058 + C32057) * C284 -
            ((C32056 + C32055) * C278 + (C32054 + C32053) * C283) +
            (C32060 + C32059) * C279 - (C32061 + C32062) * C285 -
            (C32063 + C32064) * C280) *
               C51076 +
           ((C32062 + C32061) * C284 - (C32066 * C278 + C32065 * C283) +
            (C32064 + C32063) * C279 -
            (C31645 * C948 + C50954 * C957 + C31644 * C438 + C31642 * C448) *
                C285 -
            (C31645 * C958 + C50954 * C963 + C31644 * C449 + C31642 * C456) *
                C280) *
               C22847) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C696 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C50754) *
               C51090 +
           ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
           (C31695 * C696 + C31696 * C50754) * C22847) *
              C50916 * C1162 -
          ((C32066 * C50754 + C32065 * C696) * C22847 +
           ((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C51076 +
           ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                C50754 +
            (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                C696) *
               C51090) *
              C50916 * C1163 +
          (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                C696 +
            (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                C50754) *
               C51090 +
           ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C51076 +
           ((C32648 + C32647) * C696 + (C32650 + C32649) * C50754) * C22847) *
              C50916 * C1164 -
          (((C31645 * C6452 + C50954 * C6458 + C31644 * C1172 +
             C31642 * C1179) *
                C50754 +
            (C31645 * C6449 + C50954 * C6453 + C31644 * C1167 +
             C31642 * C1173) *
                C696) *
               C22847 +
           ((C31645 * C6454 + C50954 * C6459 + C31644 * C1174 +
             C31642 * C1180) *
                C50754 +
            (C31645 * C6450 + C50954 * C6455 + C31644 * C1168 +
             C31642 * C1175) *
                C696) *
               C51076 +
           ((C31645 * C6456 + C50954 * C6460 + C31644 * C1176 +
             C31642 * C1181) *
                C50754 +
            (C31645 * C6451 + C50954 * C6457 + C31644 * C1169 +
             C31642 * C1177) *
                C696) *
               C51090) *
              C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1285 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51089 -
            (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
            C31695 * C1287 + C31696 * C1282) *
               C51090 +
           ((C31680 + C31679) * C1285 + (C31682 + C31681) * C51089 -
            (C31684 + C31683) * C1286 - (C31686 + C31685) * C51073 +
            (C31688 + C31687) * C1287 + (C31690 + C31689) * C1282) *
               C51076 +
           (C31695 * C1285 + C31696 * C51089 - C31697 * C1286 -
            C31698 * C51073 + (C31692 + C31691) * C1287 +
            (C31694 + C31693) * C1282) *
               C22847) *
              C50916 * C1643 +
          (((C32053 + C32054) * C1286 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C51089 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C1285) +
            (C32055 + C32056) * C51073 - C32065 * C1287 - C32066 * C1282) *
               C51090 +
           ((C32058 + C32057) * C1286 -
            ((C32056 + C32055) * C51089 + (C32054 + C32053) * C1285) +
            (C32060 + C32059) * C51073 - (C32061 + C32062) * C1287 -
            (C32063 + C32064) * C1282) *
               C51076 +
           ((C32062 + C32061) * C1286 - (C32066 * C51089 + C32065 * C1285) +
            (C32064 + C32063) * C51073 -
            (C31645 * C948 + C50954 * C957 + C31644 * C438 + C31642 * C448) *
                C1287 -
            (C31645 * C958 + C50954 * C963 + C31644 * C449 + C31642 * C456) *
                C1282) *
               C22847) *
              C50916 * C50855) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C51090 +
            ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
             (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                C51076 +
            (C31695 * C1391 + C31696 * C1386 - C31697 * C1392 -
             C31698 * C50759) *
                C22847) *
               C50916 * C1643 +
           (((C32053 + C32054) * C1392 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C1386 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1391) +
             (C32055 + C32056) * C50759) *
                C51090 +
            ((C32058 + C32057) * C1392 -
             ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
             (C32060 + C32059) * C50759) *
                C51076 +
            ((C32062 + C32061) * C1392 - (C32066 * C1386 + C32065 * C1391) +
             (C32064 + C32063) * C50759) *
                C22847) *
               C50916 * C50855) *
              C51046 +
          ((((C31869 + C31870) * C1392 -
             ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                  C1386 +
              (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                  C1391) +
             (C31871 + C31872) * C50759) *
                C51090 +
            ((C31874 + C31873) * C1392 -
             ((C31872 + C31871) * C1386 + (C31870 + C31869) * C1391) +
             (C31876 + C31875) * C50759) *
                C51076 +
            ((C31878 + C31877) * C1392 - (C31882 * C1386 + C31881 * C1391) +
             (C31880 + C31879) * C50759) *
                C22847) *
               C50916 * C1643 +
           (((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C1391 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C1386 -
             (C33397 + C33398) * C1392 - (C33399 + C33400) * C50759) *
                C51090 +
            ((C33398 + C33397) * C1391 + (C33400 + C33399) * C1386 -
             (C33401 + C33402) * C1392 - (C33403 + C33404) * C50759) *
                C51076 +
            ((C33402 + C33401) * C1391 + (C33404 + C33403) * C1386 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C1392 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C50759) *
                C22847) *
               C50916 * C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C1391 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C1386 -
            (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
               C51090 +
           ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
            (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
               C51076 +
           (C31695 * C1391 + C31696 * C1386 - C31697 * C1392 -
            C31698 * C50759) *
               C22847) *
              C50916 * C51092 +
          (((C32053 + C32054) * C1392 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C1386 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C1391) +
            (C32055 + C32056) * C50759) *
               C51090 +
           ((C32058 + C32057) * C1392 -
            ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
            (C32060 + C32059) * C50759) *
               C51076 +
           ((C32062 + C32061) * C1392 - (C32066 * C1386 + C32065 * C1391) +
            (C32064 + C32063) * C50759) *
               C22847) *
              C50916 * C51082 +
          (((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                C1391 +
            (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                C1386 -
            (C32643 + C32644) * C1392 - (C32645 + C32646) * C50759) *
               C51090 +
           ((C32644 + C32643) * C1391 + (C32646 + C32645) * C1386 -
            (C32647 + C32648) * C1392 - (C32649 + C32650) * C50759) *
               C51076 +
           ((C32648 + C32647) * C1391 + (C32650 + C32649) * C1386 -
            (C31645 * C1166 + C50954 * C1171 + C31644 * C947 + C31642 * C955) *
                C1392 -
            (C31645 * C1170 + C50954 * C1178 + C31644 * C956 + C31642 * C962) *
                C50759) *
               C22847) *
              C50916 * C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
               C118 +
           (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
               C106 -
           (C31679 + C31680) * C119 - (C31681 + C31682) * C107 + C31695 * C120 +
           C31696 * C108 - C31697 * C121 - C31698 * C109) *
              C51090 +
          ((C31680 + C31679) * C118 + (C31682 + C31681) * C106 -
           (C31684 + C31683) * C119 - (C31686 + C31685) * C107 +
           (C31688 + C31687) * C120 + (C31690 + C31689) * C108 -
           (C31691 + C31692) * C121 - (C31693 + C31694) * C109) *
              C51076 +
          (C31695 * C118 + C31696 * C106 - C31697 * C119 - C31698 * C107 +
           (C31692 + C31691) * C120 + (C31694 + C31693) * C108 -
           (C31645 * C439 + C50954 * C450 + C31644 * C127 + C31642 * C139) *
               C121 -
           (C31645 * C451 + C50954 * C457 + C31644 * C140 + C31642 * C148) *
               C109) *
              C22847) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C49770 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C51031 -
            (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
               C51090 +
           ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
            (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
               C51076 +
           (C31695 * C49770 + C31696 * C51031 - C31697 * C49763 -
            C31698 * C50759) *
               C22847) *
              C50916 * C50843 * C582 +
          (((C31869 + C31870) * C49763 -
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C51031 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C49770) +
            (C31871 + C31872) * C50759) *
               C51090 +
           ((C31874 + C31873) * C49763 -
            ((C31872 + C31871) * C51031 + (C31870 + C31869) * C49770) +
            (C31876 + C31875) * C50759) *
               C51076 +
           ((C31878 + C31877) * C49763 - (C31882 * C51031 + C31881 * C49770) +
            (C31880 + C31879) * C50759) *
               C22847) *
              C50916 * C50843 * C583 +
          (((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                C49770 +
            (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                C51031 -
            (C32229 + C32230) * C49763 - (C32231 + C32232) * C50759) *
               C51090 +
           ((C32230 + C32229) * C49770 + (C32232 + C32231) * C51031 -
            (C32233 + C32234) * C49763 - (C32235 + C32236) * C50759) *
               C51076 +
           ((C32234 + C32233) * C49770 + (C32236 + C32235) * C51031 -
            (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                C49763 -
            (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                C50759) *
               C22847) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C51090 +
           ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
            (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
            (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
               C51076 +
           (C31695 * C283 + C31696 * C278 - C31697 * C284 - C31698 * C279 +
            (C31692 + C31691) * C285 + (C31694 + C31693) * C280) *
               C22847) *
              C50916 * C50843 * C51046 +
          (((C31869 + C31870) * C284 -
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C278 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C283) +
            (C31871 + C31872) * C279 - C31881 * C285 - C31882 * C280) *
               C51090 +
           ((C31874 + C31873) * C284 -
            ((C31872 + C31871) * C278 + (C31870 + C31869) * C283) +
            (C31876 + C31875) * C279 - (C31877 + C31878) * C285 -
            (C31879 + C31880) * C280) *
               C51076 +
           ((C31878 + C31877) * C284 - (C31882 * C278 + C31881 * C283) +
            (C31880 + C31879) * C279 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C285 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C280) *
               C22847) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C696 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C50754) *
               C51090 +
           ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
           (C31695 * C696 + C31696 * C50754) * C22847) *
              C50916 * C50843 * C692 -
          ((C31882 * C50754 + C31881 * C696) * C22847 +
           ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
           ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                C50754 +
            (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                C696) *
               C51090) *
              C50916 * C50843 * C693 +
          (((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                C696 +
            (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                C50754) *
               C51090 +
           ((C32230 + C32229) * C696 + (C32232 + C32231) * C50754) * C51076 +
           ((C32234 + C32233) * C696 + (C32236 + C32235) * C50754) * C22847) *
              C50916 * C50843 * C694 -
          (((C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                C50754 +
            (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                C696) *
               C22847 +
           ((C31645 * C3094 + C50954 * C3099 + C31644 * C705 + C31642 * C711) *
                C50754 +
            (C31645 * C3090 + C50954 * C3095 + C31644 * C699 + C31642 * C706) *
                C696) *
               C51076 +
           ((C31645 * C3096 + C50954 * C3100 + C31644 * C707 + C31642 * C712) *
                C50754 +
            (C31645 * C3091 + C50954 * C3097 + C31644 * C700 + C31642 * C708) *
                C696) *
               C51090) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C283 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C278 -
            (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
            C31695 * C285 + C31696 * C280) *
               C51090 +
           ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
            (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
            (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
               C51076 +
           (C31695 * C283 + C31696 * C278 - C31697 * C284 - C31698 * C279 +
            (C31692 + C31691) * C285 + (C31694 + C31693) * C280) *
               C22847) *
              C50916 * C51047 +
          (((C32053 + C32054) * C284 -
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C278 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C283) +
            (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
               C51090 +
           ((C32058 + C32057) * C284 -
            ((C32056 + C32055) * C278 + (C32054 + C32053) * C283) +
            (C32060 + C32059) * C279 - (C32061 + C32062) * C285 -
            (C32063 + C32064) * C280) *
               C51076 +
           ((C32062 + C32061) * C284 - (C32066 * C278 + C32065 * C283) +
            (C32064 + C32063) * C279 -
            (C31645 * C948 + C50954 * C957 + C31644 * C438 + C31642 * C448) *
                C285 -
            (C31645 * C958 + C50954 * C963 + C31644 * C449 + C31642 * C456) *
                C280) *
               C22847) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C51090 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C51076 +
            (C31695 * C696 + C31696 * C50754) * C22847) *
               C50916 * C51047 -
           ((C32066 * C50754 + C32065 * C696) * C22847 +
            ((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C51076 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C51090) *
               C50916 * C50855) *
              C582 +
          ((((C31644 * C811 + C31642 * C819 + C31645 * C1083 + C50954 * C1091) *
                 C696 +
             (C31644 * C820 + C31642 * C835 + C31645 * C1090 + C50954 * C1095) *
                 C50754) *
                C51090 +
            ((C31644 * C812 + C31642 * C821 + C31645 * C1082 + C50954 * C1089) *
                 C696 +
             (C31644 * C822 + C31642 * C836 + C31645 * C1088 + C50954 * C1094) *
                 C50754) *
                C51076 +
            ((C31644 * C813 + C31642 * C823 + C31645 * C1081 + C50954 * C1087) *
                 C696 +
             (C31644 * C824 + C31642 * C837 + C31645 * C1086 + C50954 * C1093) *
                 C50754) *
                C22847) *
               C50916 * C50855 -
           ((C31882 * C50754 + C31881 * C696) * C22847 +
            ((C31872 + C31871) * C50754 + (C31870 + C31869) * C696) * C51076 +
            ((C31645 * C820 + C50954 * C835 + C31644 * C293 + C31642 * C304) *
                 C50754 +
             (C31645 * C811 + C50954 * C819 + C31644 * C287 + C31642 * C294) *
                 C696) *
                C51090) *
               C50916 * C51047) *
              C583 +
          ((((C31644 * C587 + C31642 * C592 + C31645 * C818 + C50954 * C834) *
                 C696 +
             (C31644 * C593 + C31642 * C602 + C31645 * C833 + C50954 * C842) *
                 C50754) *
                C51090 +
            ((C32230 + C32229) * C696 + (C32232 + C32231) * C50754) * C51076 +
            ((C32234 + C32233) * C696 + (C32236 + C32235) * C50754) * C22847) *
               C50916 * C51047 -
           (((C31645 * C3444 + C50954 * C3450 + C31644 * C829 + C31642 * C840) *
                 C50754 +
             (C31645 * C3441 + C50954 * C3445 + C31644 * C816 + C31642 * C830) *
                 C696) *
                C22847 +
            ((C31645 * C3446 + C50954 * C3451 + C31644 * C831 + C31642 * C841) *
                 C50754 +
             (C31645 * C3442 + C50954 * C3447 + C31644 * C817 + C31642 * C832) *
                 C696) *
                C51076 +
            ((C31645 * C3448 + C50954 * C3452 + C31644 * C833 + C31642 * C842) *
                 C50754 +
             (C31645 * C3443 + C50954 * C3449 + C31644 * C818 + C31642 * C834) *
                 C696) *
                C51090) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1285 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51089 -
             (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
             C31695 * C1287 + C31696 * C1282) *
                C25478 +
            ((C31680 + C31679) * C1285 + (C31682 + C31681) * C51089 -
             (C31684 + C31683) * C1286 - (C31686 + C31685) * C51073 +
             (C31688 + C31687) * C1287 + (C31690 + C31689) * C1282) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C1285 + (C34717 + C34718) * C51089 -
             C34709 * C1286 - C34710 * C51073 + C34711 * C1287 +
             C34712 * C1282) *
                C25478 +
            (C34713 * C1285 + C34714 * C51089 - C31881 * C1286 -
             C31882 * C51073 + (C31878 + C31877) * C1287 +
             (C31880 + C31879) * C1282) *
                C50779) *
               C50930) *
              C50843 * C1283 +
          (((C34713 * C1286 -
             ((C34718 + C34717) * C51089 + (C34716 + C34715) * C1285) +
             C34714 * C51073 - C31881 * C1287 - C31882 * C1282) *
                C25478 +
            (C34711 * C1286 - (C34710 * C51089 + C34709 * C1285) +
             C34712 * C51073 - (C31877 + C31878) * C1287 -
             (C31879 + C31880) * C1282) *
                C50779) *
               C51059 +
           ((C35107 * C1286 -
             ((C35127 + C35128) * C51089 + (C35129 + C35130) * C1285) +
             C35116 * C51073 - (C32233 + C32234) * C1287 -
             (C32235 + C32236) * C1282) *
                C25478 +
            ((C32234 + C32233) * C1286 - (C35117 * C51089 + C35118 * C1285) +
             (C32236 + C32235) * C51073 -
             (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                 C1287 -
             (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                 C1282) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C25478 +
            ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
             (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
             C34709 * C1392 - C34710 * C50759) *
                C25478 +
            (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C50843 * C51091 +
          (((C34713 * C1392 -
             ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
             C34714 * C50759) *
                C25478 +
            (C34711 * C1392 - (C34710 * C1386 + C34709 * C1391) +
             C34712 * C50759) *
                C50779) *
               C51059 +
           ((C35107 * C1392 -
             ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
             C35116 * C50759) *
                C25478 +
            ((C32234 + C32233) * C1392 - (C35117 * C1386 + C35118 * C1391) +
             (C32236 + C32235) * C50759) *
                C50779) *
               C50930) *
              C50843 * C51079 +
          ((((C35130 + C35129) * C1391 + (C35128 + C35127) * C1386 -
             C35118 * C1392 - C35117 * C50759) *
                C25478 +
            (C35107 * C1391 + C35116 * C1386 - (C32233 + C32234) * C1392 -
             (C32235 + C32236) * C50759) *
                C50779) *
               C51059 +
           (((C35273 + C35274) * C1391 + (C35275 + C35276) * C1386 -
             (C35131 + C35132) * C1392 - (C35133 + C35134) * C50759) *
                C25478 +
            ((C35132 + C35131) * C1391 + (C35134 + C35133) * C1386 -
             (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                 C1392 -
             (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C1391 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C1386 -
              (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                 C25478 +
             ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
              (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                 C50779) *
                C51059 +
            (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
              C34709 * C1392 - C34710 * C50759) *
                 C25478 +
             (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
              C31882 * C50759) *
                 C50779) *
                C50930) *
               C51047 +
           ((((C32053 + C32054) * C1392 -
              ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                   C1386 +
               (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                   C1391) +
              (C32055 + C32056) * C50759) *
                 C25478 +
             ((C32058 + C32057) * C1392 -
              ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
              (C32060 + C32059) * C50759) *
                 C50779) *
                C51059 +
            ((C36695 * C1392 -
              ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
              C36696 * C50759) *
                 C25478 +
             ((C33402 + C33401) * C1392 - (C36697 * C1386 + C36698 * C1391) +
              (C33404 + C33403) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C1283 +
          ((((C34713 * C1392 -
              ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
              C34714 * C50759) *
                 C25478 +
             (C34711 * C1392 - (C34710 * C1386 + C34709 * C1391) +
              C34712 * C50759) *
                 C50779) *
                C51059 +
            ((C35107 * C1392 -
              ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
              C35116 * C50759) *
                 C25478 +
             ((C32234 + C32233) * C1392 - (C35117 * C1386 + C35118 * C1391) +
              (C32236 + C32235) * C50759) *
                 C50779) *
                C50930) *
               C51047 +
           ((((C35498 + C35497) * C1391 + (C35496 + C35495) * C1386 -
              C36698 * C1392 - C36697 * C50759) *
                 C25478 +
             (C36695 * C1391 + C36696 * C1386 - (C33401 + C33402) * C1392 -
              (C33403 + C33404) * C50759) *
                 C50779) *
                C51059 +
            (((C35499 + C35500) * C1391 + (C35501 + C35502) * C1386 -
              (C35504 + C35503) * C1392 - (C35506 + C35505) * C50759) *
                 C25478 +
             ((C35503 + C35504) * C1391 + (C35505 + C35506) * C1386 -
              (C31645 * C3441 + C50954 * C3445 + C31644 * C816 +
               C31642 * C830) *
                  C1392 -
              (C31645 * C3444 + C50954 * C3450 + C31644 * C829 +
               C31642 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C49770 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C51031 -
              (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                 C25478 +
             ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
              (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                 C50779) *
                C51059 +
            (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
              C34709 * C49763 - C34710 * C50759) *
                 C25478 +
             (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
              C31882 * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C32053 + C32054) * C49763 -
              ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                   C51031 +
               (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                   C49770) +
              (C32055 + C32056) * C50759) *
                 C25478 +
             ((C32058 + C32057) * C49763 -
              ((C32056 + C32055) * C51031 + (C32054 + C32053) * C49770) +
              (C32060 + C32059) * C50759) *
                 C50779) *
                C51059 +
            ((C36695 * C49763 -
              ((C35495 + C35496) * C51031 + (C35497 + C35498) * C49770) +
              C36696 * C50759) *
                 C25478 +
             ((C33402 + C33401) * C49763 - (C36697 * C51031 + C36698 * C49770) +
              (C33404 + C33403) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C1283 +
          ((((C34713 * C49763 -
              ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
              C34714 * C50759) *
                 C25478 +
             (C34711 * C49763 - (C34710 * C51031 + C34709 * C49770) +
              C34712 * C50759) *
                 C50779) *
                C51059 +
            ((C35107 * C49763 -
              ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
              C35116 * C50759) *
                 C25478 +
             ((C32234 + C32233) * C49763 - (C35117 * C51031 + C35118 * C49770) +
              (C32236 + C32235) * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C35498 + C35497) * C49770 + (C35496 + C35495) * C51031 -
              C36698 * C49763 - C36697 * C50759) *
                 C25478 +
             (C36695 * C49770 + C36696 * C51031 - (C33401 + C33402) * C49763 -
              (C33403 + C33404) * C50759) *
                 C50779) *
                C51059 +
            (((C35499 + C35500) * C49770 + (C35501 + C35502) * C51031 -
              (C35504 + C35503) * C49763 - (C35506 + C35505) * C50759) *
                 C25478 +
             ((C35503 + C35504) * C49770 + (C35505 + C35506) * C51031 -
              (C31645 * C3441 + C50954 * C3445 + C31644 * C816 +
               C31642 * C830) *
                  C49763 -
              (C31645 * C3444 + C50954 * C3450 + C31644 * C829 +
               C31642 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C51059 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C1643 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C25478) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C25478) *
                C51059) *
               C50855) *
              C51091 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C25478 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C51059 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C25478 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
                C51059) *
               C1643) *
              C51079 +
          (((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C25478 +
             (C35107 * C696 + C35116 * C50754) * C50779) *
                C51059 +
            (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C25478 +
             ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
                C50930) *
               C1643 -
           ((((C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
               C31642 * C3099) *
                  C50754 +
              (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
               C31642 * C3095) *
                  C696) *
                 C50779 +
             ((C31645 * C9122 + C50954 * C9125 + C31644 * C3096 +
               C31642 * C3100) *
                  C50754 +
              (C31645 * C9119 + C50954 * C9123 + C31644 * C3091 +
               C31642 * C3097) *
                  C696) *
                 C25478) *
                C50930 +
            (((C35506 + C35505) * C50754 + (C35504 + C35503) * C696) * C50779 +
             ((C35502 + C35501) * C50754 + (C35500 + C35499) * C696) * C25478) *
                C51059) *
               C50855) *
              C1390)) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C51059 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C51092 -
           (((C36697 * C50754 + C36698 * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C25478) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C25478) *
                C51059) *
               C51082 +
           ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 +
               C50954 * C1177) *
                  C696 +
              (C31644 * C950 + C31642 * C959 + C31645 * C1176 +
               C50954 * C1181) *
                  C50754) *
                 C25478 +
             ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C50779) *
                C51059 +
            (((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C25478 +
             ((C35710 + C35709) * C696 + (C35712 + C35711) * C50754) * C50779) *
                C50930) *
               C1875) *
              C1283 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C25478 +
             (C36695 * C696 + C36696 * C50754) * C50779) *
                C51059 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C25478 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C51082 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
                C51059) *
               C51092 -
           ((((C31645 * C9236 + C50954 * C9240 + C31644 * C3446 +
               C31642 * C3451) *
                  C50754 +
              (C31645 * C9234 + C50954 * C9237 + C31644 * C3442 +
               C31642 * C3447) *
                  C696) *
                 C50779 +
             ((C31645 * C9238 + C50954 * C9241 + C31644 * C3448 +
               C31642 * C3452) *
                  C50754 +
              (C31645 * C9235 + C50954 * C9239 + C31644 * C3443 +
               C31642 * C3449) *
                  C696) *
                 C25478) *
                C50930 +
            (((C35711 + C35712) * C50754 + (C35709 + C35710) * C696) * C50779 +
             ((C35918 + C35917) * C50754 + (C35916 + C35915) * C696) * C25478) *
                C51059) *
               C1875) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C25478 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C25478 +
            (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C50843 * C582 +
          (((C34713 * C49763 -
             ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
             C34714 * C50759) *
                C25478 +
            (C34711 * C49763 - (C34710 * C51031 + C34709 * C49770) +
             C34712 * C50759) *
                C50779) *
               C51059 +
           ((C35107 * C49763 -
             ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
             C35116 * C50759) *
                C25478 +
            ((C32234 + C32233) * C49763 - (C35117 * C51031 + C35118 * C49770) +
             (C32236 + C32235) * C50759) *
                C50779) *
               C50930) *
              C50843 * C583 +
          ((((C35130 + C35129) * C49770 + (C35128 + C35127) * C51031 -
             C35118 * C49763 - C35117 * C50759) *
                C25478 +
            (C35107 * C49770 + C35116 * C51031 - (C32233 + C32234) * C49763 -
             (C32235 + C32236) * C50759) *
                C50779) *
               C51059 +
           (((C31644 * C700 + C31642 * C708 + C31645 * C3091 + C50954 * C3097) *
                 C49770 +
             (C31644 * C707 + C31642 * C712 + C31645 * C3096 + C50954 * C3100) *
                 C51031 -
             (C35131 + C35132) * C49763 - (C35133 + C35134) * C50759) *
                C25478 +
            ((C35132 + C35131) * C49770 + (C35134 + C35133) * C51031 -
             (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                 C49763 -
             (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C118 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C106 -
            (C31679 + C31680) * C119 - (C31681 + C31682) * C107 +
            C31695 * C120 + C31696 * C108 - C31697 * C121 - C31698 * C109) *
               C25478 +
           ((C31680 + C31679) * C118 + (C31682 + C31681) * C106 -
            (C31684 + C31683) * C119 - (C31686 + C31685) * C107 +
            (C31688 + C31687) * C120 + (C31690 + C31689) * C108 -
            (C31691 + C31692) * C121 - (C31693 + C31694) * C109) *
               C50779) *
              C51059 +
          (((C31644 * C287 + C31642 * C294 + C31645 * C811 + C50954 * C819) *
                C118 +
            (C31644 * C293 + C31642 * C304 + C31645 * C820 + C50954 * C835) *
                C106 -
            (C31870 + C31869) * C119 - (C31872 + C31871) * C107 +
            (C31874 + C31873) * C120 + (C31876 + C31875) * C108 -
            (C31877 + C31878) * C121 - (C31879 + C31880) * C109) *
               C25478 +
           ((C31869 + C31870) * C118 + (C31871 + C31872) * C106 -
            C31881 * C119 - C31882 * C107 + (C31878 + C31877) * C120 +
            (C31880 + C31879) * C108 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C121 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C109) *
               C50779) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C25478 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C25478 +
            (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C941 +
          ((((C32053 + C32054) * C49763 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C51031 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C49770) +
             (C32055 + C32056) * C50759) *
                C25478 +
            ((C32058 + C32057) * C49763 -
             ((C32056 + C32055) * C51031 + (C32054 + C32053) * C49770) +
             (C32060 + C32059) * C50759) *
                C50779) *
               C51059 +
           (((C33398 + C33397) * C49763 -
             ((C35495 + C35496) * C51031 + (C35497 + C35498) * C49770) +
             (C33400 + C33399) * C50759) *
                C25478 +
            ((C33402 + C33401) * C49763 -
             ((C33399 + C33400) * C51031 + (C33397 + C33398) * C49770) +
             (C33404 + C33403) * C50759) *
                C50779) *
               C50930) *
              C942 +
          ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C49770 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C51031 -
             (C32643 + C32644) * C49763 - (C32645 + C32646) * C50759) *
                C25478 +
            ((C32644 + C32643) * C49770 + (C32646 + C32645) * C51031 -
             (C32647 + C32648) * C49763 - (C32649 + C32650) * C50759) *
                C50779) *
               C51059 +
           (((C31644 * C1083 + C31642 * C1091 + C31645 * C3565 +
              C50954 * C3571) *
                 C49770 +
             (C31644 * C1090 + C31642 * C1095 + C31645 * C3570 +
              C50954 * C3574) *
                 C51031 -
             (C35709 + C35710) * C49763 - (C35711 + C35712) * C50759) *
                C25478 +
            ((C35710 + C35709) * C49770 + (C35712 + C35711) * C51031 -
             (C31645 * C3563 + C50954 * C3567 + C31644 * C1081 +
              C31642 * C1087) *
                 C49763 -
             (C31645 * C3566 + C50954 * C3572 + C31644 * C1086 +
              C31642 * C1093) *
                 C50759) *
                C50779) *
               C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C25478 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
               C51059 +
           (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
            (C34713 * C696 + C34714 * C50754) * C50779) *
               C50930) *
              C50843 * C692 -
          (((C35117 * C50754 + C35118 * C696) * C50779 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
               C50930 +
           ((C34710 * C50754 + C34709 * C696) * C50779 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
               C51059) *
              C50843 * C693 +
          ((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C25478 +
            (C35107 * C696 + C35116 * C50754) * C50779) *
               C51059 +
           (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C25478 +
            ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
               C50930) *
              C50843 * C694 -
          ((((C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
              C31642 * C2917) *
                 C50754 +
             (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
              C31642 * C2913) *
                 C696) *
                C50779 +
            ((C31645 * C8795 + C50954 * C8798 + C31644 * C2914 +
              C31642 * C2918) *
                 C50754 +
             (C31645 * C8792 + C50954 * C8796 + C31644 * C2909 +
              C31642 * C2915) *
                 C696) *
                C25478) *
               C50930 +
           (((C35133 + C35134) * C50754 + (C35131 + C35132) * C696) * C50779 +
            ((C35276 + C35275) * C50754 + (C35274 + C35273) * C696) * C25478) *
               C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C25478 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C25478 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C50843 * C51046 +
          (((C34713 * C284 -
             ((C34718 + C34717) * C278 + (C34716 + C34715) * C283) +
             C34714 * C279 - C31881 * C285 - C31882 * C280) *
                C25478 +
            (C34711 * C284 - (C34710 * C278 + C34709 * C283) + C34712 * C279 -
             (C31877 + C31878) * C285 - (C31879 + C31880) * C280) *
                C50779) *
               C51059 +
           (((C32230 + C32229) * C284 -
             ((C31645 * C833 + C50954 * C842 + C31644 * C593 + C31642 * C602) *
                  C278 +
              (C31645 * C818 + C50954 * C834 + C31644 * C587 + C31642 * C592) *
                  C283) +
             (C32232 + C32231) * C279 - (C32233 + C32234) * C285 -
             (C32235 + C32236) * C280) *
                C25478 +
            ((C32234 + C32233) * C284 -
             ((C32231 + C32232) * C278 + (C32229 + C32230) * C283) +
             (C32236 + C32235) * C279 -
             (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                 C285 -
             (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                 C280) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C51059 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C941 -
           ((((C33399 + C33400) * C50754 + (C33397 + C33398) * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C25478) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C25478) *
                C51059) *
               C942 +
           ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 +
               C50954 * C1177) *
                  C696 +
              (C31644 * C950 + C31642 * C959 + C31645 * C1176 +
               C50954 * C1181) *
                  C50754) *
                 C25478 +
             ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C50779) *
                C51059 +
            (((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C25478 +
             ((C35710 + C35709) * C696 + (C35712 + C35711) * C50754) * C50779) *
                C50930) *
               C943) *
              C51046 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C25478 +
             ((C33398 + C33397) * C696 + (C33400 + C33399) * C50754) * C50779) *
                C51059 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C25478 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C942 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
                C51059) *
               C941 -
           ((((C31645 * C9236 + C50954 * C9240 + C31644 * C3446 +
               C31642 * C3451) *
                  C50754 +
              (C31645 * C9234 + C50954 * C9237 + C31644 * C3442 +
               C31642 * C3447) *
                  C696) *
                 C50779 +
             ((C31645 * C9238 + C50954 * C9241 + C31644 * C3448 +
               C31642 * C3452) *
                  C50754 +
              (C31645 * C9235 + C50954 * C9239 + C31644 * C3443 +
               C31642 * C3449) *
                  C696) *
                 C25478) *
                C50930 +
            (((C35711 + C35712) * C50754 + (C35709 + C35710) * C696) * C50779 +
             ((C35918 + C35917) * C50754 + (C35916 + C35915) * C696) * C25478) *
                C51059) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C51059 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C33399 + C33400) * C50754 + (C33397 + C33398) * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C25478) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C25478) *
                C51059) *
               C50855) *
              C582 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C25478 +
             ((C33398 + C33397) * C696 + (C33400 + C33399) * C50754) * C50779) *
                C51059 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C25478 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
                C51059) *
               C51047) *
              C583 +
          (((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C25478 +
             (C35107 * C696 + C35116 * C50754) * C50779) *
                C51059 +
            (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C25478 +
             ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
               C31642 * C3099) *
                  C50754 +
              (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
               C31642 * C3095) *
                  C696) *
                 C50779 +
             ((C31645 * C9122 + C50954 * C9125 + C31644 * C3096 +
               C31642 * C3100) *
                  C50754 +
              (C31645 * C9119 + C50954 * C9123 + C31644 * C3091 +
               C31642 * C3097) *
                  C696) *
                 C25478) *
                C50930 +
            (((C35506 + C35505) * C50754 + (C35504 + C35503) * C696) * C50779 +
             ((C35502 + C35501) * C50754 + (C35500 + C35499) * C696) * C25478) *
                C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C25478 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C25478 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C51047 +
          ((((C32053 + C32054) * C284 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C278 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C283) +
             (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
                C25478 +
            ((C32058 + C32057) * C284 -
             ((C32056 + C32055) * C278 + (C32054 + C32053) * C283) +
             (C32060 + C32059) * C279 - (C32061 + C32062) * C285 -
             (C32063 + C32064) * C280) *
                C50779) *
               C51059 +
           (((C33398 + C33397) * C284 -
             ((C31645 * C1090 + C50954 * C1095 + C31644 * C820 +
               C31642 * C835) *
                  C278 +
              (C31645 * C1083 + C50954 * C1091 + C31644 * C811 +
               C31642 * C819) *
                  C283) +
             (C33400 + C33399) * C279 - (C33401 + C33402) * C285 -
             (C33403 + C33404) * C280) *
                C25478 +
            ((C33402 + C33401) * C284 -
             ((C33399 + C33400) * C278 + (C33397 + C33398) * C283) +
             (C33404 + C33403) * C279 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C285 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C280) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C25478 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
               C51059 +
           (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
            (C34713 * C696 + C34714 * C50754) * C50779) *
               C50930) *
              C1162 -
          ((((C33399 + C33400) * C50754 + (C33397 + C33398) * C696) * C50779 +
            ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C25478) *
               C50930 +
           (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
            ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                 C50754 +
             (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                 C696) *
                C25478) *
               C51059) *
              C1163 +
          ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C696 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C50754) *
                C25478 +
            ((C32644 + C32643) * C696 + (C32646 + C32645) * C50754) * C50779) *
               C51059 +
           (((C35915 + C35916) * C696 + (C35917 + C35918) * C50754) * C25478 +
            ((C35710 + C35709) * C696 + (C35712 + C35711) * C50754) * C50779) *
               C50930) *
              C1164 -
          ((((C31645 * C16646 + C50954 * C16648 + C31644 * C3568 +
              C31642 * C3573) *
                 C50754 +
             (C31645 * C16645 + C50954 * C16647 + C31644 * C3564 +
              C31642 * C3569) *
                 C696) *
                C50779 +
            ((C31645 * C13923 + C50954 * C13926 + C31644 * C3570 +
              C31642 * C3574) *
                 C50754 +
             (C31645 * C13920 + C50954 * C13924 + C31644 * C3565 +
              C31642 * C3571) *
                 C696) *
                C25478) *
               C50930 +
           (((C31645 * C6454 + C50954 * C6459 + C31644 * C1174 +
              C31642 * C1180) *
                 C50754 +
             (C31645 * C6450 + C50954 * C6455 + C31644 * C1168 +
              C31642 * C1175) *
                 C696) *
                C50779 +
            ((C31645 * C6456 + C50954 * C6460 + C31644 * C1176 +
              C31642 * C1181) *
                 C50754 +
             (C31645 * C6451 + C50954 * C6457 + C31644 * C1169 +
              C31642 * C1177) *
                 C696) *
                C25478) *
               C51059) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1285 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51089 -
             (C31679 + C31680) * C1286 - (C31681 + C31682) * C51073 +
             C31695 * C1287 + C31696 * C1282) *
                C25478 +
            ((C31680 + C31679) * C1285 + (C31682 + C31681) * C51089 -
             (C31684 + C31683) * C1286 - (C31686 + C31685) * C51073 +
             (C31688 + C31687) * C1287 + (C31690 + C31689) * C1282) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C1285 + (C34717 + C34718) * C51089 -
             C34709 * C1286 - C34710 * C51073 + C34711 * C1287 +
             C34712 * C1282) *
                C25478 +
            (C34713 * C1285 + C34714 * C51089 - C31881 * C1286 -
             C31882 * C51073 + (C31878 + C31877) * C1287 +
             (C31880 + C31879) * C1282) *
                C50779) *
               C50930) *
              C1643 +
          ((((C32053 + C32054) * C1286 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C51089 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1285) +
             (C32055 + C32056) * C51073 - C32065 * C1287 - C32066 * C1282) *
                C25478 +
            ((C32058 + C32057) * C1286 -
             ((C32056 + C32055) * C51089 + (C32054 + C32053) * C1285) +
             (C32060 + C32059) * C51073 - (C32061 + C32062) * C1287 -
             (C32063 + C32064) * C1282) *
                C50779) *
               C51059 +
           ((C36695 * C1286 -
             ((C35495 + C35496) * C51089 + (C35497 + C35498) * C1285) +
             C36696 * C51073 - (C33401 + C33402) * C1287 -
             (C33403 + C33404) * C1282) *
                C25478 +
            ((C33402 + C33401) * C1286 - (C36697 * C51089 + C36698 * C1285) +
             (C33404 + C33403) * C51073 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C1287 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C1282) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C1391 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C1386 -
              (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                 C25478 +
             ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
              (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                 C50779) *
                C51059 +
            (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
              C34709 * C1392 - C34710 * C50759) *
                 C25478 +
             (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
              C31882 * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C32053 + C32054) * C1392 -
              ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                   C1386 +
               (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                   C1391) +
              (C32055 + C32056) * C50759) *
                 C25478 +
             ((C32058 + C32057) * C1392 -
              ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
              (C32060 + C32059) * C50759) *
                 C50779) *
                C51059 +
            ((C36695 * C1392 -
              ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
              C36696 * C50759) *
                 C25478 +
             ((C33402 + C33401) * C1392 - (C36697 * C1386 + C36698 * C1391) +
              (C33404 + C33403) * C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C51046 +
          ((((C34713 * C1392 -
              ((C34718 + C34717) * C1386 + (C34716 + C34715) * C1391) +
              C34714 * C50759) *
                 C25478 +
             (C34711 * C1392 - (C34710 * C1386 + C34709 * C1391) +
              C34712 * C50759) *
                 C50779) *
                C51059 +
            ((C35107 * C1392 -
              ((C35127 + C35128) * C1386 + (C35129 + C35130) * C1391) +
              C35116 * C50759) *
                 C25478 +
             ((C32234 + C32233) * C1392 - (C35117 * C1386 + C35118 * C1391) +
              (C32236 + C32235) * C50759) *
                 C50779) *
                C50930) *
               C1643 +
           ((((C35498 + C35497) * C1391 + (C35496 + C35495) * C1386 -
              C36698 * C1392 - C36697 * C50759) *
                 C25478 +
             (C36695 * C1391 + C36696 * C1386 - (C33401 + C33402) * C1392 -
              (C33403 + C33404) * C50759) *
                 C50779) *
                C51059 +
            (((C35499 + C35500) * C1391 + (C35501 + C35502) * C1386 -
              (C35504 + C35503) * C1392 - (C35506 + C35505) * C50759) *
                 C25478 +
             ((C35503 + C35504) * C1391 + (C35505 + C35506) * C1386 -
              (C31645 * C3441 + C50954 * C3445 + C31644 * C816 +
               C31642 * C830) *
                  C1392 -
              (C31645 * C3444 + C50954 * C3450 + C31644 * C829 +
               C31642 * C840) *
                  C50759) *
                 C50779) *
                C50930) *
               C50855) *
              C50831)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C1391 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C1386 -
             (C31679 + C31680) * C1392 - (C31681 + C31682) * C50759) *
                C25478 +
            ((C31680 + C31679) * C1391 + (C31682 + C31681) * C1386 -
             (C31684 + C31683) * C1392 - (C31686 + C31685) * C50759) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C1391 + (C34717 + C34718) * C1386 -
             C34709 * C1392 - C34710 * C50759) *
                C25478 +
            (C34713 * C1391 + C34714 * C1386 - C31881 * C1392 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C51092 +
          ((((C32053 + C32054) * C1392 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C1386 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C1391) +
             (C32055 + C32056) * C50759) *
                C25478 +
            ((C32058 + C32057) * C1392 -
             ((C32056 + C32055) * C1386 + (C32054 + C32053) * C1391) +
             (C32060 + C32059) * C50759) *
                C50779) *
               C51059 +
           ((C36695 * C1392 -
             ((C35495 + C35496) * C1386 + (C35497 + C35498) * C1391) +
             C36696 * C50759) *
                C25478 +
            ((C33402 + C33401) * C1392 - (C36697 * C1386 + C36698 * C1391) +
             (C33404 + C33403) * C50759) *
                C50779) *
               C50930) *
              C51082 +
          ((((C31644 * C944 + C31642 * C949 + C31645 * C1169 + C50954 * C1177) *
                 C1391 +
             (C31644 * C950 + C31642 * C959 + C31645 * C1176 + C50954 * C1181) *
                 C1386 -
             (C32643 + C32644) * C1392 - (C32645 + C32646) * C50759) *
                C25478 +
            ((C32644 + C32643) * C1391 + (C32646 + C32645) * C1386 -
             (C32647 + C32648) * C1392 - (C32649 + C32650) * C50759) *
                C50779) *
               C51059 +
           (((C35915 + C35916) * C1391 + (C35917 + C35918) * C1386 -
             (C35709 + C35710) * C1392 - (C35711 + C35712) * C50759) *
                C25478 +
            ((C35710 + C35709) * C1391 + (C35712 + C35711) * C1386 -
             (C31645 * C3563 + C50954 * C3567 + C31644 * C1081 +
              C31642 * C1087) *
                 C1392 -
             (C31645 * C3566 + C50954 * C3572 + C31644 * C1086 +
              C31642 * C1093) *
                 C50759) *
                C50779) *
               C50930) *
              C1875) *
         C50817) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                C118 +
            (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                C106 -
            (C31679 + C31680) * C119 - (C31681 + C31682) * C107 +
            C31695 * C120 + C31696 * C108 - C31697 * C121 - C31698 * C109) *
               C25478 +
           ((C31680 + C31679) * C118 + (C31682 + C31681) * C106 -
            (C31684 + C31683) * C119 - (C31686 + C31685) * C107 +
            (C31688 + C31687) * C120 + (C31690 + C31689) * C108 -
            (C31691 + C31692) * C121 - (C31693 + C31694) * C109) *
               C50779) *
              C51059 +
          (((C31644 * C287 + C31642 * C294 + C31645 * C811 + C50954 * C819) *
                C118 +
            (C31644 * C293 + C31642 * C304 + C31645 * C820 + C50954 * C835) *
                C106 -
            (C31870 + C31869) * C119 - (C31872 + C31871) * C107 +
            (C31874 + C31873) * C120 + (C31876 + C31875) * C108 -
            (C31877 + C31878) * C121 - (C31879 + C31880) * C109) *
               C25478 +
           ((C31869 + C31870) * C118 + (C31871 + C31872) * C106 -
            C31881 * C119 - C31882 * C107 + (C31878 + C31877) * C120 +
            (C31880 + C31879) * C108 -
            (C31645 * C1523 + C50954 * C1524 + C31644 * C290 + C31642 * C300) *
                C121 -
            (C31645 * C1525 + C50954 * C1526 + C31644 * C301 + C31642 * C308) *
                C109) *
               C50779) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C49770 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C51031 -
             (C31679 + C31680) * C49763 - (C31681 + C31682) * C50759) *
                C25478 +
            ((C31680 + C31679) * C49770 + (C31682 + C31681) * C51031 -
             (C31684 + C31683) * C49763 - (C31686 + C31685) * C50759) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C49770 + (C34717 + C34718) * C51031 -
             C34709 * C49763 - C34710 * C50759) *
                C25478 +
            (C34713 * C49770 + C34714 * C51031 - C31881 * C49763 -
             C31882 * C50759) *
                C50779) *
               C50930) *
              C50843 * C582 +
          (((C34713 * C49763 -
             ((C34718 + C34717) * C51031 + (C34716 + C34715) * C49770) +
             C34714 * C50759) *
                C25478 +
            (C34711 * C49763 - (C34710 * C51031 + C34709 * C49770) +
             C34712 * C50759) *
                C50779) *
               C51059 +
           ((C35107 * C49763 -
             ((C35127 + C35128) * C51031 + (C35129 + C35130) * C49770) +
             C35116 * C50759) *
                C25478 +
            ((C32234 + C32233) * C49763 - (C35117 * C51031 + C35118 * C49770) +
             (C32236 + C32235) * C50759) *
                C50779) *
               C50930) *
              C50843 * C583 +
          ((((C35130 + C35129) * C49770 + (C35128 + C35127) * C51031 -
             C35118 * C49763 - C35117 * C50759) *
                C25478 +
            (C35107 * C49770 + C35116 * C51031 - (C32233 + C32234) * C49763 -
             (C32235 + C32236) * C50759) *
                C50779) *
               C51059 +
           (((C31644 * C700 + C31642 * C708 + C31645 * C3091 + C50954 * C3097) *
                 C49770 +
             (C31644 * C707 + C31642 * C712 + C31645 * C3096 + C50954 * C3100) *
                 C51031 -
             (C35131 + C35132) * C49763 - (C35133 + C35134) * C50759) *
                C25478 +
            ((C35132 + C35131) * C49770 + (C35134 + C35133) * C51031 -
             (C31645 * C3089 + C50954 * C3093 + C31644 * C698 + C31642 * C704) *
                 C49763 -
             (C31645 * C3092 + C50954 * C3098 + C31644 * C703 + C31642 * C710) *
                 C50759) *
                C50779) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C25478 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C25478 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C50843 * C51046 +
          (((C34713 * C284 -
             ((C34718 + C34717) * C278 + (C34716 + C34715) * C283) +
             C34714 * C279 - C31881 * C285 - C31882 * C280) *
                C25478 +
            (C34711 * C284 - (C34710 * C278 + C34709 * C283) + C34712 * C279 -
             (C31877 + C31878) * C285 - (C31879 + C31880) * C280) *
                C50779) *
               C51059 +
           (((C32230 + C32229) * C284 -
             ((C31645 * C833 + C50954 * C842 + C31644 * C593 + C31642 * C602) *
                  C278 +
              (C31645 * C818 + C50954 * C834 + C31644 * C587 + C31642 * C592) *
                  C283) +
             (C32232 + C32231) * C279 - (C32233 + C32234) * C285 -
             (C32235 + C32236) * C280) *
                C25478 +
            ((C32234 + C32233) * C284 -
             ((C32231 + C32232) * C278 + (C32229 + C32230) * C283) +
             (C32236 + C32235) * C279 -
             (C31645 * C815 + C50954 * C828 + C31644 * C590 + C31642 * C598) *
                 C285 -
             (C31645 * C827 + C50954 * C839 + C31644 * C599 + C31642 * C605) *
                 C280) *
                C50779) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C696 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C50754) *
                C25478 +
            ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
               C51059 +
           (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
            (C34713 * C696 + C34714 * C50754) * C50779) *
               C50930) *
              C50843 * C692 -
          (((C35117 * C50754 + C35118 * C696) * C50779 +
            ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
               C50930 +
           ((C34710 * C50754 + C34709 * C696) * C50779 +
            ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
               C51059) *
              C50843 * C693 +
          ((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C25478 +
            (C35107 * C696 + C35116 * C50754) * C50779) *
               C51059 +
           (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C25478 +
            ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
               C50930) *
              C50843 * C694 -
          ((((C31645 * C8793 + C50954 * C8797 + C31644 * C2912 +
              C31642 * C2917) *
                 C50754 +
             (C31645 * C8791 + C50954 * C8794 + C31644 * C2908 +
              C31642 * C2913) *
                 C696) *
                C50779 +
            ((C31645 * C8795 + C50954 * C8798 + C31644 * C2914 +
              C31642 * C2918) *
                 C50754 +
             (C31645 * C8792 + C50954 * C8796 + C31644 * C2909 +
              C31642 * C2915) *
                 C696) *
                C25478) *
               C50930 +
           (((C35133 + C35134) * C50754 + (C35131 + C35132) * C696) * C50779 +
            ((C35276 + C35275) * C50754 + (C35274 + C35273) * C696) * C25478) *
               C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                 C283 +
             (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                 C278 -
             (C31679 + C31680) * C284 - (C31681 + C31682) * C279 +
             C31695 * C285 + C31696 * C280) *
                C25478 +
            ((C31680 + C31679) * C283 + (C31682 + C31681) * C278 -
             (C31684 + C31683) * C284 - (C31686 + C31685) * C279 +
             (C31688 + C31687) * C285 + (C31690 + C31689) * C280) *
                C50779) *
               C51059 +
           (((C34715 + C34716) * C283 + (C34717 + C34718) * C278 -
             C34709 * C284 - C34710 * C279 + C34711 * C285 + C34712 * C280) *
                C25478 +
            (C34713 * C283 + C34714 * C278 - C31881 * C284 - C31882 * C279 +
             (C31878 + C31877) * C285 + (C31880 + C31879) * C280) *
                C50779) *
               C50930) *
              C51047 +
          ((((C32053 + C32054) * C284 -
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C278 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C283) +
             (C32055 + C32056) * C279 - C32065 * C285 - C32066 * C280) *
                C25478 +
            ((C32058 + C32057) * C284 -
             ((C32056 + C32055) * C278 + (C32054 + C32053) * C283) +
             (C32060 + C32059) * C279 - (C32061 + C32062) * C285 -
             (C32063 + C32064) * C280) *
                C50779) *
               C51059 +
           (((C33398 + C33397) * C284 -
             ((C31645 * C1090 + C50954 * C1095 + C31644 * C820 +
               C31642 * C835) *
                  C278 +
              (C31645 * C1083 + C50954 * C1091 + C31644 * C811 +
               C31642 * C819) *
                  C283) +
             (C33400 + C33399) * C279 - (C33401 + C33402) * C285 -
             (C33403 + C33404) * C280) *
                C25478 +
            ((C33402 + C33401) * C284 -
             ((C33399 + C33400) * C278 + (C33397 + C33398) * C283) +
             (C33404 + C33403) * C279 -
             (C31645 * C1080 + C50954 * C1085 + C31644 * C814 + C31642 * C825) *
                 C285 -
             (C31645 * C1084 + C50954 * C1092 + C31644 * C826 + C31642 * C838) *
                 C280) *
                C50779) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31644 * C122 + C31642 * C129 + C31645 * C435 + C50954 * C442) *
                  C696 +
              (C31644 * C130 + C31642 * C143 + C31645 * C441 + C50954 * C452) *
                  C50754) *
                 C25478 +
             ((C31680 + C31679) * C696 + (C31682 + C31681) * C50754) * C50779) *
                C51059 +
            (((C34715 + C34716) * C696 + (C34717 + C34718) * C50754) * C25478 +
             (C34713 * C696 + C34714 * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C33399 + C33400) * C50754 + (C33397 + C33398) * C696) * C50779 +
             ((C35495 + C35496) * C50754 + (C35497 + C35498) * C696) * C25478) *
                C50930 +
            (((C32056 + C32055) * C50754 + (C32054 + C32053) * C696) * C50779 +
             ((C31645 * C950 + C50954 * C959 + C31644 * C441 + C31642 * C452) *
                  C50754 +
              (C31645 * C944 + C50954 * C949 + C31644 * C435 + C31642 * C442) *
                  C696) *
                 C25478) *
                C51059) *
               C50855) *
              C582 +
          (((((C35498 + C35497) * C696 + (C35496 + C35495) * C50754) * C25478 +
             ((C33398 + C33397) * C696 + (C33400 + C33399) * C50754) * C50779) *
                C51059 +
            (((C35499 + C35500) * C696 + (C35501 + C35502) * C50754) * C25478 +
             ((C35503 + C35504) * C696 + (C35505 + C35506) * C50754) * C50779) *
                C50930) *
               C50855 -
           (((C35117 * C50754 + C35118 * C696) * C50779 +
             ((C35127 + C35128) * C50754 + (C35129 + C35130) * C696) * C25478) *
                C50930 +
            ((C34710 * C50754 + C34709 * C696) * C50779 +
             ((C34718 + C34717) * C50754 + (C34716 + C34715) * C696) * C25478) *
                C51059) *
               C51047) *
              C583 +
          (((((C35130 + C35129) * C696 + (C35128 + C35127) * C50754) * C25478 +
             (C35107 * C696 + C35116 * C50754) * C50779) *
                C51059 +
            (((C35273 + C35274) * C696 + (C35275 + C35276) * C50754) * C25478 +
             ((C35132 + C35131) * C696 + (C35134 + C35133) * C50754) * C50779) *
                C50930) *
               C51047 -
           ((((C31645 * C9120 + C50954 * C9124 + C31644 * C3094 +
               C31642 * C3099) *
                  C50754 +
              (C31645 * C9118 + C50954 * C9121 + C31644 * C3090 +
               C31642 * C3095) *
                  C696) *
                 C50779 +
             ((C31645 * C9122 + C50954 * C9125 + C31644 * C3096 +
               C31642 * C3100) *
                  C50754 +
              (C31645 * C9119 + C50954 * C9123 + C31644 * C3091 +
               C31642 * C3097) *
                  C696) *
                 C25478) *
                C50930 +
            (((C35506 + C35505) * C50754 + (C35504 + C35503) * C696) * C50779 +
             ((C35502 + C35501) * C50754 + (C35500 + C35499) * C696) * C25478) *
                C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C1285 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C51089 -
                     (C38131 + C38132 + C38133) * C1286 -
                     (C38134 + C38135 + C38136) * C51073 +
                     (C38137 + C38138 + C38139) * C1287 +
                     (C38140 + C38141 + C38142) * C1282) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C1285 +
                     (C38136 + C38135 + C38134) * C51089 -
                     (C38139 + C38138 + C38137) * C1286 -
                     (C38142 + C38141 + C38140) * C51073 +
                     (C38145 + C38144 + C38143) * C1287 +
                     (C38148 + C38147 + C38146) * C1282) *
                        C50779) *
                       C50916 * C50843 * C1283 +
                   (((C38319 + C38320 + C38321) * C1286 -
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C51089 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C1285) +
                     (C38322 + C38323 + C38324) * C51073 -
                     (C38325 + C38326 + C38327) * C1287 -
                     (C38328 + C38329 + C38330) * C1282) *
                        C25478 +
                    ((C38327 + C38326 + C38325) * C1286 -
                     ((C38324 + C38323 + C38322) * C51089 +
                      (C38321 + C38320 + C38319) * C1285) +
                     (C38330 + C38329 + C38328) * C51073 -
                     (C38093 * C1080 + C38090 * C1085 + C38092 * C814 +
                      C51088 * C825 + C38091 * C289 + C51094 * C298) *
                         C1287 -
                     (C38093 * C1084 + C38090 * C1092 + C38092 * C826 +
                      C51088 * C838 + C38091 * C299 + C51094 * C307) *
                         C1282) *
                        C50779) *
                       C50916 * C50843 * C50831)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C1391 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C1386 -
                     (C38131 + C38132 + C38133) * C1392 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C1391 +
                     (C38136 + C38135 + C38134) * C1386 -
                     (C38139 + C38138 + C38137) * C1392 -
                     (C38142 + C38141 + C38140) * C50759) *
                        C50779) *
                       C50916 * C50843 * C51091 +
                   (((C38319 + C38320 + C38321) * C1392 -
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C1386 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C1391) +
                     (C38322 + C38323 + C38324) * C50759) *
                        C25478 +
                    ((C38327 + C38326 + C38325) * C1392 -
                     ((C38324 + C38323 + C38322) * C1386 +
                      (C38321 + C38320 + C38319) * C1391) +
                     (C38330 + C38329 + C38328) * C50759) *
                        C50779) *
                       C50916 * C50843 * C51079 +
                   (((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                      C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                         C1391 +
                     (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                      C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                         C1386 -
                     (C38671 + C38672 + C38673) * C1392 -
                     (C38674 + C38675 + C38676) * C50759) *
                        C25478 +
                    ((C38673 + C38672 + C38671) * C1391 +
                     (C38676 + C38675 + C38674) * C1386 -
                     (C38093 * C3441 + C38090 * C3445 + C38092 * C816 +
                      C51088 * C830 + C38091 * C589 + C51094 * C596) *
                         C1392 -
                     (C38093 * C3444 + C38090 * C3450 + C38092 * C829 +
                      C51088 * C840 + C38091 * C597 + C51094 * C604) *
                         C50759) *
                        C50779) *
                       C50916 * C50843 * C1390)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C1391 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C1386 -
                      (C38131 + C38132 + C38133) * C1392 -
                      (C38134 + C38135 + C38136) * C50759) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C1391 +
                      (C38136 + C38135 + C38134) * C1386 -
                      (C38139 + C38138 + C38137) * C1392 -
                      (C38142 + C38141 + C38140) * C50759) *
                         C50779) *
                        C50916 * C51047 +
                    (((C38501 + C38502 + C38503) * C1392 -
                      ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                        C51088 * C959 + C38091 * C441 + C51094 * C452) *
                           C1386 +
                       (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                        C51088 * C949 + C38091 * C435 + C51094 * C442) *
                           C1391) +
                      (C38504 + C38505 + C38506) * C50759) *
                         C25478 +
                     ((C38509 + C38508 + C38507) * C1392 -
                      ((C38506 + C38505 + C38504) * C1386 +
                       (C38503 + C38502 + C38501) * C1391) +
                      (C38512 + C38511 + C38510) * C50759) *
                         C50779) *
                        C50916 * C50855) *
                       C1283 +
                   ((((C38319 + C38320 + C38321) * C1392 -
                      ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                        C51088 * C835 + C38091 * C293 + C51094 * C304) *
                           C1386 +
                       (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                        C51088 * C819 + C38091 * C287 + C51094 * C294) *
                           C1391) +
                      (C38322 + C38323 + C38324) * C50759) *
                         C25478 +
                     ((C38327 + C38326 + C38325) * C1392 -
                      ((C38324 + C38323 + C38322) * C1386 +
                       (C38321 + C38320 + C38319) * C1391) +
                      (C38330 + C38329 + C38328) * C50759) *
                         C50779) *
                        C50916 * C51047 +
                    (((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C1391 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C1386 -
                      (C39827 + C39828 + C39829) * C1392 -
                      (C39830 + C39831 + C39832) * C50759) *
                         C25478 +
                     ((C39829 + C39828 + C39827) * C1391 +
                      (C39832 + C39831 + C39830) * C1386 -
                      (C38093 * C3563 + C38090 * C3567 + C38092 * C1081 +
                       C51088 * C1087 + C38091 * C813 + C51094 * C823) *
                          C1392 -
                      (C38093 * C3566 + C38090 * C3572 + C38092 * C1086 +
                       C51088 * C1093 + C38091 * C824 + C51094 * C837) *
                          C50759) *
                         C50779) *
                        C50916 * C50855) *
                       C50831)) /
                 (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C49770 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C51031 -
                      (C38131 + C38132 + C38133) * C49763 -
                      (C38134 + C38135 + C38136) * C50759) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C49770 +
                      (C38136 + C38135 + C38134) * C51031 -
                      (C38139 + C38138 + C38137) * C49763 -
                      (C38142 + C38141 + C38140) * C50759) *
                         C50779) *
                        C50916 * C1643 +
                    (((C38501 + C38502 + C38503) * C49763 -
                      ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                        C51088 * C959 + C38091 * C441 + C51094 * C452) *
                           C51031 +
                       (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                        C51088 * C949 + C38091 * C435 + C51094 * C442) *
                           C49770) +
                      (C38504 + C38505 + C38506) * C50759) *
                         C25478 +
                     ((C38509 + C38508 + C38507) * C49763 -
                      ((C38506 + C38505 + C38504) * C51031 +
                       (C38503 + C38502 + C38501) * C49770) +
                      (C38512 + C38511 + C38510) * C50759) *
                         C50779) *
                        C50916 * C50855) *
                       C1283 +
                   ((((C38319 + C38320 + C38321) * C49763 -
                      ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                        C51088 * C835 + C38091 * C293 + C51094 * C304) *
                           C51031 +
                       (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                        C51088 * C819 + C38091 * C287 + C51094 * C294) *
                           C49770) +
                      (C38322 + C38323 + C38324) * C50759) *
                         C25478 +
                     ((C38327 + C38326 + C38325) * C49763 -
                      ((C38324 + C38323 + C38322) * C51031 +
                       (C38321 + C38320 + C38319) * C49770) +
                      (C38330 + C38329 + C38328) * C50759) *
                         C50779) *
                        C50916 * C1643 +
                    (((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C49770 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C51031 -
                      (C39827 + C39828 + C39829) * C49763 -
                      (C39830 + C39831 + C39832) * C50759) *
                         C25478 +
                     ((C39829 + C39828 + C39827) * C49770 +
                      (C39832 + C39831 + C39830) * C51031 -
                      (C38093 * C3563 + C38090 * C3567 + C38092 * C1081 +
                       C51088 * C1087 + C38091 * C813 + C51094 * C823) *
                          C49763 -
                      (C38093 * C3566 + C38090 * C3572 + C38092 * C1086 +
                       C51088 * C1093 + C38091 * C824 + C51094 * C837) *
                          C50759) *
                         C50779) *
                        C50916 * C50855) *
                       C50831)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C696 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C50754) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C696 +
                      (C38136 + C38135 + C38134) * C50754) *
                         C50779) *
                        C50916 * C1643 -
                    (((C38506 + C38505 + C38504) * C50754 +
                      (C38503 + C38502 + C38501) * C696) *
                         C50779 +
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C50754 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C696) *
                         C25478) *
                        C50916 * C50855) *
                       C51091 +
                   ((((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C696 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C50754) *
                         C25478 +
                     ((C39829 + C39828 + C39827) * C696 +
                      (C39832 + C39831 + C39830) * C50754) *
                         C50779) *
                        C50916 * C50855 -
                    (((C38324 + C38323 + C38322) * C50754 +
                      (C38321 + C38320 + C38319) * C696) *
                         C50779 +
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C50754 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C696) *
                         C25478) *
                        C50916 * C1643) *
                       C51079 +
                   ((((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                       C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                          C696 +
                      (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                       C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                          C50754) *
                         C25478 +
                     ((C38673 + C38672 + C38671) * C696 +
                      (C38676 + C38675 + C38674) * C50754) *
                         C50779) *
                        C50916 * C1643 -
                    (((C38093 * C9236 + C38090 * C9240 + C38092 * C3446 +
                       C51088 * C3451 + C38091 * C831 + C51094 * C841) *
                          C50754 +
                      (C38093 * C9234 + C38090 * C9237 + C38092 * C3442 +
                       C51088 * C3447 + C38091 * C817 + C51094 * C832) *
                          C696) *
                         C50779 +
                     ((C38093 * C9238 + C38090 * C9241 + C38092 * C3448 +
                       C51088 * C3452 + C38091 * C833 + C51094 * C842) *
                          C50754 +
                      (C38093 * C9235 + C38090 * C9239 + C38092 * C3443 +
                       C51088 * C3449 + C38091 * C818 + C51094 * C834) *
                          C696) *
                         C25478) *
                        C50916 * C50855) *
                       C1390)) /
                 (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C696 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C50754) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C696 +
                      (C38136 + C38135 + C38134) * C50754) *
                         C50779) *
                        C50916 * C51092 -
                    (((C38506 + C38505 + C38504) * C50754 +
                      (C38503 + C38502 + C38501) * C696) *
                         C50779 +
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C50754 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C696) *
                         C25478) *
                        C50916 * C51082 +
                    (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                       C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                          C696 +
                      (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                       C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                          C50754) *
                         C25478 +
                     ((C39081 + C39080 + C39079) * C696 +
                      (C39084 + C39083 + C39082) * C50754) *
                         C50779) *
                        C50916 * C1875) *
                       C1283 +
                   ((((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C696 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C50754) *
                         C25478 +
                     ((C39829 + C39828 + C39827) * C696 +
                      (C39832 + C39831 + C39830) * C50754) *
                         C50779) *
                        C50916 * C51082 -
                    (((C38324 + C38323 + C38322) * C50754 +
                      (C38321 + C38320 + C38319) * C696) *
                         C50779 +
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C50754 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C696) *
                         C25478) *
                        C50916 * C51092 -
                    (((C38093 * C16646 + C38090 * C16648 + C38092 * C3568 +
                       C51088 * C3573 + C38091 * C1088 + C51094 * C1094) *
                          C50754 +
                      (C38093 * C16645 + C38090 * C16647 + C38092 * C3564 +
                       C51088 * C3569 + C38091 * C1082 + C51094 * C1089) *
                          C696) *
                         C50779 +
                     ((C38093 * C13923 + C38090 * C13926 + C38092 * C3570 +
                       C51088 * C3574 + C38091 * C1090 + C51094 * C1095) *
                          C50754 +
                      (C38093 * C13920 + C38090 * C13924 + C38092 * C3565 +
                       C51088 * C3571 + C38091 * C1083 + C51094 * C1091) *
                          C696) *
                         C25478) *
                        C50916 * C1875) *
                       C50831)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C49770 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C51031 -
                     (C38131 + C38132 + C38133) * C49763 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C49770 +
                     (C38136 + C38135 + C38134) * C51031 -
                     (C38139 + C38138 + C38137) * C49763 -
                     (C38142 + C38141 + C38140) * C50759) *
                        C50779) *
                       C50916 * C50843 * C582 +
                   (((C38319 + C38320 + C38321) * C49763 -
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C51031 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C49770) +
                     (C38322 + C38323 + C38324) * C50759) *
                        C25478 +
                    ((C38327 + C38326 + C38325) * C49763 -
                     ((C38324 + C38323 + C38322) * C51031 +
                      (C38321 + C38320 + C38319) * C49770) +
                     (C38330 + C38329 + C38328) * C50759) *
                        C50779) *
                       C50916 * C50843 * C583 +
                   (((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                      C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                         C49770 +
                     (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                      C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                         C51031 -
                     (C38671 + C38672 + C38673) * C49763 -
                     (C38674 + C38675 + C38676) * C50759) *
                        C25478 +
                    ((C38673 + C38672 + C38671) * C49770 +
                     (C38676 + C38675 + C38674) * C51031 -
                     (C38093 * C3441 + C38090 * C3445 + C38092 * C816 +
                      C51088 * C830 + C38091 * C589 + C51094 * C596) *
                         C49763 -
                     (C38093 * C3444 + C38090 * C3450 + C38092 * C829 +
                      C51088 * C840 + C38091 * C597 + C51094 * C604) *
                         C50759) *
                        C50779) *
                       C50916 * C50843 * C584)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C118 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C106 -
                    (C38131 + C38132 + C38133) * C119 -
                    (C38134 + C38135 + C38136) * C107 +
                    (C38137 + C38138 + C38139) * C120 +
                    (C38140 + C38141 + C38142) * C108 -
                    (C38143 + C38144 + C38145) * C121 -
                    (C38146 + C38147 + C38148) * C109) *
                       C25478 +
                   ((C38133 + C38132 + C38131) * C118 +
                    (C38136 + C38135 + C38134) * C106 -
                    (C38139 + C38138 + C38137) * C119 -
                    (C38142 + C38141 + C38140) * C107 +
                    (C38145 + C38144 + C38143) * C120 +
                    (C38148 + C38147 + C38146) * C108 -
                    (C38093 * C948 + C38090 * C957 + C38092 * C438 +
                     C51088 * C448 + C38091 * C126 + C51094 * C137) *
                        C121 -
                    (C38093 * C958 + C38090 * C963 + C38092 * C449 +
                     C51088 * C456 + C38091 * C138 + C51094 * C147) *
                        C109) *
                       C50779) *
                  C50916 * C50843 * C50817) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C49770 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C51031 -
                     (C38131 + C38132 + C38133) * C49763 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C49770 +
                     (C38136 + C38135 + C38134) * C51031 -
                     (C38139 + C38138 + C38137) * C49763 -
                     (C38142 + C38141 + C38140) * C50759) *
                        C50779) *
                       C50916 * C941 +
                   (((C38501 + C38502 + C38503) * C49763 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C51031 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C49770) +
                     (C38504 + C38505 + C38506) * C50759) *
                        C25478 +
                    ((C38509 + C38508 + C38507) * C49763 -
                     ((C38506 + C38505 + C38504) * C51031 +
                      (C38503 + C38502 + C38501) * C49770) +
                     (C38512 + C38511 + C38510) * C50759) *
                        C50779) *
                       C50916 * C942 +
                   (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                      C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                         C49770 +
                     (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                      C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                         C51031 -
                     (C39079 + C39080 + C39081) * C49763 -
                     (C39082 + C39083 + C39084) * C50759) *
                        C25478 +
                    ((C39081 + C39080 + C39079) * C49770 +
                     (C39084 + C39083 + C39082) * C51031 -
                     (C38093 * C6449 + C38090 * C6453 + C38092 * C1167 +
                      C51088 * C1173 + C38091 * C946 + C51094 * C953) *
                         C49763 -
                     (C38093 * C6452 + C38090 * C6458 + C38092 * C1172 +
                      C51088 * C1179 + C38091 * C954 + C51094 * C961) *
                         C50759) *
                        C50779) *
                       C50916 * C943) *
                  C50817) /
                     (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C696 +
                     (C38136 + C38135 + C38134) * C50754) *
                        C50779) *
                       C50916 * C50843 * C692 -
                   (((C38324 + C38323 + C38322) * C50754 +
                     (C38321 + C38320 + C38319) * C696) *
                        C50779 +
                    ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                      C51088 * C835 + C38091 * C293 + C51094 * C304) *
                         C50754 +
                     (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                      C51088 * C819 + C38091 * C287 + C51094 * C294) *
                         C696) *
                        C25478) *
                       C50916 * C50843 * C693 +
                   (((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                      C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                         C696 +
                     (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                      C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                         C50754) *
                        C25478 +
                    ((C38673 + C38672 + C38671) * C696 +
                     (C38676 + C38675 + C38674) * C50754) *
                        C50779) *
                       C50916 * C50843 * C694 -
                   (((C38093 * C9120 + C38090 * C9124 + C38092 * C3094 +
                      C51088 * C3099 + C38091 * C705 + C51094 * C711) *
                         C50754 +
                     (C38093 * C9118 + C38090 * C9121 + C38092 * C3090 +
                      C51088 * C3095 + C38091 * C699 + C51094 * C706) *
                         C696) *
                        C50779 +
                    ((C38093 * C9122 + C38090 * C9125 + C38092 * C3096 +
                      C51088 * C3100 + C38091 * C707 + C51094 * C712) *
                         C50754 +
                     (C38093 * C9119 + C38090 * C9123 + C38092 * C3091 +
                      C51088 * C3097 + C38091 * C700 + C51094 * C708) *
                         C696) *
                        C25478) *
                       C50916 * C50843 * C695)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C283 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C278 -
                     (C38131 + C38132 + C38133) * C284 -
                     (C38134 + C38135 + C38136) * C279 +
                     (C38137 + C38138 + C38139) * C285 +
                     (C38140 + C38141 + C38142) * C280) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C283 +
                     (C38136 + C38135 + C38134) * C278 -
                     (C38139 + C38138 + C38137) * C284 -
                     (C38142 + C38141 + C38140) * C279 +
                     (C38145 + C38144 + C38143) * C285 +
                     (C38148 + C38147 + C38146) * C280) *
                        C50779) *
                       C50916 * C50843 * C51046 +
                   (((C38319 + C38320 + C38321) * C284 -
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C278 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C283) +
                     (C38322 + C38323 + C38324) * C279 -
                     (C38325 + C38326 + C38327) * C285 -
                     (C38328 + C38329 + C38330) * C280) *
                        C25478 +
                    ((C38327 + C38326 + C38325) * C284 -
                     ((C38324 + C38323 + C38322) * C278 +
                      (C38321 + C38320 + C38319) * C283) +
                     (C38330 + C38329 + C38328) * C279 -
                     (C38093 * C1080 + C38090 * C1085 + C38092 * C814 +
                      C51088 * C825 + C38091 * C289 + C51094 * C298) *
                         C285 -
                     (C38093 * C1084 + C38090 * C1092 + C38092 * C826 +
                      C51088 * C838 + C38091 * C299 + C51094 * C307) *
                         C280) *
                        C50779) *
                       C50916 * C50843 * C50831)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C696 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C50754) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C696 +
                      (C38136 + C38135 + C38134) * C50754) *
                         C50779) *
                        C50916 * C941 -
                    (((C38506 + C38505 + C38504) * C50754 +
                      (C38503 + C38502 + C38501) * C696) *
                         C50779 +
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C50754 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C696) *
                         C25478) *
                        C50916 * C942 +
                    (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                       C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                          C696 +
                      (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                       C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                          C50754) *
                         C25478 +
                     ((C39081 + C39080 + C39079) * C696 +
                      (C39084 + C39083 + C39082) * C50754) *
                         C50779) *
                        C50916 * C943) *
                       C51046 +
                   ((((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C696 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C50754) *
                         C25478 +
                     ((C38091 * C812 + C51094 * C821 + C38092 * C1082 +
                       C51088 * C1089 + C38093 * C3564 + C38090 * C3569) *
                          C696 +
                      (C38091 * C822 + C51094 * C836 + C38092 * C1088 +
                       C51088 * C1094 + C38093 * C3568 + C38090 * C3573) *
                          C50754) *
                         C50779) *
                        C50916 * C942 -
                    (((C38324 + C38323 + C38322) * C50754 +
                      (C38321 + C38320 + C38319) * C696) *
                         C50779 +
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C50754 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C696) *
                         C25478) *
                        C50916 * C941 -
                    (((C38093 * C16646 + C38090 * C16648 + C38092 * C3568 +
                       C51088 * C3573 + C38091 * C1088 + C51094 * C1094) *
                          C50754 +
                      (C38093 * C16645 + C38090 * C16647 + C38092 * C3564 +
                       C51088 * C3569 + C38091 * C1082 + C51094 * C1089) *
                          C696) *
                         C50779 +
                     ((C38093 * C13923 + C38090 * C13926 + C38092 * C3570 +
                       C51088 * C3574 + C38091 * C1090 + C51094 * C1095) *
                          C50754 +
                      (C38093 * C13920 + C38090 * C13924 + C38092 * C3565 +
                       C51088 * C3571 + C38091 * C1083 + C51094 * C1091) *
                          C696) *
                         C25478) *
                        C50916 * C943) *
                       C50831)) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C696 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C50754) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C696 +
                      (C38136 + C38135 + C38134) * C50754) *
                         C50779) *
                        C50916 * C51047 -
                    (((C38506 + C38505 + C38504) * C50754 +
                      (C38503 + C38502 + C38501) * C696) *
                         C50779 +
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C50754 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C696) *
                         C25478) *
                        C50916 * C50855) *
                       C582 +
                   ((((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C696 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C50754) *
                         C25478 +
                     ((C38091 * C812 + C51094 * C821 + C38092 * C1082 +
                       C51088 * C1089 + C38093 * C3564 + C38090 * C3569) *
                          C696 +
                      (C38091 * C822 + C51094 * C836 + C38092 * C1088 +
                       C51088 * C1094 + C38093 * C3568 + C38090 * C3573) *
                          C50754) *
                         C50779) *
                        C50916 * C50855 -
                    (((C38324 + C38323 + C38322) * C50754 +
                      (C38321 + C38320 + C38319) * C696) *
                         C50779 +
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C50754 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C696) *
                         C25478) *
                        C50916 * C51047) *
                       C583 +
                   ((((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                       C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                          C696 +
                      (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                       C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                          C50754) *
                         C25478 +
                     ((C38673 + C38672 + C38671) * C696 +
                      (C38676 + C38675 + C38674) * C50754) *
                         C50779) *
                        C50916 * C51047 -
                    (((C38093 * C9236 + C38090 * C9240 + C38092 * C3446 +
                       C51088 * C3451 + C38091 * C831 + C51094 * C841) *
                          C50754 +
                      (C38093 * C9234 + C38090 * C9237 + C38092 * C3442 +
                       C51088 * C3447 + C38091 * C817 + C51094 * C832) *
                          C696) *
                         C50779 +
                     ((C38093 * C9238 + C38090 * C9241 + C38092 * C3448 +
                       C51088 * C3452 + C38091 * C833 + C51094 * C842) *
                          C50754 +
                      (C38093 * C9235 + C38090 * C9239 + C38092 * C3443 +
                       C51088 * C3449 + C38091 * C818 + C51094 * C834) *
                          C696) *
                         C25478) *
                        C50916 * C50855) *
                       C584)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C283 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C278 -
                     (C38131 + C38132 + C38133) * C284 -
                     (C38134 + C38135 + C38136) * C279 +
                     (C38137 + C38138 + C38139) * C285 +
                     (C38140 + C38141 + C38142) * C280) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C283 +
                     (C38136 + C38135 + C38134) * C278 -
                     (C38139 + C38138 + C38137) * C284 -
                     (C38142 + C38141 + C38140) * C279 +
                     (C38145 + C38144 + C38143) * C285 +
                     (C38148 + C38147 + C38146) * C280) *
                        C50779) *
                       C50916 * C51047 +
                   (((C38501 + C38502 + C38503) * C284 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C278 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C283) +
                     (C38504 + C38505 + C38506) * C279 -
                     (C38507 + C38508 + C38509) * C285 -
                     (C38510 + C38511 + C38512) * C280) *
                        C25478 +
                    ((C38509 + C38508 + C38507) * C284 -
                     ((C38506 + C38505 + C38504) * C278 +
                      (C38503 + C38502 + C38501) * C283) +
                     (C38512 + C38511 + C38510) * C279 -
                     (C38093 * C1166 + C38090 * C1171 + C38092 * C947 +
                      C51088 * C955 + C38091 * C437 + C51094 * C446) *
                         C285 -
                     (C38093 * C1170 + C38090 * C1178 + C38092 * C956 +
                      C51088 * C962 + C38091 * C447 + C51094 * C455) *
                         C280) *
                        C50779) *
                       C50916 * C50855) *
                  C50817) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C696 +
                     (C38136 + C38135 + C38134) * C50754) *
                        C50779) *
                       C50916 * C1162 -
                   (((C38506 + C38505 + C38504) * C50754 +
                     (C38503 + C38502 + C38501) * C696) *
                        C50779 +
                    ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                      C51088 * C959 + C38091 * C441 + C51094 * C452) *
                         C50754 +
                     (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                      C51088 * C949 + C38091 * C435 + C51094 * C442) *
                         C696) *
                        C25478) *
                       C50916 * C1163 +
                   (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                      C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                         C696 +
                     (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                      C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                         C50754) *
                        C25478 +
                    ((C39081 + C39080 + C39079) * C696 +
                     (C39084 + C39083 + C39082) * C50754) *
                        C50779) *
                       C50916 * C1164 -
                   (((C38093 * C16749 + C38090 * C16753 + C38092 * C6454 +
                      C51088 * C6459 + C38091 * C1174 + C51094 * C1180) *
                         C50754 +
                     (C38093 * C16747 + C38090 * C16750 + C38092 * C6450 +
                      C51088 * C6455 + C38091 * C1168 + C51094 * C1175) *
                         C696) *
                        C50779 +
                    ((C38093 * C16751 + C38090 * C16754 + C38092 * C6456 +
                      C51088 * C6460 + C38091 * C1176 + C51094 * C1181) *
                         C50754 +
                     (C38093 * C16748 + C38090 * C16752 + C38092 * C6451 +
                      C51088 * C6457 + C38091 * C1169 + C51094 * C1177) *
                         C696) *
                        C25478) *
                       C50916 * C1165) *
                  C50817) /
                     (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C1285 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C51089 -
                     (C38131 + C38132 + C38133) * C1286 -
                     (C38134 + C38135 + C38136) * C51073 +
                     (C38137 + C38138 + C38139) * C1287 +
                     (C38140 + C38141 + C38142) * C1282) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C1285 +
                     (C38136 + C38135 + C38134) * C51089 -
                     (C38139 + C38138 + C38137) * C1286 -
                     (C38142 + C38141 + C38140) * C51073 +
                     (C38145 + C38144 + C38143) * C1287 +
                     (C38148 + C38147 + C38146) * C1282) *
                        C50779) *
                       C50916 * C1643 +
                   (((C38501 + C38502 + C38503) * C1286 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C51089 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C1285) +
                     (C38504 + C38505 + C38506) * C51073 -
                     (C38507 + C38508 + C38509) * C1287 -
                     (C38510 + C38511 + C38512) * C1282) *
                        C25478 +
                    ((C38509 + C38508 + C38507) * C1286 -
                     ((C38506 + C38505 + C38504) * C51089 +
                      (C38503 + C38502 + C38501) * C1285) +
                     (C38512 + C38511 + C38510) * C51073 -
                     (C38093 * C1166 + C38090 * C1171 + C38092 * C947 +
                      C51088 * C955 + C38091 * C437 + C51094 * C446) *
                         C1287 -
                     (C38093 * C1170 + C38090 * C1178 + C38092 * C956 +
                      C51088 * C962 + C38091 * C447 + C51094 * C455) *
                         C1282) *
                        C50779) *
                       C50916 * C50855) *
                  C50817) /
                 (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C1391 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C1386 -
                      (C38131 + C38132 + C38133) * C1392 -
                      (C38134 + C38135 + C38136) * C50759) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C1391 +
                      (C38136 + C38135 + C38134) * C1386 -
                      (C38139 + C38138 + C38137) * C1392 -
                      (C38142 + C38141 + C38140) * C50759) *
                         C50779) *
                        C50916 * C1643 +
                    (((C38501 + C38502 + C38503) * C1392 -
                      ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                        C51088 * C959 + C38091 * C441 + C51094 * C452) *
                           C1386 +
                       (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                        C51088 * C949 + C38091 * C435 + C51094 * C442) *
                           C1391) +
                      (C38504 + C38505 + C38506) * C50759) *
                         C25478 +
                     ((C38509 + C38508 + C38507) * C1392 -
                      ((C38506 + C38505 + C38504) * C1386 +
                       (C38503 + C38502 + C38501) * C1391) +
                      (C38512 + C38511 + C38510) * C50759) *
                         C50779) *
                        C50916 * C50855) *
                       C51046 +
                   ((((C38319 + C38320 + C38321) * C1392 -
                      ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                        C51088 * C835 + C38091 * C293 + C51094 * C304) *
                           C1386 +
                       (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                        C51088 * C819 + C38091 * C287 + C51094 * C294) *
                           C1391) +
                      (C38322 + C38323 + C38324) * C50759) *
                         C25478 +
                     ((C38327 + C38326 + C38325) * C1392 -
                      ((C38324 + C38323 + C38322) * C1386 +
                       (C38321 + C38320 + C38319) * C1391) +
                      (C38330 + C38329 + C38328) * C50759) *
                         C50779) *
                        C50916 * C1643 +
                    (((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C1391 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C1386 -
                      (C39827 + C39828 + C39829) * C1392 -
                      (C39830 + C39831 + C39832) * C50759) *
                         C25478 +
                     ((C39829 + C39828 + C39827) * C1391 +
                      (C39832 + C39831 + C39830) * C1386 -
                      (C38093 * C3563 + C38090 * C3567 + C38092 * C1081 +
                       C51088 * C1087 + C38091 * C813 + C51094 * C823) *
                          C1392 -
                      (C38093 * C3566 + C38090 * C3572 + C38092 * C1086 +
                       C51088 * C1093 + C38091 * C824 + C51094 * C837) *
                          C50759) *
                         C50779) *
                        C50916 * C50855) *
                       C50831)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C1391 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C1386 -
                     (C38131 + C38132 + C38133) * C1392 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C1391 +
                     (C38136 + C38135 + C38134) * C1386 -
                     (C38139 + C38138 + C38137) * C1392 -
                     (C38142 + C38141 + C38140) * C50759) *
                        C50779) *
                       C50916 * C51092 +
                   (((C38501 + C38502 + C38503) * C1392 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C1386 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C1391) +
                     (C38504 + C38505 + C38506) * C50759) *
                        C25478 +
                    ((C38509 + C38508 + C38507) * C1392 -
                     ((C38506 + C38505 + C38504) * C1386 +
                      (C38503 + C38502 + C38501) * C1391) +
                     (C38512 + C38511 + C38510) * C50759) *
                        C50779) *
                       C50916 * C51082 +
                   (((C38091 * C944 + C51094 * C949 + C38092 * C1169 +
                      C51088 * C1177 + C38093 * C6451 + C38090 * C6457) *
                         C1391 +
                     (C38091 * C950 + C51094 * C959 + C38092 * C1176 +
                      C51088 * C1181 + C38093 * C6456 + C38090 * C6460) *
                         C1386 -
                     (C39079 + C39080 + C39081) * C1392 -
                     (C39082 + C39083 + C39084) * C50759) *
                        C25478 +
                    ((C39081 + C39080 + C39079) * C1391 +
                     (C39084 + C39083 + C39082) * C1386 -
                     (C38093 * C6449 + C38090 * C6453 + C38092 * C1167 +
                      C51088 * C1173 + C38091 * C946 + C51094 * C953) *
                         C1392 -
                     (C38093 * C6452 + C38090 * C6458 + C38092 * C1172 +
                      C51088 * C1179 + C38091 * C954 + C51094 * C961) *
                         C50759) *
                        C50779) *
                       C50916 * C1875) *
                  C50817) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                     C51088 * C442 + C38093 * C944 + C38090 * C949) *
                        C118 +
                    (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                     C51088 * C452 + C38093 * C950 + C38090 * C959) *
                        C106 -
                    (C38131 + C38132 + C38133) * C119 -
                    (C38134 + C38135 + C38136) * C107 +
                    (C38137 + C38138 + C38139) * C120 +
                    (C38140 + C38141 + C38142) * C108 -
                    (C38143 + C38144 + C38145) * C121 -
                    (C38146 + C38147 + C38148) * C109) *
                       C25478 +
                   ((C38133 + C38132 + C38131) * C118 +
                    (C38136 + C38135 + C38134) * C106 -
                    (C38139 + C38138 + C38137) * C119 -
                    (C38142 + C38141 + C38140) * C107 +
                    (C38145 + C38144 + C38143) * C120 +
                    (C38148 + C38147 + C38146) * C108 -
                    (C38093 * C948 + C38090 * C957 + C38092 * C438 +
                     C51088 * C448 + C38091 * C126 + C51094 * C137) *
                        C121 -
                    (C38093 * C958 + C38090 * C963 + C38092 * C449 +
                     C51088 * C456 + C38091 * C138 + C51094 * C147) *
                        C109) *
                       C50779) *
                  C50916 * C50843 * C50817) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C49770 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C51031 -
                     (C38131 + C38132 + C38133) * C49763 -
                     (C38134 + C38135 + C38136) * C50759) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C49770 +
                     (C38136 + C38135 + C38134) * C51031 -
                     (C38139 + C38138 + C38137) * C49763 -
                     (C38142 + C38141 + C38140) * C50759) *
                        C50779) *
                       C50916 * C50843 * C582 +
                   (((C38319 + C38320 + C38321) * C49763 -
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C51031 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C49770) +
                     (C38322 + C38323 + C38324) * C50759) *
                        C25478 +
                    ((C38327 + C38326 + C38325) * C49763 -
                     ((C38324 + C38323 + C38322) * C51031 +
                      (C38321 + C38320 + C38319) * C49770) +
                     (C38330 + C38329 + C38328) * C50759) *
                        C50779) *
                       C50916 * C50843 * C583 +
                   (((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                      C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                         C49770 +
                     (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                      C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                         C51031 -
                     (C38671 + C38672 + C38673) * C49763 -
                     (C38674 + C38675 + C38676) * C50759) *
                        C25478 +
                    ((C38673 + C38672 + C38671) * C49770 +
                     (C38676 + C38675 + C38674) * C51031 -
                     (C38093 * C3441 + C38090 * C3445 + C38092 * C816 +
                      C51088 * C830 + C38091 * C589 + C51094 * C596) *
                         C49763 -
                     (C38093 * C3444 + C38090 * C3450 + C38092 * C829 +
                      C51088 * C840 + C38091 * C597 + C51094 * C604) *
                         C50759) *
                        C50779) *
                       C50916 * C50843 * C584)) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C283 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C278 -
                     (C38131 + C38132 + C38133) * C284 -
                     (C38134 + C38135 + C38136) * C279 +
                     (C38137 + C38138 + C38139) * C285 +
                     (C38140 + C38141 + C38142) * C280) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C283 +
                     (C38136 + C38135 + C38134) * C278 -
                     (C38139 + C38138 + C38137) * C284 -
                     (C38142 + C38141 + C38140) * C279 +
                     (C38145 + C38144 + C38143) * C285 +
                     (C38148 + C38147 + C38146) * C280) *
                        C50779) *
                       C50916 * C50843 * C51046 +
                   (((C38319 + C38320 + C38321) * C284 -
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C278 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C283) +
                     (C38322 + C38323 + C38324) * C279 -
                     (C38325 + C38326 + C38327) * C285 -
                     (C38328 + C38329 + C38330) * C280) *
                        C25478 +
                    ((C38327 + C38326 + C38325) * C284 -
                     ((C38324 + C38323 + C38322) * C278 +
                      (C38321 + C38320 + C38319) * C283) +
                     (C38330 + C38329 + C38328) * C279 -
                     (C38093 * C1080 + C38090 * C1085 + C38092 * C814 +
                      C51088 * C825 + C38091 * C289 + C51094 * C298) *
                         C285 -
                     (C38093 * C1084 + C38090 * C1092 + C38092 * C826 +
                      C51088 * C838 + C38091 * C299 + C51094 * C307) *
                         C280) *
                        C50779) *
                       C50916 * C50843 * C50831)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C696 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C50754) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C696 +
                     (C38136 + C38135 + C38134) * C50754) *
                        C50779) *
                       C50916 * C50843 * C692 -
                   (((C38324 + C38323 + C38322) * C50754 +
                     (C38321 + C38320 + C38319) * C696) *
                        C50779 +
                    ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                      C51088 * C835 + C38091 * C293 + C51094 * C304) *
                         C50754 +
                     (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                      C51088 * C819 + C38091 * C287 + C51094 * C294) *
                         C696) *
                        C25478) *
                       C50916 * C50843 * C693 +
                   (((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                      C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                         C696 +
                     (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                      C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                         C50754) *
                        C25478 +
                    ((C38673 + C38672 + C38671) * C696 +
                     (C38676 + C38675 + C38674) * C50754) *
                        C50779) *
                       C50916 * C50843 * C694 -
                   (((C38093 * C9120 + C38090 * C9124 + C38092 * C3094 +
                      C51088 * C3099 + C38091 * C705 + C51094 * C711) *
                         C50754 +
                     (C38093 * C9118 + C38090 * C9121 + C38092 * C3090 +
                      C51088 * C3095 + C38091 * C699 + C51094 * C706) *
                         C696) *
                        C50779 +
                    ((C38093 * C9122 + C38090 * C9125 + C38092 * C3096 +
                      C51088 * C3100 + C38091 * C707 + C51094 * C712) *
                         C50754 +
                     (C38093 * C9119 + C38090 * C9123 + C38092 * C3091 +
                      C51088 * C3097 + C38091 * C700 + C51094 * C708) *
                         C696) *
                        C25478) *
                       C50916 * C50843 * C695)) /
                     (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                      C51088 * C442 + C38093 * C944 + C38090 * C949) *
                         C283 +
                     (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                      C51088 * C452 + C38093 * C950 + C38090 * C959) *
                         C278 -
                     (C38131 + C38132 + C38133) * C284 -
                     (C38134 + C38135 + C38136) * C279 +
                     (C38137 + C38138 + C38139) * C285 +
                     (C38140 + C38141 + C38142) * C280) *
                        C25478 +
                    ((C38133 + C38132 + C38131) * C283 +
                     (C38136 + C38135 + C38134) * C278 -
                     (C38139 + C38138 + C38137) * C284 -
                     (C38142 + C38141 + C38140) * C279 +
                     (C38145 + C38144 + C38143) * C285 +
                     (C38148 + C38147 + C38146) * C280) *
                        C50779) *
                       C50916 * C51047 +
                   (((C38501 + C38502 + C38503) * C284 -
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C278 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C283) +
                     (C38504 + C38505 + C38506) * C279 -
                     (C38507 + C38508 + C38509) * C285 -
                     (C38510 + C38511 + C38512) * C280) *
                        C25478 +
                    ((C38509 + C38508 + C38507) * C284 -
                     ((C38506 + C38505 + C38504) * C278 +
                      (C38503 + C38502 + C38501) * C283) +
                     (C38512 + C38511 + C38510) * C279 -
                     (C38093 * C1166 + C38090 * C1171 + C38092 * C947 +
                      C51088 * C955 + C38091 * C437 + C51094 * C446) *
                         C285 -
                     (C38093 * C1170 + C38090 * C1178 + C38092 * C956 +
                      C51088 * C962 + C38091 * C447 + C51094 * C455) *
                         C280) *
                        C50779) *
                       C50916 * C50855) *
                  C50817) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38091 * C122 + C51094 * C129 + C38092 * C435 +
                       C51088 * C442 + C38093 * C944 + C38090 * C949) *
                          C696 +
                      (C38091 * C130 + C51094 * C143 + C38092 * C441 +
                       C51088 * C452 + C38093 * C950 + C38090 * C959) *
                          C50754) *
                         C25478 +
                     ((C38133 + C38132 + C38131) * C696 +
                      (C38136 + C38135 + C38134) * C50754) *
                         C50779) *
                        C50916 * C51047 -
                    (((C38506 + C38505 + C38504) * C50754 +
                      (C38503 + C38502 + C38501) * C696) *
                         C50779 +
                     ((C38093 * C1176 + C38090 * C1181 + C38092 * C950 +
                       C51088 * C959 + C38091 * C441 + C51094 * C452) *
                          C50754 +
                      (C38093 * C1169 + C38090 * C1177 + C38092 * C944 +
                       C51088 * C949 + C38091 * C435 + C51094 * C442) *
                          C696) *
                         C25478) *
                        C50916 * C50855) *
                       C582 +
                   ((((C38091 * C811 + C51094 * C819 + C38092 * C1083 +
                       C51088 * C1091 + C38093 * C3565 + C38090 * C3571) *
                          C696 +
                      (C38091 * C820 + C51094 * C835 + C38092 * C1090 +
                       C51088 * C1095 + C38093 * C3570 + C38090 * C3574) *
                          C50754) *
                         C25478 +
                     ((C38091 * C812 + C51094 * C821 + C38092 * C1082 +
                       C51088 * C1089 + C38093 * C3564 + C38090 * C3569) *
                          C696 +
                      (C38091 * C822 + C51094 * C836 + C38092 * C1088 +
                       C51088 * C1094 + C38093 * C3568 + C38090 * C3573) *
                          C50754) *
                         C50779) *
                        C50916 * C50855 -
                    (((C38324 + C38323 + C38322) * C50754 +
                      (C38321 + C38320 + C38319) * C696) *
                         C50779 +
                     ((C38093 * C1090 + C38090 * C1095 + C38092 * C820 +
                       C51088 * C835 + C38091 * C293 + C51094 * C304) *
                          C50754 +
                      (C38093 * C1083 + C38090 * C1091 + C38092 * C811 +
                       C51088 * C819 + C38091 * C287 + C51094 * C294) *
                          C696) *
                         C25478) *
                        C50916 * C51047) *
                       C583 +
                   ((((C38091 * C587 + C51094 * C592 + C38092 * C818 +
                       C51088 * C834 + C38093 * C3443 + C38090 * C3449) *
                          C696 +
                      (C38091 * C593 + C51094 * C602 + C38092 * C833 +
                       C51088 * C842 + C38093 * C3448 + C38090 * C3452) *
                          C50754) *
                         C25478 +
                     ((C38673 + C38672 + C38671) * C696 +
                      (C38676 + C38675 + C38674) * C50754) *
                         C50779) *
                        C50916 * C51047 -
                    (((C38093 * C9236 + C38090 * C9240 + C38092 * C3446 +
                       C51088 * C3451 + C38091 * C831 + C51094 * C841) *
                          C50754 +
                      (C38093 * C9234 + C38090 * C9237 + C38092 * C3442 +
                       C51088 * C3447 + C38091 * C817 + C51094 * C832) *
                          C696) *
                         C50779 +
                     ((C38093 * C9238 + C38090 * C9241 + C38092 * C3448 +
                       C51088 * C3452 + C38091 * C833 + C51094 * C842) *
                          C50754 +
                      (C38093 * C9235 + C38090 * C9239 + C38092 * C3443 +
                       C51088 * C3449 + C38091 * C818 + C51094 * C834) *
                          C696) *
                         C25478) *
                        C50916 * C50855) *
                       C584)) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1285 +
            (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
            C172 * C51073 + C173 * C1287 + C174 * C1282) *
               C110 +
           (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
            C175 * C1287 + C176 * C1282) *
               C111 +
           (C173 * C1285 + C174 * C51089 - C175 * C1286 - C176 * C51073 +
            C177 * C1287 + C178 * C1282) *
               C112 +
           (C175 * C1285 + C176 * C51089 - C177 * C1286 - C178 * C51073 +
            C179 * C1287 + C180 * C1282) *
               C113) *
              C50916 * C50843 * C1283 +
          ((C327 * C1286 -
            ((C117 * C293 + C50942 * C304) * C51089 +
             (C117 * C287 + C50942 * C294) * C1285) +
            C328 * C51073 - C329 * C1287 - C330 * C1282) *
               C110 +
           (C329 * C1286 - (C328 * C51089 + C327 * C1285) + C330 * C51073 -
            C331 * C1287 - C332 * C1282) *
               C111 +
           (C331 * C1286 - (C330 * C51089 + C329 * C1285) + C332 * C51073 -
            C333 * C1287 - C334 * C1282) *
               C112 +
           (C333 * C1286 - (C332 * C51089 + C331 * C1285) + C334 * C51073 -
            (C117 * C291 + C50942 * C302) * C1287 -
            (C117 * C303 + C50942 * C309) * C1282) *
               C113) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C51038 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C50779) *
               C8043 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C51038 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C50779) *
               C8044 +
           ((C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C51038 +
            (C9395 + C9396 - C9397 - C9398 + C9399 + C9400) * C50779) *
               C8045) *
              C50843 * C1283 +
          (((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C51038 +
            (C3730 - (C3729 + C3728) + C3731 - C3732 - C3733) * C50779) *
               C8043 +
           ((C9391 - (C9390 + C9389) + C9392 - C9393 - C9394) * C51038 +
            (C9397 - (C9396 + C9395) + C9398 - C9399 - C9400) * C50779) *
               C8044 +
           ((C2804 * C1286 - (C2941 * C51089 + C2940 * C1285) + C2805 * C51073 -
             C2806 * C1287 - C2807 * C1282) *
                C51038 +
            (C2806 * C1286 - (C2805 * C51089 + C2804 * C1285) + C2807 * C51073 -
             (C117 * C697 + C50942 * C702) * C1287 -
             (C117 * C701 + C50942 * C709) * C1282) *
                C50779) *
               C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C110 +
           (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) * C111 +
           (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) * C112 +
           (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
               C113) *
              C50916 * C50843 * C51091 +
          ((C327 * C1392 -
            ((C117 * C293 + C50942 * C304) * C1386 +
             (C117 * C287 + C50942 * C294) * C1391) +
            C328 * C50759) *
               C110 +
           (C329 * C1392 - (C328 * C1386 + C327 * C1391) + C330 * C50759) *
               C111 +
           (C331 * C1392 - (C330 * C1386 + C329 * C1391) + C332 * C50759) *
               C112 +
           (C333 * C1392 - (C332 * C1386 + C331 * C1391) + C334 * C50759) *
               C113) *
              C50916 * C50843 * C51079 +
          (((C117 * C587 + C50942 * C592) * C1391 +
            (C117 * C593 + C50942 * C602) * C1386 - C620 * C1392 -
            C621 * C50759) *
               C110 +
           (C620 * C1391 + C621 * C1386 - C622 * C1392 - C623 * C50759) * C111 +
           (C622 * C1391 + C623 * C1386 - C624 * C1392 - C625 * C50759) * C112 +
           (C624 * C1391 + C625 * C1386 -
            (C117 * C591 + C50942 * C600) * C1392 -
            (C117 * C601 + C50942 * C606) * C50759) *
               C113) *
              C50916 * C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C51038 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C3886 + C3887 - C3888 - C3889) * C51038 +
            (C3890 + C3891 - C3892 - C3893) * C50779) *
               C8044 +
           C9563 * C8045) *
              C50843 * C51091 +
          (((C3888 - (C3887 + C3886) + C3889) * C51038 +
            (C3892 - (C3891 + C3890) + C3893) * C50779) *
               C8043 +
           ((C3898 - (C3899 + C3900) + C3901) * C51038 +
            (C3902 - (C3903 + C3904) + C3905) * C50779) *
               C8044 +
           ((C9549 - (C9550 + C9551) + C9552) * C51038 +
            (C9553 - (C9554 + C9555) + C9556) * C50779) *
               C8045) *
              C50843 * C51079 +
          (C9563 * C8043 +
           ((C9551 + C9550 - C9549 - C9552) * C51038 +
            (C9555 + C9554 - C9553 - C9556) * C50779) *
               C8044 +
           ((C8640 * C1391 + C8641 * C1386 - C8513 * C1392 - C8514 * C50759) *
                C51038 +
            (C8513 * C1391 + C8514 * C1386 -
             (C117 * C2907 + C50942 * C2911) * C1392 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C8045) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C110 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C111 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C112 +
            (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
                C113) *
               C50916 * C51047 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C110 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C111 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C112 +
            (C481 * C1392 - (C480 * C1386 + C479 * C1391) + C482 * C50759) *
                C113) *
               C50916 * C50855) *
              C1283 +
          (((C327 * C1392 -
             ((C117 * C293 + C50942 * C304) * C1386 +
              (C117 * C287 + C50942 * C294) * C1391) +
             C328 * C50759) *
                C110 +
            (C329 * C1392 - (C328 * C1386 + C327 * C1391) + C330 * C50759) *
                C111 +
            (C331 * C1392 - (C330 * C1386 + C329 * C1391) + C332 * C50759) *
                C112 +
            (C333 * C1392 - (C332 * C1386 + C331 * C1391) + C334 * C50759) *
                C113) *
               C50916 * C51047 +
           (((C117 * C811 + C50942 * C819) * C1391 +
             (C117 * C820 + C50942 * C835) * C1386 - C1540 * C1392 -
             C1541 * C50759) *
                C110 +
            (C1540 * C1391 + C1541 * C1386 - C1542 * C1392 - C1543 * C50759) *
                C111 +
            (C1542 * C1391 + C1543 * C1386 - C1544 * C1392 - C1545 * C50759) *
                C112 +
            (C1544 * C1391 + C1545 * C1386 -
             (C117 * C1523 + C50942 * C1524) * C1392 -
             (C117 * C1525 + C50942 * C1526) * C50759) *
                C113) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C51038 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C50779) *
                C8043 +
            ((C3886 + C3887 - C3888 - C3889) * C51038 +
             (C3890 + C3891 - C3892 - C3893) * C50779) *
                C8044 +
            C9563 * C8045) *
               C51047 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C51038 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C50779) *
                C8043 +
            ((C4104 - (C4105 + C4106) + C4107) * C51038 +
             (C4108 - (C4109 + C4110) + C4111) * C50779) *
                C8044 +
            ((C9758 - (C9759 + C9760) + C9761) * C51038 +
             (C9762 - (C9763 + C9764) + C9765) * C50779) *
                C8045) *
               C50855) *
              C1283 +
          ((((C3888 - (C3887 + C3886) + C3889) * C51038 +
             (C3892 - (C3891 + C3890) + C3893) * C50779) *
                C8043 +
            ((C3898 - (C3899 + C3900) + C3901) * C51038 +
             (C3902 - (C3903 + C3904) + C3905) * C50779) *
                C8044 +
            ((C9549 - (C9550 + C9551) + C9552) * C51038 +
             (C9553 - (C9554 + C9555) + C9556) * C50779) *
                C8045) *
               C51047 +
           (((C4106 + C4105 - C4104 - C4107) * C51038 +
             (C4110 + C4109 - C4108 - C4111) * C50779) *
                C8043 +
            ((C9760 + C9759 - C9758 - C9761) * C51038 +
             (C9764 + C9763 - C9762 - C9765) * C50779) *
                C8044 +
            ((C8812 * C1391 + C8813 * C1386 - C8814 * C1392 - C8815 * C50759) *
                 C51038 +
             (C8814 * C1391 + C8815 * C1386 -
              (C117 * C3089 + C50942 * C3093) * C1392 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C110 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C111 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C112 +
            (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
                C113) *
               C50916 * C1643 +
           ((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C110 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C111 +
            (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                C112 +
            (C481 * C49763 - (C480 * C51031 + C479 * C49770) + C482 * C50759) *
                C113) *
               C50916 * C50855) *
              C1283 +
          (((C327 * C49763 -
             ((C117 * C293 + C50942 * C304) * C51031 +
              (C117 * C287 + C50942 * C294) * C49770) +
             C328 * C50759) *
                C110 +
            (C329 * C49763 - (C328 * C51031 + C327 * C49770) + C330 * C50759) *
                C111 +
            (C331 * C49763 - (C330 * C51031 + C329 * C49770) + C332 * C50759) *
                C112 +
            (C333 * C49763 - (C332 * C51031 + C331 * C49770) + C334 * C50759) *
                C113) *
               C50916 * C1643 +
           (((C117 * C811 + C50942 * C819) * C49770 +
             (C117 * C820 + C50942 * C835) * C51031 - C1540 * C49763 -
             C1541 * C50759) *
                C110 +
            (C1540 * C49770 + C1541 * C51031 - C1542 * C49763 -
             C1543 * C50759) *
                C111 +
            (C1542 * C49770 + C1543 * C51031 - C1544 * C49763 -
             C1545 * C50759) *
                C112 +
            (C1544 * C49770 + C1545 * C51031 -
             (C117 * C1523 + C50942 * C1524) * C49763 -
             (C117 * C1525 + C50942 * C1526) * C50759) *
                C113) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C49770 +
              (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
              C172 * C50759) *
                 C51038 +
             (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                 C50779) *
                C8043 +
            ((C2768 + C2769 - C2770 - C2771) * C51038 +
             (C2772 + C2773 - C2774 - C2775) * C50779) *
                C8044 +
            C8519 * C8045) *
               C1643 +
           (((C475 * C49763 -
              ((C117 * C441 + C50942 * C452) * C51031 +
               (C117 * C435 + C50942 * C442) * C49770) +
              C476 * C50759) *
                 C51038 +
             (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                 C50779) *
                C8043 +
            ((C4796 - (C4797 + C4798) + C4799) * C51038 +
             (C4800 - (C4801 + C4802) + C4803) * C50779) *
                C8044 +
            ((C10446 - (C10447 + C10448) + C10449) * C51038 +
             (C10450 - (C10451 + C10452) + C10453) * C50779) *
                C8045) *
               C50855) *
              C1283 +
          ((((C2770 - (C2769 + C2768) + C2771) * C51038 +
             (C2774 - (C2773 + C2772) + C2775) * C50779) *
                C8043 +
            ((C2780 - (C2808 + C2809) + C2785) * C51038 +
             (C2786 - (C2787 + C2788) + C2789) * C50779) *
                C8044 +
            ((C8499 - (C8500 + C8501) + C8502) * C51038 +
             (C8503 - (C8504 + C8505) + C8506) * C50779) *
                C8045) *
               C1643 +
           (((C4798 + C4797 - C4796 - C4799) * C51038 +
             (C4802 + C4801 - C4800 - C4803) * C50779) *
                C8043 +
            ((C10448 + C10447 - C10446 - C10449) * C51038 +
             (C10452 + C10451 - C10450 - C10453) * C50779) *
                C8044 +
            ((C8812 * C49770 + C8813 * C51031 - C8814 * C49763 -
              C8815 * C50759) *
                 C51038 +
             (C8814 * C49770 + C8815 * C51031 -
              (C117 * C3089 + C50942 * C3093) * C49763 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C1643 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C50855) *
              C51091 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            (C1540 * C696 + C1541 * C50754) * C111 +
            (C1542 * C696 + C1543 * C50754) * C112 +
            (C1544 * C696 + C1545 * C50754) * C113) *
               C50916 * C50855 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C1643) *
              C51079 +
          ((((C117 * C587 + C50942 * C592) * C696 +
             (C117 * C593 + C50942 * C602) * C50754) *
                C110 +
            (C620 * C696 + C621 * C50754) * C111 +
            (C622 * C696 + C623 * C50754) * C112 +
            (C624 * C696 + C625 * C50754) * C113) *
               C50916 * C1643 -
           (((C117 * C827 + C50942 * C839) * C50754 +
             (C117 * C815 + C50942 * C828) * C696) *
                C113 +
            ((C117 * C829 + C50942 * C840) * C50754 +
             (C117 * C816 + C50942 * C830) * C696) *
                C112 +
            ((C117 * C831 + C50942 * C841) * C50754 +
             (C117 * C817 + C50942 * C832) * C696) *
                C111 +
            ((C117 * C833 + C50942 * C842) * C50754 +
             (C117 * C818 + C50942 * C834) * C696) *
                C110) *
               C50916 * C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C1643 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C50855) *
              C51091 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C50855 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C1643) *
              C51079 +
          ((C8642 * C8043 +
            ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
            ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
               C1643 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             ((C117 * C8795 + C50942 * C8798) * C50754 +
              (C117 * C8792 + C50942 * C8796) * C696) *
                 C51038) *
                C8045 +
            ((C8820 + C8819) * C50779 + (C8818 + C8817) * C51038) * C8044 +
            C8816 * C8043) *
               C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C51092 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C51082 +
           (((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C110 +
            (C977 * C696 + C978 * C50754) * C111 +
            (C979 * C696 + C980 * C50754) * C112 +
            (C981 * C696 + C982 * C50754) * C113) *
               C50916 * C1875) *
              C1283 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            (C1540 * C696 + C1541 * C50754) * C111 +
            (C1542 * C696 + C1543 * C50754) * C112 +
            (C1544 * C696 + C1545 * C50754) * C113) *
               C50916 * C51082 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C51092 -
           (((C117 * C1084 + C50942 * C1092) * C50754 +
             (C117 * C1080 + C50942 * C1085) * C696) *
                C113 +
            ((C117 * C1086 + C50942 * C1093) * C50754 +
             (C117 * C1081 + C50942 * C1087) * C696) *
                C112 +
            ((C117 * C1088 + C50942 * C1094) * C50754 +
             (C117 * C1082 + C50942 * C1089) * C696) *
                C111 +
            ((C117 * C1090 + C50942 * C1095) * C50754 +
             (C117 * C1083 + C50942 * C1091) * C696) *
                C110) *
               C50916 * C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C51092 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C51082 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C51038 +
             (C977 * C696 + C978 * C50754) * C50779) *
                C8043 +
            ((C3464 + C3465) * C51038 + (C3458 + C3459) * C50779) * C8044 +
            ((C9135 + C9136) * C51038 + (C9131 + C9132) * C50779) * C8045) *
               C1875) *
              C1283 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C51082 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C51092 -
           ((((C117 * C9120 + C50942 * C9124) * C50754 +
              (C117 * C9118 + C50942 * C9121) * C696) *
                 C50779 +
             ((C117 * C9122 + C50942 * C9125) * C50754 +
              (C117 * C9119 + C50942 * C9123) * C696) *
                 C51038) *
                C8045 +
            ((C9132 + C9131) * C50779 + (C9136 + C9135) * C51038) * C8044 +
            ((C3459 + C3458) * C50779 + (C3465 + C3464) * C51038) * C8043) *
               C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C110 +
           (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
               C111 +
           (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
               C112 +
           (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
               C113) *
              C50916 * C50843 * C582 +
          ((C327 * C49763 -
            ((C117 * C293 + C50942 * C304) * C51031 +
             (C117 * C287 + C50942 * C294) * C49770) +
            C328 * C50759) *
               C110 +
           (C329 * C49763 - (C328 * C51031 + C327 * C49770) + C330 * C50759) *
               C111 +
           (C331 * C49763 - (C330 * C51031 + C329 * C49770) + C332 * C50759) *
               C112 +
           (C333 * C49763 - (C332 * C51031 + C331 * C49770) + C334 * C50759) *
               C113) *
              C50916 * C50843 * C583 +
          (((C117 * C587 + C50942 * C592) * C49770 +
            (C117 * C593 + C50942 * C602) * C51031 - C620 * C49763 -
            C621 * C50759) *
               C110 +
           (C620 * C49770 + C621 * C51031 - C622 * C49763 - C623 * C50759) *
               C111 +
           (C622 * C49770 + C623 * C51031 - C624 * C49763 - C625 * C50759) *
               C112 +
           (C624 * C49770 + C625 * C51031 -
            (C117 * C591 + C50942 * C600) * C49763 -
            (C117 * C601 + C50942 * C606) * C50759) *
               C113) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C110 +
          (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 + C175 * C120 +
           C176 * C108 - C177 * C121 - C178 * C109) *
              C111 +
          (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 + C177 * C120 +
           C178 * C108 - C179 * C121 - C180 * C109) *
              C112 +
          (C175 * C118 + C176 * C106 - C177 * C119 - C178 * C107 + C179 * C120 +
           C180 * C108 - (C117 * C128 + C50942 * C141) * C121 -
           (C117 * C142 + C50942 * C149) * C109) *
              C113) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C110 +
           (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
               C111 +
           (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
               C112 +
           (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
               C113) *
              C50916 * C941 +
          ((C475 * C49763 -
            ((C117 * C441 + C50942 * C452) * C51031 +
             (C117 * C435 + C50942 * C442) * C49770) +
            C476 * C50759) *
               C110 +
           (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
               C111 +
           (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
               C112 +
           (C481 * C49763 - (C480 * C51031 + C479 * C49770) + C482 * C50759) *
               C113) *
              C50916 * C942 +
          (((C117 * C944 + C50942 * C949) * C49770 +
            (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
            C978 * C50759) *
               C110 +
           (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
               C111 +
           (C979 * C49770 + C980 * C51031 - C981 * C49763 - C982 * C50759) *
               C112 +
           (C981 * C49770 + C982 * C51031 -
            (C117 * C948 + C50942 * C957) * C49763 -
            (C117 * C958 + C50942 * C963) * C50759) *
               C113) *
              C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C51038 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C50779) *
              C8043 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C51038 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C50779) *
              C8044 +
          ((C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
            C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
               C51038 +
           (C620 * C118 + C621 * C106 - C622 * C119 - C623 * C107 +
            C624 * C120 + C625 * C108 - (C117 * C591 + C50942 * C600) * C121 -
            (C117 * C601 + C50942 * C606) * C109) *
               C50779) *
              C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51038 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C2768 + C2769 - C2770 - C2771) * C51038 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C8044 +
           C8519 * C8045) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C51038 +
            (C2774 - (C2773 + C2772) + C2775) * C50779) *
               C8043 +
           ((C2780 - (C2808 + C2809) + C2785) * C51038 +
            (C2786 - (C2787 + C2788) + C2789) * C50779) *
               C8044 +
           ((C8499 - (C8500 + C8501) + C8502) * C51038 +
            (C8503 - (C8504 + C8505) + C8506) * C50779) *
               C8045) *
              C50843 * C583 +
          (C8519 * C8043 +
           ((C8501 + C8500 - C8499 - C8502) * C51038 +
            (C8505 + C8504 - C8503 - C8506) * C50779) *
               C8044 +
           (((C117 * C2909 + C50942 * C2915) * C49770 +
             (C117 * C2914 + C50942 * C2918) * C51031 - C8513 * C49763 -
             C8514 * C50759) *
                C51038 +
            (C8513 * C49770 + C8514 * C51031 -
             (C117 * C2907 + C50942 * C2911) * C49763 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51038 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C2768 + C2769 - C2770 - C2771) * C51038 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C8044 +
           C8519 * C8045) *
              C941 +
          (((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C51038 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C50779) *
               C8043 +
           ((C4796 - (C4797 + C4798) + C4799) * C51038 +
            (C4800 - (C4801 + C4802) + C4803) * C50779) *
               C8044 +
           ((C3126 * C49763 - (C3125 * C51031 + C3124 * C49770) +
             C3127 * C50759) *
                C51038 +
            (C3128 * C49763 - (C3127 * C51031 + C3126 * C49770) +
             C3129 * C50759) *
                C50779) *
               C8045) *
              C942 +
          ((((C117 * C944 + C50942 * C949) * C49770 +
             (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
             C978 * C50759) *
                C51038 +
            (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
                C50779) *
               C8043 +
           ((C3462 * C49770 + C3463 * C51031 - C3292 * C49763 -
             C3293 * C50759) *
                C51038 +
            (C3292 * C49770 + C3293 * C51031 - C3294 * C49763 -
             C3295 * C50759) *
                C50779) *
               C8044 +
           (((C117 * C3443 + C50942 * C3449) * C49770 +
             (C117 * C3448 + C50942 * C3452) * C51031 - C8971 * C49763 -
             C8972 * C50759) *
                C51038 +
            (C8971 * C49770 + C8972 * C51031 -
             (C117 * C3441 + C50942 * C3445) * C49763 -
             (C117 * C3444 + C50942 * C3450) * C50759) *
                C50779) *
               C8045) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C110 +
           (C171 * C696 + C172 * C50754) * C111 +
           (C173 * C696 + C174 * C50754) * C112 +
           (C175 * C696 + C176 * C50754) * C113) *
              C50916 * C50843 * C692 -
          ((C332 * C50754 + C331 * C696) * C113 +
           (C330 * C50754 + C329 * C696) * C112 +
           (C328 * C50754 + C327 * C696) * C111 +
           ((C117 * C293 + C50942 * C304) * C50754 +
            (C117 * C287 + C50942 * C294) * C696) *
               C110) *
              C50916 * C50843 * C693 +
          (((C117 * C587 + C50942 * C592) * C696 +
            (C117 * C593 + C50942 * C602) * C50754) *
               C110 +
           (C620 * C696 + C621 * C50754) * C111 +
           (C622 * C696 + C623 * C50754) * C112 +
           (C624 * C696 + C625 * C50754) * C113) *
              C50916 * C50843 * C694 -
          (((C117 * C701 + C50942 * C709) * C50754 +
            (C117 * C697 + C50942 * C702) * C696) *
               C113 +
           ((C117 * C703 + C50942 * C710) * C50754 +
            (C117 * C698 + C50942 * C704) * C696) *
               C112 +
           ((C117 * C705 + C50942 * C711) * C50754 +
            (C117 * C699 + C50942 * C706) * C696) *
               C111 +
           ((C117 * C707 + C50942 * C712) * C50754 +
            (C117 * C700 + C50942 * C708) * C696) *
               C110) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C110 +
           (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
            C175 * C285 + C176 * C280) *
               C111 +
           (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
            C177 * C285 + C178 * C280) *
               C112 +
           (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
            C179 * C285 + C180 * C280) *
               C113) *
              C50916 * C50843 * C51046 +
          ((C327 * C284 -
            ((C117 * C293 + C50942 * C304) * C278 +
             (C117 * C287 + C50942 * C294) * C283) +
            C328 * C279 - C329 * C285 - C330 * C280) *
               C110 +
           (C329 * C284 - (C328 * C278 + C327 * C283) + C330 * C279 -
            C331 * C285 - C332 * C280) *
               C111 +
           (C331 * C284 - (C330 * C278 + C329 * C283) + C332 * C279 -
            C333 * C285 - C334 * C280) *
               C112 +
           (C333 * C284 - (C332 * C278 + C331 * C283) + C334 * C279 -
            (C117 * C291 + C50942 * C302) * C285 -
            (C117 * C303 + C50942 * C309) * C280) *
               C113) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C941 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C942 +
           (((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C110 +
            (C977 * C696 + C978 * C50754) * C111 +
            (C979 * C696 + C980 * C50754) * C112 +
            (C981 * C696 + C982 * C50754) * C113) *
               C50916 * C943) *
              C51046 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            ((C117 * C812 + C50942 * C821) * C696 +
             (C117 * C822 + C50942 * C836) * C50754) *
                C111 +
            ((C117 * C813 + C50942 * C823) * C696 +
             (C117 * C824 + C50942 * C837) * C50754) *
                C112 +
            ((C117 * C814 + C50942 * C825) * C696 +
             (C117 * C826 + C50942 * C838) * C50754) *
                C113) *
               C50916 * C942 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C941 -
           (((C117 * C1084 + C50942 * C1092) * C50754 +
             (C117 * C1080 + C50942 * C1085) * C696) *
                C113 +
            ((C117 * C1086 + C50942 * C1093) * C50754 +
             (C117 * C1081 + C50942 * C1087) * C696) *
                C112 +
            ((C117 * C1088 + C50942 * C1094) * C50754 +
             (C117 * C1082 + C50942 * C1089) * C696) *
                C111 +
            ((C117 * C1090 + C50942 * C1095) * C50754 +
             (C117 * C1083 + C50942 * C1091) * C696) *
                C110) *
               C50916 * C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C51038 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C50779) *
               C8043 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C51038 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C50779) *
               C8044 +
           ((C2804 * C284 - (C2941 * C278 + C2940 * C283) + C2805 * C279 -
             C2806 * C285 - C2807 * C280) *
                C51038 +
            (C2806 * C284 - (C2805 * C278 + C2804 * C283) + C2807 * C279 -
             (C117 * C697 + C50942 * C702) * C285 -
             (C117 * C701 + C50942 * C709) * C280) *
                C50779) *
               C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51038 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C8043 +
           ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
           C8642 * C8045) *
              C50843 * C692 -
          (C8643 * C8045 +
           ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
           ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
              C50843 * C693 +
          (C8642 * C8043 +
           ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
           ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
              C50843 * C694 -
          ((((C117 * C8619 + C50942 * C8623) * C50754 +
             (C117 * C8617 + C50942 * C8620) * C696) *
                C50779 +
            ((C117 * C8621 + C50942 * C8624) * C50754 +
             (C117 * C8618 + C50942 * C8622) * C696) *
                C51038) *
               C8045 +
           ((C8635 + C8634) * C50779 + (C8645 + C8644) * C51038) * C8044 +
           C8643 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C941 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C942 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C51038 +
             (C977 * C696 + C978 * C50754) * C50779) *
                C8043 +
            ((C3464 + C3465) * C51038 + (C3458 + C3459) * C50779) * C8044 +
            ((C9135 + C9136) * C51038 + (C9131 + C9132) * C50779) * C8045) *
               C943) *
              C51046 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C942 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C941 -
           ((((C117 * C9120 + C50942 * C9124) * C50754 +
              (C117 * C9118 + C50942 * C9121) * C696) *
                 C50779 +
             ((C117 * C9122 + C50942 * C9125) * C50754 +
              (C117 * C9119 + C50942 * C9123) * C696) *
                 C51038) *
                C8045 +
            ((C9132 + C9131) * C50779 + (C9136 + C9135) * C51038) * C8044 +
            ((C3459 + C3458) * C50779 + (C3465 + C3464) * C51038) * C8043) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C51047 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C50855) *
              C582 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            ((C117 * C812 + C50942 * C821) * C696 +
             (C117 * C822 + C50942 * C836) * C50754) *
                C111 +
            ((C117 * C813 + C50942 * C823) * C696 +
             (C117 * C824 + C50942 * C837) * C50754) *
                C112 +
            ((C117 * C814 + C50942 * C825) * C696 +
             (C117 * C826 + C50942 * C838) * C50754) *
                C113) *
               C50916 * C50855 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C51047) *
              C583 +
          ((((C117 * C587 + C50942 * C592) * C696 +
             (C117 * C593 + C50942 * C602) * C50754) *
                C110 +
            (C620 * C696 + C621 * C50754) * C111 +
            (C622 * C696 + C623 * C50754) * C112 +
            (C624 * C696 + C625 * C50754) * C113) *
               C50916 * C51047 -
           (((C117 * C827 + C50942 * C839) * C50754 +
             (C117 * C815 + C50942 * C828) * C696) *
                C113 +
            ((C117 * C829 + C50942 * C840) * C50754 +
             (C117 * C816 + C50942 * C830) * C696) *
                C112 +
            ((C117 * C831 + C50942 * C841) * C50754 +
             (C117 * C817 + C50942 * C832) * C696) *
                C111 +
            ((C117 * C833 + C50942 * C842) * C50754 +
             (C117 * C818 + C50942 * C834) * C696) *
                C110) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C110 +
           (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
            C175 * C285 + C176 * C280) *
               C111 +
           (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
            C177 * C285 + C178 * C280) *
               C112 +
           (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
            C179 * C285 + C180 * C280) *
               C113) *
              C50916 * C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C110 +
           (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
            C479 * C285 - C480 * C280) *
               C111 +
           (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
            C481 * C285 - C482 * C280) *
               C112 +
           (C481 * C284 - (C480 * C278 + C479 * C283) + C482 * C279 -
            (C117 * C439 + C50942 * C450) * C285 -
            (C117 * C451 + C50942 * C457) * C280) *
               C113) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C110 +
           (C171 * C696 + C172 * C50754) * C111 +
           (C173 * C696 + C174 * C50754) * C112 +
           (C175 * C696 + C176 * C50754) * C113) *
              C50916 * C1162 -
          ((C480 * C50754 + C479 * C696) * C113 +
           (C478 * C50754 + C477 * C696) * C112 +
           (C476 * C50754 + C475 * C696) * C111 +
           ((C117 * C441 + C50942 * C452) * C50754 +
            (C117 * C435 + C50942 * C442) * C696) *
               C110) *
              C50916 * C1163 +
          (((C117 * C944 + C50942 * C949) * C696 +
            (C117 * C950 + C50942 * C959) * C50754) *
               C110 +
           (C977 * C696 + C978 * C50754) * C111 +
           (C979 * C696 + C980 * C50754) * C112 +
           (C981 * C696 + C982 * C50754) * C113) *
              C50916 * C1164 -
          (((C117 * C1170 + C50942 * C1178) * C50754 +
            (C117 * C1166 + C50942 * C1171) * C696) *
               C113 +
           ((C117 * C1172 + C50942 * C1179) * C50754 +
            (C117 * C1167 + C50942 * C1173) * C696) *
               C112 +
           ((C117 * C1174 + C50942 * C1180) * C50754 +
            (C117 * C1168 + C50942 * C1175) * C696) *
               C111 +
           ((C117 * C1176 + C50942 * C1181) * C50754 +
            (C117 * C1169 + C50942 * C1177) * C696) *
               C110) *
              C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C51038 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C50779) *
               C8043 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C51038 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C50779) *
               C8044 +
           ((C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
             C3128 * C285 - C3129 * C280) *
                C51038 +
            (C3128 * C284 - (C3127 * C278 + C3126 * C283) + C3129 * C279 -
             (C117 * C815 + C50942 * C828) * C285 -
             (C117 * C827 + C50942 * C839) * C280) *
                C50779) *
               C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C51047 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C50855 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C51047) *
              C583 +
          ((C8642 * C8043 +
            ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
            ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
               C51047 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             ((C117 * C8795 + C50942 * C8798) * C50754 +
              (C117 * C8792 + C50942 * C8796) * C696) *
                 C51038) *
                C8045 +
            ((C8820 + C8819) * C50779 + (C8818 + C8817) * C51038) * C8044 +
            C8816 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51038 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C8043 +
           ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
           C8642 * C8045) *
              C1162 -
          (C8816 * C8045 +
           ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
           ((C476 * C50754 + C475 * C696) * C50779 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C51038) *
               C8043) *
              C1163 +
          ((((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C51038 +
            (C977 * C696 + C978 * C50754) * C50779) *
               C8043 +
           ((C3464 + C3465) * C51038 + (C3458 + C3459) * C50779) * C8044 +
           ((C9135 + C9136) * C51038 + (C9131 + C9132) * C50779) * C8045) *
              C1164 -
          ((((C117 * C9236 + C50942 * C9240) * C50754 +
             (C117 * C9234 + C50942 * C9237) * C696) *
                C50779 +
            ((C117 * C9238 + C50942 * C9241) * C50754 +
             (C117 * C9235 + C50942 * C9239) * C696) *
                C51038) *
               C8045 +
           (((C117 * C3568 + C50942 * C3573) * C50754 +
             (C117 * C3564 + C50942 * C3569) * C696) *
                C50779 +
            ((C117 * C3570 + C50942 * C3574) * C50754 +
             (C117 * C3565 + C50942 * C3571) * C696) *
                C51038) *
               C8044 +
           (((C117 * C1174 + C50942 * C1180) * C50754 +
             (C117 * C1168 + C50942 * C1175) * C696) *
                C50779 +
            ((C117 * C1176 + C50942 * C1181) * C50754 +
             (C117 * C1169 + C50942 * C1177) * C696) *
                C51038) *
               C8043) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[189] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50942 * C129) * C1285 +
                     (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                     C172 * C51073 + C173 * C1287 + C174 * C1282) *
                        C110 +
                    (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                     C174 * C51073 + C175 * C1287 + C176 * C1282) *
                        C111 +
                    (C173 * C1285 + C174 * C51089 - C175 * C1286 -
                     C176 * C51073 + C177 * C1287 + C178 * C1282) *
                        C112 +
                    (C175 * C1285 + C176 * C51089 - C177 * C1286 -
                     C178 * C51073 + C179 * C1287 + C180 * C1282) *
                        C113) *
                       C50916 * C1643 +
                   ((C475 * C1286 -
                     ((C117 * C441 + C50942 * C452) * C51089 +
                      (C117 * C435 + C50942 * C442) * C1285) +
                     C476 * C51073 - C477 * C1287 - C478 * C1282) *
                        C110 +
                    (C477 * C1286 - (C476 * C51089 + C475 * C1285) +
                     C478 * C51073 - C479 * C1287 - C480 * C1282) *
                        C111 +
                    (C479 * C1286 - (C478 * C51089 + C477 * C1285) +
                     C480 * C51073 - C481 * C1287 - C482 * C1282) *
                        C112 +
                    (C481 * C1286 - (C480 * C51089 + C479 * C1285) +
                     C482 * C51073 - (C117 * C439 + C50942 * C450) * C1287 -
                     (C117 * C451 + C50942 * C457) * C1282) *
                        C113) *
                       C50916 * C50855) *
                  C50817) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50942 * C129) * C1285 +
                      (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
                      C172 * C51073 + C173 * C1287 + C174 * C1282) *
                         C51038 +
                     (C171 * C1285 + C172 * C51089 - C173 * C1286 -
                      C174 * C51073 + C175 * C1287 + C176 * C1282) *
                         C50779) *
                        C8043 +
                    ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C51038 +
                     (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C50779) *
                        C8044 +
                    ((C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C51038 +
                     (C9395 + C9396 - C9397 - C9398 + C9399 + C9400) * C50779) *
                        C8045) *
                       C1643 +
                   (((C475 * C1286 -
                      ((C117 * C441 + C50942 * C452) * C51089 +
                       (C117 * C435 + C50942 * C442) * C1285) +
                      C476 * C51073 - C477 * C1287 - C478 * C1282) *
                         C51038 +
                     (C477 * C1286 - (C476 * C51089 + C475 * C1285) +
                      C478 * C51073 - C479 * C1287 - C480 * C1282) *
                         C50779) *
                        C8043 +
                    ((C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) +
                      C1541 * C51073 - C1542 * C1287 - C1543 * C1282) *
                         C51038 +
                     (C1542 * C1286 - (C1541 * C51089 + C1540 * C1285) +
                      C1543 * C51073 - C1544 * C1287 - C1545 * C1282) *
                         C50779) *
                        C8044 +
                    ((C3126 * C1286 - (C3125 * C51089 + C3124 * C1285) +
                      C3127 * C51073 - C3128 * C1287 - C3129 * C1282) *
                         C51038 +
                     (C3128 * C1286 - (C3127 * C51089 + C3126 * C1285) +
                      C3129 * C51073 - (C117 * C815 + C50942 * C828) * C1287 -
                      (C117 * C827 + C50942 * C839) * C1282) *
                         C50779) *
                        C8045) *
                       C50855) *
                  C50817) /
                     (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C110 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C111 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C112 +
            (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
                C113) *
               C50916 * C1643 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C110 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C111 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C112 +
            (C481 * C1392 - (C480 * C1386 + C479 * C1391) + C482 * C50759) *
                C113) *
               C50916 * C50855) *
              C51046 +
          (((C327 * C1392 -
             ((C117 * C293 + C50942 * C304) * C1386 +
              (C117 * C287 + C50942 * C294) * C1391) +
             C328 * C50759) *
                C110 +
            (C329 * C1392 - (C328 * C1386 + C327 * C1391) + C330 * C50759) *
                C111 +
            (C331 * C1392 - (C330 * C1386 + C329 * C1391) + C332 * C50759) *
                C112 +
            (C333 * C1392 - (C332 * C1386 + C331 * C1391) + C334 * C50759) *
                C113) *
               C50916 * C1643 +
           (((C117 * C811 + C50942 * C819) * C1391 +
             (C117 * C820 + C50942 * C835) * C1386 - C1540 * C1392 -
             C1541 * C50759) *
                C110 +
            (C1540 * C1391 + C1541 * C1386 - C1542 * C1392 - C1543 * C50759) *
                C111 +
            (C1542 * C1391 + C1543 * C1386 - C1544 * C1392 - C1545 * C50759) *
                C112 +
            (C1544 * C1391 + C1545 * C1386 -
             (C117 * C1523 + C50942 * C1524) * C1392 -
             (C117 * C1525 + C50942 * C1526) * C50759) *
                C113) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C51038 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C50779) *
                C8043 +
            ((C3886 + C3887 - C3888 - C3889) * C51038 +
             (C3890 + C3891 - C3892 - C3893) * C50779) *
                C8044 +
            C9563 * C8045) *
               C1643 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C51038 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C50779) *
                C8043 +
            ((C4104 - (C4105 + C4106) + C4107) * C51038 +
             (C4108 - (C4109 + C4110) + C4111) * C50779) *
                C8044 +
            ((C9758 - (C9759 + C9760) + C9761) * C51038 +
             (C9762 - (C9763 + C9764) + C9765) * C50779) *
                C8045) *
               C50855) *
              C51046 +
          ((((C3888 - (C3887 + C3886) + C3889) * C51038 +
             (C3892 - (C3891 + C3890) + C3893) * C50779) *
                C8043 +
            ((C3898 - (C3899 + C3900) + C3901) * C51038 +
             (C3902 - (C3903 + C3904) + C3905) * C50779) *
                C8044 +
            ((C9549 - (C9550 + C9551) + C9552) * C51038 +
             (C9553 - (C9554 + C9555) + C9556) * C50779) *
                C8045) *
               C1643 +
           (((C4106 + C4105 - C4104 - C4107) * C51038 +
             (C4110 + C4109 - C4108 - C4111) * C50779) *
                C8043 +
            ((C9760 + C9759 - C9758 - C9761) * C51038 +
             (C9764 + C9763 - C9762 - C9765) * C50779) *
                C8044 +
            ((C8812 * C1391 + C8813 * C1386 - C8814 * C1392 - C8815 * C50759) *
                 C51038 +
             (C8814 * C1391 + C8815 * C1386 -
              (C117 * C3089 + C50942 * C3093) * C1392 -
              (C117 * C3092 + C50942 * C3098) * C50759) *
                 C50779) *
                C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C110 +
           (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) * C111 +
           (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) * C112 +
           (C175 * C1391 + C176 * C1386 - C177 * C1392 - C178 * C50759) *
               C113) *
              C50916 * C51092 +
          ((C475 * C1392 -
            ((C117 * C441 + C50942 * C452) * C1386 +
             (C117 * C435 + C50942 * C442) * C1391) +
            C476 * C50759) *
               C110 +
           (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
               C111 +
           (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
               C112 +
           (C481 * C1392 - (C480 * C1386 + C479 * C1391) + C482 * C50759) *
               C113) *
              C50916 * C51082 +
          (((C117 * C944 + C50942 * C949) * C1391 +
            (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
            C978 * C50759) *
               C110 +
           (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) * C111 +
           (C979 * C1391 + C980 * C1386 - C981 * C1392 - C982 * C50759) * C112 +
           (C981 * C1391 + C982 * C1386 -
            (C117 * C948 + C50942 * C957) * C1392 -
            (C117 * C958 + C50942 * C963) * C50759) *
               C113) *
              C50916 * C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C51038 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C3886 + C3887 - C3888 - C3889) * C51038 +
            (C3890 + C3891 - C3892 - C3893) * C50779) *
               C8044 +
           C9563 * C8045) *
              C51092 +
          (((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C51038 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C50779) *
               C8043 +
           ((C4104 - (C4105 + C4106) + C4107) * C51038 +
            (C4108 - (C4109 + C4110) + C4111) * C50779) *
               C8044 +
           ((C9758 - (C9759 + C9760) + C9761) * C51038 +
            (C9762 - (C9763 + C9764) + C9765) * C50779) *
               C8045) *
              C51082 +
          ((((C117 * C944 + C50942 * C949) * C1391 +
             (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
             C978 * C50759) *
                C51038 +
            (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) *
                C50779) *
               C8043 +
           ((C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
                C51038 +
            (C3292 * C1391 + C3293 * C1386 - C3294 * C1392 - C3295 * C50759) *
                C50779) *
               C8044 +
           ((C9133 * C1391 + C9134 * C1386 - C8971 * C1392 - C8972 * C50759) *
                C51038 +
            (C8971 * C1391 + C8972 * C1386 -
             (C117 * C3441 + C50942 * C3445) * C1392 -
             (C117 * C3444 + C50942 * C3450) * C50759) *
                C50779) *
               C8045) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C110 +
          (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 + C175 * C120 +
           C176 * C108 - C177 * C121 - C178 * C109) *
              C111 +
          (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 + C177 * C120 +
           C178 * C108 - C179 * C121 - C180 * C109) *
              C112 +
          (C175 * C118 + C176 * C106 - C177 * C119 - C178 * C107 + C179 * C120 +
           C180 * C108 - (C117 * C128 + C50942 * C141) * C121 -
           (C117 * C142 + C50942 * C149) * C109) *
              C113) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C110 +
           (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
               C111 +
           (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
               C112 +
           (C175 * C49770 + C176 * C51031 - C177 * C49763 - C178 * C50759) *
               C113) *
              C50916 * C50843 * C582 +
          ((C327 * C49763 -
            ((C117 * C293 + C50942 * C304) * C51031 +
             (C117 * C287 + C50942 * C294) * C49770) +
            C328 * C50759) *
               C110 +
           (C329 * C49763 - (C328 * C51031 + C327 * C49770) + C330 * C50759) *
               C111 +
           (C331 * C49763 - (C330 * C51031 + C329 * C49770) + C332 * C50759) *
               C112 +
           (C333 * C49763 - (C332 * C51031 + C331 * C49770) + C334 * C50759) *
               C113) *
              C50916 * C50843 * C583 +
          (((C117 * C587 + C50942 * C592) * C49770 +
            (C117 * C593 + C50942 * C602) * C51031 - C620 * C49763 -
            C621 * C50759) *
               C110 +
           (C620 * C49770 + C621 * C51031 - C622 * C49763 - C623 * C50759) *
               C111 +
           (C622 * C49770 + C623 * C51031 - C624 * C49763 - C625 * C50759) *
               C112 +
           (C624 * C49770 + C625 * C51031 -
            (C117 * C591 + C50942 * C600) * C49763 -
            (C117 * C601 + C50942 * C606) * C50759) *
               C113) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C51038 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C50779) *
              C8043 +
          ((C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C51038 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C50779) *
              C8044 +
          ((C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
            C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
               C51038 +
           (C620 * C118 + C621 * C106 - C622 * C119 - C623 * C107 +
            C624 * C120 + C625 * C108 - (C117 * C591 + C50942 * C600) * C121 -
            (C117 * C601 + C50942 * C606) * C109) *
               C50779) *
              C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C51038 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C50779) *
               C8043 +
           ((C2768 + C2769 - C2770 - C2771) * C51038 +
            (C2772 + C2773 - C2774 - C2775) * C50779) *
               C8044 +
           C8519 * C8045) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C51038 +
            (C2774 - (C2773 + C2772) + C2775) * C50779) *
               C8043 +
           ((C2780 - (C2808 + C2809) + C2785) * C51038 +
            (C2786 - (C2787 + C2788) + C2789) * C50779) *
               C8044 +
           ((C8499 - (C8500 + C8501) + C8502) * C51038 +
            (C8503 - (C8504 + C8505) + C8506) * C50779) *
               C8045) *
              C50843 * C583 +
          (C8519 * C8043 +
           ((C8501 + C8500 - C8499 - C8502) * C51038 +
            (C8505 + C8504 - C8503 - C8506) * C50779) *
               C8044 +
           (((C117 * C2909 + C50942 * C2915) * C49770 +
             (C117 * C2914 + C50942 * C2918) * C51031 - C8513 * C49763 -
             C8514 * C50759) *
                C51038 +
            (C8513 * C49770 + C8514 * C51031 -
             (C117 * C2907 + C50942 * C2911) * C49763 -
             (C117 * C2910 + C50942 * C2916) * C50759) *
                C50779) *
               C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C110 +
           (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
            C175 * C285 + C176 * C280) *
               C111 +
           (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
            C177 * C285 + C178 * C280) *
               C112 +
           (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
            C179 * C285 + C180 * C280) *
               C113) *
              C50916 * C50843 * C51046 +
          ((C327 * C284 -
            ((C117 * C293 + C50942 * C304) * C278 +
             (C117 * C287 + C50942 * C294) * C283) +
            C328 * C279 - C329 * C285 - C330 * C280) *
               C110 +
           (C329 * C284 - (C328 * C278 + C327 * C283) + C330 * C279 -
            C331 * C285 - C332 * C280) *
               C111 +
           (C331 * C284 - (C330 * C278 + C329 * C283) + C332 * C279 -
            C333 * C285 - C334 * C280) *
               C112 +
           (C333 * C284 - (C332 * C278 + C331 * C283) + C334 * C279 -
            (C117 * C291 + C50942 * C302) * C285 -
            (C117 * C303 + C50942 * C309) * C280) *
               C113) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C110 +
           (C171 * C696 + C172 * C50754) * C111 +
           (C173 * C696 + C174 * C50754) * C112 +
           (C175 * C696 + C176 * C50754) * C113) *
              C50916 * C50843 * C692 -
          ((C332 * C50754 + C331 * C696) * C113 +
           (C330 * C50754 + C329 * C696) * C112 +
           (C328 * C50754 + C327 * C696) * C111 +
           ((C117 * C293 + C50942 * C304) * C50754 +
            (C117 * C287 + C50942 * C294) * C696) *
               C110) *
              C50916 * C50843 * C693 +
          (((C117 * C587 + C50942 * C592) * C696 +
            (C117 * C593 + C50942 * C602) * C50754) *
               C110 +
           (C620 * C696 + C621 * C50754) * C111 +
           (C622 * C696 + C623 * C50754) * C112 +
           (C624 * C696 + C625 * C50754) * C113) *
              C50916 * C50843 * C694 -
          (((C117 * C701 + C50942 * C709) * C50754 +
            (C117 * C697 + C50942 * C702) * C696) *
               C113 +
           ((C117 * C703 + C50942 * C710) * C50754 +
            (C117 * C698 + C50942 * C704) * C696) *
               C112 +
           ((C117 * C705 + C50942 * C711) * C50754 +
            (C117 * C699 + C50942 * C706) * C696) *
               C111 +
           ((C117 * C707 + C50942 * C712) * C50754 +
            (C117 * C700 + C50942 * C708) * C696) *
               C110) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C51038 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C50779) *
               C8043 +
           ((C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C51038 +
            (C8201 - (C8200 + C8199) + C8202 - C8203 - C8204) * C50779) *
               C8044 +
           ((C2804 * C284 - (C2941 * C278 + C2940 * C283) + C2805 * C279 -
             C2806 * C285 - C2807 * C280) *
                C51038 +
            (C2806 * C284 - (C2805 * C278 + C2804 * C283) + C2807 * C279 -
             (C117 * C697 + C50942 * C702) * C285 -
             (C117 * C701 + C50942 * C709) * C280) *
                C50779) *
               C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C51038 +
            (C171 * C696 + C172 * C50754) * C50779) *
               C8043 +
           ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
           C8642 * C8045) *
              C50843 * C692 -
          (C8643 * C8045 +
           ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
           ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
              C50843 * C693 +
          (C8642 * C8043 +
           ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
           ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
              C50843 * C694 -
          ((((C117 * C8619 + C50942 * C8623) * C50754 +
             (C117 * C8617 + C50942 * C8620) * C696) *
                C50779 +
            ((C117 * C8621 + C50942 * C8624) * C50754 +
             (C117 * C8618 + C50942 * C8622) * C696) *
                C51038) *
               C8045 +
           ((C8635 + C8634) * C50779 + (C8645 + C8644) * C51038) * C8044 +
           C8643 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C110 +
           (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
            C175 * C285 + C176 * C280) *
               C111 +
           (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
            C177 * C285 + C178 * C280) *
               C112 +
           (C175 * C283 + C176 * C278 - C177 * C284 - C178 * C279 +
            C179 * C285 + C180 * C280) *
               C113) *
              C50916 * C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C110 +
           (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
            C479 * C285 - C480 * C280) *
               C111 +
           (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
            C481 * C285 - C482 * C280) *
               C112 +
           (C481 * C284 - (C480 * C278 + C479 * C283) + C482 * C279 -
            (C117 * C439 + C50942 * C450) * C285 -
            (C117 * C451 + C50942 * C457) * C280) *
               C113) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C110 +
            (C171 * C696 + C172 * C50754) * C111 +
            (C173 * C696 + C174 * C50754) * C112 +
            (C175 * C696 + C176 * C50754) * C113) *
               C50916 * C51047 -
           ((C480 * C50754 + C479 * C696) * C113 +
            (C478 * C50754 + C477 * C696) * C112 +
            (C476 * C50754 + C475 * C696) * C111 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C110) *
               C50916 * C50855) *
              C582 +
          ((((C117 * C811 + C50942 * C819) * C696 +
             (C117 * C820 + C50942 * C835) * C50754) *
                C110 +
            ((C117 * C812 + C50942 * C821) * C696 +
             (C117 * C822 + C50942 * C836) * C50754) *
                C111 +
            ((C117 * C813 + C50942 * C823) * C696 +
             (C117 * C824 + C50942 * C837) * C50754) *
                C112 +
            ((C117 * C814 + C50942 * C825) * C696 +
             (C117 * C826 + C50942 * C838) * C50754) *
                C113) *
               C50916 * C50855 -
           ((C332 * C50754 + C331 * C696) * C113 +
            (C330 * C50754 + C329 * C696) * C112 +
            (C328 * C50754 + C327 * C696) * C111 +
            ((C117 * C293 + C50942 * C304) * C50754 +
             (C117 * C287 + C50942 * C294) * C696) *
                C110) *
               C50916 * C51047) *
              C583 +
          ((((C117 * C587 + C50942 * C592) * C696 +
             (C117 * C593 + C50942 * C602) * C50754) *
                C110 +
            (C620 * C696 + C621 * C50754) * C111 +
            (C622 * C696 + C623 * C50754) * C112 +
            (C624 * C696 + C625 * C50754) * C113) *
               C50916 * C51047 -
           (((C117 * C827 + C50942 * C839) * C50754 +
             (C117 * C815 + C50942 * C828) * C696) *
                C113 +
            ((C117 * C829 + C50942 * C840) * C50754 +
             (C117 * C816 + C50942 * C830) * C696) *
                C112 +
            ((C117 * C831 + C50942 * C841) * C50754 +
             (C117 * C817 + C50942 * C832) * C696) *
                C111 +
            ((C117 * C833 + C50942 * C842) * C50754 +
             (C117 * C818 + C50942 * C834) * C696) *
                C110) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C51038 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C50779) *
               C8043 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C51038 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C50779) *
               C8044 +
           ((C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C51038 +
            (C8199 + C8200 - C8201 - C8202 + C8203 + C8204) * C50779) *
               C8045) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C51038 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C50779) *
               C8043 +
           ((C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
             C1542 * C285 - C1543 * C280) *
                C51038 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C50779) *
               C8044 +
           ((C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
             C3128 * C285 - C3129 * C280) *
                C51038 +
            (C3128 * C284 - (C3127 * C278 + C3126 * C283) + C3129 * C279 -
             (C117 * C815 + C50942 * C828) * C285 -
             (C117 * C827 + C50942 * C839) * C280) *
                C50779) *
               C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C51038 +
             (C171 * C696 + C172 * C50754) * C50779) *
                C8043 +
            ((C2920 + C2921) * C51038 + (C2922 + C2923) * C50779) * C8044 +
            C8642 * C8045) *
               C51047 -
           (C8816 * C8045 +
            ((C3104 + C3105) * C50779 + (C3130 + C3131) * C51038) * C8044 +
            ((C476 * C50754 + C475 * C696) * C50779 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C51038) *
                C8043) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C51038 + (C3105 + C3104) * C50779) * C8043 +
            ((C3132 + C3133) * C51038 + (C3134 + C3135) * C50779) * C8044 +
            ((C8817 + C8818) * C51038 + (C8819 + C8820) * C50779) * C8045) *
               C50855 -
           (C8643 * C8045 +
            ((C2928 + C2929) * C50779 + (C2930 + C2931) * C51038) * C8044 +
            ((C2923 + C2922) * C50779 + (C2921 + C2920) * C51038) * C8043) *
               C51047) *
              C583 +
          ((C8642 * C8043 +
            ((C2942 + C2943) * C51038 + (C2936 + C2937) * C50779) * C8044 +
            ((C8644 + C8645) * C51038 + (C8634 + C8635) * C50779) * C8045) *
               C51047 -
           ((((C117 * C8793 + C50942 * C8797) * C50754 +
              (C117 * C8791 + C50942 * C8794) * C696) *
                 C50779 +
             ((C117 * C8795 + C50942 * C8798) * C50754 +
              (C117 * C8792 + C50942 * C8796) * C696) *
                 C51038) *
                C8045 +
            ((C8820 + C8819) * C50779 + (C8818 + C8817) * C51038) * C8044 +
            C8816 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C2300 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C2301 +
            (C173 * C1285 + C174 * C51089 - C175 * C1286 - C176 * C51073 +
             C177 * C1287 + C178 * C1282) *
                C2302) *
               C51059 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C2300 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C2301 +
            (C3734 + C3735 - C3736 - C3737 + C3738 + C3739) * C2302) *
               C50930) *
              C50843 * C1283 +
          (((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C2300 +
            (C3730 - (C3729 + C3728) + C3731 - C3732 - C3733) * C2301 +
            (C3736 - (C3735 + C3734) + C3737 - C3738 - C3739) * C2302) *
               C51059 +
           ((C620 * C1286 - (C2802 * C51089 + C2803 * C1285) + C621 * C51073 -
             C622 * C1287 - C623 * C1282) *
                C2300 +
            (C622 * C1286 - (C621 * C51089 + C620 * C1285) + C623 * C51073 -
             C624 * C1287 - C625 * C1282) *
                C2301 +
            (C624 * C1286 - (C623 * C51089 + C622 * C1285) + C625 * C51073 -
             (C117 * C591 + C50942 * C600) * C1287 -
             (C117 * C601 + C50942 * C606) * C1282) *
                C2302) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1285 +
            (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
            C172 * C51073 + C173 * C1287 + C174 * C1282) *
               C50774 * C10812 +
           (C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C50774 * C10813 +
           (C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C50774 * C10814 +
           (C11699 + C11700 - C11701 - C11702 + C11703 + C11704) * C50774 *
               C10815) *
              C50843 * C1283 +
          ((C3724 - (C3723 + C3722) + C3725 - C3726 - C3727) * C50774 * C10812 +
           (C9391 - (C9390 + C9389) + C9392 - C9393 - C9394) * C50774 * C10813 +
           (C11701 - (C11700 + C11699) + C11702 - C11703 - C11704) * C50774 *
               C10814 +
           (C8513 * C1286 - (C8641 * C51089 + C8640 * C1285) + C8514 * C51073 -
            (C117 * C2907 + C50942 * C2911) * C1287 -
            (C117 * C2910 + C50942 * C2916) * C1282) *
               C50774 * C10815) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C2300 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C2301 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C3886 + C3887 - C3888 - C3889) * C2300 +
            (C3890 + C3891 - C3892 - C3893) * C2301 +
            (C3894 + C3895 - C3896 - C3897) * C2302) *
               C50930) *
              C50843 * C51091 +
          (((C3888 - (C3887 + C3886) + C3889) * C2300 +
            (C3892 - (C3891 + C3890) + C3893) * C2301 +
            (C3896 - (C3895 + C3894) + C3897) * C2302) *
               C51059 +
           ((C3898 - (C3899 + C3900) + C3901) * C2300 +
            (C3902 - (C3903 + C3904) + C3905) * C2301 +
            (C3906 - (C3907 + C3908) + C3909) * C2302) *
               C50930) *
              C50843 * C51079 +
          (((C3900 + C3899 - C3898 - C3901) * C2300 +
            (C3904 + C3903 - C3902 - C3905) * C2301 +
            (C3908 + C3907 - C3906 - C3909) * C2302) *
               C51059 +
           ((C2940 * C1391 + C2941 * C1386 - C2804 * C1392 - C2805 * C50759) *
                C2300 +
            (C2804 * C1391 + C2805 * C1386 - C2806 * C1392 - C2807 * C50759) *
                C2301 +
            (C2806 * C1391 + C2807 * C1386 -
             (C117 * C697 + C50942 * C702) * C1392 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C2302) *
               C50930) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C50774 * C10812 +
           (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 + C11803 * C10814 +
           C11811 * C10815) *
              C50843 * C51091 +
          ((C3888 - (C3887 + C3886) + C3889) * C50774 * C10812 +
           (C3898 - (C3899 + C3900) + C3901) * C50774 * C10813 +
           (C9549 - (C9550 + C9551) + C9552) * C50774 * C10814 +
           (C11805 - (C11806 + C11807) + C11808) * C50774 * C10815) *
              C50843 * C51079 +
          (C11803 * C10812 + C11811 * C10813 +
           (C11807 + C11806 - C11805 - C11808) * C50774 * C10814 +
           (C11206 * C1391 + C11207 * C1386 -
            (C117 * C8617 + C50942 * C8620) * C1392 -
            (C117 * C8619 + C50942 * C8623) * C50759) *
               C50774 * C10815) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C2300 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C2301 +
             (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                 C2302) *
                C51059 +
            ((C3886 + C3887 - C3888 - C3889) * C2300 +
             (C3890 + C3891 - C3892 - C3893) * C2301 +
             (C3894 + C3895 - C3896 - C3897) * C2302) *
                C50930) *
               C51047 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C2300 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C2301 +
             (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                 C2302) *
                C51059 +
            ((C4104 - (C4105 + C4106) + C4107) * C2300 +
             (C4108 - (C4109 + C4110) + C4111) * C2301 +
             (C4112 - (C4113 + C4114) + C4115) * C2302) *
                C50930) *
               C50855) *
              C1283 +
          ((((C3888 - (C3887 + C3886) + C3889) * C2300 +
             (C3892 - (C3891 + C3890) + C3893) * C2301 +
             (C3896 - (C3895 + C3894) + C3897) * C2302) *
                C51059 +
            ((C3898 - (C3899 + C3900) + C3901) * C2300 +
             (C3902 - (C3903 + C3904) + C3905) * C2301 +
             (C3906 - (C3907 + C3908) + C3909) * C2302) *
                C50930) *
               C51047 +
           (((C4106 + C4105 - C4104 - C4107) * C2300 +
             (C4110 + C4109 - C4108 - C4111) * C2301 +
             (C4114 + C4113 - C4112 - C4115) * C2302) *
                C51059 +
            ((C3124 * C1391 + C3125 * C1386 - C3126 * C1392 - C3127 * C50759) *
                 C2300 +
             (C3126 * C1391 + C3127 * C1386 - C3128 * C1392 - C3129 * C50759) *
                 C2301 +
             (C3128 * C1391 + C3129 * C1386 -
              (C117 * C815 + C50942 * C828) * C1392 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C2302) *
                C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C50774 * C10812 +
            (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 +
            C11803 * C10814 + C11811 * C10815) *
               C51047 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C50774 * C10812 +
            (C4104 - (C4105 + C4106) + C4107) * C50774 * C10813 +
            (C9758 - (C9759 + C9760) + C9761) * C50774 * C10814 +
            (C11942 - (C11943 + C11944) + C11945) * C50774 * C10815) *
               C50855) *
              C1283 +
          (((C3888 - (C3887 + C3886) + C3889) * C50774 * C10812 +
            (C3898 - (C3899 + C3900) + C3901) * C50774 * C10813 +
            (C9549 - (C9550 + C9551) + C9552) * C50774 * C10814 +
            (C11805 - (C11806 + C11807) + C11808) * C50774 * C10815) *
               C51047 +
           ((C4106 + C4105 - C4104 - C4107) * C50774 * C10812 +
            (C9760 + C9759 - C9758 - C9761) * C50774 * C10813 +
            (C11944 + C11943 - C11942 - C11945) * C50774 * C10814 +
            (C11319 * C1391 + C11320 * C1386 -
             (C117 * C8791 + C50942 * C8794) * C1392 -
             (C117 * C8793 + C50942 * C8797) * C50759) *
                C50774 * C10815) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C49770 +
              (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
              C172 * C50759) *
                 C2300 +
             (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                 C2301 +
             (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                 C2302) *
                C51059 +
            ((C2768 + C2769 - C2770 - C2771) * C2300 +
             (C2772 + C2773 - C2774 - C2775) * C2301 +
             (C2776 + C2777 - C2778 - C2779) * C2302) *
                C50930) *
               C1643 +
           (((C475 * C49763 -
              ((C117 * C441 + C50942 * C452) * C51031 +
               (C117 * C435 + C50942 * C442) * C49770) +
              C476 * C50759) *
                 C2300 +
             (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                 C2301 +
             (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                 C2302) *
                C51059 +
            ((C4796 - (C4797 + C4798) + C4799) * C2300 +
             (C4800 - (C4801 + C4802) + C4803) * C2301 +
             (C4804 - (C4805 + C4806) + C4807) * C2302) *
                C50930) *
               C50855) *
              C1283 +
          ((((C2770 - (C2769 + C2768) + C2771) * C2300 +
             (C2774 - (C2773 + C2772) + C2775) * C2301 +
             (C2778 - (C2777 + C2776) + C2779) * C2302) *
                C51059 +
            ((C2780 - (C2808 + C2809) + C2785) * C2300 +
             (C2786 - (C2787 + C2788) + C2789) * C2301 +
             (C2790 - (C2791 + C2792) + C2793) * C2302) *
                C50930) *
               C1643 +
           (((C4798 + C4797 - C4796 - C4799) * C2300 +
             (C4802 + C4801 - C4800 - C4803) * C2301 +
             (C4806 + C4805 - C4804 - C4807) * C2302) *
                C51059 +
            ((C3124 * C49770 + C3125 * C51031 - C3126 * C49763 -
              C3127 * C50759) *
                 C2300 +
             (C3126 * C49770 + C3127 * C51031 - C3128 * C49763 -
              C3129 * C50759) *
                 C2301 +
             (C3128 * C49770 + C3129 * C51031 -
              (C117 * C815 + C50942 * C828) * C49763 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C2302) *
                C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C50774 * C10812 +
            (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 +
            C11117 * C10814 + C11125 * C10815) *
               C1643 +
           ((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C50774 * C10812 +
            (C4796 - (C4797 + C4798) + C4799) * C50774 * C10813 +
            (C10446 - (C10447 + C10448) + C10449) * C50774 * C10814 +
            (C12402 - (C12403 + C12404) + C12405) * C50774 * C10815) *
               C50855) *
              C1283 +
          (((C2770 - (C2769 + C2768) + C2771) * C50774 * C10812 +
            (C2780 - (C2808 + C2809) + C2785) * C50774 * C10813 +
            (C8499 - (C8500 + C8501) + C8502) * C50774 * C10814 +
            (C11119 - (C11120 + C11121) + C11122) * C50774 * C10815) *
               C1643 +
           ((C4798 + C4797 - C4796 - C4799) * C50774 * C10812 +
            (C10448 + C10447 - C10446 - C10449) * C50774 * C10813 +
            (C12404 + C12403 - C12402 - C12405) * C50774 * C10814 +
            (C11319 * C49770 + C11320 * C51031 -
             (C117 * C8791 + C50942 * C8794) * C49763 -
             (C117 * C8793 + C50942 * C8797) * C50759) *
                C50774 * C10815) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C122 + C50942 * C129) * C696 +
                       (C117 * C130 + C50942 * C143) * C50754) *
                          C2300 +
                      (C171 * C696 + C172 * C50754) * C2301 +
                      (C173 * C696 + C174 * C50754) * C2302) *
                         C51059 +
                     ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
                      (C2924 + C2925) * C2302) *
                         C50930) *
                        C1643 -
                    (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
                      (C3130 + C3131) * C2300) *
                         C50930 +
                     ((C478 * C50754 + C477 * C696) * C2302 +
                      (C476 * C50754 + C475 * C696) * C2301 +
                      ((C117 * C441 + C50942 * C452) * C50754 +
                       (C117 * C435 + C50942 * C442) * C696) *
                          C2300) *
                         C51059) *
                        C50855) *
                       C51091 +
                   ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
                      (C3103 + C3102) * C2302) *
                         C51059 +
                     ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
                      (C3136 + C3137) * C2302) *
                         C50930) *
                        C50855 -
                    (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
                      (C2930 + C2931) * C2300) *
                         C50930 +
                     ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
                      (C2921 + C2920) * C2300) *
                         C51059) *
                        C1643) *
                       C51079 +
                   ((((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
                      (C2927 + C2926) * C2302) *
                         C51059 +
                     ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
                      (C2938 + C2939) * C2302) *
                         C50930) *
                        C1643 -
                    ((((C117 * C3092 + C50942 * C3098) * C50754 +
                       (C117 * C3089 + C50942 * C3093) * C696) *
                          C2302 +
                      ((C117 * C3094 + C50942 * C3099) * C50754 +
                       (C117 * C3090 + C50942 * C3095) * C696) *
                          C2301 +
                      ((C117 * C3096 + C50942 * C3100) * C50754 +
                       (C117 * C3091 + C50942 * C3097) * C696) *
                          C2300) *
                         C50930 +
                     ((C3137 + C3136) * C2302 + (C3135 + C3134) * C2301 +
                      (C3133 + C3132) * C2300) *
                         C51059) *
                        C50855) *
                       C1390)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50942 * C129) * C696 +
                      (C117 * C130 + C50942 * C143) * C50754) *
                         C50774 * C10812 +
                     (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
                     C11204 * C10815) *
                        C1643 -
                    (C11318 * C10815 + C11313 * C10814 +
                     (C3130 + C3131) * C50774 * C10813 +
                     ((C117 * C441 + C50942 * C452) * C50754 +
                      (C117 * C435 + C50942 * C442) * C696) *
                         C50774 * C10812) *
                        C50855) *
                       C51091 +
                   (((C3131 + C3130) * C50774 * C10812 +
                     (C3132 + C3133) * C50774 * C10813 +
                     (C8817 + C8818) * C50774 * C10814 +
                     (C11321 + C11322) * C50774 * C10815) *
                        C50855 -
                    (C11205 * C10815 + C11199 * C10814 +
                     (C2930 + C2931) * C50774 * C10813 +
                     (C2921 + C2920) * C50774 * C10812) *
                        C1643) *
                       C51079 +
                   ((C11196 * C10812 + C11204 * C10813 +
                     (C8644 + C8645) * C50774 * C10814 +
                     (C11208 + C11209) * C50774 * C10815) *
                        C1643 -
                    (((C117 * C11308 + C50942 * C11310) * C50754 +
                      (C117 * C11307 + C50942 * C11309) * C696) *
                         C50774 * C10815 +
                     (C11322 + C11321) * C50774 * C10814 + C11318 * C10813 +
                     C11313 * C10812) *
                        C50855) *
                       C1390)) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C122 + C50942 * C129) * C696 +
                       (C117 * C130 + C50942 * C143) * C50754) *
                          C2300 +
                      (C171 * C696 + C172 * C50754) * C2301 +
                      (C173 * C696 + C174 * C50754) * C2302) *
                         C51059 +
                     ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
                      (C2924 + C2925) * C2302) *
                         C50930) *
                        C51092 -
                    (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
                      (C3130 + C3131) * C2300) *
                         C50930 +
                     ((C478 * C50754 + C477 * C696) * C2302 +
                      (C476 * C50754 + C475 * C696) * C2301 +
                      ((C117 * C441 + C50942 * C452) * C50754 +
                       (C117 * C435 + C50942 * C442) * C696) *
                          C2300) *
                         C51059) *
                        C51082 +
                    ((((C117 * C944 + C50942 * C949) * C696 +
                       (C117 * C950 + C50942 * C959) * C50754) *
                          C2300 +
                      (C977 * C696 + C978 * C50754) * C2301 +
                      (C979 * C696 + C980 * C50754) * C2302) *
                         C51059 +
                     ((C3464 + C3465) * C2300 + (C3458 + C3459) * C2301 +
                      (C3460 + C3461) * C2302) *
                         C50930) *
                        C1875) *
                       C1283 +
                   ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
                      (C3103 + C3102) * C2302) *
                         C51059 +
                     ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
                      (C3136 + C3137) * C2302) *
                         C50930) *
                        C51082 -
                    (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
                      (C2930 + C2931) * C2300) *
                         C50930 +
                     ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
                      (C2921 + C2920) * C2300) *
                         C51059) *
                        C51092 -
                    ((((C117 * C3444 + C50942 * C3450) * C50754 +
                       (C117 * C3441 + C50942 * C3445) * C696) *
                          C2302 +
                      ((C117 * C3446 + C50942 * C3451) * C50754 +
                       (C117 * C3442 + C50942 * C3447) * C696) *
                          C2301 +
                      ((C117 * C3448 + C50942 * C3452) * C50754 +
                       (C117 * C3443 + C50942 * C3449) * C696) *
                          C2300) *
                         C50930 +
                     ((C3461 + C3460) * C2302 + (C3459 + C3458) * C2301 +
                      (C3465 + C3464) * C2300) *
                         C51059) *
                        C1875) *
                       C50831)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50942 * C129) * C696 +
                      (C117 * C130 + C50942 * C143) * C50754) *
                         C50774 * C10812 +
                     (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
                     C11204 * C10815) *
                        C51092 -
                    (C11318 * C10815 + C11313 * C10814 +
                     (C3130 + C3131) * C50774 * C10813 +
                     ((C117 * C441 + C50942 * C452) * C50754 +
                      (C117 * C435 + C50942 * C442) * C696) *
                         C50774 * C10812) *
                        C51082 +
                    (((C117 * C944 + C50942 * C949) * C696 +
                      (C117 * C950 + C50942 * C959) * C50754) *
                         C50774 * C10812 +
                     (C3464 + C3465) * C50774 * C10813 +
                     (C9135 + C9136) * C50774 * C10814 +
                     (C11529 + C11530) * C50774 * C10815) *
                        C1875) *
                       C1283 +
                   (((C3131 + C3130) * C50774 * C10812 +
                     (C3132 + C3133) * C50774 * C10813 +
                     (C8817 + C8818) * C50774 * C10814 +
                     (C11321 + C11322) * C50774 * C10815) *
                        C51082 -
                    (C11205 * C10815 + C11199 * C10814 +
                     (C2930 + C2931) * C50774 * C10813 +
                     (C2921 + C2920) * C50774 * C10812) *
                        C51092 -
                    (((C117 * C11519 + C50942 * C11521) * C50754 +
                      (C117 * C11518 + C50942 * C11520) * C696) *
                         C50774 * C10815 +
                     (C11530 + C11529) * C50774 * C10814 +
                     (C9136 + C9135) * C50774 * C10813 +
                     (C3465 + C3464) * C50774 * C10812) *
                        C1875) *
                       C50831)) /
                     (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C2300 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C2301 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C2768 + C2769 - C2770 - C2771) * C2300 +
            (C2772 + C2773 - C2774 - C2775) * C2301 +
            (C2776 + C2777 - C2778 - C2779) * C2302) *
               C50930) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C2300 +
            (C2774 - (C2773 + C2772) + C2775) * C2301 +
            (C2778 - (C2777 + C2776) + C2779) * C2302) *
               C51059 +
           ((C2780 - (C2808 + C2809) + C2785) * C2300 +
            (C2786 - (C2787 + C2788) + C2789) * C2301 +
            (C2790 - (C2791 + C2792) + C2793) * C2302) *
               C50930) *
              C50843 * C583 +
          (((C2809 + C2808 - C2780 - C2785) * C2300 +
            (C2788 + C2787 - C2786 - C2789) * C2301 +
            (C2792 + C2791 - C2790 - C2793) * C2302) *
               C51059 +
           (((C117 * C700 + C50942 * C708) * C49770 +
             (C117 * C707 + C50942 * C712) * C51031 - C2804 * C49763 -
             C2805 * C50759) *
                C2300 +
            (C2804 * C49770 + C2805 * C51031 - C2806 * C49763 -
             C2807 * C50759) *
                C2301 +
            (C2806 * C49770 + C2807 * C51031 -
             (C117 * C697 + C50942 * C702) * C49763 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C2302) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C2300 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C2301 +
           (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
            C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
               C2302) *
              C51059 +
          (((C117 * C287 + C50942 * C294) * C118 +
            (C117 * C293 + C50942 * C304) * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C2300 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C2301 +
           (C329 * C118 + C330 * C106 - C331 * C119 - C332 * C107 +
            C333 * C120 + C334 * C108 - (C117 * C291 + C50942 * C302) * C121 -
            (C117 * C303 + C50942 * C309) * C109) *
               C2302) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C2300 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C2301 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C2768 + C2769 - C2770 - C2771) * C2300 +
            (C2772 + C2773 - C2774 - C2775) * C2301 +
            (C2776 + C2777 - C2778 - C2779) * C2302) *
               C50930) *
              C941 +
          (((C475 * C49763 -
             ((C117 * C441 + C50942 * C452) * C51031 +
              (C117 * C435 + C50942 * C442) * C49770) +
             C476 * C50759) *
                C2300 +
            (C477 * C49763 - (C476 * C51031 + C475 * C49770) + C478 * C50759) *
                C2301 +
            (C479 * C49763 - (C478 * C51031 + C477 * C49770) + C480 * C50759) *
                C2302) *
               C51059 +
           ((C1540 * C49763 - (C3122 * C51031 + C3123 * C49770) +
             C1541 * C50759) *
                C2300 +
            (C1542 * C49763 - (C1541 * C51031 + C1540 * C49770) +
             C1543 * C50759) *
                C2301 +
            (C1544 * C49763 - (C1543 * C51031 + C1542 * C49770) +
             C1545 * C50759) *
                C2302) *
               C50930) *
              C942 +
          ((((C117 * C944 + C50942 * C949) * C49770 +
             (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
             C978 * C50759) *
                C2300 +
            (C977 * C49770 + C978 * C51031 - C979 * C49763 - C980 * C50759) *
                C2301 +
            (C979 * C49770 + C980 * C51031 - C981 * C49763 - C982 * C50759) *
                C2302) *
               C51059 +
           (((C117 * C1083 + C50942 * C1091) * C49770 +
             (C117 * C1090 + C50942 * C1095) * C51031 - C3292 * C49763 -
             C3293 * C50759) *
                C2300 +
            (C3292 * C49770 + C3293 * C51031 - C3294 * C49763 -
             C3295 * C50759) *
                C2301 +
            (C3294 * C49770 + C3295 * C51031 -
             (C117 * C1080 + C50942 * C1085) * C49763 -
             (C117 * C1084 + C50942 * C1092) * C50759) *
                C2302) *
               C50930) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C50774 * C10812 +
          (C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
           C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
              C50774 * C10813 +
          (C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
           C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
              C50774 * C10814 +
          (C2940 * C118 + C2941 * C106 - C2804 * C119 - C2805 * C107 +
           C2806 * C120 + C2807 * C108 - (C117 * C697 + C50942 * C702) * C121 -
           (C117 * C701 + C50942 * C709) * C109) *
              C50774 * C10815) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C50774 * C10812 +
           (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 + C11117 * C10814 +
           C11125 * C10815) *
              C50843 * C582 +
          ((C2770 - (C2769 + C2768) + C2771) * C50774 * C10812 +
           (C2780 - (C2808 + C2809) + C2785) * C50774 * C10813 +
           (C8499 - (C8500 + C8501) + C8502) * C50774 * C10814 +
           (C11119 - (C11120 + C11121) + C11122) * C50774 * C10815) *
              C50843 * C583 +
          (C11117 * C10812 + C11125 * C10813 +
           (C11121 + C11120 - C11119 - C11122) * C50774 * C10814 +
           ((C117 * C8618 + C50942 * C8622) * C49770 +
            (C117 * C8621 + C50942 * C8624) * C51031 -
            (C117 * C8617 + C50942 * C8620) * C49763 -
            (C117 * C8619 + C50942 * C8623) * C50759) *
               C50774 * C10815) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C50774 * C10812 +
           (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 + C11117 * C10814 +
           C11125 * C10815) *
              C941 +
          ((C475 * C49763 -
            ((C117 * C441 + C50942 * C452) * C51031 +
             (C117 * C435 + C50942 * C442) * C49770) +
            C476 * C50759) *
               C50774 * C10812 +
           (C4796 - (C4797 + C4798) + C4799) * C50774 * C10813 +
           (C10446 - (C10447 + C10448) + C10449) * C50774 * C10814 +
           (C8814 * C49763 - (C8813 * C51031 + C8812 * C49770) +
            C8815 * C50759) *
               C50774 * C10815) *
              C942 +
          (((C117 * C944 + C50942 * C949) * C49770 +
            (C117 * C950 + C50942 * C959) * C51031 - C977 * C49763 -
            C978 * C50759) *
               C50774 * C10812 +
           (C3462 * C49770 + C3463 * C51031 - C3292 * C49763 - C3293 * C50759) *
               C50774 * C10813 +
           (C9133 * C49770 + C9134 * C51031 - C8971 * C49763 - C8972 * C50759) *
               C50774 * C10814 +
           ((C117 * C9119 + C50942 * C9123) * C49770 +
            (C117 * C9122 + C50942 * C9125) * C51031 -
            (C117 * C9118 + C50942 * C9121) * C49763 -
            (C117 * C9120 + C50942 * C9124) * C50759) *
               C50774 * C10815) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C2300 +
            (C171 * C696 + C172 * C50754) * C2301 +
            (C173 * C696 + C174 * C50754) * C2302) *
               C51059 +
           ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
            (C2924 + C2925) * C2302) *
               C50930) *
              C50843 * C692 -
          (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
            (C2930 + C2931) * C2300) *
               C50930 +
           ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
            (C2921 + C2920) * C2300) *
               C51059) *
              C50843 * C693 +
          (((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
            (C2927 + C2926) * C2302) *
               C51059 +
           ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
            (C2938 + C2939) * C2302) *
               C50930) *
              C50843 * C694 -
          ((((C117 * C2910 + C50942 * C2916) * C50754 +
             (C117 * C2907 + C50942 * C2911) * C696) *
                C2302 +
            ((C117 * C2912 + C50942 * C2917) * C50754 +
             (C117 * C2908 + C50942 * C2913) * C696) *
                C2301 +
            ((C117 * C2914 + C50942 * C2918) * C50754 +
             (C117 * C2909 + C50942 * C2915) * C696) *
                C2300) *
               C50930 +
           ((C2939 + C2938) * C2302 + (C2937 + C2936) * C2301 +
            (C2943 + C2942) * C2300) *
               C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C2300 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C2301 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C2302) *
               C51059 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
               C50930) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C2300 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C2301 +
            (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471) * C2302) *
               C51059 +
           ((C620 * C284 -
             ((C117 * C593 + C50942 * C602) * C278 +
              (C117 * C587 + C50942 * C592) * C283) +
             C621 * C279 - C622 * C285 - C623 * C280) *
                C2300 +
            (C622 * C284 - (C621 * C278 + C620 * C283) + C623 * C279 -
             C624 * C285 - C625 * C280) *
                C2301 +
            (C624 * C284 - (C623 * C278 + C622 * C283) + C625 * C279 -
             (C117 * C591 + C50942 * C600) * C285 -
             (C117 * C601 + C50942 * C606) * C280) *
                C2302) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C2300 +
             (C171 * C696 + C172 * C50754) * C2301 +
             (C173 * C696 + C174 * C50754) * C2302) *
                C51059 +
            ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
             (C2924 + C2925) * C2302) *
                C50930) *
               C941 -
           (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
             (C3130 + C3131) * C2300) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C2302 +
             (C476 * C50754 + C475 * C696) * C2301 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C2300) *
                C51059) *
               C942 +
           ((((C117 * C944 + C50942 * C949) * C696 +
              (C117 * C950 + C50942 * C959) * C50754) *
                 C2300 +
             (C977 * C696 + C978 * C50754) * C2301 +
             (C979 * C696 + C980 * C50754) * C2302) *
                C51059 +
            ((C3464 + C3465) * C2300 + (C3458 + C3459) * C2301 +
             (C3460 + C3461) * C2302) *
                C50930) *
               C943) *
              C51046 +
          ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
             (C3103 + C3102) * C2302) *
                C51059 +
            ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
             (C3136 + C3137) * C2302) *
                C50930) *
               C942 -
           (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
             (C2930 + C2931) * C2300) *
                C50930 +
            ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
             (C2921 + C2920) * C2300) *
                C51059) *
               C941 -
           ((((C117 * C3444 + C50942 * C3450) * C50754 +
              (C117 * C3441 + C50942 * C3445) * C696) *
                 C2302 +
             ((C117 * C3446 + C50942 * C3451) * C50754 +
              (C117 * C3442 + C50942 * C3447) * C696) *
                 C2301 +
             ((C117 * C3448 + C50942 * C3452) * C50754 +
              (C117 * C3443 + C50942 * C3449) * C696) *
                 C2300) *
                C50930 +
            ((C3461 + C3460) * C2302 + (C3459 + C3458) * C2301 +
             (C3465 + C3464) * C2300) *
                C51059) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C50843 * C51046 +
          ((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C50774 * C10812 +
           (C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C50774 * C10813 +
           (C10917 - (C10916 + C10915) + C10918 - C10919 - C10920) * C50774 *
               C10814 +
           (C8513 * C284 - (C8641 * C278 + C8640 * C283) + C8514 * C279 -
            (C117 * C2907 + C50942 * C2911) * C285 -
            (C117 * C2910 + C50942 * C2916) * C280) *
               C50774 * C10815) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C50774 * C10812 +
           (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
           C11204 * C10815) *
              C50843 * C692 -
          (C11205 * C10815 + C11199 * C10814 +
           (C2930 + C2931) * C50774 * C10813 +
           (C2921 + C2920) * C50774 * C10812) *
              C50843 * C693 +
          (C11196 * C10812 + C11204 * C10813 +
           (C8644 + C8645) * C50774 * C10814 +
           (C11208 + C11209) * C50774 * C10815) *
              C50843 * C694 -
          (((C117 * C11192 + C50942 * C11194) * C50754 +
            (C117 * C11191 + C50942 * C11193) * C696) *
               C50774 * C10815 +
           (C11209 + C11208) * C50774 * C10814 + C11205 * C10813 +
           C11199 * C10812) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C50774 * C10812 +
            (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
            C11204 * C10815) *
               C941 -
           (C11318 * C10815 + C11313 * C10814 +
            (C3130 + C3131) * C50774 * C10813 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C50774 * C10812) *
               C942 +
           (((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C50774 * C10812 +
            (C3464 + C3465) * C50774 * C10813 +
            (C9135 + C9136) * C50774 * C10814 +
            (C11529 + C11530) * C50774 * C10815) *
               C943) *
              C51046 +
          (((C3131 + C3130) * C50774 * C10812 +
            (C3132 + C3133) * C50774 * C10813 +
            (C8817 + C8818) * C50774 * C10814 +
            (C11321 + C11322) * C50774 * C10815) *
               C942 -
           (C11205 * C10815 + C11199 * C10814 +
            (C2930 + C2931) * C50774 * C10813 +
            (C2921 + C2920) * C50774 * C10812) *
               C941 -
           (((C117 * C11519 + C50942 * C11521) * C50754 +
             (C117 * C11518 + C50942 * C11520) * C696) *
                C50774 * C10815 +
            (C11530 + C11529) * C50774 * C10814 +
            (C9136 + C9135) * C50774 * C10813 +
            (C3465 + C3464) * C50774 * C10812) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C2300 +
             (C171 * C696 + C172 * C50754) * C2301 +
             (C173 * C696 + C174 * C50754) * C2302) *
                C51059 +
            ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
             (C2924 + C2925) * C2302) *
                C50930) *
               C51047 -
           (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
             (C3130 + C3131) * C2300) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C2302 +
             (C476 * C50754 + C475 * C696) * C2301 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C2300) *
                C51059) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
             (C3103 + C3102) * C2302) *
                C51059 +
            ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
             (C3136 + C3137) * C2302) *
                C50930) *
               C50855 -
           (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
             (C2930 + C2931) * C2300) *
                C50930 +
            ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
             (C2921 + C2920) * C2300) *
                C51059) *
               C51047) *
              C583 +
          ((((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
             (C2927 + C2926) * C2302) *
                C51059 +
            ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
             (C2938 + C2939) * C2302) *
                C50930) *
               C51047 -
           ((((C117 * C3092 + C50942 * C3098) * C50754 +
              (C117 * C3089 + C50942 * C3093) * C696) *
                 C2302 +
             ((C117 * C3094 + C50942 * C3099) * C50754 +
              (C117 * C3090 + C50942 * C3095) * C696) *
                 C2301 +
             ((C117 * C3096 + C50942 * C3100) * C50754 +
              (C117 * C3091 + C50942 * C3097) * C696) *
                 C2300) *
                C50930 +
            ((C3137 + C3136) * C2302 + (C3135 + C3134) * C2301 +
             (C3133 + C3132) * C2300) *
                C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C2300 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C2301 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C2302) *
               C51059 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
               C50930) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C2300 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C2301 +
            (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
             C481 * C285 - C482 * C280) *
                C2302) *
               C51059 +
           ((C1540 * C284 -
             ((C117 * C820 + C50942 * C835) * C278 +
              (C117 * C811 + C50942 * C819) * C283) +
             C1541 * C279 - C1542 * C285 - C1543 * C280) *
                C2300 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C2301 +
            (C1544 * C284 - (C1543 * C278 + C1542 * C283) + C1545 * C279 -
             (C117 * C1523 + C50942 * C1524) * C285 -
             (C117 * C1525 + C50942 * C1526) * C280) *
                C2302) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C2300 +
            (C171 * C696 + C172 * C50754) * C2301 +
            (C173 * C696 + C174 * C50754) * C2302) *
               C51059 +
           ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
            (C2924 + C2925) * C2302) *
               C50930) *
              C1162 -
          (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
            (C3130 + C3131) * C2300) *
               C50930 +
           ((C478 * C50754 + C477 * C696) * C2302 +
            (C476 * C50754 + C475 * C696) * C2301 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C2300) *
               C51059) *
              C1163 +
          ((((C117 * C944 + C50942 * C949) * C696 +
             (C117 * C950 + C50942 * C959) * C50754) *
                C2300 +
            (C977 * C696 + C978 * C50754) * C2301 +
            (C979 * C696 + C980 * C50754) * C2302) *
               C51059 +
           ((C3464 + C3465) * C2300 + (C3458 + C3459) * C2301 +
            (C3460 + C3461) * C2302) *
               C50930) *
              C1164 -
          ((((C117 * C3566 + C50942 * C3572) * C50754 +
             (C117 * C3563 + C50942 * C3567) * C696) *
                C2302 +
            ((C117 * C3568 + C50942 * C3573) * C50754 +
             (C117 * C3564 + C50942 * C3569) * C696) *
                C2301 +
            ((C117 * C3570 + C50942 * C3574) * C50754 +
             (C117 * C3565 + C50942 * C3571) * C696) *
                C2300) *
               C50930 +
           (((C117 * C1172 + C50942 * C1179) * C50754 +
             (C117 * C1167 + C50942 * C1173) * C696) *
                C2302 +
            ((C117 * C1174 + C50942 * C1180) * C50754 +
             (C117 * C1168 + C50942 * C1175) * C696) *
                C2301 +
            ((C117 * C1176 + C50942 * C1181) * C50754 +
             (C117 * C1169 + C50942 * C1177) * C696) *
                C2300) *
               C51059) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C50774 * C10812 +
           (C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
            C1542 * C285 - C1543 * C280) *
               C50774 * C10813 +
           (C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
            C3128 * C285 - C3129 * C280) *
               C50774 * C10814 +
           (C8814 * C284 - (C8813 * C278 + C8812 * C283) + C8815 * C279 -
            (C117 * C3089 + C50942 * C3093) * C285 -
            (C117 * C3092 + C50942 * C3098) * C280) *
               C50774 * C10815) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C50774 * C10812 +
            (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
            C11204 * C10815) *
               C51047 -
           (C11318 * C10815 + C11313 * C10814 +
            (C3130 + C3131) * C50774 * C10813 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C50774 * C10812) *
               C50855) *
              C582 +
          (((C3131 + C3130) * C50774 * C10812 +
            (C3132 + C3133) * C50774 * C10813 +
            (C8817 + C8818) * C50774 * C10814 +
            (C11321 + C11322) * C50774 * C10815) *
               C50855 -
           (C11205 * C10815 + C11199 * C10814 +
            (C2930 + C2931) * C50774 * C10813 +
            (C2921 + C2920) * C50774 * C10812) *
               C51047) *
              C583 +
          ((C11196 * C10812 + C11204 * C10813 +
            (C8644 + C8645) * C50774 * C10814 +
            (C11208 + C11209) * C50774 * C10815) *
               C51047 -
           (((C117 * C11308 + C50942 * C11310) * C50754 +
             (C117 * C11307 + C50942 * C11309) * C696) *
                C50774 * C10815 +
            (C11322 + C11321) * C50774 * C10814 + C11318 * C10813 +
            C11313 * C10812) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C50774 * C10812 +
           (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
           C11204 * C10815) *
              C1162 -
          (C11318 * C10815 + C11313 * C10814 +
           (C3130 + C3131) * C50774 * C10813 +
           ((C117 * C441 + C50942 * C452) * C50754 +
            (C117 * C435 + C50942 * C442) * C696) *
               C50774 * C10812) *
              C1163 +
          (((C117 * C944 + C50942 * C949) * C696 +
            (C117 * C950 + C50942 * C959) * C50754) *
               C50774 * C10812 +
           (C3464 + C3465) * C50774 * C10813 +
           (C9135 + C9136) * C50774 * C10814 +
           (C11529 + C11530) * C50774 * C10815) *
              C1164 -
          (((C117 * C11597 + C50942 * C11599) * C50754 +
            (C117 * C11596 + C50942 * C11598) * C696) *
               C50774 * C10815 +
           ((C117 * C9238 + C50942 * C9241) * C50754 +
            (C117 * C9235 + C50942 * C9239) * C696) *
               C50774 * C10814 +
           ((C117 * C3570 + C50942 * C3574) * C50754 +
            (C117 * C3565 + C50942 * C3571) * C696) *
               C50774 * C10813 +
           ((C117 * C1176 + C50942 * C1181) * C50754 +
            (C117 * C1169 + C50942 * C1177) * C696) *
               C50774 * C10812) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1285 +
             (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
             C172 * C51073 + C173 * C1287 + C174 * C1282) *
                C2300 +
            (C171 * C1285 + C172 * C51089 - C173 * C1286 - C174 * C51073 +
             C175 * C1287 + C176 * C1282) *
                C2301 +
            (C173 * C1285 + C174 * C51089 - C175 * C1286 - C176 * C51073 +
             C177 * C1287 + C178 * C1282) *
                C2302) *
               C51059 +
           ((C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C2300 +
            (C3728 + C3729 - C3730 - C3731 + C3732 + C3733) * C2301 +
            (C3734 + C3735 - C3736 - C3737 + C3738 + C3739) * C2302) *
               C50930) *
              C1643 +
          (((C475 * C1286 -
             ((C117 * C441 + C50942 * C452) * C51089 +
              (C117 * C435 + C50942 * C442) * C1285) +
             C476 * C51073 - C477 * C1287 - C478 * C1282) *
                C2300 +
            (C477 * C1286 - (C476 * C51089 + C475 * C1285) + C478 * C51073 -
             C479 * C1287 - C480 * C1282) *
                C2301 +
            (C479 * C1286 - (C478 * C51089 + C477 * C1285) + C480 * C51073 -
             C481 * C1287 - C482 * C1282) *
                C2302) *
               C51059 +
           ((C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) + C1541 * C51073 -
             C1542 * C1287 - C1543 * C1282) *
                C2300 +
            (C1542 * C1286 - (C1541 * C51089 + C1540 * C1285) + C1543 * C51073 -
             C1544 * C1287 - C1545 * C1282) *
                C2301 +
            (C1544 * C1286 - (C1543 * C51089 + C1542 * C1285) + C1545 * C51073 -
             (C117 * C1523 + C50942 * C1524) * C1287 -
             (C117 * C1525 + C50942 * C1526) * C1282) *
                C2302) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1285 +
            (C117 * C130 + C50942 * C143) * C51089 - C171 * C1286 -
            C172 * C51073 + C173 * C1287 + C174 * C1282) *
               C50774 * C10812 +
           (C3722 + C3723 - C3724 - C3725 + C3726 + C3727) * C50774 * C10813 +
           (C9389 + C9390 - C9391 - C9392 + C9393 + C9394) * C50774 * C10814 +
           (C11699 + C11700 - C11701 - C11702 + C11703 + C11704) * C50774 *
               C10815) *
              C1643 +
          ((C475 * C1286 -
            ((C117 * C441 + C50942 * C452) * C51089 +
             (C117 * C435 + C50942 * C442) * C1285) +
            C476 * C51073 - C477 * C1287 - C478 * C1282) *
               C50774 * C10812 +
           (C1540 * C1286 - (C3122 * C51089 + C3123 * C1285) + C1541 * C51073 -
            C1542 * C1287 - C1543 * C1282) *
               C50774 * C10813 +
           (C3126 * C1286 - (C3125 * C51089 + C3124 * C1285) + C3127 * C51073 -
            C3128 * C1287 - C3129 * C1282) *
               C50774 * C10814 +
           (C8814 * C1286 - (C8813 * C51089 + C8812 * C1285) + C8815 * C51073 -
            (C117 * C3089 + C50942 * C3093) * C1287 -
            (C117 * C3092 + C50942 * C3098) * C1282) *
               C50774 * C10815) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C1391 +
              (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
              C172 * C50759) *
                 C2300 +
             (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                 C2301 +
             (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                 C2302) *
                C51059 +
            ((C3886 + C3887 - C3888 - C3889) * C2300 +
             (C3890 + C3891 - C3892 - C3893) * C2301 +
             (C3894 + C3895 - C3896 - C3897) * C2302) *
                C50930) *
               C1643 +
           (((C475 * C1392 -
              ((C117 * C441 + C50942 * C452) * C1386 +
               (C117 * C435 + C50942 * C442) * C1391) +
              C476 * C50759) *
                 C2300 +
             (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                 C2301 +
             (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                 C2302) *
                C51059 +
            ((C4104 - (C4105 + C4106) + C4107) * C2300 +
             (C4108 - (C4109 + C4110) + C4111) * C2301 +
             (C4112 - (C4113 + C4114) + C4115) * C2302) *
                C50930) *
               C50855) *
              C51046 +
          ((((C3888 - (C3887 + C3886) + C3889) * C2300 +
             (C3892 - (C3891 + C3890) + C3893) * C2301 +
             (C3896 - (C3895 + C3894) + C3897) * C2302) *
                C51059 +
            ((C3898 - (C3899 + C3900) + C3901) * C2300 +
             (C3902 - (C3903 + C3904) + C3905) * C2301 +
             (C3906 - (C3907 + C3908) + C3909) * C2302) *
                C50930) *
               C1643 +
           (((C4106 + C4105 - C4104 - C4107) * C2300 +
             (C4110 + C4109 - C4108 - C4111) * C2301 +
             (C4114 + C4113 - C4112 - C4115) * C2302) *
                C51059 +
            ((C3124 * C1391 + C3125 * C1386 - C3126 * C1392 - C3127 * C50759) *
                 C2300 +
             (C3126 * C1391 + C3127 * C1386 - C3128 * C1392 - C3129 * C50759) *
                 C2301 +
             (C3128 * C1391 + C3129 * C1386 -
              (C117 * C815 + C50942 * C828) * C1392 -
              (C117 * C827 + C50942 * C839) * C50759) *
                 C2302) *
                C50930) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C50774 * C10812 +
            (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 +
            C11803 * C10814 + C11811 * C10815) *
               C1643 +
           ((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C50774 * C10812 +
            (C4104 - (C4105 + C4106) + C4107) * C50774 * C10813 +
            (C9758 - (C9759 + C9760) + C9761) * C50774 * C10814 +
            (C11942 - (C11943 + C11944) + C11945) * C50774 * C10815) *
               C50855) *
              C51046 +
          (((C3888 - (C3887 + C3886) + C3889) * C50774 * C10812 +
            (C3898 - (C3899 + C3900) + C3901) * C50774 * C10813 +
            (C9549 - (C9550 + C9551) + C9552) * C50774 * C10814 +
            (C11805 - (C11806 + C11807) + C11808) * C50774 * C10815) *
               C1643 +
           ((C4106 + C4105 - C4104 - C4107) * C50774 * C10812 +
            (C9760 + C9759 - C9758 - C9761) * C50774 * C10813 +
            (C11944 + C11943 - C11942 - C11945) * C50774 * C10814 +
            (C11319 * C1391 + C11320 * C1386 -
             (C117 * C8791 + C50942 * C8794) * C1392 -
             (C117 * C8793 + C50942 * C8797) * C50759) *
                C50774 * C10815) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C1391 +
             (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
             C172 * C50759) *
                C2300 +
            (C171 * C1391 + C172 * C1386 - C173 * C1392 - C174 * C50759) *
                C2301 +
            (C173 * C1391 + C174 * C1386 - C175 * C1392 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C3886 + C3887 - C3888 - C3889) * C2300 +
            (C3890 + C3891 - C3892 - C3893) * C2301 +
            (C3894 + C3895 - C3896 - C3897) * C2302) *
               C50930) *
              C51092 +
          (((C475 * C1392 -
             ((C117 * C441 + C50942 * C452) * C1386 +
              (C117 * C435 + C50942 * C442) * C1391) +
             C476 * C50759) *
                C2300 +
            (C477 * C1392 - (C476 * C1386 + C475 * C1391) + C478 * C50759) *
                C2301 +
            (C479 * C1392 - (C478 * C1386 + C477 * C1391) + C480 * C50759) *
                C2302) *
               C51059 +
           ((C4104 - (C4105 + C4106) + C4107) * C2300 +
            (C4108 - (C4109 + C4110) + C4111) * C2301 +
            (C4112 - (C4113 + C4114) + C4115) * C2302) *
               C50930) *
              C51082 +
          ((((C117 * C944 + C50942 * C949) * C1391 +
             (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
             C978 * C50759) *
                C2300 +
            (C977 * C1391 + C978 * C1386 - C979 * C1392 - C980 * C50759) *
                C2301 +
            (C979 * C1391 + C980 * C1386 - C981 * C1392 - C982 * C50759) *
                C2302) *
               C51059 +
           ((C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
                C2300 +
            (C3292 * C1391 + C3293 * C1386 - C3294 * C1392 - C3295 * C50759) *
                C2301 +
            (C3294 * C1391 + C3295 * C1386 -
             (C117 * C1080 + C50942 * C1085) * C1392 -
             (C117 * C1084 + C50942 * C1092) * C50759) *
                C2302) *
               C50930) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C1391 +
            (C117 * C130 + C50942 * C143) * C1386 - C171 * C1392 -
            C172 * C50759) *
               C50774 * C10812 +
           (C3886 + C3887 - C3888 - C3889) * C50774 * C10813 + C11803 * C10814 +
           C11811 * C10815) *
              C51092 +
          ((C475 * C1392 -
            ((C117 * C441 + C50942 * C452) * C1386 +
             (C117 * C435 + C50942 * C442) * C1391) +
            C476 * C50759) *
               C50774 * C10812 +
           (C4104 - (C4105 + C4106) + C4107) * C50774 * C10813 +
           (C9758 - (C9759 + C9760) + C9761) * C50774 * C10814 +
           (C11942 - (C11943 + C11944) + C11945) * C50774 * C10815) *
              C51082 +
          (((C117 * C944 + C50942 * C949) * C1391 +
            (C117 * C950 + C50942 * C959) * C1386 - C977 * C1392 -
            C978 * C50759) *
               C50774 * C10812 +
           (C3462 * C1391 + C3463 * C1386 - C3292 * C1392 - C3293 * C50759) *
               C50774 * C10813 +
           (C9133 * C1391 + C9134 * C1386 - C8971 * C1392 - C8972 * C50759) *
               C50774 * C10814 +
           (C11527 * C1391 + C11528 * C1386 -
            (C117 * C9118 + C50942 * C9121) * C1392 -
            (C117 * C9120 + C50942 * C9124) * C50759) *
               C50774 * C10815) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C118 +
            (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
            C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
               C2300 +
           (C171 * C118 + C172 * C106 - C173 * C119 - C174 * C107 +
            C175 * C120 + C176 * C108 - C177 * C121 - C178 * C109) *
               C2301 +
           (C173 * C118 + C174 * C106 - C175 * C119 - C176 * C107 +
            C177 * C120 + C178 * C108 - C179 * C121 - C180 * C109) *
               C2302) *
              C51059 +
          (((C117 * C287 + C50942 * C294) * C118 +
            (C117 * C293 + C50942 * C304) * C106 - C327 * C119 - C328 * C107 +
            C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
               C2300 +
           (C327 * C118 + C328 * C106 - C329 * C119 - C330 * C107 +
            C331 * C120 + C332 * C108 - C333 * C121 - C334 * C109) *
               C2301 +
           (C329 * C118 + C330 * C106 - C331 * C119 - C332 * C107 +
            C333 * C120 + C334 * C108 - (C117 * C291 + C50942 * C302) * C121 -
            (C117 * C303 + C50942 * C309) * C109) *
               C2302) *
              C50930) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C49770 +
             (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
             C172 * C50759) *
                C2300 +
            (C171 * C49770 + C172 * C51031 - C173 * C49763 - C174 * C50759) *
                C2301 +
            (C173 * C49770 + C174 * C51031 - C175 * C49763 - C176 * C50759) *
                C2302) *
               C51059 +
           ((C2768 + C2769 - C2770 - C2771) * C2300 +
            (C2772 + C2773 - C2774 - C2775) * C2301 +
            (C2776 + C2777 - C2778 - C2779) * C2302) *
               C50930) *
              C50843 * C582 +
          (((C2770 - (C2769 + C2768) + C2771) * C2300 +
            (C2774 - (C2773 + C2772) + C2775) * C2301 +
            (C2778 - (C2777 + C2776) + C2779) * C2302) *
               C51059 +
           ((C2780 - (C2808 + C2809) + C2785) * C2300 +
            (C2786 - (C2787 + C2788) + C2789) * C2301 +
            (C2790 - (C2791 + C2792) + C2793) * C2302) *
               C50930) *
              C50843 * C583 +
          (((C2809 + C2808 - C2780 - C2785) * C2300 +
            (C2788 + C2787 - C2786 - C2789) * C2301 +
            (C2792 + C2791 - C2790 - C2793) * C2302) *
               C51059 +
           (((C117 * C700 + C50942 * C708) * C49770 +
             (C117 * C707 + C50942 * C712) * C51031 - C2804 * C49763 -
             C2805 * C50759) *
                C2300 +
            (C2804 * C49770 + C2805 * C51031 - C2806 * C49763 -
             C2807 * C50759) *
                C2301 +
            (C2806 * C49770 + C2807 * C51031 -
             (C117 * C697 + C50942 * C702) * C49763 -
             (C117 * C701 + C50942 * C709) * C50759) *
                C2302) *
               C50930) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50942 * C129) * C118 +
           (C117 * C130 + C50942 * C143) * C106 - C171 * C119 - C172 * C107 +
           C173 * C120 + C174 * C108 - C175 * C121 - C176 * C109) *
              C50774 * C10812 +
          (C2472 * C118 + C2473 * C106 - C327 * C119 - C328 * C107 +
           C329 * C120 + C330 * C108 - C331 * C121 - C332 * C109) *
              C50774 * C10813 +
          (C2803 * C118 + C2802 * C106 - C620 * C119 - C621 * C107 +
           C622 * C120 + C623 * C108 - C624 * C121 - C625 * C109) *
              C50774 * C10814 +
          (C2940 * C118 + C2941 * C106 - C2804 * C119 - C2805 * C107 +
           C2806 * C120 + C2807 * C108 - (C117 * C697 + C50942 * C702) * C121 -
           (C117 * C701 + C50942 * C709) * C109) *
              C50774 * C10815) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C49770 +
            (C117 * C130 + C50942 * C143) * C51031 - C171 * C49763 -
            C172 * C50759) *
               C50774 * C10812 +
           (C2768 + C2769 - C2770 - C2771) * C50774 * C10813 + C11117 * C10814 +
           C11125 * C10815) *
              C50843 * C582 +
          ((C2770 - (C2769 + C2768) + C2771) * C50774 * C10812 +
           (C2780 - (C2808 + C2809) + C2785) * C50774 * C10813 +
           (C8499 - (C8500 + C8501) + C8502) * C50774 * C10814 +
           (C11119 - (C11120 + C11121) + C11122) * C50774 * C10815) *
              C50843 * C583 +
          (C11117 * C10812 + C11125 * C10813 +
           (C11121 + C11120 - C11119 - C11122) * C50774 * C10814 +
           ((C117 * C8618 + C50942 * C8622) * C49770 +
            (C117 * C8621 + C50942 * C8624) * C51031 -
            (C117 * C8617 + C50942 * C8620) * C49763 -
            (C117 * C8619 + C50942 * C8623) * C50759) *
               C50774 * C10815) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C2300 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C2301 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C2302) *
               C51059 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
               C50930) *
              C50843 * C51046 +
          (((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C2300 +
            (C2462 - (C2461 + C2460) + C2463 - C2464 - C2465) * C2301 +
            (C2468 - (C2467 + C2466) + C2469 - C2470 - C2471) * C2302) *
               C51059 +
           ((C620 * C284 -
             ((C117 * C593 + C50942 * C602) * C278 +
              (C117 * C587 + C50942 * C592) * C283) +
             C621 * C279 - C622 * C285 - C623 * C280) *
                C2300 +
            (C622 * C284 - (C621 * C278 + C620 * C283) + C623 * C279 -
             C624 * C285 - C625 * C280) *
                C2301 +
            (C624 * C284 - (C623 * C278 + C622 * C283) + C625 * C279 -
             (C117 * C591 + C50942 * C600) * C285 -
             (C117 * C601 + C50942 * C606) * C280) *
                C2302) *
               C50930) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C2300 +
            (C171 * C696 + C172 * C50754) * C2301 +
            (C173 * C696 + C174 * C50754) * C2302) *
               C51059 +
           ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
            (C2924 + C2925) * C2302) *
               C50930) *
              C50843 * C692 -
          (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
            (C2930 + C2931) * C2300) *
               C50930 +
           ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
            (C2921 + C2920) * C2300) *
               C51059) *
              C50843 * C693 +
          (((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
            (C2927 + C2926) * C2302) *
               C51059 +
           ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
            (C2938 + C2939) * C2302) *
               C50930) *
              C50843 * C694 -
          ((((C117 * C2910 + C50942 * C2916) * C50754 +
             (C117 * C2907 + C50942 * C2911) * C696) *
                C2302 +
            ((C117 * C2912 + C50942 * C2917) * C50754 +
             (C117 * C2908 + C50942 * C2913) * C696) *
                C2301 +
            ((C117 * C2914 + C50942 * C2918) * C50754 +
             (C117 * C2909 + C50942 * C2915) * C696) *
                C2300) *
               C50930 +
           ((C2939 + C2938) * C2302 + (C2937 + C2936) * C2301 +
            (C2943 + C2942) * C2300) *
               C51059) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C50843 * C51046 +
          ((C2456 - (C2475 + C2474) + C2457 - C2458 - C2459) * C50774 * C10812 +
           (C8195 - (C8194 + C8193) + C8196 - C8197 - C8198) * C50774 * C10813 +
           (C10917 - (C10916 + C10915) + C10918 - C10919 - C10920) * C50774 *
               C10814 +
           (C8513 * C284 - (C8641 * C278 + C8640 * C283) + C8514 * C279 -
            (C117 * C2907 + C50942 * C2911) * C285 -
            (C117 * C2910 + C50942 * C2916) * C280) *
               C50774 * C10815) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C696 +
            (C117 * C130 + C50942 * C143) * C50754) *
               C50774 * C10812 +
           (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
           C11204 * C10815) *
              C50843 * C692 -
          (C11205 * C10815 + C11199 * C10814 +
           (C2930 + C2931) * C50774 * C10813 +
           (C2921 + C2920) * C50774 * C10812) *
              C50843 * C693 +
          (C11196 * C10812 + C11204 * C10813 +
           (C8644 + C8645) * C50774 * C10814 +
           (C11208 + C11209) * C50774 * C10815) *
              C50843 * C694 -
          (((C117 * C11192 + C50942 * C11194) * C50754 +
            (C117 * C11191 + C50942 * C11193) * C696) *
               C50774 * C10815 +
           (C11209 + C11208) * C50774 * C10814 + C11205 * C10813 +
           C11199 * C10812) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C283 +
             (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
             C173 * C285 + C174 * C280) *
                C2300 +
            (C171 * C283 + C172 * C278 - C173 * C284 - C174 * C279 +
             C175 * C285 + C176 * C280) *
                C2301 +
            (C173 * C283 + C174 * C278 - C175 * C284 - C176 * C279 +
             C177 * C285 + C178 * C280) *
                C2302) *
               C51059 +
           ((C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C2300 +
            (C2460 + C2461 - C2462 - C2463 + C2464 + C2465) * C2301 +
            (C2466 + C2467 - C2468 - C2469 + C2470 + C2471) * C2302) *
               C50930) *
              C51047 +
          (((C475 * C284 -
             ((C117 * C441 + C50942 * C452) * C278 +
              (C117 * C435 + C50942 * C442) * C283) +
             C476 * C279 - C477 * C285 - C478 * C280) *
                C2300 +
            (C477 * C284 - (C476 * C278 + C475 * C283) + C478 * C279 -
             C479 * C285 - C480 * C280) *
                C2301 +
            (C479 * C284 - (C478 * C278 + C477 * C283) + C480 * C279 -
             C481 * C285 - C482 * C280) *
                C2302) *
               C51059 +
           ((C1540 * C284 -
             ((C117 * C820 + C50942 * C835) * C278 +
              (C117 * C811 + C50942 * C819) * C283) +
             C1541 * C279 - C1542 * C285 - C1543 * C280) *
                C2300 +
            (C1542 * C284 - (C1541 * C278 + C1540 * C283) + C1543 * C279 -
             C1544 * C285 - C1545 * C280) *
                C2301 +
            (C1544 * C284 - (C1543 * C278 + C1542 * C283) + C1545 * C279 -
             (C117 * C1523 + C50942 * C1524) * C285 -
             (C117 * C1525 + C50942 * C1526) * C280) *
                C2302) *
               C50930) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50942 * C129) * C696 +
              (C117 * C130 + C50942 * C143) * C50754) *
                 C2300 +
             (C171 * C696 + C172 * C50754) * C2301 +
             (C173 * C696 + C174 * C50754) * C2302) *
                C51059 +
            ((C2920 + C2921) * C2300 + (C2922 + C2923) * C2301 +
             (C2924 + C2925) * C2302) *
                C50930) *
               C51047 -
           (((C3102 + C3103) * C2302 + (C3104 + C3105) * C2301 +
             (C3130 + C3131) * C2300) *
                C50930 +
            ((C478 * C50754 + C477 * C696) * C2302 +
             (C476 * C50754 + C475 * C696) * C2301 +
             ((C117 * C441 + C50942 * C452) * C50754 +
              (C117 * C435 + C50942 * C442) * C696) *
                 C2300) *
                C51059) *
               C50855) *
              C582 +
          ((((C3131 + C3130) * C2300 + (C3105 + C3104) * C2301 +
             (C3103 + C3102) * C2302) *
                C51059 +
            ((C3132 + C3133) * C2300 + (C3134 + C3135) * C2301 +
             (C3136 + C3137) * C2302) *
                C50930) *
               C50855 -
           (((C2926 + C2927) * C2302 + (C2928 + C2929) * C2301 +
             (C2930 + C2931) * C2300) *
                C50930 +
            ((C2925 + C2924) * C2302 + (C2923 + C2922) * C2301 +
             (C2921 + C2920) * C2300) *
                C51059) *
               C51047) *
              C583 +
          ((((C2931 + C2930) * C2300 + (C2929 + C2928) * C2301 +
             (C2927 + C2926) * C2302) *
                C51059 +
            ((C2942 + C2943) * C2300 + (C2936 + C2937) * C2301 +
             (C2938 + C2939) * C2302) *
                C50930) *
               C51047 -
           ((((C117 * C3092 + C50942 * C3098) * C50754 +
              (C117 * C3089 + C50942 * C3093) * C696) *
                 C2302 +
             ((C117 * C3094 + C50942 * C3099) * C50754 +
              (C117 * C3090 + C50942 * C3095) * C696) *
                 C2301 +
             ((C117 * C3096 + C50942 * C3100) * C50754 +
              (C117 * C3091 + C50942 * C3097) * C696) *
                 C2300) *
                C50930 +
            ((C3137 + C3136) * C2302 + (C3135 + C3134) * C2301 +
             (C3133 + C3132) * C2300) *
                C51059) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50942 * C129) * C283 +
            (C117 * C130 + C50942 * C143) * C278 - C171 * C284 - C172 * C279 +
            C173 * C285 + C174 * C280) *
               C50774 * C10812 +
           (C2474 + C2475 - C2456 - C2457 + C2458 + C2459) * C50774 * C10813 +
           (C8193 + C8194 - C8195 - C8196 + C8197 + C8198) * C50774 * C10814 +
           (C10915 + C10916 - C10917 - C10918 + C10919 + C10920) * C50774 *
               C10815) *
              C51047 +
          ((C475 * C284 -
            ((C117 * C441 + C50942 * C452) * C278 +
             (C117 * C435 + C50942 * C442) * C283) +
            C476 * C279 - C477 * C285 - C478 * C280) *
               C50774 * C10812 +
           (C1540 * C284 - (C3122 * C278 + C3123 * C283) + C1541 * C279 -
            C1542 * C285 - C1543 * C280) *
               C50774 * C10813 +
           (C3126 * C284 - (C3125 * C278 + C3124 * C283) + C3127 * C279 -
            C3128 * C285 - C3129 * C280) *
               C50774 * C10814 +
           (C8814 * C284 - (C8813 * C278 + C8812 * C283) + C8815 * C279 -
            (C117 * C3089 + C50942 * C3093) * C285 -
            (C117 * C3092 + C50942 * C3098) * C280) *
               C50774 * C10815) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50942 * C129) * C696 +
             (C117 * C130 + C50942 * C143) * C50754) *
                C50774 * C10812 +
            (C2920 + C2921) * C50774 * C10813 + C11196 * C10814 +
            C11204 * C10815) *
               C51047 -
           (C11318 * C10815 + C11313 * C10814 +
            (C3130 + C3131) * C50774 * C10813 +
            ((C117 * C441 + C50942 * C452) * C50754 +
             (C117 * C435 + C50942 * C442) * C696) *
                C50774 * C10812) *
               C50855) *
              C582 +
          (((C3131 + C3130) * C50774 * C10812 +
            (C3132 + C3133) * C50774 * C10813 +
            (C8817 + C8818) * C50774 * C10814 +
            (C11321 + C11322) * C50774 * C10815) *
               C50855 -
           (C11205 * C10815 + C11199 * C10814 +
            (C2930 + C2931) * C50774 * C10813 +
            (C2921 + C2920) * C50774 * C10812) *
               C51047) *
              C583 +
          ((C11196 * C10812 + C11204 * C10813 +
            (C8644 + C8645) * C50774 * C10814 +
            (C11208 + C11209) * C50774 * C10815) *
               C51047 -
           (((C117 * C11308 + C50942 * C11310) * C50754 +
             (C117 * C11307 + C50942 * C11309) * C696) *
                C50774 * C10815 +
            (C11322 + C11321) * C50774 * C10814 + C11318 * C10813 +
            C11313 * C10812) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C2300 +
           ((C5235 + C5234) * C1285 + (C5237 + C5236) * C51089 -
            (C5239 + C5238) * C1286 - (C5241 + C5240) * C51073 +
            (C5243 + C5242) * C1287 + (C5245 + C5244) * C1282) *
               C2301 +
           (C5250 * C1285 + C5251 * C51089 - C5252 * C1286 - C5253 * C51073 +
            (C5247 + C5246) * C1287 + (C5249 + C5248) * C1282) *
               C2302) *
              C50916 * C50843 * C1283 +
          (((C5424 + C5425) * C1286 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C51089 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C1285) +
            (C5426 + C5427) * C51073 - C5436 * C1287 - C5437 * C1282) *
               C2300 +
           ((C5429 + C5428) * C1286 -
            ((C5427 + C5426) * C51089 + (C5425 + C5424) * C1285) +
            (C5431 + C5430) * C51073 - (C5432 + C5433) * C1287 -
            (C5434 + C5435) * C1282) *
               C2301 +
           ((C5433 + C5432) * C1286 - (C5437 * C51089 + C5436 * C1285) +
            (C5435 + C5434) * C51073 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C1287 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C1282) *
               C2302) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1285 + (C12864 + C12865) * C51089 -
            (C5425 + C5424) * C1286 - (C5427 + C5426) * C51073 +
            (C5429 + C5428) * C1287 + (C5431 + C5430) * C1282) *
               C50774 * C8044 +
           (C13162 * C1285 + C13163 * C51089 - C13164 * C1286 -
            C13165 * C51073 + (C5789 + C5788) * C1287 +
            (C5791 + C5790) * C1282) *
               C50774 * C8045) *
              C50843 * C1283 +
          (((C5424 + C5425) * C1286 -
            ((C12865 + C12864) * C51089 + (C12863 + C12862) * C1285) +
            (C5426 + C5427) * C51073 - C5436 * C1287 - C5437 * C1282) *
               C50774 * C8043 +
           ((C5785 + C5784) * C1286 -
            ((C12869 + C12868) * C51089 + (C12867 + C12866) * C1285) +
            (C5787 + C5786) * C51073 - (C5788 + C5789) * C1287 -
            (C5790 + C5791) * C1282) *
               C50774 * C8044 +
           ((C13186 + C13187) * C1286 - (C13298 * C51089 + C13299 * C1285) +
            (C13192 + C13193) * C51073 -
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C1287 -
            (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C1282) *
               C50774 * C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
            (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
               C2302) *
              C50916 * C50843 * C51091 +
          (((C5424 + C5425) * C1392 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C1386 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C1391) +
            (C5426 + C5427) * C50759) *
               C2300 +
           ((C5429 + C5428) * C1392 -
            ((C5427 + C5426) * C1386 + (C5425 + C5424) * C1391) +
            (C5431 + C5430) * C50759) *
               C2301 +
           ((C5433 + C5432) * C1392 - (C5437 * C1386 + C5436 * C1391) +
            (C5435 + C5434) * C50759) *
               C2302) *
              C50916 * C50843 * C51079 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C1391 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C1386 -
            (C5784 + C5785) * C1392 - (C5786 + C5787) * C50759) *
               C2300 +
           ((C5785 + C5784) * C1391 + (C5787 + C5786) * C1386 -
            (C5788 + C5789) * C1392 - (C5790 + C5791) * C50759) *
               C2301 +
           ((C5789 + C5788) * C1391 + (C5791 + C5790) * C1386 -
            (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                C1392 -
            (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                C50759) *
               C2302) *
              C50916 * C50843 * C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
            (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C14227 * C8045) *
              C50843 * C51091 +
          (((C5424 + C5425) * C1392 -
            ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
            (C5426 + C5427) * C50759) *
               C50774 * C8043 +
           ((C5785 + C5784) * C1392 -
            ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
            (C5787 + C5786) * C50759) *
               C50774 * C8044 +
           ((C13186 + C13187) * C1392 - (C13298 * C1386 + C13299 * C1391) +
            (C13192 + C13193) * C50759) *
               C50774 * C8045) *
              C50843 * C51079 +
          (C14227 * C8043 +
           ((C13191 + C13190) * C1391 + (C13189 + C13188) * C1386 -
            (C13187 + C13186) * C1392 - (C13193 + C13192) * C50759) *
               C50774 * C8044 +
           ((C13311 + C13312) * C1391 + (C13313 + C13314) * C1386 -
            (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                C1392 -
            (C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                C50759) *
               C50774 * C8045) *
              C50843 * C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C2300 +
            ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
             (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                C2301 +
            (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
                C2302) *
               C50916 * C51047 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C2300 +
            ((C5613 + C5612) * C1392 -
             ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
             (C5615 + C5614) * C50759) *
                C2301 +
            ((C5617 + C5616) * C1392 - (C5621 * C1386 + C5620 * C1391) +
             (C5619 + C5618) * C50759) *
                C2302) *
               C50916 * C50855) *
              C1283 +
          ((((C5424 + C5425) * C1392 -
             ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                  C1386 +
              (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                  C1391) +
             (C5426 + C5427) * C50759) *
                C2300 +
            ((C5429 + C5428) * C1392 -
             ((C5427 + C5426) * C1386 + (C5425 + C5424) * C1391) +
             (C5431 + C5430) * C50759) *
                C2301 +
            ((C5433 + C5432) * C1392 - (C5437 * C1386 + C5436 * C1391) +
             (C5435 + C5434) * C50759) *
                C2302) *
               C50916 * C51047 +
           (((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C1391 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C2300 +
            ((C6965 + C6964) * C1391 + (C6967 + C6966) * C1386 -
             (C6968 + C6969) * C1392 - (C6970 + C6971) * C50759) *
                C2301 +
            ((C6969 + C6968) * C1391 + (C6971 + C6970) * C1386 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C1392 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C50759) *
                C2302) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C50774 * C8043 +
            ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
             (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
                C50774 * C8044 +
            C14227 * C8045) *
               C51047 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C50774 * C8043 +
            ((C6965 + C6964) * C1392 -
             ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
             (C6967 + C6966) * C50759) *
                C50774 * C8044 +
            ((C14430 + C14431) * C1392 - (C13500 * C1386 + C13501 * C1391) +
             (C14432 + C14433) * C50759) *
                C50774 * C8045) *
               C50855) *
              C1283 +
          ((((C5424 + C5425) * C1392 -
             ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
             (C5426 + C5427) * C50759) *
                C50774 * C8043 +
            ((C5785 + C5784) * C1392 -
             ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
             (C5787 + C5786) * C50759) *
                C50774 * C8044 +
            ((C13186 + C13187) * C1392 - (C13298 * C1386 + C13299 * C1391) +
             (C13192 + C13193) * C50759) *
                C50774 * C8045) *
               C51047 +
           (((C13495 + C13494) * C1391 + (C13493 + C13492) * C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C50774 * C8043 +
            ((C13491 + C13490) * C1391 + (C13489 + C13488) * C1386 -
             (C14431 + C14430) * C1392 - (C14433 + C14432) * C50759) *
                C50774 * C8044 +
            ((C13496 + C13497) * C1391 + (C13498 + C13499) * C1386 -
             (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 + C51060 * C3095) *
                 C1392 -
             (C5200 * C9120 + C50954 * C9124 + C5199 * C3094 + C51060 * C3099) *
                 C50759) *
                C50774 * C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C2300 +
            ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
             (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
                C2301 +
            (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 -
             C5253 * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5608 + C5609) * C49763 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C51031 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C49770) +
             (C5610 + C5611) * C50759) *
                C2300 +
            ((C5613 + C5612) * C49763 -
             ((C5611 + C5610) * C51031 + (C5609 + C5608) * C49770) +
             (C5615 + C5614) * C50759) *
                C2301 +
            ((C5617 + C5616) * C49763 - (C5621 * C51031 + C5620 * C49770) +
             (C5619 + C5618) * C50759) *
                C2302) *
               C50916 * C50855) *
              C1283 +
          ((((C5424 + C5425) * C49763 -
             ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                  C51031 +
              (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                  C49770) +
             (C5426 + C5427) * C50759) *
                C2300 +
            ((C5429 + C5428) * C49763 -
             ((C5427 + C5426) * C51031 + (C5425 + C5424) * C49770) +
             (C5431 + C5430) * C50759) *
                C2301 +
            ((C5433 + C5432) * C49763 - (C5437 * C51031 + C5436 * C49770) +
             (C5435 + C5434) * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C49770 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C51031 -
             (C6964 + C6965) * C49763 - (C6966 + C6967) * C50759) *
                C2300 +
            ((C6965 + C6964) * C49770 + (C6967 + C6966) * C51031 -
             (C6968 + C6969) * C49763 - (C6970 + C6971) * C50759) *
                C2301 +
            ((C6969 + C6968) * C49770 + (C6971 + C6970) * C51031 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C49763 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C50759) *
                C2302) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C49770 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C51031 -
             (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
                C50774 * C8043 +
            ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
             (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
                C50774 * C8044 +
            C13197 * C8045) *
               C1643 +
           (((C5608 + C5609) * C49763 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C51031 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C49770) +
             (C5610 + C5611) * C50759) *
                C50774 * C8043 +
            ((C6965 + C6964) * C49763 -
             ((C13492 + C13493) * C51031 + (C13494 + C13495) * C49770) +
             (C6967 + C6966) * C50759) *
                C50774 * C8044 +
            ((C14430 + C14431) * C49763 - (C13500 * C51031 + C13501 * C49770) +
             (C14432 + C14433) * C50759) *
                C50774 * C8045) *
               C50855) *
              C1283 +
          ((((C5424 + C5425) * C49763 -
             ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
             (C5426 + C5427) * C50759) *
                C50774 * C8043 +
            ((C5785 + C5784) * C49763 -
             ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
             (C5787 + C5786) * C50759) *
                C50774 * C8044 +
            ((C13186 + C13187) * C49763 - (C13298 * C51031 + C13299 * C49770) +
             (C13192 + C13193) * C50759) *
                C50774 * C8045) *
               C1643 +
           (((C13495 + C13494) * C49770 + (C13493 + C13492) * C51031 -
             (C6964 + C6965) * C49763 - (C6966 + C6967) * C50759) *
                C50774 * C8043 +
            ((C13491 + C13490) * C49770 + (C13489 + C13488) * C51031 -
             (C14431 + C14430) * C49763 - (C14433 + C14432) * C50759) *
                C50774 * C8044 +
            ((C13496 + C13497) * C49770 + (C13498 + C13499) * C51031 -
             (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 + C51060 * C3095) *
                 C49763 -
             (C5200 * C9120 + C50954 * C9124 + C5199 * C3094 + C51060 * C3099) *
                 C50759) *
                C50774 * C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C1643 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C51091 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C2301 +
            ((C6969 + C6968) * C696 + (C6971 + C6970) * C50754) * C2302) *
               C50916 * C50855 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C1643) *
              C51079 +
          ((((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                 C696 +
             (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                 C50754) *
                C2300 +
            ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
            ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
               C50916 * C1643 -
           (((C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                 C50754 +
             (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                 C696) *
                C2302 +
            ((C5200 * C3446 + C50954 * C3451 + C5199 * C831 + C51060 * C841) *
                 C50754 +
             (C5200 * C3442 + C50954 * C3447 + C5199 * C817 + C51060 * C832) *
                 C696) *
                C2301 +
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C50754 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C1643 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C50855) *
              C51091 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C50855 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C1643) *
              C51079 +
          ((C13315 * C8043 +
            ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
                C8044 +
            ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
                C8045) *
               C1643 -
           (((C5200 * C11519 + C50954 * C11521 + C5199 * C8795 +
              C51060 * C8798) *
                 C50754 +
             (C5200 * C11518 + C50954 * C11520 + C5199 * C8792 +
              C51060 * C8796) *
                 C696) *
                C50774 * C8045 +
            ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C50774 *
                C8044 +
            C13505 * C8043) *
               C50855) *
              C1390)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C51092 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C51082 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C2300 +
            ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C2301 +
            ((C6203 + C6202) * C696 + (C6205 + C6204) * C50754) * C2302) *
               C50916 * C1875) *
              C1283 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C6965 + C6964) * C696 + (C6967 + C6966) * C50754) * C2301 +
            ((C6969 + C6968) * C696 + (C6971 + C6970) * C50754) * C2302) *
               C50916 * C51082 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C51092 -
           (((C5200 * C3566 + C50954 * C3572 + C5199 * C1086 + C51060 * C1093) *
                 C50754 +
             (C5200 * C3563 + C50954 * C3567 + C5199 * C1081 + C51060 * C1087) *
                 C696) *
                C2302 +
            ((C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                 C50754 +
             (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                 C696) *
                C2301 +
            ((C5200 * C3570 + C50954 * C3574 + C5199 * C1090 + C51060 * C1095) *
                 C50754 +
             (C5200 * C3565 + C50954 * C3571 + C5199 * C1083 + C51060 * C1091) *
                 C696) *
                C2300) *
               C50916 * C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C51092 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C51082 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C50774 * C8043 +
            ((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C50774 *
                C8044 +
            ((C13818 + C13819) * C696 + (C13820 + C13821) * C50754) * C50774 *
                C8045) *
               C1875) *
              C1283 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C51082 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C51092 -
           (((C5200 * C11597 + C50954 * C11599 + C5199 * C9122 +
              C51060 * C9125) *
                 C50754 +
             (C5200 * C11596 + C50954 * C11598 + C5199 * C9119 +
              C51060 * C9123) *
                 C696) *
                C50774 * C8045 +
            ((C13821 + C13820) * C50754 + (C13819 + C13818) * C696) * C50774 *
                C8044 +
            ((C13817 + C13816) * C50754 + (C13815 + C13814) * C696) * C50774 *
                C8043) *
               C1875) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
            (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 - C5253 * C50759) *
               C2302) *
              C50916 * C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C51031 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C49770) +
            (C5426 + C5427) * C50759) *
               C2300 +
           ((C5429 + C5428) * C49763 -
            ((C5427 + C5426) * C51031 + (C5425 + C5424) * C49770) +
            (C5431 + C5430) * C50759) *
               C2301 +
           ((C5433 + C5432) * C49763 - (C5437 * C51031 + C5436 * C49770) +
            (C5435 + C5434) * C50759) *
               C2302) *
              C50916 * C50843 * C583 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C49770 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C51031 -
            (C5784 + C5785) * C49763 - (C5786 + C5787) * C50759) *
               C2300 +
           ((C5785 + C5784) * C49770 + (C5787 + C5786) * C51031 -
            (C5788 + C5789) * C49763 - (C5790 + C5791) * C50759) *
               C2301 +
           ((C5789 + C5788) * C49770 + (C5791 + C5790) * C51031 -
            (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                C49763 -
            (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                C50759) *
               C2302) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C2300 +
          ((C5235 + C5234) * C118 + (C5237 + C5236) * C106 -
           (C5239 + C5238) * C119 - (C5241 + C5240) * C107 +
           (C5243 + C5242) * C120 + (C5245 + C5244) * C108 -
           (C5246 + C5247) * C121 - (C5248 + C5249) * C109) *
              C2301 +
          (C5250 * C118 + C5251 * C106 - C5252 * C119 - C5253 * C107 +
           (C5247 + C5246) * C120 + (C5249 + C5248) * C108 -
           (C5200 * C439 + C50954 * C450 + C5199 * C127 + C51060 * C139) *
               C121 -
           (C5200 * C451 + C50954 * C457 + C5199 * C140 + C51060 * C148) *
               C109) *
              C2302) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
            (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 - C5253 * C50759) *
               C2302) *
              C50916 * C941 +
          (((C5608 + C5609) * C49763 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51031 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C49770) +
            (C5610 + C5611) * C50759) *
               C2300 +
           ((C5613 + C5612) * C49763 -
            ((C5611 + C5610) * C51031 + (C5609 + C5608) * C49770) +
            (C5615 + C5614) * C50759) *
               C2301 +
           ((C5617 + C5616) * C49763 - (C5621 * C51031 + C5620 * C49770) +
            (C5619 + C5618) * C50759) *
               C2302) *
              C50916 * C942 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C49770 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C51031 -
            (C6198 + C6199) * C49763 - (C6200 + C6201) * C50759) *
               C2300 +
           ((C6199 + C6198) * C49770 + (C6201 + C6200) * C51031 -
            (C6202 + C6203) * C49763 - (C6204 + C6205) * C50759) *
               C2301 +
           ((C6203 + C6202) * C49770 + (C6205 + C6204) * C51031 -
            (C5200 * C1166 + C50954 * C1171 + C5199 * C947 + C51060 * C955) *
                C49763 -
            (C5200 * C1170 + C50954 * C1178 + C5199 * C956 + C51060 * C962) *
                C50759) *
               C2302) *
              C50916 * C943) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C50774 * C8043 +
          ((C5199 * C287 + C51060 * C294 + C5200 * C811 + C50954 * C819) *
               C118 +
           (C5199 * C293 + C51060 * C304 + C5200 * C820 + C50954 * C835) *
               C106 -
           (C5425 + C5424) * C119 - (C5427 + C5426) * C107 +
           (C5429 + C5428) * C120 + (C5431 + C5430) * C108 -
           (C5432 + C5433) * C121 - (C5434 + C5435) * C109) *
              C50774 * C8044 +
          ((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
               C118 +
           (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
               C106 -
           (C5784 + C5785) * C119 - (C5786 + C5787) * C107 +
           (C5789 + C5788) * C120 + (C5791 + C5790) * C108 -
           (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
               C121 -
           (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
               C109) *
              C50774 * C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
            (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C13197 * C8045) *
              C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
            (C5426 + C5427) * C50759) *
               C50774 * C8043 +
           ((C5785 + C5784) * C49763 -
            ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
            (C5787 + C5786) * C50759) *
               C50774 * C8044 +
           ((C13186 + C13187) * C49763 -
            ((C13188 + C13189) * C51031 + (C13190 + C13191) * C49770) +
            (C13192 + C13193) * C50759) *
               C50774 * C8045) *
              C50843 * C583 +
          (C13197 * C8043 +
           ((C13191 + C13190) * C49770 + (C13189 + C13188) * C51031 -
            (C13187 + C13186) * C49763 - (C13193 + C13192) * C50759) *
               C50774 * C8044 +
           ((C5199 * C2909 + C51060 * C2915 + C5200 * C8792 + C50954 * C8796) *
                C49770 +
            (C5199 * C2914 + C51060 * C2918 + C5200 * C8795 + C50954 * C8798) *
                C51031 -
            (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                C49763 -
            (C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                C50759) *
               C50774 * C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
            (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C13197 * C8045) *
              C941 +
          (((C5608 + C5609) * C49763 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51031 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C49770) +
            (C5610 + C5611) * C50759) *
               C50774 * C8043 +
           ((C6965 + C6964) * C49763 -
            ((C13492 + C13493) * C51031 + (C13494 + C13495) * C49770) +
            (C6967 + C6966) * C50759) *
               C50774 * C8044 +
           ((C5199 * C817 + C51060 * C832 + C5200 * C3442 + C50954 * C3447) *
                C49763 -
            (C13500 * C51031 + C13501 * C49770) +
            (C5199 * C831 + C51060 * C841 + C5200 * C3446 + C50954 * C3451) *
                C50759) *
               C50774 * C8045) *
              C942 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C49770 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C51031 -
            (C6198 + C6199) * C49763 - (C6200 + C6201) * C50759) *
               C50774 * C8043 +
           ((C5199 * C1083 + C51060 * C1091 + C5200 * C3565 + C50954 * C3571) *
                C49770 +
            (C5199 * C1090 + C51060 * C1095 + C5200 * C3570 + C50954 * C3574) *
                C51031 -
            (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                C49763 -
            (C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                C50759) *
               C50774 * C8044 +
           ((C5199 * C3443 + C51060 * C3449 + C5200 * C9235 + C50954 * C9239) *
                C49770 +
            (C5199 * C3448 + C51060 * C3452 + C5200 * C9238 + C50954 * C9241) *
                C51031 -
            (C5200 * C9234 + C50954 * C9237 + C5199 * C3442 + C51060 * C3447) *
                C49763 -
            (C5200 * C9236 + C50954 * C9240 + C5199 * C3446 + C51060 * C3451) *
                C50759) *
               C50774 * C8045) *
              C943) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C2300 +
           ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
           (C5250 * C696 + C5251 * C50754) * C2302) *
              C50916 * C50843 * C692 -
          ((C5437 * C50754 + C5436 * C696) * C2302 +
           ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
           ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                C50754 +
            (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                C696) *
               C2300) *
              C50916 * C50843 * C693 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C696 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C50754) *
               C2300 +
           ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
           ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
              C50916 * C50843 * C694 -
          (((C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C50754 +
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C696) *
               C2302 +
           ((C5200 * C3094 + C50954 * C3099 + C5199 * C705 + C51060 * C711) *
                C50754 +
            (C5200 * C3090 + C50954 * C3095 + C5199 * C699 + C51060 * C706) *
                C696) *
               C2301 +
           ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                C50754 +
            (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                C696) *
               C2300) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C2300 +
           ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
            (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
            (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
               C2301 +
           (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
            (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
               C2302) *
              C50916 * C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C278 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C2300 +
           ((C5429 + C5428) * C284 -
            ((C5427 + C5426) * C278 + (C5425 + C5424) * C283) +
            (C5431 + C5430) * C279 - (C5432 + C5433) * C285 -
            (C5434 + C5435) * C280) *
               C2301 +
           ((C5433 + C5432) * C284 - (C5437 * C278 + C5436 * C283) +
            (C5435 + C5434) * C279 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C285 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C280) *
               C2302) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C941 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C942 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C2300 +
            ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C2301 +
            ((C6203 + C6202) * C696 + (C6205 + C6204) * C50754) * C2302) *
               C50916 * C943) *
              C51046 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C5199 * C812 + C51060 * C821 + C5200 * C1082 + C50954 * C1089) *
                 C696 +
             (C5199 * C822 + C51060 * C836 + C5200 * C1088 + C50954 * C1094) *
                 C50754) *
                C2301 +
            ((C5199 * C813 + C51060 * C823 + C5200 * C1081 + C50954 * C1087) *
                 C696 +
             (C5199 * C824 + C51060 * C837 + C5200 * C1086 + C50954 * C1093) *
                 C50754) *
                C2302) *
               C50916 * C942 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C941 -
           (((C5200 * C3566 + C50954 * C3572 + C5199 * C1086 + C51060 * C1093) *
                 C50754 +
             (C5200 * C3563 + C50954 * C3567 + C5199 * C1081 + C51060 * C1087) *
                 C696) *
                C2302 +
            ((C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                 C50754 +
             (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                 C696) *
                C2301 +
            ((C5200 * C3570 + C50954 * C3574 + C5199 * C1090 + C51060 * C1095) *
                 C50754 +
             (C5200 * C3565 + C50954 * C3571 + C5199 * C1083 + C51060 * C1091) *
                 C696) *
                C2300) *
               C50916 * C943) *
              C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C12865 + C12864) * C278 + (C12863 + C12862) * C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C50774 * C8043 +
           ((C5785 + C5784) * C284 -
            ((C12869 + C12868) * C278 + (C12867 + C12866) * C283) +
            (C5787 + C5786) * C279 - (C5788 + C5789) * C285 -
            (C5790 + C5791) * C280) *
               C50774 * C8044 +
           ((C5199 * C699 + C51060 * C706 + C5200 * C3090 + C50954 * C3095) *
                C284 -
            ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                 C278 +
             (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                 C283) +
            (C5199 * C705 + C51060 * C711 + C5200 * C3094 + C50954 * C3099) *
                C279 -
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C285 -
            (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C280) *
               C50774 * C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C8043 +
           ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
               C8044 +
           C13315 * C8045) *
              C50843 * C692 -
          (C13317 * C8045 +
           ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
               C8044 +
           ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
               C8043) *
              C50843 * C693 +
          (C13315 * C8043 +
           ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
               C8044 +
           ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
               C8045) *
              C50843 * C694 -
          (((C5200 * C11308 + C50954 * C11310 + C5199 * C8621 +
             C51060 * C8624) *
                C50754 +
            (C5200 * C11307 + C50954 * C11309 + C5199 * C8618 +
             C51060 * C8622) *
                C696) *
               C50774 * C8045 +
           ((C13314 + C13313) * C50754 + (C13312 + C13311) * C696) * C50774 *
               C8044 +
           C13317 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C941 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C942 +
           (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                 C696 +
             (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                 C50754) *
                C50774 * C8043 +
            ((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C50774 *
                C8044 +
            ((C13818 + C13819) * C696 + (C13820 + C13821) * C50754) * C50774 *
                C8045) *
               C943) *
              C51046 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C942 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C941 -
           (((C5200 * C11597 + C50954 * C11599 + C5199 * C9122 +
              C51060 * C9125) *
                 C50754 +
             (C5200 * C11596 + C50954 * C11598 + C5199 * C9119 +
              C51060 * C9123) *
                 C696) *
                C50774 * C8045 +
            ((C13821 + C13820) * C50754 + (C13819 + C13818) * C696) * C50774 *
                C8044 +
            ((C13817 + C13816) * C50754 + (C13815 + C13814) * C696) * C50774 *
                C8043) *
               C943) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C51047 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C582 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C5199 * C812 + C51060 * C821 + C5200 * C1082 + C50954 * C1089) *
                 C696 +
             (C5199 * C822 + C51060 * C836 + C5200 * C1088 + C50954 * C1094) *
                 C50754) *
                C2301 +
            ((C5199 * C813 + C51060 * C823 + C5200 * C1081 + C50954 * C1087) *
                 C696 +
             (C5199 * C824 + C51060 * C837 + C5200 * C1086 + C50954 * C1093) *
                 C50754) *
                C2302) *
               C50916 * C50855 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C51047) *
              C583 +
          ((((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                 C696 +
             (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                 C50754) *
                C2300 +
            ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
            ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
               C50916 * C51047 -
           (((C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                 C50754 +
             (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                 C696) *
                C2302 +
            ((C5200 * C3446 + C50954 * C3451 + C5199 * C831 + C51060 * C841) *
                 C50754 +
             (C5200 * C3442 + C50954 * C3447 + C5199 * C817 + C51060 * C832) *
                 C696) *
                C2301 +
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C50754 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C2300 +
           ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
            (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
            (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
               C2301 +
           (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
            (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
               C2302) *
              C50916 * C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C2300 +
           ((C5613 + C5612) * C284 -
            ((C5611 + C5610) * C278 + (C5609 + C5608) * C283) +
            (C5615 + C5614) * C279 - (C5616 + C5617) * C285 -
            (C5618 + C5619) * C280) *
               C2301 +
           ((C5617 + C5616) * C284 - (C5621 * C278 + C5620 * C283) +
            (C5619 + C5618) * C279 -
            (C5200 * C948 + C50954 * C957 + C5199 * C438 + C51060 * C448) *
                C285 -
            (C5200 * C958 + C50954 * C963 + C5199 * C449 + C51060 * C456) *
                C280) *
               C2302) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C2300 +
           ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
           (C5250 * C696 + C5251 * C50754) * C2302) *
              C50916 * C1162 -
          ((C5621 * C50754 + C5620 * C696) * C2302 +
           ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
           ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                C50754 +
            (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                C696) *
               C2300) *
              C50916 * C1163 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C696 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C50754) *
               C2300 +
           ((C6199 + C6198) * C696 + (C6201 + C6200) * C50754) * C2301 +
           ((C6203 + C6202) * C696 + (C6205 + C6204) * C50754) * C2302) *
              C50916 * C1164 -
          (((C5200 * C6452 + C50954 * C6458 + C5199 * C1172 + C51060 * C1179) *
                C50754 +
            (C5200 * C6449 + C50954 * C6453 + C5199 * C1167 + C51060 * C1173) *
                C696) *
               C2302 +
           ((C5200 * C6454 + C50954 * C6459 + C5199 * C1174 + C51060 * C1180) *
                C50754 +
            (C5200 * C6450 + C50954 * C6455 + C5199 * C1168 + C51060 * C1175) *
                C696) *
               C2301 +
           ((C5200 * C6456 + C50954 * C6460 + C5199 * C1176 + C51060 * C1181) *
                C50754 +
            (C5200 * C6451 + C50954 * C6457 + C5199 * C1169 + C51060 * C1177) *
                C696) *
               C2300) *
              C50916 * C1165) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C50774 * C8043 +
           ((C6965 + C6964) * C284 -
            ((C5200 * C1090 + C50954 * C1095 + C5199 * C820 + C51060 * C835) *
                 C278 +
             (C5200 * C1083 + C50954 * C1091 + C5199 * C811 + C51060 * C819) *
                 C283) +
            (C6967 + C6966) * C279 - (C6968 + C6969) * C285 -
            (C6970 + C6971) * C280) *
               C50774 * C8044 +
           ((C5199 * C817 + C51060 * C832 + C5200 * C3442 + C50954 * C3447) *
                C284 -
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C278 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C283) +
            (C5199 * C831 + C51060 * C841 + C5200 * C3446 + C50954 * C3451) *
                C279 -
            (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                C285 -
            (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                C280) *
               C50774 * C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C51047 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C50855) *
              C582 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C50855 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C51047) *
              C583 +
          ((C13315 * C8043 +
            ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
                C8044 +
            ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
                C8045) *
               C51047 -
           (((C5200 * C11519 + C50954 * C11521 + C5199 * C8795 +
              C51060 * C8798) *
                 C50754 +
             (C5200 * C11518 + C50954 * C11520 + C5199 * C8792 +
              C51060 * C8796) *
                 C696) *
                C50774 * C8045 +
            ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C50774 *
                C8044 +
            C13505 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C8043 +
           ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
               C8044 +
           C13315 * C8045) *
              C1162 -
          (C13505 * C8045 +
           ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
               C8044 +
           ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                C50754 +
            (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                C696) *
               C50774 * C8043) *
              C1163 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C696 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C50754) *
               C50774 * C8043 +
           ((C13814 + C13815) * C696 + (C13816 + C13817) * C50754) * C50774 *
               C8044 +
           ((C13818 + C13819) * C696 + (C13820 + C13821) * C50754) * C50774 *
               C8045) *
              C1164 -
          (((C5200 * C13921 + C50954 * C13925 + C5199 * C9238 +
             C51060 * C9241) *
                C50754 +
            (C5200 * C13919 + C50954 * C13922 + C5199 * C9235 +
             C51060 * C9239) *
                C696) *
               C50774 * C8045 +
           ((C5200 * C13923 + C50954 * C13926 + C5199 * C3570 +
             C51060 * C3574) *
                C50754 +
            (C5200 * C13920 + C50954 * C13924 + C5199 * C3565 +
             C51060 * C3571) *
                C696) *
               C50774 * C8044 +
           ((C5200 * C6456 + C50954 * C6460 + C5199 * C1176 + C51060 * C1181) *
                C50754 +
            (C5200 * C6451 + C50954 * C6457 + C5199 * C1169 + C51060 * C1177) *
                C696) *
               C50774 * C8043) *
              C1165) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C2300 +
           ((C5235 + C5234) * C1285 + (C5237 + C5236) * C51089 -
            (C5239 + C5238) * C1286 - (C5241 + C5240) * C51073 +
            (C5243 + C5242) * C1287 + (C5245 + C5244) * C1282) *
               C2301 +
           (C5250 * C1285 + C5251 * C51089 - C5252 * C1286 - C5253 * C51073 +
            (C5247 + C5246) * C1287 + (C5249 + C5248) * C1282) *
               C2302) *
              C50916 * C1643 +
          (((C5608 + C5609) * C1286 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51089 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1285) +
            (C5610 + C5611) * C51073 - C5620 * C1287 - C5621 * C1282) *
               C2300 +
           ((C5613 + C5612) * C1286 -
            ((C5611 + C5610) * C51089 + (C5609 + C5608) * C1285) +
            (C5615 + C5614) * C51073 - (C5616 + C5617) * C1287 -
            (C5618 + C5619) * C1282) *
               C2301 +
           ((C5617 + C5616) * C1286 - (C5621 * C51089 + C5620 * C1285) +
            (C5619 + C5618) * C51073 -
            (C5200 * C948 + C50954 * C957 + C5199 * C438 + C51060 * C448) *
                C1287 -
            (C5200 * C958 + C50954 * C963 + C5199 * C449 + C51060 * C456) *
                C1282) *
               C2302) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1285 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51089 -
            (C5234 + C5235) * C1286 - (C5236 + C5237) * C51073 + C5250 * C1287 +
            C5251 * C1282) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1285 + (C12864 + C12865) * C51089 -
            (C5425 + C5424) * C1286 - (C5427 + C5426) * C51073 +
            (C5429 + C5428) * C1287 + (C5431 + C5430) * C1282) *
               C50774 * C8044 +
           (C13162 * C1285 + C13163 * C51089 - C13164 * C1286 -
            C13165 * C51073 + (C5789 + C5788) * C1287 +
            (C5791 + C5790) * C1282) *
               C50774 * C8045) *
              C1643 +
          (((C5608 + C5609) * C1286 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C51089 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1285) +
            (C5610 + C5611) * C51073 - C5620 * C1287 - C5621 * C1282) *
               C50774 * C8043 +
           ((C6965 + C6964) * C1286 -
            ((C13492 + C13493) * C51089 + (C13494 + C13495) * C1285) +
            (C6967 + C6966) * C51073 - (C6968 + C6969) * C1287 -
            (C6970 + C6971) * C1282) *
               C50774 * C8044 +
           ((C14430 + C14431) * C1286 - (C13500 * C51089 + C13501 * C1285) +
            (C14432 + C14433) * C51073 -
            (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                C1287 -
            (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                C1282) *
               C50774 * C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C2300 +
            ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
             (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
                C2301 +
            (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C2300 +
            ((C5613 + C5612) * C1392 -
             ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
             (C5615 + C5614) * C50759) *
                C2301 +
            ((C5617 + C5616) * C1392 - (C5621 * C1386 + C5620 * C1391) +
             (C5619 + C5618) * C50759) *
                C2302) *
               C50916 * C50855) *
              C51046 +
          ((((C5424 + C5425) * C1392 -
             ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                  C1386 +
              (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                  C1391) +
             (C5426 + C5427) * C50759) *
                C2300 +
            ((C5429 + C5428) * C1392 -
             ((C5427 + C5426) * C1386 + (C5425 + C5424) * C1391) +
             (C5431 + C5430) * C50759) *
                C2301 +
            ((C5433 + C5432) * C1392 - (C5437 * C1386 + C5436 * C1391) +
             (C5435 + C5434) * C50759) *
                C2302) *
               C50916 * C1643 +
           (((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C1391 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C2300 +
            ((C6965 + C6964) * C1391 + (C6967 + C6966) * C1386 -
             (C6968 + C6969) * C1392 - (C6970 + C6971) * C50759) *
                C2301 +
            ((C6969 + C6968) * C1391 + (C6971 + C6970) * C1386 -
             (C5200 * C1080 + C50954 * C1085 + C5199 * C814 + C51060 * C825) *
                 C1392 -
             (C5200 * C1084 + C50954 * C1092 + C5199 * C826 + C51060 * C838) *
                 C50759) *
                C2302) *
               C50916 * C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C1391 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C1386 -
             (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
                C50774 * C8043 +
            ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
             (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
                C50774 * C8044 +
            C14227 * C8045) *
               C1643 +
           (((C5608 + C5609) * C1392 -
             ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                  C1386 +
              (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                  C1391) +
             (C5610 + C5611) * C50759) *
                C50774 * C8043 +
            ((C6965 + C6964) * C1392 -
             ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
             (C6967 + C6966) * C50759) *
                C50774 * C8044 +
            ((C14430 + C14431) * C1392 - (C13500 * C1386 + C13501 * C1391) +
             (C14432 + C14433) * C50759) *
                C50774 * C8045) *
               C50855) *
              C51046 +
          ((((C5424 + C5425) * C1392 -
             ((C12865 + C12864) * C1386 + (C12863 + C12862) * C1391) +
             (C5426 + C5427) * C50759) *
                C50774 * C8043 +
            ((C5785 + C5784) * C1392 -
             ((C12869 + C12868) * C1386 + (C12867 + C12866) * C1391) +
             (C5787 + C5786) * C50759) *
                C50774 * C8044 +
            ((C13186 + C13187) * C1392 - (C13298 * C1386 + C13299 * C1391) +
             (C13192 + C13193) * C50759) *
                C50774 * C8045) *
               C1643 +
           (((C13495 + C13494) * C1391 + (C13493 + C13492) * C1386 -
             (C6964 + C6965) * C1392 - (C6966 + C6967) * C50759) *
                C50774 * C8043 +
            ((C13491 + C13490) * C1391 + (C13489 + C13488) * C1386 -
             (C14431 + C14430) * C1392 - (C14433 + C14432) * C50759) *
                C50774 * C8044 +
            ((C13496 + C13497) * C1391 + (C13498 + C13499) * C1386 -
             (C5200 * C9118 + C50954 * C9121 + C5199 * C3090 + C51060 * C3095) *
                 C1392 -
             (C5200 * C9120 + C50954 * C9124 + C5199 * C3094 + C51060 * C3099) *
                 C50759) *
                C50774 * C8045) *
               C50855) *
              C50831)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C1391 + (C5237 + C5236) * C1386 -
            (C5239 + C5238) * C1392 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C1391 + C5251 * C1386 - C5252 * C1392 - C5253 * C50759) *
               C2302) *
              C50916 * C51092 +
          (((C5608 + C5609) * C1392 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C1386 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1391) +
            (C5610 + C5611) * C50759) *
               C2300 +
           ((C5613 + C5612) * C1392 -
            ((C5611 + C5610) * C1386 + (C5609 + C5608) * C1391) +
            (C5615 + C5614) * C50759) *
               C2301 +
           ((C5617 + C5616) * C1392 - (C5621 * C1386 + C5620 * C1391) +
            (C5619 + C5618) * C50759) *
               C2302) *
              C50916 * C51082 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C1391 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C1386 -
            (C6198 + C6199) * C1392 - (C6200 + C6201) * C50759) *
               C2300 +
           ((C6199 + C6198) * C1391 + (C6201 + C6200) * C1386 -
            (C6202 + C6203) * C1392 - (C6204 + C6205) * C50759) *
               C2301 +
           ((C6203 + C6202) * C1391 + (C6205 + C6204) * C1386 -
            (C5200 * C1166 + C50954 * C1171 + C5199 * C947 + C51060 * C955) *
                C1392 -
            (C5200 * C1170 + C50954 * C1178 + C5199 * C956 + C51060 * C962) *
                C50759) *
               C2302) *
              C50916 * C1875) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C1391 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C1386 -
            (C5234 + C5235) * C1392 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C1391 + (C12864 + C12865) * C1386 -
            (C5425 + C5424) * C1392 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C14227 * C8045) *
              C51092 +
          (((C5608 + C5609) * C1392 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C1386 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C1391) +
            (C5610 + C5611) * C50759) *
               C50774 * C8043 +
           ((C6965 + C6964) * C1392 -
            ((C13492 + C13493) * C1386 + (C13494 + C13495) * C1391) +
            (C6967 + C6966) * C50759) *
               C50774 * C8044 +
           ((C14430 + C14431) * C1392 - (C13500 * C1386 + C13501 * C1391) +
            (C14432 + C14433) * C50759) *
               C50774 * C8045) *
              C51082 +
          (((C5199 * C944 + C51060 * C949 + C5200 * C1169 + C50954 * C1177) *
                C1391 +
            (C5199 * C950 + C51060 * C959 + C5200 * C1176 + C50954 * C1181) *
                C1386 -
            (C6198 + C6199) * C1392 - (C6200 + C6201) * C50759) *
               C50774 * C8043 +
           ((C13814 + C13815) * C1391 + (C13816 + C13817) * C1386 -
            (C5200 * C3564 + C50954 * C3569 + C5199 * C1082 + C51060 * C1089) *
                C1392 -
            (C5200 * C3568 + C50954 * C3573 + C5199 * C1088 + C51060 * C1094) *
                C50759) *
               C50774 * C8044 +
           ((C13818 + C13819) * C1391 + (C13820 + C13821) * C1386 -
            (C5200 * C9234 + C50954 * C9237 + C5199 * C3442 + C51060 * C3447) *
                C1392 -
            (C5200 * C9236 + C50954 * C9240 + C5199 * C3446 + C51060 * C3451) *
                C50759) *
               C50774 * C8045) *
              C1875) *
         C50817) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C2300 +
          ((C5235 + C5234) * C118 + (C5237 + C5236) * C106 -
           (C5239 + C5238) * C119 - (C5241 + C5240) * C107 +
           (C5243 + C5242) * C120 + (C5245 + C5244) * C108 -
           (C5246 + C5247) * C121 - (C5248 + C5249) * C109) *
              C2301 +
          (C5250 * C118 + C5251 * C106 - C5252 * C119 - C5253 * C107 +
           (C5247 + C5246) * C120 + (C5249 + C5248) * C108 -
           (C5200 * C439 + C50954 * C450 + C5199 * C127 + C51060 * C139) *
               C121 -
           (C5200 * C451 + C50954 * C457 + C5199 * C140 + C51060 * C148) *
               C109) *
              C2302) *
         C50916 * C50843 * C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C2300 +
           ((C5235 + C5234) * C49770 + (C5237 + C5236) * C51031 -
            (C5239 + C5238) * C49763 - (C5241 + C5240) * C50759) *
               C2301 +
           (C5250 * C49770 + C5251 * C51031 - C5252 * C49763 - C5253 * C50759) *
               C2302) *
              C50916 * C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C51031 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C49770) +
            (C5426 + C5427) * C50759) *
               C2300 +
           ((C5429 + C5428) * C49763 -
            ((C5427 + C5426) * C51031 + (C5425 + C5424) * C49770) +
            (C5431 + C5430) * C50759) *
               C2301 +
           ((C5433 + C5432) * C49763 - (C5437 * C51031 + C5436 * C49770) +
            (C5435 + C5434) * C50759) *
               C2302) *
              C50916 * C50843 * C583 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C49770 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C51031 -
            (C5784 + C5785) * C49763 - (C5786 + C5787) * C50759) *
               C2300 +
           ((C5785 + C5784) * C49770 + (C5787 + C5786) * C51031 -
            (C5788 + C5789) * C49763 - (C5790 + C5791) * C50759) *
               C2301 +
           ((C5789 + C5788) * C49770 + (C5791 + C5790) * C51031 -
            (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
                C49763 -
            (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
                C50759) *
               C2302) *
              C50916 * C50843 * C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
               C118 +
           (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
               C106 -
           (C5234 + C5235) * C119 - (C5236 + C5237) * C107 + C5250 * C120 +
           C5251 * C108 - C5252 * C121 - C5253 * C109) *
              C50774 * C8043 +
          ((C5199 * C287 + C51060 * C294 + C5200 * C811 + C50954 * C819) *
               C118 +
           (C5199 * C293 + C51060 * C304 + C5200 * C820 + C50954 * C835) *
               C106 -
           (C5425 + C5424) * C119 - (C5427 + C5426) * C107 +
           (C5429 + C5428) * C120 + (C5431 + C5430) * C108 -
           (C5432 + C5433) * C121 - (C5434 + C5435) * C109) *
              C50774 * C8044 +
          ((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
               C118 +
           (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
               C106 -
           (C5784 + C5785) * C119 - (C5786 + C5787) * C107 +
           (C5789 + C5788) * C120 + (C5791 + C5790) * C108 -
           (C5200 * C815 + C50954 * C828 + C5199 * C590 + C51060 * C598) *
               C121 -
           (C5200 * C827 + C50954 * C839 + C5199 * C599 + C51060 * C605) *
               C109) *
              C50774 * C8045) *
         C50843 * C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C49770 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C51031 -
            (C5234 + C5235) * C49763 - (C5236 + C5237) * C50759) *
               C50774 * C8043 +
           ((C12862 + C12863) * C49770 + (C12864 + C12865) * C51031 -
            (C5425 + C5424) * C49763 - (C5427 + C5426) * C50759) *
               C50774 * C8044 +
           C13197 * C8045) *
              C50843 * C582 +
          (((C5424 + C5425) * C49763 -
            ((C12865 + C12864) * C51031 + (C12863 + C12862) * C49770) +
            (C5426 + C5427) * C50759) *
               C50774 * C8043 +
           ((C5785 + C5784) * C49763 -
            ((C12869 + C12868) * C51031 + (C12867 + C12866) * C49770) +
            (C5787 + C5786) * C50759) *
               C50774 * C8044 +
           ((C13186 + C13187) * C49763 -
            ((C13188 + C13189) * C51031 + (C13190 + C13191) * C49770) +
            (C13192 + C13193) * C50759) *
               C50774 * C8045) *
              C50843 * C583 +
          (C13197 * C8043 +
           ((C13191 + C13190) * C49770 + (C13189 + C13188) * C51031 -
            (C13187 + C13186) * C49763 - (C13193 + C13192) * C50759) *
               C50774 * C8044 +
           ((C5199 * C2909 + C51060 * C2915 + C5200 * C8792 + C50954 * C8796) *
                C49770 +
            (C5199 * C2914 + C51060 * C2918 + C5200 * C8795 + C50954 * C8798) *
                C51031 -
            (C5200 * C8791 + C50954 * C8794 + C5199 * C2908 + C51060 * C2913) *
                C49763 -
            (C5200 * C8793 + C50954 * C8797 + C5199 * C2912 + C51060 * C2917) *
                C50759) *
               C50774 * C8045) *
              C50843 * C584)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C2300 +
           ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
            (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
            (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
               C2301 +
           (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
            (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
               C2302) *
              C50916 * C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C278 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C2300 +
           ((C5429 + C5428) * C284 -
            ((C5427 + C5426) * C278 + (C5425 + C5424) * C283) +
            (C5431 + C5430) * C279 - (C5432 + C5433) * C285 -
            (C5434 + C5435) * C280) *
               C2301 +
           ((C5433 + C5432) * C284 - (C5437 * C278 + C5436 * C283) +
            (C5435 + C5434) * C279 -
            (C5200 * C1523 + C50954 * C1524 + C5199 * C290 + C51060 * C300) *
                C285 -
            (C5200 * C1525 + C50954 * C1526 + C5199 * C301 + C51060 * C308) *
                C280) *
               C2302) *
              C50916 * C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C2300 +
           ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
           (C5250 * C696 + C5251 * C50754) * C2302) *
              C50916 * C50843 * C692 -
          ((C5437 * C50754 + C5436 * C696) * C2302 +
           ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
           ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                C50754 +
            (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                C696) *
               C2300) *
              C50916 * C50843 * C693 +
          (((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                C696 +
            (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                C50754) *
               C2300 +
           ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
           ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
              C50916 * C50843 * C694 -
          (((C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C50754 +
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C696) *
               C2302 +
           ((C5200 * C3094 + C50954 * C3099 + C5199 * C705 + C51060 * C711) *
                C50754 +
            (C5200 * C3090 + C50954 * C3095 + C5199 * C699 + C51060 * C706) *
                C696) *
               C2301 +
           ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                C50754 +
            (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                C696) *
               C2300) *
              C50916 * C50843 * C695)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C50843 * C51046 +
          (((C5424 + C5425) * C284 -
            ((C12865 + C12864) * C278 + (C12863 + C12862) * C283) +
            (C5426 + C5427) * C279 - C5436 * C285 - C5437 * C280) *
               C50774 * C8043 +
           ((C5785 + C5784) * C284 -
            ((C12869 + C12868) * C278 + (C12867 + C12866) * C283) +
            (C5787 + C5786) * C279 - (C5788 + C5789) * C285 -
            (C5790 + C5791) * C280) *
               C50774 * C8044 +
           ((C5199 * C699 + C51060 * C706 + C5200 * C3090 + C50954 * C3095) *
                C284 -
            ((C5200 * C3096 + C50954 * C3100 + C5199 * C707 + C51060 * C712) *
                 C278 +
             (C5200 * C3091 + C50954 * C3097 + C5199 * C700 + C51060 * C708) *
                 C283) +
            (C5199 * C705 + C51060 * C711 + C5200 * C3094 + C50954 * C3099) *
                C279 -
            (C5200 * C3089 + C50954 * C3093 + C5199 * C698 + C51060 * C704) *
                C285 -
            (C5200 * C3092 + C50954 * C3098 + C5199 * C703 + C51060 * C710) *
                C280) *
               C50774 * C8045) *
              C50843 * C50831)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C696 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C50754) *
               C50774 * C8043 +
           ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
               C8044 +
           C13315 * C8045) *
              C50843 * C692 -
          (C13317 * C8045 +
           ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
               C8044 +
           ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
               C8043) *
              C50843 * C693 +
          (C13315 * C8043 +
           ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
               C8044 +
           ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
               C8045) *
              C50843 * C694 -
          (((C5200 * C11308 + C50954 * C11310 + C5199 * C8621 +
             C51060 * C8624) *
                C50754 +
            (C5200 * C11307 + C50954 * C11309 + C5199 * C8618 +
             C51060 * C8622) *
                C696) *
               C50774 * C8045 +
           ((C13314 + C13313) * C50754 + (C13312 + C13311) * C696) * C50774 *
               C8044 +
           C13317 * C8043) *
              C50843 * C695)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C2300 +
           ((C5235 + C5234) * C283 + (C5237 + C5236) * C278 -
            (C5239 + C5238) * C284 - (C5241 + C5240) * C279 +
            (C5243 + C5242) * C285 + (C5245 + C5244) * C280) *
               C2301 +
           (C5250 * C283 + C5251 * C278 - C5252 * C284 - C5253 * C279 +
            (C5247 + C5246) * C285 + (C5249 + C5248) * C280) *
               C2302) *
              C50916 * C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C2300 +
           ((C5613 + C5612) * C284 -
            ((C5611 + C5610) * C278 + (C5609 + C5608) * C283) +
            (C5615 + C5614) * C279 - (C5616 + C5617) * C285 -
            (C5618 + C5619) * C280) *
               C2301 +
           ((C5617 + C5616) * C284 - (C5621 * C278 + C5620 * C283) +
            (C5619 + C5618) * C279 -
            (C5200 * C948 + C50954 * C957 + C5199 * C438 + C51060 * C448) *
                C285 -
            (C5200 * C958 + C50954 * C963 + C5199 * C449 + C51060 * C456) *
                C280) *
               C2302) *
              C50916 * C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C2300 +
            ((C5235 + C5234) * C696 + (C5237 + C5236) * C50754) * C2301 +
            (C5250 * C696 + C5251 * C50754) * C2302) *
               C50916 * C51047 -
           ((C5621 * C50754 + C5620 * C696) * C2302 +
            ((C5611 + C5610) * C50754 + (C5609 + C5608) * C696) * C2301 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C582 +
          ((((C5199 * C811 + C51060 * C819 + C5200 * C1083 + C50954 * C1091) *
                 C696 +
             (C5199 * C820 + C51060 * C835 + C5200 * C1090 + C50954 * C1095) *
                 C50754) *
                C2300 +
            ((C5199 * C812 + C51060 * C821 + C5200 * C1082 + C50954 * C1089) *
                 C696 +
             (C5199 * C822 + C51060 * C836 + C5200 * C1088 + C50954 * C1094) *
                 C50754) *
                C2301 +
            ((C5199 * C813 + C51060 * C823 + C5200 * C1081 + C50954 * C1087) *
                 C696 +
             (C5199 * C824 + C51060 * C837 + C5200 * C1086 + C50954 * C1093) *
                 C50754) *
                C2302) *
               C50916 * C50855 -
           ((C5437 * C50754 + C5436 * C696) * C2302 +
            ((C5427 + C5426) * C50754 + (C5425 + C5424) * C696) * C2301 +
            ((C5200 * C820 + C50954 * C835 + C5199 * C293 + C51060 * C304) *
                 C50754 +
             (C5200 * C811 + C50954 * C819 + C5199 * C287 + C51060 * C294) *
                 C696) *
                C2300) *
               C50916 * C51047) *
              C583 +
          ((((C5199 * C587 + C51060 * C592 + C5200 * C818 + C50954 * C834) *
                 C696 +
             (C5199 * C593 + C51060 * C602 + C5200 * C833 + C50954 * C842) *
                 C50754) *
                C2300 +
            ((C5785 + C5784) * C696 + (C5787 + C5786) * C50754) * C2301 +
            ((C5789 + C5788) * C696 + (C5791 + C5790) * C50754) * C2302) *
               C50916 * C51047 -
           (((C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                 C50754 +
             (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                 C696) *
                C2302 +
            ((C5200 * C3446 + C50954 * C3451 + C5199 * C831 + C51060 * C841) *
                 C50754 +
             (C5200 * C3442 + C50954 * C3447 + C5199 * C817 + C51060 * C832) *
                 C696) *
                C2301 +
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C50754 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C696) *
                C2300) *
               C50916 * C50855) *
              C584)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                C283 +
            (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                C278 -
            (C5234 + C5235) * C284 - (C5236 + C5237) * C279 + C5250 * C285 +
            C5251 * C280) *
               C50774 * C8043 +
           ((C12862 + C12863) * C283 + (C12864 + C12865) * C278 -
            (C5425 + C5424) * C284 - (C5427 + C5426) * C279 +
            (C5429 + C5428) * C285 + (C5431 + C5430) * C280) *
               C50774 * C8044 +
           ((C12866 + C12867) * C283 + (C12868 + C12869) * C278 -
            (C5784 + C5785) * C284 - (C5786 + C5787) * C279 +
            (C5789 + C5788) * C285 + (C5791 + C5790) * C280) *
               C50774 * C8045) *
              C51047 +
          (((C5608 + C5609) * C284 -
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C278 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C283) +
            (C5610 + C5611) * C279 - C5620 * C285 - C5621 * C280) *
               C50774 * C8043 +
           ((C6965 + C6964) * C284 -
            ((C5200 * C1090 + C50954 * C1095 + C5199 * C820 + C51060 * C835) *
                 C278 +
             (C5200 * C1083 + C50954 * C1091 + C5199 * C811 + C51060 * C819) *
                 C283) +
            (C6967 + C6966) * C279 - (C6968 + C6969) * C285 -
            (C6970 + C6971) * C280) *
               C50774 * C8044 +
           ((C5199 * C817 + C51060 * C832 + C5200 * C3442 + C50954 * C3447) *
                C284 -
            ((C5200 * C3448 + C50954 * C3452 + C5199 * C833 + C51060 * C842) *
                 C278 +
             (C5200 * C3443 + C50954 * C3449 + C5199 * C818 + C51060 * C834) *
                 C283) +
            (C5199 * C831 + C51060 * C841 + C5200 * C3446 + C50954 * C3451) *
                C279 -
            (C5200 * C3441 + C50954 * C3445 + C5199 * C816 + C51060 * C830) *
                C285 -
            (C5200 * C3444 + C50954 * C3450 + C5199 * C829 + C51060 * C840) *
                C280) *
               C50774 * C8045) *
              C50855) *
         C50817) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5199 * C122 + C51060 * C129 + C5200 * C435 + C50954 * C442) *
                 C696 +
             (C5199 * C130 + C51060 * C143 + C5200 * C441 + C50954 * C452) *
                 C50754) *
                C50774 * C8043 +
            ((C12862 + C12863) * C696 + (C12864 + C12865) * C50754) * C50774 *
                C8044 +
            C13315 * C8045) *
               C51047 -
           (C13505 * C8045 +
            ((C13492 + C13493) * C50754 + (C13494 + C13495) * C696) * C50774 *
                C8044 +
            ((C5200 * C950 + C50954 * C959 + C5199 * C441 + C51060 * C452) *
                 C50754 +
             (C5200 * C944 + C50954 * C949 + C5199 * C435 + C51060 * C442) *
                 C696) *
                C50774 * C8043) *
               C50855) *
              C582 +
          ((((C13495 + C13494) * C696 + (C13493 + C13492) * C50754) * C50774 *
                C8043 +
            ((C13491 + C13490) * C696 + (C13489 + C13488) * C50754) * C50774 *
                C8044 +
            ((C13496 + C13497) * C696 + (C13498 + C13499) * C50754) * C50774 *
                C8045) *
               C50855 -
           (C13317 * C8045 +
            ((C12869 + C12868) * C50754 + (C12867 + C12866) * C696) * C50774 *
                C8044 +
            ((C12865 + C12864) * C50754 + (C12863 + C12862) * C696) * C50774 *
                C8043) *
               C51047) *
              C583 +
          ((C13315 * C8043 +
            ((C13191 + C13190) * C696 + (C13189 + C13188) * C50754) * C50774 *
                C8044 +
            ((C13311 + C13312) * C696 + (C13313 + C13314) * C50754) * C50774 *
                C8045) *
               C51047 -
           (((C5200 * C11519 + C50954 * C11521 + C5199 * C8795 +
              C51060 * C8798) *
                 C50754 +
             (C5200 * C11518 + C50954 * C11520 + C5199 * C8792 +
              C51060 * C8796) *
                 C696) *
                C50774 * C8045 +
            ((C13499 + C13498) * C50754 + (C13497 + C13496) * C696) * C50774 *
                C8044 +
            C13505 * C8043) *
               C50855) *
              C584)) /
            (p * q * std::sqrt(p + q));
}
