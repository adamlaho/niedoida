/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdp_AC_zy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2121_13_32(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49689 = ce + de;
    const double C49688 = yC - yD;
    const double C49699 = ce * de;
    const double C49698 = 0 * de;
    const double C49717 = 0 * ce;
    const double C49713 = 0 * de;
    const double C49756 = ae + be;
    const double C49755 = zA - zB;
    const double C49766 = ae * be;
    const double C49765 = 0 * be;
    const double C49784 = 0 * ae;
    const double C49780 = 0 * be;
    const double C49825 = yP - yQ;
    const double C49824 = zP - zQ;
    const double C49823 = p + q;
    const double C49822 = p * q;
    const double C49834 = bs[4];
    const double C49832 = xP - xQ;
    const double C49840 = bs[5];
    const double C49847 = bs[6];
    const double C49859 = bs[7];
    const double C49904 = bs[3];
    const double C50413 = bs[2];
    const double C119 = bs[0];
    const double C50758 = xA - xB;
    const double C50780 = xC - xD;
    const double C50812 = zC - zD;
    const double C50907 = yA - yB;
    const double C49697 = 2 * C49689;
    const double C49714 = std::pow(C49689, 2);
    const double C50817 = std::pow(C49688, 2);
    const double C50833 = C49688 * de;
    const double C50832 = C49688 * ce;
    const double C49700 = C49699 * C49688;
    const double C49715 = C49688 * C49698;
    const double C49721 = C49717 / C49689;
    const double C49764 = 2 * C49756;
    const double C49781 = std::pow(C49756, 2);
    const double C49835 = C49689 * C49756;
    const double C140 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (zP - zQ) * (yP - yQ) * ae * ce) /
                         C49689) /
                        C49756;
    const double C141 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (zP - zQ) * (yP - yQ) * ae * ce) /
                         C49689) /
                        C49756;
    const double C50946 = std::pow(C49755, 2);
    const double C50958 = C49755 * be;
    const double C50957 = C49755 * ae;
    const double C49767 = C49766 * C49755;
    const double C49782 = C49755 * C49765;
    const double C49788 = C49784 / C49756;
    const double C49889 = C49825 * ce;
    const double C50011 = std::pow(C49825, 2);
    const double C49827 = C49824 * C49825;
    const double C49875 = C49824 * ae;
    const double C50075 = std::pow(C49824, 2);
    const double C49826 = 2 * C49822;
    const double C49841 = std::pow(C49832, 2);
    const double C50761 = C50758 * be;
    const double C50760 = C50758 * ae;
    const double C50759 = std::pow(C50758, 2);
    const double C50783 = C50780 * de;
    const double C50782 = C50780 * ce;
    const double C50781 = std::pow(C50780, 2);
    const double C50847 = std::pow(C50812, 2);
    const double C50859 = C50812 * de;
    const double C50858 = C50812 * ce;
    const double C50920 = std::pow(C50907, 2);
    const double C50934 = C50907 * be;
    const double C50933 = C50907 * ae;
    const double C50791 = std::pow(C49697, -1);
    const double C51054 = std::pow(C49697, -2);
    const double C49718 = 2 * C49714;
    const double C51052 = 4 * C49714;
    const double C50818 = C50817 * C49699;
    const double C49719 = C49715 / C49689;
    const double C50769 = std::pow(C49764, -1);
    const double C51066 = std::pow(C49764, -2);
    const double C49785 = 2 * C49781;
    const double C51045 = 4 * C49781;
    const double C50947 = C50946 * C49766;
    const double C49786 = C49782 / C49756;
    const double C49891 = C49834 * C49889;
    const double C49894 = C49840 * C49889;
    const double C49898 = C49847 * C49889;
    const double C49956 = C49904 * C49889;
    const double C49973 = C49859 * C49889;
    const double C49829 = C49827 * ae;
    const double C49877 = C49834 * C49875;
    const double C49880 = C49840 * C49875;
    const double C49883 = C49847 * C49875;
    const double C49905 = C49904 * C49875;
    const double C49920 = C49859 * C49875;
    const double C49828 = C49826 / C49823;
    const double C126 = (-(bs[1] * C49875 * C49826) / C49823) / C49756;
    const double C127 = (bs[1] * C49889 * C49826) / (C49823 * C49689);
    const double C120 = -(C49832 * bs[1] * C49826) / C49823;
    const double C296 = -(C49825 * bs[1] * C49826) / C49823;
    const double C470 = -(C49824 * bs[1] * C49826) / C49823;
    const double C50762 = C50759 * C49766;
    const double C50784 = C50781 * C49699;
    const double C50848 = C50847 * C49699;
    const double C50921 = C50920 * C49766;
    const double C49726 = C49698 / C49718;
    const double C49724 = C49713 / C49718;
    const double C50819 = C50818 / C49689;
    const double C49723 = 0 - C49719;
    const double C49793 = C49765 / C49785;
    const double C49791 = C49780 / C49785;
    const double C50948 = C50947 / C49756;
    const double C49790 = 0 - C49786;
    const double C49830 = C49829 * ce;
    const double C49833 = std::pow(C49828, 4);
    const double C49839 = -C49828;
    const double C49846 = std::pow(C49828, 6);
    const double C50414 = std::pow(C49828, 2);
    const double C128 =
        (C49832 * std::pow(C49828, 2) * bs[2] * C49875) / C49756;
    const double C129 =
        -(C49832 * std::pow(C49828, 2) * bs[2] * C49889) / C49689;
    const double C302 =
        (C49825 * std::pow(C49828, 2) * bs[2] * C49875) / C49756;
    const double C303 =
        (ce * bs[1] * C49826) / (C49823 * C49689) -
        (C49825 * std::pow(C49828, 2) * bs[2] * C49889) / C49689;
    const double C480 =
        -(C49824 * std::pow(C49828, 2) * bs[2] * C49889) / C49689;
    const double C481 =
        (C49824 * std::pow(C49828, 2) * bs[2] * C49875) / C49756 -
        (ae * bs[1] * C49826) / (C49823 * C49756);
    const double C50763 = C50762 / C49756;
    const double C50785 = C50784 / C49689;
    const double C50849 = C50848 / C49689;
    const double C50922 = C50921 / C49756;
    const double C50820 = -C50819;
    const double C49728 = C49723 * ce;
    const double C50949 = -C50948;
    const double C49795 = C49790 * ae;
    const double C49836 = C49834 * C49830;
    const double C49843 = C49840 * C49830;
    const double C49849 = C49847 * C49830;
    const double C49862 = C49859 * C49830;
    const double C142 =
        (-(std::pow(C49828, 4) * bs[4] * C49830 * std::pow(xP - xQ, 2)) /
         C49689) /
            C49756 -
        (std::pow(-C49828, 3) * bs[3] * C49830) / (C49689 * C49756);
    const double C49878 = C49833 * C49877;
    const double C49892 = C49833 * C49891;
    const double C49939 = C49834 * C49833;
    const double C49842 = std::pow(C49839, 5);
    const double C49858 = std::pow(C49839, 7);
    const double C49903 = std::pow(C49839, 3);
    const double C314 =
        (-(C49825 * std::pow(C49839, 3) * bs[3] * C49830) / C49689) / C49756 -
        (std::pow(C49828, 2) * bs[2] * C49824 * ae * ce) / C49835;
    const double C488 =
        (-(C49824 * std::pow(C49839, 3) * bs[3] * C49830) / C49689) / C49756 -
        (ae * std::pow(C49828, 2) * bs[2] * C49889) / C49835;
    const double C49884 = C49846 * C49883;
    const double C49899 = C49846 * C49898;
    const double C49949 = C49847 * C49846;
    const double C50415 = C50413 * C50414;
    const double C50764 = -C50763;
    const double C50786 = -C50785;
    const double C50850 = -C50849;
    const double C50923 = -C50922;
    const double C50821 = std::exp(C50820);
    const double C49730 = C49728 / C49689;
    const double C50950 = std::exp(C50949);
    const double C49797 = C49795 / C49756;
    const double C49837 = C49833 * C49836;
    const double C49850 = C49846 * C49849;
    const double C49908 = C49832 * C49878;
    const double C50010 = C49878 * ce;
    const double C50008 = C49825 * C49878;
    const double C50537 = C49824 * C49878;
    const double C49959 = C49832 * C49892;
    const double C49986 = C49825 * C49892;
    const double C50094 = ae * C49892;
    const double C50092 = C49824 * C49892;
    const double C49940 = C49832 * C49939;
    const double C50044 = C49825 * C49939;
    const double C50043 = C49939 * ce;
    const double C50421 = C49939 * C49841;
    const double C50491 = C49939 * C50011;
    const double C50540 = C49939 * C50075;
    const double C50619 = C49824 * C49939;
    const double C50618 = C49939 * ae;
    const double C49844 = C49842 * C49843;
    const double C49881 = C49842 * C49880;
    const double C49895 = C49842 * C49894;
    const double C49943 = C49840 * C49842;
    const double C49864 = C49858 * C49862;
    const double C49922 = C49858 * C49920;
    const double C49976 = C49858 * C49973;
    const double C49906 = C49903 * C49905;
    const double C49936 = C49904 * C49903;
    const double C49957 = C49903 * C49956;
    const double C49885 = C49884 * C49841;
    const double C49919 = C49832 * C49884;
    const double C50106 = C49884 * C50011;
    const double C50196 = C49884 * ce;
    const double C50194 = C49825 * C49884;
    const double C50648 = C49824 * C49884;
    const double C49900 = C49899 * C49841;
    const double C49972 = C49832 * C49899;
    const double C50156 = C49825 * C49899;
    const double C50303 = C49899 * C50075;
    const double C50345 = ae * C49899;
    const double C50343 = C49824 * C49899;
    const double C49951 = C49949 * C49841;
    const double C50151 = C49832 * C49949;
    const double C50222 = C49949 * C50011;
    const double C50232 = C49825 * C49949;
    const double C50231 = C49949 * ce;
    const double C50652 = C49949 * C50075;
    const double C121 = C50415 * C49841 - (bs[1] * C49826) / C49823;
    const double C297 = C49825 * C49832 * C50415;
    const double C466 = C49824 * C49832 * C50415;
    const double C630 = C50415 * C50011 - (bs[1] * C49826) / C49823;
    const double C875 = C49824 * C49825 * C50415;
    const double C1008 = C50415 * C50075 - (bs[1] * C49826) / C49823;
    const double C50765 = std::exp(C50764);
    const double C50787 = std::exp(C50786);
    const double C50851 = std::exp(C50850);
    const double C50924 = std::exp(C50923);
    const double C49701 = C49700 * C50821;
    const double C118 = -(2 * ce * de * (yC - yD) * C50821) / (ce + de);
    const double C294 =
        ((C50821 - (C49688 * 2 * ce * de * C49688 * C50821) / C49689) * ce) /
            C49689 -
        (0 * de) / (2 * std::pow(C49689, 2));
    const double C295 =
        (0 * ce) / C49689 - (ce * de * C49688 * C50821) / std::pow(C49689, 2);
    const double C50834 = C50821 * C50832;
    const double C50837 = C50791 * C50821;
    const double C51057 = C50821 * C50833;
    const double C51056 = C50821 / C49697;
    const double C624 = C51054 * C50821;
    const double C49732 = C49730 - C49724;
    const double C155 = C50950 * C142;
    const double C151 = C50950 * C141;
    const double C149 = C50950 * C128;
    const double C2599 = C50950 * C314;
    const double C2597 = C50950 * C302;
    const double C49768 = C49767 * C50950;
    const double C117 = -(2 * ae * be * (zA - zB) * C50950) / (ae + be);
    const double C5280 =
        ((C50950 - (C49755 * 2 * ae * be * C49755 * C50950) / C49756) * ae) /
            C49756 -
        (0 * be) / (2 * std::pow(C49756, 2));
    const double C5281 =
        (0 * ae) / C49756 - (ae * be * C49755 * C50950) / std::pow(C49756, 2);
    const double C50959 = C50950 * C50957;
    const double C50962 = C50769 * C50950;
    const double C51075 = C50950 * C50958;
    const double C51074 = C50950 / C49764;
    const double C15475 = C51066 * C50950;
    const double C49799 = C49797 - C49791;
    const double C143 =
        (-2 * C49832 * C49837) / C49835 +
        C49832 *
            ((-(std::pow(-C49828, 5) * bs[5] * C49830 * std::pow(C49832, 2)) /
              C49689) /
                 C49756 -
             C49837 / C49835);
    const double C315 =
        (-(C49825 * C49832 * C49837) / C49689) / C49756 -
        (C49832 * std::pow(C49839, 3) * bs[3] * C49824 * ae * ce) / C49835;
    const double C484 =
        (-(C49824 * C49832 * C49837) / C49689) / C49756 -
        (ae * C49832 * std::pow(C49839, 3) * bs[3] * C49825 * ce) / C49835;
    const double C49851 = C49850 * C49841;
    const double C49860 = C49850 / C49835;
    const double C49857 = C49832 * C49850;
    const double C50104 = C49825 * C49850;
    const double C50301 = C49824 * C49850;
    const double C50013 = C50010 / C49835;
    const double C50097 = C50094 / C49835;
    const double C49991 = C49940 * ce;
    const double C50425 = 2 * C49940;
    const double C50471 = C49825 * C49940;
    const double C50531 = C49824 * C49940;
    const double C50530 = C49940 * ae;
    const double C50046 = C50044 * ce;
    const double C50545 = 2 * C50044;
    const double C50588 = C49824 * C50044;
    const double C50587 = C50044 * ae;
    const double C50624 = 2 * C50619;
    const double C50622 = C50619 * ae;
    const double C49848 = C49844 / C49835;
    const double C49931 = C49832 * C49844;
    const double C50009 = C49825 * C49844;
    const double C50093 = C49824 * C49844;
    const double C144 =
        3 * ((-(C49844 * C49841) / C49689) / C49756 - C49837 / C49835) +
        C49832 * ((-2 * C49832 * C49844) / C49835 +
                  C49832 * ((-(std::pow(C49828, 6) * bs[6] * C49830 * C49841) /
                             C49689) /
                                C49756 -
                            C49844 / C49835));
    const double C316 =
        C49825 * ((-(C49844 * C49841) / C49689) / C49756 - C49837 / C49835) -
        ((std::pow(C49839, 3) * bs[3] * C49875 +
          C49833 * C49834 * C49875 * C49841) *
         ce) /
            C49835;
    const double C485 =
        C49824 * ((-(C49844 * C49841) / C49689) / C49756 - C49837 / C49835) -
        (ae * (C49833 * C49834 * C49889 * C49841 +
               std::pow(C49839, 3) * bs[3] * C49889)) /
            C49835;
    const double C646 =
        (-(C49825 * C49908 * ce) / C49689) / C49756 -
        (C49832 * C49837) / C49835 +
        C49825 * ((-(C49825 * C49832 * C49844) / C49689) / C49756 -
                  (C49908 * ce) / C49835);
    const double C49910 = C49881 * C49841;
    const double C49913 = C49832 * C49881;
    const double C50014 = C49881 * C50011;
    const double C50105 = C49881 * ce;
    const double C50103 = C49825 * C49881;
    const double C50617 = C49824 * C49881;
    const double C49961 = C49895 * C49841;
    const double C49964 = C49832 * C49895;
    const double C50042 = C49825 * C49895;
    const double C50095 = C49895 * C50075;
    const double C50302 = ae * C49895;
    const double C50300 = C49824 * C49895;
    const double C49944 = C49943 * C49841;
    const double C49948 = C49832 * C49943;
    const double C50148 = C49943 * C50011;
    const double C50158 = C49825 * C49943;
    const double C50157 = C49943 * ce;
    const double C50620 = C49943 * C50075;
    const double C50650 = C49824 * C49943;
    const double C50649 = C49943 * ae;
    const double C49865 = C49864 * C49841;
    const double C50126 = C49832 * C49864;
    const double C50195 = C49825 * C49864;
    const double C50344 = C49824 * C49864;
    const double C49923 = C49922 * C49841;
    const double C50128 = C49832 * C49922;
    const double C50198 = C49922 * C50011;
    const double C49978 = C49976 * C49841;
    const double C50173 = C49832 * C49976;
    const double C50230 = C49825 * C49976;
    const double C50347 = C49976 * C50075;
    const double C645 = (-(C49825 * C49906 * ce) / C49689) / C49756 -
                        (C49903 * C49904 * C49830) / C49835 +
                        C49825 * ((-(C49825 * C49837) / C49689) / C49756 -
                                  (C49906 * ce) / C49835);
    const double C773 =
        2 * ((-(C49825 * C49837) / C49689) / C49756 - (C49906 * ce) / C49835) -
        ((C49906 + C49878 * std::pow(C49825, 2)) * ce) / C49835 +
        C49825 *
            ((-(C49825 * C49878 * ce) / C49689) / C49756 - C49837 / C49835 +
             C49825 * ((-(C49825 * C49844) / C49689) / C49756 -
                       (C49878 * ce) / C49835));
    const double C899 = C49824 * ((-(C49825 * C49837) / C49689) / C49756 -
                                  (C49906 * ce) / C49835) -
                        (ae * (C49825 * C49903 * C49904 * C49889 +
                               bs[2] * std::pow(C49828, 2) * ce)) /
                            C49835;
    const double C130 =
        (std::pow(C49828, 2) * bs[2] * C49875 + C49906 * C49841) / C49756;
    const double C132 =
        (2 * C49832 * C49906 + C49832 * (C49906 + C49878 * C49841)) / C49756;
    const double C304 = (C49825 * C49832 * C49906) / C49756;
    const double C306 = (C49825 * (C49906 + C49878 * C49841)) / C49756;
    const double C472 =
        (C49824 * C49832 * C49906 + C49832 * bs[2] * std::pow(C49828, 2) * ae) /
        C49756;
    const double C635 =
        (std::pow(C49828, 2) * bs[2] * C49875 + C49906 * C50011) / C49756;
    const double C637 = (C49832 * C49906 + C49908 * C50011) / C49756;
    const double C765 =
        (2 * C49825 * C49906 + C49825 * (C49906 + C49878 * C50011)) / C49756;
    const double C883 =
        (C49824 * C49825 * C49906 + C49825 * C50415 * ae) / C49756;
    const double C1013 =
        (C50414 * C50413 * C49875 + C49824 * (C49824 * C49906 + C50415 * ae) +
         C49824 * C50415 * ae) /
        C49756;
    const double C49987 = C49936 * ce;
    const double C900 =
        C49824 *
            ((-(C49825 * C49878 * ce) / C49689) / C49756 - C49837 / C49835 +
             C49825 * ((-(C49825 * C49844) / C49689) / C49756 -
                       (C49878 * ce) / C49835)) -
        (ae * (C49825 * (C49825 * C49892 + C49936 * ce) +
               C49903 * C49904 * C49889 + C49825 * C49936 * ce)) /
            C49835;
    const double C50418 = C49832 * C49936;
    const double C50422 = C49936 + C50421;
    const double C50468 = C49825 * C49936;
    const double C50492 = C49936 + C50491;
    const double C50539 = C49824 * C49936;
    const double C50538 = C49936 * ae;
    const double C50542 = C49936 + C50540;
    const double C474 = (C49824 * (C49906 + C49878 * C49841) +
                         (bs[2] * std::pow(C49828, 2) + C49936 * C49841) * ae) /
                        C49756;
    const double C885 = (C49824 * (C49906 + C49878 * C50011) +
                         (C50415 + C49936 * C50011) * ae) /
                        C49756;
    const double C1247 =
        (2 * (C49824 * C49906 + C50415 * ae) +
         C49824 * (C49906 + C49824 * (C49824 * C49878 + C49936 * ae) +
                   C49824 * C49936 * ae) +
         (C50415 + C49936 * C50075) * ae) /
        C49756;
    const double C122 =
        2 * C49832 * C50415 + C49832 * (C50415 + C49936 * C49841);
    const double C298 = C49825 * (C50415 + C49936 * C49841);
    const double C467 = C49824 * (C50415 + C49936 * C49841);
    const double C761 =
        2 * C49825 * C50415 + C49825 * (C50415 + C49936 * C50011);
    const double C876 = C49824 * (C50415 + C49936 * C50011);
    const double C1239 =
        2 * C49824 * C50415 + C49824 * (C50415 + C49936 * C50075);
    const double C1023 = (-(ae * C49824 * C49957) / C49689) / C49756 -
                         (C49903 * C49904 * C49830) / C49835 +
                         C49824 * ((-(C49824 * C49837) / C49689) / C49756 -
                                   (ae * C49957) / C49835);
    const double C1251 =
        2 * ((-(C49824 * C49837) / C49689) / C49756 - (ae * C49957) / C49835) -
        (ae * (C49892 * std::pow(C49824, 2) + C49957)) / C49835 +
        C49824 *
            ((-(ae * C49824 * C49892) / C49689) / C49756 - C49837 / C49835 +
             C49824 * ((-(C49824 * C49844) / C49689) / C49756 -
                       (ae * C49892) / C49835));
    const double C131 =
        -(C49957 * C49841 + std::pow(C49828, 2) * bs[2] * C49889) / C49689;
    const double C133 = (-2 * C49832 * C49957) / C49689 -
                        (C49832 * (C49892 * C49841 + C49957)) / C49689;
    const double C305 = -(C49825 * C49832 * C49957 +
                          C49832 * bs[2] * std::pow(C49828, 2) * ce) /
                        C49689;
    const double C307 =
        -(C49825 * (C49892 * C49841 + C49957) +
          (bs[2] * std::pow(C49828, 2) + C49936 * C49841) * ce) /
        C49689;
    const double C473 = -(C49824 * C49832 * C49957) / C49689;
    const double C475 = -(C49824 * (C49892 * C49841 + C49957)) / C49689;
    const double C636 = -(C49825 * (C49825 * C49957 + C50415 * ce) +
                          C50414 * C50413 * C49889 + C49825 * C50415 * ce) /
                        C49689;
    const double C884 = -(C49824 * (C49825 * C49957 + C50415 * ce)) / C49689;
    const double C1014 = -(C49957 * C50075 + C50414 * C50413 * C49889) / C49689;
    const double C1016 = -(C49959 * C50075 + C49832 * C49957) / C49689;
    const double C1246 = (-2 * C49824 * C49957) / C49689 -
                         (C49824 * (C49892 * C50075 + C49957)) / C49689;
    const double C49886 = C49881 + C49885;
    const double C49921 = 2 * C49919;
    const double C50023 = C49919 * C50011;
    const double C50127 = C49919 * ce;
    const double C50124 = C49825 * C49919;
    const double C50602 = C49824 * C49919;
    const double C50111 = C49881 + C50106;
    const double C50202 = C50196 / C49835;
    const double C50203 = 2 * C50194;
    const double C50200 = C50194 * ce;
    const double C50632 = C49824 * C50194;
    const double C49901 = C49900 + C49895;
    const double C49975 = -2 * C49972;
    const double C50051 = C49825 * C49972;
    const double C50084 = C49972 * C50075;
    const double C50279 = ae * C49972;
    const double C50277 = C49824 * C49972;
    const double C50308 = C50303 + C49895;
    const double C50351 = C50345 / C49835;
    const double C50353 = -2 * C50343;
    const double C50349 = ae * C50343;
    const double C49952 = C49943 + C49951;
    const double C50152 = C50151 * C50011;
    const double C50175 = C49825 * C50151;
    const double C50174 = C50151 * ce;
    const double C50605 = C50151 * C50075;
    const double C50224 = C49943 + C50222;
    const double C50238 = C50232 * ce;
    const double C50635 = C50232 * C50075;
    const double C50656 = C49943 + C50652;
    const double C50766 = C50765 * C50760;
    const double C50770 = C50769 * C50765;
    const double C51041 = C50765 / C49764;
    const double C51040 = C50765 * C50761;
    const double C2436 = C51066 * C50765;
    const double C50788 = C50787 * C50782;
    const double C50792 = C50791 * C50787;
    const double C51048 = C50787 / C49697;
    const double C51047 = C50787 * C50783;
    const double C293 = C51054 * C50787;
    const double C50860 = C50851 * C50858;
    const double C50863 = C50791 * C50851;
    const double C51062 = C50851 * C50859;
    const double C51061 = C50851 / C49697;
    const double C1007 = C51054 * C50851;
    const double C50935 = C50924 * C50933;
    const double C50938 = C50769 * C50924;
    const double C51070 = C50924 * C50934;
    const double C51069 = C50924 / C49764;
    const double C8149 = C51066 * C50924;
    const double C49702 = 2 * C49701;
    const double C49722 = C49701 / C49714;
    const double C51059 = C50834 / C49718;
    const double C51058 = C50834 * C50833;
    const double C51053 = C50834 / C49689;
    const double C50840 = C50837 * C50833;
    const double C755 = C50837 / C51052;
    const double C1479 = C50837 / C49697;
    const double C51085 = C51057 / C49689;
    const double C623 = (-2 * C50791 * C51057) / C49689;
    const double C622 = (C50821 * std::pow(C50833, 2)) / C49714 + C51056;
    const double C49769 = 2 * C49768;
    const double C49789 = C49768 / C49781;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C323 = C117 * C297;
    const double C491 = C117 * C466;
    const double C2598 = C117 * C303;
    const double C2596 = C117 * C296;
    const double C2916 = C117 * C630;
    const double C3220 = C117 * C875;
    const double C5291 = C5280 * C121;
    const double C5287 = C5280 * C129;
    const double C5283 = C5280 * C120;
    const double C5489 = C5280 * C297;
    const double C5678 = C5280 * C466;
    const double C12854 = C5280 * C630;
    const double C12850 = C5280 * C303;
    const double C12846 = C5280 * C296;
    const double C13446 = C5280 * C875;
    const double C5285 = C5281 * C466;
    const double C12844 = C5281 * C875;
    const double C51077 = C50959 / C49785;
    const double C51076 = C50959 * C50958;
    const double C51068 = C50959 / C49756;
    const double C50965 = C50962 * C50958;
    const double C21010 = C50962 / C51045;
    const double C38068 = C50962 / C49764;
    const double C51094 = C51075 / C49756;
    const double C15474 = (-2 * C50769 * C51075) / C49756;
    const double C15473 = (C50950 * std::pow(C50958, 2)) / C49781 + C51074;
    const double C159 = C50950 * C143;
    const double C326 = C50950 * C315;
    const double C494 = C50950 * C484;
    const double C5290 = C50962 * C484;
    const double C31609 = C50962 * C484;
    const double C49852 = C49851 / C49689;
    const double C49861 = -2 * C49857;
    const double C50021 = C49825 * C49857;
    const double C50082 = C49824 * C49857;
    const double C50125 = C49857 / C49835;
    const double C50108 = C50104 / C49689;
    const double C50305 = C50301 / C49689;
    const double C901 =
        C49824 *
            ((-(C49825 * C49931) / C49689) / C49756 - (C49908 * ce) / C49835) -
        (ae * (C49825 * C49832 * C49892 + C49832 * C49936 * ce)) / C49835;
    const double C1024 = (-(ae * C49824 * C49959) / C49689) / C49756 -
                         (C49832 * C49837) / C49835 +
                         C49824 * ((-(C49824 * C49931) / C49689) / C49756 -
                                   (ae * C49959) / C49835);
    const double C50012 = C50009 / C49689;
    const double C50096 = C50093 / C49689;
    const double C161 = C50950 * C144;
    const double C332 = C50950 * C316;
    const double C498 = C50950 * C485;
    const double C5298 = C50962 * C485;
    const double C31617 = C50962 * C485;
    const double C658 = C50950 * C646;
    const double C49911 = C49878 + C49910;
    const double C49915 = 2 * C49913;
    const double C50022 = C49913 * ce;
    const double C50020 = C49825 * C49913;
    const double C774 =
        2 * ((-(C49825 * C49931) / C49689) / C49756 - (C49908 * ce) / C49835) -
        ((C49908 + C49913 * std::pow(C49825, 2)) * ce) / C49835 +
        C49825 *
            ((-(C49825 * C49913 * ce) / C49689) / C49756 - C49931 / C49835 +
             C49825 * ((-(C49825 * C49857) / C49689) / C49756 -
                       (C49913 * ce) / C49835));
    const double C902 =
        C49824 *
            ((-(C49825 * C49913 * ce) / C49689) / C49756 - C49931 / C49835 +
             C49825 * ((-(C49825 * C49857) / C49689) / C49756 -
                       (C49913 * ce) / C49835)) -
        (ae * (C49825 * (C49825 * C49832 * C49895 + C49940 * ce) +
               C49832 * C49892 + C49825 * C49940 * ce)) /
            C49835;
    const double C50529 = C49824 * C49913;
    const double C767 =
        (2 * C49825 * C49908 + C49825 * (C49908 + C49913 * C50011)) / C49756;
    const double C50016 = C49878 + C50014;
    const double C50109 = C50105 / C49835;
    const double C50110 = 2 * C50103;
    const double C50107 = C50103 * ce;
    const double C50586 = C49824 * C50103;
    const double C50621 = C50617 + C50618;
    const double C49962 = C49961 + C49892;
    const double C49966 = -2 * C49964;
    const double C49990 = C49825 * C49964;
    const double C50083 = ae * C49964;
    const double C50081 = C49824 * C49964;
    const double C1250 =
        2 * ((-(C49824 * C49931) / C49689) / C49756 - (ae * C49959) / C49835) -
        (ae * (C49964 * std::pow(C49824, 2) + C49959)) / C49835 +
        C49824 *
            ((-(ae * C49824 * C49964) / C49689) / C49756 - C49931 / C49835 +
             C49824 * ((-(C49824 * C49857) / C49689) / C49756 -
                       (ae * C49964) / C49835));
    const double C1244 = (-2 * C49824 * C49959) / C49689 -
                         (C49824 * (C49964 * C50075 + C49959)) / C49689;
    const double C50045 = C50042 + C50043;
    const double C50098 = C50095 + C49892;
    const double C50306 = C50302 / C49835;
    const double C50307 = -2 * C50300;
    const double C50304 = ae * C50300;
    const double C49945 = C49939 + C49944;
    const double C49950 = 2 * C49948;
    const double C50053 = C49825 * C49948;
    const double C50052 = C49948 * ce;
    const double C50495 = C49948 * C50011;
    const double C50532 = C49948 * C50075;
    const double C50604 = C49824 * C49948;
    const double C50603 = C49948 * ae;
    const double C50149 = C49939 + C50148;
    const double C50162 = C50158 * ce;
    const double C50223 = 2 * C50158;
    const double C50589 = C50158 * C50075;
    const double C50634 = C49824 * C50158;
    const double C50633 = C50158 * ae;
    const double C50161 = C50156 + C50157;
    const double C50623 = C49939 + C50620;
    const double C50657 = 2 * C50650;
    const double C50655 = C50650 * ae;
    const double C50654 = C50648 + C50649;
    const double C49866 = C49865 / C49689;
    const double C50130 = C49825 * C50126;
    const double C50278 = C49824 * C50126;
    const double C50201 = C50195 / C49689;
    const double C50350 = C50344 / C49689;
    const double C49924 = C49884 + C49923;
    const double C50133 = C50128 * C50011;
    const double C50204 = C49884 + C50198;
    const double C49979 = C49978 + C49899;
    const double C50178 = C49825 * C50173;
    const double C50280 = C50173 * C50075;
    const double C50237 = C50230 + C50231;
    const double C50354 = C50347 + C49899;
    const double C2919 = C50950 * C645;
    const double C3059 = C50950 * C773;
    const double C3223 = C50950 * C899;
    const double C12849 = C50962 * C899;
    const double C34684 = C50962 * C899;
    const double C153 = C50950 * C130;
    const double C157 = C50950 * C132;
    const double C324 = C50950 * C304;
    const double C330 = C50950 * C306;
    const double C492 = C50950 * C472;
    const double C5286 = C50962 * C472;
    const double C31605 = C50962 * C472;
    const double C2917 = C50950 * C635;
    const double C656 = C50950 * C637;
    const double C3057 = C50950 * C765;
    const double C3221 = C50950 * C883;
    const double C12845 = C50962 * C883;
    const double C34680 = C50962 * C883;
    const double C49988 = C49986 + C49987;
    const double C3227 = C50950 * C900;
    const double C12857 = C50962 * C900;
    const double C35092 = C50962 * C900;
    const double C638 = -(C49825 * (C49825 * C49959 + C50418 * ce) +
                          C49832 * C49957 + C49825 * C50418 * ce) /
                        C49689;
    const double C887 =
        (C49824 * C49825 * C49908 + C49825 * C50418 * ae) / C49756;
    const double C888 = -(C49824 * (C49825 * C49959 + C50418 * ce)) / C49689;
    const double C889 = (C49824 * (C49908 + C49913 * C50011) +
                         (C50418 + C49940 * C50011) * ae) /
                        C49756;
    const double C1015 =
        (C49832 * C49906 + C49824 * (C49824 * C49908 + C50418 * ae) +
         C49824 * C50418 * ae) /
        C49756;
    const double C1245 =
        (2 * (C49824 * C49908 + C50418 * ae) +
         C49824 * (C49908 + C49824 * (C49824 * C49913 + C49940 * ae) +
                   C49824 * C49940 * ae) +
         (C50418 + C49940 * C50075) * ae) /
        C49756;
    const double C631 = C49832 * C50415 + C50418 * C50011;
    const double C762 =
        2 * C49825 * C50418 + C49825 * (C50418 + C49940 * C50011);
    const double C877 = C49824 * C49825 * C50418;
    const double C878 = C49824 * (C50418 + C49940 * C50011);
    const double C1009 = C49832 * C50415 + C50418 * C50075;
    const double C1151 = C49825 * C50418 + C50471 * C50075;
    const double C1238 =
        2 * C49824 * C50418 + C49824 * (C50418 + C49940 * C50075);
    const double C123 = 3 * (C50415 + C49936 * C49841) +
                        C49832 * (2 * C50418 + C49832 * C50422);
    const double C299 = C49825 * (2 * C50418 + C49832 * C50422);
    const double C468 = C49824 * (2 * C50418 + C49832 * C50422);
    const double C632 = C50415 + C49936 * C49841 + C50422 * C50011;
    const double C879 = C49824 * C49825 * C50422;
    const double C1010 = C50415 + C49936 * C49841 + C50422 * C50075;
    const double C1154 =
        (C49825 * C49906 + C49824 * (C49824 * C50008 + C50468 * ae) +
         C49824 * C50468 * ae) /
        C49756;
    const double C3675 =
        (2 * (C49824 * C50008 + C50468 * ae) +
         C49824 * (C50008 + C49824 * (C49824 * C50103 + C50044 * ae) +
                   C49824 * C50044 * ae) +
         (C50468 + C50044 * C50075) * ae) /
        C49756;
    const double C1150 = C49825 * C50415 + C50468 * C50075;
    const double C3669 =
        2 * C49824 * C50468 + C49824 * (C50468 + C50044 * C50075);
    const double C3043 = 3 * (C50415 + C49936 * C50011) +
                         C49825 * (2 * C50468 + C49825 * C50492);
    const double C3207 = C49824 * (2 * C50468 + C49825 * C50492);
    const double C3551 = C50415 + C49936 * C50011 + C50492 * C50075;
    const double C50541 = C50537 + C50538;
    const double C6548 = 3 * (C50415 + C49936 * C50075) +
                         C49824 * (2 * C50539 + C49824 * C50542);
    const double C496 = C50950 * C474;
    const double C5294 = C50962 * C474;
    const double C31613 = C50962 * C474;
    const double C3225 = C50950 * C885;
    const double C12853 = C50962 * C885;
    const double C35088 = C50962 * C885;
    const double C156 = C117 * C122;
    const double C5305 = C5280 * C122;
    const double C329 = C117 * C298;
    const double C5499 = C5280 * C298;
    const double C495 = C117 * C467;
    const double C5293 = C5281 * C467;
    const double C5686 = C5280 * C467;
    const double C3056 = C117 * C761;
    const double C13162 = C5280 * C761;
    const double C3224 = C117 * C876;
    const double C12852 = C5281 * C876;
    const double C13456 = C5280 * C876;
    const double C154 = C117 * C131;
    const double C5295 = C5280 * C131;
    const double C158 = C117 * C133;
    const double C5301 = C5280 * C133;
    const double C325 = C117 * C305;
    const double C5493 = C5280 * C305;
    const double C331 = C117 * C307;
    const double C5503 = C5280 * C307;
    const double C493 = C117 * C473;
    const double C5289 = C5281 * C473;
    const double C5682 = C5280 * C473;
    const double C497 = C117 * C475;
    const double C5297 = C5281 * C475;
    const double C5690 = C5280 * C475;
    const double C2918 = C117 * C636;
    const double C12858 = C5280 * C636;
    const double C3222 = C117 * C884;
    const double C12848 = C5281 * C884;
    const double C13450 = C5280 * C884;
    const double C1031 = C117 * C1016;
    const double C5684 = C5281 * C1016;
    const double C6283 = C5280 * C1016;
    const double C49914 = C49832 * C49886;
    const double C49918 = 3 * C49886;
    const double C50033 = C49886 * ce;
    const double C50031 = C49825 * C49886;
    const double C50521 = C49824 * C49886;
    const double C50026 = C49913 + C50023;
    const double C50131 = C50127 / C49835;
    const double C50132 = 2 * C50124;
    const double C50129 = C50124 * ce;
    const double C50593 = C49824 * C50124;
    const double C50114 = C49825 * C50111;
    const double C50197 = 3 * C50111;
    const double C50193 = C50111 * ce;
    const double C50578 = C49824 * C50111;
    const double C50206 = C50200 / C49689;
    const double C49965 = C49832 * C49901;
    const double C49971 = -3 * C49901;
    const double C49994 = C49825 * C49901;
    const double C50074 = ae * C49901;
    const double C50072 = C49824 * C49901;
    const double C49977 = C49975 / C49689;
    const double C50087 = C50084 + C49964;
    const double C50283 = C50279 / C49835;
    const double C50284 = -2 * C50277;
    const double C50281 = ae * C50277;
    const double C50312 = C49824 * C50308;
    const double C50346 = -3 * C50308;
    const double C50342 = ae * C50308;
    const double C50358 = C50353 / C49689;
    const double C50356 = C50349 / C49689;
    const double C49953 = C49832 * C49952;
    const double C50062 = C49825 * C49952;
    const double C50061 = C49952 * ce;
    const double C50499 = C49952 * C50011;
    const double C50524 = C49952 * C50075;
    const double C50153 = C49948 + C50152;
    const double C50179 = C50175 * ce;
    const double C50596 = C50175 * C50075;
    const double C50608 = C49948 + C50605;
    const double C50225 = C49825 * C50224;
    const double C50233 = C50224 * ce;
    const double C50581 = C50224 * C50075;
    const double C50638 = C50158 + C50635;
    const double C50659 = C49824 * C50656;
    const double C51043 = C50766 / C49785;
    const double C51042 = C50766 * C50761;
    const double C51039 = C50766 / C49756;
    const double C50773 = C50770 * C50761;
    const double C110 = C50770 / C51045;
    const double C22817 = C50770 / C49764;
    const double C2434 = (C50765 * std::pow(C50761, 2)) / C49781 + C51041;
    const double C51079 = C51040 / C49756;
    const double C2435 = (-2 * C50769 * C51040) / C49756;
    const double C51050 = C50788 / C49718;
    const double C51049 = C50788 * C50783;
    const double C51046 = C50788 / C49689;
    const double C50795 = C50792 * C50783;
    const double C115 = C50792 / C51052;
    const double C1354 = C50792 / C49697;
    const double C291 = (C50787 * std::pow(C50783, 2)) / C49714 + C51048;
    const double C51082 = C51047 / C49689;
    const double C292 = (-2 * C50791 * C51047) / C49689;
    const double C51064 = C50860 / C49718;
    const double C51063 = C50860 * C50859;
    const double C51055 = C50860 / C49689;
    const double C50866 = C50863 * C50859;
    const double C1235 = C50863 / C51052;
    const double C2009 = C50863 / C49697;
    const double C51088 = C51062 / C49689;
    const double C1006 = (-2 * C50791 * C51062) / C49689;
    const double C1005 = (C50851 * std::pow(C50859, 2)) / C49714 + C51061;
    const double C51072 = C50935 / C49785;
    const double C51071 = C50935 * C50934;
    const double C51067 = C50935 / C49756;
    const double C50941 = C50938 * C50934;
    const double C10866 = C50938 / C51045;
    const double C25452 = C50938 / C49764;
    const double C51091 = C51070 / C49756;
    const double C8148 = (-2 * C50769 * C51070) / C49756;
    const double C8147 = (C50924 * std::pow(C50934, 2)) / C49781 + C51069;
    const double C49716 = C49688 * C49702;
    const double C628 =
        ((-C49698 / C49689) / C49697 -
         ((C50821 - (C49688 * C49702) / C49689) * de) / C49689) /
            C49697 -
        ((C49688 * ((-C49702 / C49689) / C49697 - (0 * de) / C49689) + C50837) *
         de) /
            C49689;
    const double C629 =
        ((-C49702 / C49689) / C49697 - (0 * de) / C49689) / C49697 -
        (0 * de) / C49689;
    const double C1356 = (-C49702 / C49689) / C49697 - (0 * de) / C49689;
    const double C49727 = C49721 - C49722;
    const double C51086 = C51058 / C49714;
    const double C51060 = C50840 / C49689;
    const double C1350 = -C51085;
    const double C49783 = C49755 * C49769;
    const double C15477 =
        ((-C49765 / C49756) / C49764 -
         ((C50950 - (C49755 * C49769) / C49756) * be) / C49756) /
            C49764 -
        ((C49755 * ((-C49769 / C49756) / C49764 - (0 * be) / C49756) + C50962) *
         be) /
            C49756;
    const double C15478 =
        ((-C49769 / C49756) / C49764 - (0 * be) / C49756) / C49764 -
        (0 * be) / C49756;
    const double C31600 = (-C49769 / C49756) / C49764 - (0 * be) / C49756;
    const double C49794 = C49788 - C49789;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C2613 = C2598 + C2599;
    const double C2612 = C2596 + C2597;
    const double C51095 = C51076 / C49781;
    const double C5312 = C51068 * C144;
    const double C5306 = C51068 * C132;
    const double C5302 = C51068 * C143;
    const double C5296 = C51068 * C142;
    const double C5292 = C51068 * C130;
    const double C5288 = C51068 * C141;
    const double C5284 = C51068 * C128;
    const double C5504 = C51068 * C316;
    const double C5500 = C51068 * C306;
    const double C5494 = C51068 * C315;
    const double C5490 = C51068 * C304;
    const double C5691 = C51068 * C485;
    const double C5687 = C51068 * C474;
    const double C5683 = C51068 * C484;
    const double C5679 = C51068 * C472;
    const double C5870 = C51068 * C646;
    const double C5866 = C51068 * C637;
    const double C12859 = C51068 * C645;
    const double C12855 = C51068 * C635;
    const double C12851 = C51068 * C314;
    const double C12847 = C51068 * C302;
    const double C13167 = C51068 * C773;
    const double C13163 = C51068 * C765;
    const double C13461 = C51068 * C900;
    const double C13457 = C51068 * C885;
    const double C13451 = C51068 * C899;
    const double C13447 = C51068 * C883;
    const double C51078 = C50965 / C49756;
    const double C31597 = -C51094;
    const double C15501 = C15474 * C474;
    const double C15495 = C15474 * C485;
    const double C15489 = C15474 * C484;
    const double C15483 = C15474 * C472;
    const double C18455 = C15474 * C899;
    const double C18449 = C15474 * C883;
    const double C18765 = C15474 * C900;
    const double C18759 = C15474 * C885;
    const double C15511 = C15473 * C143;
    const double C15505 = C15473 * C132;
    const double C15503 = C15473 * C130;
    const double C15497 = C15473 * C142;
    const double C15487 = C15473 * C141;
    const double C15481 = C15473 * C128;
    const double C15699 = C15473 * C316;
    const double C15693 = C15473 * C306;
    const double C15691 = C15473 * C315;
    const double C15685 = C15473 * C304;
    const double C15881 = C15473 * C485;
    const double C15875 = C15473 * C474;
    const double C15869 = C15473 * C484;
    const double C15863 = C15473 * C472;
    const double C16051 = C15473 * C646;
    const double C16045 = C15473 * C637;
    const double C18457 = C15473 * C314;
    const double C18451 = C15473 * C302;
    const double C18763 = C15473 * C645;
    const double C18757 = C15473 * C635;
    const double C18883 = C15473 * C773;
    const double C18877 = C15473 * C765;
    const double C19059 = C15473 * C900;
    const double C19053 = C15473 * C885;
    const double C19043 = C15473 * C899;
    const double C19037 = C15473 * C883;
    const double C49853 = -C49852;
    const double C49863 = C49861 / C49835;
    const double C50024 = C50021 / C49689;
    const double C50085 = C50082 / C49689;
    const double C50113 = -C50108;
    const double C50310 = -C50305;
    const double C1643 = C50950 * C901;
    const double C5492 = C50962 * C901;
    const double C7057 = C51068 * C901;
    const double C15689 = C15474 * C901;
    const double C17219 = C15473 * C901;
    const double C31811 = C50962 * C901;
    const double C1032 = C50950 * C1024;
    const double C5685 = C50962 * C1024;
    const double C6284 = C51068 * C1024;
    const double C15491 = C15475 * C1024;
    const double C15871 = C15474 * C1024;
    const double C16459 = C15473 * C1024;
    const double C32004 = C50962 * C1024;
    const double C38084 = C38068 * C1024;
    const double C50015 = -C50012;
    const double C50099 = -C50096;
    const double C135 = (3 * (C49906 + C49878 * C49841) +
                         C49832 * (2 * C49908 + C49832 * C49911)) /
                        C49756;
    const double C308 = (C49825 * (2 * C49908 + C49832 * C49911)) / C49756;
    const double C476 =
        (C49824 * (2 * C49908 + C49832 * C49911) +
         (2 * C49832 * C49936 + C49832 * (C49936 + C49939 * C49841)) * ae) /
        C49756;
    const double C639 = (C49906 + C49878 * C49841 + C49911 * C50011) / C49756;
    const double C769 =
        (2 * C49825 * C49911 + C49825 * (C49911 + C49886 * C50011)) / C49756;
    const double C891 =
        (C49824 * C49825 * C49911 + C49825 * C50422 * ae) / C49756;
    const double C1017 =
        (C49906 + C49878 * C49841 + C49824 * (C49824 * C49911 + C50422 * ae) +
         C49824 * C50422 * ae) /
        C49756;
    const double C50025 = C50022 / C49835;
    const double C1156 =
        (C49825 * C49908 + C49824 * (C49824 * C50020 + C50471 * ae) +
         C49824 * C50471 * ae) /
        C49756;
    const double C2927 = C50950 * C774;
    const double C13179 = C51068 * C774;
    const double C3231 = C50950 * C902;
    const double C5872 = C50962 * C902;
    const double C14399 = C51068 * C902;
    const double C16053 = C15474 * C902;
    const double C32191 = C50962 * C902;
    const double C50533 = C50529 + C50530;
    const double C2925 = C50950 * C767;
    const double C13175 = C51068 * C767;
    const double C3046 = (3 * (C49906 + C49878 * C50011) +
                          C49825 * (2 * C50008 + C49825 * C50016)) /
                         C49756;
    const double C3210 = (C49824 * (2 * C50008 + C49825 * C50016) +
                          (2 * C50468 + C49825 * C50492) * ae) /
                         C49756;
    const double C3554 =
        (C49906 + C49878 * C50011 + C49824 * (C49824 * C50016 + C50492 * ae) +
         C49824 * C50492 * ae) /
        C49756;
    const double C50112 = C50107 / C49689;
    const double C50590 = C50586 + C50587;
    const double C50625 = C49824 * C50621;
    const double C50647 = 2 * C50621;
    const double C134 =
        (-3 * (C49892 * C49841 + C49957)) / C49689 +
        C49832 * ((-2 * C49959) / C49689 - (C49832 * C49962) / C49689);
    const double C309 =
        C49825 * ((-2 * C49959) / C49689 - (C49832 * C49962) / C49689) -
        ((2 * C49832 * C49936 + C49832 * (C49936 + C49939 * C49841)) * ce) /
            C49689;
    const double C477 =
        C49824 * ((-2 * C49959) / C49689 - (C49832 * C49962) / C49689);
    const double C640 = -(C49825 * (C49825 * C49962 + C50422 * ce) +
                          C49892 * C49841 + C49957 + C49825 * C50422 * ce) /
                        C49689;
    const double C892 = -(C49824 * (C49825 * C49962 + C50422 * ce)) / C49689;
    const double C1018 = -(C49962 * C50075 + C49892 * C49841 + C49957) / C49689;
    const double C1242 = (-2 * C49824 * C49962) / C49689 -
                         (C49824 * (C49901 * C50075 + C49962)) / C49689;
    const double C49968 = C49966 / C49689;
    const double C49992 = C49990 + C49991;
    const double C50086 = C50083 / C49835;
    const double C6286 = C50962 * C1250;
    const double C15873 = C15475 * C1250;
    const double C16461 = C15474 * C1250;
    const double C32605 = C50962 * C1250;
    const double C38466 = C38068 * C1250;
    const double C6285 = C5281 * C1244;
    const double C50047 = C49825 * C50045;
    const double C50155 = -2 * C50045;
    const double C50263 = ae * C50045;
    const double C50261 = C49824 * C50045;
    const double C6553 =
        (-3 * (C49892 * C50075 + C49957)) / C49689 +
        C49824 * ((-2 * C50092) / C49689 - (C49824 * C50098) / C49689);
    const double C50311 = C50307 / C49689;
    const double C50309 = C50304 / C49689;
    const double C49995 = C49945 * ce;
    const double C50426 = C49832 * C49945;
    const double C50430 = 3 * C49945;
    const double C50474 = C49825 * C49945;
    const double C50523 = C49824 * C49945;
    const double C50522 = C49945 * ae;
    const double C893 = (C49824 * (C49911 + C49886 * C50011) +
                         (C50422 + C49945 * C50011) * ae) /
                        C49756;
    const double C1243 =
        (2 * (C49824 * C49911 + C50422 * ae) +
         C49824 * (C49911 + C49824 * (C49824 * C49886 + C49945 * ae) +
                   C49824 * C49945 * ae) +
         (C50422 + C49945 * C50075) * ae) /
        C49756;
    const double C763 =
        2 * C49825 * C50422 + C49825 * (C50422 + C49945 * C50011);
    const double C880 = C49824 * (C50422 + C49945 * C50011);
    const double C1237 =
        2 * C49824 * C50422 + C49824 * (C50422 + C49945 * C50075);
    const double C50055 = C50053 * ce;
    const double C50550 = 2 * C50053;
    const double C50595 = C49824 * C50053;
    const double C50594 = C50053 * ae;
    const double C3673 =
        (2 * (C49824 * C50020 + C50471 * ae) +
         C49824 * (C50020 + C49824 * (C49824 * C50124 + C50053 * ae) +
                   C49824 * C50053 * ae) +
         (C50471 + C50053 * C50075) * ae) /
        C49756;
    const double C3668 =
        2 * C49824 * C50471 + C49824 * (C50471 + C50053 * C50075);
    const double C50054 = C50051 + C50052;
    const double C50496 = C49940 + C50495;
    const double C50534 = C49940 + C50532;
    const double C50609 = 2 * C50604;
    const double C50607 = C50604 * ae;
    const double C50606 = C50602 + C50603;
    const double C50159 = C50149 * ce;
    const double C50546 = C49825 * C50149;
    const double C50567 = 3 * C50149;
    const double C50580 = C49824 * C50149;
    const double C50579 = C50149 * ae;
    const double C9313 =
        (2 * (C49824 * C50016 + C50492 * ae) +
         C49824 * (C50016 + C49824 * (C49824 * C50111 + C50149 * ae) +
                   C49824 * C50149 * ae) +
         (C50492 + C50149 * C50075) * ae) /
        C49756;
    const double C9309 =
        2 * C49824 * C50492 + C49824 * (C50492 + C50149 * C50075);
    const double C50591 = C50044 + C50589;
    const double C50639 = 2 * C50634;
    const double C50637 = C50634 * ae;
    const double C50636 = C50632 + C50633;
    const double C50164 = C49825 * C50161;
    const double C50229 = -2 * C50161;
    const double C50264 = C50161 * C50075;
    const double C50325 = ae * C50161;
    const double C50323 = C49824 * C50161;
    const double C50626 = C49824 * C50623;
    const double C50653 = 3 * C50623;
    const double C50651 = C50623 * ae;
    const double C50658 = C49824 * C50654;
    const double C49867 = -C49866;
    const double C50135 = C50130 / C49689;
    const double C50282 = C50278 / C49689;
    const double C50207 = -C50201;
    const double C50357 = -C50350;
    const double C49925 = C49832 * C49924;
    const double C50034 = C49924 * C50011;
    const double C50136 = C49919 + C50133;
    const double C50208 = C49825 * C50204;
    const double C49980 = C49832 * C49979;
    const double C50060 = C49825 * C49979;
    const double C50077 = C49979 * C50075;
    const double C50181 = C50178 + C50174;
    const double C50285 = C50280 + C49972;
    const double C50241 = C49825 * C50237;
    const double C50326 = C50237 * C50075;
    const double C50359 = C49824 * C50354;
    const double C170 = C152 + C153;
    const double C345 = C323 + C324;
    const double C507 = C491 + C492;
    const double C5316 = C5285 + C5286;
    const double C2936 = C2916 + C2917;
    const double C3236 = C3220 + C3221;
    const double C12860 = C12844 + C12845;
    const double C1162 =
        (-(C49825 * C49837) / C49689) / C49756 - (C49906 * ce) / C49835 -
        (ae * C49824 * C49988) / C49835 +
        C49824 * (C49824 * ((-(C49825 * C49844) / C49689) / C49756 -
                            (C49878 * ce) / C49835) -
                  (ae * C49988) / C49835);
    const double C766 =
        (-2 * (C49825 * C49957 + C50415 * ce)) / C49689 -
        (C49825 * (C49825 * C49988 + C49957 + C49825 * C49936 * ce)) / C49689 -
        ((C50415 + C49936 * C50011) * ce) / C49689;
    const double C886 =
        -(C49824 * (C49825 * C49988 + C49957 + C49825 * C49936 * ce)) / C49689;
    const double C1155 =
        -(C49988 * C50075 + C49825 * C49957 + C50415 * ce) / C49689;
    const double C3674 = (-2 * C49824 * C49988) / C49689 -
                         (C49824 * (C50045 * C50075 + C49988)) / C49689;
    const double C657 = C117 * C638;
    const double C5869 = C5280 * C638;
    const double C1639 = C50950 * C887;
    const double C5488 = C50962 * C887;
    const double C7053 = C51068 * C887;
    const double C15683 = C15474 * C887;
    const double C17213 = C15473 * C887;
    const double C31807 = C50962 * C887;
    const double C1642 = C117 * C888;
    const double C5491 = C5281 * C888;
    const double C7056 = C5280 * C888;
    const double C3229 = C50950 * C889;
    const double C5868 = C50962 * C889;
    const double C14395 = C51068 * C889;
    const double C16047 = C15474 * C889;
    const double C32187 = C50962 * C889;
    const double C1030 = C50950 * C1015;
    const double C5681 = C50962 * C1015;
    const double C6280 = C51068 * C1015;
    const double C15485 = C15475 * C1015;
    const double C15865 = C15474 * C1015;
    const double C16453 = C15473 * C1015;
    const double C32000 = C50962 * C1015;
    const double C38078 = C38068 * C1015;
    const double C6282 = C50962 * C1245;
    const double C15867 = C15475 * C1245;
    const double C16455 = C15474 * C1245;
    const double C32601 = C50962 * C1245;
    const double C38460 = C38068 * C1245;
    const double C655 = C117 * C631;
    const double C5865 = C5280 * C631;
    const double C2924 = C117 * C762;
    const double C13174 = C5280 * C762;
    const double C1638 = C117 * C877;
    const double C5487 = C5281 * C877;
    const double C7052 = C5280 * C877;
    const double C3228 = C117 * C878;
    const double C5867 = C5281 * C878;
    const double C14394 = C5280 * C878;
    const double C1029 = C117 * C1009;
    const double C5680 = C5281 * C1009;
    const double C6279 = C5280 * C1009;
    const double C3390 = C117 * C1151;
    const double C7054 = C5281 * C1151;
    const double C29222 = C5280 * C1151;
    const double C6281 = C5281 * C1238;
    const double C162 = C117 * C123;
    const double C5307 = C5280 * C123;
    const double C335 = C117 * C299;
    const double C5505 = C5280 * C299;
    const double C499 = C117 * C468;
    const double C5303 = C5281 * C468;
    const double C5694 = C5280 * C468;
    const double C663 = C117 * C632;
    const double C5873 = C5280 * C632;
    const double C1644 = C117 * C879;
    const double C5497 = C5281 * C879;
    const double C7060 = C5280 * C879;
    const double C1033 = C117 * C1010;
    const double C5688 = C5281 * C1010;
    const double C6287 = C5280 * C1010;
    const double C3565 = C50950 * C1154;
    const double C13449 = C50962 * C1154;
    const double C13779 = C51068 * C1154;
    const double C18447 = C15475 * C1154;
    const double C19039 = C15474 * C1154;
    const double C19369 = C15473 * C1154;
    const double C35452 = C50962 * C1154;
    const double C47190 = C38068 * C1154;
    const double C13777 = C50962 * C3675;
    const double C19041 = C15475 * C3675;
    const double C19367 = C15474 * C3675;
    const double C35886 = C50962 * C3675;
    const double C47784 = C38068 * C3675;
    const double C3564 = C117 * C1150;
    const double C13448 = C5281 * C1150;
    const double C13778 = C5280 * C1150;
    const double C13776 = C5281 * C3669;
    const double C8725 = C117 * C3043;
    const double C13290 = C5280 * C3043;
    const double C8885 = C117 * C3207;
    const double C13164 = C5281 * C3207;
    const double C13464 = C5280 * C3207;
    const double C9205 = C117 * C3551;
    const double C13454 = C5281 * C3551;
    const double C13786 = C5280 * C3551;
    const double C6554 =
        (3 * (C49906 + C49824 * C50541 + C50539 * ae) +
         C49824 * (2 * C50541 +
                   C49824 * (C49878 + C49824 * (C49824 * C49881 + C49939 * ae) +
                             C49824 * C49939 * ae) +
                   C50542 * ae) +
         (2 * C50539 + C49824 * C50542) * ae) /
        C49756;
    const double C172 = C156 + C157;
    const double C348 = C329 + C330;
    const double C509 = C495 + C496;
    const double C5320 = C5293 + C5294;
    const double C3060 = C3056 + C3057;
    const double C3238 = C3224 + C3225;
    const double C12864 = C12852 + C12853;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C346 = C325 + C326;
    const double C349 = C331 + C332;
    const double C508 = C493 + C494;
    const double C5318 = C5289 + C5290;
    const double C510 = C497 + C498;
    const double C5322 = C5297 + C5298;
    const double C2937 = C2918 + C2919;
    const double C3237 = C3222 + C3223;
    const double C12862 = C12848 + C12849;
    const double C49916 = C49915 + C49914;
    const double C50035 = C50033 / C49835;
    const double C3048 = (3 * (C49908 + C49913 * C50011) +
                          C49825 * (2 * C50020 + C49825 * C50026)) /
                         C49756;
    const double C50134 = C50129 / C49689;
    const double C50117 = C50110 + C50114;
    const double C50199 = C50193 / C49835;
    const double C50209 = -C50206;
    const double C49967 = C49965 / C49689;
    const double C49974 = C49971 / C49689;
    const double C50076 = C50074 / C49835;
    const double C6551 =
        (-3 * (C49964 * C50075 + C49959)) / C49689 +
        C49824 * ((-2 * C50081) / C49689 - (C49824 * C50087) / C49689);
    const double C50288 = C50284 / C49689;
    const double C50286 = C50281 / C49689;
    const double C50315 = C50312 / C49689;
    const double C50352 = C50346 / C49689;
    const double C50348 = C50342 / C49835;
    const double C50360 = -C50356;
    const double C49954 = C49950 + C49953;
    const double C50064 = C50062 * ce;
    const double C50500 = C49945 + C50499;
    const double C50526 = C49945 + C50524;
    const double C50176 = C50153 * ce;
    const double C50551 = C49825 * C50153;
    const double C50598 = C50053 + C50596;
    const double C50611 = C49824 * C50608;
    const double C50226 = C50223 + C50225;
    const double C50239 = C50233 / C49689;
    const double C50583 = C50149 + C50581;
    const double C50641 = C49824 * C50638;
    const double C50661 = C50657 + C50659;
    const double C51080 = C51042 / C49781;
    const double C51044 = C50773 / C49756;
    const double C25448 = -C51079;
    const double C51083 = C51049 / C49714;
    const double C51051 = C50795 / C49689;
    const double C1480 = -C51082;
    const double C51089 = C51063 / C49714;
    const double C51065 = C50866 / C49689;
    const double C1765 = -C51088;
    const double C51092 = C51071 / C49781;
    const double C51073 = C50941 / C49756;
    const double C22818 = -C51091;
    const double C49720 = C49716 / C49689;
    const double C760 =
        (C49727 / C49697 - (0 * de) / C49689) / C49697 - (0 * de) / C49689;
    const double C1484 = C49727 / C49697 - (0 * de) / C49689;
    const double C51099 = C51056 - C51086;
    const double C51087 = C51059 - C51060;
    const double C627 =
        ((-(0 * de) / C49689) / C49697 -
         ((0 - (C49688 * C49698) / C49689) * de) / C49689) /
            C49697 -
        ((C49688 * ((-C49698 / C49689) / C49697 -
                    ((C50821 - (C49688 * C49702) / C49689) * de) / C49689) +
          C1350) *
         de) /
            C49689 +
        (-C49702 / C49689) / C49697 - (0 * de) / C49689;
    const double C49787 = C49783 / C49756;
    const double C15506 = C15477 * C468;
    const double C15500 = C15477 * C467;
    const double C15494 = C15477 * C475;
    const double C15488 = C15477 * C473;
    const double C15482 = C15477 * C466;
    const double C15694 = C15477 * C879;
    const double C15688 = C15477 * C888;
    const double C15682 = C15477 * C877;
    const double C15876 = C15477 * C1010;
    const double C15870 = C15477 * C1016;
    const double C15864 = C15477 * C1009;
    const double C16046 = C15477 * C878;
    const double C16460 = C15477 * C1244;
    const double C16454 = C15477 * C1238;
    const double C17214 = C15477 * C1151;
    const double C18454 = C15477 * C884;
    const double C18448 = C15477 * C875;
    const double C18758 = C15477 * C876;
    const double C18874 = C15477 * C3207;
    const double C19050 = C15477 * C3551;
    const double C19038 = C15477 * C1150;
    const double C19366 = C15477 * C3669;
    const double C15498 = C15478 * C1010;
    const double C15490 = C15478 * C1016;
    const double C15484 = C15478 * C1009;
    const double C15680 = C15478 * C1151;
    const double C15872 = C15478 * C1244;
    const double C15866 = C15478 * C1238;
    const double C18446 = C15478 * C1150;
    const double C18760 = C15478 * C3551;
    const double C19040 = C15478 * C3669;
    const double C31622 = C31600 * C468;
    const double C31616 = C31600 * C475;
    const double C31612 = C31600 * C467;
    const double C31608 = C31600 * C473;
    const double C31604 = C31600 * C466;
    const double C31816 = C31600 * C879;
    const double C31810 = C31600 * C888;
    const double C31806 = C31600 * C877;
    const double C32007 = C31600 * C1010;
    const double C32003 = C31600 * C1016;
    const double C31999 = C31600 * C1009;
    const double C32186 = C31600 * C878;
    const double C32604 = C31600 * C1244;
    const double C32600 = C31600 * C1238;
    const double C33361 = C31600 * C1151;
    const double C34683 = C31600 * C884;
    const double C34679 = C31600 * C875;
    const double C35087 = C31600 * C876;
    const double C35243 = C31600 * C3207;
    const double C35457 = C31600 * C3551;
    const double C35451 = C31600 * C1150;
    const double C35885 = C31600 * C3669;
    const double C21014 =
        (C49794 / C49764 - (0 * be) / C49756) / C49764 - (0 * be) / C49756;
    const double C38071 = C49794 / C49764 - (0 * be) / C49756;
    const double C179 = C169 * C50821;
    const double C322 = C169 * C51053;
    const double C652 = C169 * C622;
    const double C1359 = C169 * C1350;
    const double C178 = C168 * C118;
    const double C321 = C168 * C294;
    const double C51102 = C51074 - C51095;
    const double C5326 = C5305 + C5306;
    const double C5324 = C5301 + C5302;
    const double C5321 = C5295 + C5296;
    const double C5319 = C5291 + C5292;
    const double C5317 = C5287 + C5288;
    const double C5315 = C5283 + C5284;
    const double C5521 = C5503 + C5504;
    const double C5519 = C5499 + C5500;
    const double C5516 = C5493 + C5494;
    const double C5514 = C5489 + C5490;
    const double C5708 = C5690 + C5691;
    const double C5706 = C5686 + C5687;
    const double C5704 = C5682 + C5683;
    const double C5702 = C5678 + C5679;
    const double C12867 = C12858 + C12859;
    const double C12865 = C12854 + C12855;
    const double C12863 = C12850 + C12851;
    const double C12861 = C12846 + C12847;
    const double C13180 = C13162 + C13163;
    const double C13475 = C13456 + C13457;
    const double C13472 = C13450 + C13451;
    const double C13470 = C13446 + C13447;
    const double C51096 = C51077 - C51078;
    const double C31631 = C31597 * C144;
    const double C31625 = C31597 * C132;
    const double C31621 = C31597 * C143;
    const double C31615 = C31597 * C142;
    const double C31611 = C31597 * C130;
    const double C31607 = C31597 * C141;
    const double C31603 = C31597 * C128;
    const double C31823 = C31597 * C316;
    const double C31819 = C31597 * C306;
    const double C31813 = C31597 * C315;
    const double C31809 = C31597 * C304;
    const double C32010 = C31597 * C485;
    const double C32006 = C31597 * C474;
    const double C32002 = C31597 * C484;
    const double C31998 = C31597 * C472;
    const double C32189 = C31597 * C646;
    const double C32185 = C31597 * C637;
    const double C32603 = C31597 * C1024;
    const double C32599 = C31597 * C1015;
    const double C33364 = C31597 * C901;
    const double C33360 = C31597 * C887;
    const double C34686 = C31597 * C314;
    const double C34682 = C31597 * C302;
    const double C35102 = C31597 * C774;
    const double C35098 = C31597 * C767;
    const double C35090 = C31597 * C645;
    const double C35086 = C31597 * C635;
    const double C35250 = C31597 * C773;
    const double C35246 = C31597 * C765;
    const double C35472 = C31597 * C902;
    const double C35468 = C31597 * C889;
    const double C35464 = C31597 * C900;
    const double C35460 = C31597 * C885;
    const double C35454 = C31597 * C899;
    const double C35450 = C31597 * C883;
    const double C35888 = C31597 * C1154;
    const double C15476 =
        ((-(0 * be) / C49756) / C49764 -
         ((0 - (C49755 * C49765) / C49756) * be) / C49756) /
            C49764 -
        ((C49755 * ((-C49765 / C49756) / C49764 -
                    ((C50950 - (C49755 * C49769) / C49756) * be) / C49756) +
          C31597) *
         be) /
            C49756 +
        (-C49769 / C49756) / C49764 - (0 * be) / C49756;
    const double C49854 = C49853 / C49756;
    const double C50027 = -C50024;
    const double C50088 = -C50085;
    const double C50116 = C50113 / C49756;
    const double C50314 = C50310 / C49756;
    const double C1042 = C1031 + C1032;
    const double C5705 = C5684 + C5685;
    const double C6297 = C6283 + C6284;
    const double C50017 = C50015 / C49756;
    const double C50100 = C50099 / C49756;
    const double C163 = C50950 * C135;
    const double C5308 = C51068 * C135;
    const double C31627 = C31597 * C135;
    const double C336 = C50950 * C308;
    const double C5506 = C51068 * C308;
    const double C31825 = C31597 * C308;
    const double C500 = C50950 * C476;
    const double C5304 = C50962 * C476;
    const double C5695 = C51068 * C476;
    const double C15507 = C15474 * C476;
    const double C31623 = C50962 * C476;
    const double C32014 = C31597 * C476;
    const double C664 = C50950 * C639;
    const double C5874 = C51068 * C639;
    const double C32193 = C31597 * C639;
    const double C2933 = C50950 * C769;
    const double C1645 = C50950 * C891;
    const double C5498 = C50962 * C891;
    const double C7061 = C51068 * C891;
    const double C15695 = C15474 * C891;
    const double C31817 = C50962 * C891;
    const double C33368 = C31597 * C891;
    const double C1034 = C50950 * C1017;
    const double C5689 = C50962 * C1017;
    const double C6288 = C51068 * C1017;
    const double C15499 = C15475 * C1017;
    const double C15877 = C15474 * C1017;
    const double C32008 = C50962 * C1017;
    const double C32607 = C31597 * C1017;
    const double C38092 = C38068 * C1017;
    const double C3391 = C50950 * C1156;
    const double C7055 = C50962 * C1156;
    const double C15681 = C15475 * C1156;
    const double C17215 = C15474 * C1156;
    const double C29223 = C51068 * C1156;
    const double C33362 = C50962 * C1156;
    const double C35680 = C31597 * C1156;
    const double C38274 = C38068 * C1156;
    const double C8726 = C50950 * C3046;
    const double C13291 = C51068 * C3046;
    const double C44916 = C31597 * C3046;
    const double C8886 = C50950 * C3210;
    const double C13165 = C50962 * C3210;
    const double C13465 = C51068 * C3210;
    const double C18875 = C15474 * C3210;
    const double C35244 = C50962 * C3210;
    const double C45076 = C31597 * C3210;
    const double C9206 = C50950 * C3554;
    const double C13455 = C50962 * C3554;
    const double C13787 = C51068 * C3554;
    const double C18761 = C15475 * C3554;
    const double C19051 = C15474 * C3554;
    const double C35458 = C50962 * C3554;
    const double C45380 = C31597 * C3554;
    const double C47504 = C38068 * C3554;
    const double C50115 = -C50112;
    const double C50627 = C49878 + C50625;
    const double C160 = C117 * C134;
    const double C5311 = C5280 * C134;
    const double C337 = C117 * C309;
    const double C5509 = C5280 * C309;
    const double C501 = C117 * C477;
    const double C5299 = C5281 * C477;
    const double C5698 = C5280 * C477;
    const double C15512 = C15477 * C477;
    const double C31618 = C31600 * C477;
    const double C665 = C117 * C640;
    const double C5877 = C5280 * C640;
    const double C1648 = C117 * C892;
    const double C5501 = C5281 * C892;
    const double C7064 = C5280 * C892;
    const double C15700 = C15477 * C892;
    const double C31820 = C31600 * C892;
    const double C1035 = C117 * C1018;
    const double C5692 = C5281 * C1018;
    const double C6291 = C5280 * C1018;
    const double C15492 = C15478 * C1018;
    const double C15882 = C15477 * C1018;
    const double C32011 = C31600 * C1018;
    const double C6293 = C5281 * C1242;
    const double C15884 = C15478 * C1242;
    const double C32612 = C31600 * C1242;
    const double C1163 =
        (-(C49825 * C49931) / C49689) / C49756 - (C49908 * ce) / C49835 -
        (ae * C49824 * C49992) / C49835 +
        C49824 * (C49824 * ((-(C49825 * C49857) / C49689) / C49756 -
                            (C49913 * ce) / C49835) -
                  (ae * C49992) / C49835);
    const double C768 =
        (-2 * (C49825 * C49959 + C50418 * ce)) / C49689 -
        (C49825 * (C49825 * C49992 + C49959 + C49825 * C49940 * ce)) / C49689 -
        ((C50418 + C49940 * C50011) * ce) / C49689;
    const double C890 =
        -(C49824 * (C49825 * C49992 + C49959 + C49825 * C49940 * ce)) / C49689;
    const double C1157 =
        -(C49992 * C50075 + C49825 * C49959 + C50418 * ce) / C49689;
    const double C6298 = C6285 + C6286;
    const double C50048 = C50047 + C49892;
    const double C50160 = C50155 / C49689;
    const double C50265 = C50263 / C49835;
    const double C50313 = -C50309;
    const double C49996 = C49994 + C49995;
    const double C50427 = C50425 + C50426;
    const double C1158 =
        (C49825 * C49911 + C49824 * (C49824 * C50031 + C50474 * ae) +
         C49824 * C50474 * ae) /
        C49756;
    const double C3671 =
        (2 * (C49824 * C50031 + C50474 * ae) +
         C49824 * (C50031 + C49824 * (C49824 * C49825 * C49924 + C50062 * ae) +
                   C49824 * C50062 * ae) +
         (C50474 + C50062 * C50075) * ae) /
        C49756;
    const double C1152 = C49825 * C50422 + C50474 * C50075;
    const double C3667 =
        2 * C49824 * C50474 + C49824 * (C50474 + C50062 * C50075);
    const double C50525 = C50521 + C50522;
    const double C3233 = C50950 * C893;
    const double C5876 = C50962 * C893;
    const double C32195 = C50962 * C893;
    const double C6290 = C50962 * C1243;
    const double C15879 = C15475 * C1243;
    const double C32609 = C50962 * C1243;
    const double C38472 = C38068 * C1243;
    const double C2932 = C117 * C763;
    const double C3232 = C117 * C880;
    const double C5875 = C5281 * C880;
    const double C32194 = C31600 * C880;
    const double C6289 = C5281 * C1237;
    const double C15878 = C15478 * C1237;
    const double C32608 = C31600 * C1237;
    const double C50597 = C50593 + C50594;
    const double C17217 = C15475 * C3673;
    const double C29225 = C50962 * C3673;
    const double C35682 = C50962 * C3673;
    const double C39798 = C38068 * C3673;
    const double C17216 = C15478 * C3668;
    const double C29224 = C5281 * C3668;
    const double C35681 = C31600 * C3668;
    const double C50056 = C49825 * C50054;
    const double C50172 = -2 * C50054;
    const double C50271 = ae * C50054;
    const double C50269 = C49824 * C50054;
    const double C3672 = (-2 * C49824 * C49992) / C49689 -
                         (C49824 * (C50054 * C50075 + C49992)) / C49689;
    const double C3212 = (C49824 * (2 * C50020 + C49825 * C50026) +
                          (2 * C50471 + C49825 * C50496) * ae) /
                         C49756;
    const double C3556 =
        (C49908 + C49913 * C50011 + C49824 * (C49824 * C50026 + C50496 * ae) +
         C49824 * C50496 * ae) /
        C49756;
    const double C3044 = 3 * (C50418 + C49940 * C50011) +
                         C49825 * (2 * C50471 + C49825 * C50496);
    const double C3208 = C49824 * (2 * C50471 + C49825 * C50496);
    const double C3552 = C50418 + C49940 * C50011 + C50496 * C50075;
    const double C9308 =
        2 * C49824 * C50496 + C49824 * (C50496 + C50153 * C50075);
    const double C6552 =
        (3 * (C49908 + C49824 * C50533 + C50531 * ae) +
         C49824 * (2 * C50533 +
                   C49824 * (C49913 + C49824 * (C49824 * C49919 + C49948 * ae) +
                             C49824 * C49948 * ae) +
                   C50534 * ae) +
         (2 * C50531 + C49824 * C50534) * ae) /
        C49756;
    const double C6547 = 3 * (C50418 + C49940 * C50075) +
                         C49824 * (2 * C50531 + C49824 * C50534);
    const double C50610 = C49824 * C50606;
    const double C50163 = C50159 / C49689;
    const double C50547 = C50545 + C50546;
    const double C50582 = C50578 + C50579;
    const double C13785 = C50962 * C9313;
    const double C19049 = C15475 * C9313;
    const double C45378 = C50962 * C9313;
    const double C47792 = C38068 * C9313;
    const double C13784 = C5281 * C9309;
    const double C19048 = C15478 * C9309;
    const double C45377 = C31600 * C9309;
    const double C13902 =
        (3 * (C50008 + C49824 * C50590 + C50588 * ae) +
         C49824 * (2 * C50590 +
                   C49824 * (C50103 + C49824 * (C49824 * C50194 + C50158 * ae) +
                             C49824 * C50158 * ae) +
                   C50591 * ae) +
         (2 * C50588 + C49824 * C50591) * ae) /
        C49756;
    const double C13898 = 3 * (C50468 + C50044 * C50075) +
                          C49824 * (2 * C50588 + C49824 * C50591);
    const double C50640 = C49824 * C50636;
    const double C50165 = C50164 + C49895;
    const double C50236 = C50229 / C49689;
    const double C50266 = C50264 + C50045;
    const double C50328 = C50325 / C49835;
    const double C50329 = -2 * C50323;
    const double C50327 = ae * C50323;
    const double C50628 = C50624 + C50626;
    const double C50660 = C49881 + C50658;
    const double C49868 = C49867 / C49756;
    const double C50138 = -C50135;
    const double C50287 = -C50282;
    const double C50210 = C50207 / C49756;
    const double C50361 = C50357 / C49756;
    const double C49926 = C49921 + C49925;
    const double C50036 = C49886 + C50034;
    const double C50139 = C49825 * C50136;
    const double C9311 =
        (2 * (C49824 * C50026 + C50496 * ae) +
         C49824 * (C50026 + C49824 * (C49824 * C50136 + C50153 * ae) +
                   C49824 * C50153 * ae) +
         (C50496 + C50153 * C50075) * ae) /
        C49756;
    const double C50211 = C50203 + C50208;
    const double C49981 = C49980 / C49689;
    const double C50063 = C50060 + C50061;
    const double C50079 = C50077 + C49901;
    const double C50182 = C49825 * C50181;
    const double C50272 = C50181 * C50075;
    const double C50289 = C49824 * C50285;
    const double C50242 = C50241 + C49899;
    const double C50330 = C50326 + C50161;
    const double C50362 = C50359 / C49689;
    const double C180 = C170 * C118;
    const double C327 = C170 * C294;
    const double C355 = C345 * C295;
    const double C653 = C345 * C628;
    const double C1360 = C345 * C1356;
    const double C2440 = C345 * C118;
    const double C2600 = C345 * C294;
    const double C515 = C507 * C118;
    const double C1900 = C507 * C294;
    const double C3567 = C50950 * C1162;
    const double C13453 = C50962 * C1162;
    const double C13783 = C51068 * C1162;
    const double C18453 = C15475 * C1162;
    const double C19045 = C15474 * C1162;
    const double C19375 = C15473 * C1162;
    const double C35456 = C50962 * C1162;
    const double C35892 = C31597 * C1162;
    const double C47196 = C38068 * C1162;
    const double C3058 = C117 * C766;
    const double C13166 = C5280 * C766;
    const double C3226 = C117 * C886;
    const double C12856 = C5281 * C886;
    const double C13460 = C5280 * C886;
    const double C18764 = C15477 * C886;
    const double C35091 = C31600 * C886;
    const double C3566 = C117 * C1155;
    const double C13452 = C5281 * C1155;
    const double C13782 = C5280 * C1155;
    const double C18452 = C15478 * C1155;
    const double C19044 = C15477 * C1155;
    const double C35455 = C31600 * C1155;
    const double C13780 = C5281 * C3674;
    const double C19046 = C15478 * C3674;
    const double C19372 = C15477 * C3674;
    const double C35889 = C31600 * C3674;
    const double C676 = C657 + C658;
    const double C5883 = C5869 + C5870;
    const double C1657 = C1642 + C1643;
    const double C5515 = C5491 + C5492;
    const double C7070 = C7056 + C7057;
    const double C675 = C655 + C656;
    const double C5881 = C5865 + C5866;
    const double C2938 = C2924 + C2925;
    const double C13185 = C13174 + C13175;
    const double C1656 = C1638 + C1639;
    const double C5513 = C5487 + C5488;
    const double C7068 = C7052 + C7053;
    const double C3240 = C3228 + C3229;
    const double C5882 = C5867 + C5868;
    const double C14401 = C14394 + C14395;
    const double C1041 = C1029 + C1030;
    const double C5703 = C5680 + C5681;
    const double C6295 = C6279 + C6280;
    const double C6296 = C6281 + C6282;
    const double C3568 = C3564 + C3565;
    const double C13471 = C13448 + C13449;
    const double C13793 = C13778 + C13779;
    const double C13792 = C13776 + C13777;
    const double C182 = C172 * C118;
    const double C333 = C172 * C294;
    const double C357 = C348 * C295;
    const double C661 = C348 * C628;
    const double C1364 = C348 * C1356;
    const double C2442 = C348 * C118;
    const double C2604 = C348 * C294;
    const double C517 = C509 * C118;
    const double C1904 = C509 * C294;
    const double C181 = C171 * C50821;
    const double C328 = C171 * C51053;
    const double C660 = C171 * C622;
    const double C1363 = C171 * C1350;
    const double C183 = C173 * C50821;
    const double C334 = C173 * C51053;
    const double C668 = C173 * C622;
    const double C1367 = C173 * C1350;
    const double C356 = C346 * C50837;
    const double C654 = C346 * C623;
    const double C1361 = C346 * C50837;
    const double C2441 = C346 * C50821;
    const double C2601 = C346 * C51053;
    const double C2921 = C346 * C622;
    const double C3827 = C346 * C1350;
    const double C358 = C349 * C50837;
    const double C662 = C349 * C623;
    const double C1365 = C349 * C50837;
    const double C2443 = C349 * C50821;
    const double C2605 = C349 * C51053;
    const double C2929 = C349 * C622;
    const double C3831 = C349 * C1350;
    const double C516 = C508 * C50821;
    const double C1640 = C508 * C1350;
    const double C1899 = C508 * C51053;
    const double C518 = C510 * C50821;
    const double C1646 = C510 * C1350;
    const double C1903 = C510 * C51053;
    const double C136 = (4 * (2 * C49908 + C49832 * C49911) +
                         C49832 * (3 * C49911 + C49832 * C49916)) /
                        C49756;
    const double C310 = (C49825 * (3 * C49911 + C49832 * C49916)) / C49756;
    const double C478 = (C49824 * (3 * C49911 + C49832 * C49916) +
                         (3 * (C49936 + C49939 * C49841) +
                          C49832 * (2 * C49940 + C49832 * C49945)) *
                             ae) /
                        C49756;
    const double C641 =
        (2 * C49908 + C49832 * C49911 + C49916 * C50011) / C49756;
    const double C8612 = C50950 * C3048;
    const double C50137 = -C50134;
    const double C8718 = (4 * (2 * C50008 + C49825 * C50016) +
                          C49825 * (3 * C50016 + C49825 * C50117)) /
                         C49756;
    const double C50212 = C50209 / C49756;
    const double C49969 = C49968 - C49967;
    const double C16462 = C15478 * C6551;
    const double C50290 = -C50286;
    const double C50318 = C50311 - C50315;
    const double C50363 = C50360 / C49756;
    const double C49999 = C49954 * ce;
    const double C50431 = C49832 * C49954;
    const double C50477 = C49825 * C49954;
    const double C3045 = 3 * (C50422 + C49945 * C50011) +
                         C49825 * (2 * C50474 + C49825 * C50500);
    const double C3209 = C49824 * (2 * C50474 + C49825 * C50500);
    const double C3553 = C50422 + C49945 * C50011 + C50500 * C50075;
    const double C6546 = 3 * (C50422 + C49945 * C50075) +
                         C49824 * (2 * C50523 + C49824 * C50526);
    const double C50180 = C50176 / C49689;
    const double C50552 = C50550 + C50551;
    const double C16615 = 3 * (C50471 + C50053 * C50075) +
                          C49824 * (2 * C50595 + C49824 * C50598);
    const double C50613 = C50609 + C50611;
    const double C50234 = C50226 * ce;
    const double C50568 = C49825 * C50226;
    const double C13897 = 3 * (C50492 + C50149 * C50075) +
                          C49824 * (2 * C50580 + C49824 * C50583);
    const double C50643 = C50639 + C50641;
    const double C50663 = C49824 * C50661;
    const double C51097 = C51041 - C51080;
    const double C51081 = C51043 - C51044;
    const double C51098 = C51048 - C51083;
    const double C51084 = C51050 - C51051;
    const double C51100 = C51061 - C51089;
    const double C51090 = C51064 - C51065;
    const double C51101 = C51069 - C51092;
    const double C51093 = C51072 - C51073;
    const double C49725 = C50821 - C49720;
    const double C1499 = C173 * C51099;
    const double C1493 = C171 * C51099;
    const double C1487 = C169 * C51099;
    const double C3994 = C349 * C51099;
    const double C3988 = C346 * C51099;
    const double C752 = (C51053 - C51085) / C49697 - (C51099 * C50833) / C49689;
    const double C1495 = C349 * C51087;
    const double C1489 = C346 * C51087;
    const double C753 =
        (2 * C50837 + C51099) / C49697 - (C51087 * C50833) / C49689;
    const double C754 = C51087 / C49697 - C50840 / C49718;
    const double C667 = C172 * C627;
    const double C659 = C170 * C627;
    const double C651 = C168 * C627;
    const double C2928 = C348 * C627;
    const double C2920 = C345 * C627;
    const double C49792 = C50950 - C49787;
    const double C15526 = C15500 + C15501;
    const double C15523 = C15494 + C15495;
    const double C15520 = C15488 + C15489;
    const double C15517 = C15482 + C15483;
    const double C15708 = C15688 + C15689;
    const double C15705 = C15682 + C15683;
    const double C15890 = C15870 + C15871;
    const double C15887 = C15864 + C15865;
    const double C16057 = C16046 + C16047;
    const double C16468 = C16460 + C16461;
    const double C16465 = C16454 + C16455;
    const double C18462 = C18454 + C18455;
    const double C18459 = C18448 + C18449;
    const double C18769 = C18758 + C18759;
    const double C19061 = C19038 + C19039;
    const double C19377 = C19366 + C19367;
    const double C15521 = C15490 + C15491;
    const double C15518 = C15484 + C15485;
    const double C15891 = C15872 + C15873;
    const double C15888 = C15866 + C15867;
    const double C18458 = C18446 + C18447;
    const double C19062 = C19040 + C19041;
    const double C31641 = C31616 + C31617;
    const double C31639 = C31612 + C31613;
    const double C31637 = C31608 + C31609;
    const double C31635 = C31604 + C31605;
    const double C31834 = C31810 + C31811;
    const double C31832 = C31806 + C31807;
    const double C32024 = C32003 + C32004;
    const double C32022 = C31999 + C32000;
    const double C32201 = C32186 + C32187;
    const double C32617 = C32604 + C32605;
    const double C32615 = C32600 + C32601;
    const double C34695 = C34683 + C34684;
    const double C34693 = C34679 + C34680;
    const double C35106 = C35087 + C35088;
    const double C35474 = C35451 + C35452;
    const double C35893 = C35885 + C35886;
    const double C38091 = C38071 * C1010;
    const double C38085 = C38071 * C1018;
    const double C38083 = C38071 * C1016;
    const double C38077 = C38071 * C1009;
    const double C38273 = C38071 * C1151;
    const double C38477 = C38071 * C1242;
    const double C38471 = C38071 * C1237;
    const double C38465 = C38071 * C1244;
    const double C38459 = C38071 * C1238;
    const double C39055 = C38071 * C6551;
    const double C39797 = C38071 * C3668;
    const double C47195 = C38071 * C1155;
    const double C47189 = C38071 * C1150;
    const double C47503 = C38071 * C3551;
    const double C47791 = C38071 * C9309;
    const double C47789 = C38071 * C3674;
    const double C47783 = C38071 * C3669;
    const double C38104 = C51102 * C143;
    const double C38098 = C51102 * C132;
    const double C38096 = C51102 * C130;
    const double C38090 = C51102 * C142;
    const double C38080 = C51102 * C141;
    const double C38074 = C51102 * C128;
    const double C38292 = C51102 * C316;
    const double C38286 = C51102 * C306;
    const double C38284 = C51102 * C315;
    const double C38278 = C51102 * C304;
    const double C38474 = C51102 * C485;
    const double C38468 = C51102 * C474;
    const double C38462 = C51102 * C484;
    const double C38456 = C51102 * C472;
    const double C38644 = C51102 * C646;
    const double C38638 = C51102 * C637;
    const double C39052 = C51102 * C1024;
    const double C39046 = C51102 * C1015;
    const double C39800 = C51102 * C901;
    const double C39794 = C51102 * C887;
    const double C47200 = C51102 * C314;
    const double C47194 = C51102 * C302;
    const double C47506 = C51102 * C645;
    const double C47500 = C51102 * C635;
    const double C47626 = C51102 * C773;
    const double C47620 = C51102 * C765;
    const double C47802 = C51102 * C900;
    const double C47796 = C51102 * C885;
    const double C47786 = C51102 * C899;
    const double C47780 = C51102 * C883;
    const double C48118 = C51102 * C1162;
    const double C48112 = C51102 * C1154;
    const double C21007 =
        (C51068 - C51094) / C49764 - (C51102 * C50958) / C49756;
    const double C5332 = C5321 + C5322;
    const double C5331 = C5319 + C5320;
    const double C13160 = C12865 + C12864;
    const double C38100 = C51096 * C476;
    const double C38094 = C51096 * C474;
    const double C38088 = C51096 * C485;
    const double C38082 = C51096 * C484;
    const double C38076 = C51096 * C472;
    const double C38288 = C51096 * C891;
    const double C38282 = C51096 * C901;
    const double C38276 = C51096 * C887;
    const double C38470 = C51096 * C1017;
    const double C38464 = C51096 * C1024;
    const double C38458 = C51096 * C1015;
    const double C38646 = C51096 * C902;
    const double C38640 = C51096 * C889;
    const double C39054 = C51096 * C1250;
    const double C39048 = C51096 * C1245;
    const double C39796 = C51096 * C1156;
    const double C47198 = C51096 * C899;
    const double C47192 = C51096 * C883;
    const double C47508 = C51096 * C900;
    const double C47502 = C51096 * C885;
    const double C47618 = C51096 * C3210;
    const double C47794 = C51096 * C3554;
    const double C47788 = C51096 * C1162;
    const double C47782 = C51096 * C1154;
    const double C48110 = C51096 * C3675;
    const double C21008 =
        (2 * C50962 + C51102) / C49764 - (C51096 * C50958) / C49756;
    const double C21009 = C51096 / C49764 - C50965 / C49785;
    const double C15510 = C15476 * C133;
    const double C15504 = C15476 * C122;
    const double C15502 = C15476 * C121;
    const double C15496 = C15476 * C131;
    const double C15486 = C15476 * C129;
    const double C15480 = C15476 * C120;
    const double C15698 = C15476 * C307;
    const double C15692 = C15476 * C298;
    const double C15690 = C15476 * C305;
    const double C15684 = C15476 * C297;
    const double C15880 = C15476 * C475;
    const double C15874 = C15476 * C467;
    const double C15868 = C15476 * C473;
    const double C15862 = C15476 * C466;
    const double C16050 = C15476 * C638;
    const double C16044 = C15476 * C631;
    const double C16458 = C15476 * C1016;
    const double C16452 = C15476 * C1009;
    const double C17218 = C15476 * C888;
    const double C17212 = C15476 * C877;
    const double C18456 = C15476 * C303;
    const double C18450 = C15476 * C296;
    const double C18762 = C15476 * C636;
    const double C18756 = C15476 * C630;
    const double C18882 = C15476 * C766;
    const double C18876 = C15476 * C761;
    const double C19058 = C15476 * C886;
    const double C19052 = C15476 * C876;
    const double C19042 = C15476 * C884;
    const double C19036 = C15476 * C875;
    const double C19374 = C15476 * C1155;
    const double C19368 = C15476 * C1150;
    const double C49855 = C49854 - C49848;
    const double C50028 = C50027 / C49756;
    const double C50089 = C50088 / C49756;
    const double C50119 = C50116 - C50109;
    const double C50317 = C50314 - C50306;
    const double C1048 = C1042 * C50821;
    const double C50018 = C50017 - C50013;
    const double C50101 = C50100 - C50097;
    const double C175 = C162 + C163;
    const double C5327 = C5307 + C5308;
    const double C351 = C335 + C336;
    const double C5522 = C5505 + C5506;
    const double C511 = C499 + C500;
    const double C5325 = C5303 + C5304;
    const double C5710 = C5694 + C5695;
    const double C15529 = C15506 + C15507;
    const double C31644 = C31622 + C31623;
    const double C677 = C663 + C664;
    const double C5885 = C5873 + C5874;
    const double C1658 = C1644 + C1645;
    const double C5518 = C5497 + C5498;
    const double C7072 = C7060 + C7061;
    const double C15711 = C15694 + C15695;
    const double C31837 = C31816 + C31817;
    const double C1043 = C1033 + C1034;
    const double C5707 = C5688 + C5689;
    const double C6299 = C6287 + C6288;
    const double C15525 = C15498 + C15499;
    const double C15893 = C15876 + C15877;
    const double C32026 = C32007 + C32008;
    const double C3398 = C3390 + C3391;
    const double C7069 = C7054 + C7055;
    const double C15704 = C15680 + C15681;
    const double C17225 = C17214 + C17215;
    const double C29230 = C29222 + C29223;
    const double C33376 = C33361 + C33362;
    const double C8729 = C8725 + C8726;
    const double C13297 = C13290 + C13291;
    const double C8893 = C8885 + C8886;
    const double C13181 = C13164 + C13165;
    const double C13479 = C13464 + C13465;
    const double C18885 = C18874 + C18875;
    const double C35251 = C35243 + C35244;
    const double C9209 = C9205 + C9206;
    const double C13474 = C13454 + C13455;
    const double C13797 = C13786 + C13787;
    const double C18770 = C18760 + C18761;
    const double C19067 = C19050 + C19051;
    const double C35477 = C35457 + C35458;
    const double C50118 = C50115 / C49756;
    const double C50629 = C50627 + C50622;
    const double C174 = C160 + C161;
    const double C5329 = C5311 + C5312;
    const double C3393 = C50950 * C1163;
    const double C7059 = C50962 * C1163;
    const double C15687 = C15475 * C1163;
    const double C17221 = C15474 * C1163;
    const double C29227 = C51068 * C1163;
    const double C33366 = C50962 * C1163;
    const double C35684 = C31597 * C1163;
    const double C38280 = C38068 * C1163;
    const double C39802 = C51096 * C1163;
    const double C2926 = C117 * C768;
    const double C13178 = C5280 * C768;
    const double C3230 = C117 * C890;
    const double C5871 = C5281 * C890;
    const double C14398 = C5280 * C890;
    const double C16052 = C15477 * C890;
    const double C32190 = C31600 * C890;
    const double C3392 = C117 * C1157;
    const double C7058 = C5281 * C1157;
    const double C15686 = C15478 * C1157;
    const double C17220 = C15477 * C1157;
    const double C29226 = C5280 * C1157;
    const double C33365 = C31600 * C1157;
    const double C38279 = C38071 * C1157;
    const double C50049 = C50048 + C50046;
    const double C50316 = C50313 / C49756;
    const double C770 =
        (-2 * (C49825 * C49962 + C50422 * ce)) / C49689 -
        (C49825 * (C49825 * C49996 + C49962 + C49825 * C49945 * ce)) / C49689 -
        ((C50422 + C49945 * C50011) * ce) / C49689;
    const double C894 =
        -(C49824 * (C49825 * C49996 + C49962 + C49825 * C49945 * ce)) / C49689;
    const double C1159 =
        -(C49996 * C50075 + C49825 * C49962 + C50422 * ce) / C49689;
    const double C895 =
        (C49824 * C49825 * C49916 + C49825 * C50427 * ae) / C49756;
    const double C1019 =
        (2 * C49908 + C49832 * C49911 +
         C49824 * (C49824 * C49916 + C50427 * ae) + C49824 * C50427 * ae) /
        C49756;
    const double C124 = 4 * (2 * C50418 + C49832 * C50422) +
                        C49832 * (3 * C50422 + C49832 * C50427);
    const double C300 = C49825 * (3 * C50422 + C49832 * C50427);
    const double C469 = C49824 * (3 * C50422 + C49832 * C50427);
    const double C633 = 2 * C50418 + C49832 * C50422 + C50427 * C50011;
    const double C764 =
        2 * C49825 * C50427 + C49825 * (C50427 + C49954 * C50011);
    const double C881 = C49824 * C49825 * C50427;
    const double C882 = C49824 * (C50427 + C49954 * C50011);
    const double C1011 = 2 * C50418 + C49832 * C50422 + C50427 * C50075;
    const double C1236 =
        2 * C49824 * C50427 + C49824 * (C50427 + C49954 * C50075);
    const double C3395 = C50950 * C1158;
    const double C7063 = C50962 * C1158;
    const double C15697 = C15475 * C1158;
    const double C33370 = C50962 * C1158;
    const double C38290 = C38068 * C1158;
    const double C3394 = C117 * C1152;
    const double C7062 = C5281 * C1152;
    const double C15696 = C15478 * C1152;
    const double C33369 = C31600 * C1152;
    const double C38289 = C38071 * C1152;
    const double C6550 =
        (3 * (C49911 + C49824 * C50525 + C50523 * ae) +
         C49824 * (2 * C50525 +
                   C49824 * (C49886 + C49824 * (C49824 * C49924 + C49952 * ae) +
                             C49824 * C49952 * ae) +
                   C50526 * ae) +
         (2 * C50523 + C49824 * C50526) * ae) /
        C49756;
    const double C2940 = C2932 + C2933;
    const double C3242 = C3232 + C3233;
    const double C5886 = C5875 + C5876;
    const double C32205 = C32194 + C32195;
    const double C6300 = C6289 + C6290;
    const double C15894 = C15878 + C15879;
    const double C32619 = C32608 + C32609;
    const double C16616 =
        (3 * (C50020 + C49824 * C50597 + C50595 * ae) +
         C49824 * (2 * C50597 +
                   C49824 * (C50124 +
                             C49824 * (C49824 * C49825 * C50128 + C50175 * ae) +
                             C49824 * C50175 * ae) +
                   C50598 * ae) +
         (2 * C50595 + C49824 * C50598) * ae) /
        C49756;
    const double C17226 = C17216 + C17217;
    const double C29231 = C29224 + C29225;
    const double C35688 = C35681 + C35682;
    const double C50057 = C50056 + C49964;
    const double C50177 = C50172 / C49689;
    const double C50273 = C50271 / C49835;
    const double C17222 = C15478 * C3672;
    const double C29228 = C5281 * C3672;
    const double C35685 = C31600 * C3672;
    const double C39803 = C38071 * C3672;
    const double C8890 = C50950 * C3212;
    const double C13173 = C50962 * C3212;
    const double C35100 = C50962 * C3212;
    const double C9044 = C50950 * C3556;
    const double C14393 = C50962 * C3556;
    const double C16049 = C15475 * C3556;
    const double C35466 = C50962 * C3556;
    const double C38642 = C38068 * C3556;
    const double C8611 = C117 * C3044;
    const double C8889 = C117 * C3208;
    const double C13172 = C5281 * C3208;
    const double C35099 = C31600 * C3208;
    const double C9043 = C117 * C3552;
    const double C14392 = C5281 * C3552;
    const double C16048 = C15478 * C3552;
    const double C35465 = C31600 * C3552;
    const double C38641 = C38071 * C3552;
    const double C16457 = C15475 * C6552;
    const double C39050 = C38068 * C6552;
    const double C16456 = C15478 * C6547;
    const double C39049 = C38071 * C6547;
    const double C50612 = C49913 + C50610;
    const double C8878 = (C49824 * (3 * C50016 + C49825 * C50117) +
                          (3 * C50492 + C49825 * C50547) * ae) /
                         C49756;
    const double C9198 =
        (2 * C50008 + C49825 * C50016 +
         C49824 * (C49824 * C50117 + C50547 * ae) + C49824 * C50547 * ae) /
        C49756;
    const double C8716 = 4 * (2 * C50468 + C49825 * C50492) +
                         C49825 * (3 * C50492 + C49825 * C50547);
    const double C8876 = C49824 * (3 * C50492 + C49825 * C50547);
    const double C9196 = 2 * C50468 + C49825 * C50492 + C50547 * C50075;
    const double C11617 =
        2 * C49824 * C50547 + C49824 * (C50547 + C50226 * C50075);
    const double C13900 =
        (3 * (C50016 + C49824 * C50582 + C50580 * ae) +
         C49824 * (2 * C50582 +
                   C49824 * (C50111 + C49824 * (C49824 * C50204 + C50224 * ae) +
                             C49824 * C50224 * ae) +
                   C50583 * ae) +
         (2 * C50580 + C49824 * C50583) * ae) /
        C49756;
    const double C13796 = C13784 + C13785;
    const double C19066 = C19048 + C19049;
    const double C45385 = C45377 + C45378;
    const double C19365 = C15475 * C13902;
    const double C48108 = C38068 * C13902;
    const double C19364 = C15478 * C13898;
    const double C48107 = C38071 * C13898;
    const double C50642 = C50103 + C50640;
    const double C50166 = C50165 + C50162;
    const double C13901 =
        (-3 * (C50045 * C50075 + C49988)) / C49689 +
        C49824 * ((-2 * C50261) / C49689 - (C49824 * C50266) / C49689);
    const double C50333 = C50329 / C49689;
    const double C50331 = C50327 / C49835;
    const double C16718 = 4 * (2 * C50539 + C49824 * C50542) +
                          C49824 * (3 * C50542 + C49824 * C50628);
    const double C50662 = C50660 + C50655;
    const double C49869 = C49868 - C49860;
    const double C50141 = C50138 / C49756;
    const double C50291 = C50287 / C49756;
    const double C50213 = C50210 - C50202;
    const double C50364 = C50361 - C50351;
    const double C49927 = C49832 * C49926;
    const double C771 =
        (2 * C49825 * C49916 + C49825 * (C49916 + C49926 * C50011)) / C49756;
    const double C897 = (C49824 * (C49916 + C49926 * C50011) +
                         (C50427 + C49954 * C50011) * ae) /
                        C49756;
    const double C1241 =
        (2 * (C49824 * C49916 + C50427 * ae) +
         C49824 * (C49916 + C49824 * (C49824 * C49926 + C49954 * ae) +
                   C49824 * C49954 * ae) +
         (C50427 + C49954 * C50075) * ae) /
        C49756;
    const double C3050 = (3 * (C49911 + C49886 * C50011) +
                          C49825 * (2 * C50031 + C49825 * C50036)) /
                         C49756;
    const double C3214 = (C49824 * (2 * C50031 + C49825 * C50036) +
                          (2 * C50474 + C49825 * C50500) * ae) /
                         C49756;
    const double C3558 =
        (C49911 + C49886 * C50011 + C49824 * (C49824 * C50036 + C50500 * ae) +
         C49824 * C50500 * ae) /
        C49756;
    const double C50142 = C50132 + C50139;
    const double C50214 = C49825 * C50211;
    const double C11619 =
        (2 * (C49824 * C50117 + C50547 * ae) +
         C49824 * (C50117 + C49824 * (C49824 * C50211 + C50226 * ae) +
                   C49824 * C50226 * ae) +
         (C50547 + C50226 * C50075) * ae) /
        C49756;
    const double C49982 = C49977 - C49981;
    const double C50065 = C49825 * C50063;
    const double C3670 = (-2 * C49824 * C49996) / C49689 -
                         (C49824 * (C50063 * C50075 + C49996)) / C49689;
    const double C6549 =
        (-3 * (C49901 * C50075 + C49962)) / C49689 +
        C49824 * ((-2 * C50072) / C49689 - (C49824 * C50079) / C49689);
    const double C50183 = C50182 + C49972;
    const double C50274 = C50272 + C50054;
    const double C50292 = C50289 / C49689;
    const double C50243 = C50242 + C50238;
    const double C50334 = C49824 * C50330;
    const double C50365 = C50358 - C50362;
    const double C3061 = C3058 + C3059;
    const double C13182 = C13166 + C13167;
    const double C3239 = C3226 + C3227;
    const double C12866 = C12856 + C12857;
    const double C13477 = C13460 + C13461;
    const double C18772 = C18764 + C18765;
    const double C35108 = C35091 + C35092;
    const double C3569 = C3566 + C3567;
    const double C13473 = C13452 + C13453;
    const double C13795 = C13782 + C13783;
    const double C18461 = C18452 + C18453;
    const double C19064 = C19044 + C19045;
    const double C35476 = C35455 + C35456;
    const double C682 = C676 * C624;
    const double C1491 = C676 * C1479;
    const double C2603 = C676 * C50837;
    const double C2923 = C676 * C623;
    const double C3829 = C676 * C50837;
    const double C3990 = C676 * C51087;
    const double C8152 = C676 * C50821;
    const double C8304 = C676 * C51053;
    const double C8608 = C676 * C622;
    const double C9464 = C676 * C1350;
    const double C9618 = C676 * C51099;
    const double C1663 = C1657 * C50837;
    const double C1901 = C1657 * C50837;
    const double C2764 = C1657 * C50821;
    const double C4194 = C1657 * C1350;
    const double C4542 = C1657 * C51053;
    const double C28311 = C5516 + C5515;
    const double C28309 = C5515 + C5516;
    const double C681 = C675 * C629;
    const double C1490 = C675 * C1484;
    const double C2602 = C675 * C295;
    const double C2922 = C675 * C628;
    const double C3828 = C675 * C1356;
    const double C8151 = C675 * C118;
    const double C8303 = C675 * C294;
    const double C8607 = C675 * C627;
    const double C2942 = C2938 * C629;
    const double C3991 = C2938 * C1484;
    const double C8305 = C2938 * C295;
    const double C8609 = C2938 * C628;
    const double C9465 = C2938 * C1356;
    const double C1662 = C1656 * C1356;
    const double C1898 = C1656 * C295;
    const double C2763 = C1656 * C118;
    const double C4543 = C1656 * C294;
    const double C28310 = C5514 + C5513;
    const double C28308 = C5513 + C5514;
    const double C4193 = C3240 * C1356;
    const double C4541 = C3240 * C295;
    const double C8457 = C3240 * C118;
    const double C10163 = C3240 * C294;
    const double C13170 = C5882 + C5881;
    const double C28702 = C5881 + C5882;
    const double C1047 = C1041 * C118;
    const double C188 = C180 + C181;
    const double C347 = C327 + C328;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C350 = C333 + C334;
    const double C2448 = C2442 + C2443;
    const double C2614 = C2604 + C2605;
    const double C524 = C518 + C517;
    const double C165 = C50950 * C136;
    const double C340 = C50950 * C310;
    const double C504 = C50950 * C478;
    const double C5310 = C50962 * C478;
    const double C31629 = C50962 * C478;
    const double C672 = C50950 * C641;
    const double C50140 = C50137 / C49756;
    const double C11233 = C50950 * C8718;
    const double C50215 = C50212 - C49860;
    const double C137 =
        4 * ((-2 * C49959) / C49689 - (C49832 * C49962) / C49689) +
        C49832 * ((-3 * C49962) / C49689 + C49832 * C49969);
    const double C311 = C49825 * ((-3 * C49962) / C49689 + C49832 * C49969) -
                        ((3 * (C49936 + C49939 * C49841) +
                          C49832 * (2 * C49940 + C49832 * C49945)) *
                         ce) /
                            C49689;
    const double C479 = C49824 * ((-3 * C49962) / C49689 + C49832 * C49969);
    const double C642 = (-2 * C49959) / C49689 - (C49832 * C49962) / C49689 +
                        C49825 * (C49825 * C49969 - (C50427 * ce) / C49689) -
                        (C49825 * C50427 * ce) / C49689;
    const double C896 = C49824 * (C49825 * C49969 - (C50427 * ce) / C49689);
    const double C1020 =
        (-2 * C49959) / C49689 - (C49832 * C49962) / C49689 + C49969 * C50075;
    const double C50293 = C50290 / C49756;
    const double C16721 =
        4 * ((-2 * C50092) / C49689 - (C49824 * C50098) / C49689) +
        C49824 * ((-3 * C50098) / C49689 + C49824 * C50318);
    const double C50366 = C50363 - C49860;
    const double C50000 = C49999 / C49689;
    const double C50432 = C50430 + C50431;
    const double C1160 =
        (C49825 * C49916 + C49824 * (C49824 * C49825 * C49926 + C50477 * ae) +
         C49824 * C50477 * ae) /
        C49756;
    const double C1153 = C49825 * C50427 + C50477 * C50075;
    const double C8717 = 4 * (2 * C50471 + C49825 * C50496) +
                         C49825 * (3 * C50496 + C49825 * C50552);
    const double C8877 = C49824 * (3 * C50496 + C49825 * C50552);
    const double C9197 = 2 * C50471 + C49825 * C50496 + C50552 * C50075;
    const double C16717 = 4 * (2 * C50531 + C49824 * C50534) +
                          C49824 * (3 * C50534 + C49824 * C50613);
    const double C50240 = C50234 / C49689;
    const double C50569 = C50567 + C50568;
    const double C19479 = 4 * (2 * C50588 + C49824 * C50591) +
                          C49824 * (3 * C50591 + C49824 * C50643);
    const double C50665 = C50653 + C50663;
    const double C107 = (C51039 - C51079) / C49764 - (C51097 * C50761) / C49756;
    const double C108 =
        (2 * C50770 + C51097) / C49764 - (C51081 * C50761) / C49756;
    const double C109 = C51081 / C49764 - C50773 / C49785;
    const double C112 = (C51046 - C51082) / C49697 - (C51098 * C50783) / C49689;
    const double C113 =
        (2 * C50792 + C51098) / C49697 - (C51084 * C50783) / C49689;
    const double C114 = C51084 / C49697 - C50795 / C49718;
    const double C1232 =
        (C51055 - C51088) / C49697 - (C51100 * C50859) / C49689;
    const double C1233 =
        (2 * C50863 + C51100) / C49697 - (C51090 * C50859) / C49689;
    const double C1234 = C51090 / C49697 - C50866 / C49718;
    const double C10863 =
        (C51067 - C51091) / C49764 - (C51101 * C50934) / C49756;
    const double C10864 =
        (2 * C50938 + C51101) / C49764 - (C51093 * C50934) / C49756;
    const double C10865 = C51093 / C49764 - C50941 / C49785;
    const double C49729 = C49725 * ce;
    const double C1355 = (-C49698 / C49689) / C49697 - (C49725 * de) / C49689;
    const double C49796 = C49792 * ae;
    const double C31599 = (-C49765 / C49756) / C49764 - (C49792 * be) / C49756;
    const double C38118 = C38091 + C38092;
    const double C38114 = C38083 + C38084;
    const double C38111 = C38077 + C38078;
    const double C38297 = C38273 + C38274;
    const double C38487 = C38471 + C38472;
    const double C38484 = C38465 + C38466;
    const double C38481 = C38459 + C38460;
    const double C39807 = C39797 + C39798;
    const double C47204 = C47195 + C47196;
    const double C47201 = C47189 + C47190;
    const double C47513 = C47503 + C47504;
    const double C47809 = C47791 + C47792;
    const double C47805 = C47783 + C47784;
    const double C5336 = C5332 * C50821;
    const double C5496 = C5332 * C51053;
    const double C6706 = C5332 * C1350;
    const double C5335 = C5331 * C118;
    const double C5495 = C5331 * C294;
    const double C15531 = C15510 + C15511;
    const double C15528 = C15504 + C15505;
    const double C15527 = C15502 + C15503;
    const double C15524 = C15496 + C15497;
    const double C15519 = C15486 + C15487;
    const double C15516 = C15480 + C15481;
    const double C15713 = C15698 + C15699;
    const double C15710 = C15692 + C15693;
    const double C15709 = C15690 + C15691;
    const double C15706 = C15684 + C15685;
    const double C15895 = C15880 + C15881;
    const double C15892 = C15874 + C15875;
    const double C15889 = C15868 + C15869;
    const double C15886 = C15862 + C15863;
    const double C16059 = C16050 + C16051;
    const double C16056 = C16044 + C16045;
    const double C16467 = C16458 + C16459;
    const double C16464 = C16452 + C16453;
    const double C17227 = C17218 + C17219;
    const double C17224 = C17212 + C17213;
    const double C18463 = C18456 + C18457;
    const double C18460 = C18450 + C18451;
    const double C18771 = C18762 + C18763;
    const double C18768 = C18756 + C18757;
    const double C18889 = C18882 + C18883;
    const double C18886 = C18876 + C18877;
    const double C19071 = C19058 + C19059;
    const double C19068 = C19052 + C19053;
    const double C19063 = C19042 + C19043;
    const double C19060 = C19036 + C19037;
    const double C19381 = C19374 + C19375;
    const double C19378 = C19368 + C19369;
    const double C145 =
        4 * ((-2 * C49832 * C49844) / C49835 + C49832 * C49855) +
        C49832 * (3 * C49855 + C49832 * ((-2 * C49832 * C49850) / C49835 +
                                         C49832 * ((-(std::pow(C49839, 7) *
                                                      bs[7] * C49830 * C49841) /
                                                    C49689) /
                                                       C49756 -
                                                   C49850 / C49835)));
    const double C317 =
        C49825 * ((-2 * C49832 * C49844) / C49835 + C49832 * C49855) -
        ((2 * C49832 * C49878 +
          C49832 * (C49878 + C49842 * C49840 * C49875 * C49841)) *
         ce) /
            C49835;
    const double C486 =
        (((-2 * C49832 * C49892) / C49689 -
          (C49832 * (C49842 * C49840 * C49889 * C49841 + C49892)) / C49689) *
         ae) /
            C49756 +
        C49824 * ((-2 * C49832 * C49844) / C49835 + C49832 * C49855);
    const double C647 = (-(C49844 * C49841) / C49689) / C49756 -
                        C49837 / C49835 - (C49825 * C49911 * ce) / C49835 +
                        C49825 * (C49825 * C49855 - (C49911 * ce) / C49835);
    const double C903 = C49824 * (C49825 * C49855 - (C49911 * ce) / C49835) -
                        (ae * (C49825 * (C49895 * C49841 + C49892) +
                               (C49936 + C49939 * C49841) * ce)) /
                            C49835;
    const double C1025 = (-(C49844 * C49841) / C49689) / C49756 -
                         C49837 / C49835 - (ae * C49824 * C49962) / C49835 +
                         C49824 * (C49824 * C49855 - (ae * C49962) / C49835);
    const double C50029 = C50028 - C50025;
    const double C50090 = C50089 - C50086;
    const double C50121 = C49825 * C50119;
    const double C50192 = 2 * C50119;
    const double C50262 = C49824 * C50119;
    const double C50320 = C49824 * C50317;
    const double C50341 = 2 * C50317;
    const double C3052 =
        3 * ((-(C50008 * ce) / C49689) / C49756 - C49837 / C49835 +
             C49825 * C50018) -
        ((2 * C50008 + C49825 * C50016) * ce) / C49835 +
        C49825 *
            (2 * C50018 - (C50016 * ce) / C49835 +
             C49825 * ((-(C49825 * C49881 * ce) / C49689) / C49756 - C49848 +
                       C49825 * ((-(C49825 * C49850) / C49689) / C49756 -
                                 (C49881 * ce) / C49835)));
    const double C3216 =
        (((-2 * C49988) / C49689 -
          (C49825 * (C49825 * (C49825 * C49895 + C49939 * ce) + C49892 +
                     C49825 * C49939 * ce)) /
              C49689 -
          ((C49936 + C49939 * C50011) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 *
            (2 * C50018 - (C50016 * ce) / C49835 +
             C49825 * ((-(C49825 * C49881 * ce) / C49689) / C49756 - C49848 +
                       C49825 * ((-(C49825 * C49850) / C49689) / C49756 -
                                 (C49881 * ce) / C49835)));
    const double C3678 =
        2 * (C49824 * C50018 - (ae * C49988) / C49835) -
        (ae * (C50045 * std::pow(C49824, 2) + C49988)) / C49835 +
        C49824 * (C50018 - (ae * C49824 * C50045) / C49835 +
                  C49824 * (C49824 * ((-(C49825 * C49850) / C49689) / C49756 -
                                      (C49881 * ce) / C49835) -
                            (ae * C50045) / C49835));
    const double C6557 =
        3 * ((-(ae * C50092) / C49689) / C49756 - C49837 / C49835 +
             C49824 * C50101) +
        (((-2 * C50092) / C49689 - (C49824 * C50098) / C49689) * ae) / C49756 +
        C49824 *
            (2 * C50101 - (ae * C50098) / C49835 +
             C49824 * ((-(ae * C49824 * C49895) / C49689) / C49756 - C49848 +
                       C49824 * ((-(C49824 * C49850) / C49689) / C49756 -
                                 (ae * C49895) / C49835)));
    const double C185 = C175 * C118;
    const double C342 = C175 * C294;
    const double C359 = C351 * C295;
    const double C669 = C351 * C628;
    const double C1368 = C351 * C1356;
    const double C2445 = C351 * C118;
    const double C2610 = C351 * C294;
    const double C519 = C511 * C118;
    const double C1908 = C511 * C294;
    const double C5334 = C5325 + C5326;
    const double C683 = C677 * C629;
    const double C1496 = C677 * C1484;
    const double C2606 = C677 * C295;
    const double C2930 = C677 * C628;
    const double C3832 = C677 * C1356;
    const double C8154 = C677 * C118;
    const double C8309 = C677 * C294;
    const double C1664 = C1658 * C1356;
    const double C1902 = C1658 * C295;
    const double C2765 = C1658 * C118;
    const double C4547 = C1658 * C294;
    const double C5526 = C5518 + C5519;
    const double C28312 = C5519 + C5518;
    const double C1049 = C1043 * C118;
    const double C5715 = C5707 + C5706;
    const double C3402 = C3398 * C118;
    const double C30207 = C7069 + C7068;
    const double C30204 = C7068 + C7069;
    const double C13286 = C13181 + C13180;
    const double C13482 = C13474 + C13475;
    const double C50120 = C50118 - C49848;
    const double C16722 =
        (4 * (2 * C50541 + C49824 * C50629 + C50542 * ae) +
         C49824 *
             (3 * C50629 +
              C49824 *
                  (2 * C50621 +
                   C49824 * (C49881 + C49824 * (C49824 * C49884 + C49943 * ae) +
                             C49824 * C49943 * ae) +
                   C50623 * ae) +
              C50628 * ae) +
         (3 * C50542 + C49824 * C50628) * ae) /
        C49756;
    const double C184 = C174 * C50821;
    const double C341 = C174 * C51053;
    const double C1371 = C174 * C1350;
    const double C2939 = C2926 + C2927;
    const double C13187 = C13178 + C13179;
    const double C3241 = C3230 + C3231;
    const double C5884 = C5871 + C5872;
    const double C14403 = C14398 + C14399;
    const double C16060 = C16052 + C16053;
    const double C32203 = C32190 + C32191;
    const double C3399 = C3392 + C3393;
    const double C7071 = C7058 + C7059;
    const double C15707 = C15686 + C15687;
    const double C17228 = C17220 + C17221;
    const double C29232 = C29226 + C29227;
    const double C33378 = C33365 + C33366;
    const double C38300 = C38279 + C38280;
    const double C3560 =
        (-(C50008 * ce) / C49689) / C49756 - C49837 / C49835 + C49825 * C50018 -
        (ae * C49824 * C50049) / C49835 +
        C49824 *
            (C49824 * ((-(C49825 * C49881 * ce) / C49689) / C49756 - C49848 +
                       C49825 * ((-(C49825 * C49850) / C49689) / C49756 -
                                 (C49881 * ce) / C49835)) -
             (ae * C50049) / C49835);
    const double C3047 =
        (-3 * (C49825 * C49988 + C49957 + C50468 * ce)) / C49689 +
        C49825 * ((-2 * C49988) / C49689 - (C49825 * C50049) / C49689 -
                  (C50492 * ce) / C49689) -
        ((2 * C50468 + C49825 * C50492) * ce) / C49689;
    const double C3211 =
        C49824 * ((-2 * C49988) / C49689 - (C49825 * C50049) / C49689 -
                  (C50492 * ce) / C49689);
    const double C3555 =
        -(C50049 * C50075 + C49825 * C49988 + C49957 + C50468 * ce) / C49689;
    const double C50319 = C50316 - C49848;
    const double C2934 = C117 * C770;
    const double C3234 = C117 * C894;
    const double C5879 = C5281 * C894;
    const double C32198 = C31600 * C894;
    const double C3396 = C117 * C1159;
    const double C7066 = C5281 * C1159;
    const double C15702 = C15478 * C1159;
    const double C33373 = C31600 * C1159;
    const double C38295 = C38071 * C1159;
    const double C1651 = C50950 * C895;
    const double C5508 = C50962 * C895;
    const double C31827 = C50962 * C895;
    const double C1038 = C50950 * C1019;
    const double C5697 = C50962 * C1019;
    const double C15509 = C15475 * C1019;
    const double C32016 = C50962 * C1019;
    const double C38102 = C38068 * C1019;
    const double C164 = C117 * C124;
    const double C339 = C117 * C300;
    const double C503 = C117 * C469;
    const double C5309 = C5281 * C469;
    const double C31628 = C31600 * C469;
    const double C671 = C117 * C633;
    const double C1650 = C117 * C881;
    const double C5507 = C5281 * C881;
    const double C31826 = C31600 * C881;
    const double C1037 = C117 * C1011;
    const double C5696 = C5281 * C1011;
    const double C15508 = C15478 * C1011;
    const double C32015 = C31600 * C1011;
    const double C38101 = C38071 * C1011;
    const double C3400 = C3394 + C3395;
    const double C7073 = C7062 + C7063;
    const double C15712 = C15696 + C15697;
    const double C33380 = C33369 + C33370;
    const double C38305 = C38289 + C38290;
    const double C2944 = C2940 * C629;
    const double C3997 = C2940 * C1484;
    const double C8307 = C2940 * C295;
    const double C9467 = C2940 * C1356;
    const double C4197 = C3242 * C1356;
    const double C4545 = C3242 * C295;
    const double C8459 = C3242 * C118;
    const double C50058 = C50057 + C50055;
    const double C8615 = C8611 + C8612;
    const double C8895 = C8889 + C8890;
    const double C13184 = C13172 + C13173;
    const double C35110 = C35099 + C35100;
    const double C9047 = C9043 + C9044;
    const double C14400 = C14392 + C14393;
    const double C16058 = C16048 + C16049;
    const double C35481 = C35465 + C35466;
    const double C38651 = C38641 + C38642;
    const double C16466 = C16456 + C16457;
    const double C39059 = C39049 + C39050;
    const double C50614 = C50612 + C50607;
    const double C11341 = C50950 * C8878;
    const double C13289 = C50962 * C8878;
    const double C44914 = C50962 * C8878;
    const double C11547 = C50950 * C9198;
    const double C13463 = C50962 * C9198;
    const double C18873 = C15475 * C9198;
    const double C45074 = C50962 * C9198;
    const double C47616 = C38068 * C9198;
    const double C11232 = C117 * C8716;
    const double C11340 = C117 * C8876;
    const double C13288 = C5281 * C8876;
    const double C44913 = C31600 * C8876;
    const double C11546 = C117 * C9196;
    const double C13462 = C5281 * C9196;
    const double C18872 = C15478 * C9196;
    const double C45073 = C31600 * C9196;
    const double C47615 = C38071 * C9196;
    const double C19376 = C19364 + C19365;
    const double C48119 = C48107 + C48108;
    const double C50644 = C50642 + C50637;
    const double C50167 = C49825 * C50166;
    const double C50228 = -3 * C50166;
    const double C50255 = ae * C50166;
    const double C50253 = C49824 * C50166;
    const double C9312 = (-2 * C49824 * C50049) / C49689 -
                         (C49824 * (C50166 * C50075 + C50049)) / C49689;
    const double C19370 = C15478 * C13901;
    const double C48113 = C38071 * C13901;
    const double C50335 = C50119 - C50331;
    const double C50664 = C49824 * C50662;
    const double C49870 = C49832 * C49869;
    const double C50032 = C49825 * C49869;
    const double C50073 = C49824 * C49869;
    const double C775 =
        2 * (C49825 * C49855 - (C49911 * ce) / C49835) -
        ((C49911 + C49886 * std::pow(C49825, 2)) * ce) / C49835 +
        C49825 * (C49855 - (C49825 * C49886 * ce) / C49835 +
                  C49825 * (C49825 * C49869 - (C49886 * ce) / C49835));
    const double C904 =
        C49824 * (C49855 - (C49825 * C49886 * ce) / C49835 +
                  C49825 * (C49825 * C49869 - (C49886 * ce) / C49835)) -
        (ae * (C49825 * (C49825 * C49901 + C49945 * ce) + C49895 * C49841 +
               C49892 + C49825 * C49945 * ce)) /
            C49835;
    const double C1164 =
        C49825 * C49855 - (C49911 * ce) / C49835 -
        (ae * C49824 * C49996) / C49835 +
        C49824 * (C49824 * (C49825 * C49869 - (C49886 * ce) / C49835) -
                  (ae * C49996) / C49835);
    const double C1249 =
        2 * (C49824 * C49855 - (ae * C49962) / C49835) -
        (ae * (C49901 * std::pow(C49824, 2) + C49962)) / C49835 +
        C49824 * (C49855 - (ae * C49824 * C49901) / C49835 +
                  C49824 * (C49824 * C49869 - (ae * C49901) / C49835));
    const double C50144 = C50141 - C50131;
    const double C50294 = C50291 - C50283;
    const double C50216 = C49825 * C50213;
    const double C50324 = C49824 * C50213;
    const double C50367 = C49824 * C50364;
    const double C49928 = C49918 + C49927;
    const double C8720 = (4 * (2 * C50020 + C49825 * C50026) +
                          C49825 * (3 * C50026 + C49825 * C50142)) /
                         C49756;
    const double C8880 = (C49824 * (3 * C50026 + C49825 * C50142) +
                          (3 * C50496 + C49825 * C50552) * ae) /
                         C49756;
    const double C9200 =
        (2 * C50020 + C49825 * C50026 +
         C49824 * (C49824 * C50142 + C50552 * ae) + C49824 * C50552 * ae) /
        C49756;
    const double C50217 = C50197 + C50214;
    const double C49983 = C49832 * C49982;
    const double C49998 = C49825 * C49982;
    const double C1240 =
        2 * C49824 * C49969 + C49824 * (C49969 + C49982 * C50075);
    const double C50066 = C50065 + C49901;
    const double C50184 = C50183 + C50179;
    const double C16617 =
        (-3 * (C50054 * C50075 + C49992)) / C49689 +
        C49824 * ((-2 * C50269) / C49689 - (C49824 * C50274) / C49689);
    const double C50295 = C50288 - C50292;
    const double C50244 = C49825 * C50243;
    const double C50256 = C50243 * C50075;
    const double C50337 = C50334 / C49689;
    const double C50368 = C49824 * C50365;
    const double C13161 = C12867 + C12866;
    const double C363 = C347 - C357;
    const double C50143 = C50140 - C50125;
    const double C166 = C117 * C137;
    const double C343 = C117 * C311;
    const double C505 = C117 * C479;
    const double C5313 = C5281 * C479;
    const double C31632 = C31600 * C479;
    const double C673 = C117 * C642;
    const double C1654 = C117 * C896;
    const double C5511 = C5281 * C896;
    const double C31830 = C31600 * C896;
    const double C1039 = C117 * C1020;
    const double C5700 = C5281 * C1020;
    const double C15514 = C15478 * C1020;
    const double C32019 = C31600 * C1020;
    const double C38107 = C38071 * C1020;
    const double C50296 = C50293 - C50125;
    const double C125 = 5 * (3 * C50422 + C49832 * C50427) +
                        C49832 * (4 * C50427 + C49832 * C50432);
    const double C301 = C49825 * (4 * C50427 + C49832 * C50432);
    const double C471 = C49824 * (4 * C50427 + C49832 * C50432);
    const double C634 = 3 * C50422 + C49832 * C50427 + C50432 * C50011;
    const double C1012 = 3 * C50422 + C49832 * C50427 + C50432 * C50075;
    const double C1633 = C49824 * C49825 * C50432;
    const double C11227 = 5 * (3 * C50492 + C49825 * C50547) +
                          C49825 * (4 * C50547 + C49825 * C50569);
    const double C11335 = C49824 * (4 * C50547 + C49825 * C50569);
    const double C11541 = 3 * C50492 + C49825 * C50547 + C50569 * C50075;
    const double C21735 = 5 * (3 * C50542 + C49824 * C50628) +
                          C49824 * (4 * C50628 + C49824 * C50665);
    const double C49731 = C49729 / C49689;
    const double C1372 = C175 * C1355;
    const double C1366 = C172 * C1355;
    const double C1362 = C170 * C1355;
    const double C1358 = C168 * C1355;
    const double C1653 = C511 * C1355;
    const double C1647 = C509 * C1355;
    const double C1641 = C507 * C1355;
    const double C3836 = C351 * C1355;
    const double C3830 = C348 * C1355;
    const double C3826 = C345 * C1355;
    const double C4199 = C1658 * C1355;
    const double C4195 = C1656 * C1355;
    const double C6705 = C5331 * C1355;
    const double C9469 = C677 * C1355;
    const double C9463 = C675 * C1355;
    const double C9819 = C3240 * C1355;
    const double C49798 = C49796 / C49756;
    const double C31630 = C31599 * C134;
    const double C31626 = C31599 * C123;
    const double C31624 = C31599 * C122;
    const double C31620 = C31599 * C133;
    const double C31614 = C31599 * C131;
    const double C31610 = C31599 * C121;
    const double C31606 = C31599 * C129;
    const double C31602 = C31599 * C120;
    const double C31828 = C31599 * C309;
    const double C31824 = C31599 * C299;
    const double C31822 = C31599 * C307;
    const double C31818 = C31599 * C298;
    const double C31812 = C31599 * C305;
    const double C31808 = C31599 * C297;
    const double C32017 = C31599 * C477;
    const double C32013 = C31599 * C468;
    const double C32009 = C31599 * C475;
    const double C32005 = C31599 * C467;
    const double C32001 = C31599 * C473;
    const double C31997 = C31599 * C466;
    const double C32196 = C31599 * C640;
    const double C32192 = C31599 * C632;
    const double C32188 = C31599 * C638;
    const double C32184 = C31599 * C631;
    const double C32610 = C31599 * C1018;
    const double C32606 = C31599 * C1010;
    const double C32602 = C31599 * C1016;
    const double C32598 = C31599 * C1009;
    const double C33371 = C31599 * C892;
    const double C33367 = C31599 * C879;
    const double C33363 = C31599 * C888;
    const double C33359 = C31599 * C877;
    const double C34685 = C31599 * C303;
    const double C34681 = C31599 * C296;
    const double C35101 = C31599 * C768;
    const double C35097 = C31599 * C762;
    const double C35089 = C31599 * C636;
    const double C35085 = C31599 * C630;
    const double C35249 = C31599 * C766;
    const double C35245 = C31599 * C761;
    const double C35471 = C31599 * C890;
    const double C35467 = C31599 * C878;
    const double C35463 = C31599 * C886;
    const double C35459 = C31599 * C876;
    const double C35453 = C31599 * C884;
    const double C35449 = C31599 * C875;
    const double C35683 = C31599 * C1157;
    const double C35679 = C31599 * C1151;
    const double C35891 = C31599 * C1155;
    const double C35887 = C31599 * C1150;
    const double C44915 = C31599 * C3043;
    const double C45075 = C31599 * C3207;
    const double C45379 = C31599 * C3551;
    const double C5339 = C5335 + C5336;
    const double C5517 = C5495 + C5496;
    const double C167 = C50950 * C145;
    const double C338 = C50950 * C317;
    const double C5510 = C51068 * C317;
    const double C31829 = C31597 * C317;
    const double C502 = C50950 * C486;
    const double C5300 = C50962 * C486;
    const double C5699 = C51068 * C486;
    const double C15513 = C15474 * C486;
    const double C31619 = C50962 * C486;
    const double C32018 = C31597 * C486;
    const double C38106 = C51096 * C486;
    const double C666 = C50950 * C647;
    const double C5878 = C51068 * C647;
    const double C32197 = C31597 * C647;
    const double C1649 = C50950 * C903;
    const double C5502 = C50962 * C903;
    const double C7065 = C51068 * C903;
    const double C15701 = C15474 * C903;
    const double C31821 = C50962 * C903;
    const double C33372 = C31597 * C903;
    const double C38294 = C51096 * C903;
    const double C1036 = C50950 * C1025;
    const double C5693 = C50962 * C1025;
    const double C6292 = C51068 * C1025;
    const double C15493 = C15475 * C1025;
    const double C15883 = C15474 * C1025;
    const double C32012 = C50962 * C1025;
    const double C32611 = C31597 * C1025;
    const double C38086 = C38068 * C1025;
    const double C38476 = C51096 * C1025;
    const double C3053 =
        3 * ((-(C50020 * ce) / C49689) / C49756 - C49931 / C49835 +
             C49825 * C50029) -
        ((2 * C50020 + C49825 * C50026) * ce) / C49835 +
        C49825 * (2 * C50029 - (C50026 * ce) / C49835 +
                  C49825 * ((-(C49825 * C49919 * ce) / C49689) / C49756 -
                            C49857 / C49835 +
                            C49825 * ((-(C49825 * C49832 * C49864) / C49689) /
                                          C49756 -
                                      (C49919 * ce) / C49835)));
    const double C3217 =
        (((-2 * C49992) / C49689 -
          (C49825 * (C49825 * (C49825 * C49972 + C49948 * ce) + C49964 +
                     C49825 * C49948 * ce)) /
              C49689 -
          ((C49940 + C49948 * C50011) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 * (2 * C50029 - (C50026 * ce) / C49835 +
                  C49825 * ((-(C49825 * C49919 * ce) / C49689) / C49756 -
                            C49857 / C49835 +
                            C49825 * ((-(C49825 * C49832 * C49864) / C49689) /
                                          C49756 -
                                      (C49919 * ce) / C49835)));
    const double C3677 =
        2 * (C49824 * C50029 - (ae * C49992) / C49835) -
        (ae * (C50054 * std::pow(C49824, 2) + C49992)) / C49835 +
        C49824 * (C50029 - (ae * C49824 * C50054) / C49835 +
                  C49824 * (C49824 * ((-(C49825 * C49832 * C49864) / C49689) /
                                          C49756 -
                                      (C49919 * ce) / C49835) -
                            (ae * C50054) / C49835));
    const double C6556 =
        3 * ((-(ae * C50081) / C49689) / C49756 - C49931 / C49835 +
             C49824 * C50090) +
        (((-2 * C50081) / C49689 - (C49824 * C50087) / C49689) * ae) / C49756 +
        C49824 * (2 * C50090 - (ae * C50087) / C49835 +
                  C49824 * ((-(ae * C49824 * C49972) / C49689) / C49756 -
                            C49857 / C49835 +
                            C49824 * ((-(C49824 * C49832 * C49864) / C49689) /
                                          C49756 -
                                      (ae * C49972) / C49835)));
    const double C50205 = C50192 - C50199;
    const double C50267 = C50262 - C50265;
    const double C50355 = C50341 - C50348;
    const double C8728 = C50950 * C3052;
    const double C13295 = C51068 * C3052;
    const double C44920 = C31597 * C3052;
    const double C8888 = C50950 * C3216;
    const double C13169 = C50962 * C3216;
    const double C13469 = C51068 * C3216;
    const double C18881 = C15474 * C3216;
    const double C35248 = C50962 * C3216;
    const double C45080 = C31597 * C3216;
    const double C47624 = C51096 * C3216;
    const double C13781 = C50962 * C3678;
    const double C19047 = C15475 * C3678;
    const double C19373 = C15474 * C3678;
    const double C35890 = C50962 * C3678;
    const double C47790 = C38068 * C3678;
    const double C48116 = C51096 * C3678;
    const double C364 = C350 - C359;
    const double C5338 = C5334 * C118;
    const double C2615 = C2614 - C2606;
    const double C5528 = C5526 * C295;
    const double C6707 = C5526 * C1356;
    const double C5717 = C5715 * C118;
    const double C50122 = C50120 + C50121;
    const double C190 = C184 + C185;
    const double C2943 = C2939 * C624;
    const double C3992 = C2939 * C1479;
    const double C8306 = C2939 * C50837;
    const double C8610 = C2939 * C623;
    const double C9466 = C2939 * C50837;
    const double C9620 = C2939 * C51087;
    const double C4196 = C3241 * C50837;
    const double C4544 = C3241 * C50837;
    const double C8458 = C3241 * C50821;
    const double C9818 = C3241 * C1350;
    const double C10162 = C3241 * C51053;
    const double C13171 = C5884 + C5883;
    const double C28703 = C5883 + C5884;
    const double C3403 = C3399 * C50821;
    const double C30206 = C7071 + C7070;
    const double C30205 = C7070 + C7071;
    const double C9208 = C50950 * C3560;
    const double C13459 = C50962 * C3560;
    const double C13791 = C51068 * C3560;
    const double C18767 = C15475 * C3560;
    const double C19057 = C15474 * C3560;
    const double C35462 = C50962 * C3560;
    const double C45384 = C31597 * C3560;
    const double C47510 = C38068 * C3560;
    const double C47800 = C51096 * C3560;
    const double C8727 = C117 * C3047;
    const double C13294 = C5280 * C3047;
    const double C44919 = C31599 * C3047;
    const double C8887 = C117 * C3211;
    const double C13168 = C5281 * C3211;
    const double C13468 = C5280 * C3211;
    const double C18880 = C15477 * C3211;
    const double C35247 = C31600 * C3211;
    const double C45079 = C31599 * C3211;
    const double C9207 = C117 * C3555;
    const double C13458 = C5281 * C3555;
    const double C13790 = C5280 * C3555;
    const double C18766 = C15478 * C3555;
    const double C19056 = C15477 * C3555;
    const double C35461 = C31600 * C3555;
    const double C45383 = C31599 * C3555;
    const double C47509 = C38071 * C3555;
    const double C50321 = C50319 + C50320;
    const double C176 = C164 + C165;
    const double C353 = C339 + C340;
    const double C513 = C503 + C504;
    const double C5328 = C5309 + C5310;
    const double C31647 = C31628 + C31629;
    const double C679 = C671 + C672;
    const double C1660 = C1650 + C1651;
    const double C5523 = C5507 + C5508;
    const double C31842 = C31826 + C31827;
    const double C1045 = C1037 + C1038;
    const double C5711 = C5696 + C5697;
    const double C15530 = C15508 + C15509;
    const double C32030 = C32015 + C32016;
    const double C38123 = C38101 + C38102;
    const double C3404 = C3400 * C118;
    const double C3561 =
        (-(C50020 * ce) / C49689) / C49756 - C49931 / C49835 + C49825 * C50029 -
        (ae * C49824 * C50058) / C49835 +
        C49824 * (C49824 * ((-(C49825 * C49919 * ce) / C49689) / C49756 -
                            C49857 / C49835 +
                            C49825 * ((-(C49825 * C49832 * C49864) / C49689) /
                                          C49756 -
                                      (C49919 * ce) / C49835)) -
                  (ae * C50058) / C49835);
    const double C3049 =
        (-3 * (C49825 * C49992 + C49959 + C50471 * ce)) / C49689 +
        C49825 * ((-2 * C49992) / C49689 - (C49825 * C50058) / C49689 -
                  (C50496 * ce) / C49689) -
        ((2 * C50471 + C49825 * C50496) * ce) / C49689;
    const double C3213 =
        C49824 * ((-2 * C49992) / C49689 - (C49825 * C50058) / C49689 -
                  (C50496 * ce) / C49689);
    const double C3557 =
        -(C50058 * C50075 + C49825 * C49992 + C49959 + C50471 * ce) / C49689;
    const double C8617 = C8615 * C629;
    const double C9621 = C8615 * C1484;
    const double C9817 = C8895 * C1356;
    const double C10161 = C8895 * C295;
    const double C9049 = C9047 * C118;
    const double C16720 =
        (4 * (2 * C50533 + C49824 * C50614 + C50534 * ae) +
         C49824 *
             (3 * C50614 +
              C49824 *
                  (2 * C50606 +
                   C49824 * (C49919 + C49824 * (C49824 * C50128 + C50151 * ae) +
                             C49824 * C50151 * ae) +
                   C50608 * ae) +
              C50613 * ae) +
         (3 * C50534 + C49824 * C50613) * ae) /
        C49756;
    const double C11236 = C11232 + C11233;
    const double C11344 = C11340 + C11341;
    const double C13296 = C13288 + C13289;
    const double C44921 = C44913 + C44914;
    const double C11550 = C11546 + C11547;
    const double C13478 = C13462 + C13463;
    const double C18884 = C18872 + C18873;
    const double C45081 = C45073 + C45074;
    const double C47627 = C47615 + C47616;
    const double C19481 =
        (4 * (2 * C50590 + C49824 * C50644 + C50591 * ae) +
         C49824 * (3 * C50644 +
                   C49824 * (2 * C50636 +
                             C49824 * (C50194 +
                                       C49824 * (C49824 * C49825 * C49922 +
                                                 C50232 * ae) +
                                       C49824 * C50232 * ae) +
                             C50638 * ae) +
                   C50643 * ae) +
         (3 * C50591 + C49824 * C50643) * ae) /
        C49756;
    const double C50168 = C50167 / C49689;
    const double C50235 = C50228 / C49689;
    const double C50257 = C50255 / C49835;
    const double C13788 = C5281 * C9312;
    const double C19054 = C15478 * C9312;
    const double C45381 = C31600 * C9312;
    const double C47797 = C38071 * C9312;
    const double C50666 = C50647 + C50664;
    const double C49871 = C49863 + C49870;
    const double C50037 = C50032 - C50035;
    const double C50078 = C50073 - C50076;
    const double C2935 = C50950 * C775;
    const double C3235 = C50950 * C904;
    const double C5880 = C50962 * C904;
    const double C32199 = C50962 * C904;
    const double C3397 = C50950 * C1164;
    const double C7067 = C50962 * C1164;
    const double C15703 = C15475 * C1164;
    const double C33374 = C50962 * C1164;
    const double C38296 = C38068 * C1164;
    const double C6294 = C50962 * C1249;
    const double C15885 = C15475 * C1249;
    const double C32613 = C50962 * C1249;
    const double C38478 = C38068 * C1249;
    const double C50145 = C49825 * C50144;
    const double C50270 = C49824 * C50144;
    const double C50297 = C49824 * C50294;
    const double C50218 = C50215 + C50216;
    const double C50332 = C50324 - C50328;
    const double C50369 = C50366 + C50367;
    const double C139 = (5 * (3 * C49911 + C49832 * C49916) +
                         C49832 * (4 * C49916 + C49832 * C49928)) /
                        C49756;
    const double C312 = (C49825 * (4 * C49916 + C49832 * C49928)) / C49756;
    const double C483 = (C49824 * (4 * C49916 + C49832 * C49928) +
                         (4 * (2 * C49940 + C49832 * C49945) +
                          C49832 * (3 * C49945 + C49832 * C49954)) *
                             ae) /
                        C49756;
    const double C643 =
        (3 * C49911 + C49832 * C49916 + C49928 * C50011) / C49756;
    const double C1022 =
        (3 * C49911 + C49832 * C49916 +
         C49824 * (C49824 * C49928 + C50432 * ae) + C49824 * C50432 * ae) /
        C49756;
    const double C1634 =
        (C49824 * C49825 * C49928 + C49825 * C50432 * ae) / C49756;
    const double C11228 = (5 * (3 * C50016 + C49825 * C50117) +
                           C49825 * (4 * C50117 + C49825 * C50217)) /
                          C49756;
    const double C11336 = (C49824 * (4 * C50117 + C49825 * C50217) +
                           (4 * C50547 + C49825 * C50569) * ae) /
                          C49756;
    const double C11542 =
        (3 * C50016 + C49825 * C50117 +
         C49824 * (C49824 * C50217 + C50569 * ae) + C49824 * C50569 * ae) /
        C49756;
    const double C49984 = C49974 + C49983;
    const double C50001 = C49998 - C50000;
    const double C50067 = C50066 + C50064;
    const double C50185 = C49825 * C50184;
    const double C9310 = (-2 * C49824 * C50058) / C49689 -
                         (C49824 * (C50184 * C50075 + C50058)) / C49689;
    const double C16719 =
        4 * ((-2 * C50081) / C49689 - (C49824 * C50087) / C49689) +
        C49824 * ((-3 * C50087) / C49689 + C49824 * C50295);
    const double C50245 = C50244 / C49689;
    const double C50258 = C50256 + C50166;
    const double C50339 = C50333 - C50337;
    const double C50370 = C50352 + C50368;
    const double C365 = C363 - C358;
    const double C49733 = C49731 - C49726;
    const double C1375 = C1366 + C1367;
    const double C1374 = C1362 + C1363;
    const double C3838 = C3830 + C3831;
    const double C6709 = C6705 + C6706;
    const double C49800 = C49798 - C49793;
    const double C31648 = C31630 + C31631;
    const double C31646 = C31626 + C31627;
    const double C31645 = C31624 + C31625;
    const double C31643 = C31620 + C31621;
    const double C31640 = C31614 + C31615;
    const double C31638 = C31610 + C31611;
    const double C31636 = C31606 + C31607;
    const double C31634 = C31602 + C31603;
    const double C31841 = C31824 + C31825;
    const double C31840 = C31822 + C31823;
    const double C31838 = C31818 + C31819;
    const double C31835 = C31812 + C31813;
    const double C31833 = C31808 + C31809;
    const double C32029 = C32013 + C32014;
    const double C32027 = C32009 + C32010;
    const double C32025 = C32005 + C32006;
    const double C32023 = C32001 + C32002;
    const double C32021 = C31997 + C31998;
    const double C32204 = C32192 + C32193;
    const double C32202 = C32188 + C32189;
    const double C32200 = C32184 + C32185;
    const double C32618 = C32606 + C32607;
    const double C32616 = C32602 + C32603;
    const double C32614 = C32598 + C32599;
    const double C33379 = C33367 + C33368;
    const double C33377 = C33363 + C33364;
    const double C33375 = C33359 + C33360;
    const double C34696 = C34685 + C34686;
    const double C34694 = C34681 + C34682;
    const double C35111 = C35101 + C35102;
    const double C35109 = C35097 + C35098;
    const double C35107 = C35089 + C35090;
    const double C35105 = C35085 + C35086;
    const double C35254 = C35249 + C35250;
    const double C35252 = C35245 + C35246;
    const double C35484 = C35471 + C35472;
    const double C35482 = C35467 + C35468;
    const double C35480 = C35463 + C35464;
    const double C35478 = C35459 + C35460;
    const double C35475 = C35453 + C35454;
    const double C35473 = C35449 + C35450;
    const double C35689 = C35683 + C35684;
    const double C35687 = C35679 + C35680;
    const double C35896 = C35891 + C35892;
    const double C35894 = C35887 + C35888;
    const double C44922 = C44915 + C44916;
    const double C45082 = C45075 + C45076;
    const double C45386 = C45379 + C45380;
    const double C177 = C166 + C167;
    const double C352 = C337 + C338;
    const double C5524 = C5509 + C5510;
    const double C31843 = C31828 + C31829;
    const double C512 = C501 + C502;
    const double C5323 = C5299 + C5300;
    const double C5712 = C5698 + C5699;
    const double C15532 = C15512 + C15513;
    const double C31642 = C31618 + C31619;
    const double C32031 = C32017 + C32018;
    const double C678 = C665 + C666;
    const double C5887 = C5877 + C5878;
    const double C32206 = C32196 + C32197;
    const double C1659 = C1648 + C1649;
    const double C5520 = C5501 + C5502;
    const double C7074 = C7064 + C7065;
    const double C15714 = C15700 + C15701;
    const double C31839 = C31820 + C31821;
    const double C33381 = C33371 + C33372;
    const double C1044 = C1035 + C1036;
    const double C5709 = C5692 + C5693;
    const double C6301 = C6291 + C6292;
    const double C15522 = C15492 + C15493;
    const double C15896 = C15882 + C15883;
    const double C32028 = C32011 + C32012;
    const double C32620 = C32610 + C32611;
    const double C38115 = C38085 + C38086;
    const double C8614 = C50950 * C3053;
    const double C8892 = C50950 * C3217;
    const double C13177 = C50962 * C3217;
    const double C35104 = C50962 * C3217;
    const double C17223 = C15475 * C3677;
    const double C29229 = C50962 * C3677;
    const double C35686 = C50962 * C3677;
    const double C39804 = C38068 * C3677;
    const double C16463 = C15475 * C6556;
    const double C39056 = C38068 * C6556;
    const double C13904 =
        3 * (C50018 - (ae * C50261) / C49835 + C49824 * C50267) +
        (((-2 * C50261) / C49689 - (C49824 * C50266) / C49689) * ae) / C49756 +
        C49824 *
            (2 * C50267 - (ae * C50266) / C49835 +
             C49824 * (C50119 - (ae * C49824 * C50161) / C49835 +
                       C49824 * (C49824 * C50213 - (ae * C50161) / C49835)));
    const double C13794 = C13780 + C13781;
    const double C19065 = C19046 + C19047;
    const double C19380 = C19372 + C19373;
    const double C35895 = C35889 + C35890;
    const double C47808 = C47789 + C47790;
    const double C5530 = C5517 - C5528;
    const double C8722 =
        4 * (2 * C50018 - (C50016 * ce) / C49835 + C49825 * C50122) -
        ((3 * C50016 + C49825 * C50117) * ce) / C49835 +
        C49825 *
            (3 * C50122 - (C50117 * ce) / C49835 +
             C49825 *
                 (2 * C50119 - (C50111 * ce) / C49835 +
                  C49825 *
                      ((-(C49825 * C49884 * ce) / C49689) / C49756 - C49860 +
                       C49825 * ((-(C49825 * C49864) / C49689) / C49756 -
                                 (C49884 * ce) / C49835))));
    const double C8882 =
        (((-3 * C50049) / C49689 +
          C49825 * ((-2 * C50045) / C49689 -
                    (C49825 * (C49825 * (C49825 * C49899 + C49943 * ce) +
                               C49895 + C49825 * C49943 * ce)) /
                        C49689 -
                    (C50149 * ce) / C49689) -
          ((2 * C50044 + C49825 * C50149) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 *
            (3 * C50122 - (C50117 * ce) / C49835 +
             C49825 *
                 (2 * C50119 - (C50111 * ce) / C49835 +
                  C49825 *
                      ((-(C49825 * C49884 * ce) / C49689) / C49756 - C49860 +
                       C49825 * ((-(C49825 * C49864) / C49689) / C49756 -
                                 (C49884 * ce) / C49835))));
    const double C9315 =
        2 * (C49824 * C50122 - (ae * C50049) / C49835) -
        (ae * (C50166 * C50075 + C50049)) / C49835 +
        C49824 *
            (C50122 - (ae * C49824 * C50166) / C49835 +
             C49824 *
                 (C49824 *
                      ((-(C49825 * C49884 * ce) / C49689) / C49756 - C49860 +
                       C49825 * ((-(C49825 * C49864) / C49689) / C49756 -
                                 (C49884 * ce) / C49835)) -
                  (ae * C50166) / C49835));
    const double C8730 = C8727 + C8728;
    const double C13299 = C13294 + C13295;
    const double C44924 = C44919 + C44920;
    const double C8894 = C8887 + C8888;
    const double C13183 = C13168 + C13169;
    const double C13481 = C13468 + C13469;
    const double C18888 = C18880 + C18881;
    const double C35253 = C35247 + C35248;
    const double C45084 = C45079 + C45080;
    const double C9210 = C9207 + C9208;
    const double C13476 = C13458 + C13459;
    const double C13799 = C13790 + C13791;
    const double C18773 = C18766 + C18767;
    const double C19070 = C19056 + C19057;
    const double C35479 = C35461 + C35462;
    const double C45388 = C45383 + C45384;
    const double C47516 = C47509 + C47510;
    const double C16724 =
        4 * (2 * C50101 - (ae * C50098) / C49835 + C49824 * C50321) +
        (((-3 * C50098) / C49689 + C49824 * C50318) * ae) / C49756 +
        C49824 *
            (3 * C50321 + (C50318 * ae) / C49756 +
             C49824 *
                 (2 * C50317 - (ae * C50308) / C49835 +
                  C49824 *
                      ((-(ae * C49824 * C49899) / C49689) / C49756 - C49860 +
                       C49824 * ((-(C49824 * C49864) / C49689) / C49756 -
                                 (ae * C49899) / C49835))));
    const double C186 = C176 * C118;
    const double C361 = C353 * C295;
    const double C1370 = C353 * C1356;
    const double C2446 = C353 * C118;
    const double C521 = C513 * C118;
    const double C685 = C679 * C629;
    const double C1502 = C679 * C1484;
    const double C2608 = C679 * C295;
    const double C3834 = C679 * C1356;
    const double C8155 = C679 * C118;
    const double C1666 = C1660 * C1356;
    const double C1906 = C1660 * C295;
    const double C2767 = C1660 * C118;
    const double C1051 = C1045 * C118;
    const double C9046 = C50950 * C3561;
    const double C14397 = C50962 * C3561;
    const double C16055 = C15475 * C3561;
    const double C35470 = C50962 * C3561;
    const double C38648 = C38068 * C3561;
    const double C8613 = C117 * C3049;
    const double C8891 = C117 * C3213;
    const double C13176 = C5281 * C3213;
    const double C35103 = C31600 * C3213;
    const double C9045 = C117 * C3557;
    const double C14396 = C5281 * C3557;
    const double C16054 = C15478 * C3557;
    const double C35469 = C31600 * C3557;
    const double C38647 = C38071 * C3557;
    const double C50169 = C50160 - C50168;
    const double C50667 = C50666 + C50651;
    const double C146 =
        5 * (3 * C49855 + C49832 * C49871) +
        C49832 * (4 * C49871 +
                  C49832 * (3 * C49869 +
                            C49832 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835))));
    const double C318 =
        C49825 * (3 * C49855 + C49832 * C49871) -
        ((3 * (C49878 + C49881 * C49841) +
          C49832 * (2 * C49832 * C49881 +
                    C49832 * (C49881 + C49846 * C49847 * C49875 * C49841))) *
         ce) /
            C49835;
    const double C319 =
        C49825 * (4 * C49871 +
                  C49832 * (3 * C49869 +
                            C49832 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835)))) -
        ((4 * (2 * C49832 * C49881 + C49832 * C49886) +
          C49832 * (3 * C49886 +
                    C49832 * (2 * C49832 * C49884 +
                              C49832 * (C49884 +
                                        C49858 * C49859 * C49875 * C49841)))) *
         ce) /
            C49835;
    const double C487 =
        (((-3 * (C49895 * C49841 + C49892)) / C49689 +
          C49832 * ((-2 * C49832 * C49895) / C49689 -
                    (C49832 * (C49846 * C49847 * C49889 * C49841 + C49895)) /
                        C49689)) *
         ae) /
            C49756 +
        C49824 * (3 * C49855 + C49832 * C49871);
    const double C489 =
        ((4 * ((-2 * C49832 * C49895) / C49689 - (C49832 * C49901) / C49689) +
          C49832 * ((-3 * C49901) / C49689 +
                    C49832 * ((-2 * C49832 * C49899) / C49689 -
                              (C49832 *
                               (C49858 * C49859 * C49889 * C49841 + C49899)) /
                                  C49689))) *
         ae) /
            C49756 +
        C49824 * (4 * C49871 +
                  C49832 * (3 * C49869 +
                            C49832 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835))));
    const double C648 = (-2 * C49832 * C49844) / C49835 + C49832 * C49855 -
                        (C49825 * C49916 * ce) / C49835 +
                        C49825 * (C49825 * C49871 - (C49916 * ce) / C49835);
    const double C649 =
        3 * C49855 + C49832 * C49871 - (C49825 * C49928 * ce) / C49835 +
        C49825 * (C49825 * (3 * C49869 +
                            C49832 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835))) -
                  (C49928 * ce) / C49835);
    const double C776 =
        2 * (C49825 * C49871 - (C49916 * ce) / C49835) -
        ((C49916 + C49926 * std::pow(C49825, 2)) * ce) / C49835 +
        C49825 * (C49871 - (C49825 * C49926 * ce) / C49835 +
                  C49825 * (C49825 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835)) -
                            (C49926 * ce) / C49835));
    const double C905 = ((C49825 * ((-2 * C49832 * C49895) / C49689 -
                                    (C49832 * C49901) / C49689) -
                          ((2 * C49940 + C49832 * C49945) * ce) / C49689) *
                         ae) /
                            C49756 +
                        C49824 * (C49825 * C49871 - (C49916 * ce) / C49835);
    const double C906 =
        (((-2 * C49832 * C49895) / C49689 - (C49832 * C49901) / C49689 +
          C49825 * (C49825 * ((-2 * C49832 * C49899) / C49689 -
                              (C49832 *
                               (C49858 * C49859 * C49889 * C49841 + C49899)) /
                                  C49689) -
                    (C49954 * ce) / C49689) -
          (C49825 * C49954 * ce) / C49689) *
         ae) /
            C49756 +
        C49824 * (C49871 - (C49825 * C49926 * ce) / C49835 +
                  C49825 * (C49825 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835)) -
                            (C49926 * ce) / C49835));
    const double C1026 = (-2 * C49931) / C49835 + C49832 * C49855 +
                         (C49824 * C49969 * ae) / C49756 +
                         C49824 * ((C49969 * ae) / C49756 + C49824 * C49871);
    const double C1248 =
        2 * ((C49969 * ae) / C49756 + C49824 * C49871) +
        ((C49969 + C49982 * std::pow(C49824, 2)) * ae) / C49756 +
        C49824 * (C49871 + (C49824 * C49982 * ae) / C49756 +
                  C49824 * ((C49982 * ae) / C49756 +
                            C49824 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835))));
    const double C3054 =
        3 * (C49855 - (C50031 * ce) / C49835 + C49825 * C50037) -
        ((2 * C50031 + C49825 * C50036) * ce) / C49835 +
        C49825 * (2 * C50037 - (C50036 * ce) / C49835 +
                  C49825 * (C49869 - (C49825 * C49924 * ce) / C49835 +
                            C49825 * (C49825 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835) -
                                      (C49924 * ce) / C49835)));
    const double C3218 =
        (((-2 * C49996) / C49689 -
          (C49825 * (C49825 * (C49825 * C49979 + C49952 * ce) + C49901 +
                     C49825 * C49952 * ce)) /
              C49689 -
          ((C49945 + C49952 * C50011) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 * (2 * C50037 - (C50036 * ce) / C49835 +
                  C49825 * (C49869 - (C49825 * C49924 * ce) / C49835 +
                            C49825 * (C49825 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835) -
                                      (C49924 * ce) / C49835)));
    const double C3676 =
        2 * (C49824 * C50037 - (ae * C49996) / C49835) -
        (ae * (C50063 * std::pow(C49824, 2) + C49996)) / C49835 +
        C49824 * (C50037 - (ae * C49824 * C50063) / C49835 +
                  C49824 * (C49824 * (C49825 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835) -
                                      (C49924 * ce) / C49835) -
                            (ae * C50063) / C49835));
    const double C6555 =
        3 * (C49855 - (ae * C50072) / C49835 + C49824 * C50078) +
        (((-2 * C50072) / C49689 - (C49824 * C50079) / C49689) * ae) / C49756 +
        C49824 * (2 * C50078 - (ae * C50079) / C49835 +
                  C49824 * (C49869 - (ae * C49824 * C49979) / C49835 +
                            C49824 * (C49824 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835) -
                                      (ae * C49979) / C49835)));
    const double C2941 = C2934 + C2935;
    const double C3243 = C3234 + C3235;
    const double C5888 = C5879 + C5880;
    const double C32207 = C32198 + C32199;
    const double C3401 = C3396 + C3397;
    const double C7075 = C7066 + C7067;
    const double C15715 = C15702 + C15703;
    const double C33382 = C33373 + C33374;
    const double C38308 = C38295 + C38296;
    const double C6302 = C6293 + C6294;
    const double C15897 = C15884 + C15885;
    const double C32621 = C32612 + C32613;
    const double C38490 = C38477 + C38478;
    const double C50146 = C50143 + C50145;
    const double C50275 = C50270 - C50273;
    const double C50298 = C50296 + C50297;
    const double C50219 = C49825 * C50218;
    const double C50254 = C49824 * C50218;
    const double C50336 = C49824 * C50332;
    const double C50371 = C49824 * C50369;
    const double C1027 =
        3 * C49855 + C49832 * C49871 + (C49824 * C49984 * ae) / C49756 +
        C49824 * ((C49984 * ae) / C49756 +
                  C49824 * (3 * C49869 +
                            C49832 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835))));
    const double C1636 =
        ((C49825 * C49984 - ((3 * C49945 + C49832 * C49954) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 * (C49825 * (3 * C49869 +
                            C49832 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835))) -
                  (C49928 * ce) / C49835);
    const double C138 = 5 * ((-3 * C49962) / C49689 + C49832 * C49969) +
                        C49832 * (4 * C49969 + C49832 * C49984);
    const double C313 = C49825 * (4 * C49969 + C49832 * C49984) -
                        ((4 * (2 * C49940 + C49832 * C49945) +
                          C49832 * (3 * C49945 + C49832 * C49954)) *
                         ce) /
                            C49689;
    const double C482 = C49824 * (4 * C49969 + C49832 * C49984);
    const double C644 = (-3 * C49962) / C49689 + C49832 * C49969 +
                        C49825 * (C49825 * C49984 - (C50432 * ce) / C49689) -
                        (C49825 * C50432 * ce) / C49689;
    const double C1021 =
        (-3 * C49962) / C49689 + C49832 * C49969 + C49984 * C50075;
    const double C1635 = C49824 * (C49825 * C49984 - (C50432 * ce) / C49689);
    const double C1165 =
        C49825 * C49871 - (C49916 * ce) / C49835 +
        (C49824 * C50001 * ae) / C49756 +
        C49824 * ((C50001 * ae) / C49756 +
                  C49824 * (C49825 * ((-2 * C49832 * C49864) / C49835 +
                                      C49832 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835)) -
                            (C49926 * ce) / C49835));
    const double C772 =
        2 * (C49825 * C49969 - (C50427 * ce) / C49689) +
        C49825 * (C49969 + C49825 * C50001 - (C49825 * C49954 * ce) / C49689) -
        ((C50427 + C49954 * C50011) * ce) / C49689;
    const double C898 =
        C49824 * (C49969 + C49825 * C50001 - (C49825 * C49954 * ce) / C49689);
    const double C1161 =
        C49825 * C49969 - (C50427 * ce) / C49689 + C50001 * C50075;
    const double C3562 =
        C49855 - (C50031 * ce) / C49835 + C49825 * C50037 -
        (ae * C49824 * C50067) / C49835 +
        C49824 * (C49824 * (C49869 - (C49825 * C49924 * ce) / C49835 +
                            C49825 * (C49825 * ((-(std::pow(C49828, 8) * bs[8] *
                                                   C49830 * C49841) /
                                                 C49689) /
                                                    C49756 -
                                                C49864 / C49835) -
                                      (C49924 * ce) / C49835)) -
                  (ae * C50067) / C49835);
    const double C3051 =
        (-3 * (C49825 * C49996 + C49962 + C50474 * ce)) / C49689 +
        C49825 * ((-2 * C49996) / C49689 - (C49825 * C50067) / C49689 -
                  (C50500 * ce) / C49689) -
        ((2 * C50474 + C49825 * C50500) * ce) / C49689;
    const double C3215 =
        C49824 * ((-2 * C49996) / C49689 - (C49825 * C50067) / C49689 -
                  (C50500 * ce) / C49689);
    const double C3559 =
        -(C50067 * C50075 + C49825 * C49996 + C49962 + C50474 * ce) / C49689;
    const double C50186 = C50185 / C49689;
    const double C50246 = C50236 - C50245;
    const double C13899 =
        (-3 * (C50166 * C50075 + C50049)) / C49689 +
        C49824 * ((-2 * C50253) / C49689 - (C49824 * C50258) / C49689);
    const double C19480 =
        4 * ((-2 * C50261) / C49689 - (C49824 * C50266) / C49689) +
        C49824 * ((-3 * C50266) / C49689 + C49824 * C50339);
    const double C21736 = 5 * ((-3 * C50098) / C49689 + C49824 * C50318) +
                          C49824 * (4 * C50318 + C49824 * C50370);
    const double C757 =
        ((((0 - (C49688 * C49713) / C49689) * ce) / C49689 - (0 * de) / C49718 +
          C49698 / C49689) /
             C49697 -
         ((C49688 * C49732 + 0) * de) / C49689) /
            C49697 -
        ((C49688 * (C49732 / C49697 -
                    ((C49688 * C49733 + C51053) * de) / C49689 + C49727) +
          C51099) *
         de) /
            C49689 +
        C49733 / C49697 - ((C49688 * C49727 + C50837) * de) / C49689;
    const double C758 =
        (C49732 / C49697 - ((C49688 * C49733 + C51053) * de) / C49689 +
         C49727) /
            C49697 -
        ((C49688 *
              (C49733 / C49697 - ((C49688 * C49727 + C50837) * de) / C49689) +
          C51087) *
         de) /
            C49689 +
        2 * (C49727 / C49697 - (0 * de) / C49689);
    const double C759 =
        (C49733 / C49697 - ((C49688 * C49727 + C50837) * de) / C49689) /
            C49697 -
        ((C49688 * (C49727 / C49697 - (0 * de) / C49689) + C1479) * de) /
            C49689;
    const double C1482 =
        C49732 / C49697 - ((C49688 * C49733 + C51053) * de) / C49689 + C49727;
    const double C1483 =
        C49733 / C49697 - ((C49688 * C49727 + C50837) * de) / C49689;
    const double C1377 = C1375 - C1368;
    const double C1376 = C1374 - C1364;
    const double C3839 = C3838 - C3832;
    const double C6710 = C6709 - C6707;
    const double C21011 =
        ((((0 - (C49755 * C49780) / C49756) * ae) / C49756 - (0 * be) / C49785 +
          C49765 / C49756) /
             C49764 -
         ((C49755 * C49799 + 0) * be) / C49756) /
            C49764 -
        ((C49755 * (C49799 / C49764 -
                    ((C49755 * C49800 + C51068) * be) / C49756 + C49794) +
          C51102) *
         be) /
            C49756 +
        C49800 / C49764 - ((C49755 * C49794 + C50962) * be) / C49756;
    const double C21012 =
        (C49799 / C49764 - ((C49755 * C49800 + C51068) * be) / C49756 +
         C49794) /
            C49764 -
        ((C49755 *
              (C49800 / C49764 - ((C49755 * C49794 + C50962) * be) / C49756) +
          C51096) *
         be) /
            C49756 +
        2 * (C49794 / C49764 - (0 * be) / C49756);
    const double C21013 =
        (C49800 / C49764 - ((C49755 * C49794 + C50962) * be) / C49756) /
            C49764 -
        ((C49755 * (C49794 / C49764 - (0 * be) / C49756) + C38068) * be) /
            C49756;
    const double C38069 =
        C49799 / C49764 - ((C49755 * C49800 + C51068) * be) / C49756 + C49794;
    const double C38070 =
        C49800 / C49764 - ((C49755 * C49794 + C50962) * be) / C49756;
    const double C31653 = C31644 + C31645;
    const double C31651 = C31640 + C31641;
    const double C31650 = C31638 + C31639;
    const double C31845 = C31837 + C31838;
    const double C34691 = C31838 + C31837;
    const double C34690 = C31835 + C31834;
    const double C34688 = C31834 + C31835;
    const double C34689 = C31833 + C31832;
    const double C34687 = C31832 + C31833;
    const double C32034 = C32026 + C32025;
    const double C35096 = C32203 + C32202;
    const double C35094 = C32202 + C32203;
    const double C35095 = C32201 + C32200;
    const double C35093 = C32200 + C32201;
    const double C36675 = C33378 + C33377;
    const double C36674 = C33377 + C33378;
    const double C36676 = C33376 + C33375;
    const double C36673 = C33375 + C33376;
    const double C44812 = C35107 + C35108;
    const double C44811 = C35105 + C35106;
    const double C44911 = C35251 + C35252;
    const double C45071 = C35477 + C35478;
    const double C187 = C177 * C50821;
    const double C360 = C352 * C50837;
    const double C670 = C352 * C623;
    const double C1369 = C352 * C50837;
    const double C1501 = C352 * C51087;
    const double C2444 = C352 * C50821;
    const double C2609 = C352 * C51053;
    const double C3835 = C352 * C1350;
    const double C520 = C512 * C50821;
    const double C1652 = C512 * C1350;
    const double C1907 = C512 * C51053;
    const double C5333 = C5323 + C5324;
    const double C31652 = C31642 + C31643;
    const double C684 = C678 * C624;
    const double C1497 = C678 * C1479;
    const double C2607 = C678 * C50837;
    const double C2931 = C678 * C623;
    const double C3833 = C678 * C50837;
    const double C3996 = C678 * C51087;
    const double C8153 = C678 * C50821;
    const double C8308 = C678 * C51053;
    const double C9468 = C678 * C1350;
    const double C1665 = C1659 * C50837;
    const double C1905 = C1659 * C50837;
    const double C2766 = C1659 * C50821;
    const double C4198 = C1659 * C1350;
    const double C4546 = C1659 * C51053;
    const double C5527 = C5520 + C5521;
    const double C28313 = C5521 + C5520;
    const double C31846 = C31839 + C31840;
    const double C34692 = C31840 + C31839;
    const double C1050 = C1044 * C50821;
    const double C5714 = C5709 + C5708;
    const double C32033 = C32028 + C32027;
    const double C17229 = C17222 + C17223;
    const double C29233 = C29228 + C29229;
    const double C35690 = C35685 + C35686;
    const double C39810 = C39803 + C39804;
    const double C16469 = C16462 + C16463;
    const double C39062 = C39055 + C39056;
    const double C19371 = C15475 * C13904;
    const double C48114 = C38068 * C13904;
    const double C11235 = C50950 * C8722;
    const double C11343 = C50950 * C8882;
    const double C13293 = C50962 * C8882;
    const double C44918 = C50962 * C8882;
    const double C13789 = C50962 * C9315;
    const double C19055 = C15475 * C9315;
    const double C45382 = C50962 * C9315;
    const double C47798 = C38068 * C9315;
    const double C13287 = C13183 + C13182;
    const double C44912 = C35253 + C35254;
    const double C13483 = C13476 + C13477;
    const double C45072 = C35479 + C35480;
    const double C8616 = C8613 + C8614;
    const double C8896 = C8891 + C8892;
    const double C13186 = C13176 + C13177;
    const double C35112 = C35103 + C35104;
    const double C9048 = C9045 + C9046;
    const double C14402 = C14396 + C14397;
    const double C16061 = C16054 + C16055;
    const double C35483 = C35469 + C35470;
    const double C38654 = C38647 + C38648;
    const double C50170 = C50169 - C50163;
    const double C21737 =
        (5 * (3 * C50629 + C49824 * C50667 + C50628 * ae) +
         C49824 * (4 * C50667 +
                   C49824 * (3 * C50662 +
                             C49824 * (2 * C50654 +
                                       C49824 * (C49884 +
                                                 C49824 * (C49824 * C49922 +
                                                           C49949 * ae) +
                                                 C49824 * C49949 * ae) +
                                       C50656 * ae) +
                             C50661 * ae) +
                   C50665 * ae) +
         (4 * C50628 + C49824 * C50665) * ae) /
        C49756;
    const double C344 = C50950 * C318;
    const double C506 = C50950 * C487;
    const double C5314 = C50962 * C487;
    const double C31633 = C50962 * C487;
    const double C674 = C50950 * C648;
    const double C1655 = C50950 * C905;
    const double C5512 = C50962 * C905;
    const double C31831 = C50962 * C905;
    const double C1040 = C50950 * C1026;
    const double C5701 = C50962 * C1026;
    const double C15515 = C15475 * C1026;
    const double C32020 = C50962 * C1026;
    const double C38108 = C38068 * C1026;
    const double C2945 = C2941 * C624;
    const double C3998 = C2941 * C1479;
    const double C8310 = C2941 * C50837;
    const double C9470 = C2941 * C50837;
    const double C4200 = C3243 * C50837;
    const double C4548 = C3243 * C50837;
    const double C8460 = C3243 * C50821;
    const double C3405 = C3401 * C50821;
    const double C8723 =
        4 * (2 * C50029 - (C50026 * ce) / C49835 + C49825 * C50146) -
        ((3 * C50026 + C49825 * C50142) * ce) / C49835 +
        C49825 *
            (3 * C50146 - (C50142 * ce) / C49835 +
             C49825 *
                 (2 * C50144 - (C50136 * ce) / C49835 +
                  C49825 * ((-(C49825 * C50128 * ce) / C49689) / C49756 -
                            C50126 / C49835 +
                            C49825 * ((-(C49825 * C49832 * std::pow(C49828, 8) *
                                         bs[8] * C49830) /
                                       C49689) /
                                          C49756 -
                                      (C50128 * ce) / C49835))));
    const double C8883 =
        (((-3 * C50058) / C49689 +
          C49825 *
              ((-2 * C50054) / C49689 -
               (C49825 * (C49825 * (C49825 * C49832 * C49976 + C50151 * ce) +
                          C49972 + C49825 * C50151 * ce)) /
                   C49689 -
               (C50153 * ce) / C49689) -
          ((2 * C50053 + C49825 * C50153) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 *
            (3 * C50146 - (C50142 * ce) / C49835 +
             C49825 *
                 (2 * C50144 - (C50136 * ce) / C49835 +
                  C49825 * ((-(C49825 * C50128 * ce) / C49689) / C49756 -
                            C50126 / C49835 +
                            C49825 * ((-(C49825 * C49832 * std::pow(C49828, 8) *
                                         bs[8] * C49830) /
                                       C49689) /
                                          C49756 -
                                      (C50128 * ce) / C49835))));
    const double C9314 =
        2 * (C49824 * C50146 - (ae * C50058) / C49835) -
        (ae * (C50184 * C50075 + C50058)) / C49835 +
        C49824 *
            (C50146 - (ae * C49824 * C50184) / C49835 +
             C49824 *
                 (C49824 * ((-(C49825 * C50128 * ce) / C49689) / C49756 -
                            C50126 / C49835 +
                            C49825 * ((-(C49825 * C49832 * std::pow(C49828, 8) *
                                         bs[8] * C49830) /
                                       C49689) /
                                          C49756 -
                                      (C50128 * ce) / C49835)) -
                  (ae * C50184) / C49835));
    const double C16618 =
        3 * (C50029 - (ae * C50269) / C49835 + C49824 * C50275) +
        (((-2 * C50269) / C49689 - (C49824 * C50274) / C49689) * ae) / C49756 +
        C49824 *
            (2 * C50275 - (ae * C50274) / C49835 +
             C49824 *
                 (C50144 - (ae * C49824 * C50181) / C49835 +
                  C49824 * (C49824 * ((-(C49825 * C49832 * std::pow(C49828, 8) *
                                         bs[8] * C49830) /
                                       C49689) /
                                          C49756 -
                                      (C50128 * ce) / C49835) -
                            (ae * C50181) / C49835)));
    const double C16723 =
        4 * (2 * C50090 - (ae * C50087) / C49835 + C49824 * C50298) +
        (((-3 * C50087) / C49689 + C49824 * C50295) * ae) / C49756 +
        C49824 *
            (3 * C50298 + (C50295 * ae) / C49756 +
             C49824 *
                 (2 * C50294 - (ae * C50285) / C49835 +
                  C49824 * ((-(ae * C49824 * C50173) / C49689) / C49756 -
                            C50126 / C49835 +
                            C49824 * ((-(C49824 * C49832 * std::pow(C49828, 8) *
                                         bs[8] * C49830) /
                                       C49689) /
                                          C49756 -
                                      (ae * C50173) / C49835))));
    const double C50220 = C50205 + C50219;
    const double C50259 = C50254 - C50257;
    const double C50338 = C50335 + C50336;
    const double C50372 = C50355 + C50371;
    const double C50187 = C50177 - C50186;
    const double C50247 = C50246 - C50239;
    const double C1498 = C172 * C1482;
    const double C1492 = C170 * C1482;
    const double C1486 = C168 * C1482;
    const double C3993 = C348 * C1482;
    const double C3987 = C345 * C1482;
    const double C9617 = C675 * C1482;
    const double C1500 = C351 * C1483;
    const double C1494 = C348 * C1483;
    const double C1488 = C345 * C1483;
    const double C3995 = C677 * C1483;
    const double C3989 = C675 * C1483;
    const double C9619 = C2938 * C1483;
    const double C1378 = C1376 - C1365;
    const double C38103 = C38069 * C133;
    const double C38097 = C38069 * C122;
    const double C38095 = C38069 * C121;
    const double C38089 = C38069 * C131;
    const double C38079 = C38069 * C129;
    const double C38073 = C38069 * C120;
    const double C38291 = C38069 * C307;
    const double C38285 = C38069 * C298;
    const double C38283 = C38069 * C305;
    const double C38277 = C38069 * C297;
    const double C38473 = C38069 * C475;
    const double C38467 = C38069 * C467;
    const double C38461 = C38069 * C473;
    const double C38455 = C38069 * C466;
    const double C38643 = C38069 * C638;
    const double C38637 = C38069 * C631;
    const double C39051 = C38069 * C1016;
    const double C39045 = C38069 * C1009;
    const double C39799 = C38069 * C888;
    const double C39793 = C38069 * C877;
    const double C47199 = C38069 * C303;
    const double C47193 = C38069 * C296;
    const double C47505 = C38069 * C636;
    const double C47499 = C38069 * C630;
    const double C47625 = C38069 * C766;
    const double C47619 = C38069 * C761;
    const double C47801 = C38069 * C886;
    const double C47795 = C38069 * C876;
    const double C47785 = C38069 * C884;
    const double C47779 = C38069 * C875;
    const double C48117 = C38069 * C1155;
    const double C48111 = C38069 * C1150;
    const double C38105 = C38070 * C477;
    const double C38099 = C38070 * C468;
    const double C38093 = C38070 * C467;
    const double C38087 = C38070 * C475;
    const double C38081 = C38070 * C473;
    const double C38075 = C38070 * C466;
    const double C38293 = C38070 * C892;
    const double C38287 = C38070 * C879;
    const double C38281 = C38070 * C888;
    const double C38275 = C38070 * C877;
    const double C38475 = C38070 * C1018;
    const double C38469 = C38070 * C1010;
    const double C38463 = C38070 * C1016;
    const double C38457 = C38070 * C1009;
    const double C38645 = C38070 * C890;
    const double C38639 = C38070 * C878;
    const double C39053 = C38070 * C1244;
    const double C39047 = C38070 * C1238;
    const double C39801 = C38070 * C1157;
    const double C39795 = C38070 * C1151;
    const double C47197 = C38070 * C884;
    const double C47191 = C38070 * C875;
    const double C47507 = C38070 * C886;
    const double C47501 = C38070 * C876;
    const double C47623 = C38070 * C3211;
    const double C47617 = C38070 * C3207;
    const double C47799 = C38070 * C3555;
    const double C47793 = C38070 * C3551;
    const double C47787 = C38070 * C1155;
    const double C47781 = C38070 * C1150;
    const double C48115 = C38070 * C3674;
    const double C48109 = C38070 * C3669;
    const double C31657 = C31653 * C118;
    const double C31655 = C31651 * C50821;
    const double C31815 = C31651 * C51053;
    const double C33013 = C31651 * C1350;
    const double C31654 = C31650 * C118;
    const double C31814 = C31650 * C294;
    const double C33012 = C31650 * C1355;
    const double C31847 = C31845 * C295;
    const double C33014 = C31845 * C1356;
    const double C32036 = C32034 * C118;
    const double C366 = C364 - C360;
    const double C1379 = C1377 - C1369;
    const double C2449 = C2444 + C2445;
    const double C523 = C520 + C519;
    const double C5337 = C5333 * C50821;
    const double C31656 = C31652 * C50821;
    const double C2616 = C2615 - C2607;
    const double C3840 = C3839 - C3833;
    const double C2769 = C2766 + C2765;
    const double C5529 = C5527 * C50837;
    const double C6708 = C5527 * C50837;
    const double C31848 = C31846 * C50837;
    const double C33015 = C31846 * C50837;
    const double C5716 = C5714 * C50821;
    const double C32035 = C32033 * C50821;
    const double C19379 = C19370 + C19371;
    const double C48122 = C48113 + C48114;
    const double C13798 = C13788 + C13789;
    const double C19069 = C19054 + C19055;
    const double C45387 = C45381 + C45382;
    const double C47812 = C47797 + C47798;
    const double C8618 = C8616 * C624;
    const double C9622 = C8616 * C1479;
    const double C9820 = C8896 * C50837;
    const double C10164 = C8896 * C50837;
    const double C9050 = C9048 * C50821;
    const double C9202 =
        2 * C50018 - (C50016 * ce) / C49835 + C49825 * C50122 +
        (C49824 * C50170 * ae) / C49756 +
        C49824 *
            ((C50170 * ae) / C49756 +
             C49824 *
                 (2 * C50119 - (C50111 * ce) / C49835 +
                  C49825 *
                      ((-(C49825 * C49884 * ce) / C49689) / C49756 - C49860 +
                       C49825 * ((-(C49825 * C49864) / C49689) / C49756 -
                                 (C49884 * ce) / C49835))));
    const double C8719 =
        4 * ((-2 * C49988) / C49689 - (C49825 * C50049) / C49689 -
             (C50492 * ce) / C49689) +
        C49825 * ((-3 * C50049) / C49689 + C49825 * C50170 -
                  (C50547 * ce) / C49689) -
        ((3 * C50492 + C49825 * C50547) * ce) / C49689;
    const double C8879 = C49824 * ((-3 * C50049) / C49689 + C49825 * C50170 -
                                   (C50547 * ce) / C49689);
    const double C9199 = (-2 * C49988) / C49689 - (C49825 * C50049) / C49689 -
                         (C50492 * ce) / C49689 + C50170 * C50075;
    const double C354 = C343 + C344;
    const double C514 = C505 + C506;
    const double C5330 = C5313 + C5314;
    const double C31649 = C31632 + C31633;
    const double C680 = C673 + C674;
    const double C1661 = C1654 + C1655;
    const double C5525 = C5511 + C5512;
    const double C31844 = C31830 + C31831;
    const double C1046 = C1039 + C1040;
    const double C5713 = C5700 + C5701;
    const double C15533 = C15514 + C15515;
    const double C32032 = C32019 + C32020;
    const double C38126 = C38107 + C38108;
    const double C11230 =
        5 * (3 * C50122 - (C50117 * ce) / C49835 + C49825 * C50220) -
        ((4 * C50117 + C49825 * C50217) * ce) / C49835 +
        C49825 *
            (4 * C50220 - (C50217 * ce) / C49835 +
             C49825 *
                 (3 * C50218 - (C50211 * ce) / C49835 +
                  C49825 *
                      (2 * C50213 - (C50204 * ce) / C49835 +
                       C49825 * ((-(C49825 * C49922 * ce) / C49689) / C49756 -
                                 C49864 / C49835 +
                                 C49825 * ((-(C49825 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (C49922 * ce) / C49835)))));
    const double C11338 =
        ((4 * C50170 +
          C49825 *
              ((-3 * C50166) / C49689 +
               C49825 * ((-2 * C50161) / C49689 -
                         (C49825 * (C49825 * (C49825 * C49976 + C49949 * ce) +
                                    C49899 + C49825 * C49949 * ce)) /
                             C49689 -
                         (C50224 * ce) / C49689) -
               (C50226 * ce) / C49689) -
          ((3 * C50149 + C49825 * C50226) * ce) / C49689) *
         ae) /
            C49756 +
        C49824 *
            (4 * C50220 - (C50217 * ce) / C49835 +
             C49825 *
                 (3 * C50218 - (C50211 * ce) / C49835 +
                  C49825 *
                      (2 * C50213 - (C50204 * ce) / C49835 +
                       C49825 * ((-(C49825 * C49922 * ce) / C49689) / C49756 -
                                 C49864 / C49835 +
                                 C49825 * ((-(C49825 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (C49922 * ce) / C49835)))));
    const double C13903 =
        3 * (C50122 - (ae * C50253) / C49835 + C49824 * C50259) +
        (((-2 * C50253) / C49689 - (C49824 * C50258) / C49689) * ae) / C49756 +
        C49824 *
            (2 * C50259 - (ae * C50258) / C49835 +
             C49824 *
                 (C50218 - (ae * C49824 * C50243) / C49835 +
                  C49824 *
                      (C49824 * ((-(C49825 * C49922 * ce) / C49689) / C49756 -
                                 C49864 / C49835 +
                                 C49825 * ((-(C49825 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (C49922 * ce) / C49835)) -
                       (ae * C50243) / C49835)));
    const double C19482 =
        4 * (2 * C50267 - (ae * C50266) / C49835 + C49824 * C50338) +
        (((-3 * C50266) / C49689 + C49824 * C50339) * ae) / C49756 +
        C49824 *
            (3 * C50338 + (C50339 * ae) / C49756 +
             C49824 *
                 (2 * C50332 - (ae * C50330) / C49835 +
                  C49824 *
                      (C50213 - (ae * C49824 * C50237) / C49835 +
                       C49824 * (C49824 * ((-(C49825 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (C49922 * ce) / C49835) -
                                 (ae * C50237) / C49835))));
    const double C21738 =
        5 * (3 * C50321 + (C50318 * ae) / C49756 + C49824 * C50372) +
        ((4 * C50318 + C49824 * C50370) * ae) / C49756 +
        C49824 *
            (4 * C50372 + (C50370 * ae) / C49756 +
             C49824 *
                 (3 * C50369 + (C50365 * ae) / C49756 +
                  C49824 *
                      (2 * C50364 - (ae * C50354) / C49835 +
                       C49824 * ((-(ae * C49824 * C49976) / C49689) / C49756 -
                                 C49864 / C49835 +
                                 C49824 * ((-(C49824 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (ae * C49976) / C49835)))));
    const double C50188 = C50187 - C50180;
    const double C50248 = C49825 * C50247;
    const double C11620 =
        2 * ((C50170 * ae) / C49756 + C49824 * C50220) +
        ((C50170 + C50247 * C50075) * ae) / C49756 +
        C49824 *
            (C50220 + (C49824 * C50247 * ae) / C49756 +
             C49824 *
                 ((C50247 * ae) / C49756 +
                  C49824 *
                      (2 * C50213 - (C50204 * ce) / C49835 +
                       C49825 * ((-(C49825 * C49922 * ce) / C49689) / C49756 -
                                 C49864 / C49835 +
                                 C49825 * ((-(C49825 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (C49922 * ce) / C49835)))));
    const double C11618 =
        2 * C49824 * C50170 + C49824 * (C50170 + C50247 * C50075);
    const double C38124 = C38103 + C38104;
    const double C38121 = C38097 + C38098;
    const double C38120 = C38095 + C38096;
    const double C38117 = C38089 + C38090;
    const double C38112 = C38079 + C38080;
    const double C38109 = C38073 + C38074;
    const double C38306 = C38291 + C38292;
    const double C38303 = C38285 + C38286;
    const double C38302 = C38283 + C38284;
    const double C38299 = C38277 + C38278;
    const double C38488 = C38473 + C38474;
    const double C38485 = C38467 + C38468;
    const double C38482 = C38461 + C38462;
    const double C38479 = C38455 + C38456;
    const double C38652 = C38643 + C38644;
    const double C38649 = C38637 + C38638;
    const double C39060 = C39051 + C39052;
    const double C39057 = C39045 + C39046;
    const double C39808 = C39799 + C39800;
    const double C39805 = C39793 + C39794;
    const double C47206 = C47199 + C47200;
    const double C47203 = C47193 + C47194;
    const double C47514 = C47505 + C47506;
    const double C47511 = C47499 + C47500;
    const double C47632 = C47625 + C47626;
    const double C47629 = C47619 + C47620;
    const double C47814 = C47801 + C47802;
    const double C47811 = C47795 + C47796;
    const double C47806 = C47785 + C47786;
    const double C47803 = C47779 + C47780;
    const double C48124 = C48117 + C48118;
    const double C48121 = C48111 + C48112;
    const double C38125 = C38105 + C38106;
    const double C38122 = C38099 + C38100;
    const double C38119 = C38093 + C38094;
    const double C38116 = C38087 + C38088;
    const double C38113 = C38081 + C38082;
    const double C38110 = C38075 + C38076;
    const double C38307 = C38293 + C38294;
    const double C38304 = C38287 + C38288;
    const double C38301 = C38281 + C38282;
    const double C38298 = C38275 + C38276;
    const double C38489 = C38475 + C38476;
    const double C38486 = C38469 + C38470;
    const double C38483 = C38463 + C38464;
    const double C38480 = C38457 + C38458;
    const double C38653 = C38645 + C38646;
    const double C38650 = C38639 + C38640;
    const double C39061 = C39053 + C39054;
    const double C39058 = C39047 + C39048;
    const double C39809 = C39801 + C39802;
    const double C39806 = C39795 + C39796;
    const double C47205 = C47197 + C47198;
    const double C47202 = C47191 + C47192;
    const double C47515 = C47507 + C47508;
    const double C47512 = C47501 + C47502;
    const double C47631 = C47623 + C47624;
    const double C47628 = C47617 + C47618;
    const double C47813 = C47799 + C47800;
    const double C47810 = C47793 + C47794;
    const double C47807 = C47787 + C47788;
    const double C47804 = C47781 + C47782;
    const double C48123 = C48115 + C48116;
    const double C48120 = C48109 + C48110;
    const double C31658 = C31654 + C31655;
    const double C31836 = C31814 + C31815;
    const double C33016 = C33012 + C33013;
    const double C5340 = C5337 + C5338;
    const double C31659 = C31656 + C31657;
    const double C5531 = C5530 - C5529;
    const double C6711 = C6710 - C6708;
    const double C5718 = C5716 + C5717;
    const double C32037 = C32035 + C32036;
    const double C11549 = C50950 * C9202;
    const double C13467 = C50962 * C9202;
    const double C18879 = C15475 * C9202;
    const double C45078 = C50962 * C9202;
    const double C47622 = C38068 * C9202;
    const double C11234 = C117 * C8719;
    const double C11342 = C117 * C8879;
    const double C13292 = C5281 * C8879;
    const double C44917 = C31600 * C8879;
    const double C11548 = C117 * C9199;
    const double C13466 = C5281 * C9199;
    const double C18878 = C15478 * C9199;
    const double C45077 = C31600 * C9199;
    const double C47621 = C38071 * C9199;
    const double C362 = C354 * C50837;
    const double C1373 = C354 * C50837;
    const double C2447 = C354 * C50821;
    const double C522 = C514 * C50821;
    const double C686 = C680 * C624;
    const double C1503 = C680 * C1479;
    const double C2611 = C680 * C50837;
    const double C3837 = C680 * C50837;
    const double C8156 = C680 * C50821;
    const double C1667 = C1661 * C50837;
    const double C1909 = C1661 * C50837;
    const double C2768 = C1661 * C50821;
    const double C1052 = C1046 * C50821;
    const double C9203 =
        2 * C50029 - (C50026 * ce) / C49835 + C49825 * C50146 +
        (C49824 * C50188 * ae) / C49756 +
        C49824 *
            ((C50188 * ae) / C49756 +
             C49824 *
                 (2 * C50144 - (C50136 * ce) / C49835 +
                  C49825 * ((-(C49825 * C50128 * ce) / C49689) / C49756 -
                            C50126 / C49835 +
                            C49825 * ((-(C49825 * C49832 * std::pow(C49828, 8) *
                                         bs[8] * C49830) /
                                       C49689) /
                                          C49756 -
                                      (C50128 * ce) / C49835))));
    const double C8721 =
        4 * ((-2 * C49992) / C49689 - (C49825 * C50058) / C49689 -
             (C50496 * ce) / C49689) +
        C49825 * ((-3 * C50058) / C49689 + C49825 * C50188 -
                  (C50552 * ce) / C49689) -
        ((3 * C50496 + C49825 * C50552) * ce) / C49689;
    const double C8881 = C49824 * ((-3 * C50058) / C49689 + C49825 * C50188 -
                                   (C50552 * ce) / C49689);
    const double C9201 = (-2 * C49992) / C49689 - (C49825 * C50058) / C49689 -
                         (C50496 * ce) / C49689 + C50188 * C50075;
    const double C50249 = C50235 + C50248;
    const double C31849 = C31836 - C31847;
    const double C33017 = C33016 - C33014;
    const double C11237 = C11234 + C11235;
    const double C11345 = C11342 + C11343;
    const double C13298 = C13292 + C13293;
    const double C44923 = C44917 + C44918;
    const double C11551 = C11548 + C11549;
    const double C13480 = C13466 + C13467;
    const double C18887 = C18878 + C18879;
    const double C45083 = C45077 + C45078;
    const double C47630 = C47621 + C47622;
    const double C50250 = C50249 - C50240;
    const double C31850 = C31849 - C31848;
    const double C33018 = C33017 - C33015;
    const double C11544 =
        3 * C50122 - (C50117 * ce) / C49835 + C49825 * C50220 +
        (C49824 * C50250 * ae) / C49756 +
        C49824 *
            ((C50250 * ae) / C49756 +
             C49824 *
                 (3 * C50218 - (C50211 * ce) / C49835 +
                  C49825 *
                      (2 * C50213 - (C50204 * ce) / C49835 +
                       C49825 * ((-(C49825 * C49922 * ce) / C49689) / C49756 -
                                 C49864 / C49835 +
                                 C49825 * ((-(C49825 * std::pow(C49828, 8) *
                                              bs[8] * C49830) /
                                            C49689) /
                                               C49756 -
                                           (C49922 * ce) / C49835)))));
    const double C11229 =
        5 * ((-3 * C50049) / C49689 + C49825 * C50170 -
             (C50547 * ce) / C49689) +
        C49825 * (4 * C50170 + C49825 * C50250 - (C50569 * ce) / C49689) -
        ((4 * C50547 + C49825 * C50569) * ce) / C49689;
    const double C11337 =
        C49824 * (4 * C50170 + C49825 * C50250 - (C50569 * ce) / C49689);
    const double C11543 = (-3 * C50049) / C49689 + C49825 * C50170 -
                          (C50547 * ce) / C49689 + C50250 * C50075;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C51097 +
            (C1358 + C1359 - C1360 - C1361) * C51081 + C1378 * C22817) *
               C22818 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C51097 +
            (C3826 + C3827 - C3828 - C3829) * C51081 + C3840 * C22817) *
               C50938) *
              C51098 +
          (((C1360 - (C1359 + C1358) + C1361) * C51097 +
            (C1364 - (C1363 + C1362) + C1365) * C51081 +
            (C1368 - (C1367 + C1366) + C1369) * C22817) *
               C22818 +
           ((C3828 - (C3827 + C3826) + C3829) * C51097 +
            (C3832 - (C3831 + C3830) + C3833) * C51081 +
            (C3834 - (C3835 + C3836) + C3837) * C22817) *
               C50938) *
              C51084 +
          ((C1378 * C51097 + C1379 * C51081 +
            (C1372 + C1371 - C1370 - C1373) * C22817) *
               C22818 +
           (C3840 * C51097 + (C3836 + C3835 - C3834 - C3837) * C51081 +
            (C353 * C1355 + C354 * C1350 -
             (C117 * C634 + C50950 * C643) * C1356 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C22817) *
               C50938) *
              C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C50950 * C126) * C1482 +
                    (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
                    C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                       C51097 +
                   (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C51081 +
                   (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C22817) *
                      C22818 +
                  ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 -
                    C2937 * C51087 + C3060 * C1484 + C3061 * C1479) *
                       C51097 +
                   (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C51081 +
                   (C3993 + C3994 - C3995 - C3996 + C3997 + C3998) * C22817) *
                      C50938) *
                     C1480 +
                 (((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C51097 +
                   (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C51081 +
                   (C1500 - (C1499 + C1498) + C1501 - C1502 - C1503) * C22817) *
                      C22818 +
                  ((C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C51097 +
                   (C3995 - (C3994 + C3993) + C3996 - C3997 - C3998) * C51081 +
                   (C679 * C1483 - (C352 * C51099 + C351 * C1482) +
                    C680 * C51087 - (C117 * C764 + C50950 * C771) * C1484 -
                    (C117 * C772 + C50950 * C776) * C1479) *
                       C22817) *
                      C50938) *
                     C50792) *
                C50851) /
               (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C51097 +
             (C1358 + C1359 - C1360 - C1361) * C51081 + C1378 * C22817) *
                C22818 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C51097 +
             (C3826 + C3827 - C3828 - C3829) * C51081 + C3840 * C22817) *
                C50938) *
               C1480 +
           (((C1360 - (C1359 + C1358) + C1361) * C51097 +
             (C1364 - (C1363 + C1362) + C1365) * C51081 +
             (C1368 - (C1367 + C1366) + C1369) * C22817) *
                C22818 +
            ((C3828 - (C3827 + C3826) + C3829) * C51097 +
             (C3832 - (C3831 + C3830) + C3833) * C51081 +
             (C3834 - (C3835 + C3836) + C3837) * C22817) *
                C50938) *
               C50792) *
              C51055 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C51097 +
             (C1662 - (C1640 + C1641) + C1663) * C51081 +
             (C1664 - (C1646 + C1647) + C1665) * C22817) *
                C22818 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C51097 +
             (C4193 - (C4194 + C4195) + C4196) * C51081 +
             (C4197 - (C4198 + C4199) + C4200) * C22817) *
                C50938) *
               C1480 +
           (((C1641 + C1640 - C1662 - C1663) * C51097 +
             (C1647 + C1646 - C1664 - C1665) * C51081 +
             (C1653 + C1652 - C1666 - C1667) * C22817) *
                C22818 +
            ((C4195 + C4194 - C4193 - C4196) * C51097 +
             (C4199 + C4198 - C4197 - C4200) * C51081 +
             (C1660 * C1355 + C1661 * C1350 -
              (C117 * C882 + C50950 * C897) * C1356 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C22817) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C51097 +
             (C1358 + C1359 - C1360 - C1361) * C51081 + C1378 * C22817) *
                C22818 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C51097 +
             (C3826 + C3827 - C3828 - C3829) * C51081 + C3840 * C22817) *
                C50938) *
               C51046 +
           (((C1360 - (C1359 + C1358) + C1361) * C51097 +
             (C1364 - (C1363 + C1362) + C1365) * C51081 +
             (C1368 - (C1367 + C1366) + C1369) * C22817) *
                C22818 +
            ((C3828 - (C3827 + C3826) + C3829) * C51097 +
             (C3832 - (C3831 + C3830) + C3833) * C51081 +
             (C3834 - (C3835 + C3836) + C3837) * C22817) *
                C50938) *
               C50792) *
              C1765 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C51097 +
             (C1662 - (C1640 + C1641) + C1663) * C51081 +
             (C1664 - (C1646 + C1647) + C1665) * C22817) *
                C22818 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C51097 +
             (C4193 - (C4194 + C4195) + C4196) * C51081 +
             (C4197 - (C4198 + C4199) + C4200) * C22817) *
                C50938) *
               C51046 +
           (((C1641 + C1640 - C1662 - C1663) * C51097 +
             (C1647 + C1646 - C1664 - C1665) * C51081 +
             (C1653 + C1652 - C1666 - C1667) * C22817) *
                C22818 +
            ((C4195 + C4194 - C4193 - C4196) * C51097 +
             (C4199 + C4198 - C4197 - C4200) * C51081 +
             (C1660 * C1355 + C1661 * C1350 -
              (C117 * C882 + C50950 * C897) * C1356 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C22817) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C50950 * C126) * C1482 +
                    (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
                    C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                       C51097 +
                   (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C51081 +
                   (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C22817) *
                      C22818 +
                  ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 -
                    C2937 * C51087 + C3060 * C1484 + C3061 * C1479) *
                       C51097 +
                   (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C51081 +
                   (C3993 + C3994 - C3995 - C3996 + C3997 + C3998) * C22817) *
                      C50938) *
                     C50787 * C1765 +
                 (((C3236 * C1483 -
                    ((C117 * C480 + C50950 * C488) * C51099 +
                     (C117 * C470 + C50950 * C481) * C1482) +
                    C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
                       C51097 +
                   (C1656 * C1483 - (C508 * C51099 + C507 * C1482) +
                    C1657 * C51087 - C3240 * C1484 - C3241 * C1479) *
                       C51081 +
                   (C1658 * C1483 - (C510 * C51099 + C509 * C1482) +
                    C1659 * C51087 - C3242 * C1484 - C3243 * C1479) *
                       C22817) *
                      C22818 +
                  ((C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) +
                    C3239 * C51087 - C8893 * C1484 - C8894 * C1479) *
                       C51097 +
                   (C3240 * C1483 - (C1657 * C51099 + C1656 * C1482) +
                    C3241 * C51087 - C8895 * C1484 - C8896 * C1479) *
                       C51081 +
                   (C3242 * C1483 - (C1659 * C51099 + C1658 * C1482) +
                    C3243 * C51087 - (C117 * C3209 + C50950 * C3214) * C1484 -
                    (C117 * C3215 + C50950 * C3218) * C1479) *
                       C22817) *
                      C50938) *
                     C50787 * C50863)) /
               (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C51097 +
            (C1358 + C1359 - C1360 - C1361) * C51081 + C1378 * C22817) *
               C22818 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C51097 +
            (C3826 + C3827 - C3828 - C3829) * C51081 + C3840 * C22817) *
               C50938) *
              C50787 * C51100 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C51097 +
            (C1662 - (C1640 + C1641) + C1663) * C51081 +
            (C1664 - (C1646 + C1647) + C1665) * C22817) *
               C22818 +
           ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C51097 +
            (C4193 - (C4194 + C4195) + C4196) * C51081 +
            (C4197 - (C4198 + C4199) + C4200) * C22817) *
               C50938) *
              C50787 * C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C1355 +
             (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
             C3569 * C50837) *
                C51097 +
            (C1041 * C1355 + C1042 * C1350 - C3398 * C1356 - C3399 * C50837) *
                C51081 +
            (C1043 * C1355 + C1044 * C1350 - C3400 * C1356 - C3401 * C50837) *
                C22817) *
               C22818 +
           ((C3568 * C1355 + C3569 * C1350 - C9209 * C1356 - C9210 * C50837) *
                C51097 +
            (C3398 * C1355 + C3399 * C1350 - C9047 * C1356 - C9048 * C50837) *
                C51081 +
            (C3400 * C1355 + C3401 * C1350 -
             (C117 * C3553 + C50950 * C3558) * C1356 -
             (C117 * C3559 + C50950 * C3562) * C50837) *
                C22817) *
               C50938) *
              C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51097 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C51081 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C22817) *
               C22818 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51097 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C51081 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C22817) *
               C50938) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C51097 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C51081 +
            (C669 - (C668 + C667) + C670 - C685 - C686) * C22817) *
               C22818 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C51097 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C51081 +
            (C679 * C628 - (C352 * C622 + C351 * C627) + C680 * C623 -
             (C117 * C764 + C50950 * C771) * C629 -
             (C117 * C772 + C50950 * C776) * C624) *
                C22817) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51097 +
            (C178 + C179) * C51081 + C188 * C22817) *
               C22818 +
           ((C2612 * C118 + C2613 * C50821) * C51097 +
            (C2440 + C2441) * C51081 + C2448 * C22817) *
               C50938) *
              C112 -
          ((C2449 * C22817 + (C2443 + C2442) * C51081 +
            (C2441 + C2440) * C51097) *
               C50938 +
           (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
               C22818) *
              C113 +
          ((C188 * C51097 + C189 * C51081 + (C185 + C184) * C22817) * C22818 +
           (C2448 * C51097 + (C2445 + C2444) * C51081 +
            (C2446 + C2447) * C22817) *
               C50938) *
              C114 -
          ((((C117 * C313 + C50950 * C319) * C50821 +
             (C117 * C301 + C50950 * C312) * C118) *
                C22817 +
            (C2447 + C2446) * C51081 + C2449 * C51097) *
               C50938 +
           ((C187 + C186) * C22817 + C190 * C51081 + C191 * C51097) * C22818) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51097 +
             (C178 + C179) * C51081 + C188 * C22817) *
                C22818 +
            ((C2612 * C118 + C2613 * C50821) * C51097 +
             (C2440 + C2441) * C51081 + C2448 * C22817) *
                C50938) *
               C51046 -
           ((C2449 * C22817 + (C2443 + C2442) * C51081 +
             (C2441 + C2440) * C51097) *
                C50938 +
            (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
                C22818) *
               C50792) *
              C1005 +
          ((((C515 + C516) * C51097 + (C517 + C518) * C51081 +
             (C519 + C520) * C22817) *
                C22818 +
            ((C2763 + C2764) * C51097 + (C2765 + C2766) * C51081 +
             (C2767 + C2768) * C22817) *
                C50938) *
               C50792 -
           ((C2769 * C22817 + (C2764 + C2763) * C51081 +
             (C3237 * C50821 + C3236 * C118) * C51097) *
                C50938 +
            (C524 * C22817 + (C516 + C515) * C51081 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C51097) *
                C22818) *
               C51046) *
              C1006 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C51097 +
             (C1047 + C1048) * C51081 + (C1049 + C1050) * C22817) *
                C22818 +
            ((C3568 * C118 + C3569 * C50821) * C51097 +
             (C3402 + C3403) * C51081 + (C3404 + C3405) * C22817) *
                C50938) *
               C51046 -
           ((((C117 * C1161 + C50950 * C1165) * C50821 +
              (C117 * C1153 + C50950 * C1160) * C118) *
                 C22817 +
             (C3405 + C3404) * C51081 + (C3403 + C3402) * C51097) *
                C50938 +
            ((C1052 + C1051) * C22817 + (C1050 + C1049) * C51081 +
             (C1048 + C1047) * C51097) *
                C22818) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C51097 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C51081 +
           (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
            C677 * C759 + C678 * C754 - C2940 * C760 - C2941 * C755) *
               C22817) *
              C22818 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C51097 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C51081 +
           (C348 * C757 + C349 * C752 - C677 * C758 - C678 * C753 +
            C2940 * C759 + C2941 * C754 -
            (C117 * C3045 + C50950 * C3050) * C760 -
            (C117 * C3051 + C50950 * C3054) * C755) *
               C22817) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51097 +
            (C321 + C322 - C355 - C356) * C51081 + C365 * C22817) *
               C22818 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51097 +
            (C2600 + C2601 - C2602 - C2603) * C51081 + C2616 * C22817) *
               C50938) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C51097 +
            (C357 - (C328 + C327) + C358) * C51081 +
            (C359 - (C334 + C333) + C360) * C22817) *
               C22818 +
           ((C2602 - (C2601 + C2600) + C2603) * C51097 +
            (C2606 - (C2605 + C2604) + C2607) * C51081 +
            (C2608 - (C2609 + C2610) + C2611) * C22817) *
               C50938) *
              C292 +
          ((C365 * C51097 + C366 * C51081 +
            (C342 + C341 - C361 - C362) * C22817) *
               C22818 +
           (C2616 * C51097 + (C2610 + C2609 - C2608 - C2611) * C51081 +
            (C353 * C294 + C354 * C51053 -
             (C117 * C634 + C50950 * C643) * C295 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C22817) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51097 +
            (C321 + C322 - C355 - C356) * C51081 + C365 * C22817) *
               C22818 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51097 +
            (C2600 + C2601 - C2602 - C2603) * C51081 + C2616 * C22817) *
               C50938) *
              C50787 * C1005 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C51097 +
            (C1898 - (C1899 + C1900) + C1901) * C51081 +
            (C1902 - (C1903 + C1904) + C1905) * C22817) *
               C22818 +
           ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C51097 +
            (C4541 - (C4542 + C4543) + C4544) * C51081 +
            (C4545 - (C4546 + C4547) + C4548) * C22817) *
               C50938) *
              C50787 * C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C294 +
             (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
             C3569 * C50837) *
                C51097 +
            (C1041 * C294 + C1042 * C51053 - C3398 * C295 - C3399 * C50837) *
                C51081 +
            (C1043 * C294 + C1044 * C51053 - C3400 * C295 - C3401 * C50837) *
                C22817) *
               C22818 +
           ((C3568 * C294 + C3569 * C51053 - C9209 * C295 - C9210 * C50837) *
                C51097 +
            (C3398 * C294 + C3399 * C51053 - C9047 * C295 - C9048 * C50837) *
                C51081 +
            (C3400 * C294 + C3401 * C51053 -
             (C117 * C3553 + C50950 * C3558) * C295 -
             (C117 * C3559 + C50950 * C3562) * C50837) *
                C22817) *
               C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51097 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C51081 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C22817) *
               C22818 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51097 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C51081 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C22817) *
               C50938) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C51097 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C51081 +
            (C1658 * C628 - (C510 * C622 + C509 * C627) + C1659 * C623 -
             C3242 * C629 - C3243 * C624) *
                C22817) *
               C22818 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C51097 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C51081 +
            (C3242 * C628 - (C1659 * C622 + C1658 * C627) + C3243 * C623 -
             (C117 * C3209 + C50950 * C3214) * C629 -
             (C117 * C3215 + C50950 * C3218) * C624) *
                C22817) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51097 +
             (C178 + C179) * C51081 + C188 * C22817) *
                C22818 +
            ((C2612 * C118 + C2613 * C50821) * C51097 +
             (C2440 + C2441) * C51081 + C2448 * C22817) *
                C50938) *
               C291 -
           ((C2449 * C22817 + (C2443 + C2442) * C51081 +
             (C2441 + C2440) * C51097) *
                C50938 +
            (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
                C22818) *
               C292 +
           ((C188 * C51097 + C189 * C51081 + (C185 + C184) * C22817) * C22818 +
            (C2448 * C51097 + (C2445 + C2444) * C51081 +
             (C2446 + C2447) * C22817) *
                C50938) *
               C293) *
              C51055 +
          ((((C515 + C516) * C51097 + (C517 + C518) * C51081 +
             (C519 + C520) * C22817) *
                C22818 +
            ((C2763 + C2764) * C51097 + (C2765 + C2766) * C51081 +
             (C2767 + C2768) * C22817) *
                C50938) *
               C292 -
           ((C2769 * C22817 + (C2764 + C2763) * C51081 +
             (C3237 * C50821 + C3236 * C118) * C51097) *
                C50938 +
            (C524 * C22817 + (C516 + C515) * C51081 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C51097) *
                C22818) *
               C291 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C22817 +
             (C2768 + C2767) * C51081 + C2769 * C51097) *
                C50938 +
            ((C522 + C521) * C22817 + C523 * C51081 + C524 * C51097) * C22818) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51097 +
            (C178 + C179) * C51081 + C188 * C22817) *
               C22818 +
           ((C2612 * C118 + C2613 * C50821) * C51097 +
            (C2440 + C2441) * C51081 + C2448 * C22817) *
               C50938) *
              C50787 * C1232 -
          ((C2769 * C22817 + (C2764 + C2763) * C51081 +
            (C3237 * C50821 + C3236 * C118) * C51097) *
               C50938 +
           (C524 * C22817 + (C516 + C515) * C51081 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C51097) *
               C22818) *
              C50787 * C1233 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C51097 +
            (C1047 + C1048) * C51081 + (C1049 + C1050) * C22817) *
               C22818 +
           ((C3568 * C118 + C3569 * C50821) * C51097 +
            (C3402 + C3403) * C51081 + (C3404 + C3405) * C22817) *
               C50938) *
              C50787 * C1234 -
          ((((C117 * C3670 + C50950 * C3676) * C50821 +
             (C117 * C3667 + C50950 * C3671) * C118) *
                C22817 +
            ((C117 * C3672 + C50950 * C3677) * C50821 +
             (C117 * C3668 + C50950 * C3673) * C118) *
                C51081 +
            ((C117 * C3674 + C50950 * C3678) * C50821 +
             (C117 * C3669 + C50950 * C3675) * C118) *
                C51097) *
               C50938 +
           (((C117 * C1242 + C50950 * C1249) * C50821 +
             (C117 * C1237 + C50950 * C1243) * C118) *
                C22817 +
            ((C117 * C1244 + C50950 * C1250) * C50821 +
             (C117 * C1238 + C50950 * C1245) * C118) *
                C51081 +
            ((C117 * C1246 + C50950 * C1251) * C50821 +
             (C117 * C1239 + C50950 * C1247) * C118) *
                C51097) *
               C22818) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51097 +
             (C178 + C179) * C51081 + C188 * C22817) *
                C22818 +
            ((C2612 * C118 + C2613 * C50821) * C51097 +
             (C2440 + C2441) * C51081 + C2448 * C22817) *
                C50938) *
               C51098 -
           ((C2449 * C22817 + (C2443 + C2442) * C51081 +
             (C2441 + C2440) * C51097) *
                C50938 +
            (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
                C22818) *
               C51084 +
           ((C188 * C51097 + C189 * C51081 + (C185 + C184) * C22817) * C22818 +
            (C2448 * C51097 + (C2445 + C2444) * C51081 +
             (C2446 + C2447) * C22817) *
                C50938) *
               C1354) *
              C1765 +
          ((((C515 + C516) * C51097 + (C517 + C518) * C51081 +
             (C519 + C520) * C22817) *
                C22818 +
            ((C2763 + C2764) * C51097 + (C2765 + C2766) * C51081 +
             (C2767 + C2768) * C22817) *
                C50938) *
               C51084 -
           ((C2769 * C22817 + (C2764 + C2763) * C51081 +
             (C3237 * C50821 + C3236 * C118) * C51097) *
                C50938 +
            (C524 * C22817 + (C516 + C515) * C51081 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C51097) *
                C22818) *
               C51098 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C22817 +
             (C2768 + C2767) * C51081 + C2769 * C51097) *
                C50938 +
            ((C522 + C521) * C22817 + C523 * C51081 + C524 * C51097) * C22818) *
               C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C294 +
              (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
              C2613 * C50837) *
                 C51097 +
             (C321 + C322 - C355 - C356) * C51081 + C365 * C22817) *
                C22818 +
            ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                 C51097 +
             (C2600 + C2601 - C2602 - C2603) * C51081 + C2616 * C22817) *
                C50938) *
               C1480 +
           (((C355 - (C322 + C321) + C356) * C51097 +
             (C357 - (C328 + C327) + C358) * C51081 +
             (C359 - (C334 + C333) + C360) * C22817) *
                C22818 +
            ((C2602 - (C2601 + C2600) + C2603) * C51097 +
             (C2606 - (C2605 + C2604) + C2607) * C51081 +
             (C2608 - (C2609 + C2610) + C2611) * C22817) *
                C50938) *
               C50792) *
              C1765 +
          ((((C3236 * C295 -
              ((C117 * C480 + C50950 * C488) * C51053 +
               (C117 * C470 + C50950 * C481) * C294) +
              C3237 * C50837) *
                 C51097 +
             (C1898 - (C1899 + C1900) + C1901) * C51081 +
             (C1902 - (C1903 + C1904) + C1905) * C22817) *
                C22818 +
            ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                 C51097 +
             (C4541 - (C4542 + C4543) + C4544) * C51081 +
             (C4545 - (C4546 + C4547) + C4548) * C22817) *
                C50938) *
               C1480 +
           (((C1900 + C1899 - C1898 - C1901) * C51097 +
             (C1904 + C1903 - C1902 - C1905) * C51081 +
             (C1908 + C1907 - C1906 - C1909) * C22817) *
                C22818 +
            ((C4543 + C4542 - C4541 - C4544) * C51097 +
             (C4547 + C4546 - C4545 - C4548) * C51081 +
             (C1660 * C294 + C1661 * C51053 -
              (C117 * C882 + C50950 * C897) * C295 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C22817) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51097 +
             (C178 + C179) * C51081 + C188 * C22817) *
                C22818 +
            ((C2612 * C118 + C2613 * C50821) * C51097 +
             (C2440 + C2441) * C51081 + C2448 * C22817) *
                C50938) *
               C1480 -
           ((C2449 * C22817 + (C2443 + C2442) * C51081 +
             (C2441 + C2440) * C51097) *
                C50938 +
            (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
                C22818) *
               C50792) *
              C51100 +
          ((((C515 + C516) * C51097 + (C517 + C518) * C51081 +
             (C519 + C520) * C22817) *
                C22818 +
            ((C2763 + C2764) * C51097 + (C2765 + C2766) * C51081 +
             (C2767 + C2768) * C22817) *
                C50938) *
               C50792 -
           ((C2769 * C22817 + (C2764 + C2763) * C51081 +
             (C3237 * C50821 + C3236 * C118) * C51097) *
                C50938 +
            (C524 * C22817 + (C516 + C515) * C51081 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C51097) *
                C22818) *
               C1480) *
              C51090 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C51097 +
             (C1047 + C1048) * C51081 + (C1049 + C1050) * C22817) *
                C22818 +
            ((C3568 * C118 + C3569 * C50821) * C51097 +
             (C3402 + C3403) * C51081 + (C3404 + C3405) * C22817) *
                C50938) *
               C1480 -
           ((((C117 * C1161 + C50950 * C1165) * C50821 +
              (C117 * C1153 + C50950 * C1160) * C118) *
                 C22817 +
             (C3405 + C3404) * C51081 + (C3403 + C3402) * C51097) *
                C50938 +
            ((C1052 + C1051) * C22817 + (C1050 + C1049) * C51081 +
             (C1048 + C1047) * C51097) *
                C22818) *
               C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51097 +
            (C178 + C179) * C51081 + C188 * C22817) *
               C22818 +
           ((C2612 * C118 + C2613 * C50821) * C51097 +
            (C2440 + C2441) * C51081 + C2448 * C22817) *
               C50938) *
              C112 -
          ((C2449 * C22817 + (C2443 + C2442) * C51081 +
            (C2441 + C2440) * C51097) *
               C50938 +
           (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
               C22818) *
              C113 +
          ((C188 * C51097 + C189 * C51081 + (C185 + C184) * C22817) * C22818 +
           (C2448 * C51097 + (C2445 + C2444) * C51081 +
            (C2446 + C2447) * C22817) *
               C50938) *
              C114 -
          ((((C117 * C313 + C50950 * C319) * C50821 +
             (C117 * C301 + C50950 * C312) * C118) *
                C22817 +
            (C2447 + C2446) * C51081 + C2449 * C51097) *
               C50938 +
           ((C187 + C186) * C22817 + C190 * C51081 + C191 * C51097) * C22818) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51097 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C51081 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C22817) *
               C22818 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51097 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C51081 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C22817) *
               C50938) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C51097 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C51081 +
            (C669 - (C668 + C667) + C670 - C685 - C686) * C22817) *
               C22818 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C51097 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C51081 +
            (C679 * C628 - (C352 * C622 + C351 * C627) + C680 * C623 -
             (C117 * C764 + C50950 * C771) * C629 -
             (C117 * C772 + C50950 * C776) * C624) *
                C22817) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51097 +
            (C321 + C322 - C355 - C356) * C51081 + C365 * C22817) *
               C22818 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51097 +
            (C2600 + C2601 - C2602 - C2603) * C51081 + C2616 * C22817) *
               C50938) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C51097 +
            (C357 - (C328 + C327) + C358) * C51081 +
            (C359 - (C334 + C333) + C360) * C22817) *
               C22818 +
           ((C2602 - (C2601 + C2600) + C2603) * C51097 +
            (C2606 - (C2605 + C2604) + C2607) * C51081 +
            (C2608 - (C2609 + C2610) + C2611) * C22817) *
               C50938) *
              C292 +
          ((C365 * C51097 + C366 * C51081 +
            (C342 + C341 - C361 - C362) * C22817) *
               C22818 +
           (C2616 * C51097 + (C2610 + C2609 - C2608 - C2611) * C51081 +
            (C353 * C294 + C354 * C51053 -
             (C117 * C634 + C50950 * C643) * C295 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C22817) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C51097 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C51081 +
           (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
            C677 * C759 + C678 * C754 - C2940 * C760 - C2941 * C755) *
               C22817) *
              C22818 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C51097 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C51081 +
           (C348 * C757 + C349 * C752 - C677 * C758 - C678 * C753 +
            C2940 * C759 + C2941 * C754 -
            (C117 * C3045 + C50950 * C3050) * C760 -
            (C117 * C3051 + C50950 * C3054) * C755) *
               C22817) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51097 +
             (C178 + C179) * C51081 + C188 * C22817) *
                C22818 +
            ((C2612 * C118 + C2613 * C50821) * C51097 +
             (C2440 + C2441) * C51081 + C2448 * C22817) *
                C50938) *
               C291 -
           ((C2449 * C22817 + (C2443 + C2442) * C51081 +
             (C2441 + C2440) * C51097) *
                C50938 +
            (C191 * C22817 + (C181 + C180) * C51081 + (C179 + C178) * C51097) *
                C22818) *
               C292 +
           ((C188 * C51097 + C189 * C51081 + (C185 + C184) * C22817) * C22818 +
            (C2448 * C51097 + (C2445 + C2444) * C51081 +
             (C2446 + C2447) * C22817) *
                C50938) *
               C293) *
              C51055 +
          ((((C515 + C516) * C51097 + (C517 + C518) * C51081 +
             (C519 + C520) * C22817) *
                C22818 +
            ((C2763 + C2764) * C51097 + (C2765 + C2766) * C51081 +
             (C2767 + C2768) * C22817) *
                C50938) *
               C292 -
           ((C2769 * C22817 + (C2764 + C2763) * C51081 +
             (C3237 * C50821 + C3236 * C118) * C51097) *
                C50938 +
            (C524 * C22817 + (C516 + C515) * C51081 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C51097) *
                C22818) *
               C291 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C22817 +
             (C2768 + C2767) * C51081 + C2769 * C51097) *
                C50938 +
            ((C522 + C521) * C22817 + C523 * C51081 + C524 * C51097) * C22818) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51097 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C51081 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C22817) *
               C22818 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51097 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C51081 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C22817) *
               C50938) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C51097 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C51081 +
            (C1658 * C628 - (C510 * C622 + C509 * C627) + C1659 * C623 -
             C3242 * C629 - C3243 * C624) *
                C22817) *
               C22818 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C51097 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C51081 +
            (C3242 * C628 - (C1659 * C622 + C1658 * C627) + C3243 * C623 -
             (C117 * C3209 + C50950 * C3214) * C629 -
             (C117 * C3215 + C50950 * C3218) * C624) *
                C22817) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C25448 +
            (C1358 + C1359 - C1360 - C1361) * C50770) *
               C51101 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C25448 +
            (C3826 + C3827 - C3828 - C3829) * C50770) *
               C51093 +
           ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C25448 +
            (C9463 + C9464 - C9465 - C9466) * C50770) *
               C25452) *
              C51098 +
          (((C1360 - (C1359 + C1358) + C1361) * C25448 +
            (C1364 - (C1363 + C1362) + C1365) * C50770) *
               C51101 +
           ((C3828 - (C3827 + C3826) + C3829) * C25448 +
            (C3832 - (C3831 + C3830) + C3833) * C50770) *
               C51093 +
           ((C9465 - (C9464 + C9463) + C9466) * C25448 +
            (C9467 - (C9468 + C9469) + C9470) * C50770) *
               C25452) *
              C51084 +
          ((C1378 * C25448 + C1379 * C50770) * C51101 +
           (C3840 * C25448 + (C3836 + C3835 - C3834 - C3837) * C50770) *
               C51093 +
           ((C9469 + C9468 - C9467 - C9470) * C25448 +
            (C679 * C1355 + C680 * C1350 -
             (C117 * C764 + C50950 * C771) * C1356 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C25452) *
              C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C25448 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C50770) *
               C51101 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C25448 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C50770) *
               C51093 +
           ((C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
             C8729 * C1484 + C8730 * C1479) *
                C25448 +
            (C9617 + C9618 - C9619 - C9620 + C9621 + C9622) * C50770) *
               C25452) *
              C1480 +
          (((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C25448 +
            (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C50770) *
               C51101 +
           ((C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C25448 +
            (C3995 - (C3994 + C3993) + C3996 - C3997 - C3998) * C50770) *
               C51093 +
           ((C9619 - (C9618 + C9617) + C9620 - C9621 - C9622) * C25448 +
            (C2940 * C1483 - (C678 * C51099 + C677 * C1482) + C2941 * C51087 -
             (C117 * C3045 + C50950 * C3050) * C1484 -
             (C117 * C3051 + C50950 * C3054) * C1479) *
                C50770) *
               C25452) *
              C50792) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C25448 +
             (C1358 + C1359 - C1360 - C1361) * C50770) *
                C51101 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C25448 +
             (C3826 + C3827 - C3828 - C3829) * C50770) *
                C51093 +
            ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                 C25448 +
             (C9463 + C9464 - C9465 - C9466) * C50770) *
                C25452) *
               C1480 +
           (((C1360 - (C1359 + C1358) + C1361) * C25448 +
             (C1364 - (C1363 + C1362) + C1365) * C50770) *
                C51101 +
            ((C3828 - (C3827 + C3826) + C3829) * C25448 +
             (C3832 - (C3831 + C3830) + C3833) * C50770) *
                C51093 +
            ((C9465 - (C9464 + C9463) + C9466) * C25448 +
             (C9467 - (C9468 + C9469) + C9470) * C50770) *
                C25452) *
               C50792) *
              C51055 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C25448 +
             (C1662 - (C1640 + C1641) + C1663) * C50770) *
                C51101 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C25448 +
             (C4193 - (C4194 + C4195) + C4196) * C50770) *
                C51093 +
            ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) +
              C8894 * C50837) *
                 C25448 +
             (C9817 - (C9818 + C9819) + C9820) * C50770) *
                C25452) *
               C1480 +
           (((C1641 + C1640 - C1662 - C1663) * C25448 +
             (C1647 + C1646 - C1664 - C1665) * C50770) *
                C51101 +
            ((C4195 + C4194 - C4193 - C4196) * C25448 +
             (C4199 + C4198 - C4197 - C4200) * C50770) *
                C51093 +
            ((C9819 + C9818 - C9817 - C9820) * C25448 +
             (C3242 * C1355 + C3243 * C1350 -
              (C117 * C3209 + C50950 * C3214) * C1356 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C25452) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C25448 +
             (C1358 + C1359 - C1360 - C1361) * C50770) *
                C51101 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C25448 +
             (C3826 + C3827 - C3828 - C3829) * C50770) *
                C51093 +
            ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                 C25448 +
             (C9463 + C9464 - C9465 - C9466) * C50770) *
                C25452) *
               C51046 +
           (((C1360 - (C1359 + C1358) + C1361) * C25448 +
             (C1364 - (C1363 + C1362) + C1365) * C50770) *
                C51101 +
            ((C3828 - (C3827 + C3826) + C3829) * C25448 +
             (C3832 - (C3831 + C3830) + C3833) * C50770) *
                C51093 +
            ((C9465 - (C9464 + C9463) + C9466) * C25448 +
             (C9467 - (C9468 + C9469) + C9470) * C50770) *
                C25452) *
               C50792) *
              C1765 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C25448 +
             (C1662 - (C1640 + C1641) + C1663) * C50770) *
                C51101 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C25448 +
             (C4193 - (C4194 + C4195) + C4196) * C50770) *
                C51093 +
            ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) +
              C8894 * C50837) *
                 C25448 +
             (C9817 - (C9818 + C9819) + C9820) * C50770) *
                C25452) *
               C51046 +
           (((C1641 + C1640 - C1662 - C1663) * C25448 +
             (C1647 + C1646 - C1664 - C1665) * C50770) *
                C51101 +
            ((C4195 + C4194 - C4193 - C4196) * C25448 +
             (C4199 + C4198 - C4197 - C4200) * C50770) *
                C51093 +
            ((C9819 + C9818 - C9817 - C9820) * C25448 +
             (C3242 * C1355 + C3243 * C1350 -
              (C117 * C3209 + C50950 * C3214) * C1356 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C25452) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50950 * C126) * C1482 +
                     (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
                     C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                        C25448 +
                    (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C50770) *
                       C51101 +
                   ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 -
                     C2937 * C51087 + C3060 * C1484 + C3061 * C1479) *
                        C25448 +
                    (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C50770) *
                       C51093 +
                   ((C2936 * C1482 + C2937 * C51099 - C3060 * C1483 -
                     C3061 * C51087 + C8729 * C1484 + C8730 * C1479) *
                        C25448 +
                    (C9617 + C9618 - C9619 - C9620 + C9621 + C9622) * C50770) *
                       C25452) *
                      C50787 * C1765 +
                  (((C3236 * C1483 -
                     ((C117 * C480 + C50950 * C488) * C51099 +
                      (C117 * C470 + C50950 * C481) * C1482) +
                     C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
                        C25448 +
                    (C1656 * C1483 - (C508 * C51099 + C507 * C1482) +
                     C1657 * C51087 - C3240 * C1484 - C3241 * C1479) *
                        C50770) *
                       C51101 +
                   ((C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) +
                     C3239 * C51087 - C8893 * C1484 - C8894 * C1479) *
                        C25448 +
                    (C3240 * C1483 - (C1657 * C51099 + C1656 * C1482) +
                     C3241 * C51087 - C8895 * C1484 - C8896 * C1479) *
                        C50770) *
                       C51093 +
                   ((C8893 * C1483 - (C3239 * C51099 + C3238 * C1482) +
                     C8894 * C51087 - C11344 * C1484 - C11345 * C1479) *
                        C25448 +
                    (C8895 * C1483 - (C3241 * C51099 + C3240 * C1482) +
                     C8896 * C51087 - (C117 * C8877 + C50950 * C8880) * C1484 -
                     (C117 * C8881 + C50950 * C8883) * C1479) *
                        C50770) *
                       C25452) *
                      C50787 * C50863)) /
                (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C25448 +
            (C1358 + C1359 - C1360 - C1361) * C50770) *
               C51101 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C25448 +
            (C3826 + C3827 - C3828 - C3829) * C50770) *
               C51093 +
           ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C25448 +
            (C9463 + C9464 - C9465 - C9466) * C50770) *
               C25452) *
              C50787 * C51100 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C25448 +
            (C1662 - (C1640 + C1641) + C1663) * C50770) *
               C51101 +
           ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C25448 +
            (C4193 - (C4194 + C4195) + C4196) * C50770) *
               C51093 +
           ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C25448 +
            (C9817 - (C9818 + C9819) + C9820) * C50770) *
               C25452) *
              C50787 * C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C1355 +
             (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
             C3569 * C50837) *
                C25448 +
            (C1041 * C1355 + C1042 * C1350 - C3398 * C1356 - C3399 * C50837) *
                C50770) *
               C51101 +
           ((C3568 * C1355 + C3569 * C1350 - C9209 * C1356 - C9210 * C50837) *
                C25448 +
            (C3398 * C1355 + C3399 * C1350 - C9047 * C1356 - C9048 * C50837) *
                C50770) *
               C51093 +
           ((C9209 * C1355 + C9210 * C1350 - C11550 * C1356 - C11551 * C50837) *
                C25448 +
            (C9047 * C1355 + C9048 * C1350 -
             (C117 * C9197 + C50950 * C9200) * C1356 -
             (C117 * C9201 + C50950 * C9203) * C50837) *
                C50770) *
               C25452) *
              C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C25448 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C51101 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C25448 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C51093 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C25448 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C25452) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C25448 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C50770) *
               C51101 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C25448 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C50770) *
               C51093 +
           ((C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C25448 +
            (C2940 * C628 - (C678 * C622 + C677 * C627) + C2941 * C623 -
             (C117 * C3045 + C50950 * C3050) * C629 -
             (C117 * C3051 + C50950 * C3054) * C624) *
                C50770) *
               C25452) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C25448 +
            (C178 + C179) * C50770) *
               C51101 +
           ((C2612 * C118 + C2613 * C50821) * C25448 +
            (C2440 + C2441) * C50770) *
               C51093 +
           ((C2936 * C118 + C2937 * C50821) * C25448 +
            (C8151 + C8152) * C50770) *
               C25452) *
              C112 -
          (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
           ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
           ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
              C113 +
          ((C188 * C25448 + C189 * C50770) * C51101 +
           (C2448 * C25448 + (C2445 + C2444) * C50770) * C51093 +
           ((C8154 + C8153) * C25448 + (C8155 + C8156) * C50770) * C25452) *
              C114 -
          ((((C117 * C644 + C50950 * C649) * C50821 +
             (C117 * C634 + C50950 * C643) * C118) *
                C50770 +
            (C8156 + C8155) * C25448) *
               C25452 +
           ((C2447 + C2446) * C50770 + C2449 * C25448) * C51093 +
           (C190 * C50770 + C191 * C25448) * C51101) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C25448 +
             (C178 + C179) * C50770) *
                C51101 +
            ((C2612 * C118 + C2613 * C50821) * C25448 +
             (C2440 + C2441) * C50770) *
                C51093 +
            ((C2936 * C118 + C2937 * C50821) * C25448 +
             (C8151 + C8152) * C50770) *
                C25452) *
               C51046 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
            ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
               C50792) *
              C1005 +
          ((((C515 + C516) * C25448 + (C517 + C518) * C50770) * C51101 +
            ((C2763 + C2764) * C25448 + (C2765 + C2766) * C50770) * C51093 +
            ((C8457 + C8458) * C25448 + (C8459 + C8460) * C50770) * C25452) *
               C50792 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C25448) *
                C25452 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C25448) *
                C51093 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C25448) *
                C51101) *
               C51046) *
              C1006 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C25448 +
             (C1047 + C1048) * C50770) *
                C51101 +
            ((C3568 * C118 + C3569 * C50821) * C25448 +
             (C3402 + C3403) * C50770) *
                C51093 +
            ((C9209 * C118 + C9210 * C50821) * C25448 +
             (C9049 + C9050) * C50770) *
                C25452) *
               C51046 -
           ((((C117 * C3559 + C50950 * C3562) * C50821 +
              (C117 * C3553 + C50950 * C3558) * C118) *
                 C50770 +
             (C9050 + C9049) * C25448) *
                C25452 +
            ((C3405 + C3404) * C50770 + (C3403 + C3402) * C25448) * C51093 +
            ((C1050 + C1049) * C50770 + (C1048 + C1047) * C25448) * C51101) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C25448 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C50770) *
              C51101 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C25448 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C50770) *
              C51093 +
          ((C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
            C8729 * C759 + C8730 * C754 - C11236 * C760 - C11237 * C755) *
               C25448 +
           (C675 * C757 + C676 * C752 - C2938 * C758 - C2939 * C753 +
            C8615 * C759 + C8616 * C754 -
            (C117 * C8717 + C50950 * C8720) * C760 -
            (C117 * C8721 + C50950 * C8723) * C755) *
               C50770) *
              C25452) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C25448 +
            (C321 + C322 - C355 - C356) * C50770) *
               C51101 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C25448 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C51093 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C25448 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C25452) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C25448 +
            (C357 - (C328 + C327) + C358) * C50770) *
               C51101 +
           ((C2602 - (C2601 + C2600) + C2603) * C25448 +
            (C2606 - (C2605 + C2604) + C2607) * C50770) *
               C51093 +
           ((C8305 - (C8304 + C8303) + C8306) * C25448 +
            (C8307 - (C8308 + C8309) + C8310) * C50770) *
               C25452) *
              C292 +
          ((C365 * C25448 + C366 * C50770) * C51101 +
           (C2616 * C25448 + (C2610 + C2609 - C2608 - C2611) * C50770) *
               C51093 +
           ((C8309 + C8308 - C8307 - C8310) * C25448 +
            (C679 * C294 + C680 * C51053 -
             (C117 * C764 + C50950 * C771) * C295 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C25452) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C25448 +
            (C321 + C322 - C355 - C356) * C50770) *
               C51101 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C25448 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C51093 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C25448 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C25452) *
              C50787 * C1005 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C25448 +
            (C1898 - (C1899 + C1900) + C1901) * C50770) *
               C51101 +
           ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C25448 +
            (C4541 - (C4542 + C4543) + C4544) * C50770) *
               C51093 +
           ((C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                C25448 +
            (C10161 - (C10162 + C10163) + C10164) * C50770) *
               C25452) *
              C50787 * C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C294 +
             (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
             C3569 * C50837) *
                C25448 +
            (C1041 * C294 + C1042 * C51053 - C3398 * C295 - C3399 * C50837) *
                C50770) *
               C51101 +
           ((C3568 * C294 + C3569 * C51053 - C9209 * C295 - C9210 * C50837) *
                C25448 +
            (C3398 * C294 + C3399 * C51053 - C9047 * C295 - C9048 * C50837) *
                C50770) *
               C51093 +
           ((C9209 * C294 + C9210 * C51053 - C11550 * C295 - C11551 * C50837) *
                C25448 +
            (C9047 * C294 + C9048 * C51053 -
             (C117 * C9197 + C50950 * C9200) * C295 -
             (C117 * C9201 + C50950 * C9203) * C50837) *
                C50770) *
               C25452) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C25448 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C51101 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C25448 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C51093 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C25448 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C25452) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C25448 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C50770) *
               C51101 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C25448 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C50770) *
               C51093 +
           ((C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
             C11344 * C629 - C11345 * C624) *
                C25448 +
            (C8895 * C628 - (C3241 * C622 + C3240 * C627) + C8896 * C623 -
             (C117 * C8877 + C50950 * C8880) * C629 -
             (C117 * C8881 + C50950 * C8883) * C624) *
                C50770) *
               C25452) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C25448 +
             (C178 + C179) * C50770) *
                C51101 +
            ((C2612 * C118 + C2613 * C50821) * C25448 +
             (C2440 + C2441) * C50770) *
                C51093 +
            ((C2936 * C118 + C2937 * C50821) * C25448 +
             (C8151 + C8152) * C50770) *
                C25452) *
               C291 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
            ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
               C292 +
           ((C188 * C25448 + C189 * C50770) * C51101 +
            (C2448 * C25448 + (C2445 + C2444) * C50770) * C51093 +
            ((C8154 + C8153) * C25448 + (C8155 + C8156) * C50770) * C25452) *
               C293) *
              C51055 +
          ((((C515 + C516) * C25448 + (C517 + C518) * C50770) * C51101 +
            ((C2763 + C2764) * C25448 + (C2765 + C2766) * C50770) * C51093 +
            ((C8457 + C8458) * C25448 + (C8459 + C8460) * C50770) * C25452) *
               C292 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C25448) *
                C25452 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C25448) *
                C51093 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C25448) *
                C51101) *
               C291 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C25448) *
                C25452 +
            ((C2768 + C2767) * C50770 + C2769 * C25448) * C51093 +
            (C523 * C50770 + C524 * C25448) * C51101) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C25448 +
            (C178 + C179) * C50770) *
               C51101 +
           ((C2612 * C118 + C2613 * C50821) * C25448 +
            (C2440 + C2441) * C50770) *
               C51093 +
           ((C2936 * C118 + C2937 * C50821) * C25448 +
            (C8151 + C8152) * C50770) *
               C25452) *
              C50787 * C1232 -
          (((C8458 + C8457) * C50770 +
            (C3239 * C50821 + C3238 * C118) * C25448) *
               C25452 +
           ((C2764 + C2763) * C50770 +
            (C3237 * C50821 + C3236 * C118) * C25448) *
               C51093 +
           ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                      (C117 * C470 + C50950 * C481) * C118) *
                                         C25448) *
               C51101) *
              C50787 * C1233 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C25448 +
            (C1047 + C1048) * C50770) *
               C51101 +
           ((C3568 * C118 + C3569 * C50821) * C25448 +
            (C3402 + C3403) * C50770) *
               C51093 +
           ((C9209 * C118 + C9210 * C50821) * C25448 +
            (C9049 + C9050) * C50770) *
               C25452) *
              C50787 * C1234 -
          ((((C117 * C9310 + C50950 * C9314) * C50821 +
             (C117 * C9308 + C50950 * C9311) * C118) *
                C50770 +
            ((C117 * C9312 + C50950 * C9315) * C50821 +
             (C117 * C9309 + C50950 * C9313) * C118) *
                C25448) *
               C25452 +
           (((C117 * C3672 + C50950 * C3677) * C50821 +
             (C117 * C3668 + C50950 * C3673) * C118) *
                C50770 +
            ((C117 * C3674 + C50950 * C3678) * C50821 +
             (C117 * C3669 + C50950 * C3675) * C118) *
                C25448) *
               C51093 +
           (((C117 * C1244 + C50950 * C1250) * C50821 +
             (C117 * C1238 + C50950 * C1245) * C118) *
                C50770 +
            ((C117 * C1246 + C50950 * C1251) * C50821 +
             (C117 * C1239 + C50950 * C1247) * C118) *
                C25448) *
               C51101) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C25448 +
             (C178 + C179) * C50770) *
                C51101 +
            ((C2612 * C118 + C2613 * C50821) * C25448 +
             (C2440 + C2441) * C50770) *
                C51093 +
            ((C2936 * C118 + C2937 * C50821) * C25448 +
             (C8151 + C8152) * C50770) *
                C25452) *
               C51098 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
            ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
               C51084 +
           ((C188 * C25448 + C189 * C50770) * C51101 +
            (C2448 * C25448 + (C2445 + C2444) * C50770) * C51093 +
            ((C8154 + C8153) * C25448 + (C8155 + C8156) * C50770) * C25452) *
               C1354) *
              C1765 +
          ((((C515 + C516) * C25448 + (C517 + C518) * C50770) * C51101 +
            ((C2763 + C2764) * C25448 + (C2765 + C2766) * C50770) * C51093 +
            ((C8457 + C8458) * C25448 + (C8459 + C8460) * C50770) * C25452) *
               C51084 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C25448) *
                C25452 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C25448) *
                C51093 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C25448) *
                C51101) *
               C51098 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C25448) *
                C25452 +
            ((C2768 + C2767) * C50770 + C2769 * C25448) * C51093 +
            (C523 * C50770 + C524 * C25448) * C51101) *
               C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C294 +
              (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
              C2613 * C50837) *
                 C25448 +
             (C321 + C322 - C355 - C356) * C50770) *
                C51101 +
            ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                 C25448 +
             (C2600 + C2601 - C2602 - C2603) * C50770) *
                C51093 +
            ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                 C25448 +
             (C8303 + C8304 - C8305 - C8306) * C50770) *
                C25452) *
               C1480 +
           (((C355 - (C322 + C321) + C356) * C25448 +
             (C357 - (C328 + C327) + C358) * C50770) *
                C51101 +
            ((C2602 - (C2601 + C2600) + C2603) * C25448 +
             (C2606 - (C2605 + C2604) + C2607) * C50770) *
                C51093 +
            ((C8305 - (C8304 + C8303) + C8306) * C25448 +
             (C8307 - (C8308 + C8309) + C8310) * C50770) *
                C25452) *
               C50792) *
              C1765 +
          ((((C3236 * C295 -
              ((C117 * C480 + C50950 * C488) * C51053 +
               (C117 * C470 + C50950 * C481) * C294) +
              C3237 * C50837) *
                 C25448 +
             (C1898 - (C1899 + C1900) + C1901) * C50770) *
                C51101 +
            ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                 C25448 +
             (C4541 - (C4542 + C4543) + C4544) * C50770) *
                C51093 +
            ((C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                 C25448 +
             (C10161 - (C10162 + C10163) + C10164) * C50770) *
                C25452) *
               C1480 +
           (((C1900 + C1899 - C1898 - C1901) * C25448 +
             (C1904 + C1903 - C1902 - C1905) * C50770) *
                C51101 +
            ((C4543 + C4542 - C4541 - C4544) * C25448 +
             (C4547 + C4546 - C4545 - C4548) * C50770) *
                C51093 +
            ((C10163 + C10162 - C10161 - C10164) * C25448 +
             (C3242 * C294 + C3243 * C51053 -
              (C117 * C3209 + C50950 * C3214) * C295 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C25452) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C25448 +
             (C178 + C179) * C50770) *
                C51101 +
            ((C2612 * C118 + C2613 * C50821) * C25448 +
             (C2440 + C2441) * C50770) *
                C51093 +
            ((C2936 * C118 + C2937 * C50821) * C25448 +
             (C8151 + C8152) * C50770) *
                C25452) *
               C1480 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
            ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
               C50792) *
              C51100 +
          ((((C515 + C516) * C25448 + (C517 + C518) * C50770) * C51101 +
            ((C2763 + C2764) * C25448 + (C2765 + C2766) * C50770) * C51093 +
            ((C8457 + C8458) * C25448 + (C8459 + C8460) * C50770) * C25452) *
               C50792 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C25448) *
                C25452 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C25448) *
                C51093 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C25448) *
                C51101) *
               C1480) *
              C51090 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C25448 +
             (C1047 + C1048) * C50770) *
                C51101 +
            ((C3568 * C118 + C3569 * C50821) * C25448 +
             (C3402 + C3403) * C50770) *
                C51093 +
            ((C9209 * C118 + C9210 * C50821) * C25448 +
             (C9049 + C9050) * C50770) *
                C25452) *
               C1480 -
           ((((C117 * C3559 + C50950 * C3562) * C50821 +
              (C117 * C3553 + C50950 * C3558) * C118) *
                 C50770 +
             (C9050 + C9049) * C25448) *
                C25452 +
            ((C3405 + C3404) * C50770 + (C3403 + C3402) * C25448) * C51093 +
            ((C1050 + C1049) * C50770 + (C1048 + C1047) * C25448) * C51101) *
               C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C25448 +
            (C178 + C179) * C50770) *
               C51101 +
           ((C2612 * C118 + C2613 * C50821) * C25448 +
            (C2440 + C2441) * C50770) *
               C51093 +
           ((C2936 * C118 + C2937 * C50821) * C25448 +
            (C8151 + C8152) * C50770) *
               C25452) *
              C112 -
          (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
           ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
           ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
              C113 +
          ((C188 * C25448 + C189 * C50770) * C51101 +
           (C2448 * C25448 + (C2445 + C2444) * C50770) * C51093 +
           ((C8154 + C8153) * C25448 + (C8155 + C8156) * C50770) * C25452) *
              C114 -
          ((((C117 * C644 + C50950 * C649) * C50821 +
             (C117 * C634 + C50950 * C643) * C118) *
                C50770 +
            (C8156 + C8155) * C25448) *
               C25452 +
           ((C2447 + C2446) * C50770 + C2449 * C25448) * C51093 +
           (C190 * C50770 + C191 * C25448) * C51101) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C25448 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C51101 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C25448 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C51093 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C25448 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C25452) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C25448 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C50770) *
               C51101 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C25448 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C50770) *
               C51093 +
           ((C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C25448 +
            (C2940 * C628 - (C678 * C622 + C677 * C627) + C2941 * C623 -
             (C117 * C3045 + C50950 * C3050) * C629 -
             (C117 * C3051 + C50950 * C3054) * C624) *
                C50770) *
               C25452) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C25448 +
            (C321 + C322 - C355 - C356) * C50770) *
               C51101 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C25448 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C51093 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C25448 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C25452) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C25448 +
            (C357 - (C328 + C327) + C358) * C50770) *
               C51101 +
           ((C2602 - (C2601 + C2600) + C2603) * C25448 +
            (C2606 - (C2605 + C2604) + C2607) * C50770) *
               C51093 +
           ((C8305 - (C8304 + C8303) + C8306) * C25448 +
            (C8307 - (C8308 + C8309) + C8310) * C50770) *
               C25452) *
              C292 +
          ((C365 * C25448 + C366 * C50770) * C51101 +
           (C2616 * C25448 + (C2610 + C2609 - C2608 - C2611) * C50770) *
               C51093 +
           ((C8309 + C8308 - C8307 - C8310) * C25448 +
            (C679 * C294 + C680 * C51053 -
             (C117 * C764 + C50950 * C771) * C295 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C25452) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C25448 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C50770) *
              C51101 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C25448 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C50770) *
              C51093 +
          ((C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
            C8729 * C759 + C8730 * C754 - C11236 * C760 - C11237 * C755) *
               C25448 +
           (C675 * C757 + C676 * C752 - C2938 * C758 - C2939 * C753 +
            C8615 * C759 + C8616 * C754 -
            (C117 * C8717 + C50950 * C8720) * C760 -
            (C117 * C8721 + C50950 * C8723) * C755) *
               C50770) *
              C25452) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C25448 +
             (C178 + C179) * C50770) *
                C51101 +
            ((C2612 * C118 + C2613 * C50821) * C25448 +
             (C2440 + C2441) * C50770) *
                C51093 +
            ((C2936 * C118 + C2937 * C50821) * C25448 +
             (C8151 + C8152) * C50770) *
                C25452) *
               C291 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C25448) * C25452 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C25448) * C51093 +
            ((C181 + C180) * C50770 + (C179 + C178) * C25448) * C51101) *
               C292 +
           ((C188 * C25448 + C189 * C50770) * C51101 +
            (C2448 * C25448 + (C2445 + C2444) * C50770) * C51093 +
            ((C8154 + C8153) * C25448 + (C8155 + C8156) * C50770) * C25452) *
               C293) *
              C51055 +
          ((((C515 + C516) * C25448 + (C517 + C518) * C50770) * C51101 +
            ((C2763 + C2764) * C25448 + (C2765 + C2766) * C50770) * C51093 +
            ((C8457 + C8458) * C25448 + (C8459 + C8460) * C50770) * C25452) *
               C292 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C25448) *
                C25452 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C25448) *
                C51093 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C25448) *
                C51101) *
               C291 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C25448) *
                C25452 +
            ((C2768 + C2767) * C50770 + C2769 * C25448) * C51093 +
            (C523 * C50770 + C524 * C25448) * C51101) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C25448 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C51101 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C25448 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C51093 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C25448 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C25452) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C25448 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C50770) *
               C51101 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C25448 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C50770) *
               C51093 +
           ((C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
             C11344 * C629 - C11345 * C624) *
                C25448 +
            (C8895 * C628 - (C3241 * C622 + C3240 * C627) + C8896 * C623 -
             (C117 * C8877 + C50950 * C8880) * C629 -
             (C117 * C8881 + C50950 * C8883) * C624) *
                C50770) *
               C25452) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                C25448 +
            ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
             C28308 * C1356 - C28309 * C50837) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
             (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                C25448 +
            (C28310 * C1355 + C28311 * C1350 - C13170 * C1356 -
             C13171 * C50837) *
                C50770) *
               C50938) *
              C51098 +
          (((C28310 * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             C28311 * C50837) *
                C25448 +
            (C28312 * C1356 -
             ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
             C28313 * C50837) *
                C50770) *
               C22818 +
           ((C28702 * C1356 - (C28309 * C1350 + C28308 * C1355) +
             C28703 * C50837) *
                C25448 +
            ((C5885 + C5886) * C1356 - (C5527 * C1350 + C5526 * C1355) +
             (C5887 + C5888) * C50837) *
                C50770) *
               C50938) *
              C51084 +
          ((C6711 * C25448 +
            ((C5326 + C5325) * C1355 + (C5324 + C5323) * C1350 -
             (C5523 + C5522) * C1356 - (C5525 + C5524) * C50837) *
                C50770) *
               C22818 +
           ((C28312 * C1355 + C28313 * C1350 - (C5886 + C5885) * C1356 -
             (C5888 + C5887) * C50837) *
                C25448 +
            ((C5522 + C5523) * C1355 + (C5524 + C5525) * C1350 -
             (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                 C1356 -
             (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1482 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51099 -
             (C12860 + C12861) * C1483 - (C12862 + C12863) * C51087 +
             C13160 * C1484 + C13161 * C1479) *
                C25448 +
            ((C5315 + C5316) * C1482 + (C5317 + C5318) * C51099 -
             C28308 * C1483 - C28309 * C51087 + C28702 * C1484 +
             C28703 * C1479) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C1482 + (C12863 + C12862) * C51099 -
             (C12864 + C12865) * C1483 - (C12866 + C12867) * C51087 +
             (C13180 + C13181) * C1484 + (C13182 + C13183) * C1479) *
                C25448 +
            (C28310 * C1482 + C28311 * C51099 - C13170 * C1483 -
             C13171 * C51087 + (C13185 + C13184) * C1484 +
             (C13187 + C13186) * C1479) *
                C50770) *
               C50938) *
              C1480 +
          (((C28310 * C1483 -
             ((C5318 + C5317) * C51099 + (C5316 + C5315) * C1482) +
             C28311 * C51087 - C13170 * C1484 - C13171 * C1479) *
                C25448 +
            (C28312 * C1483 -
             ((C5322 + C5321) * C51099 + (C5320 + C5319) * C1482) +
             C28313 * C51087 - (C5886 + C5885) * C1484 -
             (C5888 + C5887) * C1479) *
                C50770) *
               C22818 +
           ((C28702 * C1483 - (C28309 * C51099 + C28308 * C1482) +
             C28703 * C51087 - (C13184 + C13185) * C1484 -
             (C13186 + C13187) * C1479) *
                C25448 +
            ((C5885 + C5886) * C1483 - (C5527 * C51099 + C5526 * C1482) +
             (C5887 + C5888) * C51087 -
             (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                 C1484 -
             (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                 C1479) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C1355 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C1350 -
              (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                 C25448 +
             ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
              C28308 * C1356 - C28309 * C50837) *
                 C50770) *
                C22818 +
            (((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
              (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                 C25448 +
             (C28310 * C1355 + C28311 * C1350 - C13170 * C1356 -
              C13171 * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           (((C28310 * C1356 -
              ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
              C28311 * C50837) *
                 C25448 +
             (C28312 * C1356 -
              ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
              C28313 * C50837) *
                 C50770) *
                C22818 +
            ((C28702 * C1356 - (C28309 * C1350 + C28308 * C1355) +
              C28703 * C50837) *
                 C25448 +
             ((C5885 + C5886) * C1356 - (C5527 * C1350 + C5526 * C1355) +
              (C5887 + C5888) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C51055 +
          (((((C13470 + C13471) * C1356 -
              ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                   C1350 +
               (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                   C1355) +
              (C13472 + C13473) * C50837) *
                 C25448 +
             (C30204 * C1356 -
              ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
              C30205 * C50837) *
                 C50770) *
                C22818 +
            (((C13475 + C13474) * C1356 -
              ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
              (C13477 + C13476) * C50837) *
                 C25448 +
             ((C14401 + C14400) * C1356 - (C30206 * C1350 + C30207 * C1355) +
              (C14403 + C14402) * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           ((((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
              C30207 * C1356 - C30206 * C50837) *
                 C25448 +
             ((C5706 + C5707) * C1355 + (C5708 + C5709) * C1350 -
              (C7073 + C7072) * C1356 - (C7075 + C7074) * C50837) *
                 C50770) *
                C22818 +
            ((C30204 * C1355 + C30205 * C1350 - (C14400 + C14401) * C1356 -
              (C14402 + C14403) * C50837) *
                 C25448 +
             ((C7072 + C7073) * C1355 + (C7074 + C7075) * C1350 -
              (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                  C1356 -
              (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C1355 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C1350 -
              (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                 C25448 +
             ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
              C28308 * C1356 - C28309 * C50837) *
                 C50770) *
                C22818 +
            (((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
              (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                 C25448 +
             (C28310 * C1355 + C28311 * C1350 - C13170 * C1356 -
              C13171 * C50837) *
                 C50770) *
                C50938) *
               C51046 +
           (((C28310 * C1356 -
              ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
              C28311 * C50837) *
                 C25448 +
             (C28312 * C1356 -
              ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
              C28313 * C50837) *
                 C50770) *
                C22818 +
            ((C28702 * C1356 - (C28309 * C1350 + C28308 * C1355) +
              C28703 * C50837) *
                 C25448 +
             ((C5885 + C5886) * C1356 - (C5527 * C1350 + C5526 * C1355) +
              (C5887 + C5888) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C1765 +
          (((((C13470 + C13471) * C1356 -
              ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                   C1350 +
               (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                   C1355) +
              (C13472 + C13473) * C50837) *
                 C25448 +
             (C30204 * C1356 -
              ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
              C30205 * C50837) *
                 C50770) *
                C22818 +
            (((C13475 + C13474) * C1356 -
              ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
              (C13477 + C13476) * C50837) *
                 C25448 +
             ((C14401 + C14400) * C1356 - (C30206 * C1350 + C30207 * C1355) +
              (C14403 + C14402) * C50837) *
                 C50770) *
                C50938) *
               C51046 +
           ((((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
              C30207 * C1356 - C30206 * C50837) *
                 C25448 +
             ((C5706 + C5707) * C1355 + (C5708 + C5709) * C1350 -
              (C7073 + C7072) * C1356 - (C7075 + C7074) * C50837) *
                 C50770) *
                C22818 +
            ((C30204 * C1355 + C30205 * C1350 - (C14400 + C14401) * C1356 -
              (C14402 + C14403) * C50837) *
                 C25448 +
             ((C7072 + C7073) * C1355 + (C7074 + C7075) * C1350 -
              (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                  C1356 -
              (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1482 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51099 -
             (C12860 + C12861) * C1483 - (C12862 + C12863) * C51087 +
             C13160 * C1484 + C13161 * C1479) *
                C25448 +
            ((C5315 + C5316) * C1482 + (C5317 + C5318) * C51099 -
             C28308 * C1483 - C28309 * C51087 + C28702 * C1484 +
             C28703 * C1479) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C1482 + (C12863 + C12862) * C51099 -
             (C12864 + C12865) * C1483 - (C12866 + C12867) * C51087 +
             (C13180 + C13181) * C1484 + (C13182 + C13183) * C1479) *
                C25448 +
            (C28310 * C1482 + C28311 * C51099 - C13170 * C1483 -
             C13171 * C51087 + (C13185 + C13184) * C1484 +
             (C13187 + C13186) * C1479) *
                C50770) *
               C50938) *
              C50787 * C1765 +
          ((((C13470 + C13471) * C1483 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C51099 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1482) +
             (C13472 + C13473) * C51087 - C13482 * C1484 - C13483 * C1479) *
                C25448 +
            (C30204 * C1483 -
             ((C5705 + C5704) * C51099 + (C5703 + C5702) * C1482) +
             C30205 * C51087 - (C14400 + C14401) * C1484 -
             (C14402 + C14403) * C1479) *
                C50770) *
               C22818 +
           (((C13475 + C13474) * C1483 -
             ((C13473 + C13472) * C51099 + (C13471 + C13470) * C1482) +
             (C13477 + C13476) * C51087 - (C13478 + C13479) * C1484 -
             (C13480 + C13481) * C1479) *
                C25448 +
            ((C14401 + C14400) * C1483 - (C30206 * C51099 + C30207 * C1482) +
             (C14403 + C14402) * C51087 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C1484 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C1479) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                C25448 +
            ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
             C28308 * C1356 - C28309 * C50837) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
             (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                C25448 +
            (C28310 * C1355 + C28311 * C1350 - C13170 * C1356 -
             C13171 * C50837) *
                C50770) *
               C50938) *
              C50787 * C51100 +
          ((((C13470 + C13471) * C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C13472 + C13473) * C50837) *
                C25448 +
            (C30204 * C1356 -
             ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
             C30205 * C50837) *
                C50770) *
               C22818 +
           (((C13475 + C13474) * C1356 -
             ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
             (C13477 + C13476) * C50837) *
                C25448 +
            ((C14401 + C14400) * C1356 - (C30206 * C1350 + C30207 * C1355) +
             (C14403 + C14402) * C50837) *
                C50770) *
               C50938) *
              C50787 * C51090 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C1355 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C1350 -
             (C13792 + C13793) * C1356 - (C13794 + C13795) * C50837) *
                C25448 +
            ((C6295 + C6296) * C1355 + (C6297 + C6298) * C1350 -
             (C29231 + C29230) * C1356 - (C29233 + C29232) * C50837) *
                C50770) *
               C22818 +
           (((C13793 + C13792) * C1355 + (C13795 + C13794) * C1350 -
             (C13796 + C13797) * C1356 - (C13798 + C13799) * C50837) *
                C25448 +
            ((C29230 + C29231) * C1355 + (C29232 + C29233) * C1350 -
             (C5281 * C9308 + C50962 * C9311 + C5280 * C3552 + C51068 * C3556) *
                 C1356 -
             (C5281 * C9310 + C50962 * C9314 + C5280 * C3557 + C51068 * C3561) *
                 C50837) *
                C50770) *
               C50938) *
              C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C627 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C622 -
             (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
             C13160 * C629 + C13161 * C624) *
                C25448 +
            ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 - C28308 * C628 -
             C28309 * C623 + C28702 * C629 + C28703 * C624) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
             (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
             (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
                C25448 +
            (C28310 * C627 + C28311 * C622 - C13170 * C628 - C13171 * C623 +
             (C13185 + C13184) * C629 + (C13187 + C13186) * C624) *
                C50770) *
               C50938) *
              C51046 +
          (((C28310 * C628 - ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
             C28311 * C623 - C13170 * C629 - C13171 * C624) *
                C25448 +
            (C28312 * C628 - ((C5322 + C5321) * C622 + (C5320 + C5319) * C627) +
             C28313 * C623 - (C5886 + C5885) * C629 - (C5888 + C5887) * C624) *
                C50770) *
               C22818 +
           ((C28702 * C628 - (C28309 * C622 + C28308 * C627) + C28703 * C623 -
             (C13184 + C13185) * C629 - (C13186 + C13187) * C624) *
                C25448 +
            ((C5885 + C5886) * C628 - (C5527 * C622 + C5526 * C627) +
             (C5887 + C5888) * C623 -
             (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                 C629 -
             (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                 C624) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C25448 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
               C22818 +
           (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
            ((C5514 + C5513) * C118 + (C5516 + C5515) * C50821) * C50770) *
               C50938) *
              C112 -
          (((C5527 * C50821 + C5526 * C118) * C50770 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C25448) *
               C50938 +
           (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
               C22818) *
              C113 +
          ((C5339 * C25448 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C50770) *
               C22818 +
           (((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C25448 +
            ((C5522 + C5523) * C118 + (C5524 + C5525) * C50821) * C50770) *
               C50938) *
              C114 -
          ((((C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                 C50821 +
             (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                 C118) *
                C50770 +
            ((C5525 + C5524) * C50821 + (C5523 + C5522) * C118) * C25448) *
               C50938 +
           (((C5330 + C5329) * C50821 + (C5328 + C5327) * C118) * C50770 +
            C5340 * C25448) *
               C22818) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C118 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
                C22818 +
            (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
             (C28310 * C118 + C28311 * C50821) * C50770) *
                C50938) *
               C51046 -
           (((C5527 * C50821 + C5526 * C118) * C50770 +
             (C28309 * C50821 + C28308 * C118) * C25448) *
                C50938 +
            (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
             ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
                C22818) *
               C50792) *
              C1005 +
          (((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C25448 +
             ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C50770) *
                C22818 +
            (((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C25448 +
             ((C7072 + C7073) * C118 + (C7074 + C7075) * C50821) * C50770) *
                C50938) *
               C50792 -
           ((((C7071 + C7070) * C50821 + (C7069 + C7068) * C118) * C50770 +
             ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C25448) *
                C50938 +
            (((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C50770 +
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C50821 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C118) *
                 C25448) *
                C22818) *
               C51046) *
              C1006 +
          (((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 +
               C50962 * C1247) *
                  C118 +
              (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 +
               C50962 * C1251) *
                  C50821) *
                 C25448 +
             ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C50770) *
                C22818 +
            (((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C25448 +
             ((C29230 + C29231) * C118 + (C29232 + C29233) * C50821) * C50770) *
                C50938) *
               C51046 -
           ((((C5281 * C3670 + C50962 * C3676 + C5280 * C1159 +
               C51068 * C1164) *
                  C50821 +
              (C5281 * C3667 + C50962 * C3671 + C5280 * C1152 +
               C51068 * C1158) *
                  C118) *
                 C50770 +
             ((C29233 + C29232) * C50821 + (C29231 + C29230) * C118) * C25448) *
                C50938 +
            (((C6302 + C6301) * C50821 + (C6300 + C6299) * C118) * C50770 +
             ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C25448) *
                C22818) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C757 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C752 -
            (C12860 + C12861) * C758 - (C12862 + C12863) * C753 +
            C13160 * C759 + C13161 * C754 - C13286 * C760 - C13287 * C755) *
               C25448 +
           ((C5315 + C5316) * C757 + (C5317 + C5318) * C752 - C28308 * C758 -
            C28309 * C753 + C28702 * C759 + C28703 * C754 -
            (C13184 + C13185) * C760 - (C13186 + C13187) * C755) *
               C50770) *
              C22818 +
          (((C12861 + C12860) * C757 + (C12863 + C12862) * C752 -
            (C12864 + C12865) * C758 - (C12866 + C12867) * C753 +
            (C13180 + C13181) * C759 + (C13182 + C13183) * C754 -
            (C13296 + C13297) * C760 - (C13298 + C13299) * C755) *
               C25448 +
           (C28310 * C757 + C28311 * C752 - C13170 * C758 - C13171 * C753 +
            (C13185 + C13184) * C759 + (C13187 + C13186) * C754 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C760 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C755) *
               C50770) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
                C25448 +
            ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 - C28308 * C295 -
             C28309 * C50837) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
             (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
                C25448 +
            (C28310 * C294 + C28311 * C51053 - C13170 * C295 -
             C13171 * C50837) *
                C50770) *
               C50938) *
              C291 +
          (((C28310 * C295 -
             ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
             C28311 * C50837) *
                C25448 +
            (C28312 * C295 -
             ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
             C28313 * C50837) *
                C50770) *
               C22818 +
           (((C5881 + C5882) * C295 - (C28309 * C51053 + C28308 * C294) +
             (C5883 + C5884) * C50837) *
                C25448 +
            ((C5885 + C5886) * C295 - (C5527 * C51053 + C5526 * C294) +
             (C5887 + C5888) * C50837) *
                C50770) *
               C50938) *
              C292 +
          ((C5531 * C25448 +
            ((C5326 + C5325) * C294 + (C5324 + C5323) * C51053 -
             (C5523 + C5522) * C295 - (C5525 + C5524) * C50837) *
                C50770) *
               C22818 +
           ((C28312 * C294 + C28313 * C51053 - (C5886 + C5885) * C295 -
             (C5888 + C5887) * C50837) *
                C25448 +
            ((C5522 + C5523) * C294 + (C5524 + C5525) * C51053 -
             (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                 C295 -
             (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
                C25448 +
            ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 - C28308 * C295 -
             C28309 * C50837) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
             (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
                C25448 +
            (C28310 * C294 + C28311 * C51053 - C13170 * C295 -
             C13171 * C50837) *
                C50770) *
               C50938) *
              C50787 * C1005 +
          ((((C13470 + C13471) * C295 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C51053 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C294) +
             (C13472 + C13473) * C50837) *
                C25448 +
            ((C7068 + C7069) * C295 -
             ((C5705 + C5704) * C51053 + (C5703 + C5702) * C294) +
             (C7070 + C7071) * C50837) *
                C50770) *
               C22818 +
           (((C13475 + C13474) * C295 -
             ((C13473 + C13472) * C51053 + (C13471 + C13470) * C294) +
             (C13477 + C13476) * C50837) *
                C25448 +
            ((C14401 + C14400) * C295 -
             ((C7071 + C7070) * C51053 + (C7069 + C7068) * C294) +
             (C14403 + C14402) * C50837) *
                C50770) *
               C50938) *
              C50787 * C1006 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C294 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C51053 -
             (C13792 + C13793) * C295 - (C13794 + C13795) * C50837) *
                C25448 +
            ((C6295 + C6296) * C294 + (C6297 + C6298) * C51053 -
             (C29231 + C29230) * C295 - (C29233 + C29232) * C50837) *
                C50770) *
               C22818 +
           (((C13793 + C13792) * C294 + (C13795 + C13794) * C51053 -
             (C13796 + C13797) * C295 - (C13798 + C13799) * C50837) *
                C25448 +
            ((C29230 + C29231) * C294 + (C29232 + C29233) * C51053 -
             (C5281 * C9308 + C50962 * C9311 + C5280 * C3552 + C51068 * C3556) *
                 C295 -
             (C5281 * C9310 + C50962 * C9314 + C5280 * C3557 + C51068 * C3561) *
                 C50837) *
                C50770) *
               C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C627 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C622 -
             (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
             C13160 * C629 + C13161 * C624) *
                C25448 +
            ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 - C28308 * C628 -
             C28309 * C623 + C28702 * C629 + C28703 * C624) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
             (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
             (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
                C25448 +
            (C28310 * C627 + C28311 * C622 - C13170 * C628 - C13171 * C623 +
             (C13185 + C13184) * C629 + (C13187 + C13186) * C624) *
                C50770) *
               C50938) *
              C50787 * C51055 +
          ((((C13470 + C13471) * C628 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C622 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C627) +
             (C13472 + C13473) * C623 - C13482 * C629 - C13483 * C624) *
                C25448 +
            ((C7068 + C7069) * C628 -
             ((C5705 + C5704) * C622 + (C5703 + C5702) * C627) +
             (C7070 + C7071) * C623 - (C14400 + C14401) * C629 -
             (C14402 + C14403) * C624) *
                C50770) *
               C22818 +
           (((C13475 + C13474) * C628 -
             ((C13473 + C13472) * C622 + (C13471 + C13470) * C627) +
             (C13477 + C13476) * C623 - (C13478 + C13479) * C629 -
             (C13480 + C13481) * C624) *
                C25448 +
            ((C14401 + C14400) * C628 -
             ((C7071 + C7070) * C622 + (C7069 + C7068) * C627) +
             (C14403 + C14402) * C623 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C629 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C624) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C118 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
                C22818 +
            (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
             (C28310 * C118 + C28311 * C50821) * C50770) *
                C50938) *
               C291 -
           (((C5527 * C50821 + C5526 * C118) * C50770 +
             (C28309 * C50821 + C28308 * C118) * C25448) *
                C50938 +
            (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
             ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
                C22818) *
               C292 +
           ((C5339 * C25448 +
             ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C50770) *
                C22818 +
            ((C28312 * C118 + C28313 * C50821) * C25448 +
             ((C5522 + C5523) * C118 + (C5524 + C5525) * C50821) * C50770) *
                C50938) *
               C293) *
              C51055 +
          (((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C25448 +
             ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C50770) *
                C22818 +
            (((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C25448 +
             ((C7072 + C7073) * C118 + (C7074 + C7075) * C50821) * C50770) *
                C50938) *
               C292 -
           ((((C7071 + C7070) * C50821 + (C7069 + C7068) * C118) * C50770 +
             ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C25448) *
                C50938 +
            (((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C50770 +
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C50821 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C118) *
                 C25448) *
                C22818) *
               C291 -
           ((((C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                  C50821 +
              (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                  C118) *
                 C50770 +
             ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C25448) *
                C50938 +
            (((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C50770 +
             C5718 * C25448) *
                C22818) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C25448 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
               C22818 +
           (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
            (C28310 * C118 + C28311 * C50821) * C50770) *
               C50938) *
              C50787 * C1232 -
          ((((C7071 + C7070) * C50821 + (C7069 + C7068) * C118) * C50770 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C25448) *
               C50938 +
           (((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C50770 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C25448) *
               C22818) *
              C50787 * C1233 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C25448 +
            ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C50770) *
               C22818 +
           (((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C25448 +
            ((C29230 + C29231) * C118 + (C29232 + C29233) * C50821) * C50770) *
               C50938) *
              C50787 * C1234 -
          ((((C5281 * C16617 + C50962 * C16618 + C5280 * C3672 +
              C51068 * C3677) *
                 C50821 +
             (C5281 * C16615 + C50962 * C16616 + C5280 * C3668 +
              C51068 * C3673) *
                 C118) *
                C50770 +
            ((C5281 * C13901 + C50962 * C13904 + C5280 * C3674 +
              C51068 * C3678) *
                 C50821 +
             (C5281 * C13898 + C50962 * C13902 + C5280 * C3669 +
              C51068 * C3675) *
                 C118) *
                C25448) *
               C50938 +
           (((C5281 * C6551 + C50962 * C6556 + C5280 * C1244 + C51068 * C1250) *
                 C50821 +
             (C5281 * C6547 + C50962 * C6552 + C5280 * C1238 + C51068 * C1245) *
                 C118) *
                C50770 +
            ((C5281 * C6553 + C50962 * C6557 + C5280 * C1246 + C51068 * C1251) *
                 C50821 +
             (C5281 * C6548 + C50962 * C6554 + C5280 * C1239 + C51068 * C1247) *
                 C118) *
                C25448) *
               C22818) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C118 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
                C22818 +
            (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
             (C28310 * C118 + C28311 * C50821) * C50770) *
                C50938) *
               C51098 -
           (((C5527 * C50821 + C5526 * C118) * C50770 +
             (C28309 * C50821 + C28308 * C118) * C25448) *
                C50938 +
            (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
             ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
                C22818) *
               C51084 +
           ((C5339 * C25448 +
             ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C50770) *
                C22818 +
            ((C28312 * C118 + C28313 * C50821) * C25448 +
             ((C5522 + C5523) * C118 + (C5524 + C5525) * C50821) * C50770) *
                C50938) *
               C1354) *
              C1765 +
          (((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C25448 +
             ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C50770) *
                C22818 +
            ((C30204 * C118 + C30205 * C50821) * C25448 +
             ((C7072 + C7073) * C118 + (C7074 + C7075) * C50821) * C50770) *
                C50938) *
               C51084 -
           (((C30206 * C50821 + C30207 * C118) * C50770 +
             ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C25448) *
                C50938 +
            (((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C50770 +
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C50821 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C118) *
                 C25448) *
                C22818) *
               C51098 -
           ((((C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                  C50821 +
              (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                  C118) *
                 C50770 +
             ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C25448) *
                C50938 +
            (((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C50770 +
             C5718 * C25448) *
                C22818) *
               C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C294 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C51053 -
              (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
                 C25448 +
             ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
              C28308 * C295 - C28309 * C50837) *
                 C50770) *
                C22818 +
            (((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
              (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
                 C25448 +
             (C28310 * C294 + C28311 * C51053 - C13170 * C295 -
              C13171 * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           (((C28310 * C295 -
              ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
              C28311 * C50837) *
                 C25448 +
             (C28312 * C295 -
              ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
              C28313 * C50837) *
                 C50770) *
                C22818 +
            ((C28702 * C295 - (C28309 * C51053 + C28308 * C294) +
              C28703 * C50837) *
                 C25448 +
             ((C5885 + C5886) * C295 - (C5527 * C51053 + C5526 * C294) +
              (C5887 + C5888) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C1765 +
          (((((C13470 + C13471) * C295 -
              ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                   C51053 +
               (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                   C294) +
              (C13472 + C13473) * C50837) *
                 C25448 +
             (C30204 * C295 -
              ((C5705 + C5704) * C51053 + (C5703 + C5702) * C294) +
              C30205 * C50837) *
                 C50770) *
                C22818 +
            (((C13475 + C13474) * C295 -
              ((C13473 + C13472) * C51053 + (C13471 + C13470) * C294) +
              (C13477 + C13476) * C50837) *
                 C25448 +
             ((C14401 + C14400) * C295 - (C30206 * C51053 + C30207 * C294) +
              (C14403 + C14402) * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           ((((C5702 + C5703) * C294 + (C5704 + C5705) * C51053 -
              C30207 * C295 - C30206 * C50837) *
                 C25448 +
             ((C5706 + C5707) * C294 + (C5708 + C5709) * C51053 -
              (C7073 + C7072) * C295 - (C7075 + C7074) * C50837) *
                 C50770) *
                C22818 +
            ((C30204 * C294 + C30205 * C51053 - (C14400 + C14401) * C295 -
              (C14402 + C14403) * C50837) *
                 C25448 +
             ((C7072 + C7073) * C294 + (C7074 + C7075) * C51053 -
              (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                  C295 -
              (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C118 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
                C22818 +
            (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
             (C28310 * C118 + C28311 * C50821) * C50770) *
                C50938) *
               C1480 -
           (((C5527 * C50821 + C5526 * C118) * C50770 +
             (C28309 * C50821 + C28308 * C118) * C25448) *
                C50938 +
            (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
             ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
                C22818) *
               C50792) *
              C51100 +
          (((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C25448 +
             ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C50770) *
                C22818 +
            ((C30204 * C118 + C30205 * C50821) * C25448 +
             ((C7072 + C7073) * C118 + (C7074 + C7075) * C50821) * C50770) *
                C50938) *
               C50792 -
           (((C30206 * C50821 + C30207 * C118) * C50770 +
             ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C25448) *
                C50938 +
            (((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C50770 +
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C50821 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C118) *
                 C25448) *
                C22818) *
               C1480) *
              C51090 +
          (((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 +
               C50962 * C1247) *
                  C118 +
              (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 +
               C50962 * C1251) *
                  C50821) *
                 C25448 +
             ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C50770) *
                C22818 +
            (((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C25448 +
             ((C29230 + C29231) * C118 + (C29232 + C29233) * C50821) * C50770) *
                C50938) *
               C1480 -
           ((((C5281 * C3670 + C50962 * C3676 + C5280 * C1159 +
               C51068 * C1164) *
                  C50821 +
              (C5281 * C3667 + C50962 * C3671 + C5280 * C1152 +
               C51068 * C1158) *
                  C118) *
                 C50770 +
             ((C29233 + C29232) * C50821 + (C29231 + C29230) * C118) * C25448) *
                C50938 +
            (((C6302 + C6301) * C50821 + (C6300 + C6299) * C118) * C50770 +
             ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C25448) *
                C22818) *
               C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C25448 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
               C22818 +
           (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
            ((C5514 + C5513) * C118 + (C5516 + C5515) * C50821) * C50770) *
               C50938) *
              C112 -
          (((C5527 * C50821 + C5526 * C118) * C50770 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C25448) *
               C50938 +
           (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
               C22818) *
              C113 +
          ((C5339 * C25448 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C50770) *
               C22818 +
           (((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C25448 +
            ((C5522 + C5523) * C118 + (C5524 + C5525) * C50821) * C50770) *
               C50938) *
              C114 -
          ((((C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                 C50821 +
             (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                 C118) *
                C50770 +
            ((C5525 + C5524) * C50821 + (C5523 + C5522) * C118) * C25448) *
               C50938 +
           (((C5330 + C5329) * C50821 + (C5328 + C5327) * C118) * C50770 +
            C5340 * C25448) *
               C22818) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C627 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C622 -
             (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
             C13160 * C629 + C13161 * C624) *
                C25448 +
            ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 - C28308 * C628 -
             C28309 * C623 + C28702 * C629 + C28703 * C624) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
             (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
             (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
                C25448 +
            (C28310 * C627 + C28311 * C622 - C13170 * C628 - C13171 * C623 +
             (C13185 + C13184) * C629 + (C13187 + C13186) * C624) *
                C50770) *
               C50938) *
              C51046 +
          (((C28310 * C628 - ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
             C28311 * C623 - C13170 * C629 - C13171 * C624) *
                C25448 +
            (C28312 * C628 - ((C5322 + C5321) * C622 + (C5320 + C5319) * C627) +
             C28313 * C623 - (C5886 + C5885) * C629 - (C5888 + C5887) * C624) *
                C50770) *
               C22818 +
           ((C28702 * C628 - (C28309 * C622 + C28308 * C627) + C28703 * C623 -
             (C13184 + C13185) * C629 - (C13186 + C13187) * C624) *
                C25448 +
            ((C5885 + C5886) * C628 - (C5527 * C622 + C5526 * C627) +
             (C5887 + C5888) * C623 -
             (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                 C629 -
             (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                 C624) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
                C25448 +
            ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 - C28308 * C295 -
             C28309 * C50837) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
             (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
                C25448 +
            (C28310 * C294 + C28311 * C51053 - C13170 * C295 -
             C13171 * C50837) *
                C50770) *
               C50938) *
              C291 +
          (((C28310 * C295 -
             ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
             C28311 * C50837) *
                C25448 +
            (C28312 * C295 -
             ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
             C28313 * C50837) *
                C50770) *
               C22818 +
           (((C5881 + C5882) * C295 - (C28309 * C51053 + C28308 * C294) +
             (C5883 + C5884) * C50837) *
                C25448 +
            ((C5885 + C5886) * C295 - (C5527 * C51053 + C5526 * C294) +
             (C5887 + C5888) * C50837) *
                C50770) *
               C50938) *
              C292 +
          ((C5531 * C25448 +
            ((C5326 + C5325) * C294 + (C5324 + C5323) * C51053 -
             (C5523 + C5522) * C295 - (C5525 + C5524) * C50837) *
                C50770) *
               C22818 +
           ((C28312 * C294 + C28313 * C51053 - (C5886 + C5885) * C295 -
             (C5888 + C5887) * C50837) *
                C25448 +
            ((C5522 + C5523) * C294 + (C5524 + C5525) * C51053 -
             (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                 C295 -
             (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C757 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C752 -
            (C12860 + C12861) * C758 - (C12862 + C12863) * C753 +
            C13160 * C759 + C13161 * C754 - C13286 * C760 - C13287 * C755) *
               C25448 +
           ((C5315 + C5316) * C757 + (C5317 + C5318) * C752 - C28308 * C758 -
            C28309 * C753 + C28702 * C759 + C28703 * C754 -
            (C13184 + C13185) * C760 - (C13186 + C13187) * C755) *
               C50770) *
              C22818 +
          (((C12861 + C12860) * C757 + (C12863 + C12862) * C752 -
            (C12864 + C12865) * C758 - (C12866 + C12867) * C753 +
            (C13180 + C13181) * C759 + (C13182 + C13183) * C754 -
            (C13296 + C13297) * C760 - (C13298 + C13299) * C755) *
               C25448 +
           (C28310 * C757 + C28311 * C752 - C13170 * C758 - C13171 * C753 +
            (C13185 + C13184) * C759 + (C13187 + C13186) * C754 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C760 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C755) *
               C50770) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                  C118 +
              (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C50770) *
                C22818 +
            (((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C25448 +
             (C28310 * C118 + C28311 * C50821) * C50770) *
                C50938) *
               C291 -
           (((C5527 * C50821 + C5526 * C118) * C50770 +
             (C28309 * C50821 + C28308 * C118) * C25448) *
                C50938 +
            (((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C50770 +
             ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C25448) *
                C22818) *
               C292 +
           ((C5339 * C25448 +
             ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C50770) *
                C22818 +
            ((C28312 * C118 + C28313 * C50821) * C25448 +
             ((C5522 + C5523) * C118 + (C5524 + C5525) * C50821) * C50770) *
                C50938) *
               C293) *
              C51055 +
          (((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C25448 +
             ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C50770) *
                C22818 +
            (((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C25448 +
             ((C7072 + C7073) * C118 + (C7074 + C7075) * C50821) * C50770) *
                C50938) *
               C292 -
           ((((C7071 + C7070) * C50821 + (C7069 + C7068) * C118) * C50770 +
             ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C25448) *
                C50938 +
            (((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C50770 +
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C50821 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C118) *
                 C25448) *
                C22818) *
               C291 -
           ((((C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                  C50821 +
              (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                  C118) *
                 C50770 +
             ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C25448) *
                C50938 +
            (((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C50770 +
             C5718 * C25448) *
                C22818) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C627 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C622 -
             (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
             C13160 * C629 + C13161 * C624) *
                C25448 +
            ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 - C28308 * C628 -
             C28309 * C623 + C28702 * C629 + C28703 * C624) *
                C50770) *
               C22818 +
           (((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
             (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
             (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
                C25448 +
            (C28310 * C627 + C28311 * C622 - C13170 * C628 - C13171 * C623 +
             (C13185 + C13184) * C629 + (C13187 + C13186) * C624) *
                C50770) *
               C50938) *
              C50787 * C51055 +
          ((((C13470 + C13471) * C628 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C622 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C627) +
             (C13472 + C13473) * C623 - C13482 * C629 - C13483 * C624) *
                C25448 +
            ((C7068 + C7069) * C628 -
             ((C5705 + C5704) * C622 + (C5703 + C5702) * C627) +
             (C7070 + C7071) * C623 - (C14400 + C14401) * C629 -
             (C14402 + C14403) * C624) *
                C50770) *
               C22818 +
           (((C13475 + C13474) * C628 -
             ((C13473 + C13472) * C622 + (C13471 + C13470) * C627) +
             (C13477 + C13476) * C623 - (C13478 + C13479) * C629 -
             (C13480 + C13481) * C624) *
                C25448 +
            ((C14401 + C14400) * C628 -
             ((C7071 + C7070) * C622 + (C7069 + C7068) * C627) +
             (C14403 + C14402) * C623 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C629 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C624) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                C51039 +
            ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
             C34687 * C1356 - C34688 * C50837) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
             (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                C51039 +
            (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C51098 +
          (((C34689 * C1356 -
             ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
             C34690 * C50837) *
                C51039 +
            (C34691 * C1356 -
             ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
             C34692 * C50837) *
                C50770) *
               C22818 +
           ((C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
             C35094 * C50837) *
                C51039 +
            ((C32204 + C32205) * C1356 - (C31846 * C1350 + C31845 * C1355) +
             (C32206 + C32207) * C50837) *
                C50770) *
               C50938) *
              C51084 +
          ((C33018 * C51039 +
            ((C31645 + C31644) * C1355 + (C31643 + C31642) * C1350 -
             (C31842 + C31841) * C1356 - (C31844 + C31843) * C50837) *
                C50770) *
               C22818 +
           ((C34691 * C1355 + C34692 * C1350 - (C32205 + C32204) * C1356 -
             (C32207 + C32206) * C50837) *
                C51039 +
            ((C31841 + C31842) * C1355 + (C31843 + C31844) * C1350 -
             (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                 C1356 -
             (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1482 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51099 -
             (C34693 + C34694) * C1483 - (C34695 + C34696) * C51087 +
             (C35105 + C35106) * C1484 + (C35107 + C35108) * C1479) *
                C51039 +
            ((C31634 + C31635) * C1482 + (C31636 + C31637) * C51099 -
             C34687 * C1483 - C34688 * C51087 + C35093 * C1484 +
             C35094 * C1479) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C1482 + (C34696 + C34695) * C51099 -
             (C35106 + C35105) * C1483 - (C35108 + C35107) * C51087 +
             (C35252 + C35251) * C1484 + (C35254 + C35253) * C1479) *
                C51039 +
            (C34689 * C1482 + C34690 * C51099 - C35095 * C1483 -
             C35096 * C51087 + (C35109 + C35110) * C1484 +
             (C35111 + C35112) * C1479) *
                C50770) *
               C50938) *
              C1480 +
          (((C34689 * C1483 -
             ((C31637 + C31636) * C51099 + (C31635 + C31634) * C1482) +
             C34690 * C51087 - C35095 * C1484 - C35096 * C1479) *
                C51039 +
            (C34691 * C1483 -
             ((C31641 + C31640) * C51099 + (C31639 + C31638) * C1482) +
             C34692 * C51087 - (C32205 + C32204) * C1484 -
             (C32207 + C32206) * C1479) *
                C50770) *
               C22818 +
           ((C35093 * C1483 - (C34688 * C51099 + C34687 * C1482) +
             C35094 * C51087 - (C35110 + C35109) * C1484 -
             (C35112 + C35111) * C1479) *
                C51039 +
            ((C32204 + C32205) * C1483 - (C31846 * C51099 + C31845 * C1482) +
             (C32206 + C32207) * C51087 -
             (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                 C1484 -
             (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                 C1479) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C1355 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C1350 -
              (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                 C51039 +
             ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
              C34687 * C1356 - C34688 * C50837) *
                 C50770) *
                C22818 +
            (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
              (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                 C51039 +
             (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
              C35096 * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           (((C34689 * C1356 -
              ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
              C34690 * C50837) *
                 C51039 +
             (C34691 * C1356 -
              ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
              C34692 * C50837) *
                 C50770) *
                C22818 +
            ((C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
              C35094 * C50837) *
                 C51039 +
             ((C32204 + C32205) * C1356 - (C31846 * C1350 + C31845 * C1355) +
              (C32206 + C32207) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C51055 +
          (((((C35473 + C35474) * C1356 -
              ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
                C31597 * C488) *
                   C1350 +
               (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
                C31597 * C481) *
                   C1355) +
              (C35475 + C35476) * C50837) *
                 C51039 +
             (C36673 * C1356 -
              ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
              C36674 * C50837) *
                 C50770) *
                C22818 +
            (((C35478 + C35477) * C1356 -
              ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
              (C35480 + C35479) * C50837) *
                 C51039 +
             ((C35482 + C35481) * C1356 - (C36675 * C1350 + C36676 * C1355) +
              (C35484 + C35483) * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           ((((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
              C36676 * C1356 - C36675 * C50837) *
                 C51039 +
             ((C32025 + C32026) * C1355 + (C32027 + C32028) * C1350 -
              (C33380 + C33379) * C1356 - (C33382 + C33381) * C50837) *
                 C50770) *
                C22818 +
            ((C36673 * C1355 + C36674 * C1350 - (C35481 + C35482) * C1356 -
              (C35483 + C35484) * C50837) *
                 C51039 +
             ((C33379 + C33380) * C1355 + (C33381 + C33382) * C1350 -
              (C31600 * C3553 + C50962 * C3558 + C31599 * C880 +
               C31597 * C893) *
                  C1356 -
              (C31600 * C3559 + C50962 * C3562 + C31599 * C894 +
               C31597 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C1355 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C1350 -
              (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                 C51039 +
             ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
              C34687 * C1356 - C34688 * C50837) *
                 C50770) *
                C22818 +
            (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
              (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                 C51039 +
             (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
              C35096 * C50837) *
                 C50770) *
                C50938) *
               C51046 +
           (((C34689 * C1356 -
              ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
              C34690 * C50837) *
                 C51039 +
             (C34691 * C1356 -
              ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
              C34692 * C50837) *
                 C50770) *
                C22818 +
            ((C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
              C35094 * C50837) *
                 C51039 +
             ((C32204 + C32205) * C1356 - (C31846 * C1350 + C31845 * C1355) +
              (C32206 + C32207) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C1765 +
          (((((C35473 + C35474) * C1356 -
              ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
                C31597 * C488) *
                   C1350 +
               (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
                C31597 * C481) *
                   C1355) +
              (C35475 + C35476) * C50837) *
                 C51039 +
             (C36673 * C1356 -
              ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
              C36674 * C50837) *
                 C50770) *
                C22818 +
            (((C35478 + C35477) * C1356 -
              ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
              (C35480 + C35479) * C50837) *
                 C51039 +
             ((C35482 + C35481) * C1356 - (C36675 * C1350 + C36676 * C1355) +
              (C35484 + C35483) * C50837) *
                 C50770) *
                C50938) *
               C51046 +
           ((((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
              C36676 * C1356 - C36675 * C50837) *
                 C51039 +
             ((C32025 + C32026) * C1355 + (C32027 + C32028) * C1350 -
              (C33380 + C33379) * C1356 - (C33382 + C33381) * C50837) *
                 C50770) *
                C22818 +
            ((C36673 * C1355 + C36674 * C1350 - (C35481 + C35482) * C1356 -
              (C35483 + C35484) * C50837) *
                 C51039 +
             ((C33379 + C33380) * C1355 + (C33381 + C33382) * C1350 -
              (C31600 * C3553 + C50962 * C3558 + C31599 * C880 +
               C31597 * C893) *
                  C1356 -
              (C31600 * C3559 + C50962 * C3562 + C31599 * C894 +
               C31597 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1482 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51099 -
             (C34693 + C34694) * C1483 - (C34695 + C34696) * C51087 +
             (C35105 + C35106) * C1484 + (C35107 + C35108) * C1479) *
                C51039 +
            ((C31634 + C31635) * C1482 + (C31636 + C31637) * C51099 -
             C34687 * C1483 - C34688 * C51087 + C35093 * C1484 +
             C35094 * C1479) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C1482 + (C34696 + C34695) * C51099 -
             (C35106 + C35105) * C1483 - (C35108 + C35107) * C51087 +
             (C35252 + C35251) * C1484 + (C35254 + C35253) * C1479) *
                C51039 +
            (C34689 * C1482 + C34690 * C51099 - C35095 * C1483 -
             C35096 * C51087 + (C35109 + C35110) * C1484 +
             (C35111 + C35112) * C1479) *
                C50770) *
               C50938) *
              C50787 * C1765 +
          ((((C35473 + C35474) * C1483 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C51099 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1482) +
             (C35475 + C35476) * C51087 - (C35477 + C35478) * C1484 -
             (C35479 + C35480) * C1479) *
                C51039 +
            (C36673 * C1483 -
             ((C32024 + C32023) * C51099 + (C32022 + C32021) * C1482) +
             C36674 * C51087 - (C35481 + C35482) * C1484 -
             (C35483 + C35484) * C1479) *
                C50770) *
               C22818 +
           (((C35478 + C35477) * C1483 -
             ((C35476 + C35475) * C51099 + (C35474 + C35473) * C1482) +
             (C35480 + C35479) * C51087 -
             (C31600 * C9196 + C50962 * C9198 + C31599 * C3207 +
              C31597 * C3210) *
                 C1484 -
             (C31600 * C9199 + C50962 * C9202 + C31599 * C3211 +
              C31597 * C3216) *
                 C1479) *
                C51039 +
            ((C35482 + C35481) * C1483 - (C36675 * C51099 + C36676 * C1482) +
             (C35484 + C35483) * C51087 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C1484 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C1479) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                C51039 +
            ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
             C34687 * C1356 - C34688 * C50837) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
             (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                C51039 +
            (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C50787 * C51100 +
          ((((C35473 + C35474) * C1356 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C1350 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1355) +
             (C35475 + C35476) * C50837) *
                C51039 +
            (C36673 * C1356 -
             ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
             C36674 * C50837) *
                C50770) *
               C22818 +
           (((C35478 + C35477) * C1356 -
             ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
             (C35480 + C35479) * C50837) *
                C51039 +
            ((C35482 + C35481) * C1356 - (C36675 * C1350 + C36676 * C1355) +
             (C35484 + C35483) * C50837) *
                C50770) *
               C50938) *
              C50787 * C51090 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C1355 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C1350 -
             (C35893 + C35894) * C1356 - (C35895 + C35896) * C50837) *
                C51039 +
            ((C32614 + C32615) * C1355 + (C32616 + C32617) * C1350 -
             (C35688 + C35687) * C1356 - (C35690 + C35689) * C50837) *
                C50770) *
               C22818 +
           (((C35894 + C35893) * C1355 + (C35896 + C35895) * C1350 -
             (C31600 * C9309 + C50962 * C9313 + C31599 * C3551 +
              C31597 * C3554) *
                 C1356 -
             (C31600 * C9312 + C50962 * C9315 + C31599 * C3555 +
              C31597 * C3560) *
                 C50837) *
                C51039 +
            ((C35687 + C35688) * C1355 + (C35689 + C35690) * C1350 -
             (C31600 * C9308 + C50962 * C9311 + C31599 * C3552 +
              C31597 * C3556) *
                 C1356 -
             (C31600 * C9310 + C50962 * C9314 + C31599 * C3557 +
              C31597 * C3561) *
                 C50837) *
                C50770) *
               C50938) *
              C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C51039 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
                C51039 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C51046 +
          (((C34689 * C628 -
             ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
             C34690 * C623 - C35095 * C629 - C35096 * C624) *
                C51039 +
            (C34691 * C628 -
             ((C31641 + C31640) * C622 + (C31639 + C31638) * C627) +
             C34692 * C623 - (C32205 + C32204) * C629 -
             (C32207 + C32206) * C624) *
                C50770) *
               C22818 +
           ((C35093 * C628 - (C34688 * C622 + C34687 * C627) + C35094 * C623 -
             (C35110 + C35109) * C629 - (C35112 + C35111) * C624) *
                C51039 +
            ((C32204 + C32205) * C628 - (C31846 * C622 + C31845 * C627) +
             (C32206 + C32207) * C623 -
             (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                 C629 -
             (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                 C624) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51039 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
               C22818 +
           (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
            (C34689 * C118 + C34690 * C50821) * C50770) *
               C50938) *
              C112 -
          (((C31846 * C50821 + C31845 * C118) * C50770 +
            (C34688 * C50821 + C34687 * C118) * C51039) *
               C50938 +
           (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
               C22818) *
              C113 +
          ((C31658 * C51039 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
               C22818 +
           ((C34691 * C118 + C34692 * C50821) * C51039 +
            ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
               C50938) *
              C114 -
          ((((C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                 C50821 +
             (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                 C118) *
                C50770 +
            ((C31844 + C31843) * C50821 + (C31842 + C31841) * C118) * C51039) *
               C50938 +
           (((C31649 + C31648) * C50821 + (C31647 + C31646) * C118) * C50770 +
            C31659 * C51039) *
               C22818) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C51039 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C22818 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C51046 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C51039) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
                C22818) *
               C50792) *
              C1005 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51039 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C22818 +
            ((C36673 * C118 + C36674 * C50821) * C51039 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C50792 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C51039) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C51039) *
                C22818) *
               C51046) *
              C1006 +
          (((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
               C50962 * C1247) *
                  C118 +
              (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
               C50962 * C1251) *
                  C50821) *
                 C51039 +
             ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C50770) *
                C22818 +
            (((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C51039 +
             ((C35687 + C35688) * C118 + (C35689 + C35690) * C50821) * C50770) *
                C50938) *
               C51046 -
           ((((C31600 * C3670 + C50962 * C3676 + C31599 * C1159 +
               C31597 * C1164) *
                  C50821 +
              (C31600 * C3667 + C50962 * C3671 + C31599 * C1152 +
               C31597 * C1158) *
                  C118) *
                 C50770 +
             ((C35690 + C35689) * C50821 + (C35688 + C35687) * C118) * C51039) *
                C50938 +
            (((C32621 + C32620) * C50821 + (C32619 + C32618) * C118) * C50770 +
             ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C51039) *
                C22818) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C757 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C752 -
            (C34693 + C34694) * C758 - (C34695 + C34696) * C753 +
            (C35105 + C35106) * C759 + (C35107 + C35108) * C754 -
            (C35251 + C35252) * C760 - (C35253 + C35254) * C755) *
               C51039 +
           ((C31634 + C31635) * C757 + (C31636 + C31637) * C752 -
            C34687 * C758 - C34688 * C753 + C35093 * C759 + C35094 * C754 -
            (C35110 + C35109) * C760 - (C35112 + C35111) * C755) *
               C50770) *
              C22818 +
          (((C34694 + C34693) * C757 + (C34696 + C34695) * C752 -
            (C35106 + C35105) * C758 - (C35108 + C35107) * C753 +
            (C35252 + C35251) * C759 + (C35254 + C35253) * C754 -
            (C31600 * C8876 + C50962 * C8878 + C31599 * C3043 +
             C31597 * C3046) *
                C760 -
            (C31600 * C8879 + C50962 * C8882 + C31599 * C3047 +
             C31597 * C3052) *
                C755) *
               C51039 +
           (C34689 * C757 + C34690 * C752 - C35095 * C758 - C35096 * C753 +
            (C35109 + C35110) * C759 + (C35111 + C35112) * C754 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C760 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C755) *
               C50770) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C51039 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             C34687 * C295 - C34688 * C50837) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                C51039 +
            (C34689 * C294 + C34690 * C51053 - C35095 * C295 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C291 +
          (((C34689 * C295 -
             ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
             C34690 * C50837) *
                C51039 +
            (C34691 * C295 -
             ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
             C34692 * C50837) *
                C50770) *
               C22818 +
           ((C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
             C35094 * C50837) *
                C51039 +
            ((C32204 + C32205) * C295 - (C31846 * C51053 + C31845 * C294) +
             (C32206 + C32207) * C50837) *
                C50770) *
               C50938) *
              C292 +
          ((C31850 * C51039 +
            ((C31645 + C31644) * C294 + (C31643 + C31642) * C51053 -
             (C31842 + C31841) * C295 - (C31844 + C31843) * C50837) *
                C50770) *
               C22818 +
           ((C34691 * C294 + C34692 * C51053 - (C32205 + C32204) * C295 -
             (C32207 + C32206) * C50837) *
                C51039 +
            ((C31841 + C31842) * C294 + (C31843 + C31844) * C51053 -
             (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                 C295 -
             (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C51039 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             C34687 * C295 - C34688 * C50837) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                C51039 +
            (C34689 * C294 + C34690 * C51053 - C35095 * C295 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C50787 * C1005 +
          ((((C35473 + C35474) * C295 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C51053 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C294) +
             (C35475 + C35476) * C50837) *
                C51039 +
            (C36673 * C295 -
             ((C32024 + C32023) * C51053 + (C32022 + C32021) * C294) +
             C36674 * C50837) *
                C50770) *
               C22818 +
           (((C35478 + C35477) * C295 -
             ((C35476 + C35475) * C51053 + (C35474 + C35473) * C294) +
             (C35480 + C35479) * C50837) *
                C51039 +
            ((C35482 + C35481) * C295 - (C36675 * C51053 + C36676 * C294) +
             (C35484 + C35483) * C50837) *
                C50770) *
               C50938) *
              C50787 * C1006 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C294 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C51053 -
             (C35893 + C35894) * C295 - (C35895 + C35896) * C50837) *
                C51039 +
            ((C32614 + C32615) * C294 + (C32616 + C32617) * C51053 -
             (C35688 + C35687) * C295 - (C35690 + C35689) * C50837) *
                C50770) *
               C22818 +
           (((C35894 + C35893) * C294 + (C35896 + C35895) * C51053 -
             (C31600 * C9309 + C50962 * C9313 + C31599 * C3551 +
              C31597 * C3554) *
                 C295 -
             (C31600 * C9312 + C50962 * C9315 + C31599 * C3555 +
              C31597 * C3560) *
                 C50837) *
                C51039 +
            ((C35687 + C35688) * C294 + (C35689 + C35690) * C51053 -
             (C31600 * C9308 + C50962 * C9311 + C31599 * C3552 +
              C31597 * C3556) *
                 C295 -
             (C31600 * C9310 + C50962 * C9314 + C31599 * C3557 +
              C31597 * C3561) *
                 C50837) *
                C50770) *
               C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C51039 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
                C51039 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C50787 * C51055 +
          ((((C35473 + C35474) * C628 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C622 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C627) +
             (C35475 + C35476) * C623 - (C35477 + C35478) * C629 -
             (C35479 + C35480) * C624) *
                C51039 +
            (C36673 * C628 -
             ((C32024 + C32023) * C622 + (C32022 + C32021) * C627) +
             C36674 * C623 - (C35481 + C35482) * C629 -
             (C35483 + C35484) * C624) *
                C50770) *
               C22818 +
           (((C35478 + C35477) * C628 -
             ((C35476 + C35475) * C622 + (C35474 + C35473) * C627) +
             (C35480 + C35479) * C623 -
             (C31600 * C9196 + C50962 * C9198 + C31599 * C3207 +
              C31597 * C3210) *
                 C629 -
             (C31600 * C9199 + C50962 * C9202 + C31599 * C3211 +
              C31597 * C3216) *
                 C624) *
                C51039 +
            ((C35482 + C35481) * C628 - (C36675 * C622 + C36676 * C627) +
             (C35484 + C35483) * C623 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C629 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C624) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C51039 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C22818 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C291 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C51039) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
                C22818) *
               C292 +
           ((C31658 * C51039 +
             ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
                C22818 +
            ((C34691 * C118 + C34692 * C50821) * C51039 +
             ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
                C50938) *
               C293) *
              C51055 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51039 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C22818 +
            ((C36673 * C118 + C36674 * C50821) * C51039 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C292 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C51039) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C51039) *
                C22818) *
               C291 -
           ((((C31600 * C1161 + C50962 * C1165 + C31599 * C896 +
               C31597 * C905) *
                  C50821 +
              (C31600 * C1153 + C50962 * C1160 + C31599 * C881 +
               C31597 * C895) *
                  C118) *
                 C50770 +
             ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C51039) *
                C50938 +
            (((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C50770 +
             C32037 * C51039) *
                C22818) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51039 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
               C22818 +
           (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
            (C34689 * C118 + C34690 * C50821) * C50770) *
               C50938) *
              C50787 * C1232 -
          (((C36675 * C50821 + C36676 * C118) * C50770 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C51039) *
               C50938 +
           (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C51039) *
               C22818) *
              C50787 * C1233 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C118 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C50821) *
                C51039 +
            ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C50770) *
               C22818 +
           (((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C51039 +
            ((C35687 + C35688) * C118 + (C35689 + C35690) * C50821) * C50770) *
               C50938) *
              C50787 * C1234 -
          ((((C31600 * C16617 + C50962 * C16618 + C31599 * C3672 +
              C31597 * C3677) *
                 C50821 +
             (C31600 * C16615 + C50962 * C16616 + C31599 * C3668 +
              C31597 * C3673) *
                 C118) *
                C50770 +
            ((C31600 * C13901 + C50962 * C13904 + C31599 * C3674 +
              C31597 * C3678) *
                 C50821 +
             (C31600 * C13898 + C50962 * C13902 + C31599 * C3669 +
              C31597 * C3675) *
                 C118) *
                C51039) *
               C50938 +
           (((C31600 * C6551 + C50962 * C6556 + C31599 * C1244 +
              C31597 * C1250) *
                 C50821 +
             (C31600 * C6547 + C50962 * C6552 + C31599 * C1238 +
              C31597 * C1245) *
                 C118) *
                C50770 +
            ((C31600 * C6553 + C50962 * C6557 + C31599 * C1246 +
              C31597 * C1251) *
                 C50821 +
             (C31600 * C6548 + C50962 * C6554 + C31599 * C1239 +
              C31597 * C1247) *
                 C118) *
                C51039) *
               C22818) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C51039 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C22818 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C51098 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C51039) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
                C22818) *
               C51084 +
           ((C31658 * C51039 +
             ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
                C22818 +
            ((C34691 * C118 + C34692 * C50821) * C51039 +
             ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
                C50938) *
               C1354) *
              C1765 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51039 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C22818 +
            ((C36673 * C118 + C36674 * C50821) * C51039 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C51084 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C51039) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C51039) *
                C22818) *
               C51098 -
           ((((C31600 * C1161 + C50962 * C1165 + C31599 * C896 +
               C31597 * C905) *
                  C50821 +
              (C31600 * C1153 + C50962 * C1160 + C31599 * C881 +
               C31597 * C895) *
                  C118) *
                 C50770 +
             ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C51039) *
                C50938 +
            (((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C50770 +
             C32037 * C51039) *
                C22818) *
               C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C294 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C51053 -
              (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                 C51039 +
             ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
              C34687 * C295 - C34688 * C50837) *
                 C50770) *
                C22818 +
            (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
              (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                 C51039 +
             (C34689 * C294 + C34690 * C51053 - C35095 * C295 -
              C35096 * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           (((C34689 * C295 -
              ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
              C34690 * C50837) *
                 C51039 +
             (C34691 * C295 -
              ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
              C34692 * C50837) *
                 C50770) *
                C22818 +
            ((C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
              C35094 * C50837) *
                 C51039 +
             ((C32204 + C32205) * C295 - (C31846 * C51053 + C31845 * C294) +
              (C32206 + C32207) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C1765 +
          (((((C35473 + C35474) * C295 -
              ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
                C31597 * C488) *
                   C51053 +
               (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
                C31597 * C481) *
                   C294) +
              (C35475 + C35476) * C50837) *
                 C51039 +
             (C36673 * C295 -
              ((C32024 + C32023) * C51053 + (C32022 + C32021) * C294) +
              C36674 * C50837) *
                 C50770) *
                C22818 +
            (((C35478 + C35477) * C295 -
              ((C35476 + C35475) * C51053 + (C35474 + C35473) * C294) +
              (C35480 + C35479) * C50837) *
                 C51039 +
             ((C35482 + C35481) * C295 - (C36675 * C51053 + C36676 * C294) +
              (C35484 + C35483) * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           ((((C32021 + C32022) * C294 + (C32023 + C32024) * C51053 -
              C36676 * C295 - C36675 * C50837) *
                 C51039 +
             ((C32025 + C32026) * C294 + (C32027 + C32028) * C51053 -
              (C33380 + C33379) * C295 - (C33382 + C33381) * C50837) *
                 C50770) *
                C22818 +
            ((C36673 * C294 + C36674 * C51053 - (C35481 + C35482) * C295 -
              (C35483 + C35484) * C50837) *
                 C51039 +
             ((C33379 + C33380) * C294 + (C33381 + C33382) * C51053 -
              (C31600 * C3553 + C50962 * C3558 + C31599 * C880 +
               C31597 * C893) *
                  C295 -
              (C31600 * C3559 + C50962 * C3562 + C31599 * C894 +
               C31597 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C51039 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C22818 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C1480 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C51039) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
                C22818) *
               C50792) *
              C51100 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51039 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C22818 +
            ((C36673 * C118 + C36674 * C50821) * C51039 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C50792 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C51039) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C51039) *
                C22818) *
               C1480) *
              C51090 +
          (((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
               C50962 * C1247) *
                  C118 +
              (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
               C50962 * C1251) *
                  C50821) *
                 C51039 +
             ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C50770) *
                C22818 +
            (((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C51039 +
             ((C35687 + C35688) * C118 + (C35689 + C35690) * C50821) * C50770) *
                C50938) *
               C1480 -
           ((((C31600 * C3670 + C50962 * C3676 + C31599 * C1159 +
               C31597 * C1164) *
                  C50821 +
              (C31600 * C3667 + C50962 * C3671 + C31599 * C1152 +
               C31597 * C1158) *
                  C118) *
                 C50770 +
             ((C35690 + C35689) * C50821 + (C35688 + C35687) * C118) * C51039) *
                C50938 +
            (((C32621 + C32620) * C50821 + (C32619 + C32618) * C118) * C50770 +
             ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C51039) *
                C22818) *
               C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51039 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
               C22818 +
           (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
            (C34689 * C118 + C34690 * C50821) * C50770) *
               C50938) *
              C112 -
          (((C31846 * C50821 + C31845 * C118) * C50770 +
            (C34688 * C50821 + C34687 * C118) * C51039) *
               C50938 +
           (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
               C22818) *
              C113 +
          ((C31658 * C51039 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
               C22818 +
           ((C34691 * C118 + C34692 * C50821) * C51039 +
            ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
               C50938) *
              C114 -
          ((((C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                 C50821 +
             (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                 C118) *
                C50770 +
            ((C31844 + C31843) * C50821 + (C31842 + C31841) * C118) * C51039) *
               C50938 +
           (((C31649 + C31648) * C50821 + (C31647 + C31646) * C118) * C50770 +
            C31659 * C51039) *
               C22818) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C51039 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
                C51039 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C51046 +
          (((C34689 * C628 -
             ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
             C34690 * C623 - C35095 * C629 - C35096 * C624) *
                C51039 +
            (C34691 * C628 -
             ((C31641 + C31640) * C622 + (C31639 + C31638) * C627) +
             C34692 * C623 - (C32205 + C32204) * C629 -
             (C32207 + C32206) * C624) *
                C50770) *
               C22818 +
           ((C35093 * C628 - (C34688 * C622 + C34687 * C627) + C35094 * C623 -
             (C35110 + C35109) * C629 - (C35112 + C35111) * C624) *
                C51039 +
            ((C32204 + C32205) * C628 - (C31846 * C622 + C31845 * C627) +
             (C32206 + C32207) * C623 -
             (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                 C629 -
             (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                 C624) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C51039 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             C34687 * C295 - C34688 * C50837) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                C51039 +
            (C34689 * C294 + C34690 * C51053 - C35095 * C295 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C291 +
          (((C34689 * C295 -
             ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
             C34690 * C50837) *
                C51039 +
            (C34691 * C295 -
             ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
             C34692 * C50837) *
                C50770) *
               C22818 +
           ((C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
             C35094 * C50837) *
                C51039 +
            ((C32204 + C32205) * C295 - (C31846 * C51053 + C31845 * C294) +
             (C32206 + C32207) * C50837) *
                C50770) *
               C50938) *
              C292 +
          ((C31850 * C51039 +
            ((C31645 + C31644) * C294 + (C31643 + C31642) * C51053 -
             (C31842 + C31841) * C295 - (C31844 + C31843) * C50837) *
                C50770) *
               C22818 +
           ((C34691 * C294 + C34692 * C51053 - (C32205 + C32204) * C295 -
             (C32207 + C32206) * C50837) *
                C51039 +
            ((C31841 + C31842) * C294 + (C31843 + C31844) * C51053 -
             (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                 C295 -
             (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C757 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C752 -
            (C34693 + C34694) * C758 - (C34695 + C34696) * C753 +
            (C35105 + C35106) * C759 + (C35107 + C35108) * C754 -
            (C35251 + C35252) * C760 - (C35253 + C35254) * C755) *
               C51039 +
           ((C31634 + C31635) * C757 + (C31636 + C31637) * C752 -
            C34687 * C758 - C34688 * C753 + C35093 * C759 + C35094 * C754 -
            (C35110 + C35109) * C760 - (C35112 + C35111) * C755) *
               C50770) *
              C22818 +
          (((C34694 + C34693) * C757 + (C34696 + C34695) * C752 -
            (C35106 + C35105) * C758 - (C35108 + C35107) * C753 +
            (C35252 + C35251) * C759 + (C35254 + C35253) * C754 -
            (C31600 * C8876 + C50962 * C8878 + C31599 * C3043 +
             C31597 * C3046) *
                C760 -
            (C31600 * C8879 + C50962 * C8882 + C31599 * C3047 +
             C31597 * C3052) *
                C755) *
               C51039 +
           (C34689 * C757 + C34690 * C752 - C35095 * C758 - C35096 * C753 +
            (C35109 + C35110) * C759 + (C35111 + C35112) * C754 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C760 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C755) *
               C50770) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C51039 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C22818 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C51039 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C291 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C51039) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51039) *
                C22818) *
               C292 +
           ((C31658 * C51039 +
             ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
                C22818 +
            ((C34691 * C118 + C34692 * C50821) * C51039 +
             ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
                C50938) *
               C293) *
              C51055 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51039 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C22818 +
            ((C36673 * C118 + C36674 * C50821) * C51039 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C292 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C51039) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C51039) *
                C22818) *
               C291 -
           ((((C31600 * C1161 + C50962 * C1165 + C31599 * C896 +
               C31597 * C905) *
                  C50821 +
              (C31600 * C1153 + C50962 * C1160 + C31599 * C881 +
               C31597 * C895) *
                  C118) *
                 C50770 +
             ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C51039) *
                C50938 +
            (((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C50770 +
             C32037 * C51039) *
                C22818) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C51039 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C22818 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
                C51039 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C50787 * C51055 +
          ((((C35473 + C35474) * C628 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C622 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C627) +
             (C35475 + C35476) * C623 - (C35477 + C35478) * C629 -
             (C35479 + C35480) * C624) *
                C51039 +
            (C36673 * C628 -
             ((C32024 + C32023) * C622 + (C32022 + C32021) * C627) +
             C36674 * C623 - (C35481 + C35482) * C629 -
             (C35483 + C35484) * C624) *
                C50770) *
               C22818 +
           (((C35478 + C35477) * C628 -
             ((C35476 + C35475) * C622 + (C35474 + C35473) * C627) +
             (C35480 + C35479) * C623 -
             (C31600 * C9196 + C50962 * C9198 + C31599 * C3207 +
              C31597 * C3210) *
                 C629 -
             (C31600 * C9199 + C50962 * C9202 + C31599 * C3211 +
              C31597 * C3216) *
                 C624) *
                C51039 +
            ((C35482 + C35481) * C628 - (C36675 * C622 + C36676 * C627) +
             (C35484 + C35483) * C623 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C629 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C624) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1355 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C1350 -
            (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
               C50765 * C51101 +
           ((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
            (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
               C50765 * C51093 +
           (C44811 * C1355 + C44812 * C1350 - C44911 * C1356 -
            C44912 * C50837) *
               C50765 * C25452) *
              C51098 +
          ((C34689 * C1356 -
            ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
            C34690 * C50837) *
               C50765 * C51101 +
           (C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
            C35094 * C50837) *
               C50765 * C51093 +
           ((C35109 + C35110) * C1356 - (C35096 * C1350 + C35095 * C1355) +
            (C35111 + C35112) * C50837) *
               C50765 * C25452) *
              C51084 +
          (C33018 * C50765 * C51101 +
           (C34691 * C1355 + C34692 * C1350 - (C32205 + C32204) * C1356 -
            (C32207 + C32206) * C50837) *
               C50765 * C51093 +
           ((C32204 + C32205) * C1355 + (C32206 + C32207) * C1350 -
            (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                C1356 -
            (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                C50837) *
               C50765 * C25452) *
              C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1482 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51099 -
            (C34693 + C34694) * C1483 - (C34695 + C34696) * C51087 +
            C44811 * C1484 + C44812 * C1479) *
               C50765 * C51101 +
           ((C34694 + C34693) * C1482 + (C34696 + C34695) * C51099 -
            (C35106 + C35105) * C1483 - (C35108 + C35107) * C51087 +
            (C35252 + C35251) * C1484 + (C35254 + C35253) * C1479) *
               C50765 * C51093 +
           (C44811 * C1482 + C44812 * C51099 - C44911 * C1483 -
            C44912 * C51087 + (C44922 + C44921) * C1484 +
            (C44924 + C44923) * C1479) *
               C50765 * C25452) *
              C1480 +
          ((C34689 * C1483 -
            ((C31637 + C31636) * C51099 + (C31635 + C31634) * C1482) +
            C34690 * C51087 - C35095 * C1484 - C35096 * C1479) *
               C50765 * C51101 +
           (C35093 * C1483 - (C34688 * C51099 + C34687 * C1482) +
            C35094 * C51087 - (C35110 + C35109) * C1484 -
            (C35112 + C35111) * C1479) *
               C50765 * C51093 +
           ((C35109 + C35110) * C1483 - (C35096 * C51099 + C35095 * C1482) +
            (C35111 + C35112) * C51087 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C1484 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C1479) *
               C50765 * C25452) *
              C50792) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                C50765 * C51101 +
            ((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
             (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                C50765 * C51093 +
            (C44811 * C1355 + C44812 * C1350 - C44911 * C1356 -
             C44912 * C50837) *
                C50765 * C25452) *
               C1480 +
           ((C34689 * C1356 -
             ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
             C34690 * C50837) *
                C50765 * C51101 +
            (C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
             C35094 * C50837) *
                C50765 * C51093 +
            ((C35109 + C35110) * C1356 - (C35096 * C1350 + C35095 * C1355) +
             (C35111 + C35112) * C50837) *
                C50765 * C25452) *
               C50792) *
              C51055 +
          ((((C35473 + C35474) * C1356 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C1350 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1355) +
             (C35475 + C35476) * C50837) *
                C50765 * C51101 +
            ((C35478 + C35477) * C1356 -
             ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
             (C35480 + C35479) * C50837) *
                C50765 * C51093 +
            ((C45082 + C45081) * C1356 - (C45072 * C1350 + C45071 * C1355) +
             (C45084 + C45083) * C50837) *
                C50765 * C25452) *
               C1480 +
           (((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
             C36676 * C1356 - C36675 * C50837) *
                C50765 * C51101 +
            (C36673 * C1355 + C36674 * C1350 - (C35481 + C35482) * C1356 -
             (C35483 + C35484) * C50837) *
                C50765 * C51093 +
            ((C35482 + C35481) * C1355 + (C35484 + C35483) * C1350 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C1356 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C50837) *
                C50765 * C25452) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                C50765 * C51101 +
            ((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
             (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                C50765 * C51093 +
            (C44811 * C1355 + C44812 * C1350 - C44911 * C1356 -
             C44912 * C50837) *
                C50765 * C25452) *
               C51046 +
           ((C34689 * C1356 -
             ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
             C34690 * C50837) *
                C50765 * C51101 +
            (C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
             C35094 * C50837) *
                C50765 * C51093 +
            ((C35109 + C35110) * C1356 - (C35096 * C1350 + C35095 * C1355) +
             (C35111 + C35112) * C50837) *
                C50765 * C25452) *
               C50792) *
              C1765 +
          ((((C35473 + C35474) * C1356 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C1350 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1355) +
             (C35475 + C35476) * C50837) *
                C50765 * C51101 +
            ((C35478 + C35477) * C1356 -
             ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
             (C35480 + C35479) * C50837) *
                C50765 * C51093 +
            ((C45082 + C45081) * C1356 - (C45072 * C1350 + C45071 * C1355) +
             (C45084 + C45083) * C50837) *
                C50765 * C25452) *
               C51046 +
           (((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
             C36676 * C1356 - C36675 * C50837) *
                C50765 * C51101 +
            (C36673 * C1355 + C36674 * C1350 - (C35481 + C35482) * C1356 -
             (C35483 + C35484) * C50837) *
                C50765 * C51093 +
            ((C35482 + C35481) * C1355 + (C35484 + C35483) * C1350 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C1356 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C50837) *
                C50765 * C25452) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1482 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51099 -
            (C34693 + C34694) * C1483 - (C34695 + C34696) * C51087 +
            C44811 * C1484 + C44812 * C1479) *
               C50765 * C51101 +
           ((C34694 + C34693) * C1482 + (C34696 + C34695) * C51099 -
            (C35106 + C35105) * C1483 - (C35108 + C35107) * C51087 +
            (C35252 + C35251) * C1484 + (C35254 + C35253) * C1479) *
               C50765 * C51093 +
           (C44811 * C1482 + C44812 * C51099 - C44911 * C1483 -
            C44912 * C51087 + (C44922 + C44921) * C1484 +
            (C44924 + C44923) * C1479) *
               C50765 * C25452) *
              C50787 * C1765 +
          (((C35473 + C35474) * C1483 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C51099 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C1482) +
            (C35475 + C35476) * C51087 - C45071 * C1484 - C45072 * C1479) *
               C50765 * C51101 +
           ((C35478 + C35477) * C1483 -
            ((C35476 + C35475) * C51099 + (C35474 + C35473) * C1482) +
            (C35480 + C35479) * C51087 - (C45081 + C45082) * C1484 -
            (C45083 + C45084) * C1479) *
               C50765 * C51093 +
           ((C45082 + C45081) * C1483 - (C45072 * C51099 + C45071 * C1482) +
            (C45084 + C45083) * C51087 -
            (C31600 * C11541 + C50962 * C11542 + C31599 * C8876 +
             C31597 * C8878) *
                C1484 -
            (C31600 * C11543 + C50962 * C11544 + C31599 * C8879 +
             C31597 * C8882) *
                C1479) *
               C50765 * C25452) *
              C50787 * C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1355 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C1350 -
            (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
               C50765 * C51101 +
           ((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
            (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
               C50765 * C51093 +
           (C44811 * C1355 + C44812 * C1350 - C44911 * C1356 -
            C44912 * C50837) *
               C50765 * C25452) *
              C50787 * C51100 +
          (((C35473 + C35474) * C1356 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C1350 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C1355) +
            (C35475 + C35476) * C50837) *
               C50765 * C51101 +
           ((C35478 + C35477) * C1356 -
            ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
            (C35480 + C35479) * C50837) *
               C50765 * C51093 +
           ((C45082 + C45081) * C1356 - (C45072 * C1350 + C45071 * C1355) +
            (C45084 + C45083) * C50837) *
               C50765 * C25452) *
              C50787 * C51090 +
          (((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
             C50962 * C1247) *
                C1355 +
            (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
             C50962 * C1251) *
                C1350 -
            (C35893 + C35894) * C1356 - (C35895 + C35896) * C50837) *
               C50765 * C51101 +
           ((C35894 + C35893) * C1355 + (C35896 + C35895) * C1350 -
            (C45385 + C45386) * C1356 - (C45387 + C45388) * C50837) *
               C50765 * C51093 +
           ((C45386 + C45385) * C1355 + (C45388 + C45387) * C1350 -
            (C31600 * C11617 + C50962 * C11619 + C31599 * C9196 +
             C31597 * C9198) *
                C1356 -
            (C31600 * C11618 + C50962 * C11620 + C31599 * C9199 +
             C31597 * C9202) *
                C50837) *
               C50765 * C25452) *
              C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
            C44811 * C629 + C44812 * C624) *
               C50765 * C51101 +
           ((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
            (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
            (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
               C50765 * C51093 +
           (C44811 * C627 + C44812 * C622 - (C35251 + C35252) * C628 -
            (C35253 + C35254) * C623 +
            (C31599 * C3043 + C31597 * C3046 + C31600 * C8876 +
             C50962 * C8878) *
                C629 +
            (C31599 * C3047 + C31597 * C3052 + C31600 * C8879 +
             C50962 * C8882) *
                C624) *
               C50765 * C25452) *
              C51046 +
          ((C34689 * C628 -
            ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
            C34690 * C623 - C35095 * C629 - C35096 * C624) *
               C50765 * C51101 +
           (C35093 * C628 - (C34688 * C622 + C34687 * C627) + C35094 * C623 -
            (C35110 + C35109) * C629 - (C35112 + C35111) * C624) *
               C50765 * C51093 +
           ((C35109 + C35110) * C628 - (C35096 * C622 + C35095 * C627) +
            (C35111 + C35112) * C623 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C629 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C624) *
               C50765 * C25452) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C118 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C51101 +
           ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
               C51093 +
           ((C35105 + C35106) * C118 + (C35107 + C35108) * C50821) * C50765 *
               C25452) *
              C112 -
          ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
           (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
           ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
               C51101) *
              C113 +
          (C31658 * C50765 * C51101 +
           (C34691 * C118 + C34692 * C50821) * C50765 * C51093 +
           ((C32204 + C32205) * C118 + (C32206 + C32207) * C50821) * C50765 *
               C25452) *
              C114 -
          (((C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                C50821 +
            (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                C118) *
               C50765 * C25452 +
           ((C31844 + C31843) * C50821 + (C31842 + C31841) * C118) * C50765 *
               C51093 +
           C31659 * C50765 * C51101) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C51101 +
            ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
                C51093 +
            (C44811 * C118 + C44812 * C50821) * C50765 * C25452) *
               C51046 -
           ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
            (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
                C51101) *
               C50792) *
              C1005 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C50765 *
                C51101 +
            (C36673 * C118 + C36674 * C50821) * C50765 * C51093 +
            ((C35482 + C35481) * C118 + (C35484 + C35483) * C50821) * C50765 *
                C25452) *
               C50792 -
           ((C45072 * C50821 + C45071 * C118) * C50765 * C25452 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C50765 *
                C51093 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C50765 * C51101) *
               C51046) *
              C1006 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C118 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C50821) *
                C50765 * C51101 +
            ((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C50765 *
                C51093 +
            ((C31599 * C3551 + C31597 * C3554 + C31600 * C9309 +
              C50962 * C9313) *
                 C118 +
             (C31599 * C3555 + C31597 * C3560 + C31600 * C9312 +
              C50962 * C9315) *
                 C50821) *
                C50765 * C25452) *
               C51046 -
           (((C31600 * C9310 + C50962 * C9314 + C31599 * C3557 +
              C31597 * C3561) *
                 C50821 +
             (C31600 * C9308 + C50962 * C9311 + C31599 * C3552 +
              C31597 * C3556) *
                 C118) *
                C50765 * C25452 +
            ((C35690 + C35689) * C50821 + (C35688 + C35687) * C118) * C50765 *
                C51093 +
            ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C50765 *
                C51101) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
               C757 +
           (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
               C752 -
           (C34693 + C34694) * C758 - (C34695 + C34696) * C753 + C44811 * C759 +
           C44812 * C754 - C44911 * C760 - C44912 * C755) *
              C50765 * C51101 +
          ((C34694 + C34693) * C757 + (C34696 + C34695) * C752 -
           (C35106 + C35105) * C758 - (C35108 + C35107) * C753 +
           (C35252 + C35251) * C759 + (C35254 + C35253) * C754 -
           (C44921 + C44922) * C760 - (C44923 + C44924) * C755) *
              C50765 * C51093 +
          (C44811 * C757 + C44812 * C752 - C44911 * C758 - C44912 * C753 +
           (C44922 + C44921) * C759 + (C44924 + C44923) * C754 -
           (C31600 * C11335 + C50962 * C11336 + C31599 * C8716 +
            C31597 * C8718) *
               C760 -
           (C31600 * C11337 + C50962 * C11338 + C31599 * C8719 +
            C31597 * C8722) *
               C755) *
              C50765 * C25452) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C294 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51053 -
            (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
               C50765 * C51101 +
           ((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
            (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
               C50765 * C51093 +
           ((C35105 + C35106) * C294 + (C35107 + C35108) * C51053 -
            (C35251 + C35252) * C295 - (C35253 + C35254) * C50837) *
               C50765 * C25452) *
              C291 +
          ((C34689 * C295 -
            ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
            C34690 * C50837) *
               C50765 * C51101 +
           (C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
            C35094 * C50837) *
               C50765 * C51093 +
           ((C35109 + C35110) * C295 - (C35096 * C51053 + C35095 * C294) +
            (C35111 + C35112) * C50837) *
               C50765 * C25452) *
              C292 +
          (C31850 * C50765 * C51101 +
           (C34691 * C294 + C34692 * C51053 - (C32205 + C32204) * C295 -
            (C32207 + C32206) * C50837) *
               C50765 * C51093 +
           ((C32204 + C32205) * C294 + (C32206 + C32207) * C51053 -
            (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                C295 -
            (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                C50837) *
               C50765 * C25452) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C294 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51053 -
            (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
               C50765 * C51101 +
           ((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
            (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
               C50765 * C51093 +
           (C44811 * C294 + C44812 * C51053 - C44911 * C295 - C44912 * C50837) *
               C50765 * C25452) *
              C50787 * C1005 +
          (((C35473 + C35474) * C295 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C51053 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C294) +
            (C35475 + C35476) * C50837) *
               C50765 * C51101 +
           ((C35478 + C35477) * C295 -
            ((C35476 + C35475) * C51053 + (C35474 + C35473) * C294) +
            (C35480 + C35479) * C50837) *
               C50765 * C51093 +
           ((C45082 + C45081) * C295 - (C45072 * C51053 + C45071 * C294) +
            (C45084 + C45083) * C50837) *
               C50765 * C25452) *
              C50787 * C1006 +
          (((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
             C50962 * C1247) *
                C294 +
            (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
             C50962 * C1251) *
                C51053 -
            (C35893 + C35894) * C295 - (C35895 + C35896) * C50837) *
               C50765 * C51101 +
           ((C35894 + C35893) * C294 + (C35896 + C35895) * C51053 -
            (C45385 + C45386) * C295 - (C45387 + C45388) * C50837) *
               C50765 * C51093 +
           ((C45386 + C45385) * C294 + (C45388 + C45387) * C51053 -
            (C31600 * C11617 + C50962 * C11619 + C31599 * C9196 +
             C31597 * C9198) *
                C295 -
            (C31600 * C11618 + C50962 * C11620 + C31599 * C9199 +
             C31597 * C9202) *
                C50837) *
               C50765 * C25452) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
            C44811 * C629 + C44812 * C624) *
               C50765 * C51101 +
           ((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
            (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
            (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
               C50765 * C51093 +
           (C44811 * C627 + C44812 * C622 - C44911 * C628 - C44912 * C623 +
            (C44922 + C44921) * C629 + (C44924 + C44923) * C624) *
               C50765 * C25452) *
              C50787 * C51055 +
          (((C35473 + C35474) * C628 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C622 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C627) +
            (C35475 + C35476) * C623 - C45071 * C629 - C45072 * C624) *
               C50765 * C51101 +
           ((C35478 + C35477) * C628 -
            ((C35476 + C35475) * C622 + (C35474 + C35473) * C627) +
            (C35480 + C35479) * C623 - (C45081 + C45082) * C629 -
            (C45083 + C45084) * C624) *
               C50765 * C51093 +
           ((C45082 + C45081) * C628 - (C45072 * C622 + C45071 * C627) +
            (C45084 + C45083) * C623 -
            (C31600 * C11541 + C50962 * C11542 + C31599 * C8876 +
             C31597 * C8878) *
                C629 -
            (C31600 * C11543 + C50962 * C11544 + C31599 * C8879 +
             C31597 * C8882) *
                C624) *
               C50765 * C25452) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C51101 +
            ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
                C51093 +
            ((C35105 + C35106) * C118 + (C35107 + C35108) * C50821) * C50765 *
                C25452) *
               C291 -
           ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
            (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
                C51101) *
               C292 +
           (C31658 * C50765 * C51101 +
            (C34691 * C118 + C34692 * C50821) * C50765 * C51093 +
            ((C32204 + C32205) * C118 + (C32206 + C32207) * C50821) * C50765 *
                C25452) *
               C293) *
              C51055 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C50765 *
                C51101 +
            (C36673 * C118 + C36674 * C50821) * C50765 * C51093 +
            ((C35482 + C35481) * C118 + (C35484 + C35483) * C50821) * C50765 *
                C25452) *
               C292 -
           (((C35479 + C35480) * C50821 + (C35477 + C35478) * C118) * C50765 *
                C25452 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C50765 *
                C51093 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C50765 * C51101) *
               C291 -
           (((C31600 * C3559 + C50962 * C3562 + C31599 * C894 + C31597 * C904) *
                 C50821 +
             (C31600 * C3553 + C50962 * C3558 + C31599 * C880 + C31597 * C893) *
                 C118) *
                C50765 * C25452 +
            ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C50765 *
                C51093 +
            C32037 * C50765 * C51101) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C118 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C51101 +
           ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
               C51093 +
           (C44811 * C118 + C44812 * C50821) * C50765 * C25452) *
              C50787 * C1232 -
          ((C45072 * C50821 + C45071 * C118) * C50765 * C25452 +
           ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C50765 *
               C51093 +
           ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                C50821 +
            (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                C118) *
               C50765 * C51101) *
              C50787 * C1233 +
          (((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
             C50962 * C1247) *
                C118 +
            (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
             C50962 * C1251) *
                C50821) *
               C50765 * C51101 +
           ((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C50765 *
               C51093 +
           ((C45386 + C45385) * C118 + (C45388 + C45387) * C50821) * C50765 *
               C25452) *
              C50787 * C1234 -
          (((C31600 * C13899 + C50962 * C13903 + C31599 * C9312 +
             C31597 * C9315) *
                C50821 +
            (C31600 * C13897 + C50962 * C13900 + C31599 * C9309 +
             C31597 * C9313) *
                C118) *
               C50765 * C25452 +
           ((C31600 * C13901 + C50962 * C13904 + C31599 * C3674 +
             C31597 * C3678) *
                C50821 +
            (C31600 * C13898 + C50962 * C13902 + C31599 * C3669 +
             C31597 * C3675) *
                C118) *
               C50765 * C51093 +
           ((C31600 * C6553 + C50962 * C6557 + C31599 * C1246 +
             C31597 * C1251) *
                C50821 +
            (C31600 * C6548 + C50962 * C6554 + C31599 * C1239 +
             C31597 * C1247) *
                C118) *
               C50765 * C51101) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C51101 +
            ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
                C51093 +
            (C44811 * C118 + C44812 * C50821) * C50765 * C25452) *
               C51098 -
           ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
            (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
                C51101) *
               C51084 +
           (C31658 * C50765 * C51101 +
            (C34691 * C118 + C34692 * C50821) * C50765 * C51093 +
            ((C32204 + C32205) * C118 + (C32206 + C32207) * C50821) * C50765 *
                C25452) *
               C1354) *
              C1765 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C50765 *
                C51101 +
            (C36673 * C118 + C36674 * C50821) * C50765 * C51093 +
            ((C35482 + C35481) * C118 + (C35484 + C35483) * C50821) * C50765 *
                C25452) *
               C51084 -
           ((C45072 * C50821 + C45071 * C118) * C50765 * C25452 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C50765 *
                C51093 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C50765 * C51101) *
               C51098 -
           (((C31600 * C3559 + C50962 * C3562 + C31599 * C894 + C31597 * C904) *
                 C50821 +
             (C31600 * C3553 + C50962 * C3558 + C31599 * C880 + C31597 * C893) *
                 C118) *
                C50765 * C25452 +
            ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C50765 *
                C51093 +
            C32037 * C50765 * C51101) *
               C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C50765 * C51101 +
            ((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                C50765 * C51093 +
            (C44811 * C294 + C44812 * C51053 - C44911 * C295 -
             C44912 * C50837) *
                C50765 * C25452) *
               C1480 +
           ((C34689 * C295 -
             ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
             C34690 * C50837) *
                C50765 * C51101 +
            (C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
             C35094 * C50837) *
                C50765 * C51093 +
            ((C35109 + C35110) * C295 - (C35096 * C51053 + C35095 * C294) +
             (C35111 + C35112) * C50837) *
                C50765 * C25452) *
               C50792) *
              C1765 +
          ((((C35473 + C35474) * C295 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C51053 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C294) +
             (C35475 + C35476) * C50837) *
                C50765 * C51101 +
            ((C35478 + C35477) * C295 -
             ((C35476 + C35475) * C51053 + (C35474 + C35473) * C294) +
             (C35480 + C35479) * C50837) *
                C50765 * C51093 +
            ((C45082 + C45081) * C295 - (C45072 * C51053 + C45071 * C294) +
             (C45084 + C45083) * C50837) *
                C50765 * C25452) *
               C1480 +
           (((C32021 + C32022) * C294 + (C32023 + C32024) * C51053 -
             C36676 * C295 - C36675 * C50837) *
                C50765 * C51101 +
            (C36673 * C294 + C36674 * C51053 - (C35481 + C35482) * C295 -
             (C35483 + C35484) * C50837) *
                C50765 * C51093 +
            ((C35482 + C35481) * C294 + (C35484 + C35483) * C51053 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C295 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C50837) *
                C50765 * C25452) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C51101 +
            ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
                C51093 +
            (C44811 * C118 + C44812 * C50821) * C50765 * C25452) *
               C1480 -
           ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
            (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
                C51101) *
               C50792) *
              C51100 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C50765 *
                C51101 +
            (C36673 * C118 + C36674 * C50821) * C50765 * C51093 +
            ((C35482 + C35481) * C118 + (C35484 + C35483) * C50821) * C50765 *
                C25452) *
               C50792 -
           ((C45072 * C50821 + C45071 * C118) * C50765 * C25452 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C50765 *
                C51093 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C50765 * C51101) *
               C1480) *
              C51090 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C118 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C50821) *
                C50765 * C51101 +
            ((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C50765 *
                C51093 +
            ((C45386 + C45385) * C118 + (C45388 + C45387) * C50821) * C50765 *
                C25452) *
               C1480 -
           (((C31600 * C9310 + C50962 * C9314 + C31599 * C3557 +
              C31597 * C3561) *
                 C50821 +
             (C31600 * C9308 + C50962 * C9311 + C31599 * C3552 +
              C31597 * C3556) *
                 C118) *
                C50765 * C25452 +
            ((C35690 + C35689) * C50821 + (C35688 + C35687) * C118) * C50765 *
                C51093 +
            ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C50765 *
                C51101) *
               C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C118 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C51101 +
           ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
               C51093 +
           ((C35105 + C35106) * C118 + (C35107 + C35108) * C50821) * C50765 *
               C25452) *
              C112 -
          ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
           (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
           ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
               C51101) *
              C113 +
          (C31658 * C50765 * C51101 +
           (C34691 * C118 + C34692 * C50821) * C50765 * C51093 +
           ((C32204 + C32205) * C118 + (C32206 + C32207) * C50821) * C50765 *
               C25452) *
              C114 -
          (((C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                C50821 +
            (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                C118) *
               C50765 * C25452 +
           ((C31844 + C31843) * C50821 + (C31842 + C31841) * C118) * C50765 *
               C51093 +
           C31659 * C50765 * C51101) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
            C44811 * C629 + C44812 * C624) *
               C50765 * C51101 +
           ((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
            (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
            (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
               C50765 * C51093 +
           (C44811 * C627 + C44812 * C622 - (C35251 + C35252) * C628 -
            (C35253 + C35254) * C623 +
            (C31599 * C3043 + C31597 * C3046 + C31600 * C8876 +
             C50962 * C8878) *
                C629 +
            (C31599 * C3047 + C31597 * C3052 + C31600 * C8879 +
             C50962 * C8882) *
                C624) *
               C50765 * C25452) *
              C51046 +
          ((C34689 * C628 -
            ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
            C34690 * C623 - C35095 * C629 - C35096 * C624) *
               C50765 * C51101 +
           (C35093 * C628 - (C34688 * C622 + C34687 * C627) + C35094 * C623 -
            (C35110 + C35109) * C629 - (C35112 + C35111) * C624) *
               C50765 * C51093 +
           ((C35109 + C35110) * C628 - (C35096 * C622 + C35095 * C627) +
            (C35111 + C35112) * C623 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C629 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C624) *
               C50765 * C25452) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C294 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51053 -
            (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
               C50765 * C51101 +
           ((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
            (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
               C50765 * C51093 +
           ((C35105 + C35106) * C294 + (C35107 + C35108) * C51053 -
            (C35251 + C35252) * C295 - (C35253 + C35254) * C50837) *
               C50765 * C25452) *
              C291 +
          ((C34689 * C295 -
            ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
            C34690 * C50837) *
               C50765 * C51101 +
           (C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
            C35094 * C50837) *
               C50765 * C51093 +
           ((C35109 + C35110) * C295 - (C35096 * C51053 + C35095 * C294) +
            (C35111 + C35112) * C50837) *
               C50765 * C25452) *
              C292 +
          (C31850 * C50765 * C51101 +
           (C34691 * C294 + C34692 * C51053 - (C32205 + C32204) * C295 -
            (C32207 + C32206) * C50837) *
               C50765 * C51093 +
           ((C32204 + C32205) * C294 + (C32206 + C32207) * C51053 -
            (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                C295 -
            (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                C50837) *
               C50765 * C25452) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
               C757 +
           (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
               C752 -
           (C34693 + C34694) * C758 - (C34695 + C34696) * C753 + C44811 * C759 +
           C44812 * C754 - C44911 * C760 - C44912 * C755) *
              C50765 * C51101 +
          ((C34694 + C34693) * C757 + (C34696 + C34695) * C752 -
           (C35106 + C35105) * C758 - (C35108 + C35107) * C753 +
           (C35252 + C35251) * C759 + (C35254 + C35253) * C754 -
           (C44921 + C44922) * C760 - (C44923 + C44924) * C755) *
              C50765 * C51093 +
          (C44811 * C757 + C44812 * C752 - C44911 * C758 - C44912 * C753 +
           (C44922 + C44921) * C759 + (C44924 + C44923) * C754 -
           (C31600 * C11335 + C50962 * C11336 + C31599 * C8716 +
            C31597 * C8718) *
               C760 -
           (C31600 * C11337 + C50962 * C11338 + C31599 * C8719 +
            C31597 * C8722) *
               C755) *
              C50765 * C25452) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C51101 +
            ((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C50765 *
                C51093 +
            ((C35105 + C35106) * C118 + (C35107 + C35108) * C50821) * C50765 *
                C25452) *
               C291 -
           ((C35096 * C50821 + C35095 * C118) * C50765 * C25452 +
            (C34688 * C50821 + C34687 * C118) * C50765 * C51093 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C50765 *
                C51101) *
               C292 +
           (C31658 * C50765 * C51101 +
            (C34691 * C118 + C34692 * C50821) * C50765 * C51093 +
            ((C32204 + C32205) * C118 + (C32206 + C32207) * C50821) * C50765 *
                C25452) *
               C293) *
              C51055 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C50765 *
                C51101 +
            (C36673 * C118 + C36674 * C50821) * C50765 * C51093 +
            ((C35482 + C35481) * C118 + (C35484 + C35483) * C50821) * C50765 *
                C25452) *
               C292 -
           (((C35479 + C35480) * C50821 + (C35477 + C35478) * C118) * C50765 *
                C25452 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C50765 *
                C51093 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C50765 * C51101) *
               C291 -
           (((C31600 * C3559 + C50962 * C3562 + C31599 * C894 + C31597 * C904) *
                 C50821 +
             (C31600 * C3553 + C50962 * C3558 + C31599 * C880 + C31597 * C893) *
                 C118) *
                C50765 * C25452 +
            ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C50765 *
                C51093 +
            C32037 * C50765 * C51101) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
            C44811 * C629 + C44812 * C624) *
               C50765 * C51101 +
           ((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
            (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
            (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
               C50765 * C51093 +
           (C44811 * C627 + C44812 * C622 - C44911 * C628 - C44912 * C623 +
            (C44922 + C44921) * C629 + (C44924 + C44923) * C624) *
               C50765 * C25452) *
              C50787 * C51055 +
          (((C35473 + C35474) * C628 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C622 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C627) +
            (C35475 + C35476) * C623 - C45071 * C629 - C45072 * C624) *
               C50765 * C51101 +
           ((C35478 + C35477) * C628 -
            ((C35476 + C35475) * C622 + (C35474 + C35473) * C627) +
            (C35480 + C35479) * C623 - (C45081 + C45082) * C629 -
            (C45083 + C45084) * C624) *
               C50765 * C51093 +
           ((C45082 + C45081) * C628 - (C45072 * C622 + C45071 * C627) +
            (C45084 + C45083) * C623 -
            (C31600 * C11541 + C50962 * C11542 + C31599 * C8876 +
             C31597 * C8878) *
                C629 -
            (C31600 * C11543 + C50962 * C11544 + C31599 * C8879 +
             C31597 * C8882) *
                C624) *
               C50765 * C25452) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C1355 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C1350 -
                    (C47201 + C47202 + C47203) * C1356 -
                    (C47204 + C47205 + C47206) * C50837) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C1355 +
                    (C47206 + C47205 + C47204) * C1350 -
                    (C47513 + C47512 + C47511) * C1356 -
                    (C47516 + C47515 + C47514) * C50837) *
                       C50765 * C50938) *
                      C51098 +
                  (((C38299 + C38298 + C38297) * C1356 -
                    ((C38114 + C38113 + C38112) * C1350 +
                     (C38111 + C38110 + C38109) * C1355) +
                    (C38302 + C38301 + C38300) * C50837) *
                       C50765 * C22818 +
                   ((C38649 + C38650 + C38651) * C1356 -
                    ((C38300 + C38301 + C38302) * C1350 +
                     (C38297 + C38298 + C38299) * C1355) +
                    (C38652 + C38653 + C38654) * C50837) *
                       C50765 * C50938) *
                      C51084 +
                  (((C38120 + C38119 + C38118) * C1355 +
                    (C38117 + C38116 + C38115) * C1350 -
                    (C38305 + C38304 + C38303) * C1356 -
                    (C38308 + C38307 + C38306) * C50837) *
                       C50765 * C22818 +
                   ((C38303 + C38304 + C38305) * C1355 +
                    (C38306 + C38307 + C38308) * C1350 -
                    (C38071 * C3553 + C38068 * C3558 + C38070 * C880 +
                     C51096 * C893 + C38069 * C632 + C51102 * C639) *
                        C1356 -
                    (C38071 * C3559 + C38068 * C3562 + C38070 * C894 +
                     C51096 * C904 + C38069 * C640 + C51102 * C647) *
                        C50837) *
                       C50765 * C50938) *
                      C1354) *
                 C50851) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C1482 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C51099 -
                    (C47201 + C47202 + C47203) * C1483 -
                    (C47204 + C47205 + C47206) * C51087 +
                    (C47511 + C47512 + C47513) * C1484 +
                    (C47514 + C47515 + C47516) * C1479) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C1482 +
                    (C47206 + C47205 + C47204) * C51099 -
                    (C47513 + C47512 + C47511) * C1483 -
                    (C47516 + C47515 + C47514) * C51087 +
                    (C47629 + C47628 + C47627) * C1484 +
                    (C47632 + C47631 + C47630) * C1479) *
                       C50765 * C50938) *
                      C1480 +
                  (((C38299 + C38298 + C38297) * C1483 -
                    ((C38114 + C38113 + C38112) * C51099 +
                     (C38111 + C38110 + C38109) * C1482) +
                    (C38302 + C38301 + C38300) * C51087 -
                    (C38651 + C38650 + C38649) * C1484 -
                    (C38654 + C38653 + C38652) * C1479) *
                       C50765 * C22818 +
                   ((C38649 + C38650 + C38651) * C1483 -
                    ((C38300 + C38301 + C38302) * C51099 +
                     (C38297 + C38298 + C38299) * C1482) +
                    (C38652 + C38653 + C38654) * C51087 -
                    (C38071 * C9197 + C38068 * C9200 + C38070 * C3208 +
                     C51096 * C3212 + C38069 * C762 + C51102 * C767) *
                        C1484 -
                    (C38071 * C9201 + C38068 * C9203 + C38070 * C3213 +
                     C51096 * C3217 + C38069 * C768 + C51102 * C774) *
                        C1479) *
                       C50765 * C50938) *
                      C50792) *
                 C50851) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C1355 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C1350 -
                     (C47201 + C47202 + C47203) * C1356 -
                     (C47204 + C47205 + C47206) * C50837) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C1355 +
                     (C47206 + C47205 + C47204) * C1350 -
                     (C47513 + C47512 + C47511) * C1356 -
                     (C47516 + C47515 + C47514) * C50837) *
                        C50765 * C50938) *
                       C1480 +
                   (((C38299 + C38298 + C38297) * C1356 -
                     ((C38114 + C38113 + C38112) * C1350 +
                      (C38111 + C38110 + C38109) * C1355) +
                     (C38302 + C38301 + C38300) * C50837) *
                        C50765 * C22818 +
                    ((C38649 + C38650 + C38651) * C1356 -
                     ((C38300 + C38301 + C38302) * C1350 +
                      (C38297 + C38298 + C38299) * C1355) +
                     (C38652 + C38653 + C38654) * C50837) *
                        C50765 * C50938) *
                       C50792) *
                      C51055 +
                  ((((C47803 + C47804 + C47805) * C1356 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C1350 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C1355) +
                     (C47806 + C47807 + C47808) * C50837) *
                        C50765 * C22818 +
                    ((C47811 + C47810 + C47809) * C1356 -
                     ((C47808 + C47807 + C47806) * C1350 +
                      (C47805 + C47804 + C47803) * C1355) +
                     (C47814 + C47813 + C47812) * C50837) *
                        C50765 * C50938) *
                       C1480 +
                   (((C38479 + C38480 + C38481) * C1355 +
                     (C38482 + C38483 + C38484) * C1350 -
                     (C39807 + C39806 + C39805) * C1356 -
                     (C39810 + C39809 + C39808) * C50837) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C1355 +
                     (C39808 + C39809 + C39810) * C1350 -
                     (C38071 * C9308 + C38068 * C9311 + C38070 * C3552 +
                      C51096 * C3556 + C38069 * C878 + C51102 * C889) *
                         C1356 -
                     (C38071 * C9310 + C38068 * C9314 + C38070 * C3557 +
                      C51096 * C3561 + C38069 * C890 + C51102 * C902) *
                         C50837) *
                        C50765 * C50938) *
                       C50792) *
                      C50863)) /
                (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C1355 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C1350 -
                     (C47201 + C47202 + C47203) * C1356 -
                     (C47204 + C47205 + C47206) * C50837) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C1355 +
                     (C47206 + C47205 + C47204) * C1350 -
                     (C47513 + C47512 + C47511) * C1356 -
                     (C47516 + C47515 + C47514) * C50837) *
                        C50765 * C50938) *
                       C51046 +
                   (((C38299 + C38298 + C38297) * C1356 -
                     ((C38114 + C38113 + C38112) * C1350 +
                      (C38111 + C38110 + C38109) * C1355) +
                     (C38302 + C38301 + C38300) * C50837) *
                        C50765 * C22818 +
                    ((C38649 + C38650 + C38651) * C1356 -
                     ((C38300 + C38301 + C38302) * C1350 +
                      (C38297 + C38298 + C38299) * C1355) +
                     (C38652 + C38653 + C38654) * C50837) *
                        C50765 * C50938) *
                       C50792) *
                      C1765 +
                  ((((C47803 + C47804 + C47805) * C1356 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C1350 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C1355) +
                     (C47806 + C47807 + C47808) * C50837) *
                        C50765 * C22818 +
                    ((C47811 + C47810 + C47809) * C1356 -
                     ((C47808 + C47807 + C47806) * C1350 +
                      (C47805 + C47804 + C47803) * C1355) +
                     (C47814 + C47813 + C47812) * C50837) *
                        C50765 * C50938) *
                       C51046 +
                   (((C38479 + C38480 + C38481) * C1355 +
                     (C38482 + C38483 + C38484) * C1350 -
                     (C39807 + C39806 + C39805) * C1356 -
                     (C39810 + C39809 + C39808) * C50837) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C1355 +
                     (C39808 + C39809 + C39810) * C1350 -
                     (C38071 * C9308 + C38068 * C9311 + C38070 * C3552 +
                      C51096 * C3556 + C38069 * C878 + C51102 * C889) *
                         C1356 -
                     (C38071 * C9310 + C38068 * C9314 + C38070 * C3557 +
                      C51096 * C3561 + C38069 * C890 + C51102 * C902) *
                         C50837) *
                        C50765 * C50938) *
                       C50792) *
                      C50863)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C1482 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C51099 -
                    (C47201 + C47202 + C47203) * C1483 -
                    (C47204 + C47205 + C47206) * C51087 +
                    (C47511 + C47512 + C47513) * C1484 +
                    (C47514 + C47515 + C47516) * C1479) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C1482 +
                    (C47206 + C47205 + C47204) * C51099 -
                    (C47513 + C47512 + C47511) * C1483 -
                    (C47516 + C47515 + C47514) * C51087 +
                    (C47629 + C47628 + C47627) * C1484 +
                    (C47632 + C47631 + C47630) * C1479) *
                       C50765 * C50938) *
                      C50787 * C1765 +
                  (((C47803 + C47804 + C47805) * C1483 -
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C51099 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C1482) +
                    (C47806 + C47807 + C47808) * C51087 -
                    (C47809 + C47810 + C47811) * C1484 -
                    (C47812 + C47813 + C47814) * C1479) *
                       C50765 * C22818 +
                   ((C47811 + C47810 + C47809) * C1483 -
                    ((C47808 + C47807 + C47806) * C51099 +
                     (C47805 + C47804 + C47803) * C1482) +
                    (C47814 + C47813 + C47812) * C51087 -
                    (C38071 * C11617 + C38068 * C11619 + C38070 * C9196 +
                     C51096 * C9198 + C38069 * C3207 + C51102 * C3210) *
                        C1484 -
                    (C38071 * C11618 + C38068 * C11620 + C38070 * C9199 +
                     C51096 * C9202 + C38069 * C3211 + C51102 * C3216) *
                        C1479) *
                       C50765 * C50938) *
                      C50787 * C50863)) /
                (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C1355 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C1350 -
                    (C47201 + C47202 + C47203) * C1356 -
                    (C47204 + C47205 + C47206) * C50837) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C1355 +
                    (C47206 + C47205 + C47204) * C1350 -
                    (C47513 + C47512 + C47511) * C1356 -
                    (C47516 + C47515 + C47514) * C50837) *
                       C50765 * C50938) *
                      C50787 * C51100 +
                  (((C47803 + C47804 + C47805) * C1356 -
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C1350 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C1355) +
                    (C47806 + C47807 + C47808) * C50837) *
                       C50765 * C22818 +
                   ((C47811 + C47810 + C47809) * C1356 -
                    ((C47808 + C47807 + C47806) * C1350 +
                     (C47805 + C47804 + C47803) * C1355) +
                    (C47814 + C47813 + C47812) * C50837) *
                       C50765 * C50938) *
                      C50787 * C51090 +
                  (((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                     C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                        C1355 +
                    (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                     C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                        C1350 -
                    (C48119 + C48120 + C48121) * C1356 -
                    (C48122 + C48123 + C48124) * C50837) *
                       C50765 * C22818 +
                   ((C48121 + C48120 + C48119) * C1355 +
                    (C48124 + C48123 + C48122) * C1350 -
                    (C38071 * C13897 + C38068 * C13900 + C38070 * C9309 +
                     C51096 * C9313 + C38069 * C3551 + C51102 * C3554) *
                        C1356 -
                    (C38071 * C13899 + C38068 * C13903 + C38070 * C9312 +
                     C51096 * C9315 + C38069 * C3555 + C51102 * C3560) *
                        C50837) *
                       C50765 * C50938) *
                      C50787 * C2009)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C627 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C622 -
                    (C47201 + C47202 + C47203) * C628 -
                    (C47204 + C47205 + C47206) * C623 +
                    (C47511 + C47512 + C47513) * C629 +
                    (C47514 + C47515 + C47516) * C624) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C627 +
                    (C47206 + C47205 + C47204) * C622 -
                    (C47513 + C47512 + C47511) * C628 -
                    (C47516 + C47515 + C47514) * C623 +
                    (C38069 * C761 + C51102 * C765 + C38070 * C3207 +
                     C51096 * C3210 + C38071 * C9196 + C38068 * C9198) *
                        C629 +
                    (C38069 * C766 + C51102 * C773 + C38070 * C3211 +
                     C51096 * C3216 + C38071 * C9199 + C38068 * C9202) *
                        C624) *
                       C50765 * C50938) *
                      C51046 +
                  (((C38299 + C38298 + C38297) * C628 -
                    ((C38114 + C38113 + C38112) * C622 +
                     (C38111 + C38110 + C38109) * C627) +
                    (C38302 + C38301 + C38300) * C623 -
                    (C38651 + C38650 + C38649) * C629 -
                    (C38654 + C38653 + C38652) * C624) *
                       C50765 * C22818 +
                   ((C38649 + C38650 + C38651) * C628 -
                    ((C38300 + C38301 + C38302) * C622 +
                     (C38297 + C38298 + C38299) * C627) +
                    (C38652 + C38653 + C38654) * C623 -
                    (C38071 * C9197 + C38068 * C9200 + C38070 * C3208 +
                     C51096 * C3212 + C38069 * C762 + C51102 * C767) *
                        C629 -
                    (C38071 * C9201 + C38068 * C9203 + C38070 * C3213 +
                     C51096 * C3217 + C38069 * C768 + C51102 * C774) *
                        C624) *
                       C50765 * C50938) *
                      C50792) *
                 C50851) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C118 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C50821) *
                       C50765 * C22818 +
                   ((C38069 * C296 + C51102 * C302 + C38070 * C875 +
                     C51096 * C883 + C38071 * C1150 + C38068 * C1154) *
                        C118 +
                    (C38069 * C303 + C51102 * C314 + C38070 * C884 +
                     C51096 * C899 + C38071 * C1155 + C38068 * C1162) *
                        C50821) *
                       C50765 * C50938) *
                      C112 -
                  (((C38300 + C38301 + C38302) * C50821 +
                    (C38297 + C38298 + C38299) * C118) *
                       C50765 * C50938 +
                   ((C38114 + C38113 + C38112) * C50821 +
                    (C38111 + C38110 + C38109) * C118) *
                       C50765 * C22818) *
                      C113 +
                  (((C38120 + C38119 + C38118) * C118 +
                    (C38117 + C38116 + C38115) * C50821) *
                       C50765 * C22818 +
                   ((C38303 + C38304 + C38305) * C118 +
                    (C38306 + C38307 + C38308) * C50821) *
                       C50765 * C50938) *
                      C114 -
                  (((C38071 * C1161 + C38068 * C1165 + C38070 * C896 +
                     C51096 * C905 + C38069 * C309 + C51102 * C317) *
                        C50821 +
                    (C38071 * C1153 + C38068 * C1160 + C38070 * C881 +
                     C51096 * C895 + C38069 * C299 + C51102 * C308) *
                        C118) *
                       C50765 * C50938 +
                   ((C38126 + C38125 + C38124) * C50821 +
                    (C38123 + C38122 + C38121) * C118) *
                       C50765 * C22818) *
                      C115) *
                 C50851) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C118 +
                     (C47206 + C47205 + C47204) * C50821) *
                        C50765 * C50938) *
                       C51046 -
                   (((C38300 + C38301 + C38302) * C50821 +
                     (C38297 + C38298 + C38299) * C118) *
                        C50765 * C50938 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C50765 * C22818) *
                       C50792) *
                      C1005 +
                  ((((C38479 + C38480 + C38481) * C118 +
                     (C38482 + C38483 + C38484) * C50821) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C118 +
                     (C39808 + C39809 + C39810) * C50821) *
                        C50765 * C50938) *
                       C50792 -
                   (((C47808 + C47807 + C47806) * C50821 +
                     (C47805 + C47804 + C47803) * C118) *
                        C50765 * C50938 +
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C50821 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C118) *
                        C50765 * C22818) *
                       C51046) *
                      C1006 +
                  ((((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                      C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                         C118 +
                     (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                      C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                         C50821) *
                        C50765 * C22818 +
                    ((C38069 * C1150 + C51102 * C1154 + C38070 * C3669 +
                      C51096 * C3675 + C38071 * C13898 + C38068 * C13902) *
                         C118 +
                     (C38069 * C1155 + C51102 * C1162 + C38070 * C3674 +
                      C51096 * C3678 + C38071 * C13901 + C38068 * C13904) *
                         C50821) *
                        C50765 * C50938) *
                       C51046 -
                   (((C38071 * C16617 + C38068 * C16618 + C38070 * C3672 +
                      C51096 * C3677 + C38069 * C1157 + C51102 * C1163) *
                         C50821 +
                     (C38071 * C16615 + C38068 * C16616 + C38070 * C3668 +
                      C51096 * C3673 + C38069 * C1151 + C51102 * C1156) *
                         C118) *
                        C50765 * C50938 +
                    ((C39062 + C39061 + C39060) * C50821 +
                     (C39059 + C39058 + C39057) * C118) *
                        C50765 * C22818) *
                       C50792) *
                      C1007)) /
                    (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                    C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                       C757 +
                   (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                    C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                       C752 -
                   (C47201 + C47202 + C47203) * C758 -
                   (C47204 + C47205 + C47206) * C753 +
                   (C47511 + C47512 + C47513) * C759 +
                   (C47514 + C47515 + C47516) * C754 -
                   (C47627 + C47628 + C47629) * C760 -
                   (C47630 + C47631 + C47632) * C755) *
                      C50765 * C22818 +
                  ((C47203 + C47202 + C47201) * C757 +
                   (C47206 + C47205 + C47204) * C752 -
                   (C47513 + C47512 + C47511) * C758 -
                   (C47516 + C47515 + C47514) * C753 +
                   (C47629 + C47628 + C47627) * C759 +
                   (C47632 + C47631 + C47630) * C754 -
                   (C38071 * C11541 + C38068 * C11542 + C38070 * C8876 +
                    C51096 * C8878 + C38069 * C3043 + C51102 * C3046) *
                       C760 -
                   (C38071 * C11543 + C38068 * C11544 + C38070 * C8879 +
                    C51096 * C8882 + C38069 * C3047 + C51102 * C3052) *
                       C755) *
                      C50765 * C50938) *
                 C50787 * C50851) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C294 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C51053 -
                    (C47201 + C47202 + C47203) * C295 -
                    (C47204 + C47205 + C47206) * C50837) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C294 +
                    (C47206 + C47205 + C47204) * C51053 -
                    (C38071 * C3551 + C38068 * C3554 + C38070 * C876 +
                     C51096 * C885 + C38069 * C630 + C51102 * C635) *
                        C295 -
                    (C38071 * C3555 + C38068 * C3560 + C38070 * C886 +
                     C51096 * C900 + C38069 * C636 + C51102 * C645) *
                        C50837) *
                       C50765 * C50938) *
                      C291 +
                  (((C38299 + C38298 + C38297) * C295 -
                    ((C38114 + C38113 + C38112) * C51053 +
                     (C38111 + C38110 + C38109) * C294) +
                    (C38302 + C38301 + C38300) * C50837) *
                       C50765 * C22818 +
                   ((C38649 + C38650 + C38651) * C295 -
                    ((C38300 + C38301 + C38302) * C51053 +
                     (C38297 + C38298 + C38299) * C294) +
                    (C38652 + C38653 + C38654) * C50837) *
                       C50765 * C50938) *
                      C292 +
                  (((C38120 + C38119 + C38118) * C294 +
                    (C38117 + C38116 + C38115) * C51053 -
                    (C38305 + C38304 + C38303) * C295 -
                    (C38308 + C38307 + C38306) * C50837) *
                       C50765 * C22818 +
                   ((C38303 + C38304 + C38305) * C294 +
                    (C38306 + C38307 + C38308) * C51053 -
                    (C38071 * C3553 + C38068 * C3558 + C38070 * C880 +
                     C51096 * C893 + C38069 * C632 + C51102 * C639) *
                        C295 -
                    (C38071 * C3559 + C38068 * C3562 + C38070 * C894 +
                     C51096 * C904 + C38069 * C640 + C51102 * C647) *
                        C50837) *
                       C50765 * C50938) *
                      C293) *
                 C50851) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C294 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C51053 -
                    (C47201 + C47202 + C47203) * C295 -
                    (C47204 + C47205 + C47206) * C50837) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C294 +
                    (C47206 + C47205 + C47204) * C51053 -
                    (C47513 + C47512 + C47511) * C295 -
                    (C47516 + C47515 + C47514) * C50837) *
                       C50765 * C50938) *
                      C50787 * C1005 +
                  (((C47803 + C47804 + C47805) * C295 -
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C51053 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C294) +
                    (C47806 + C47807 + C47808) * C50837) *
                       C50765 * C22818 +
                   ((C47811 + C47810 + C47809) * C295 -
                    ((C47808 + C47807 + C47806) * C51053 +
                     (C47805 + C47804 + C47803) * C294) +
                    (C47814 + C47813 + C47812) * C50837) *
                       C50765 * C50938) *
                      C50787 * C1006 +
                  (((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                     C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                        C294 +
                    (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                     C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                        C51053 -
                    (C48119 + C48120 + C48121) * C295 -
                    (C48122 + C48123 + C48124) * C50837) *
                       C50765 * C22818 +
                   ((C48121 + C48120 + C48119) * C294 +
                    (C48124 + C48123 + C48122) * C51053 -
                    (C38071 * C13897 + C38068 * C13900 + C38070 * C9309 +
                     C51096 * C9313 + C38069 * C3551 + C51102 * C3554) *
                        C295 -
                    (C38071 * C13899 + C38068 * C13903 + C38070 * C9312 +
                     C51096 * C9315 + C38069 * C3555 + C51102 * C3560) *
                        C50837) *
                       C50765 * C50938) *
                      C50787 * C1007)) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C627 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C622 -
                    (C47201 + C47202 + C47203) * C628 -
                    (C47204 + C47205 + C47206) * C623 +
                    (C47511 + C47512 + C47513) * C629 +
                    (C47514 + C47515 + C47516) * C624) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C627 +
                    (C47206 + C47205 + C47204) * C622 -
                    (C47513 + C47512 + C47511) * C628 -
                    (C47516 + C47515 + C47514) * C623 +
                    (C47629 + C47628 + C47627) * C629 +
                    (C47632 + C47631 + C47630) * C624) *
                       C50765 * C50938) *
                      C50787 * C51055 +
                  (((C47803 + C47804 + C47805) * C628 -
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C622 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C627) +
                    (C47806 + C47807 + C47808) * C623 -
                    (C47809 + C47810 + C47811) * C629 -
                    (C47812 + C47813 + C47814) * C624) *
                       C50765 * C22818 +
                   ((C47811 + C47810 + C47809) * C628 -
                    ((C47808 + C47807 + C47806) * C622 +
                     (C47805 + C47804 + C47803) * C627) +
                    (C47814 + C47813 + C47812) * C623 -
                    (C38071 * C11617 + C38068 * C11619 + C38070 * C9196 +
                     C51096 * C9198 + C38069 * C3207 + C51102 * C3210) *
                        C629 -
                    (C38071 * C11618 + C38068 * C11620 + C38070 * C9199 +
                     C51096 * C9202 + C38069 * C3211 + C51102 * C3216) *
                        C624) *
                       C50765 * C50938) *
                      C50787 * C50863)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C118 +
                     (C47206 + C47205 + C47204) * C50821) *
                        C50765 * C50938) *
                       C291 -
                   (((C38300 + C38301 + C38302) * C50821 +
                     (C38297 + C38298 + C38299) * C118) *
                        C50765 * C50938 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C50765 * C22818) *
                       C292 +
                   (((C38120 + C38119 + C38118) * C118 +
                     (C38117 + C38116 + C38115) * C50821) *
                        C50765 * C22818 +
                    ((C38303 + C38304 + C38305) * C118 +
                     (C38306 + C38307 + C38308) * C50821) *
                        C50765 * C50938) *
                       C293) *
                      C51055 +
                  ((((C38479 + C38480 + C38481) * C118 +
                     (C38482 + C38483 + C38484) * C50821) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C118 +
                     (C39808 + C39809 + C39810) * C50821) *
                        C50765 * C50938) *
                       C292 -
                   (((C38071 * C3674 + C38068 * C3678 + C38070 * C1155 +
                      C51096 * C1162 + C38069 * C884 + C51102 * C899) *
                         C50821 +
                     (C38071 * C3669 + C38068 * C3675 + C38070 * C1150 +
                      C51096 * C1154 + C38069 * C875 + C51102 * C883) *
                         C118) *
                        C50765 * C50938 +
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C50821 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C118) *
                        C50765 * C22818) *
                       C291 -
                   (((C38071 * C3670 + C38068 * C3676 + C38070 * C1159 +
                      C51096 * C1164 + C38069 * C892 + C51102 * C903) *
                         C50821 +
                     (C38071 * C3667 + C38068 * C3671 + C38070 * C1152 +
                      C51096 * C1158 + C38069 * C879 + C51102 * C891) *
                         C118) *
                        C50765 * C50938 +
                    ((C38490 + C38489 + C38488) * C50821 +
                     (C38487 + C38486 + C38485) * C118) *
                        C50765 * C22818) *
                       C293) *
                      C50863)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C118 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C50821) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C118 +
                    (C47206 + C47205 + C47204) * C50821) *
                       C50765 * C50938) *
                      C50787 * C1232 -
                  (((C47808 + C47807 + C47806) * C50821 +
                    (C47805 + C47804 + C47803) * C118) *
                       C50765 * C50938 +
                   ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                     C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                        C50821 +
                    (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                     C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                        C118) *
                       C50765 * C22818) *
                      C50787 * C1233 +
                  (((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                     C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                        C118 +
                    (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                     C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                        C50821) *
                       C50765 * C22818 +
                   ((C48121 + C48120 + C48119) * C118 +
                    (C48124 + C48123 + C48122) * C50821) *
                       C50765 * C50938) *
                      C50787 * C1234 -
                  (((C38071 * C19480 + C38068 * C19482 + C38070 * C13901 +
                     C51096 * C13904 + C38069 * C3674 + C51102 * C3678) *
                        C50821 +
                    (C38071 * C19479 + C38068 * C19481 + C38070 * C13898 +
                     C51096 * C13902 + C38069 * C3669 + C51102 * C3675) *
                        C118) *
                       C50765 * C50938 +
                   ((C38071 * C16721 + C38068 * C16724 + C38070 * C6553 +
                     C51096 * C6557 + C38069 * C1246 + C51102 * C1251) *
                        C50821 +
                    (C38071 * C16718 + C38068 * C16722 + C38070 * C6548 +
                     C51096 * C6554 + C38069 * C1239 + C51102 * C1247) *
                        C118) *
                       C50765 * C22818) *
                      C50787 * C1235)) /
                    (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C118 +
                     (C47206 + C47205 + C47204) * C50821) *
                        C50765 * C50938) *
                       C51098 -
                   (((C38300 + C38301 + C38302) * C50821 +
                     (C38297 + C38298 + C38299) * C118) *
                        C50765 * C50938 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C50765 * C22818) *
                       C51084 +
                   (((C38120 + C38119 + C38118) * C118 +
                     (C38117 + C38116 + C38115) * C50821) *
                        C50765 * C22818 +
                    ((C38303 + C38304 + C38305) * C118 +
                     (C38306 + C38307 + C38308) * C50821) *
                        C50765 * C50938) *
                       C1354) *
                      C1765 +
                  ((((C38479 + C38480 + C38481) * C118 +
                     (C38482 + C38483 + C38484) * C50821) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C118 +
                     (C39808 + C39809 + C39810) * C50821) *
                        C50765 * C50938) *
                       C51084 -
                   (((C47808 + C47807 + C47806) * C50821 +
                     (C47805 + C47804 + C47803) * C118) *
                        C50765 * C50938 +
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C50821 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C118) *
                        C50765 * C22818) *
                       C51098 -
                   (((C38071 * C3670 + C38068 * C3676 + C38070 * C1159 +
                      C51096 * C1164 + C38069 * C892 + C51102 * C903) *
                         C50821 +
                     (C38071 * C3667 + C38068 * C3671 + C38070 * C1152 +
                      C51096 * C1158 + C38069 * C879 + C51102 * C891) *
                         C118) *
                        C50765 * C50938 +
                    ((C38490 + C38489 + C38488) * C50821 +
                     (C38487 + C38486 + C38485) * C118) *
                        C50765 * C22818) *
                       C1354) *
                      C50863)) /
                (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C294 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C51053 -
                     (C47201 + C47202 + C47203) * C295 -
                     (C47204 + C47205 + C47206) * C50837) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C294 +
                     (C47206 + C47205 + C47204) * C51053 -
                     (C47513 + C47512 + C47511) * C295 -
                     (C47516 + C47515 + C47514) * C50837) *
                        C50765 * C50938) *
                       C1480 +
                   (((C38299 + C38298 + C38297) * C295 -
                     ((C38114 + C38113 + C38112) * C51053 +
                      (C38111 + C38110 + C38109) * C294) +
                     (C38302 + C38301 + C38300) * C50837) *
                        C50765 * C22818 +
                    ((C38649 + C38650 + C38651) * C295 -
                     ((C38300 + C38301 + C38302) * C51053 +
                      (C38297 + C38298 + C38299) * C294) +
                     (C38652 + C38653 + C38654) * C50837) *
                        C50765 * C50938) *
                       C50792) *
                      C1765 +
                  ((((C47803 + C47804 + C47805) * C295 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C51053 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C294) +
                     (C47806 + C47807 + C47808) * C50837) *
                        C50765 * C22818 +
                    ((C47811 + C47810 + C47809) * C295 -
                     ((C47808 + C47807 + C47806) * C51053 +
                      (C47805 + C47804 + C47803) * C294) +
                     (C47814 + C47813 + C47812) * C50837) *
                        C50765 * C50938) *
                       C1480 +
                   (((C38479 + C38480 + C38481) * C294 +
                     (C38482 + C38483 + C38484) * C51053 -
                     (C39807 + C39806 + C39805) * C295 -
                     (C39810 + C39809 + C39808) * C50837) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C294 +
                     (C39808 + C39809 + C39810) * C51053 -
                     (C38071 * C9308 + C38068 * C9311 + C38070 * C3552 +
                      C51096 * C3556 + C38069 * C878 + C51102 * C889) *
                         C295 -
                     (C38071 * C9310 + C38068 * C9314 + C38070 * C3557 +
                      C51096 * C3561 + C38069 * C890 + C51102 * C902) *
                         C50837) *
                        C50765 * C50938) *
                       C50792) *
                      C50863)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C118 +
                     (C47206 + C47205 + C47204) * C50821) *
                        C50765 * C50938) *
                       C1480 -
                   (((C38300 + C38301 + C38302) * C50821 +
                     (C38297 + C38298 + C38299) * C118) *
                        C50765 * C50938 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C50765 * C22818) *
                       C50792) *
                      C51100 +
                  ((((C38479 + C38480 + C38481) * C118 +
                     (C38482 + C38483 + C38484) * C50821) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C118 +
                     (C39808 + C39809 + C39810) * C50821) *
                        C50765 * C50938) *
                       C50792 -
                   (((C47808 + C47807 + C47806) * C50821 +
                     (C47805 + C47804 + C47803) * C118) *
                        C50765 * C50938 +
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C50821 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C118) *
                        C50765 * C22818) *
                       C1480) *
                      C51090 +
                  ((((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                      C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                         C118 +
                     (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                      C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                         C50821) *
                        C50765 * C22818 +
                    ((C48121 + C48120 + C48119) * C118 +
                     (C48124 + C48123 + C48122) * C50821) *
                        C50765 * C50938) *
                       C1480 -
                   (((C38071 * C16617 + C38068 * C16618 + C38070 * C3672 +
                      C51096 * C3677 + C38069 * C1157 + C51102 * C1163) *
                         C50821 +
                     (C38071 * C16615 + C38068 * C16616 + C38070 * C3668 +
                      C51096 * C3673 + C38069 * C1151 + C51102 * C1156) *
                         C118) *
                        C50765 * C50938 +
                    ((C39062 + C39061 + C39060) * C50821 +
                     (C39059 + C39058 + C39057) * C118) *
                        C50765 * C22818) *
                       C50792) *
                      C2009)) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C118 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C50821) *
                       C50765 * C22818 +
                   ((C38069 * C296 + C51102 * C302 + C38070 * C875 +
                     C51096 * C883 + C38071 * C1150 + C38068 * C1154) *
                        C118 +
                    (C38069 * C303 + C51102 * C314 + C38070 * C884 +
                     C51096 * C899 + C38071 * C1155 + C38068 * C1162) *
                        C50821) *
                       C50765 * C50938) *
                      C112 -
                  (((C38300 + C38301 + C38302) * C50821 +
                    (C38297 + C38298 + C38299) * C118) *
                       C50765 * C50938 +
                   ((C38114 + C38113 + C38112) * C50821 +
                    (C38111 + C38110 + C38109) * C118) *
                       C50765 * C22818) *
                      C113 +
                  (((C38120 + C38119 + C38118) * C118 +
                    (C38117 + C38116 + C38115) * C50821) *
                       C50765 * C22818 +
                   ((C38303 + C38304 + C38305) * C118 +
                    (C38306 + C38307 + C38308) * C50821) *
                       C50765 * C50938) *
                      C114 -
                  (((C38071 * C1161 + C38068 * C1165 + C38070 * C896 +
                     C51096 * C905 + C38069 * C309 + C51102 * C317) *
                        C50821 +
                    (C38071 * C1153 + C38068 * C1160 + C38070 * C881 +
                     C51096 * C895 + C38069 * C299 + C51102 * C308) *
                        C118) *
                       C50765 * C50938 +
                   ((C38126 + C38125 + C38124) * C50821 +
                    (C38123 + C38122 + C38121) * C118) *
                       C50765 * C22818) *
                      C115) *
                 C50851) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C627 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C622 -
                    (C47201 + C47202 + C47203) * C628 -
                    (C47204 + C47205 + C47206) * C623 +
                    (C47511 + C47512 + C47513) * C629 +
                    (C47514 + C47515 + C47516) * C624) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C627 +
                    (C47206 + C47205 + C47204) * C622 -
                    (C47513 + C47512 + C47511) * C628 -
                    (C47516 + C47515 + C47514) * C623 +
                    (C38069 * C761 + C51102 * C765 + C38070 * C3207 +
                     C51096 * C3210 + C38071 * C9196 + C38068 * C9198) *
                        C629 +
                    (C38069 * C766 + C51102 * C773 + C38070 * C3211 +
                     C51096 * C3216 + C38071 * C9199 + C38068 * C9202) *
                        C624) *
                       C50765 * C50938) *
                      C51046 +
                  (((C38299 + C38298 + C38297) * C628 -
                    ((C38114 + C38113 + C38112) * C622 +
                     (C38111 + C38110 + C38109) * C627) +
                    (C38302 + C38301 + C38300) * C623 -
                    (C38651 + C38650 + C38649) * C629 -
                    (C38654 + C38653 + C38652) * C624) *
                       C50765 * C22818 +
                   ((C38649 + C38650 + C38651) * C628 -
                    ((C38300 + C38301 + C38302) * C622 +
                     (C38297 + C38298 + C38299) * C627) +
                    (C38652 + C38653 + C38654) * C623 -
                    (C38071 * C9197 + C38068 * C9200 + C38070 * C3208 +
                     C51096 * C3212 + C38069 * C762 + C51102 * C767) *
                        C629 -
                    (C38071 * C9201 + C38068 * C9203 + C38070 * C3213 +
                     C51096 * C3217 + C38069 * C768 + C51102 * C774) *
                        C624) *
                       C50765 * C50938) *
                      C50792) *
                 C50851) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C294 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C51053 -
                    (C47201 + C47202 + C47203) * C295 -
                    (C47204 + C47205 + C47206) * C50837) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C294 +
                    (C47206 + C47205 + C47204) * C51053 -
                    (C38071 * C3551 + C38068 * C3554 + C38070 * C876 +
                     C51096 * C885 + C38069 * C630 + C51102 * C635) *
                        C295 -
                    (C38071 * C3555 + C38068 * C3560 + C38070 * C886 +
                     C51096 * C900 + C38069 * C636 + C51102 * C645) *
                        C50837) *
                       C50765 * C50938) *
                      C291 +
                  (((C38299 + C38298 + C38297) * C295 -
                    ((C38114 + C38113 + C38112) * C51053 +
                     (C38111 + C38110 + C38109) * C294) +
                    (C38302 + C38301 + C38300) * C50837) *
                       C50765 * C22818 +
                   ((C38649 + C38650 + C38651) * C295 -
                    ((C38300 + C38301 + C38302) * C51053 +
                     (C38297 + C38298 + C38299) * C294) +
                    (C38652 + C38653 + C38654) * C50837) *
                       C50765 * C50938) *
                      C292 +
                  (((C38120 + C38119 + C38118) * C294 +
                    (C38117 + C38116 + C38115) * C51053 -
                    (C38305 + C38304 + C38303) * C295 -
                    (C38308 + C38307 + C38306) * C50837) *
                       C50765 * C22818 +
                   ((C38303 + C38304 + C38305) * C294 +
                    (C38306 + C38307 + C38308) * C51053 -
                    (C38071 * C3553 + C38068 * C3558 + C38070 * C880 +
                     C51096 * C893 + C38069 * C632 + C51102 * C639) *
                        C295 -
                    (C38071 * C3559 + C38068 * C3562 + C38070 * C894 +
                     C51096 * C904 + C38069 * C640 + C51102 * C647) *
                        C50837) *
                       C50765 * C50938) *
                      C293) *
                 C50851) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                    C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                       C757 +
                   (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                    C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                       C752 -
                   (C47201 + C47202 + C47203) * C758 -
                   (C47204 + C47205 + C47206) * C753 +
                   (C47511 + C47512 + C47513) * C759 +
                   (C47514 + C47515 + C47516) * C754 -
                   (C47627 + C47628 + C47629) * C760 -
                   (C47630 + C47631 + C47632) * C755) *
                      C50765 * C22818 +
                  ((C47203 + C47202 + C47201) * C757 +
                   (C47206 + C47205 + C47204) * C752 -
                   (C47513 + C47512 + C47511) * C758 -
                   (C47516 + C47515 + C47514) * C753 +
                   (C47629 + C47628 + C47627) * C759 +
                   (C47632 + C47631 + C47630) * C754 -
                   (C38071 * C11541 + C38068 * C11542 + C38070 * C8876 +
                    C51096 * C8878 + C38069 * C3043 + C51102 * C3046) *
                       C760 -
                   (C38071 * C11543 + C38068 * C11544 + C38070 * C8879 +
                    C51096 * C8882 + C38069 * C3047 + C51102 * C3052) *
                       C755) *
                      C50765 * C50938) *
                 C50787 * C50851) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C50765 * C22818 +
                    ((C47203 + C47202 + C47201) * C118 +
                     (C47206 + C47205 + C47204) * C50821) *
                        C50765 * C50938) *
                       C291 -
                   (((C38300 + C38301 + C38302) * C50821 +
                     (C38297 + C38298 + C38299) * C118) *
                        C50765 * C50938 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C50765 * C22818) *
                       C292 +
                   (((C38120 + C38119 + C38118) * C118 +
                     (C38117 + C38116 + C38115) * C50821) *
                        C50765 * C22818 +
                    ((C38303 + C38304 + C38305) * C118 +
                     (C38306 + C38307 + C38308) * C50821) *
                        C50765 * C50938) *
                       C293) *
                      C51055 +
                  ((((C38479 + C38480 + C38481) * C118 +
                     (C38482 + C38483 + C38484) * C50821) *
                        C50765 * C22818 +
                    ((C39805 + C39806 + C39807) * C118 +
                     (C39808 + C39809 + C39810) * C50821) *
                        C50765 * C50938) *
                       C292 -
                   (((C38071 * C3674 + C38068 * C3678 + C38070 * C1155 +
                      C51096 * C1162 + C38069 * C884 + C51102 * C899) *
                         C50821 +
                     (C38071 * C3669 + C38068 * C3675 + C38070 * C1150 +
                      C51096 * C1154 + C38069 * C875 + C51102 * C883) *
                         C118) *
                        C50765 * C50938 +
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C50821 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C118) *
                        C50765 * C22818) *
                       C291 -
                   (((C38071 * C3670 + C38068 * C3676 + C38070 * C1159 +
                      C51096 * C1164 + C38069 * C892 + C51102 * C903) *
                         C50821 +
                     (C38071 * C3667 + C38068 * C3671 + C38070 * C1152 +
                      C51096 * C1158 + C38069 * C879 + C51102 * C891) *
                         C118) *
                        C50765 * C50938 +
                    ((C38490 + C38489 + C38488) * C50821 +
                     (C38487 + C38486 + C38485) * C118) *
                        C50765 * C22818) *
                       C293) *
                      C50863)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C627 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C622 -
                    (C47201 + C47202 + C47203) * C628 -
                    (C47204 + C47205 + C47206) * C623 +
                    (C47511 + C47512 + C47513) * C629 +
                    (C47514 + C47515 + C47516) * C624) *
                       C50765 * C22818 +
                   ((C47203 + C47202 + C47201) * C627 +
                    (C47206 + C47205 + C47204) * C622 -
                    (C47513 + C47512 + C47511) * C628 -
                    (C47516 + C47515 + C47514) * C623 +
                    (C47629 + C47628 + C47627) * C629 +
                    (C47632 + C47631 + C47630) * C624) *
                       C50765 * C50938) *
                      C50787 * C51055 +
                  (((C47803 + C47804 + C47805) * C628 -
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C622 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C627) +
                    (C47806 + C47807 + C47808) * C623 -
                    (C47809 + C47810 + C47811) * C629 -
                    (C47812 + C47813 + C47814) * C624) *
                       C50765 * C22818 +
                   ((C47811 + C47810 + C47809) * C628 -
                    ((C47808 + C47807 + C47806) * C622 +
                     (C47805 + C47804 + C47803) * C627) +
                    (C47814 + C47813 + C47812) * C623 -
                    (C38071 * C11617 + C38068 * C11619 + C38070 * C9196 +
                     C51096 * C9198 + C38069 * C3207 + C51102 * C3210) *
                        C629 -
                    (C38071 * C11618 + C38068 * C11620 + C38070 * C9199 +
                     C51096 * C9202 + C38069 * C3211 + C51102 * C3216) *
                        C624) *
                       C50765 * C50938) *
                      C50787 * C50863)) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C51039 +
            (C1358 + C1359 - C1360 - C1361) * C50770) *
               C8147 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C51039 +
            (C3826 + C3827 - C3828 - C3829) * C50770) *
               C8148 +
           ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C51039 +
            (C9463 + C9464 - C9465 - C9466) * C50770) *
               C8149) *
              C51098 +
          (((C1360 - (C1359 + C1358) + C1361) * C51039 +
            (C1364 - (C1363 + C1362) + C1365) * C50770) *
               C8147 +
           ((C3828 - (C3827 + C3826) + C3829) * C51039 +
            (C3832 - (C3831 + C3830) + C3833) * C50770) *
               C8148 +
           ((C9465 - (C9464 + C9463) + C9466) * C51039 +
            (C9467 - (C9468 + C9469) + C9470) * C50770) *
               C8149) *
              C51084 +
          ((C1378 * C51039 + C1379 * C50770) * C8147 +
           (C3840 * C51039 + (C3836 + C3835 - C3834 - C3837) * C50770) * C8148 +
           ((C9469 + C9468 - C9467 - C9470) * C51039 +
            (C679 * C1355 + C680 * C1350 -
             (C117 * C764 + C50950 * C771) * C1356 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C8149) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 -
            (C117 * C296 + C50950 * C302) * C1356 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
           C1379 * C110) *
              C50924 * C51098 +
          ((C1360 - (C1359 + C1358) + C1361) * C107 +
           (C1364 - (C1363 + C1362) + C1365) * C108 +
           (C1368 - (C1367 + C1366) + C1369) * C109 +
           (C1370 - (C1371 + C1372) + C1373) * C110) *
              C50924 * C51084 +
          (C1378 * C107 + C1379 * C108 +
           (C1372 + C1371 - C1370 - C1373) * C109 +
           (C176 * C1355 + C177 * C1350 -
            (C117 * C301 + C50950 * C312) * C1356 -
            (C117 * C313 + C50950 * C319) * C50837) *
               C110) *
              C50924 * C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1355 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C1350 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C1356 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C50837) *
               C51039 +
           ((C15516 + C15517 + C15518) * C1355 +
            (C15519 + C15520 + C15521) * C1350 -
            (C15704 + C15705 + C15706) * C1356 -
            (C15707 + C15708 + C15709) * C50837) *
               C50770) *
              C50924 * C51098 +
          (((C15706 + C15705 + C15704) * C1356 -
            ((C15521 + C15520 + C15519) * C1350 +
             (C15518 + C15517 + C15516) * C1355) +
            (C15709 + C15708 + C15707) * C50837) *
               C51039 +
           ((C15710 + C15711 + C15712) * C1356 -
            ((C15522 + C15523 + C15524) * C1350 +
             (C15525 + C15526 + C15527) * C1355) +
            (C15713 + C15714 + C15715) * C50837) *
               C50770) *
              C50924 * C51084 +
          (((C15527 + C15526 + C15525) * C1355 +
            (C15524 + C15523 + C15522) * C1350 -
            (C15712 + C15711 + C15710) * C1356 -
            (C15715 + C15714 + C15713) * C50837) *
               C51039 +
           ((C15528 + C15529 + C15530) * C1355 +
            (C15531 + C15532 + C15533) * C1350 -
            (C15478 * C1153 + C15475 * C1160 + C15477 * C881 + C15474 * C895 +
             C15476 * C299 + C15473 * C308) *
                C1356 -
            (C15478 * C1161 + C15475 * C1165 + C15477 * C896 + C15474 * C905 +
             C15476 * C309 + C15473 * C317) *
                C50837) *
               C50770) *
              C50924 * C1354) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C51039 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C50770) *
               C8147 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C51039 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C50770) *
               C8148 +
           ((C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
             C8729 * C1484 + C8730 * C1479) *
                C51039 +
            (C9617 + C9618 - C9619 - C9620 + C9621 + C9622) * C50770) *
               C8149) *
              C1480 +
          (((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C51039 +
            (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C50770) *
               C8147 +
           ((C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C51039 +
            (C3995 - (C3994 + C3993) + C3996 - C3997 - C3998) * C50770) *
               C8148 +
           ((C9619 - (C9618 + C9617) + C9620 - C9621 - C9622) * C51039 +
            (C2940 * C1483 - (C678 * C51099 + C677 * C1482) + C2941 * C51087 -
             (C117 * C3045 + C50950 * C3050) * C1484 -
             (C117 * C3051 + C50950 * C3054) * C1479) *
                C50770) *
               C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1482 +
            (C117 * C127 + C50950 * C140) * C51099 -
            (C117 * C296 + C50950 * C302) * C1483 -
            (C117 * C303 + C50950 * C314) * C51087 +
            (C117 * C630 + C50950 * C635) * C1484 +
            (C117 * C636 + C50950 * C645) * C1479) *
               C107 +
           (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C108 +
           (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C109 +
           (C1498 + C1499 - C1500 - C1501 + C1502 + C1503) * C110) *
              C50924 * C1480 +
          ((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C107 +
           (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C108 +
           (C1500 - (C1499 + C1498) + C1501 - C1502 - C1503) * C109 +
           (C353 * C1483 - (C174 * C51099 + C175 * C1482) + C354 * C51087 -
            (C117 * C634 + C50950 * C643) * C1484 -
            (C117 * C644 + C50950 * C649) * C1479) *
               C110) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1482 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51099 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C1483 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C51087 +
            (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
             C15478 * C3551 + C15475 * C3554) *
                C1484 +
            (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
             C15478 * C3555 + C15475 * C3560) *
                C1479) *
               C51039 +
           ((C15516 + C15517 + C15518) * C1482 +
            (C15519 + C15520 + C15521) * C51099 -
            (C15704 + C15705 + C15706) * C1483 -
            (C15707 + C15708 + C15709) * C51087 +
            (C16056 + C16057 + C16058) * C1484 +
            (C16059 + C16060 + C16061) * C1479) *
               C50770) *
              C50924 * C1480 +
          (((C15706 + C15705 + C15704) * C1483 -
            ((C15521 + C15520 + C15519) * C51099 +
             (C15518 + C15517 + C15516) * C1482) +
            (C15709 + C15708 + C15707) * C51087 -
            (C16058 + C16057 + C16056) * C1484 -
            (C16061 + C16060 + C16059) * C1479) *
               C51039 +
           ((C15710 + C15711 + C15712) * C1483 -
            ((C15522 + C15523 + C15524) * C51099 +
             (C15525 + C15526 + C15527) * C1482) +
            (C15713 + C15714 + C15715) * C51087 -
            (C15478 * C3553 + C15475 * C3558 + C15477 * C880 + C15474 * C893 +
             C15476 * C632 + C15473 * C639) *
                C1484 -
            (C15478 * C3559 + C15475 * C3562 + C15477 * C894 + C15474 * C904 +
             C15476 * C640 + C15473 * C647) *
                C1479) *
               C50770) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C51039 +
             (C1358 + C1359 - C1360 - C1361) * C50770) *
                C8147 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C51039 +
             (C3826 + C3827 - C3828 - C3829) * C50770) *
                C8148 +
            ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                 C51039 +
             (C9463 + C9464 - C9465 - C9466) * C50770) *
                C8149) *
               C1480 +
           (((C1360 - (C1359 + C1358) + C1361) * C51039 +
             (C1364 - (C1363 + C1362) + C1365) * C50770) *
                C8147 +
            ((C3828 - (C3827 + C3826) + C3829) * C51039 +
             (C3832 - (C3831 + C3830) + C3833) * C50770) *
                C8148 +
            ((C9465 - (C9464 + C9463) + C9466) * C51039 +
             (C9467 - (C9468 + C9469) + C9470) * C50770) *
                C8149) *
               C50792) *
              C51055 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C51039 +
             (C1662 - (C1640 + C1641) + C1663) * C50770) *
                C8147 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C51039 +
             (C4193 - (C4194 + C4195) + C4196) * C50770) *
                C8148 +
            ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) +
              C8894 * C50837) *
                 C51039 +
             (C9817 - (C9818 + C9819) + C9820) * C50770) *
                C8149) *
               C1480 +
           (((C1641 + C1640 - C1662 - C1663) * C51039 +
             (C1647 + C1646 - C1664 - C1665) * C50770) *
                C8147 +
            ((C4195 + C4194 - C4193 - C4196) * C51039 +
             (C4199 + C4198 - C4197 - C4200) * C50770) *
                C8148 +
            ((C9819 + C9818 - C9817 - C9820) * C51039 +
             (C3242 * C1355 + C3243 * C1350 -
              (C117 * C3209 + C50950 * C3214) * C1356 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 -
             (C117 * C296 + C50950 * C302) * C1356 -
             (C117 * C303 + C50950 * C314) * C50837) *
                C107 +
            (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
            C1379 * C110) *
               C50924 * C1480 +
           ((C1360 - (C1359 + C1358) + C1361) * C107 +
            (C1364 - (C1363 + C1362) + C1365) * C108 +
            (C1368 - (C1367 + C1366) + C1369) * C109 +
            (C1370 - (C1371 + C1372) + C1373) * C110) *
               C50924 * C50792) *
              C51055 +
          ((((C117 * C875 + C50950 * C883) * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             (C117 * C884 + C50950 * C899) * C50837) *
                C107 +
            (C1662 - (C1640 + C1641) + C1663) * C108 +
            (C1664 - (C1646 + C1647) + C1665) * C109 +
            (C1666 - (C1652 + C1653) + C1667) * C110) *
               C50924 * C1480 +
           ((C1641 + C1640 - C1662 - C1663) * C107 +
            (C1647 + C1646 - C1664 - C1665) * C108 +
            (C1653 + C1652 - C1666 - C1667) * C109 +
            (C513 * C1355 + C514 * C1350 -
             (C117 * C1633 + C50950 * C1634) * C1356 -
             (C117 * C1635 + C50950 * C1636) * C50837) *
                C110) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C1355 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C1350 -
             (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
              C15476 * C296 + C15473 * C302) *
                 C1356 -
             (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
              C15476 * C303 + C15473 * C314) *
                 C50837) *
                C51039 +
            ((C15516 + C15517 + C15518) * C1355 +
             (C15519 + C15520 + C15521) * C1350 -
             (C15704 + C15705 + C15706) * C1356 -
             (C15707 + C15708 + C15709) * C50837) *
                C50770) *
               C50924 * C1480 +
           (((C15706 + C15705 + C15704) * C1356 -
             ((C15521 + C15520 + C15519) * C1350 +
              (C15518 + C15517 + C15516) * C1355) +
             (C15709 + C15708 + C15707) * C50837) *
                C51039 +
            ((C15710 + C15711 + C15712) * C1356 -
             ((C15522 + C15523 + C15524) * C1350 +
              (C15525 + C15526 + C15527) * C1355) +
             (C15713 + C15714 + C15715) * C50837) *
                C50770) *
               C50924 * C50792) *
              C51055 +
          ((((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
              C15478 * C3669 + C15475 * C3675) *
                 C1356 -
             ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
               C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                  C1350 +
              (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
               C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                  C1355) +
             (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
              C15478 * C3674 + C15475 * C3678) *
                 C50837) *
                C51039 +
            ((C17224 + C17225 + C17226) * C1356 -
             ((C15891 + C15890 + C15889) * C1350 +
              (C15888 + C15887 + C15886) * C1355) +
             (C17227 + C17228 + C17229) * C50837) *
                C50770) *
               C50924 * C1480 +
           (((C15886 + C15887 + C15888) * C1355 +
             (C15889 + C15890 + C15891) * C1350 -
             (C17226 + C17225 + C17224) * C1356 -
             (C17229 + C17228 + C17227) * C50837) *
                C51039 +
            ((C15892 + C15893 + C15894) * C1355 +
             (C15895 + C15896 + C15897) * C1350 -
             (C15478 * C3667 + C15475 * C3671 + C15477 * C1152 +
              C15474 * C1158 + C15476 * C879 + C15473 * C891) *
                 C1356 -
             (C15478 * C3670 + C15475 * C3676 + C15477 * C1159 +
              C15474 * C1164 + C15476 * C892 + C15473 * C903) *
                 C50837) *
                C50770) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C51039 +
             (C1358 + C1359 - C1360 - C1361) * C50770) *
                C8147 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C51039 +
             (C3826 + C3827 - C3828 - C3829) * C50770) *
                C8148 +
            ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                 C51039 +
             (C9463 + C9464 - C9465 - C9466) * C50770) *
                C8149) *
               C51046 +
           (((C1360 - (C1359 + C1358) + C1361) * C51039 +
             (C1364 - (C1363 + C1362) + C1365) * C50770) *
                C8147 +
            ((C3828 - (C3827 + C3826) + C3829) * C51039 +
             (C3832 - (C3831 + C3830) + C3833) * C50770) *
                C8148 +
            ((C9465 - (C9464 + C9463) + C9466) * C51039 +
             (C9467 - (C9468 + C9469) + C9470) * C50770) *
                C8149) *
               C50792) *
              C1765 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C51039 +
             (C1662 - (C1640 + C1641) + C1663) * C50770) *
                C8147 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C51039 +
             (C4193 - (C4194 + C4195) + C4196) * C50770) *
                C8148 +
            ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) +
              C8894 * C50837) *
                 C51039 +
             (C9817 - (C9818 + C9819) + C9820) * C50770) *
                C8149) *
               C51046 +
           (((C1641 + C1640 - C1662 - C1663) * C51039 +
             (C1647 + C1646 - C1664 - C1665) * C50770) *
                C8147 +
            ((C4195 + C4194 - C4193 - C4196) * C51039 +
             (C4199 + C4198 - C4197 - C4200) * C50770) *
                C8148 +
            ((C9819 + C9818 - C9817 - C9820) * C51039 +
             (C3242 * C1355 + C3243 * C1350 -
              (C117 * C3209 + C50950 * C3214) * C1356 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 -
             (C117 * C296 + C50950 * C302) * C1356 -
             (C117 * C303 + C50950 * C314) * C50837) *
                C107 +
            (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
            C1379 * C110) *
               C50924 * C51046 +
           ((C1360 - (C1359 + C1358) + C1361) * C107 +
            (C1364 - (C1363 + C1362) + C1365) * C108 +
            (C1368 - (C1367 + C1366) + C1369) * C109 +
            (C1370 - (C1371 + C1372) + C1373) * C110) *
               C50924 * C50792) *
              C1765 +
          ((((C117 * C875 + C50950 * C883) * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             (C117 * C884 + C50950 * C899) * C50837) *
                C107 +
            (C1662 - (C1640 + C1641) + C1663) * C108 +
            (C1664 - (C1646 + C1647) + C1665) * C109 +
            (C1666 - (C1652 + C1653) + C1667) * C110) *
               C50924 * C51046 +
           ((C1641 + C1640 - C1662 - C1663) * C107 +
            (C1647 + C1646 - C1664 - C1665) * C108 +
            (C1653 + C1652 - C1666 - C1667) * C109 +
            (C513 * C1355 + C514 * C1350 -
             (C117 * C1633 + C50950 * C1634) * C1356 -
             (C117 * C1635 + C50950 * C1636) * C50837) *
                C110) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C1355 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C1350 -
             (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
              C15476 * C296 + C15473 * C302) *
                 C1356 -
             (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
              C15476 * C303 + C15473 * C314) *
                 C50837) *
                C51039 +
            ((C15516 + C15517 + C15518) * C1355 +
             (C15519 + C15520 + C15521) * C1350 -
             (C15704 + C15705 + C15706) * C1356 -
             (C15707 + C15708 + C15709) * C50837) *
                C50770) *
               C50924 * C51046 +
           (((C15706 + C15705 + C15704) * C1356 -
             ((C15521 + C15520 + C15519) * C1350 +
              (C15518 + C15517 + C15516) * C1355) +
             (C15709 + C15708 + C15707) * C50837) *
                C51039 +
            ((C15710 + C15711 + C15712) * C1356 -
             ((C15522 + C15523 + C15524) * C1350 +
              (C15525 + C15526 + C15527) * C1355) +
             (C15713 + C15714 + C15715) * C50837) *
                C50770) *
               C50924 * C50792) *
              C1765 +
          ((((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
              C15478 * C3669 + C15475 * C3675) *
                 C1356 -
             ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
               C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                  C1350 +
              (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
               C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                  C1355) +
             (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
              C15478 * C3674 + C15475 * C3678) *
                 C50837) *
                C51039 +
            ((C17224 + C17225 + C17226) * C1356 -
             ((C15891 + C15890 + C15889) * C1350 +
              (C15888 + C15887 + C15886) * C1355) +
             (C17227 + C17228 + C17229) * C50837) *
                C50770) *
               C50924 * C51046 +
           (((C15886 + C15887 + C15888) * C1355 +
             (C15889 + C15890 + C15891) * C1350 -
             (C17226 + C17225 + C17224) * C1356 -
             (C17229 + C17228 + C17227) * C50837) *
                C51039 +
            ((C15892 + C15893 + C15894) * C1355 +
             (C15895 + C15896 + C15897) * C1350 -
             (C15478 * C3667 + C15475 * C3671 + C15477 * C1152 +
              C15474 * C1158 + C15476 * C879 + C15473 * C891) *
                 C1356 -
             (C15478 * C3670 + C15475 * C3676 + C15477 * C1159 +
              C15474 * C1164 + C15476 * C892 + C15473 * C903) *
                 C50837) *
                C50770) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50950 * C126) * C1482 +
                     (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
                     C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                        C51039 +
                    (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C50770) *
                       C8147 +
                   ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 -
                     C2937 * C51087 + C3060 * C1484 + C3061 * C1479) *
                        C51039 +
                    (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C50770) *
                       C8148 +
                   ((C2936 * C1482 + C2937 * C51099 - C3060 * C1483 -
                     C3061 * C51087 + C8729 * C1484 + C8730 * C1479) *
                        C51039 +
                    (C9617 + C9618 - C9619 - C9620 + C9621 + C9622) * C50770) *
                       C8149) *
                      C50787 * C1765 +
                  (((C3236 * C1483 -
                     ((C117 * C480 + C50950 * C488) * C51099 +
                      (C117 * C470 + C50950 * C481) * C1482) +
                     C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
                        C51039 +
                    (C1656 * C1483 - (C508 * C51099 + C507 * C1482) +
                     C1657 * C51087 - C3240 * C1484 - C3241 * C1479) *
                        C50770) *
                       C8147 +
                   ((C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) +
                     C3239 * C51087 - C8893 * C1484 - C8894 * C1479) *
                        C51039 +
                    (C3240 * C1483 - (C1657 * C51099 + C1656 * C1482) +
                     C3241 * C51087 - C8895 * C1484 - C8896 * C1479) *
                        C50770) *
                       C8148 +
                   ((C8893 * C1483 - (C3239 * C51099 + C3238 * C1482) +
                     C8894 * C51087 - (C117 * C8876 + C50950 * C8878) * C1484 -
                     (C117 * C8879 + C50950 * C8882) * C1479) *
                        C51039 +
                    (C8895 * C1483 - (C3241 * C51099 + C3240 * C1482) +
                     C8896 * C51087 - (C117 * C8877 + C50950 * C8880) * C1484 -
                     (C117 * C8881 + C50950 * C8883) * C1479) *
                        C50770) *
                       C8149) *
                      C50787 * C50863)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C50950 * C126) * C1482 +
                    (C117 * C127 + C50950 * C140) * C51099 -
                    (C117 * C296 + C50950 * C302) * C1483 -
                    (C117 * C303 + C50950 * C314) * C51087 +
                    (C117 * C630 + C50950 * C635) * C1484 +
                    (C117 * C636 + C50950 * C645) * C1479) *
                       C107 +
                   (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C108 +
                   (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C109 +
                   (C1498 + C1499 - C1500 - C1501 + C1502 + C1503) * C110) *
                      C50924 * C50787 * C1765 +
                  (((C117 * C875 + C50950 * C883) * C1483 -
                    ((C117 * C480 + C50950 * C488) * C51099 +
                     (C117 * C470 + C50950 * C481) * C1482) +
                    (C117 * C884 + C50950 * C899) * C51087 -
                    (C117 * C876 + C50950 * C885) * C1484 -
                    (C117 * C886 + C50950 * C900) * C1479) *
                       C107 +
                   (C1656 * C1483 - (C508 * C51099 + C507 * C1482) +
                    C1657 * C51087 - (C117 * C878 + C50950 * C889) * C1484 -
                    (C117 * C890 + C50950 * C902) * C1479) *
                       C108 +
                   (C1658 * C1483 - (C510 * C51099 + C509 * C1482) +
                    C1659 * C51087 - (C117 * C880 + C50950 * C893) * C1484 -
                    (C117 * C894 + C50950 * C904) * C1479) *
                       C109 +
                   (C1660 * C1483 - (C512 * C51099 + C511 * C1482) +
                    C1661 * C51087 - (C117 * C882 + C50950 * C897) * C1484 -
                    (C117 * C898 + C50950 * C906) * C1479) *
                       C110) *
                      C50924 * C50787 * C50863)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C15476 * C119 + C15473 * C126 + C15477 * C470 +
                     C15474 * C481 + C15478 * C1008 + C15475 * C1013) *
                        C1482 +
                    (C15476 * C127 + C15473 * C140 + C15477 * C480 +
                     C15474 * C488 + C15478 * C1014 + C15475 * C1023) *
                        C51099 -
                    (C15478 * C1150 + C15475 * C1154 + C15477 * C875 +
                     C15474 * C883 + C15476 * C296 + C15473 * C302) *
                        C1483 -
                    (C15478 * C1155 + C15475 * C1162 + C15477 * C884 +
                     C15474 * C899 + C15476 * C303 + C15473 * C314) *
                        C51087 +
                    (C15476 * C630 + C15473 * C635 + C15477 * C876 +
                     C15474 * C885 + C15478 * C3551 + C15475 * C3554) *
                        C1484 +
                    (C15476 * C636 + C15473 * C645 + C15477 * C886 +
                     C15474 * C900 + C15478 * C3555 + C15475 * C3560) *
                        C1479) *
                       C51039 +
                   ((C15516 + C15517 + C15518) * C1482 +
                    (C15519 + C15520 + C15521) * C51099 -
                    (C15704 + C15705 + C15706) * C1483 -
                    (C15707 + C15708 + C15709) * C51087 +
                    (C16056 + C16057 + C16058) * C1484 +
                    (C16059 + C16060 + C16061) * C1479) *
                       C50770) *
                      C50924 * C50787 * C1765 +
                  (((C15476 * C875 + C15473 * C883 + C15477 * C1150 +
                     C15474 * C1154 + C15478 * C3669 + C15475 * C3675) *
                        C1483 -
                    ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
                      C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                         C51099 +
                     (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
                      C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                         C1482) +
                    (C15476 * C884 + C15473 * C899 + C15477 * C1155 +
                     C15474 * C1162 + C15478 * C3674 + C15475 * C3678) *
                        C51087 -
                    (C15478 * C9309 + C15475 * C9313 + C15477 * C3551 +
                     C15474 * C3554 + C15476 * C876 + C15473 * C885) *
                        C1484 -
                    (C15478 * C9312 + C15475 * C9315 + C15477 * C3555 +
                     C15474 * C3560 + C15476 * C886 + C15473 * C900) *
                        C1479) *
                       C51039 +
                   ((C17224 + C17225 + C17226) * C1483 -
                    ((C15891 + C15890 + C15889) * C51099 +
                     (C15888 + C15887 + C15886) * C1482) +
                    (C17227 + C17228 + C17229) * C51087 -
                    (C15478 * C9308 + C15475 * C9311 + C15477 * C3552 +
                     C15474 * C3556 + C15476 * C878 + C15473 * C889) *
                        C1484 -
                    (C15478 * C9310 + C15475 * C9314 + C15477 * C3557 +
                     C15474 * C3561 + C15476 * C890 + C15473 * C902) *
                        C1479) *
                       C50770) *
                      C50924 * C50787 * C50863)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C51039 +
            (C1358 + C1359 - C1360 - C1361) * C50770) *
               C8147 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C51039 +
            (C3826 + C3827 - C3828 - C3829) * C50770) *
               C8148 +
           ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C51039 +
            (C9463 + C9464 - C9465 - C9466) * C50770) *
               C8149) *
              C50787 * C51100 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C51039 +
            (C1662 - (C1640 + C1641) + C1663) * C50770) *
               C8147 +
           ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C51039 +
            (C4193 - (C4194 + C4195) + C4196) * C50770) *
               C8148 +
           ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C51039 +
            (C9817 - (C9818 + C9819) + C9820) * C50770) *
               C8149) *
              C50787 * C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C1355 +
             (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
             C3569 * C50837) *
                C51039 +
            (C1041 * C1355 + C1042 * C1350 - C3398 * C1356 - C3399 * C50837) *
                C50770) *
               C8147 +
           ((C3568 * C1355 + C3569 * C1350 - C9209 * C1356 - C9210 * C50837) *
                C51039 +
            (C3398 * C1355 + C3399 * C1350 - C9047 * C1356 - C9048 * C50837) *
                C50770) *
               C8148 +
           ((C9209 * C1355 + C9210 * C1350 -
             (C117 * C9196 + C50950 * C9198) * C1356 -
             (C117 * C9199 + C50950 * C9202) * C50837) *
                C51039 +
            (C9047 * C1355 + C9048 * C1350 -
             (C117 * C9197 + C50950 * C9200) * C1356 -
             (C117 * C9201 + C50950 * C9203) * C50837) *
                C50770) *
               C8149) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 -
            (C117 * C296 + C50950 * C302) * C1356 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
           C1379 * C110) *
              C50924 * C50787 * C51100 +
          (((C117 * C875 + C50950 * C883) * C1356 -
            ((C117 * C480 + C50950 * C488) * C1350 +
             (C117 * C470 + C50950 * C481) * C1355) +
            (C117 * C884 + C50950 * C899) * C50837) *
               C107 +
           (C1662 - (C1640 + C1641) + C1663) * C108 +
           (C1664 - (C1646 + C1647) + C1665) * C109 +
           (C1666 - (C1652 + C1653) + C1667) * C110) *
              C50924 * C50787 * C51090 +
          (((C117 * C1008 + C50950 * C1013) * C1355 +
            (C117 * C1014 + C50950 * C1023) * C1350 -
            (C117 * C1150 + C50950 * C1154) * C1356 -
            (C117 * C1155 + C50950 * C1162) * C50837) *
               C107 +
           (C1041 * C1355 + C1042 * C1350 -
            (C117 * C1151 + C50950 * C1156) * C1356 -
            (C117 * C1157 + C50950 * C1163) * C50837) *
               C108 +
           (C1043 * C1355 + C1044 * C1350 -
            (C117 * C1152 + C50950 * C1158) * C1356 -
            (C117 * C1159 + C50950 * C1164) * C50837) *
               C109 +
           (C1045 * C1355 + C1046 * C1350 -
            (C117 * C1153 + C50950 * C1160) * C1356 -
            (C117 * C1161 + C50950 * C1165) * C50837) *
               C110) *
              C50924 * C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1355 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C1350 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C1356 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C50837) *
               C51039 +
           ((C15516 + C15517 + C15518) * C1355 +
            (C15519 + C15520 + C15521) * C1350 -
            (C15704 + C15705 + C15706) * C1356 -
            (C15707 + C15708 + C15709) * C50837) *
               C50770) *
              C50924 * C50787 * C51100 +
          (((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
             C15478 * C3669 + C15475 * C3675) *
                C1356 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C1350 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C1355) +
            (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
             C15478 * C3674 + C15475 * C3678) *
                C50837) *
               C51039 +
           ((C17224 + C17225 + C17226) * C1356 -
            ((C15891 + C15890 + C15889) * C1350 +
             (C15888 + C15887 + C15886) * C1355) +
            (C17227 + C17228 + C17229) * C50837) *
               C50770) *
              C50924 * C50787 * C51090 +
          (((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 + C15474 * C1247 +
             C15478 * C6548 + C15475 * C6554) *
                C1355 +
            (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 + C15474 * C1251 +
             C15478 * C6553 + C15475 * C6557) *
                C1350 -
            (C15478 * C13898 + C15475 * C13902 + C15477 * C3669 +
             C15474 * C3675 + C15476 * C1150 + C15473 * C1154) *
                C1356 -
            (C15478 * C13901 + C15475 * C13904 + C15477 * C3674 +
             C15474 * C3678 + C15476 * C1155 + C15473 * C1162) *
                C50837) *
               C51039 +
           ((C16464 + C16465 + C16466) * C1355 +
            (C16467 + C16468 + C16469) * C1350 -
            (C15478 * C16615 + C15475 * C16616 + C15477 * C3668 +
             C15474 * C3673 + C15476 * C1151 + C15473 * C1156) *
                C1356 -
            (C15478 * C16617 + C15475 * C16618 + C15477 * C3672 +
             C15474 * C3677 + C15476 * C1157 + C15473 * C1163) *
                C50837) *
               C50770) *
              C50924 * C50787 * C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50950 * C126) * C118 +
                (C117 * C127 + C50950 * C140) * C50821) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C50924 * C112 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C50924 * C113 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C50924 * C114 -
              (((C117 * C138 + C50950 * C146) * C50821 +
                (C117 * C125 + C50950 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C50924 * C115) *
             C50851 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50950 * C126) * C627 +
                (C117 * C127 + C50950 * C140) * C622 -
                (C117 * C296 + C50950 * C302) * C628 -
                (C117 * C303 + C50950 * C314) * C623 +
                (C117 * C630 + C50950 * C635) * C629 +
                (C117 * C636 + C50950 * C645) * C624) *
                   C107 +
               (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
               (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
               (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
                  C50924 * C51046 +
              ((C653 - (C652 + C651) + C654 - C681 - C682) * C107 +
               (C661 - (C660 + C659) + C662 - C683 - C684) * C108 +
               (C669 - (C668 + C667) + C670 - C685 - C686) * C109 +
               (C353 * C628 - (C174 * C622 + C175 * C627) + C354 * C623 -
                (C117 * C634 + C50950 * C643) * C629 -
                (C117 * C644 + C50950 * C649) * C624) *
                   C110) *
                  C50924 * C50792) *
             C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C51046 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C50792) *
              C1005 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C50792 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C51046) *
              C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C107 +
            (C1047 + C1048) * C108 + (C1049 + C1050) * C109 +
            (C1051 + C1052) * C110) *
               C50924 * C51046 -
           (((C117 * C1021 + C50950 * C1027) * C50821 +
             (C117 * C1012 + C50950 * C1022) * C118) *
                C110 +
            (C1052 + C1051) * C109 + (C1050 + C1049) * C108 +
            (C1048 + C1047) * C107) *
               C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51039 +
            (C178 + C179) * C50770) *
               C8147 +
           ((C2612 * C118 + C2613 * C50821) * C51039 +
            (C2440 + C2441) * C50770) *
               C8148 +
           ((C2936 * C118 + C2937 * C50821) * C51039 +
            (C8151 + C8152) * C50770) *
               C8149) *
              C112 -
          (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
           ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
           ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
              C113 +
          ((C188 * C51039 + C189 * C50770) * C8147 +
           (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
           ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
              C114 -
          ((((C117 * C644 + C50950 * C649) * C50821 +
             (C117 * C634 + C50950 * C643) * C118) *
                C50770 +
            (C8156 + C8155) * C51039) *
               C8149 +
           ((C2447 + C2446) * C50770 + C2449 * C51039) * C8148 +
           (C190 * C50770 + C191 * C51039) * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             (C117 * C3043 + C50950 * C3046) * C629 +
             (C117 * C3047 + C50950 * C3052) * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C51039 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C50770) *
               C8147 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C51039 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C50770) *
               C8148 +
           ((C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C51039 +
            (C2940 * C628 - (C678 * C622 + C677 * C627) + C2941 * C623 -
             (C117 * C3045 + C50950 * C3050) * C629 -
             (C117 * C3051 + C50950 * C3054) * C624) *
                C50770) *
               C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C51046 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C50792) *
              C1005 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C50792 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C51046) *
              C1006 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C51039 +
             (C1047 + C1048) * C50770) *
                C8147 +
            ((C3568 * C118 + C3569 * C50821) * C51039 +
             (C3402 + C3403) * C50770) *
                C8148 +
            (((C117 * C3551 + C50950 * C3554) * C118 +
              (C117 * C3555 + C50950 * C3560) * C50821) *
                 C51039 +
             (C9049 + C9050) * C50770) *
                C8149) *
               C51046 -
           ((((C117 * C3559 + C50950 * C3562) * C50821 +
              (C117 * C3553 + C50950 * C3558) * C118) *
                 C50770 +
             (C9050 + C9049) * C51039) *
                C8149 +
            ((C3405 + C3404) * C50770 + (C3403 + C3402) * C51039) * C8148 +
            ((C1050 + C1049) * C50770 + (C1048 + C1047) * C51039) * C8147) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C118 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C50821) *
               C51039 +
           ((C15516 + C15517 + C15518) * C118 +
            (C15519 + C15520 + C15521) * C50821) *
               C50770) *
              C50924 * C112 -
          (((C15522 + C15523 + C15524) * C50821 +
            (C15525 + C15526 + C15527) * C118) *
               C50770 +
           ((C15521 + C15520 + C15519) * C50821 +
            (C15518 + C15517 + C15516) * C118) *
               C51039) *
              C50924 * C113 +
          (((C15527 + C15526 + C15525) * C118 +
            (C15524 + C15523 + C15522) * C50821) *
               C51039 +
           ((C15528 + C15529 + C15530) * C118 +
            (C15531 + C15532 + C15533) * C50821) *
               C50770) *
              C50924 * C114 -
          (((C15478 * C1021 + C15475 * C1027 + C15477 * C479 + C15474 * C487 +
             C15476 * C134 + C15473 * C144) *
                C50821 +
            (C15478 * C1012 + C15475 * C1022 + C15477 * C469 + C15474 * C478 +
             C15476 * C123 + C15473 * C135) *
                C118) *
               C50770 +
           ((C15533 + C15532 + C15531) * C50821 +
            (C15530 + C15529 + C15528) * C118) *
               C51039) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C628 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C623 +
            (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
             C15478 * C3551 + C15475 * C3554) *
                C629 +
            (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
             C15478 * C3555 + C15475 * C3560) *
                C624) *
               C51039 +
           ((C15516 + C15517 + C15518) * C627 +
            (C15519 + C15520 + C15521) * C622 -
            (C15704 + C15705 + C15706) * C628 -
            (C15707 + C15708 + C15709) * C623 +
            (C16056 + C16057 + C16058) * C629 +
            (C16059 + C16060 + C16061) * C624) *
               C50770) *
              C50924 * C51046 +
          (((C15706 + C15705 + C15704) * C628 -
            ((C15521 + C15520 + C15519) * C622 +
             (C15518 + C15517 + C15516) * C627) +
            (C15709 + C15708 + C15707) * C623 -
            (C16058 + C16057 + C16056) * C629 -
            (C16061 + C16060 + C16059) * C624) *
               C51039 +
           ((C15710 + C15711 + C15712) * C628 -
            ((C15522 + C15523 + C15524) * C622 +
             (C15525 + C15526 + C15527) * C627) +
            (C15713 + C15714 + C15715) * C623 -
            (C15478 * C3553 + C15475 * C3558 + C15477 * C880 + C15474 * C893 +
             C15476 * C632 + C15473 * C639) *
                C629 -
            (C15478 * C3559 + C15475 * C3562 + C15477 * C894 + C15474 * C904 +
             C15476 * C640 + C15473 * C647) *
                C624) *
               C50770) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C51039 +
            ((C15516 + C15517 + C15518) * C118 +
             (C15519 + C15520 + C15521) * C50821) *
                C50770) *
               C50924 * C51046 -
           (((C15522 + C15523 + C15524) * C50821 +
             (C15525 + C15526 + C15527) * C118) *
                C50770 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C51039) *
               C50924 * C50792) *
              C1005 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C51039 +
            ((C15892 + C15893 + C15894) * C118 +
             (C15895 + C15896 + C15897) * C50821) *
                C50770) *
               C50924 * C50792 -
           (((C15891 + C15890 + C15889) * C50821 +
             (C15888 + C15887 + C15886) * C118) *
                C50770 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C51039) *
               C50924 * C51046) *
              C1006 +
          ((((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 +
              C15474 * C1247 + C15478 * C6548 + C15475 * C6554) *
                 C118 +
             (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 +
              C15474 * C1251 + C15478 * C6553 + C15475 * C6557) *
                 C50821) *
                C51039 +
            ((C16464 + C16465 + C16466) * C118 +
             (C16467 + C16468 + C16469) * C50821) *
                C50770) *
               C50924 * C51046 -
           (((C15478 * C6549 + C15475 * C6555 + C15477 * C1242 +
              C15474 * C1249 + C15476 * C1018 + C15473 * C1025) *
                 C50821 +
             (C15478 * C6546 + C15475 * C6550 + C15477 * C1237 +
              C15474 * C1243 + C15476 * C1010 + C15473 * C1017) *
                 C118) *
                C50770 +
            ((C16469 + C16468 + C16467) * C50821 +
             (C16466 + C16465 + C16464) * C118) *
                C51039) *
               C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50950 * C126) * C294 +
                (C117 * C127 + C50950 * C140) * C51053 -
                (C117 * C296 + C50950 * C302) * C295 -
                (C117 * C303 + C50950 * C314) * C50837) *
                   C107 +
               (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
                  C50924 * C291 +
              ((C355 - (C322 + C321) + C356) * C107 +
               (C357 - (C328 + C327) + C358) * C108 +
               (C359 - (C334 + C333) + C360) * C109 +
               (C361 - (C341 + C342) + C362) * C110) *
                  C50924 * C292 +
              (C365 * C107 + C366 * C108 + (C342 + C341 - C361 - C362) * C109 +
               (C176 * C294 + C177 * C51053 -
                (C117 * C301 + C50950 * C312) * C295 -
                (C117 * C313 + C50950 * C319) * C50837) *
                   C110) *
                  C50924 * C293) *
             C50851 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C50950 * C126) * C757 +
               (C117 * C127 + C50950 * C140) * C752 -
               (C117 * C296 + C50950 * C302) * C758 -
               (C117 * C303 + C50950 * C314) * C753 +
               (C117 * C630 + C50950 * C635) * C759 +
               (C117 * C636 + C50950 * C645) * C754 -
               (C117 * C761 + C50950 * C765) * C760 -
               (C117 * C766 + C50950 * C773) * C755) *
                  C107 +
              (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
               C675 * C759 + C676 * C754 -
               (C117 * C762 + C50950 * C767) * C760 -
               (C117 * C768 + C50950 * C774) * C755) *
                  C108 +
              (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
               C677 * C759 + C678 * C754 -
               (C117 * C763 + C50950 * C769) * C760 -
               (C117 * C770 + C50950 * C775) * C755) *
                  C109 +
              (C172 * C757 + C173 * C752 - C351 * C758 - C352 * C753 +
               C679 * C759 + C680 * C754 -
               (C117 * C764 + C50950 * C771) * C760 -
               (C117 * C772 + C50950 * C776) * C755) *
                  C110) *
             C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 -
            (C117 * C296 + C50950 * C302) * C295 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
              C50924 * C50787 * C1005 +
          (((C117 * C875 + C50950 * C883) * C295 -
            ((C117 * C480 + C50950 * C488) * C51053 +
             (C117 * C470 + C50950 * C481) * C294) +
            (C117 * C884 + C50950 * C899) * C50837) *
               C107 +
           ((C117 * C877 + C50950 * C887) * C295 -
            (C508 * C51053 + C507 * C294) +
            (C117 * C888 + C50950 * C901) * C50837) *
               C108 +
           ((C117 * C879 + C50950 * C891) * C295 -
            (C510 * C51053 + C509 * C294) +
            (C117 * C892 + C50950 * C903) * C50837) *
               C109 +
           ((C117 * C881 + C50950 * C895) * C295 -
            (C512 * C51053 + C511 * C294) +
            (C117 * C896 + C50950 * C905) * C50837) *
               C110) *
              C50924 * C50787 * C1006 +
          (((C117 * C1008 + C50950 * C1013) * C294 +
            (C117 * C1014 + C50950 * C1023) * C51053 -
            (C117 * C1150 + C50950 * C1154) * C295 -
            (C117 * C1155 + C50950 * C1162) * C50837) *
               C107 +
           (C1041 * C294 + C1042 * C51053 -
            (C117 * C1151 + C50950 * C1156) * C295 -
            (C117 * C1157 + C50950 * C1163) * C50837) *
               C108 +
           (C1043 * C294 + C1044 * C51053 -
            (C117 * C1152 + C50950 * C1158) * C295 -
            (C117 * C1159 + C50950 * C1164) * C50837) *
               C109 +
           (C1045 * C294 + C1046 * C51053 -
            (C117 * C1153 + C50950 * C1160) * C295 -
            (C117 * C1161 + C50950 * C1165) * C50837) *
               C110) *
              C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51039 +
            (C321 + C322 - C355 - C356) * C50770) *
               C8147 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51039 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C8148 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C51039 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C8149) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C51039 +
            (C357 - (C328 + C327) + C358) * C50770) *
               C8147 +
           ((C2602 - (C2601 + C2600) + C2603) * C51039 +
            (C2606 - (C2605 + C2604) + C2607) * C50770) *
               C8148 +
           ((C8305 - (C8304 + C8303) + C8306) * C51039 +
            (C8307 - (C8308 + C8309) + C8310) * C50770) *
               C8149) *
              C292 +
          ((C365 * C51039 + C366 * C50770) * C8147 +
           (C2616 * C51039 + (C2610 + C2609 - C2608 - C2611) * C50770) * C8148 +
           ((C8309 + C8308 - C8307 - C8310) * C51039 +
            (C679 * C294 + C680 * C51053 -
             (C117 * C764 + C50950 * C771) * C295 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C51039 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C50770) *
              C8147 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C51039 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C50770) *
              C8148 +
          ((C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
            C8729 * C759 + C8730 * C754 -
            (C117 * C8716 + C50950 * C8718) * C760 -
            (C117 * C8719 + C50950 * C8722) * C755) *
               C51039 +
           (C675 * C757 + C676 * C752 - C2938 * C758 - C2939 * C753 +
            C8615 * C759 + C8616 * C754 -
            (C117 * C8717 + C50950 * C8720) * C760 -
            (C117 * C8721 + C50950 * C8723) * C755) *
               C50770) *
              C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51039 +
            (C321 + C322 - C355 - C356) * C50770) *
               C8147 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51039 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C8148 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C51039 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C8149) *
              C50787 * C1005 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C51039 +
            (C1898 - (C1899 + C1900) + C1901) * C50770) *
               C8147 +
           ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C51039 +
            (C4541 - (C4542 + C4543) + C4544) * C50770) *
               C8148 +
           ((C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                C51039 +
            (C8895 * C295 - (C3241 * C51053 + C3240 * C294) + C8896 * C50837) *
                C50770) *
               C8149) *
              C50787 * C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C294 +
             (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
             C3569 * C50837) *
                C51039 +
            (C1041 * C294 + C1042 * C51053 - C3398 * C295 - C3399 * C50837) *
                C50770) *
               C8147 +
           ((C3568 * C294 + C3569 * C51053 - C9209 * C295 - C9210 * C50837) *
                C51039 +
            (C3398 * C294 + C3399 * C51053 - C9047 * C295 - C9048 * C50837) *
                C50770) *
               C8148 +
           ((C9209 * C294 + C9210 * C51053 -
             (C117 * C9196 + C50950 * C9198) * C295 -
             (C117 * C9199 + C50950 * C9202) * C50837) *
                C51039 +
            (C9047 * C294 + C9048 * C51053 -
             (C117 * C9197 + C50950 * C9200) * C295 -
             (C117 * C9201 + C50950 * C9203) * C50837) *
                C50770) *
               C8149) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C294 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51053 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C295 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C50837) *
               C51039 +
           ((C15516 + C15517 + C15518) * C294 +
            (C15519 + C15520 + C15521) * C51053 -
            (C15704 + C15705 + C15706) * C295 -
            (C15707 + C15708 + C15709) * C50837) *
               C50770) *
              C50924 * C291 +
          (((C15706 + C15705 + C15704) * C295 -
            ((C15521 + C15520 + C15519) * C51053 +
             (C15518 + C15517 + C15516) * C294) +
            (C15709 + C15708 + C15707) * C50837) *
               C51039 +
           ((C15710 + C15711 + C15712) * C295 -
            ((C15522 + C15523 + C15524) * C51053 +
             (C15525 + C15526 + C15527) * C294) +
            (C15713 + C15714 + C15715) * C50837) *
               C50770) *
              C50924 * C292 +
          (((C15527 + C15526 + C15525) * C294 +
            (C15524 + C15523 + C15522) * C51053 -
            (C15712 + C15711 + C15710) * C295 -
            (C15715 + C15714 + C15713) * C50837) *
               C51039 +
           ((C15528 + C15529 + C15530) * C294 +
            (C15531 + C15532 + C15533) * C51053 -
            (C15478 * C1153 + C15475 * C1160 + C15477 * C881 + C15474 * C895 +
             C15476 * C299 + C15473 * C308) *
                C295 -
            (C15478 * C1161 + C15475 * C1165 + C15477 * C896 + C15474 * C905 +
             C15476 * C309 + C15473 * C317) *
                C50837) *
               C50770) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
            C15478 * C1008 + C15475 * C1013) *
               C757 +
           (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
            C15478 * C1014 + C15475 * C1023) *
               C752 -
           (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
            C15476 * C296 + C15473 * C302) *
               C758 -
           (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
            C15476 * C303 + C15473 * C314) *
               C753 +
           (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
            C15478 * C3551 + C15475 * C3554) *
               C759 +
           (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
            C15478 * C3555 + C15475 * C3560) *
               C754 -
           (C15478 * C9196 + C15475 * C9198 + C15477 * C3207 + C15474 * C3210 +
            C15476 * C761 + C15473 * C765) *
               C760 -
           (C15478 * C9199 + C15475 * C9202 + C15477 * C3211 + C15474 * C3216 +
            C15476 * C766 + C15473 * C773) *
               C755) *
              C51039 +
          ((C15516 + C15517 + C15518) * C757 +
           (C15519 + C15520 + C15521) * C752 -
           (C15704 + C15705 + C15706) * C758 -
           (C15707 + C15708 + C15709) * C753 +
           (C16056 + C16057 + C16058) * C759 +
           (C16059 + C16060 + C16061) * C754 -
           (C15478 * C9197 + C15475 * C9200 + C15477 * C3208 + C15474 * C3212 +
            C15476 * C762 + C15473 * C767) *
               C760 -
           (C15478 * C9201 + C15475 * C9203 + C15477 * C3213 + C15474 * C3217 +
            C15476 * C768 + C15473 * C774) *
               C755) *
              C50770) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C294 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51053 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C295 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C50837) *
               C51039 +
           ((C15516 + C15517 + C15518) * C294 +
            (C15519 + C15520 + C15521) * C51053 -
            (C15704 + C15705 + C15706) * C295 -
            (C15707 + C15708 + C15709) * C50837) *
               C50770) *
              C50924 * C50787 * C1005 +
          (((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
             C15478 * C3669 + C15475 * C3675) *
                C295 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C51053 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C294) +
            (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
             C15478 * C3674 + C15475 * C3678) *
                C50837) *
               C51039 +
           ((C15476 * C877 + C15473 * C887 + C15477 * C1151 + C15474 * C1156 +
             C15478 * C3668 + C15475 * C3673) *
                C295 -
            ((C15891 + C15890 + C15889) * C51053 +
             (C15888 + C15887 + C15886) * C294) +
            (C15476 * C888 + C15473 * C901 + C15477 * C1157 + C15474 * C1163 +
             C15478 * C3672 + C15475 * C3677) *
                C50837) *
               C50770) *
              C50924 * C50787 * C1006 +
          (((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 + C15474 * C1247 +
             C15478 * C6548 + C15475 * C6554) *
                C294 +
            (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 + C15474 * C1251 +
             C15478 * C6553 + C15475 * C6557) *
                C51053 -
            (C15478 * C13898 + C15475 * C13902 + C15477 * C3669 +
             C15474 * C3675 + C15476 * C1150 + C15473 * C1154) *
                C295 -
            (C15478 * C13901 + C15475 * C13904 + C15477 * C3674 +
             C15474 * C3678 + C15476 * C1155 + C15473 * C1162) *
                C50837) *
               C51039 +
           ((C16464 + C16465 + C16466) * C294 +
            (C16467 + C16468 + C16469) * C51053 -
            (C15478 * C16615 + C15475 * C16616 + C15477 * C3668 +
             C15474 * C3673 + C15476 * C1151 + C15473 * C1156) *
                C295 -
            (C15478 * C16617 + C15475 * C16618 + C15477 * C3672 +
             C15474 * C3677 + C15476 * C1157 + C15473 * C1163) *
                C50837) *
               C50770) *
              C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50950 * C126) * C118 +
                 (C117 * C127 + C50950 * C140) * C50821) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C50924 * C291 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C50924 * C292 +
               (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C50924 * C293) *
                  C51055 +
              (((C515 + C516) * C107 + (C517 + C518) * C108 +
                (C519 + C520) * C109 + (C521 + C522) * C110) *
                   C50924 * C292 -
               (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
                ((C117 * C480 + C50950 * C488) * C50821 +
                 (C117 * C470 + C50950 * C481) * C118) *
                    C107) *
                   C50924 * C291 -
               (((C117 * C482 + C50950 * C489) * C50821 +
                 (C117 * C471 + C50950 * C483) * C118) *
                    C110 +
                (C522 + C521) * C109 + C523 * C108 + C524 * C107) *
                   C50924 * C293) *
                  C50863) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50950 * C126) * C627 +
                (C117 * C127 + C50950 * C140) * C622 -
                (C117 * C296 + C50950 * C302) * C628 -
                (C117 * C303 + C50950 * C314) * C623 +
                (C117 * C630 + C50950 * C635) * C629 +
                (C117 * C636 + C50950 * C645) * C624) *
                   C107 +
               (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
               (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
               (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
                  C50924 * C50787 * C51055 +
              (((C117 * C875 + C50950 * C883) * C628 -
                ((C117 * C480 + C50950 * C488) * C622 +
                 (C117 * C470 + C50950 * C481) * C627) +
                (C117 * C884 + C50950 * C899) * C623 -
                (C117 * C876 + C50950 * C885) * C629 -
                (C117 * C886 + C50950 * C900) * C624) *
                   C107 +
               ((C117 * C877 + C50950 * C887) * C628 -
                (C508 * C622 + C507 * C627) +
                (C117 * C888 + C50950 * C901) * C623 -
                (C117 * C878 + C50950 * C889) * C629 -
                (C117 * C890 + C50950 * C902) * C624) *
                   C108 +
               ((C117 * C879 + C50950 * C891) * C628 -
                (C510 * C622 + C509 * C627) +
                (C117 * C892 + C50950 * C903) * C623 -
                (C117 * C880 + C50950 * C893) * C629 -
                (C117 * C894 + C50950 * C904) * C624) *
                   C109 +
               ((C117 * C881 + C50950 * C895) * C628 -
                (C512 * C622 + C511 * C627) +
                (C117 * C896 + C50950 * C905) * C623 -
                (C117 * C882 + C50950 * C897) * C629 -
                (C117 * C898 + C50950 * C906) * C624) *
                   C110) *
                  C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50924 * C50787 * C1232 -
          (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
           ((C117 * C480 + C50950 * C488) * C50821 +
            (C117 * C470 + C50950 * C481) * C118) *
               C107) *
              C50924 * C50787 * C1233 +
          (((C117 * C1008 + C50950 * C1013) * C118 +
            (C117 * C1014 + C50950 * C1023) * C50821) *
               C107 +
           (C1047 + C1048) * C108 + (C1049 + C1050) * C109 +
           (C1051 + C1052) * C110) *
              C50924 * C50787 * C1234 -
          (((C117 * C1240 + C50950 * C1248) * C50821 +
            (C117 * C1236 + C50950 * C1241) * C118) *
               C110 +
           ((C117 * C1242 + C50950 * C1249) * C50821 +
            (C117 * C1237 + C50950 * C1243) * C118) *
               C109 +
           ((C117 * C1244 + C50950 * C1250) * C50821 +
            (C117 * C1238 + C50950 * C1245) * C118) *
               C108 +
           ((C117 * C1246 + C50950 * C1251) * C50821 +
            (C117 * C1239 + C50950 * C1247) * C118) *
               C107) *
              C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C291 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C292 +
           ((C188 * C51039 + C189 * C50770) * C8147 +
            (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
            ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
               C293) *
              C51055 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C292 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C291 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C51039) *
                C8149 +
            ((C2768 + C2767) * C50770 + C2769 * C51039) * C8148 +
            (C523 * C50770 + C524 * C51039) * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C51039 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C50770) *
               C8147 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C51039 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C50770) *
               C8148 +
           ((C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
             (C117 * C8876 + C50950 * C8878) * C629 -
             (C117 * C8879 + C50950 * C8882) * C624) *
                C51039 +
            (C8895 * C628 - (C3241 * C622 + C3240 * C627) + C8896 * C623 -
             (C117 * C8877 + C50950 * C8880) * C629 -
             (C117 * C8881 + C50950 * C8883) * C624) *
                C50770) *
               C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51039 +
            (C178 + C179) * C50770) *
               C8147 +
           ((C2612 * C118 + C2613 * C50821) * C51039 +
            (C2440 + C2441) * C50770) *
               C8148 +
           ((C2936 * C118 + C2937 * C50821) * C51039 +
            (C8151 + C8152) * C50770) *
               C8149) *
              C50787 * C1232 -
          (((C8458 + C8457) * C50770 +
            (C3239 * C50821 + C3238 * C118) * C51039) *
               C8149 +
           ((C2764 + C2763) * C50770 +
            (C3237 * C50821 + C3236 * C118) * C51039) *
               C8148 +
           ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                      (C117 * C470 + C50950 * C481) * C118) *
                                         C51039) *
               C8147) *
              C50787 * C1233 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C51039 +
            (C1047 + C1048) * C50770) *
               C8147 +
           ((C3568 * C118 + C3569 * C50821) * C51039 +
            (C3402 + C3403) * C50770) *
               C8148 +
           ((C9209 * C118 + C9210 * C50821) * C51039 +
            (C9049 + C9050) * C50770) *
               C8149) *
              C50787 * C1234 -
          ((((C117 * C9310 + C50950 * C9314) * C50821 +
             (C117 * C9308 + C50950 * C9311) * C118) *
                C50770 +
            ((C117 * C9312 + C50950 * C9315) * C50821 +
             (C117 * C9309 + C50950 * C9313) * C118) *
                C51039) *
               C8149 +
           (((C117 * C3672 + C50950 * C3677) * C50821 +
             (C117 * C3668 + C50950 * C3673) * C118) *
                C50770 +
            ((C117 * C3674 + C50950 * C3678) * C50821 +
             (C117 * C3669 + C50950 * C3675) * C118) *
                C51039) *
               C8148 +
           (((C117 * C1244 + C50950 * C1250) * C50821 +
             (C117 * C1238 + C50950 * C1245) * C118) *
                C50770 +
            ((C117 * C1246 + C50950 * C1251) * C50821 +
             (C117 * C1239 + C50950 * C1247) * C118) *
                C51039) *
               C8147) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C51039 +
            ((C15516 + C15517 + C15518) * C118 +
             (C15519 + C15520 + C15521) * C50821) *
                C50770) *
               C50924 * C291 -
           (((C15522 + C15523 + C15524) * C50821 +
             (C15525 + C15526 + C15527) * C118) *
                C50770 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C51039) *
               C50924 * C292 +
           (((C15527 + C15526 + C15525) * C118 +
             (C15524 + C15523 + C15522) * C50821) *
                C51039 +
            ((C15528 + C15529 + C15530) * C118 +
             (C15531 + C15532 + C15533) * C50821) *
                C50770) *
               C50924 * C293) *
              C51055 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C51039 +
            ((C15892 + C15893 + C15894) * C118 +
             (C15895 + C15896 + C15897) * C50821) *
                C50770) *
               C50924 * C292 -
           (((C15891 + C15890 + C15889) * C50821 +
             (C15888 + C15887 + C15886) * C118) *
                C50770 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C51039) *
               C50924 * C291 -
           (((C15478 * C1240 + C15475 * C1248 + C15477 * C1020 +
              C15474 * C1026 + C15476 * C477 + C15473 * C486) *
                 C50821 +
             (C15478 * C1236 + C15475 * C1241 + C15477 * C1011 +
              C15474 * C1019 + C15476 * C468 + C15473 * C476) *
                 C118) *
                C50770 +
            ((C15897 + C15896 + C15895) * C50821 +
             (C15894 + C15893 + C15892) * C118) *
                C51039) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C628 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C623 +
            (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
             C15478 * C3551 + C15475 * C3554) *
                C629 +
            (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
             C15478 * C3555 + C15475 * C3560) *
                C624) *
               C51039 +
           ((C15516 + C15517 + C15518) * C627 +
            (C15519 + C15520 + C15521) * C622 -
            (C15704 + C15705 + C15706) * C628 -
            (C15707 + C15708 + C15709) * C623 +
            (C16056 + C16057 + C16058) * C629 +
            (C16059 + C16060 + C16061) * C624) *
               C50770) *
              C50924 * C50787 * C51055 +
          (((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
             C15478 * C3669 + C15475 * C3675) *
                C628 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C622 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C627) +
            (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
             C15478 * C3674 + C15475 * C3678) *
                C623 -
            (C15478 * C9309 + C15475 * C9313 + C15477 * C3551 + C15474 * C3554 +
             C15476 * C876 + C15473 * C885) *
                C629 -
            (C15478 * C9312 + C15475 * C9315 + C15477 * C3555 + C15474 * C3560 +
             C15476 * C886 + C15473 * C900) *
                C624) *
               C51039 +
           ((C15476 * C877 + C15473 * C887 + C15477 * C1151 + C15474 * C1156 +
             C15478 * C3668 + C15475 * C3673) *
                C628 -
            ((C15891 + C15890 + C15889) * C622 +
             (C15888 + C15887 + C15886) * C627) +
            (C15476 * C888 + C15473 * C901 + C15477 * C1157 + C15474 * C1163 +
             C15478 * C3672 + C15475 * C3677) *
                C623 -
            (C15478 * C9308 + C15475 * C9311 + C15477 * C3552 + C15474 * C3556 +
             C15476 * C878 + C15473 * C889) *
                C629 -
            (C15478 * C9310 + C15475 * C9314 + C15477 * C3557 + C15474 * C3561 +
             C15476 * C890 + C15473 * C902) *
                C624) *
               C50770) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C118 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C50821) *
               C51039 +
           ((C15516 + C15517 + C15518) * C118 +
            (C15519 + C15520 + C15521) * C50821) *
               C50770) *
              C50924 * C50787 * C1232 -
          (((C15891 + C15890 + C15889) * C50821 +
            (C15888 + C15887 + C15886) * C118) *
               C50770 +
           ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 + C15474 * C1023 +
             C15476 * C480 + C15473 * C488) *
                C50821 +
            (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 + C15474 * C1013 +
             C15476 * C470 + C15473 * C481) *
                C118) *
               C51039) *
              C50924 * C50787 * C1233 +
          (((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 + C15474 * C1247 +
             C15478 * C6548 + C15475 * C6554) *
                C118 +
            (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 + C15474 * C1251 +
             C15478 * C6553 + C15475 * C6557) *
                C50821) *
               C51039 +
           ((C16464 + C16465 + C16466) * C118 +
            (C16467 + C16468 + C16469) * C50821) *
               C50770) *
              C50924 * C50787 * C1234 -
          (((C15478 * C16719 + C15475 * C16723 + C15477 * C6551 +
             C15474 * C6556 + C15476 * C1244 + C15473 * C1250) *
                C50821 +
            (C15478 * C16717 + C15475 * C16720 + C15477 * C6547 +
             C15474 * C6552 + C15476 * C1238 + C15473 * C1245) *
                C118) *
               C50770 +
           ((C15478 * C16721 + C15475 * C16724 + C15477 * C6553 +
             C15474 * C6557 + C15476 * C1246 + C15473 * C1251) *
                C50821 +
            (C15478 * C16718 + C15475 * C16722 + C15477 * C6548 +
             C15474 * C6554 + C15476 * C1239 + C15473 * C1247) *
                C118) *
               C51039) *
              C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C51098 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C51084 +
           ((C188 * C51039 + C189 * C50770) * C8147 +
            (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
            ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
               C1354) *
              C1765 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C51084 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C51098 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C51039) *
                C8149 +
            ((C2768 + C2767) * C50770 + C2769 * C51039) * C8148 +
            (C523 * C50770 + C524 * C51039) * C8147) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C51098 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C51084 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50924 * C1354) *
              C1765 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C51084 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C51098 -
           (((C117 * C482 + C50950 * C489) * C50821 +
             (C117 * C471 + C50950 * C483) * C118) *
                C110 +
            (C522 + C521) * C109 + C523 * C108 + C524 * C107) *
               C50924 * C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C51039 +
            ((C15516 + C15517 + C15518) * C118 +
             (C15519 + C15520 + C15521) * C50821) *
                C50770) *
               C50924 * C51098 -
           (((C15522 + C15523 + C15524) * C50821 +
             (C15525 + C15526 + C15527) * C118) *
                C50770 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C51039) *
               C50924 * C51084 +
           (((C15527 + C15526 + C15525) * C118 +
             (C15524 + C15523 + C15522) * C50821) *
                C51039 +
            ((C15528 + C15529 + C15530) * C118 +
             (C15531 + C15532 + C15533) * C50821) *
                C50770) *
               C50924 * C1354) *
              C1765 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C51039 +
            ((C15892 + C15893 + C15894) * C118 +
             (C15895 + C15896 + C15897) * C50821) *
                C50770) *
               C50924 * C51084 -
           (((C15891 + C15890 + C15889) * C50821 +
             (C15888 + C15887 + C15886) * C118) *
                C50770 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C51039) *
               C50924 * C51098 -
           (((C15478 * C1240 + C15475 * C1248 + C15477 * C1020 +
              C15474 * C1026 + C15476 * C477 + C15473 * C486) *
                 C50821 +
             (C15478 * C1236 + C15475 * C1241 + C15477 * C1011 +
              C15474 * C1019 + C15476 * C468 + C15473 * C476) *
                 C118) *
                C50770 +
            ((C15897 + C15896 + C15895) * C50821 +
             (C15894 + C15893 + C15892) * C118) *
                C51039) *
               C50924 * C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C294 +
              (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
              C2613 * C50837) *
                 C51039 +
             (C321 + C322 - C355 - C356) * C50770) *
                C8147 +
            ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                 C51039 +
             (C2600 + C2601 - C2602 - C2603) * C50770) *
                C8148 +
            ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                 C51039 +
             (C8303 + C8304 - C8305 - C8306) * C50770) *
                C8149) *
               C1480 +
           (((C355 - (C322 + C321) + C356) * C51039 +
             (C357 - (C328 + C327) + C358) * C50770) *
                C8147 +
            ((C2602 - (C2601 + C2600) + C2603) * C51039 +
             (C2606 - (C2605 + C2604) + C2607) * C50770) *
                C8148 +
            ((C8305 - (C8304 + C8303) + C8306) * C51039 +
             (C8307 - (C8308 + C8309) + C8310) * C50770) *
                C8149) *
               C50792) *
              C1765 +
          ((((C3236 * C295 -
              ((C117 * C480 + C50950 * C488) * C51053 +
               (C117 * C470 + C50950 * C481) * C294) +
              C3237 * C50837) *
                 C51039 +
             (C1898 - (C1899 + C1900) + C1901) * C50770) *
                C8147 +
            ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                 C51039 +
             (C4541 - (C4542 + C4543) + C4544) * C50770) *
                C8148 +
            ((C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                 C51039 +
             (C10161 - (C10162 + C10163) + C10164) * C50770) *
                C8149) *
               C1480 +
           (((C1900 + C1899 - C1898 - C1901) * C51039 +
             (C1904 + C1903 - C1902 - C1905) * C50770) *
                C8147 +
            ((C4543 + C4542 - C4541 - C4544) * C51039 +
             (C4547 + C4546 - C4545 - C4548) * C50770) *
                C8148 +
            ((C10163 + C10162 - C10161 - C10164) * C51039 +
             (C3242 * C294 + C3243 * C51053 -
              (C117 * C3209 + C50950 * C3214) * C295 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 -
             (C117 * C296 + C50950 * C302) * C295 -
             (C117 * C303 + C50950 * C314) * C50837) *
                C107 +
            (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
               C50924 * C1480 +
           ((C355 - (C322 + C321) + C356) * C107 +
            (C357 - (C328 + C327) + C358) * C108 +
            (C359 - (C334 + C333) + C360) * C109 +
            (C361 - (C341 + C342) + C362) * C110) *
               C50924 * C50792) *
              C1765 +
          ((((C117 * C875 + C50950 * C883) * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             (C117 * C884 + C50950 * C899) * C50837) *
                C107 +
            (C1898 - (C1899 + C1900) + C1901) * C108 +
            (C1902 - (C1903 + C1904) + C1905) * C109 +
            (C1906 - (C1907 + C1908) + C1909) * C110) *
               C50924 * C1480 +
           ((C1900 + C1899 - C1898 - C1901) * C107 +
            (C1904 + C1903 - C1902 - C1905) * C108 +
            (C1908 + C1907 - C1906 - C1909) * C109 +
            (C513 * C294 + C514 * C51053 -
             (C117 * C1633 + C50950 * C1634) * C295 -
             (C117 * C1635 + C50950 * C1636) * C50837) *
                C110) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C294 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C51053 -
             (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
              C15476 * C296 + C15473 * C302) *
                 C295 -
             (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
              C15476 * C303 + C15473 * C314) *
                 C50837) *
                C51039 +
            ((C15516 + C15517 + C15518) * C294 +
             (C15519 + C15520 + C15521) * C51053 -
             (C15704 + C15705 + C15706) * C295 -
             (C15707 + C15708 + C15709) * C50837) *
                C50770) *
               C50924 * C1480 +
           (((C15706 + C15705 + C15704) * C295 -
             ((C15521 + C15520 + C15519) * C51053 +
              (C15518 + C15517 + C15516) * C294) +
             (C15709 + C15708 + C15707) * C50837) *
                C51039 +
            ((C15710 + C15711 + C15712) * C295 -
             ((C15522 + C15523 + C15524) * C51053 +
              (C15525 + C15526 + C15527) * C294) +
             (C15713 + C15714 + C15715) * C50837) *
                C50770) *
               C50924 * C50792) *
              C1765 +
          ((((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
              C15478 * C3669 + C15475 * C3675) *
                 C295 -
             ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
               C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                  C51053 +
              (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
               C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                  C294) +
             (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
              C15478 * C3674 + C15475 * C3678) *
                 C50837) *
                C51039 +
            ((C17224 + C17225 + C17226) * C295 -
             ((C15891 + C15890 + C15889) * C51053 +
              (C15888 + C15887 + C15886) * C294) +
             (C17227 + C17228 + C17229) * C50837) *
                C50770) *
               C50924 * C1480 +
           (((C15886 + C15887 + C15888) * C294 +
             (C15889 + C15890 + C15891) * C51053 -
             (C17226 + C17225 + C17224) * C295 -
             (C17229 + C17228 + C17227) * C50837) *
                C51039 +
            ((C15892 + C15893 + C15894) * C294 +
             (C15895 + C15896 + C15897) * C51053 -
             (C15478 * C3667 + C15475 * C3671 + C15477 * C1152 +
              C15474 * C1158 + C15476 * C879 + C15473 * C891) *
                 C295 -
             (C15478 * C3670 + C15475 * C3676 + C15477 * C1159 +
              C15474 * C1164 + C15476 * C892 + C15473 * C903) *
                 C50837) *
                C50770) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C1480 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C50792) *
              C51100 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C50792 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C1480) *
              C51090 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C51039 +
             (C1047 + C1048) * C50770) *
                C8147 +
            ((C3568 * C118 + C3569 * C50821) * C51039 +
             (C3402 + C3403) * C50770) *
                C8148 +
            ((C9209 * C118 + C9210 * C50821) * C51039 +
             (C9049 + C9050) * C50770) *
                C8149) *
               C1480 -
           ((((C117 * C3559 + C50950 * C3562) * C50821 +
              (C117 * C3553 + C50950 * C3558) * C118) *
                 C50770 +
             (C9050 + C9049) * C51039) *
                C8149 +
            ((C3405 + C3404) * C50770 + (C3403 + C3402) * C51039) * C8148 +
            ((C1050 + C1049) * C50770 + (C1048 + C1047) * C51039) * C8147) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C1480 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C50792) *
              C51100 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C50792 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C1480) *
              C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C107 +
            (C1047 + C1048) * C108 + (C1049 + C1050) * C109 +
            (C1051 + C1052) * C110) *
               C50924 * C1480 -
           (((C117 * C1021 + C50950 * C1027) * C50821 +
             (C117 * C1012 + C50950 * C1022) * C118) *
                C110 +
            (C1052 + C1051) * C109 + (C1050 + C1049) * C108 +
            (C1048 + C1047) * C107) *
               C50924 * C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C51039 +
            ((C15516 + C15517 + C15518) * C118 +
             (C15519 + C15520 + C15521) * C50821) *
                C50770) *
               C50924 * C1480 -
           (((C15522 + C15523 + C15524) * C50821 +
             (C15525 + C15526 + C15527) * C118) *
                C50770 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C51039) *
               C50924 * C50792) *
              C51100 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C51039 +
            ((C15892 + C15893 + C15894) * C118 +
             (C15895 + C15896 + C15897) * C50821) *
                C50770) *
               C50924 * C50792 -
           (((C15891 + C15890 + C15889) * C50821 +
             (C15888 + C15887 + C15886) * C118) *
                C50770 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C51039) *
               C50924 * C1480) *
              C51090 +
          ((((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 +
              C15474 * C1247 + C15478 * C6548 + C15475 * C6554) *
                 C118 +
             (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 +
              C15474 * C1251 + C15478 * C6553 + C15475 * C6557) *
                 C50821) *
                C51039 +
            ((C16464 + C16465 + C16466) * C118 +
             (C16467 + C16468 + C16469) * C50821) *
                C50770) *
               C50924 * C1480 -
           (((C15478 * C6549 + C15475 * C6555 + C15477 * C1242 +
              C15474 * C1249 + C15476 * C1018 + C15473 * C1025) *
                 C50821 +
             (C15478 * C6546 + C15475 * C6550 + C15477 * C1237 +
              C15474 * C1243 + C15476 * C1010 + C15473 * C1017) *
                 C118) *
                C50770 +
            ((C16469 + C16468 + C16467) * C50821 +
             (C16466 + C16465 + C16464) * C118) *
                C51039) *
               C50924 * C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 -
            (C117 * C296 + C50950 * C302) * C628 -
            (C117 * C303 + C50950 * C314) * C623 +
            (C117 * C630 + C50950 * C635) * C629 +
            (C117 * C636 + C50950 * C645) * C624) *
               C107 +
           (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
           (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
           (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
              C50924 * C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C107 +
           (C661 - (C660 + C659) + C662 - C683 - C684) * C108 +
           (C669 - (C668 + C667) + C670 - C685 - C686) * C109 +
           (C353 * C628 - (C174 * C622 + C175 * C627) + C354 * C623 -
            (C117 * C634 + C50950 * C643) * C629 -
            (C117 * C644 + C50950 * C649) * C624) *
               C110) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50924 * C112 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50924 * C113 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50924 * C114 -
          (((C117 * C138 + C50950 * C146) * C50821 +
            (C117 * C125 + C50950 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51039 +
            (C178 + C179) * C50770) *
               C8147 +
           ((C2612 * C118 + C2613 * C50821) * C51039 +
            (C2440 + C2441) * C50770) *
               C8148 +
           ((C2936 * C118 + C2937 * C50821) * C51039 +
            (C8151 + C8152) * C50770) *
               C8149) *
              C112 -
          (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
           ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
           ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
              C113 +
          ((C188 * C51039 + C189 * C50770) * C8147 +
           (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
           ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
              C114 -
          ((((C117 * C644 + C50950 * C649) * C50821 +
             (C117 * C634 + C50950 * C643) * C118) *
                C50770 +
            (C8156 + C8155) * C51039) *
               C8149 +
           ((C2447 + C2446) * C50770 + C2449 * C51039) * C8148 +
           (C190 * C50770 + C191 * C51039) * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             (C117 * C3043 + C50950 * C3046) * C629 +
             (C117 * C3047 + C50950 * C3052) * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C51039 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C50770) *
               C8147 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C51039 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C50770) *
               C8148 +
           ((C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C51039 +
            (C2940 * C628 - (C678 * C622 + C677 * C627) + C2941 * C623 -
             (C117 * C3045 + C50950 * C3050) * C629 -
             (C117 * C3051 + C50950 * C3054) * C624) *
                C50770) *
               C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C118 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C50821) *
               C51039 +
           ((C15516 + C15517 + C15518) * C118 +
            (C15519 + C15520 + C15521) * C50821) *
               C50770) *
              C50924 * C112 -
          (((C15522 + C15523 + C15524) * C50821 +
            (C15525 + C15526 + C15527) * C118) *
               C50770 +
           ((C15521 + C15520 + C15519) * C50821 +
            (C15518 + C15517 + C15516) * C118) *
               C51039) *
              C50924 * C113 +
          (((C15527 + C15526 + C15525) * C118 +
            (C15524 + C15523 + C15522) * C50821) *
               C51039 +
           ((C15528 + C15529 + C15530) * C118 +
            (C15531 + C15532 + C15533) * C50821) *
               C50770) *
              C50924 * C114 -
          (((C15478 * C1021 + C15475 * C1027 + C15477 * C479 + C15474 * C487 +
             C15476 * C134 + C15473 * C144) *
                C50821 +
            (C15478 * C1012 + C15475 * C1022 + C15477 * C469 + C15474 * C478 +
             C15476 * C123 + C15473 * C135) *
                C118) *
               C50770 +
           ((C15533 + C15532 + C15531) * C50821 +
            (C15530 + C15529 + C15528) * C118) *
               C51039) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C628 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C623 +
            (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
             C15478 * C3551 + C15475 * C3554) *
                C629 +
            (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
             C15478 * C3555 + C15475 * C3560) *
                C624) *
               C51039 +
           ((C15516 + C15517 + C15518) * C627 +
            (C15519 + C15520 + C15521) * C622 -
            (C15704 + C15705 + C15706) * C628 -
            (C15707 + C15708 + C15709) * C623 +
            (C16056 + C16057 + C16058) * C629 +
            (C16059 + C16060 + C16061) * C624) *
               C50770) *
              C50924 * C51046 +
          (((C15706 + C15705 + C15704) * C628 -
            ((C15521 + C15520 + C15519) * C622 +
             (C15518 + C15517 + C15516) * C627) +
            (C15709 + C15708 + C15707) * C623 -
            (C16058 + C16057 + C16056) * C629 -
            (C16061 + C16060 + C16059) * C624) *
               C51039 +
           ((C15710 + C15711 + C15712) * C628 -
            ((C15522 + C15523 + C15524) * C622 +
             (C15525 + C15526 + C15527) * C627) +
            (C15713 + C15714 + C15715) * C623 -
            (C15478 * C3553 + C15475 * C3558 + C15477 * C880 + C15474 * C893 +
             C15476 * C632 + C15473 * C639) *
                C629 -
            (C15478 * C3559 + C15475 * C3562 + C15477 * C894 + C15474 * C904 +
             C15476 * C640 + C15473 * C647) *
                C624) *
               C50770) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 -
           (C117 * C296 + C50950 * C302) * C758 -
           (C117 * C303 + C50950 * C314) * C753 +
           (C117 * C630 + C50950 * C635) * C759 +
           (C117 * C636 + C50950 * C645) * C754 -
           (C117 * C761 + C50950 * C765) * C760 -
           (C117 * C766 + C50950 * C773) * C755) *
              C107 +
          (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 + C675 * C759 +
           C676 * C754 - (C117 * C762 + C50950 * C767) * C760 -
           (C117 * C768 + C50950 * C774) * C755) *
              C108 +
          (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 + C677 * C759 +
           C678 * C754 - (C117 * C763 + C50950 * C769) * C760 -
           (C117 * C770 + C50950 * C775) * C755) *
              C109 +
          (C172 * C757 + C173 * C752 - C351 * C758 - C352 * C753 + C679 * C759 +
           C680 * C754 - (C117 * C764 + C50950 * C771) * C760 -
           (C117 * C772 + C50950 * C776) * C755) *
              C110) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 -
            (C117 * C296 + C50950 * C302) * C295 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
              C50924 * C291 +
          ((C355 - (C322 + C321) + C356) * C107 +
           (C357 - (C328 + C327) + C358) * C108 +
           (C359 - (C334 + C333) + C360) * C109 +
           (C361 - (C341 + C342) + C362) * C110) *
              C50924 * C292 +
          (C365 * C107 + C366 * C108 + (C342 + C341 - C361 - C362) * C109 +
           (C176 * C294 + C177 * C51053 - (C117 * C301 + C50950 * C312) * C295 -
            (C117 * C313 + C50950 * C319) * C50837) *
               C110) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51039 +
            (C321 + C322 - C355 - C356) * C50770) *
               C8147 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51039 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C8148 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C51039 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C8149) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C51039 +
            (C357 - (C328 + C327) + C358) * C50770) *
               C8147 +
           ((C2602 - (C2601 + C2600) + C2603) * C51039 +
            (C2606 - (C2605 + C2604) + C2607) * C50770) *
               C8148 +
           ((C8305 - (C8304 + C8303) + C8306) * C51039 +
            (C8307 - (C8308 + C8309) + C8310) * C50770) *
               C8149) *
              C292 +
          ((C365 * C51039 + C366 * C50770) * C8147 +
           (C2616 * C51039 + (C2610 + C2609 - C2608 - C2611) * C50770) * C8148 +
           ((C8309 + C8308 - C8307 - C8310) * C51039 +
            (C679 * C294 + C680 * C51053 -
             (C117 * C764 + C50950 * C771) * C295 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C51039 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C50770) *
              C8147 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C51039 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C50770) *
              C8148 +
          ((C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
            C8729 * C759 + C8730 * C754 -
            (C117 * C8716 + C50950 * C8718) * C760 -
            (C117 * C8719 + C50950 * C8722) * C755) *
               C51039 +
           (C675 * C757 + C676 * C752 - C2938 * C758 - C2939 * C753 +
            C8615 * C759 + C8616 * C754 -
            (C117 * C8717 + C50950 * C8720) * C760 -
            (C117 * C8721 + C50950 * C8723) * C755) *
               C50770) *
              C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C294 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51053 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C295 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C50837) *
               C51039 +
           ((C15516 + C15517 + C15518) * C294 +
            (C15519 + C15520 + C15521) * C51053 -
            (C15704 + C15705 + C15706) * C295 -
            (C15707 + C15708 + C15709) * C50837) *
               C50770) *
              C50924 * C291 +
          (((C15706 + C15705 + C15704) * C295 -
            ((C15521 + C15520 + C15519) * C51053 +
             (C15518 + C15517 + C15516) * C294) +
            (C15709 + C15708 + C15707) * C50837) *
               C51039 +
           ((C15710 + C15711 + C15712) * C295 -
            ((C15522 + C15523 + C15524) * C51053 +
             (C15525 + C15526 + C15527) * C294) +
            (C15713 + C15714 + C15715) * C50837) *
               C50770) *
              C50924 * C292 +
          (((C15527 + C15526 + C15525) * C294 +
            (C15524 + C15523 + C15522) * C51053 -
            (C15712 + C15711 + C15710) * C295 -
            (C15715 + C15714 + C15713) * C50837) *
               C51039 +
           ((C15528 + C15529 + C15530) * C294 +
            (C15531 + C15532 + C15533) * C51053 -
            (C15478 * C1153 + C15475 * C1160 + C15477 * C881 + C15474 * C895 +
             C15476 * C299 + C15473 * C308) *
                C295 -
            (C15478 * C1161 + C15475 * C1165 + C15477 * C896 + C15474 * C905 +
             C15476 * C309 + C15473 * C317) *
                C50837) *
               C50770) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
            C15478 * C1008 + C15475 * C1013) *
               C757 +
           (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
            C15478 * C1014 + C15475 * C1023) *
               C752 -
           (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
            C15476 * C296 + C15473 * C302) *
               C758 -
           (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
            C15476 * C303 + C15473 * C314) *
               C753 +
           (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
            C15478 * C3551 + C15475 * C3554) *
               C759 +
           (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
            C15478 * C3555 + C15475 * C3560) *
               C754 -
           (C15478 * C9196 + C15475 * C9198 + C15477 * C3207 + C15474 * C3210 +
            C15476 * C761 + C15473 * C765) *
               C760 -
           (C15478 * C9199 + C15475 * C9202 + C15477 * C3211 + C15474 * C3216 +
            C15476 * C766 + C15473 * C773) *
               C755) *
              C51039 +
          ((C15516 + C15517 + C15518) * C757 +
           (C15519 + C15520 + C15521) * C752 -
           (C15704 + C15705 + C15706) * C758 -
           (C15707 + C15708 + C15709) * C753 +
           (C16056 + C16057 + C16058) * C759 +
           (C16059 + C16060 + C16061) * C754 -
           (C15478 * C9197 + C15475 * C9200 + C15477 * C3208 + C15474 * C3212 +
            C15476 * C762 + C15473 * C767) *
               C760 -
           (C15478 * C9201 + C15475 * C9203 + C15477 * C3213 + C15474 * C3217 +
            C15476 * C768 + C15473 * C774) *
               C755) *
              C50770) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 -
            (C117 * C296 + C50950 * C302) * C628 -
            (C117 * C303 + C50950 * C314) * C623 +
            (C117 * C630 + C50950 * C635) * C629 +
            (C117 * C636 + C50950 * C645) * C624) *
               C107 +
           (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
           (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
           (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
              C50924 * C50787 * C51055 +
          (((C117 * C875 + C50950 * C883) * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            (C117 * C884 + C50950 * C899) * C623 -
            (C117 * C876 + C50950 * C885) * C629 -
            (C117 * C886 + C50950 * C900) * C624) *
               C107 +
           ((C117 * C877 + C50950 * C887) * C628 - (C508 * C622 + C507 * C627) +
            (C117 * C888 + C50950 * C901) * C623 -
            (C117 * C878 + C50950 * C889) * C629 -
            (C117 * C890 + C50950 * C902) * C624) *
               C108 +
           ((C117 * C879 + C50950 * C891) * C628 - (C510 * C622 + C509 * C627) +
            (C117 * C892 + C50950 * C903) * C623 -
            (C117 * C880 + C50950 * C893) * C629 -
            (C117 * C894 + C50950 * C904) * C624) *
               C109 +
           ((C117 * C881 + C50950 * C895) * C628 - (C512 * C622 + C511 * C627) +
            (C117 * C896 + C50950 * C905) * C623 -
            (C117 * C882 + C50950 * C897) * C629 -
            (C117 * C898 + C50950 * C906) * C624) *
               C110) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C291 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C292 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50924 * C293) *
              C51055 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C292 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C291 -
           (((C117 * C482 + C50950 * C489) * C50821 +
             (C117 * C471 + C50950 * C483) * C118) *
                C110 +
            (C522 + C521) * C109 + C523 * C108 + C524 * C107) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C291 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C292 +
           ((C188 * C51039 + C189 * C50770) * C8147 +
            (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
            ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
               C293) *
              C51055 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C292 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C291 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C51039) *
                C8149 +
            ((C2768 + C2767) * C50770 + C2769 * C51039) * C8148 +
            (C523 * C50770 + C524 * C51039) * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C51039 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C50770) *
               C8147 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C51039 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C50770) *
               C8148 +
           ((C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
             (C117 * C8876 + C50950 * C8878) * C629 -
             (C117 * C8879 + C50950 * C8882) * C624) *
                C51039 +
            (C8895 * C628 - (C3241 * C622 + C3240 * C627) + C8896 * C623 -
             (C117 * C8877 + C50950 * C8880) * C629 -
             (C117 * C8881 + C50950 * C8883) * C624) *
                C50770) *
               C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C51039 +
            ((C15516 + C15517 + C15518) * C118 +
             (C15519 + C15520 + C15521) * C50821) *
                C50770) *
               C50924 * C291 -
           (((C15522 + C15523 + C15524) * C50821 +
             (C15525 + C15526 + C15527) * C118) *
                C50770 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C51039) *
               C50924 * C292 +
           (((C15527 + C15526 + C15525) * C118 +
             (C15524 + C15523 + C15522) * C50821) *
                C51039 +
            ((C15528 + C15529 + C15530) * C118 +
             (C15531 + C15532 + C15533) * C50821) *
                C50770) *
               C50924 * C293) *
              C51055 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C51039 +
            ((C15892 + C15893 + C15894) * C118 +
             (C15895 + C15896 + C15897) * C50821) *
                C50770) *
               C50924 * C292 -
           (((C15891 + C15890 + C15889) * C50821 +
             (C15888 + C15887 + C15886) * C118) *
                C50770 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C51039) *
               C50924 * C291 -
           (((C15478 * C1240 + C15475 * C1248 + C15477 * C1020 +
              C15474 * C1026 + C15476 * C477 + C15473 * C486) *
                 C50821 +
             (C15478 * C1236 + C15475 * C1241 + C15477 * C1011 +
              C15474 * C1019 + C15476 * C468 + C15473 * C476) *
                 C118) *
                C50770 +
            ((C15897 + C15896 + C15895) * C50821 +
             (C15894 + C15893 + C15892) * C118) *
                C51039) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C15478 * C1150 + C15475 * C1154 + C15477 * C875 + C15474 * C883 +
             C15476 * C296 + C15473 * C302) *
                C628 -
            (C15478 * C1155 + C15475 * C1162 + C15477 * C884 + C15474 * C899 +
             C15476 * C303 + C15473 * C314) *
                C623 +
            (C15476 * C630 + C15473 * C635 + C15477 * C876 + C15474 * C885 +
             C15478 * C3551 + C15475 * C3554) *
                C629 +
            (C15476 * C636 + C15473 * C645 + C15477 * C886 + C15474 * C900 +
             C15478 * C3555 + C15475 * C3560) *
                C624) *
               C51039 +
           ((C15516 + C15517 + C15518) * C627 +
            (C15519 + C15520 + C15521) * C622 -
            (C15704 + C15705 + C15706) * C628 -
            (C15707 + C15708 + C15709) * C623 +
            (C16056 + C16057 + C16058) * C629 +
            (C16059 + C16060 + C16061) * C624) *
               C50770) *
              C50924 * C50787 * C51055 +
          (((C15476 * C875 + C15473 * C883 + C15477 * C1150 + C15474 * C1154 +
             C15478 * C3669 + C15475 * C3675) *
                C628 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C622 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C627) +
            (C15476 * C884 + C15473 * C899 + C15477 * C1155 + C15474 * C1162 +
             C15478 * C3674 + C15475 * C3678) *
                C623 -
            (C15478 * C9309 + C15475 * C9313 + C15477 * C3551 + C15474 * C3554 +
             C15476 * C876 + C15473 * C885) *
                C629 -
            (C15478 * C9312 + C15475 * C9315 + C15477 * C3555 + C15474 * C3560 +
             C15476 * C886 + C15473 * C900) *
                C624) *
               C51039 +
           ((C15476 * C877 + C15473 * C887 + C15477 * C1151 + C15474 * C1156 +
             C15478 * C3668 + C15475 * C3673) *
                C628 -
            ((C15891 + C15890 + C15889) * C622 +
             (C15888 + C15887 + C15886) * C627) +
            (C15476 * C888 + C15473 * C901 + C15477 * C1157 + C15474 * C1163 +
             C15478 * C3672 + C15475 * C3677) *
                C623 -
            (C15478 * C9308 + C15475 * C9311 + C15477 * C3552 + C15474 * C3556 +
             C15476 * C878 + C15473 * C889) *
                C629 -
            (C15478 * C9310 + C15475 * C9314 + C15477 * C3557 + C15474 * C3561 +
             C15476 * C890 + C15473 * C902) *
                C624) *
               C50770) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
               C50765 * C10866) *
              C51098 +
          ((C1360 - (C1359 + C1358) + C1361) * C50765 * C10863 +
           (C3828 - (C3827 + C3826) + C3829) * C50765 * C10864 +
           (C9465 - (C9464 + C9463) + C9466) * C50765 * C10865 +
           (C8615 * C1356 - (C2939 * C1350 + C2938 * C1355) + C8616 * C50837) *
               C50765 * C10866) *
              C51084 +
          (C1378 * C50765 * C10863 + C3840 * C50765 * C10864 +
           (C9469 + C9468 - C9467 - C9470) * C50765 * C10865 +
           (C2940 * C1355 + C2941 * C1350 -
            (C117 * C3045 + C50950 * C3050) * C1356 -
            (C117 * C3051 + C50950 * C3054) * C50837) *
               C50765 * C10866) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C2434 +
            (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
               C51067 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C2434 +
            (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
               C50938) *
              C51098 +
          (((C1360 - (C1359 + C1358) + C1361) * C2434 +
            (C1364 - (C1363 + C1362) + C1365) * C2435 +
            (C1368 - (C1367 + C1366) + C1369) * C2436) *
               C51067 +
           ((C3828 - (C3827 + C3826) + C3829) * C2434 +
            (C3832 - (C3831 + C3830) + C3833) * C2435 +
            (C3834 - (C3835 + C3836) + C3837) * C2436) *
               C50938) *
              C51084 +
          ((C1378 * C2434 + C1379 * C2435 +
            (C1372 + C1371 - C1370 - C1373) * C2436) *
               C51067 +
           (C3840 * C2434 + (C3836 + C3835 - C3834 - C3837) * C2435 +
            (C353 * C1355 + C354 * C1350 -
             (C117 * C634 + C50950 * C643) * C1356 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C2436) *
               C50938) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1355 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C1350 -
            (C18458 + C18459 + C18460) * C1356 -
            (C18461 + C18462 + C18463) * C50837) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C1355 +
            (C18463 + C18462 + C18461) * C1350 -
            (C18770 + C18769 + C18768) * C1356 -
            (C18773 + C18772 + C18771) * C50837) *
               C50765 * C50938) *
              C51098 +
          (((C15706 + C15705 + C15704) * C1356 -
            ((C15521 + C15520 + C15519) * C1350 +
             (C15518 + C15517 + C15516) * C1355) +
            (C15709 + C15708 + C15707) * C50837) *
               C50765 * C51067 +
           ((C16056 + C16057 + C16058) * C1356 -
            ((C15707 + C15708 + C15709) * C1350 +
             (C15704 + C15705 + C15706) * C1355) +
            (C16059 + C16060 + C16061) * C50837) *
               C50765 * C50938) *
              C51084 +
          (((C15527 + C15526 + C15525) * C1355 +
            (C15524 + C15523 + C15522) * C1350 -
            (C15712 + C15711 + C15710) * C1356 -
            (C15715 + C15714 + C15713) * C50837) *
               C50765 * C51067 +
           ((C15710 + C15711 + C15712) * C1355 +
            (C15713 + C15714 + C15715) * C1350 -
            (C15478 * C3553 + C15475 * C3558 + C15477 * C880 + C15474 * C893 +
             C15476 * C632 + C15473 * C639) *
                C1356 -
            (C15478 * C3559 + C15475 * C3562 + C15477 * C894 + C15474 * C904 +
             C15476 * C640 + C15473 * C647) *
                C50837) *
               C50765 * C50938) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1482 +
            (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
            C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
               C50765 * C10863 +
           (C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
            C3060 * C1484 + C3061 * C1479) *
               C50765 * C10864 +
           (C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
            C8729 * C1484 + C8730 * C1479) *
               C50765 * C10865 +
           (C3060 * C1482 + C3061 * C51099 - C8729 * C1483 - C8730 * C51087 +
            C11236 * C1484 + C11237 * C1479) *
               C50765 * C10866) *
              C1480 +
          ((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C50765 * C10863 +
           (C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C50765 * C10864 +
           (C9619 - (C9618 + C9617) + C9620 - C9621 - C9622) * C50765 * C10865 +
           (C8615 * C1483 - (C2939 * C51099 + C2938 * C1482) + C8616 * C51087 -
            (C117 * C8717 + C50950 * C8720) * C1484 -
            (C117 * C8721 + C50950 * C8723) * C1479) *
               C50765 * C10866) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C2434 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C2435 +
            (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C2436) *
               C51067 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C2434 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C2435 +
            (C3993 + C3994 - C3995 - C3996 + C3997 + C3998) * C2436) *
               C50938) *
              C1480 +
          (((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C2434 +
            (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C2435 +
            (C1500 - (C1499 + C1498) + C1501 - C1502 - C1503) * C2436) *
               C51067 +
           ((C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C2434 +
            (C3995 - (C3994 + C3993) + C3996 - C3997 - C3998) * C2435 +
            (C679 * C1483 - (C352 * C51099 + C351 * C1482) + C680 * C51087 -
             (C117 * C764 + C50950 * C771) * C1484 -
             (C117 * C772 + C50950 * C776) * C1479) *
                C2436) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1482 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51099 -
            (C18458 + C18459 + C18460) * C1483 -
            (C18461 + C18462 + C18463) * C51087 +
            (C18768 + C18769 + C18770) * C1484 +
            (C18771 + C18772 + C18773) * C1479) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C1482 +
            (C18463 + C18462 + C18461) * C51099 -
            (C18770 + C18769 + C18768) * C1483 -
            (C18773 + C18772 + C18771) * C51087 +
            (C18886 + C18885 + C18884) * C1484 +
            (C18889 + C18888 + C18887) * C1479) *
               C50765 * C50938) *
              C1480 +
          (((C15706 + C15705 + C15704) * C1483 -
            ((C15521 + C15520 + C15519) * C51099 +
             (C15518 + C15517 + C15516) * C1482) +
            (C15709 + C15708 + C15707) * C51087 -
            (C16058 + C16057 + C16056) * C1484 -
            (C16061 + C16060 + C16059) * C1479) *
               C50765 * C51067 +
           ((C16056 + C16057 + C16058) * C1483 -
            ((C15707 + C15708 + C15709) * C51099 +
             (C15704 + C15705 + C15706) * C1482) +
            (C16059 + C16060 + C16061) * C51087 -
            (C15478 * C9197 + C15475 * C9200 + C15477 * C3208 + C15474 * C3212 +
             C15476 * C762 + C15473 * C767) *
                C1484 -
            (C15478 * C9201 + C15475 * C9203 + C15477 * C3213 + C15474 * C3217 +
             C15476 * C768 + C15473 * C774) *
                C1479) *
               C50765 * C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C50765 * C10863 +
            (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C50765 * C10864 +
            (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C50765 * C10865 +
            (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C1360 - (C1359 + C1358) + C1361) * C50765 * C10863 +
            (C3828 - (C3827 + C3826) + C3829) * C50765 * C10864 +
            (C9465 - (C9464 + C9463) + C9466) * C50765 * C10865 +
            (C8615 * C1356 - (C2939 * C1350 + C2938 * C1355) + C8616 * C50837) *
                C50765 * C10866) *
               C50792) *
              C51055 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C50765 * C10863 +
            (C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C50765 * C10864 +
            (C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C50765 * C10865 +
            (C11344 * C1356 - (C8894 * C1350 + C8893 * C1355) +
             C11345 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C1641 + C1640 - C1662 - C1663) * C50765 * C10863 +
            (C4195 + C4194 - C4193 - C4196) * C50765 * C10864 +
            (C9819 + C9818 - C9817 - C9820) * C50765 * C10865 +
            (C8895 * C1355 + C8896 * C1350 -
             (C117 * C8877 + C50950 * C8880) * C1356 -
             (C117 * C8881 + C50950 * C8883) * C50837) *
                C50765 * C10866) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C2434 +
             (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
                C51067 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C2434 +
             (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
                C50938) *
               C1480 +
           (((C1360 - (C1359 + C1358) + C1361) * C2434 +
             (C1364 - (C1363 + C1362) + C1365) * C2435 +
             (C1368 - (C1367 + C1366) + C1369) * C2436) *
                C51067 +
            ((C3828 - (C3827 + C3826) + C3829) * C2434 +
             (C3832 - (C3831 + C3830) + C3833) * C2435 +
             (C3834 - (C3835 + C3836) + C3837) * C2436) *
                C50938) *
               C50792) *
              C51055 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C2434 +
             (C1662 - (C1640 + C1641) + C1663) * C2435 +
             (C1664 - (C1646 + C1647) + C1665) * C2436) *
                C51067 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C2434 +
             (C4193 - (C4194 + C4195) + C4196) * C2435 +
             (C4197 - (C4198 + C4199) + C4200) * C2436) *
                C50938) *
               C1480 +
           (((C1641 + C1640 - C1662 - C1663) * C2434 +
             (C1647 + C1646 - C1664 - C1665) * C2435 +
             (C1653 + C1652 - C1666 - C1667) * C2436) *
                C51067 +
            ((C4195 + C4194 - C4193 - C4196) * C2434 +
             (C4199 + C4198 - C4197 - C4200) * C2435 +
             (C1660 * C1355 + C1661 * C1350 -
              (C117 * C882 + C50950 * C897) * C1356 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C2436) *
                C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C1355 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C1350 -
             (C18458 + C18459 + C18460) * C1356 -
             (C18461 + C18462 + C18463) * C50837) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C1355 +
             (C18463 + C18462 + C18461) * C1350 -
             (C18770 + C18769 + C18768) * C1356 -
             (C18773 + C18772 + C18771) * C50837) *
                C50765 * C50938) *
               C1480 +
           (((C15706 + C15705 + C15704) * C1356 -
             ((C15521 + C15520 + C15519) * C1350 +
              (C15518 + C15517 + C15516) * C1355) +
             (C15709 + C15708 + C15707) * C50837) *
                C50765 * C51067 +
            ((C16056 + C16057 + C16058) * C1356 -
             ((C15707 + C15708 + C15709) * C1350 +
              (C15704 + C15705 + C15706) * C1355) +
             (C16059 + C16060 + C16061) * C50837) *
                C50765 * C50938) *
               C50792) *
              C51055 +
          ((((C19060 + C19061 + C19062) * C1356 -
             ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
               C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                  C1350 +
              (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
               C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                  C1355) +
             (C19063 + C19064 + C19065) * C50837) *
                C50765 * C51067 +
            ((C19068 + C19067 + C19066) * C1356 -
             ((C19065 + C19064 + C19063) * C1350 +
              (C19062 + C19061 + C19060) * C1355) +
             (C19071 + C19070 + C19069) * C50837) *
                C50765 * C50938) *
               C1480 +
           (((C15886 + C15887 + C15888) * C1355 +
             (C15889 + C15890 + C15891) * C1350 -
             (C17226 + C17225 + C17224) * C1356 -
             (C17229 + C17228 + C17227) * C50837) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C1355 +
             (C17227 + C17228 + C17229) * C1350 -
             (C15478 * C9308 + C15475 * C9311 + C15477 * C3552 +
              C15474 * C3556 + C15476 * C878 + C15473 * C889) *
                 C1356 -
             (C15478 * C9310 + C15475 * C9314 + C15477 * C3557 +
              C15474 * C3561 + C15476 * C890 + C15473 * C902) *
                 C50837) *
                C50765 * C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C50765 * C10863 +
            (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C50765 * C10864 +
            (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C50765 * C10865 +
            (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
                C50765 * C10866) *
               C51046 +
           ((C1360 - (C1359 + C1358) + C1361) * C50765 * C10863 +
            (C3828 - (C3827 + C3826) + C3829) * C50765 * C10864 +
            (C9465 - (C9464 + C9463) + C9466) * C50765 * C10865 +
            (C8615 * C1356 - (C2939 * C1350 + C2938 * C1355) + C8616 * C50837) *
                C50765 * C10866) *
               C50792) *
              C1765 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C50765 * C10863 +
            (C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C50765 * C10864 +
            (C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C50765 * C10865 +
            (C11344 * C1356 - (C8894 * C1350 + C8893 * C1355) +
             C11345 * C50837) *
                C50765 * C10866) *
               C51046 +
           ((C1641 + C1640 - C1662 - C1663) * C50765 * C10863 +
            (C4195 + C4194 - C4193 - C4196) * C50765 * C10864 +
            (C9819 + C9818 - C9817 - C9820) * C50765 * C10865 +
            (C8895 * C1355 + C8896 * C1350 -
             (C117 * C8877 + C50950 * C8880) * C1356 -
             (C117 * C8881 + C50950 * C8883) * C50837) *
                C50765 * C10866) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C2434 +
             (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
                C51067 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C2434 +
             (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
                C50938) *
               C51046 +
           (((C1360 - (C1359 + C1358) + C1361) * C2434 +
             (C1364 - (C1363 + C1362) + C1365) * C2435 +
             (C1368 - (C1367 + C1366) + C1369) * C2436) *
                C51067 +
            ((C3828 - (C3827 + C3826) + C3829) * C2434 +
             (C3832 - (C3831 + C3830) + C3833) * C2435 +
             (C3834 - (C3835 + C3836) + C3837) * C2436) *
                C50938) *
               C50792) *
              C1765 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C2434 +
             (C1662 - (C1640 + C1641) + C1663) * C2435 +
             (C1664 - (C1646 + C1647) + C1665) * C2436) *
                C51067 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C2434 +
             (C4193 - (C4194 + C4195) + C4196) * C2435 +
             (C4197 - (C4198 + C4199) + C4200) * C2436) *
                C50938) *
               C51046 +
           (((C1641 + C1640 - C1662 - C1663) * C2434 +
             (C1647 + C1646 - C1664 - C1665) * C2435 +
             (C1653 + C1652 - C1666 - C1667) * C2436) *
                C51067 +
            ((C4195 + C4194 - C4193 - C4196) * C2434 +
             (C4199 + C4198 - C4197 - C4200) * C2435 +
             (C1660 * C1355 + C1661 * C1350 -
              (C117 * C882 + C50950 * C897) * C1356 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C2436) *
                C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C1355 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C1350 -
             (C18458 + C18459 + C18460) * C1356 -
             (C18461 + C18462 + C18463) * C50837) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C1355 +
             (C18463 + C18462 + C18461) * C1350 -
             (C18770 + C18769 + C18768) * C1356 -
             (C18773 + C18772 + C18771) * C50837) *
                C50765 * C50938) *
               C51046 +
           (((C15706 + C15705 + C15704) * C1356 -
             ((C15521 + C15520 + C15519) * C1350 +
              (C15518 + C15517 + C15516) * C1355) +
             (C15709 + C15708 + C15707) * C50837) *
                C50765 * C51067 +
            ((C16056 + C16057 + C16058) * C1356 -
             ((C15707 + C15708 + C15709) * C1350 +
              (C15704 + C15705 + C15706) * C1355) +
             (C16059 + C16060 + C16061) * C50837) *
                C50765 * C50938) *
               C50792) *
              C1765 +
          ((((C19060 + C19061 + C19062) * C1356 -
             ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
               C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                  C1350 +
              (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
               C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                  C1355) +
             (C19063 + C19064 + C19065) * C50837) *
                C50765 * C51067 +
            ((C19068 + C19067 + C19066) * C1356 -
             ((C19065 + C19064 + C19063) * C1350 +
              (C19062 + C19061 + C19060) * C1355) +
             (C19071 + C19070 + C19069) * C50837) *
                C50765 * C50938) *
               C51046 +
           (((C15886 + C15887 + C15888) * C1355 +
             (C15889 + C15890 + C15891) * C1350 -
             (C17226 + C17225 + C17224) * C1356 -
             (C17229 + C17228 + C17227) * C50837) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C1355 +
             (C17227 + C17228 + C17229) * C1350 -
             (C15478 * C9308 + C15475 * C9311 + C15477 * C3552 +
              C15474 * C3556 + C15476 * C878 + C15473 * C889) *
                 C1356 -
             (C15478 * C9310 + C15475 * C9314 + C15477 * C3557 +
              C15474 * C3561 + C15476 * C890 + C15473 * C902) *
                 C50837) *
                C50765 * C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1482 +
            (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
            C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
               C50765 * C10863 +
           (C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
            C3060 * C1484 + C3061 * C1479) *
               C50765 * C10864 +
           (C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
            C8729 * C1484 + C8730 * C1479) *
               C50765 * C10865 +
           (C3060 * C1482 + C3061 * C51099 - C8729 * C1483 - C8730 * C51087 +
            C11236 * C1484 + C11237 * C1479) *
               C50765 * C10866) *
              C50787 * C1765 +
          ((C3236 * C1483 -
            ((C117 * C480 + C50950 * C488) * C51099 +
             (C117 * C470 + C50950 * C481) * C1482) +
            C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
               C50765 * C10863 +
           (C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) + C3239 * C51087 -
            C8893 * C1484 - C8894 * C1479) *
               C50765 * C10864 +
           (C8893 * C1483 - (C3239 * C51099 + C3238 * C1482) + C8894 * C51087 -
            C11344 * C1484 - C11345 * C1479) *
               C50765 * C10865 +
           (C11344 * C1483 - (C8894 * C51099 + C8893 * C1482) +
            C11345 * C51087 - (C117 * C11335 + C50950 * C11336) * C1484 -
            (C117 * C11337 + C50950 * C11338) * C1479) *
               C50765 * C10866) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C2434 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C2435 +
            (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C2436) *
               C51067 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C2434 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C2435 +
            (C3993 + C3994 - C3995 - C3996 + C3997 + C3998) * C2436) *
               C50938) *
              C50787 * C1765 +
          (((C3236 * C1483 -
             ((C117 * C480 + C50950 * C488) * C51099 +
              (C117 * C470 + C50950 * C481) * C1482) +
             C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
                C2434 +
            (C1656 * C1483 - (C508 * C51099 + C507 * C1482) + C1657 * C51087 -
             C3240 * C1484 - C3241 * C1479) *
                C2435 +
            (C1658 * C1483 - (C510 * C51099 + C509 * C1482) + C1659 * C51087 -
             C3242 * C1484 - C3243 * C1479) *
                C2436) *
               C51067 +
           ((C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) + C3239 * C51087 -
             (C117 * C3207 + C50950 * C3210) * C1484 -
             (C117 * C3211 + C50950 * C3216) * C1479) *
                C2434 +
            (C3240 * C1483 - (C1657 * C51099 + C1656 * C1482) + C3241 * C51087 -
             (C117 * C3208 + C50950 * C3212) * C1484 -
             (C117 * C3213 + C50950 * C3217) * C1479) *
                C2435 +
            (C3242 * C1483 - (C1659 * C51099 + C1658 * C1482) + C3243 * C51087 -
             (C117 * C3209 + C50950 * C3214) * C1484 -
             (C117 * C3215 + C50950 * C3218) * C1479) *
                C2436) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1482 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51099 -
            (C18458 + C18459 + C18460) * C1483 -
            (C18461 + C18462 + C18463) * C51087 +
            (C18768 + C18769 + C18770) * C1484 +
            (C18771 + C18772 + C18773) * C1479) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C1482 +
            (C18463 + C18462 + C18461) * C51099 -
            (C18770 + C18769 + C18768) * C1483 -
            (C18773 + C18772 + C18771) * C51087 +
            (C18886 + C18885 + C18884) * C1484 +
            (C18889 + C18888 + C18887) * C1479) *
               C50765 * C50938) *
              C50787 * C1765 +
          (((C19060 + C19061 + C19062) * C1483 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C51099 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C1482) +
            (C19063 + C19064 + C19065) * C51087 -
            (C19066 + C19067 + C19068) * C1484 -
            (C19069 + C19070 + C19071) * C1479) *
               C50765 * C51067 +
           ((C19068 + C19067 + C19066) * C1483 -
            ((C19065 + C19064 + C19063) * C51099 +
             (C19062 + C19061 + C19060) * C1482) +
            (C19071 + C19070 + C19069) * C51087 -
            (C15478 * C11617 + C15475 * C11619 + C15477 * C9196 +
             C15474 * C9198 + C15476 * C3207 + C15473 * C3210) *
                C1484 -
            (C15478 * C11618 + C15475 * C11620 + C15477 * C9199 +
             C15474 * C9202 + C15476 * C3211 + C15473 * C3216) *
                C1479) *
               C50765 * C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
               C50765 * C10866) *
              C50787 * C51100 +
          ((C3236 * C1356 -
            ((C117 * C480 + C50950 * C488) * C1350 +
             (C117 * C470 + C50950 * C481) * C1355) +
            C3237 * C50837) *
               C50765 * C10863 +
           (C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
               C50765 * C10864 +
           (C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
               C50765 * C10865 +
           (C11344 * C1356 - (C8894 * C1350 + C8893 * C1355) +
            C11345 * C50837) *
               C50765 * C10866) *
              C50787 * C51090 +
          (((C117 * C1008 + C50950 * C1013) * C1355 +
            (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
            C3569 * C50837) *
               C50765 * C10863 +
           (C3568 * C1355 + C3569 * C1350 - C9209 * C1356 - C9210 * C50837) *
               C50765 * C10864 +
           (C9209 * C1355 + C9210 * C1350 - C11550 * C1356 - C11551 * C50837) *
               C50765 * C10865 +
           (C11550 * C1355 + C11551 * C1350 -
            (C117 * C11541 + C50950 * C11542) * C1356 -
            (C117 * C11543 + C50950 * C11544) * C50837) *
               C50765 * C10866) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C2434 +
            (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
               C51067 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C2434 +
            (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
               C50938) *
              C50787 * C51100 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C2434 +
            (C1662 - (C1640 + C1641) + C1663) * C2435 +
            (C1664 - (C1646 + C1647) + C1665) * C2436) *
               C51067 +
           ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C2434 +
            (C4193 - (C4194 + C4195) + C4196) * C2435 +
            (C4197 - (C4198 + C4199) + C4200) * C2436) *
               C50938) *
              C50787 * C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C1355 +
             (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
             C3569 * C50837) *
                C2434 +
            (C1041 * C1355 + C1042 * C1350 - C3398 * C1356 - C3399 * C50837) *
                C2435 +
            (C1043 * C1355 + C1044 * C1350 - C3400 * C1356 - C3401 * C50837) *
                C2436) *
               C51067 +
           ((C3568 * C1355 + C3569 * C1350 -
             (C117 * C3551 + C50950 * C3554) * C1356 -
             (C117 * C3555 + C50950 * C3560) * C50837) *
                C2434 +
            (C3398 * C1355 + C3399 * C1350 -
             (C117 * C3552 + C50950 * C3556) * C1356 -
             (C117 * C3557 + C50950 * C3561) * C50837) *
                C2435 +
            (C3400 * C1355 + C3401 * C1350 -
             (C117 * C3553 + C50950 * C3558) * C1356 -
             (C117 * C3559 + C50950 * C3562) * C50837) *
                C2436) *
               C50938) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C1355 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C1350 -
            (C18458 + C18459 + C18460) * C1356 -
            (C18461 + C18462 + C18463) * C50837) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C1355 +
            (C18463 + C18462 + C18461) * C1350 -
            (C18770 + C18769 + C18768) * C1356 -
            (C18773 + C18772 + C18771) * C50837) *
               C50765 * C50938) *
              C50787 * C51100 +
          (((C19060 + C19061 + C19062) * C1356 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C1350 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C1355) +
            (C19063 + C19064 + C19065) * C50837) *
               C50765 * C51067 +
           ((C19068 + C19067 + C19066) * C1356 -
            ((C19065 + C19064 + C19063) * C1350 +
             (C19062 + C19061 + C19060) * C1355) +
            (C19071 + C19070 + C19069) * C50837) *
               C50765 * C50938) *
              C50787 * C51090 +
          (((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 + C15474 * C1247 +
             C15478 * C6548 + C15475 * C6554) *
                C1355 +
            (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 + C15474 * C1251 +
             C15478 * C6553 + C15475 * C6557) *
                C1350 -
            (C19376 + C19377 + C19378) * C1356 -
            (C19379 + C19380 + C19381) * C50837) *
               C50765 * C51067 +
           ((C19378 + C19377 + C19376) * C1355 +
            (C19381 + C19380 + C19379) * C1350 -
            (C15478 * C13897 + C15475 * C13900 + C15477 * C9309 +
             C15474 * C9313 + C15476 * C3551 + C15473 * C3554) *
                C1356 -
            (C15478 * C13899 + C15475 * C13903 + C15477 * C9312 +
             C15474 * C9315 + C15476 * C3555 + C15473 * C3560) *
                C50837) *
               C50765 * C50938) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50950 * C126) * C118 +
                 (C117 * C127 + C50950 * C140) * C50821) *
                    C2434 +
                (C178 + C179) * C2435 + C188 * C2436) *
                   C51067 +
               (((C117 * C296 + C50950 * C302) * C118 +
                 (C117 * C303 + C50950 * C314) * C50821) *
                    C2434 +
                (C2440 + C2441) * C2435 + C2448 * C2436) *
                   C50938) *
                  C112 -
              ((C2449 * C2436 + (C2443 + C2442) * C2435 +
                (C2441 + C2440) * C2434) *
                   C50938 +
               (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                   C51067) *
                  C113 +
              ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
               (C2448 * C2434 + (C2445 + C2444) * C2435 +
                (C2446 + C2447) * C2436) *
                   C50938) *
                  C114 -
              ((((C117 * C313 + C50950 * C319) * C50821 +
                 (C117 * C301 + C50950 * C312) * C118) *
                    C2436 +
                (C2447 + C2446) * C2435 + C2449 * C2434) *
                   C50938 +
               ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51067) *
                  C115) *
             C50851 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50950 * C126) * C627 +
                 (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
                 C2613 * C623 + C2936 * C629 + C2937 * C624) *
                    C2434 +
                (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
                (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
                   C51067 +
               ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
                 (C117 * C761 + C50950 * C765) * C629 +
                 (C117 * C766 + C50950 * C773) * C624) *
                    C2434 +
                (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
                (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
                   C50938) *
                  C51046 +
              (((C653 - (C652 + C651) + C654 - C681 - C682) * C2434 +
                (C661 - (C660 + C659) + C662 - C683 - C684) * C2435 +
                (C669 - (C668 + C667) + C670 - C685 - C686) * C2436) *
                   C51067 +
               ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C2434 +
                (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C2435 +
                (C679 * C628 - (C352 * C622 + C351 * C627) + C680 * C623 -
                 (C117 * C764 + C50950 * C771) * C629 -
                 (C117 * C772 + C50950 * C776) * C624) *
                    C2436) *
                   C50938) *
                  C50792) *
             C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C51046 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C50792) *
              C1005 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C50792 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             (C3237 * C50821 + C3236 * C118) * C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C51046) *
              C1006 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C2434 +
             (C1047 + C1048) * C2435 + (C1049 + C1050) * C2436) *
                C51067 +
            (((C117 * C1150 + C50950 * C1154) * C118 +
              (C117 * C1155 + C50950 * C1162) * C50821) *
                 C2434 +
             (C3402 + C3403) * C2435 + (C3404 + C3405) * C2436) *
                C50938) *
               C51046 -
           ((((C117 * C1161 + C50950 * C1165) * C50821 +
              (C117 * C1153 + C50950 * C1160) * C118) *
                 C2436 +
             (C3405 + C3404) * C2435 + (C3403 + C3402) * C2434) *
                C50938 +
            ((C1052 + C1051) * C2436 + (C1050 + C1049) * C2435 +
             (C1048 + C1047) * C2434) *
                C51067) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C50765 * C10863 +
           (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
           (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
           (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
              C112 -
          ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
           (C8152 + C8151) * C50765 * C10865 +
           (C2441 + C2440) * C50765 * C10864 +
           (C179 + C178) * C50765 * C10863) *
              C113 +
          (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
           (C8154 + C8153) * C50765 * C10865 +
           (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
              C114 -
          (((C117 * C772 + C50950 * C776) * C50821 +
            (C117 * C764 + C50950 * C771) * C118) *
               C50765 * C10866 +
           (C8156 + C8155) * C50765 * C10865 + C2449 * C50765 * C10864 +
           C191 * C50765 * C10863) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            (C117 * C8716 + C50950 * C8718) * C629 +
            (C117 * C8719 + C50950 * C8722) * C624) *
               C50765 * C10866) *
              C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C50765 * C10863 +
           (C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C50765 * C10864 +
           (C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C50765 * C10865 +
           (C8615 * C628 - (C2939 * C622 + C2938 * C627) + C8616 * C623 -
            (C117 * C8717 + C50950 * C8720) * C629 -
            (C117 * C8721 + C50950 * C8723) * C624) *
               C50765 * C10866) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C51046 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C50792) *
              C1005 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C50792 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C51046) *
              C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C50765 * C10863 +
            (C3568 * C118 + C3569 * C50821) * C50765 * C10864 +
            (C9209 * C118 + C9210 * C50821) * C50765 * C10865 +
            ((C117 * C9196 + C50950 * C9198) * C118 +
             (C117 * C9199 + C50950 * C9202) * C50821) *
                C50765 * C10866) *
               C51046 -
           (((C117 * C9201 + C50950 * C9203) * C50821 +
             (C117 * C9197 + C50950 * C9200) * C118) *
                C50765 * C10866 +
            (C9050 + C9049) * C50765 * C10865 +
            (C3403 + C3402) * C50765 * C10864 +
            (C1048 + C1047) * C50765 * C10863) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C118 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C50821) *
               C50765 * C51067 +
           ((C15476 * C296 + C15473 * C302 + C15477 * C875 + C15474 * C883 +
             C15478 * C1150 + C15475 * C1154) *
                C118 +
            (C15476 * C303 + C15473 * C314 + C15477 * C884 + C15474 * C899 +
             C15478 * C1155 + C15475 * C1162) *
                C50821) *
               C50765 * C50938) *
              C112 -
          (((C15707 + C15708 + C15709) * C50821 +
            (C15704 + C15705 + C15706) * C118) *
               C50765 * C50938 +
           ((C15521 + C15520 + C15519) * C50821 +
            (C15518 + C15517 + C15516) * C118) *
               C50765 * C51067) *
              C113 +
          (((C15527 + C15526 + C15525) * C118 +
            (C15524 + C15523 + C15522) * C50821) *
               C50765 * C51067 +
           ((C15710 + C15711 + C15712) * C118 +
            (C15713 + C15714 + C15715) * C50821) *
               C50765 * C50938) *
              C114 -
          (((C15478 * C1161 + C15475 * C1165 + C15477 * C896 + C15474 * C905 +
             C15476 * C309 + C15473 * C317) *
                C50821 +
            (C15478 * C1153 + C15475 * C1160 + C15477 * C881 + C15474 * C895 +
             C15476 * C299 + C15473 * C308) *
                C118) *
               C50765 * C50938 +
           ((C15533 + C15532 + C15531) * C50821 +
            (C15530 + C15529 + C15528) * C118) *
               C50765 * C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C18458 + C18459 + C18460) * C628 -
            (C18461 + C18462 + C18463) * C623 +
            (C18768 + C18769 + C18770) * C629 +
            (C18771 + C18772 + C18773) * C624) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C627 +
            (C18463 + C18462 + C18461) * C622 -
            (C18770 + C18769 + C18768) * C628 -
            (C18773 + C18772 + C18771) * C623 +
            (C15476 * C761 + C15473 * C765 + C15477 * C3207 + C15474 * C3210 +
             C15478 * C9196 + C15475 * C9198) *
                C629 +
            (C15476 * C766 + C15473 * C773 + C15477 * C3211 + C15474 * C3216 +
             C15478 * C9199 + C15475 * C9202) *
                C624) *
               C50765 * C50938) *
              C51046 +
          (((C15706 + C15705 + C15704) * C628 -
            ((C15521 + C15520 + C15519) * C622 +
             (C15518 + C15517 + C15516) * C627) +
            (C15709 + C15708 + C15707) * C623 -
            (C16058 + C16057 + C16056) * C629 -
            (C16061 + C16060 + C16059) * C624) *
               C50765 * C51067 +
           ((C16056 + C16057 + C16058) * C628 -
            ((C15707 + C15708 + C15709) * C622 +
             (C15704 + C15705 + C15706) * C627) +
            (C16059 + C16060 + C16061) * C623 -
            (C15478 * C9197 + C15475 * C9200 + C15477 * C3208 + C15474 * C3212 +
             C15476 * C762 + C15473 * C767) *
                C629 -
            (C15478 * C9201 + C15475 * C9203 + C15477 * C3213 + C15474 * C3217 +
             C15476 * C768 + C15473 * C774) *
                C624) *
               C50765 * C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C118 +
             (C18463 + C18462 + C18461) * C50821) *
                C50765 * C50938) *
               C51046 -
           (((C15707 + C15708 + C15709) * C50821 +
             (C15704 + C15705 + C15706) * C118) *
                C50765 * C50938 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C50765 * C51067) *
               C50792) *
              C1005 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C118 +
             (C17227 + C17228 + C17229) * C50821) *
                C50765 * C50938) *
               C50792 -
           (((C19065 + C19064 + C19063) * C50821 +
             (C19062 + C19061 + C19060) * C118) *
                C50765 * C50938 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C50765 * C51067) *
               C51046) *
              C1006 +
          ((((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 +
              C15474 * C1247 + C15478 * C6548 + C15475 * C6554) *
                 C118 +
             (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 +
              C15474 * C1251 + C15478 * C6553 + C15475 * C6557) *
                 C50821) *
                C50765 * C51067 +
            ((C15476 * C1150 + C15473 * C1154 + C15477 * C3669 +
              C15474 * C3675 + C15478 * C13898 + C15475 * C13902) *
                 C118 +
             (C15476 * C1155 + C15473 * C1162 + C15477 * C3674 +
              C15474 * C3678 + C15478 * C13901 + C15475 * C13904) *
                 C50821) *
                C50765 * C50938) *
               C51046 -
           (((C15478 * C16617 + C15475 * C16618 + C15477 * C3672 +
              C15474 * C3677 + C15476 * C1157 + C15473 * C1163) *
                 C50821 +
             (C15478 * C16615 + C15475 * C16616 + C15477 * C3668 +
              C15474 * C3673 + C15476 * C1151 + C15473 * C1156) *
                 C118) *
                C50765 * C50938 +
            ((C16469 + C16468 + C16467) * C50821 +
             (C16466 + C16465 + C16464) * C118) *
                C50765 * C51067) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50950 * C126) * C294 +
                 (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
                 C2613 * C50837) *
                    C2434 +
                (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
                   C51067 +
               ((C2612 * C294 + C2613 * C51053 -
                 (C117 * C630 + C50950 * C635) * C295 -
                 (C117 * C636 + C50950 * C645) * C50837) *
                    C2434 +
                (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
                   C50938) *
                  C291 +
              (((C355 - (C322 + C321) + C356) * C2434 +
                (C357 - (C328 + C327) + C358) * C2435 +
                (C359 - (C334 + C333) + C360) * C2436) *
                   C51067 +
               ((C2602 - (C2601 + C2600) + C2603) * C2434 +
                (C2606 - (C2605 + C2604) + C2607) * C2435 +
                (C2608 - (C2609 + C2610) + C2611) * C2436) *
                   C50938) *
                  C292 +
              ((C365 * C2434 + C366 * C2435 +
                (C342 + C341 - C361 - C362) * C2436) *
                   C51067 +
               (C2616 * C2434 + (C2610 + C2609 - C2608 - C2611) * C2435 +
                (C353 * C294 + C354 * C51053 -
                 (C117 * C634 + C50950 * C643) * C295 -
                 (C117 * C644 + C50950 * C649) * C50837) *
                    C2436) *
                   C50938) *
                  C293) *
             C50851 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50950 * C126) * C757 +
                (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 -
                C2613 * C753 + C2936 * C759 + C2937 * C754 - C3060 * C760 -
                C3061 * C755) *
                   C2434 +
               (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
                C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
                   C2435 +
               (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
                C677 * C759 + C678 * C754 - C2940 * C760 - C2941 * C755) *
                   C2436) *
                  C51067 +
              ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
                C3060 * C759 + C3061 * C754 -
                (C117 * C3043 + C50950 * C3046) * C760 -
                (C117 * C3047 + C50950 * C3052) * C755) *
                   C2434 +
               (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
                C2938 * C759 + C2939 * C754 -
                (C117 * C3044 + C50950 * C3048) * C760 -
                (C117 * C3049 + C50950 * C3053) * C755) *
                   C2435 +
               (C348 * C757 + C349 * C752 - C677 * C758 - C678 * C753 +
                C2940 * C759 + C2941 * C754 -
                (C117 * C3045 + C50950 * C3050) * C760 -
                (C117 * C3051 + C50950 * C3054) * C755) *
                   C2436) *
                  C50938) *
             C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C2434 +
            (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
               C51067 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C2434 +
            (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
               C50938) *
              C50787 * C1005 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C2434 +
            (C1898 - (C1899 + C1900) + C1901) * C2435 +
            (C1902 - (C1903 + C1904) + C1905) * C2436) *
               C51067 +
           ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C2434 +
            (C3240 * C295 - (C1657 * C51053 + C1656 * C294) + C3241 * C50837) *
                C2435 +
            (C3242 * C295 - (C1659 * C51053 + C1658 * C294) + C3243 * C50837) *
                C2436) *
               C50938) *
              C50787 * C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C294 +
             (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
             C3569 * C50837) *
                C2434 +
            (C1041 * C294 + C1042 * C51053 - C3398 * C295 - C3399 * C50837) *
                C2435 +
            (C1043 * C294 + C1044 * C51053 - C3400 * C295 - C3401 * C50837) *
                C2436) *
               C51067 +
           ((C3568 * C294 + C3569 * C51053 -
             (C117 * C3551 + C50950 * C3554) * C295 -
             (C117 * C3555 + C50950 * C3560) * C50837) *
                C2434 +
            (C3398 * C294 + C3399 * C51053 -
             (C117 * C3552 + C50950 * C3556) * C295 -
             (C117 * C3557 + C50950 * C3561) * C50837) *
                C2435 +
            (C3400 * C294 + C3401 * C51053 -
             (C117 * C3553 + C50950 * C3558) * C295 -
             (C117 * C3559 + C50950 * C3562) * C50837) *
                C2436) *
               C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
               C50765 * C10866) *
              C291 +
          ((C355 - (C322 + C321) + C356) * C50765 * C10863 +
           (C2602 - (C2601 + C2600) + C2603) * C50765 * C10864 +
           (C8305 - (C8304 + C8303) + C8306) * C50765 * C10865 +
           (C8615 * C295 - (C2939 * C51053 + C2938 * C294) + C8616 * C50837) *
               C50765 * C10866) *
              C292 +
          (C365 * C50765 * C10863 + C2616 * C50765 * C10864 +
           (C8309 + C8308 - C8307 - C8310) * C50765 * C10865 +
           (C2940 * C294 + C2941 * C51053 -
            (C117 * C3045 + C50950 * C3050) * C295 -
            (C117 * C3051 + C50950 * C3054) * C50837) *
               C50765 * C10866) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
           C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
              C50765 * C10863 +
          (C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
           C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
              C50765 * C10864 +
          (C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
           C8729 * C759 + C8730 * C754 - C11236 * C760 - C11237 * C755) *
              C50765 * C10865 +
          (C3060 * C757 + C3061 * C752 - C8729 * C758 - C8730 * C753 +
           C11236 * C759 + C11237 * C754 -
           (C117 * C11227 + C50950 * C11228) * C760 -
           (C117 * C11229 + C50950 * C11230) * C755) *
              C50765 * C10866) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
               C50765 * C10866) *
              C50787 * C1005 +
          ((C3236 * C295 -
            ((C117 * C480 + C50950 * C488) * C51053 +
             (C117 * C470 + C50950 * C481) * C294) +
            C3237 * C50837) *
               C50765 * C10863 +
           (C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
               C50765 * C10864 +
           (C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
               C50765 * C10865 +
           (C11344 * C295 - (C8894 * C51053 + C8893 * C294) + C11345 * C50837) *
               C50765 * C10866) *
              C50787 * C1006 +
          (((C117 * C1008 + C50950 * C1013) * C294 +
            (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
            C3569 * C50837) *
               C50765 * C10863 +
           (C3568 * C294 + C3569 * C51053 - C9209 * C295 - C9210 * C50837) *
               C50765 * C10864 +
           (C9209 * C294 + C9210 * C51053 - C11550 * C295 - C11551 * C50837) *
               C50765 * C10865 +
           (C11550 * C294 + C11551 * C51053 -
            (C117 * C11541 + C50950 * C11542) * C295 -
            (C117 * C11543 + C50950 * C11544) * C50837) *
               C50765 * C10866) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C294 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51053 -
            (C18458 + C18459 + C18460) * C295 -
            (C18461 + C18462 + C18463) * C50837) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C294 +
            (C18463 + C18462 + C18461) * C51053 -
            (C15478 * C3551 + C15475 * C3554 + C15477 * C876 + C15474 * C885 +
             C15476 * C630 + C15473 * C635) *
                C295 -
            (C15478 * C3555 + C15475 * C3560 + C15477 * C886 + C15474 * C900 +
             C15476 * C636 + C15473 * C645) *
                C50837) *
               C50765 * C50938) *
              C291 +
          (((C15706 + C15705 + C15704) * C295 -
            ((C15521 + C15520 + C15519) * C51053 +
             (C15518 + C15517 + C15516) * C294) +
            (C15709 + C15708 + C15707) * C50837) *
               C50765 * C51067 +
           ((C16056 + C16057 + C16058) * C295 -
            ((C15707 + C15708 + C15709) * C51053 +
             (C15704 + C15705 + C15706) * C294) +
            (C16059 + C16060 + C16061) * C50837) *
               C50765 * C50938) *
              C292 +
          (((C15527 + C15526 + C15525) * C294 +
            (C15524 + C15523 + C15522) * C51053 -
            (C15712 + C15711 + C15710) * C295 -
            (C15715 + C15714 + C15713) * C50837) *
               C50765 * C51067 +
           ((C15710 + C15711 + C15712) * C294 +
            (C15713 + C15714 + C15715) * C51053 -
            (C15478 * C3553 + C15475 * C3558 + C15477 * C880 + C15474 * C893 +
             C15476 * C632 + C15473 * C639) *
                C295 -
            (C15478 * C3559 + C15475 * C3562 + C15477 * C894 + C15474 * C904 +
             C15476 * C640 + C15473 * C647) *
                C50837) *
               C50765 * C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
            C15478 * C1008 + C15475 * C1013) *
               C757 +
           (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
            C15478 * C1014 + C15475 * C1023) *
               C752 -
           (C18458 + C18459 + C18460) * C758 -
           (C18461 + C18462 + C18463) * C753 +
           (C18768 + C18769 + C18770) * C759 +
           (C18771 + C18772 + C18773) * C754 -
           (C18884 + C18885 + C18886) * C760 -
           (C18887 + C18888 + C18889) * C755) *
              C50765 * C51067 +
          ((C18460 + C18459 + C18458) * C757 +
           (C18463 + C18462 + C18461) * C752 -
           (C18770 + C18769 + C18768) * C758 -
           (C18773 + C18772 + C18771) * C753 +
           (C18886 + C18885 + C18884) * C759 +
           (C18889 + C18888 + C18887) * C754 -
           (C15478 * C11541 + C15475 * C11542 + C15477 * C8876 +
            C15474 * C8878 + C15476 * C3043 + C15473 * C3046) *
               C760 -
           (C15478 * C11543 + C15475 * C11544 + C15477 * C8879 +
            C15474 * C8882 + C15476 * C3047 + C15473 * C3052) *
               C755) *
              C50765 * C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C294 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51053 -
            (C18458 + C18459 + C18460) * C295 -
            (C18461 + C18462 + C18463) * C50837) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C294 +
            (C18463 + C18462 + C18461) * C51053 -
            (C18770 + C18769 + C18768) * C295 -
            (C18773 + C18772 + C18771) * C50837) *
               C50765 * C50938) *
              C50787 * C1005 +
          (((C19060 + C19061 + C19062) * C295 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C51053 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C294) +
            (C19063 + C19064 + C19065) * C50837) *
               C50765 * C51067 +
           ((C19068 + C19067 + C19066) * C295 -
            ((C19065 + C19064 + C19063) * C51053 +
             (C19062 + C19061 + C19060) * C294) +
            (C19071 + C19070 + C19069) * C50837) *
               C50765 * C50938) *
              C50787 * C1006 +
          (((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 + C15474 * C1247 +
             C15478 * C6548 + C15475 * C6554) *
                C294 +
            (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 + C15474 * C1251 +
             C15478 * C6553 + C15475 * C6557) *
                C51053 -
            (C19376 + C19377 + C19378) * C295 -
            (C19379 + C19380 + C19381) * C50837) *
               C50765 * C51067 +
           ((C19378 + C19377 + C19376) * C294 +
            (C19381 + C19380 + C19379) * C51053 -
            (C15478 * C13897 + C15475 * C13900 + C15477 * C9309 +
             C15474 * C9313 + C15476 * C3551 + C15473 * C3554) *
                C295 -
            (C15478 * C13899 + C15475 * C13903 + C15477 * C9312 +
             C15474 * C9315 + C15476 * C3555 + C15473 * C3560) *
                C50837) *
               C50765 * C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50950 * C126) * C118 +
                  (C117 * C127 + C50950 * C140) * C50821) *
                     C2434 +
                 (C178 + C179) * C2435 + C188 * C2436) *
                    C51067 +
                ((C2612 * C118 + C2613 * C50821) * C2434 +
                 (C2440 + C2441) * C2435 + C2448 * C2436) *
                    C50938) *
                   C291 -
               ((C2449 * C2436 + (C2443 + C2442) * C2435 +
                 (C2441 + C2440) * C2434) *
                    C50938 +
                (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                    C51067) *
                   C292 +
               ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
                (C2448 * C2434 + (C2445 + C2444) * C2435 +
                 (C2446 + C2447) * C2436) *
                    C50938) *
                   C293) *
                  C51055 +
              ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
                 (C519 + C520) * C2436) *
                    C51067 +
                ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
                 (C2767 + C2768) * C2436) *
                    C50938) *
                   C292 -
               ((C2769 * C2436 + (C2764 + C2763) * C2435 +
                 ((C117 * C884 + C50950 * C899) * C50821 +
                  (C117 * C875 + C50950 * C883) * C118) *
                     C2434) *
                    C50938 +
                (C524 * C2436 + (C516 + C515) * C2435 +
                 ((C117 * C480 + C50950 * C488) * C50821 +
                  (C117 * C470 + C50950 * C481) * C118) *
                     C2434) *
                    C51067) *
                   C291 -
               ((((C117 * C1635 + C50950 * C1636) * C50821 +
                  (C117 * C1633 + C50950 * C1634) * C118) *
                     C2436 +
                 (C2768 + C2767) * C2435 + C2769 * C2434) *
                    C50938 +
                ((C522 + C521) * C2436 + C523 * C2435 + C524 * C2434) *
                    C51067) *
                   C293) *
                  C50863) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50950 * C126) * C627 +
                 (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
                 C2613 * C623 + C2936 * C629 + C2937 * C624) *
                    C2434 +
                (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
                (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
                   C51067 +
               ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
                 C3060 * C629 + C3061 * C624) *
                    C2434 +
                (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
                (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
                   C50938) *
                  C50787 * C51055 +
              (((C3236 * C628 -
                 ((C117 * C480 + C50950 * C488) * C622 +
                  (C117 * C470 + C50950 * C481) * C627) +
                 C3237 * C623 - C3238 * C629 - C3239 * C624) *
                    C2434 +
                (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
                 C3240 * C629 - C3241 * C624) *
                    C2435 +
                (C1658 * C628 - (C510 * C622 + C509 * C627) + C1659 * C623 -
                 C3242 * C629 - C3243 * C624) *
                    C2436) *
                   C51067 +
               ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
                 (C117 * C3207 + C50950 * C3210) * C629 -
                 (C117 * C3211 + C50950 * C3216) * C624) *
                    C2434 +
                (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
                 (C117 * C3208 + C50950 * C3212) * C629 -
                 (C117 * C3213 + C50950 * C3217) * C624) *
                    C2435 +
                (C3242 * C628 - (C1659 * C622 + C1658 * C627) + C3243 * C623 -
                 (C117 * C3209 + C50950 * C3214) * C629 -
                 (C117 * C3215 + C50950 * C3218) * C624) *
                    C2436) *
                   C50938) *
                  C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51067 +
           ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
            C2448 * C2436) *
               C50938) *
              C50787 * C1232 -
          ((C2769 * C2436 + (C2764 + C2763) * C2435 +
            (C3237 * C50821 + C3236 * C118) * C2434) *
               C50938 +
           (C524 * C2436 + (C516 + C515) * C2435 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C2434) *
               C51067) *
              C50787 * C1233 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C2434 +
            (C1047 + C1048) * C2435 + (C1049 + C1050) * C2436) *
               C51067 +
           ((C3568 * C118 + C3569 * C50821) * C2434 + (C3402 + C3403) * C2435 +
            (C3404 + C3405) * C2436) *
               C50938) *
              C50787 * C1234 -
          ((((C117 * C3670 + C50950 * C3676) * C50821 +
             (C117 * C3667 + C50950 * C3671) * C118) *
                C2436 +
            ((C117 * C3672 + C50950 * C3677) * C50821 +
             (C117 * C3668 + C50950 * C3673) * C118) *
                C2435 +
            ((C117 * C3674 + C50950 * C3678) * C50821 +
             (C117 * C3669 + C50950 * C3675) * C118) *
                C2434) *
               C50938 +
           (((C117 * C1242 + C50950 * C1249) * C50821 +
             (C117 * C1237 + C50950 * C1243) * C118) *
                C2436 +
            ((C117 * C1244 + C50950 * C1250) * C50821 +
             (C117 * C1238 + C50950 * C1245) * C118) *
                C2435 +
            ((C117 * C1246 + C50950 * C1251) * C50821 +
             (C117 * C1239 + C50950 * C1247) * C118) *
                C2434) *
               C51067) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C291 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C292 +
           (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
            (C8154 + C8153) * C50765 * C10865 +
            (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
               C293) *
              C51055 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C292 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C291 -
           (((C117 * C3215 + C50950 * C3218) * C50821 +
             (C117 * C3209 + C50950 * C3214) * C118) *
                C50765 * C10866 +
            (C8460 + C8459) * C50765 * C10865 + C2769 * C50765 * C10864 +
            C524 * C50765 * C10863) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            C11236 * C629 + C11237 * C624) *
               C50765 * C10866) *
              C50787 * C51055 +
          ((C3236 * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            C3237 * C623 - C3238 * C629 - C3239 * C624) *
               C50765 * C10863 +
           (C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
            C8893 * C629 - C8894 * C624) *
               C50765 * C10864 +
           (C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
            C11344 * C629 - C11345 * C624) *
               C50765 * C10865 +
           (C11344 * C628 - (C8894 * C622 + C8893 * C627) + C11345 * C623 -
            (C117 * C11335 + C50950 * C11336) * C629 -
            (C117 * C11337 + C50950 * C11338) * C624) *
               C50765 * C10866) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C50765 * C10863 +
           (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
           (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
           (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
              C50787 * C1232 -
          ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
           (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
           (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
           ((C117 * C480 + C50950 * C488) * C50821 +
            (C117 * C470 + C50950 * C481) * C118) *
               C50765 * C10863) *
              C50787 * C1233 +
          (((C117 * C1008 + C50950 * C1013) * C118 +
            (C117 * C1014 + C50950 * C1023) * C50821) *
               C50765 * C10863 +
           (C3568 * C118 + C3569 * C50821) * C50765 * C10864 +
           (C9209 * C118 + C9210 * C50821) * C50765 * C10865 +
           (C11550 * C118 + C11551 * C50821) * C50765 * C10866) *
              C50787 * C1234 -
          (((C117 * C11618 + C50950 * C11620) * C50821 +
            (C117 * C11617 + C50950 * C11619) * C118) *
               C50765 * C10866 +
           ((C117 * C9312 + C50950 * C9315) * C50821 +
            (C117 * C9309 + C50950 * C9313) * C118) *
               C50765 * C10865 +
           ((C117 * C3674 + C50950 * C3678) * C50821 +
            (C117 * C3669 + C50950 * C3675) * C118) *
               C50765 * C10864 +
           ((C117 * C1246 + C50950 * C1251) * C50821 +
            (C117 * C1239 + C50950 * C1247) * C118) *
               C50765 * C10863) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C118 +
             (C18463 + C18462 + C18461) * C50821) *
                C50765 * C50938) *
               C291 -
           (((C15707 + C15708 + C15709) * C50821 +
             (C15704 + C15705 + C15706) * C118) *
                C50765 * C50938 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C50765 * C51067) *
               C292 +
           (((C15527 + C15526 + C15525) * C118 +
             (C15524 + C15523 + C15522) * C50821) *
                C50765 * C51067 +
            ((C15710 + C15711 + C15712) * C118 +
             (C15713 + C15714 + C15715) * C50821) *
                C50765 * C50938) *
               C293) *
              C51055 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C118 +
             (C17227 + C17228 + C17229) * C50821) *
                C50765 * C50938) *
               C292 -
           (((C15478 * C3674 + C15475 * C3678 + C15477 * C1155 +
              C15474 * C1162 + C15476 * C884 + C15473 * C899) *
                 C50821 +
             (C15478 * C3669 + C15475 * C3675 + C15477 * C1150 +
              C15474 * C1154 + C15476 * C875 + C15473 * C883) *
                 C118) *
                C50765 * C50938 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C50765 * C51067) *
               C291 -
           (((C15478 * C3670 + C15475 * C3676 + C15477 * C1159 +
              C15474 * C1164 + C15476 * C892 + C15473 * C903) *
                 C50821 +
             (C15478 * C3667 + C15475 * C3671 + C15477 * C1152 +
              C15474 * C1158 + C15476 * C879 + C15473 * C891) *
                 C118) *
                C50765 * C50938 +
            ((C15897 + C15896 + C15895) * C50821 +
             (C15894 + C15893 + C15892) * C118) *
                C50765 * C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C18458 + C18459 + C18460) * C628 -
            (C18461 + C18462 + C18463) * C623 +
            (C18768 + C18769 + C18770) * C629 +
            (C18771 + C18772 + C18773) * C624) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C627 +
            (C18463 + C18462 + C18461) * C622 -
            (C18770 + C18769 + C18768) * C628 -
            (C18773 + C18772 + C18771) * C623 +
            (C18886 + C18885 + C18884) * C629 +
            (C18889 + C18888 + C18887) * C624) *
               C50765 * C50938) *
              C50787 * C51055 +
          (((C19060 + C19061 + C19062) * C628 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C622 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C627) +
            (C19063 + C19064 + C19065) * C623 -
            (C19066 + C19067 + C19068) * C629 -
            (C19069 + C19070 + C19071) * C624) *
               C50765 * C51067 +
           ((C19068 + C19067 + C19066) * C628 -
            ((C19065 + C19064 + C19063) * C622 +
             (C19062 + C19061 + C19060) * C627) +
            (C19071 + C19070 + C19069) * C623 -
            (C15478 * C11617 + C15475 * C11619 + C15477 * C9196 +
             C15474 * C9198 + C15476 * C3207 + C15473 * C3210) *
                C629 -
            (C15478 * C11618 + C15475 * C11620 + C15477 * C9199 +
             C15474 * C9202 + C15476 * C3211 + C15473 * C3216) *
                C624) *
               C50765 * C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C118 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C50821) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C118 +
            (C18463 + C18462 + C18461) * C50821) *
               C50765 * C50938) *
              C50787 * C1232 -
          (((C19065 + C19064 + C19063) * C50821 +
            (C19062 + C19061 + C19060) * C118) *
               C50765 * C50938 +
           ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 + C15474 * C1023 +
             C15476 * C480 + C15473 * C488) *
                C50821 +
            (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 + C15474 * C1013 +
             C15476 * C470 + C15473 * C481) *
                C118) *
               C50765 * C51067) *
              C50787 * C1233 +
          (((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 + C15474 * C1247 +
             C15478 * C6548 + C15475 * C6554) *
                C118 +
            (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 + C15474 * C1251 +
             C15478 * C6553 + C15475 * C6557) *
                C50821) *
               C50765 * C51067 +
           ((C19378 + C19377 + C19376) * C118 +
            (C19381 + C19380 + C19379) * C50821) *
               C50765 * C50938) *
              C50787 * C1234 -
          (((C15478 * C19480 + C15475 * C19482 + C15477 * C13901 +
             C15474 * C13904 + C15476 * C3674 + C15473 * C3678) *
                C50821 +
            (C15478 * C19479 + C15475 * C19481 + C15477 * C13898 +
             C15474 * C13902 + C15476 * C3669 + C15473 * C3675) *
                C118) *
               C50765 * C50938 +
           ((C15478 * C16721 + C15475 * C16724 + C15477 * C6553 +
             C15474 * C6557 + C15476 * C1246 + C15473 * C1251) *
                C50821 +
            (C15478 * C16718 + C15475 * C16722 + C15477 * C6548 +
             C15474 * C6554 + C15476 * C1239 + C15473 * C1247) *
                C118) *
               C50765 * C51067) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C51098 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C51084 +
           (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
            (C8154 + C8153) * C50765 * C10865 +
            (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
               C1354) *
              C1765 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C51084 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C51098 -
           (((C117 * C3215 + C50950 * C3218) * C50821 +
             (C117 * C3209 + C50950 * C3214) * C118) *
                C50765 * C10866 +
            (C8460 + C8459) * C50765 * C10865 + C2769 * C50765 * C10864 +
            C524 * C50765 * C10863) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C51098 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C51084 +
           ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
            (C2448 * C2434 + (C2445 + C2444) * C2435 +
             (C2446 + C2447) * C2436) *
                C50938) *
               C1354) *
              C1765 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C51084 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             (C3237 * C50821 + C3236 * C118) * C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C51098 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C2436 +
             (C2768 + C2767) * C2435 + C2769 * C2434) *
                C50938 +
            ((C522 + C521) * C2436 + C523 * C2435 + C524 * C2434) * C51067) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C118 +
             (C18463 + C18462 + C18461) * C50821) *
                C50765 * C50938) *
               C51098 -
           (((C15707 + C15708 + C15709) * C50821 +
             (C15704 + C15705 + C15706) * C118) *
                C50765 * C50938 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C50765 * C51067) *
               C51084 +
           (((C15527 + C15526 + C15525) * C118 +
             (C15524 + C15523 + C15522) * C50821) *
                C50765 * C51067 +
            ((C15710 + C15711 + C15712) * C118 +
             (C15713 + C15714 + C15715) * C50821) *
                C50765 * C50938) *
               C1354) *
              C1765 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C118 +
             (C17227 + C17228 + C17229) * C50821) *
                C50765 * C50938) *
               C51084 -
           (((C19065 + C19064 + C19063) * C50821 +
             (C19062 + C19061 + C19060) * C118) *
                C50765 * C50938 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C50765 * C51067) *
               C51098 -
           (((C15478 * C3670 + C15475 * C3676 + C15477 * C1159 +
              C15474 * C1164 + C15476 * C892 + C15473 * C903) *
                 C50821 +
             (C15478 * C3667 + C15475 * C3671 + C15477 * C1152 +
              C15474 * C1158 + C15476 * C879 + C15473 * C891) *
                 C118) *
                C50765 * C50938 +
            ((C15897 + C15896 + C15895) * C50821 +
             (C15894 + C15893 + C15892) * C118) *
                C50765 * C51067) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C50765 * C10863 +
            (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C50765 * C10864 +
            (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C50765 * C10865 +
            (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C355 - (C322 + C321) + C356) * C50765 * C10863 +
            (C2602 - (C2601 + C2600) + C2603) * C50765 * C10864 +
            (C8305 - (C8304 + C8303) + C8306) * C50765 * C10865 +
            (C8615 * C295 - (C2939 * C51053 + C2938 * C294) + C8616 * C50837) *
                C50765 * C10866) *
               C50792) *
              C1765 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C50765 * C10863 +
            (C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C50765 * C10864 +
            (C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                C50765 * C10865 +
            (C11344 * C295 - (C8894 * C51053 + C8893 * C294) +
             C11345 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C1900 + C1899 - C1898 - C1901) * C50765 * C10863 +
            (C4543 + C4542 - C4541 - C4544) * C50765 * C10864 +
            (C10163 + C10162 - C10161 - C10164) * C50765 * C10865 +
            (C8895 * C294 + C8896 * C51053 -
             (C117 * C8877 + C50950 * C8880) * C295 -
             (C117 * C8881 + C50950 * C8883) * C50837) *
                C50765 * C10866) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C294 +
              (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
              C2613 * C50837) *
                 C2434 +
             (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
                C51067 +
            ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                 C2434 +
             (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
                C50938) *
               C1480 +
           (((C355 - (C322 + C321) + C356) * C2434 +
             (C357 - (C328 + C327) + C358) * C2435 +
             (C359 - (C334 + C333) + C360) * C2436) *
                C51067 +
            ((C2602 - (C2601 + C2600) + C2603) * C2434 +
             (C2606 - (C2605 + C2604) + C2607) * C2435 +
             (C2608 - (C2609 + C2610) + C2611) * C2436) *
                C50938) *
               C50792) *
              C1765 +
          ((((C3236 * C295 -
              ((C117 * C480 + C50950 * C488) * C51053 +
               (C117 * C470 + C50950 * C481) * C294) +
              C3237 * C50837) *
                 C2434 +
             (C1898 - (C1899 + C1900) + C1901) * C2435 +
             (C1902 - (C1903 + C1904) + C1905) * C2436) *
                C51067 +
            ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                 C2434 +
             (C4541 - (C4542 + C4543) + C4544) * C2435 +
             (C4545 - (C4546 + C4547) + C4548) * C2436) *
                C50938) *
               C1480 +
           (((C1900 + C1899 - C1898 - C1901) * C2434 +
             (C1904 + C1903 - C1902 - C1905) * C2435 +
             (C1908 + C1907 - C1906 - C1909) * C2436) *
                C51067 +
            ((C4543 + C4542 - C4541 - C4544) * C2434 +
             (C4547 + C4546 - C4545 - C4548) * C2435 +
             (C1660 * C294 + C1661 * C51053 -
              (C117 * C882 + C50950 * C897) * C295 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C2436) *
                C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C294 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C51053 -
             (C18458 + C18459 + C18460) * C295 -
             (C18461 + C18462 + C18463) * C50837) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C294 +
             (C18463 + C18462 + C18461) * C51053 -
             (C18770 + C18769 + C18768) * C295 -
             (C18773 + C18772 + C18771) * C50837) *
                C50765 * C50938) *
               C1480 +
           (((C15706 + C15705 + C15704) * C295 -
             ((C15521 + C15520 + C15519) * C51053 +
              (C15518 + C15517 + C15516) * C294) +
             (C15709 + C15708 + C15707) * C50837) *
                C50765 * C51067 +
            ((C16056 + C16057 + C16058) * C295 -
             ((C15707 + C15708 + C15709) * C51053 +
              (C15704 + C15705 + C15706) * C294) +
             (C16059 + C16060 + C16061) * C50837) *
                C50765 * C50938) *
               C50792) *
              C1765 +
          ((((C19060 + C19061 + C19062) * C295 -
             ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
               C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                  C51053 +
              (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
               C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                  C294) +
             (C19063 + C19064 + C19065) * C50837) *
                C50765 * C51067 +
            ((C19068 + C19067 + C19066) * C295 -
             ((C19065 + C19064 + C19063) * C51053 +
              (C19062 + C19061 + C19060) * C294) +
             (C19071 + C19070 + C19069) * C50837) *
                C50765 * C50938) *
               C1480 +
           (((C15886 + C15887 + C15888) * C294 +
             (C15889 + C15890 + C15891) * C51053 -
             (C17226 + C17225 + C17224) * C295 -
             (C17229 + C17228 + C17227) * C50837) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C294 +
             (C17227 + C17228 + C17229) * C51053 -
             (C15478 * C9308 + C15475 * C9311 + C15477 * C3552 +
              C15474 * C3556 + C15476 * C878 + C15473 * C889) *
                 C295 -
             (C15478 * C9310 + C15475 * C9314 + C15477 * C3557 +
              C15474 * C3561 + C15476 * C890 + C15473 * C902) *
                 C50837) *
                C50765 * C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C1480 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C50792) *
              C51100 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C50792 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C1480) *
              C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C50765 * C10863 +
            (C3568 * C118 + C3569 * C50821) * C50765 * C10864 +
            (C9209 * C118 + C9210 * C50821) * C50765 * C10865 +
            (C11550 * C118 + C11551 * C50821) * C50765 * C10866) *
               C1480 -
           (((C117 * C9201 + C50950 * C9203) * C50821 +
             (C117 * C9197 + C50950 * C9200) * C118) *
                C50765 * C10866 +
            (C9050 + C9049) * C50765 * C10865 +
            (C3403 + C3402) * C50765 * C10864 +
            (C1048 + C1047) * C50765 * C10863) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C1480 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C50792) *
              C51100 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C50792 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             (C3237 * C50821 + C3236 * C118) * C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C1480) *
              C51090 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C2434 +
             (C1047 + C1048) * C2435 + (C1049 + C1050) * C2436) *
                C51067 +
            ((C3568 * C118 + C3569 * C50821) * C2434 + (C3402 + C3403) * C2435 +
             (C3404 + C3405) * C2436) *
                C50938) *
               C1480 -
           ((((C117 * C1161 + C50950 * C1165) * C50821 +
              (C117 * C1153 + C50950 * C1160) * C118) *
                 C2436 +
             (C3405 + C3404) * C2435 + (C3403 + C3402) * C2434) *
                C50938 +
            ((C1052 + C1051) * C2436 + (C1050 + C1049) * C2435 +
             (C1048 + C1047) * C2434) *
                C51067) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C118 +
             (C18463 + C18462 + C18461) * C50821) *
                C50765 * C50938) *
               C1480 -
           (((C15707 + C15708 + C15709) * C50821 +
             (C15704 + C15705 + C15706) * C118) *
                C50765 * C50938 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C50765 * C51067) *
               C50792) *
              C51100 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C118 +
             (C17227 + C17228 + C17229) * C50821) *
                C50765 * C50938) *
               C50792 -
           (((C19065 + C19064 + C19063) * C50821 +
             (C19062 + C19061 + C19060) * C118) *
                C50765 * C50938 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C50765 * C51067) *
               C1480) *
              C51090 +
          ((((C15476 * C1008 + C15473 * C1013 + C15477 * C1239 +
              C15474 * C1247 + C15478 * C6548 + C15475 * C6554) *
                 C118 +
             (C15476 * C1014 + C15473 * C1023 + C15477 * C1246 +
              C15474 * C1251 + C15478 * C6553 + C15475 * C6557) *
                 C50821) *
                C50765 * C51067 +
            ((C19378 + C19377 + C19376) * C118 +
             (C19381 + C19380 + C19379) * C50821) *
                C50765 * C50938) *
               C1480 -
           (((C15478 * C16617 + C15475 * C16618 + C15477 * C3672 +
              C15474 * C3677 + C15476 * C1157 + C15473 * C1163) *
                 C50821 +
             (C15478 * C16615 + C15475 * C16616 + C15477 * C3668 +
              C15474 * C3673 + C15476 * C1151 + C15473 * C1156) *
                 C118) *
                C50765 * C50938 +
            ((C16469 + C16468 + C16467) * C50821 +
             (C16466 + C16465 + C16464) * C118) *
                C50765 * C51067) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C2434 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
               C51067 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             (C117 * C761 + C50950 * C765) * C629 +
             (C117 * C766 + C50950 * C773) * C624) *
                C2434 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
               C50938) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C2434 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C2435 +
            (C669 - (C668 + C667) + C670 - C685 - C686) * C2436) *
               C51067 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C2434 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C2435 +
            (C679 * C628 - (C352 * C622 + C351 * C627) + C680 * C623 -
             (C117 * C764 + C50950 * C771) * C629 -
             (C117 * C772 + C50950 * C776) * C624) *
                C2436) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51067 +
           (((C117 * C296 + C50950 * C302) * C118 +
             (C117 * C303 + C50950 * C314) * C50821) *
                C2434 +
            (C2440 + C2441) * C2435 + C2448 * C2436) *
               C50938) *
              C112 -
          ((C2449 * C2436 + (C2443 + C2442) * C2435 + (C2441 + C2440) * C2434) *
               C50938 +
           (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
               C51067) *
              C113 +
          ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
           (C2448 * C2434 + (C2445 + C2444) * C2435 + (C2446 + C2447) * C2436) *
               C50938) *
              C114 -
          ((((C117 * C313 + C50950 * C319) * C50821 +
             (C117 * C301 + C50950 * C312) * C118) *
                C2436 +
            (C2447 + C2446) * C2435 + C2449 * C2434) *
               C50938 +
           ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C50765 * C10863 +
           (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
           (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
           (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
              C112 -
          ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
           (C8152 + C8151) * C50765 * C10865 +
           (C2441 + C2440) * C50765 * C10864 +
           (C179 + C178) * C50765 * C10863) *
              C113 +
          (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
           (C8154 + C8153) * C50765 * C10865 +
           (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
              C114 -
          (((C117 * C772 + C50950 * C776) * C50821 +
            (C117 * C764 + C50950 * C771) * C118) *
               C50765 * C10866 +
           (C8156 + C8155) * C50765 * C10865 + C2449 * C50765 * C10864 +
           C191 * C50765 * C10863) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            (C117 * C8716 + C50950 * C8718) * C629 +
            (C117 * C8719 + C50950 * C8722) * C624) *
               C50765 * C10866) *
              C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C50765 * C10863 +
           (C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C50765 * C10864 +
           (C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C50765 * C10865 +
           (C8615 * C628 - (C2939 * C622 + C2938 * C627) + C8616 * C623 -
            (C117 * C8717 + C50950 * C8720) * C629 -
            (C117 * C8721 + C50950 * C8723) * C624) *
               C50765 * C10866) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C118 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C50821) *
               C50765 * C51067 +
           ((C15476 * C296 + C15473 * C302 + C15477 * C875 + C15474 * C883 +
             C15478 * C1150 + C15475 * C1154) *
                C118 +
            (C15476 * C303 + C15473 * C314 + C15477 * C884 + C15474 * C899 +
             C15478 * C1155 + C15475 * C1162) *
                C50821) *
               C50765 * C50938) *
              C112 -
          (((C15707 + C15708 + C15709) * C50821 +
            (C15704 + C15705 + C15706) * C118) *
               C50765 * C50938 +
           ((C15521 + C15520 + C15519) * C50821 +
            (C15518 + C15517 + C15516) * C118) *
               C50765 * C51067) *
              C113 +
          (((C15527 + C15526 + C15525) * C118 +
            (C15524 + C15523 + C15522) * C50821) *
               C50765 * C51067 +
           ((C15710 + C15711 + C15712) * C118 +
            (C15713 + C15714 + C15715) * C50821) *
               C50765 * C50938) *
              C114 -
          (((C15478 * C1161 + C15475 * C1165 + C15477 * C896 + C15474 * C905 +
             C15476 * C309 + C15473 * C317) *
                C50821 +
            (C15478 * C1153 + C15475 * C1160 + C15477 * C881 + C15474 * C895 +
             C15476 * C299 + C15473 * C308) *
                C118) *
               C50765 * C50938 +
           ((C15533 + C15532 + C15531) * C50821 +
            (C15530 + C15529 + C15528) * C118) *
               C50765 * C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C18458 + C18459 + C18460) * C628 -
            (C18461 + C18462 + C18463) * C623 +
            (C18768 + C18769 + C18770) * C629 +
            (C18771 + C18772 + C18773) * C624) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C627 +
            (C18463 + C18462 + C18461) * C622 -
            (C18770 + C18769 + C18768) * C628 -
            (C18773 + C18772 + C18771) * C623 +
            (C15476 * C761 + C15473 * C765 + C15477 * C3207 + C15474 * C3210 +
             C15478 * C9196 + C15475 * C9198) *
                C629 +
            (C15476 * C766 + C15473 * C773 + C15477 * C3211 + C15474 * C3216 +
             C15478 * C9199 + C15475 * C9202) *
                C624) *
               C50765 * C50938) *
              C51046 +
          (((C15706 + C15705 + C15704) * C628 -
            ((C15521 + C15520 + C15519) * C622 +
             (C15518 + C15517 + C15516) * C627) +
            (C15709 + C15708 + C15707) * C623 -
            (C16058 + C16057 + C16056) * C629 -
            (C16061 + C16060 + C16059) * C624) *
               C50765 * C51067 +
           ((C16056 + C16057 + C16058) * C628 -
            ((C15707 + C15708 + C15709) * C622 +
             (C15704 + C15705 + C15706) * C627) +
            (C16059 + C16060 + C16061) * C623 -
            (C15478 * C9197 + C15475 * C9200 + C15477 * C3208 + C15474 * C3212 +
             C15476 * C762 + C15473 * C767) *
                C629 -
            (C15478 * C9201 + C15475 * C9203 + C15477 * C3213 + C15474 * C3217 +
             C15476 * C768 + C15473 * C774) *
                C624) *
               C50765 * C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C2434 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C2435 +
           (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
            C677 * C759 + C678 * C754 - C2940 * C760 - C2941 * C755) *
               C2436) *
              C51067 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 -
            (C117 * C3043 + C50950 * C3046) * C760 -
            (C117 * C3047 + C50950 * C3052) * C755) *
               C2434 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 -
            (C117 * C3044 + C50950 * C3048) * C760 -
            (C117 * C3049 + C50950 * C3053) * C755) *
               C2435 +
           (C348 * C757 + C349 * C752 - C677 * C758 - C678 * C753 +
            C2940 * C759 + C2941 * C754 -
            (C117 * C3045 + C50950 * C3050) * C760 -
            (C117 * C3051 + C50950 * C3054) * C755) *
               C2436) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C2434 +
            (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
               C51067 +
           ((C2612 * C294 + C2613 * C51053 -
             (C117 * C630 + C50950 * C635) * C295 -
             (C117 * C636 + C50950 * C645) * C50837) *
                C2434 +
            (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
               C50938) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C2434 +
            (C357 - (C328 + C327) + C358) * C2435 +
            (C359 - (C334 + C333) + C360) * C2436) *
               C51067 +
           ((C2602 - (C2601 + C2600) + C2603) * C2434 +
            (C2606 - (C2605 + C2604) + C2607) * C2435 +
            (C2608 - (C2609 + C2610) + C2611) * C2436) *
               C50938) *
              C292 +
          ((C365 * C2434 + C366 * C2435 + (C342 + C341 - C361 - C362) * C2436) *
               C51067 +
           (C2616 * C2434 + (C2610 + C2609 - C2608 - C2611) * C2435 +
            (C353 * C294 + C354 * C51053 -
             (C117 * C634 + C50950 * C643) * C295 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C2436) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
               C50765 * C10866) *
              C291 +
          ((C355 - (C322 + C321) + C356) * C50765 * C10863 +
           (C2602 - (C2601 + C2600) + C2603) * C50765 * C10864 +
           (C8305 - (C8304 + C8303) + C8306) * C50765 * C10865 +
           (C8615 * C295 - (C2939 * C51053 + C2938 * C294) + C8616 * C50837) *
               C50765 * C10866) *
              C292 +
          (C365 * C50765 * C10863 + C2616 * C50765 * C10864 +
           (C8309 + C8308 - C8307 - C8310) * C50765 * C10865 +
           (C2940 * C294 + C2941 * C51053 -
            (C117 * C3045 + C50950 * C3050) * C295 -
            (C117 * C3051 + C50950 * C3054) * C50837) *
               C50765 * C10866) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
           C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
              C50765 * C10863 +
          (C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
           C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
              C50765 * C10864 +
          (C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
           C8729 * C759 + C8730 * C754 - C11236 * C760 - C11237 * C755) *
              C50765 * C10865 +
          (C3060 * C757 + C3061 * C752 - C8729 * C758 - C8730 * C753 +
           C11236 * C759 + C11237 * C754 -
           (C117 * C11227 + C50950 * C11228) * C760 -
           (C117 * C11229 + C50950 * C11230) * C755) *
              C50765 * C10866) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C294 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C51053 -
            (C18458 + C18459 + C18460) * C295 -
            (C18461 + C18462 + C18463) * C50837) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C294 +
            (C18463 + C18462 + C18461) * C51053 -
            (C15478 * C3551 + C15475 * C3554 + C15477 * C876 + C15474 * C885 +
             C15476 * C630 + C15473 * C635) *
                C295 -
            (C15478 * C3555 + C15475 * C3560 + C15477 * C886 + C15474 * C900 +
             C15476 * C636 + C15473 * C645) *
                C50837) *
               C50765 * C50938) *
              C291 +
          (((C15706 + C15705 + C15704) * C295 -
            ((C15521 + C15520 + C15519) * C51053 +
             (C15518 + C15517 + C15516) * C294) +
            (C15709 + C15708 + C15707) * C50837) *
               C50765 * C51067 +
           ((C16056 + C16057 + C16058) * C295 -
            ((C15707 + C15708 + C15709) * C51053 +
             (C15704 + C15705 + C15706) * C294) +
            (C16059 + C16060 + C16061) * C50837) *
               C50765 * C50938) *
              C292 +
          (((C15527 + C15526 + C15525) * C294 +
            (C15524 + C15523 + C15522) * C51053 -
            (C15712 + C15711 + C15710) * C295 -
            (C15715 + C15714 + C15713) * C50837) *
               C50765 * C51067 +
           ((C15710 + C15711 + C15712) * C294 +
            (C15713 + C15714 + C15715) * C51053 -
            (C15478 * C3553 + C15475 * C3558 + C15477 * C880 + C15474 * C893 +
             C15476 * C632 + C15473 * C639) *
                C295 -
            (C15478 * C3559 + C15475 * C3562 + C15477 * C894 + C15474 * C904 +
             C15476 * C640 + C15473 * C647) *
                C50837) *
               C50765 * C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
            C15478 * C1008 + C15475 * C1013) *
               C757 +
           (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
            C15478 * C1014 + C15475 * C1023) *
               C752 -
           (C18458 + C18459 + C18460) * C758 -
           (C18461 + C18462 + C18463) * C753 +
           (C18768 + C18769 + C18770) * C759 +
           (C18771 + C18772 + C18773) * C754 -
           (C18884 + C18885 + C18886) * C760 -
           (C18887 + C18888 + C18889) * C755) *
              C50765 * C51067 +
          ((C18460 + C18459 + C18458) * C757 +
           (C18463 + C18462 + C18461) * C752 -
           (C18770 + C18769 + C18768) * C758 -
           (C18773 + C18772 + C18771) * C753 +
           (C18886 + C18885 + C18884) * C759 +
           (C18889 + C18888 + C18887) * C754 -
           (C15478 * C11541 + C15475 * C11542 + C15477 * C8876 +
            C15474 * C8878 + C15476 * C3043 + C15473 * C3046) *
               C760 -
           (C15478 * C11543 + C15475 * C11544 + C15477 * C8879 +
            C15474 * C8882 + C15476 * C3047 + C15473 * C3052) *
               C755) *
              C50765 * C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C2434 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
               C51067 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C2434 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
               C50938) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C2434 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C2435 +
            (C1658 * C628 - (C510 * C622 + C509 * C627) + C1659 * C623 -
             C3242 * C629 - C3243 * C624) *
                C2436) *
               C51067 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             (C117 * C3207 + C50950 * C3210) * C629 -
             (C117 * C3211 + C50950 * C3216) * C624) *
                C2434 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             (C117 * C3208 + C50950 * C3212) * C629 -
             (C117 * C3213 + C50950 * C3217) * C624) *
                C2435 +
            (C3242 * C628 - (C1659 * C622 + C1658 * C627) + C3243 * C623 -
             (C117 * C3209 + C50950 * C3214) * C629 -
             (C117 * C3215 + C50950 * C3218) * C624) *
                C2436) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C291 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C292 +
           ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
            (C2448 * C2434 + (C2445 + C2444) * C2435 +
             (C2446 + C2447) * C2436) *
                C50938) *
               C293) *
              C51055 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C292 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             ((C117 * C884 + C50950 * C899) * C50821 +
              (C117 * C875 + C50950 * C883) * C118) *
                 C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C291 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C2436 +
             (C2768 + C2767) * C2435 + C2769 * C2434) *
                C50938 +
            ((C522 + C521) * C2436 + C523 * C2435 + C524 * C2434) * C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C291 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C292 +
           (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
            (C8154 + C8153) * C50765 * C10865 +
            (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
               C293) *
              C51055 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C292 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C291 -
           (((C117 * C3215 + C50950 * C3218) * C50821 +
             (C117 * C3209 + C50950 * C3214) * C118) *
                C50765 * C10866 +
            (C8460 + C8459) * C50765 * C10865 + C2769 * C50765 * C10864 +
            C524 * C50765 * C10863) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            C11236 * C629 + C11237 * C624) *
               C50765 * C10866) *
              C50787 * C51055 +
          ((C3236 * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            C3237 * C623 - C3238 * C629 - C3239 * C624) *
               C50765 * C10863 +
           (C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
            C8893 * C629 - C8894 * C624) *
               C50765 * C10864 +
           (C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
            C11344 * C629 - C11345 * C624) *
               C50765 * C10865 +
           (C11344 * C628 - (C8894 * C622 + C8893 * C627) + C11345 * C623 -
            (C117 * C11335 + C50950 * C11336) * C629 -
            (C117 * C11337 + C50950 * C11338) * C624) *
               C50765 * C10866) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
              C15478 * C1008 + C15475 * C1013) *
                 C118 +
             (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
              C15478 * C1014 + C15475 * C1023) *
                 C50821) *
                C50765 * C51067 +
            ((C18460 + C18459 + C18458) * C118 +
             (C18463 + C18462 + C18461) * C50821) *
                C50765 * C50938) *
               C291 -
           (((C15707 + C15708 + C15709) * C50821 +
             (C15704 + C15705 + C15706) * C118) *
                C50765 * C50938 +
            ((C15521 + C15520 + C15519) * C50821 +
             (C15518 + C15517 + C15516) * C118) *
                C50765 * C51067) *
               C292 +
           (((C15527 + C15526 + C15525) * C118 +
             (C15524 + C15523 + C15522) * C50821) *
                C50765 * C51067 +
            ((C15710 + C15711 + C15712) * C118 +
             (C15713 + C15714 + C15715) * C50821) *
                C50765 * C50938) *
               C293) *
              C51055 +
          ((((C15886 + C15887 + C15888) * C118 +
             (C15889 + C15890 + C15891) * C50821) *
                C50765 * C51067 +
            ((C17224 + C17225 + C17226) * C118 +
             (C17227 + C17228 + C17229) * C50821) *
                C50765 * C50938) *
               C292 -
           (((C15478 * C3674 + C15475 * C3678 + C15477 * C1155 +
              C15474 * C1162 + C15476 * C884 + C15473 * C899) *
                 C50821 +
             (C15478 * C3669 + C15475 * C3675 + C15477 * C1150 +
              C15474 * C1154 + C15476 * C875 + C15473 * C883) *
                 C118) *
                C50765 * C50938 +
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C50821 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C118) *
                C50765 * C51067) *
               C291 -
           (((C15478 * C3670 + C15475 * C3676 + C15477 * C1159 +
              C15474 * C1164 + C15476 * C892 + C15473 * C903) *
                 C50821 +
             (C15478 * C3667 + C15475 * C3671 + C15477 * C1152 +
              C15474 * C1158 + C15476 * C879 + C15473 * C891) *
                 C118) *
                C50765 * C50938 +
            ((C15897 + C15896 + C15895) * C50821 +
             (C15894 + C15893 + C15892) * C118) *
                C50765 * C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15476 * C119 + C15473 * C126 + C15477 * C470 + C15474 * C481 +
             C15478 * C1008 + C15475 * C1013) *
                C627 +
            (C15476 * C127 + C15473 * C140 + C15477 * C480 + C15474 * C488 +
             C15478 * C1014 + C15475 * C1023) *
                C622 -
            (C18458 + C18459 + C18460) * C628 -
            (C18461 + C18462 + C18463) * C623 +
            (C18768 + C18769 + C18770) * C629 +
            (C18771 + C18772 + C18773) * C624) *
               C50765 * C51067 +
           ((C18460 + C18459 + C18458) * C627 +
            (C18463 + C18462 + C18461) * C622 -
            (C18770 + C18769 + C18768) * C628 -
            (C18773 + C18772 + C18771) * C623 +
            (C18886 + C18885 + C18884) * C629 +
            (C18889 + C18888 + C18887) * C624) *
               C50765 * C50938) *
              C50787 * C51055 +
          (((C19060 + C19061 + C19062) * C628 -
            ((C15478 * C1246 + C15475 * C1251 + C15477 * C1014 +
              C15474 * C1023 + C15476 * C480 + C15473 * C488) *
                 C622 +
             (C15478 * C1239 + C15475 * C1247 + C15477 * C1008 +
              C15474 * C1013 + C15476 * C470 + C15473 * C481) *
                 C627) +
            (C19063 + C19064 + C19065) * C623 -
            (C19066 + C19067 + C19068) * C629 -
            (C19069 + C19070 + C19071) * C624) *
               C50765 * C51067 +
           ((C19068 + C19067 + C19066) * C628 -
            ((C19065 + C19064 + C19063) * C622 +
             (C19062 + C19061 + C19060) * C627) +
            (C19071 + C19070 + C19069) * C623 -
            (C15478 * C11617 + C15475 * C11619 + C15477 * C9196 +
             C15474 * C9198 + C15476 * C3207 + C15473 * C3210) *
                C629 -
            (C15478 * C11618 + C15475 * C11620 + C15477 * C9199 +
             C15474 * C9202 + C15476 * C3211 + C15473 * C3216) *
                C624) *
               C50765 * C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
            (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
            C13287 * C50837) *
               C50765 * C8149) *
              C51098 +
          (((C5514 + C5513) * C1356 -
            ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
            (C5516 + C5515) * C50837) *
               C50765 * C8147 +
           ((C5881 + C5882) * C1356 -
            ((C5515 + C5516) * C1350 + (C5513 + C5514) * C1355) +
            (C5883 + C5884) * C50837) *
               C50765 * C8148 +
           ((C13185 + C13184) * C1356 - (C13171 * C1350 + C13170 * C1355) +
            (C13187 + C13186) * C50837) *
               C50765 * C8149) *
              C51084 +
          (C6711 * C50765 * C8147 +
           ((C5519 + C5518) * C1355 + (C5521 + C5520) * C1350 -
            (C5886 + C5885) * C1356 - (C5888 + C5887) * C50837) *
               C50765 * C8148 +
           ((C5885 + C5886) * C1355 + (C5887 + C5888) * C1350 -
            (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                C1356 -
            (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                C50837) *
               C50765 * C8149) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1356 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
            (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
               C2435 +
           C6711 * C2436) *
              C50924 * C51098 +
          (((C5514 + C5513) * C1356 -
            ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
            (C5516 + C5515) * C50837) *
               C2434 +
           ((C5519 + C5518) * C1356 -
            ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
            (C5521 + C5520) * C50837) *
               C2435 +
           ((C5522 + C5523) * C1356 - (C5333 * C1350 + C5334 * C1355) +
            (C5524 + C5525) * C50837) *
               C2436) *
              C50924 * C51084 +
          (C6711 * C2434 +
           ((C5326 + C5325) * C1355 + (C5324 + C5323) * C1350 -
            (C5523 + C5522) * C1356 - (C5525 + C5524) * C50837) *
               C2435 +
           ((C5327 + C5328) * C1355 + (C5329 + C5330) * C1350 -
            (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                C1356 -
            (C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                C50837) *
               C2436) *
              C50924 * C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C1355 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C1350 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C1356 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C50837) *
              C50765 * C50924 * C51098 +
          ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
            C21013 * C1151 + C21009 * C1156 + C21014 * C3668 + C21010 * C3673) *
               C1356 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C1350 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C1355) +
           (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
            C21013 * C1157 + C21009 * C1163 + C21014 * C3672 + C21010 * C3677) *
               C50837) *
              C50765 * C50924 * C51084 +
          ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
            C21013 * C1010 + C21009 * C1017 + C21014 * C1237 + C21010 * C1243) *
               C1355 +
           (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
            C21013 * C1018 + C21009 * C1025 + C21014 * C1242 + C21010 * C1249) *
               C1350 -
           (C21014 * C3667 + C21010 * C3671 + C21013 * C1152 + C21009 * C1158 +
            C21012 * C879 + C21008 * C891 + C21011 * C298 + C21007 * C306) *
               C1356 -
           (C21014 * C3670 + C21010 * C3676 + C21013 * C1159 + C21009 * C1164 +
            C21012 * C892 + C21008 * C903 + C21011 * C307 + C21007 * C316) *
               C50837) *
              C50765 * C50924 * C1354) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C12860 + C12861) * C1483 - (C12862 + C12863) * C51087 +
            C13160 * C1484 + C13161 * C1479) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1482 + (C12863 + C12862) * C51099 -
            (C12864 + C12865) * C1483 - (C12866 + C12867) * C51087 +
            (C13180 + C13181) * C1484 + (C13182 + C13183) * C1479) *
               C50765 * C8148 +
           (C13160 * C1482 + C13161 * C51099 - C13286 * C1483 -
            C13287 * C51087 + (C13297 + C13296) * C1484 +
            (C13299 + C13298) * C1479) *
               C50765 * C8149) *
              C1480 +
          (((C5514 + C5513) * C1483 -
            ((C5318 + C5317) * C51099 + (C5316 + C5315) * C1482) +
            (C5516 + C5515) * C51087 - C13170 * C1484 - C13171 * C1479) *
               C50765 * C8147 +
           ((C5881 + C5882) * C1483 -
            ((C5515 + C5516) * C51099 + (C5513 + C5514) * C1482) +
            (C5883 + C5884) * C51087 - (C13184 + C13185) * C1484 -
            (C13186 + C13187) * C1479) *
               C50765 * C8148 +
           ((C13185 + C13184) * C1483 - (C13171 * C51099 + C13170 * C1482) +
            (C13187 + C13186) * C51087 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C1484 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C1479) *
               C50765 * C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1483 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C51087 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C1484 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C1479) *
               C2434 +
           ((C5315 + C5316) * C1482 + (C5317 + C5318) * C51099 -
            (C5513 + C5514) * C1483 - (C5515 + C5516) * C51087 +
            (C5881 + C5882) * C1484 + (C5883 + C5884) * C1479) *
               C2435 +
           (C5331 * C1482 + C5332 * C51099 - C5526 * C1483 - C5527 * C51087 +
            (C5885 + C5886) * C1484 + (C5887 + C5888) * C1479) *
               C2436) *
              C50924 * C1480 +
          (((C5514 + C5513) * C1483 -
            ((C5318 + C5317) * C51099 + (C5316 + C5315) * C1482) +
            (C5516 + C5515) * C51087 - (C5882 + C5881) * C1484 -
            (C5884 + C5883) * C1479) *
               C2434 +
           ((C5519 + C5518) * C1483 -
            ((C5322 + C5321) * C51099 + (C5320 + C5319) * C1482) +
            (C5521 + C5520) * C51087 - (C5886 + C5885) * C1484 -
            (C5888 + C5887) * C1479) *
               C2435 +
           ((C5522 + C5523) * C1483 - (C5333 * C51099 + C5334 * C1482) +
            (C5524 + C5525) * C51087 -
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C1484 -
            (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C1479) *
               C2436) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C1482 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C51099 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C1483 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C51087 +
           (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
            C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
               C1484 +
           (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
            C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
               C1479) *
              C50765 * C50924 * C1480 +
          ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
            C21013 * C1151 + C21009 * C1156 + C21014 * C3668 + C21010 * C3673) *
               C1483 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C51099 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C1482) +
           (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
            C21013 * C1157 + C21009 * C1163 + C21014 * C3672 + C21010 * C3677) *
               C51087 -
           (C21014 * C9308 + C21010 * C9311 + C21013 * C3552 + C21009 * C3556 +
            C21012 * C878 + C21008 * C889 + C21011 * C631 + C21007 * C637) *
               C1484 -
           (C21014 * C9310 + C21010 * C9314 + C21013 * C3557 + C21009 * C3561 +
            C21012 * C890 + C21008 * C902 + C21011 * C638 + C21007 * C646) *
               C1479) *
              C50765 * C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                C50765 * C8147 +
            ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
             (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                C50765 * C8148 +
            (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
             C13287 * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C50765 * C8147 +
            ((C5881 + C5882) * C1356 -
             ((C5515 + C5516) * C1350 + (C5513 + C5514) * C1355) +
             (C5883 + C5884) * C50837) *
                C50765 * C8148 +
            ((C13185 + C13184) * C1356 - (C13171 * C1350 + C13170 * C1355) +
             (C13187 + C13186) * C50837) *
                C50765 * C8149) *
               C50792) *
              C51055 +
          ((((C13470 + C13471) * C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C13472 + C13473) * C50837) *
                C50765 * C8147 +
            ((C13475 + C13474) * C1356 -
             ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
             (C13477 + C13476) * C50837) *
                C50765 * C8148 +
            ((C13479 + C13478) * C1356 - (C13483 * C1350 + C13482 * C1355) +
             (C13481 + C13480) * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C50765 * C8147 +
            ((C7068 + C7069) * C1355 + (C7070 + C7071) * C1350 -
             (C14400 + C14401) * C1356 - (C14402 + C14403) * C50837) *
                C50765 * C8148 +
            ((C14401 + C14400) * C1355 + (C14403 + C14402) * C1350 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C1356 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C50837) *
                C50765 * C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                 C1356 -
             (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                 C50837) *
                C2434 +
            ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
             (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
                C2435 +
            C6711 * C2436) *
               C50924 * C1480 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C2434 +
            ((C5519 + C5518) * C1356 -
             ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
             (C5521 + C5520) * C50837) *
                C2435 +
            ((C5522 + C5523) * C1356 - (C5333 * C1350 + C5334 * C1355) +
             (C5524 + C5525) * C50837) *
                C2436) *
               C50924 * C50792) *
              C51055 +
          ((((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                 C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                 C50837) *
                C2434 +
            ((C7068 + C7069) * C1356 -
             ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
             (C7070 + C7071) * C50837) *
                C2435 +
            ((C7072 + C7073) * C1356 - (C5714 * C1350 + C5715 * C1355) +
             (C7074 + C7075) * C50837) *
                C2436) *
               C50924 * C1480 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C2434 +
            ((C5706 + C5707) * C1355 + (C5708 + C5709) * C1350 -
             (C7073 + C7072) * C1356 - (C7075 + C7074) * C50837) *
                C2435 +
            ((C5710 + C5711) * C1355 + (C5712 + C5713) * C1350 -
             (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                 C1356 -
             (C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                 C50837) *
                C2436) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C1355 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C1350 -
            (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
             C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
                C1356 -
            (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
             C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
                C50837) *
               C50765 * C50924 * C1480 +
           ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
             C21013 * C1151 + C21009 * C1156 + C21014 * C3668 +
             C21010 * C3673) *
                C1356 -
            ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 +
              C21009 * C1024 + C21012 * C473 + C21008 * C484 + C21011 * C129 +
              C21007 * C141) *
                 C1350 +
             (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 +
              C21009 * C1015 + C21012 * C466 + C21008 * C472 + C21011 * C120 +
              C21007 * C128) *
                 C1355) +
            (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
             C21013 * C1157 + C21009 * C1163 + C21014 * C3672 +
             C21010 * C3677) *
                C50837) *
               C50765 * C50924 * C50792) *
              C51055 +
          (((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
             C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
             C21010 * C13902) *
                C1356 -
            ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 +
              C21009 * C1251 + C21012 * C1014 + C21008 * C1023 + C21011 * C480 +
              C21007 * C488) *
                 C1350 +
             (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 +
              C21009 * C1247 + C21012 * C1008 + C21008 * C1013 + C21011 * C470 +
              C21007 * C481) *
                 C1355) +
            (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
             C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
             C21010 * C13904) *
                C50837) *
               C50765 * C50924 * C1480 +
           ((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C1355 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C1350 -
            (C21014 * C16615 + C21010 * C16616 + C21013 * C3668 +
             C21009 * C3673 + C21012 * C1151 + C21008 * C1156 + C21011 * C877 +
             C21007 * C887) *
                C1356 -
            (C21014 * C16617 + C21010 * C16618 + C21013 * C3672 +
             C21009 * C3677 + C21012 * C1157 + C21008 * C1163 + C21011 * C888 +
             C21007 * C901) *
                C50837) *
               C50765 * C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                C50765 * C8147 +
            ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
             (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                C50765 * C8148 +
            (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
             C13287 * C50837) *
                C50765 * C8149) *
               C51046 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C50765 * C8147 +
            ((C5881 + C5882) * C1356 -
             ((C5515 + C5516) * C1350 + (C5513 + C5514) * C1355) +
             (C5883 + C5884) * C50837) *
                C50765 * C8148 +
            ((C13185 + C13184) * C1356 - (C13171 * C1350 + C13170 * C1355) +
             (C13187 + C13186) * C50837) *
                C50765 * C8149) *
               C50792) *
              C1765 +
          ((((C13470 + C13471) * C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C13472 + C13473) * C50837) *
                C50765 * C8147 +
            ((C13475 + C13474) * C1356 -
             ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
             (C13477 + C13476) * C50837) *
                C50765 * C8148 +
            ((C13479 + C13478) * C1356 - (C13483 * C1350 + C13482 * C1355) +
             (C13481 + C13480) * C50837) *
                C50765 * C8149) *
               C51046 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C50765 * C8147 +
            ((C7068 + C7069) * C1355 + (C7070 + C7071) * C1350 -
             (C14400 + C14401) * C1356 - (C14402 + C14403) * C50837) *
                C50765 * C8148 +
            ((C14401 + C14400) * C1355 + (C14403 + C14402) * C1350 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C1356 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C50837) *
                C50765 * C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                 C1356 -
             (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                 C50837) *
                C2434 +
            ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
             (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
                C2435 +
            C6711 * C2436) *
               C50924 * C51046 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C2434 +
            ((C5519 + C5518) * C1356 -
             ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
             (C5521 + C5520) * C50837) *
                C2435 +
            ((C5522 + C5523) * C1356 - (C5333 * C1350 + C5334 * C1355) +
             (C5524 + C5525) * C50837) *
                C2436) *
               C50924 * C50792) *
              C1765 +
          ((((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                 C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                 C50837) *
                C2434 +
            ((C7068 + C7069) * C1356 -
             ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
             (C7070 + C7071) * C50837) *
                C2435 +
            ((C7072 + C7073) * C1356 - (C5714 * C1350 + C5715 * C1355) +
             (C7074 + C7075) * C50837) *
                C2436) *
               C50924 * C51046 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C2434 +
            ((C5706 + C5707) * C1355 + (C5708 + C5709) * C1350 -
             (C7073 + C7072) * C1356 - (C7075 + C7074) * C50837) *
                C2435 +
            ((C5710 + C5711) * C1355 + (C5712 + C5713) * C1350 -
             (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                 C1356 -
             (C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                 C50837) *
                C2436) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C1355 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C1350 -
            (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
             C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
                C1356 -
            (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
             C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
                C50837) *
               C50765 * C50924 * C51046 +
           ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
             C21013 * C1151 + C21009 * C1156 + C21014 * C3668 +
             C21010 * C3673) *
                C1356 -
            ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 +
              C21009 * C1024 + C21012 * C473 + C21008 * C484 + C21011 * C129 +
              C21007 * C141) *
                 C1350 +
             (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 +
              C21009 * C1015 + C21012 * C466 + C21008 * C472 + C21011 * C120 +
              C21007 * C128) *
                 C1355) +
            (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
             C21013 * C1157 + C21009 * C1163 + C21014 * C3672 +
             C21010 * C3677) *
                C50837) *
               C50765 * C50924 * C50792) *
              C1765 +
          (((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
             C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
             C21010 * C13902) *
                C1356 -
            ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 +
              C21009 * C1251 + C21012 * C1014 + C21008 * C1023 + C21011 * C480 +
              C21007 * C488) *
                 C1350 +
             (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 +
              C21009 * C1247 + C21012 * C1008 + C21008 * C1013 + C21011 * C470 +
              C21007 * C481) *
                 C1355) +
            (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
             C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
             C21010 * C13904) *
                C50837) *
               C50765 * C50924 * C51046 +
           ((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C1355 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C1350 -
            (C21014 * C16615 + C21010 * C16616 + C21013 * C3668 +
             C21009 * C3673 + C21012 * C1151 + C21008 * C1156 + C21011 * C877 +
             C21007 * C887) *
                C1356 -
            (C21014 * C16617 + C21010 * C16618 + C21013 * C3672 +
             C21009 * C3677 + C21012 * C1157 + C21008 * C1163 + C21011 * C888 +
             C21007 * C901) *
                C50837) *
               C50765 * C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C12860 + C12861) * C1483 - (C12862 + C12863) * C51087 +
            C13160 * C1484 + C13161 * C1479) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1482 + (C12863 + C12862) * C51099 -
            (C12864 + C12865) * C1483 - (C12866 + C12867) * C51087 +
            (C13180 + C13181) * C1484 + (C13182 + C13183) * C1479) *
               C50765 * C8148 +
           (C13160 * C1482 + C13161 * C51099 - C13286 * C1483 -
            C13287 * C51087 + (C13297 + C13296) * C1484 +
            (C13299 + C13298) * C1479) *
               C50765 * C8149) *
              C50787 * C1765 +
          (((C13470 + C13471) * C1483 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51099 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1482) +
            (C13472 + C13473) * C51087 - C13482 * C1484 - C13483 * C1479) *
               C50765 * C8147 +
           ((C13475 + C13474) * C1483 -
            ((C13473 + C13472) * C51099 + (C13471 + C13470) * C1482) +
            (C13477 + C13476) * C51087 - (C13478 + C13479) * C1484 -
            (C13480 + C13481) * C1479) *
               C50765 * C8148 +
           ((C13479 + C13478) * C1483 - (C13483 * C51099 + C13482 * C1482) +
            (C13481 + C13480) * C51087 -
            (C5281 * C11541 + C50962 * C11542 + C5280 * C8876 +
             C51068 * C8878) *
                C1484 -
            (C5281 * C11543 + C50962 * C11544 + C5280 * C8879 +
             C51068 * C8882) *
                C1479) *
               C50765 * C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1483 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C51087 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C1484 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C1479) *
               C2434 +
           ((C5315 + C5316) * C1482 + (C5317 + C5318) * C51099 -
            (C5513 + C5514) * C1483 - (C5515 + C5516) * C51087 +
            (C5881 + C5882) * C1484 + (C5883 + C5884) * C1479) *
               C2435 +
           (C5331 * C1482 + C5332 * C51099 - C5526 * C1483 - C5527 * C51087 +
            (C5885 + C5886) * C1484 + (C5887 + C5888) * C1479) *
               C2436) *
              C50924 * C50787 * C1765 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C1483 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51099 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1482) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C51087 -
            (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                C1484 -
            (C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                C1479) *
               C2434 +
           ((C7068 + C7069) * C1483 -
            ((C5705 + C5704) * C51099 + (C5703 + C5702) * C1482) +
            (C7070 + C7071) * C51087 -
            (C5281 * C3552 + C50962 * C3556 + C5280 * C878 + C51068 * C889) *
                C1484 -
            (C5281 * C3557 + C50962 * C3561 + C5280 * C890 + C51068 * C902) *
                C1479) *
               C2435 +
           ((C7072 + C7073) * C1483 - (C5714 * C51099 + C5715 * C1482) +
            (C7074 + C7075) * C51087 -
            (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                C1484 -
            (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                C1479) *
               C2436) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C1482 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C51099 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C1483 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C51087 +
           (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
            C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
               C1484 +
           (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
            C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
               C1479) *
              C50765 * C50924 * C50787 * C1765 +
          ((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
            C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
            C21010 * C13902) *
               C1483 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C51099 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C1482) +
           (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
            C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
            C21010 * C13904) *
               C51087 -
           (C21014 * C13897 + C21010 * C13900 + C21013 * C9309 +
            C21009 * C9313 + C21012 * C3551 + C21008 * C3554 + C21011 * C876 +
            C21007 * C885) *
               C1484 -
           (C21014 * C13899 + C21010 * C13903 + C21013 * C9312 +
            C21009 * C9315 + C21012 * C3555 + C21008 * C3560 + C21011 * C886 +
            C21007 * C900) *
               C1479) *
              C50765 * C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
            (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
            C13287 * C50837) *
               C50765 * C8149) *
              C50787 * C51100 +
          (((C13470 + C13471) * C1356 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C1350 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1355) +
            (C13472 + C13473) * C50837) *
               C50765 * C8147 +
           ((C13475 + C13474) * C1356 -
            ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
            (C13477 + C13476) * C50837) *
               C50765 * C8148 +
           ((C13479 + C13478) * C1356 - (C13483 * C1350 + C13482 * C1355) +
            (C13481 + C13480) * C50837) *
               C50765 * C8149) *
              C50787 * C51090 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C1355 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C1350 -
            (C13792 + C13793) * C1356 - (C13794 + C13795) * C50837) *
               C50765 * C8147 +
           ((C13793 + C13792) * C1355 + (C13795 + C13794) * C1350 -
            (C13796 + C13797) * C1356 - (C13798 + C13799) * C50837) *
               C50765 * C8148 +
           ((C13797 + C13796) * C1355 + (C13799 + C13798) * C1350 -
            (C5281 * C11617 + C50962 * C11619 + C5280 * C9196 +
             C51068 * C9198) *
                C1356 -
            (C5281 * C11618 + C50962 * C11620 + C5280 * C9199 +
             C51068 * C9202) *
                C50837) *
               C50765 * C8149) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1356 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
            (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
               C2435 +
           C6711 * C2436) *
              C50924 * C50787 * C51100 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C1356 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C1350 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1355) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C50837) *
               C2434 +
           ((C7068 + C7069) * C1356 -
            ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
            (C7070 + C7071) * C50837) *
               C2435 +
           ((C7072 + C7073) * C1356 - (C5714 * C1350 + C5715 * C1355) +
            (C7074 + C7075) * C50837) *
               C2436) *
              C50924 * C50787 * C51090 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C1355 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C1350 -
            (C5281 * C3669 + C50962 * C3675 + C5280 * C1150 + C51068 * C1154) *
                C1356 -
            (C5281 * C3674 + C50962 * C3678 + C5280 * C1155 + C51068 * C1162) *
                C50837) *
               C2434 +
           ((C6295 + C6296) * C1355 + (C6297 + C6298) * C1350 -
            (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                C1356 -
            (C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                C50837) *
               C2435 +
           ((C6299 + C6300) * C1355 + (C6301 + C6302) * C1350 -
            (C5281 * C3667 + C50962 * C3671 + C5280 * C1152 + C51068 * C1158) *
                C1356 -
            (C5281 * C3670 + C50962 * C3676 + C5280 * C1159 + C51068 * C1164) *
                C50837) *
               C2436) *
              C50924 * C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C1355 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C1350 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C1356 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C50837) *
              C50765 * C50924 * C50787 * C51100 +
          ((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
            C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
            C21010 * C13902) *
               C1356 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C1350 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C1355) +
           (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
            C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
            C21010 * C13904) *
               C50837) *
              C50765 * C50924 * C50787 * C51090 +
          ((C21011 * C1008 + C21007 * C1013 + C21012 * C1239 + C21008 * C1247 +
            C21013 * C6548 + C21009 * C6554 + C21014 * C16718 +
            C21010 * C16722) *
               C1355 +
           (C21011 * C1014 + C21007 * C1023 + C21012 * C1246 + C21008 * C1251 +
            C21013 * C6553 + C21009 * C6557 + C21014 * C16721 +
            C21010 * C16724) *
               C1350 -
           (C21014 * C19479 + C21010 * C19481 + C21013 * C13898 +
            C21009 * C13902 + C21012 * C3669 + C21008 * C3675 + C21011 * C1150 +
            C21007 * C1154) *
               C1356 -
           (C21014 * C19480 + C21010 * C19482 + C21013 * C13901 +
            C21009 * C13904 + C21012 * C3674 + C21008 * C3678 + C21011 * C1155 +
            C21007 * C1162) *
               C50837) *
              C50765 * C50924 * C50787 * C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                    C118 +
                (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                    C50821) *
                   C2434 +
               ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
               C5339 * C2436) *
                  C50924 * C112 -
              (C5340 * C2436 +
               ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
               ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
                  C50924 * C113 +
              (C5339 * C2434 +
               ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
               ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
                  C50924 * C114 -
              (((C5281 * C482 + C50962 * C489 + C5280 * C137 + C51068 * C145) *
                    C50821 +
                (C5281 * C471 + C50962 * C483 + C5280 * C124 + C51068 * C136) *
                    C118) *
                   C2436 +
               ((C5330 + C5329) * C50821 + (C5328 + C5327) * C118) * C2435 +
               C5340 * C2434) *
                  C50924 * C115) *
             C50851 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                    C627 +
                (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                    C622 -
                (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                    C628 -
                (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                    C623 +
                (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                    C629 +
                (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                    C624) *
                   C2434 +
               ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
                (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
                (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
                   C2435 +
               (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
                (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
                   C2436) *
                  C50924 * C51046 +
              (((C5514 + C5513) * C628 -
                ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
                (C5516 + C5515) * C623 - (C5882 + C5881) * C629 -
                (C5884 + C5883) * C624) *
                   C2434 +
               ((C5519 + C5518) * C628 -
                ((C5322 + C5321) * C622 + (C5320 + C5319) * C627) +
                (C5521 + C5520) * C623 - (C5886 + C5885) * C629 -
                (C5888 + C5887) * C624) *
                   C2435 +
               ((C5522 + C5523) * C628 - (C5333 * C622 + C5334 * C627) +
                (C5524 + C5525) * C623 -
                (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                    C629 -
                (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                    C624) *
                   C2436) *
                  C50924 * C50792) *
             C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C51046 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C50792) *
              C1005 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C50792 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C51046) *
              C1006 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C2434 +
            ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C2435 +
            ((C6299 + C6300) * C118 + (C6301 + C6302) * C50821) * C2436) *
               C50924 * C51046 -
           (((C5281 * C1240 + C50962 * C1248 + C5280 * C1020 + C51068 * C1026) *
                 C50821 +
             (C5281 * C1236 + C50962 * C1241 + C5280 * C1011 + C51068 * C1019) *
                 C118) *
                C2436 +
            ((C6302 + C6301) * C50821 + (C6300 + C6299) * C118) * C2435 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C2434) *
               C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C8147 +
           ((C5280 * C296 + C51068 * C302 + C5281 * C875 + C50962 * C883) *
                C118 +
            (C5280 * C303 + C51068 * C314 + C5281 * C884 + C50962 * C899) *
                C50821) *
               C50765 * C8148 +
           ((C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C118 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C50821) *
               C50765 * C8149) *
              C112 -
          (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
               C8149 +
           ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
               C8148 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
               C8147) *
              C113 +
          (C5339 * C50765 * C8147 +
           ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
               C8148 +
           ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
               C8149) *
              C114 -
          (((C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C50821 +
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C118) *
               C50765 * C8149 +
           ((C5525 + C5524) * C50821 + (C5523 + C5522) * C118) * C50765 *
               C8148 +
           C5340 * C50765 * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - (C13181 + C13180) * C628 -
            (C13183 + C13182) * C623 +
            (C5280 * C3043 + C51068 * C3046 + C5281 * C8876 + C50962 * C8878) *
                C629 +
            (C5280 * C3047 + C51068 * C3052 + C5281 * C8879 + C50962 * C8882) *
                C624) *
               C50765 * C8149) *
              C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - C13170 * C629 - C13171 * C624) *
               C50765 * C8147 +
           ((C5881 + C5882) * C628 -
            ((C5515 + C5516) * C622 + (C5513 + C5514) * C627) +
            (C5883 + C5884) * C623 - (C13184 + C13185) * C629 -
            (C13186 + C13187) * C624) *
               C50765 * C8148 +
           ((C13185 + C13184) * C628 - (C13171 * C622 + C13170 * C627) +
            (C13187 + C13186) * C623 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C629 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C624) *
               C50765 * C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
               C51046 -
           ((C13171 * C50821 + C13170 * C118) * C50765 * C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C50792) *
              C1005 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C5280 * C878 + C51068 * C889 + C5281 * C3552 + C50962 * C3556) *
                 C118 +
             (C5280 * C890 + C51068 * C902 + C5281 * C3557 + C50962 * C3561) *
                 C50821) *
                C50765 * C8149) *
               C50792 -
           ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
                C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C51046) *
              C1006 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C50765 * C8147 +
            ((C5280 * C1150 + C51068 * C1154 + C5281 * C3669 + C50962 * C3675) *
                 C118 +
             (C5280 * C1155 + C51068 * C1162 + C5281 * C3674 + C50962 * C3678) *
                 C50821) *
                C50765 * C8148 +
            ((C5280 * C3551 + C51068 * C3554 + C5281 * C9309 + C50962 * C9313) *
                 C118 +
             (C5280 * C3555 + C51068 * C3560 + C5281 * C9312 + C50962 * C9315) *
                 C50821) *
                C50765 * C8149) *
               C51046 -
           (((C5281 * C9310 + C50962 * C9314 + C5280 * C3557 + C51068 * C3561) *
                 C50821 +
             (C5281 * C9308 + C50962 * C9311 + C5280 * C3552 + C51068 * C3556) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                 C50821 +
             (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                 C118) *
                C50765 * C8148 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C50765 *
                C8147) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C118 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C50821) *
              C50765 * C50924 * C112 -
          ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
            C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
               C50821 +
           (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
            C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
               C118) *
              C50765 * C50924 * C113 +
          ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
            C21013 * C1010 + C21009 * C1017 + C21014 * C1237 + C21010 * C1243) *
               C118 +
           (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
            C21013 * C1018 + C21009 * C1025 + C21014 * C1242 + C21010 * C1249) *
               C50821) *
              C50765 * C50924 * C114 -
          ((C21014 * C1240 + C21010 * C1248 + C21013 * C1020 + C21009 * C1026 +
            C21012 * C477 + C21008 * C486 + C21011 * C133 + C21007 * C143) *
               C50821 +
           (C21014 * C1236 + C21010 * C1241 + C21013 * C1011 + C21009 * C1019 +
            C21012 * C468 + C21008 * C476 + C21011 * C122 + C21007 * C132) *
               C118) *
              C50765 * C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C627 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C622 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C628 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C623 +
           (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
            C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
               C629 +
           (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
            C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
               C624) *
              C50765 * C50924 * C51046 +
          ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
            C21013 * C1151 + C21009 * C1156 + C21014 * C3668 + C21010 * C3673) *
               C628 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C622 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C627) +
           (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
            C21013 * C1157 + C21009 * C1163 + C21014 * C3672 + C21010 * C3677) *
               C623 -
           (C21014 * C9308 + C21010 * C9311 + C21013 * C3552 + C21009 * C3556 +
            C21012 * C878 + C21008 * C889 + C21011 * C631 + C21007 * C637) *
               C629 -
           (C21014 * C9310 + C21010 * C9314 + C21013 * C3557 + C21009 * C3561 +
            C21012 * C890 + C21008 * C902 + C21011 * C638 + C21007 * C646) *
               C624) *
              C50765 * C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C118 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C50821) *
               C50765 * C50924 * C51046 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C50821 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C118) *
               C50765 * C50924 * C50792) *
              C1005 +
          (((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C118 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C50821) *
               C50765 * C50924 * C50792 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C50821 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C118) *
               C50765 * C50924 * C51046) *
              C1006 +
          (((C21011 * C1008 + C21007 * C1013 + C21012 * C1239 + C21008 * C1247 +
             C21013 * C6548 + C21009 * C6554 + C21014 * C16718 +
             C21010 * C16722) *
                C118 +
            (C21011 * C1014 + C21007 * C1023 + C21012 * C1246 + C21008 * C1251 +
             C21013 * C6553 + C21009 * C6557 + C21014 * C16721 +
             C21010 * C16724) *
                C50821) *
               C50765 * C50924 * C51046 -
           ((C21014 * C16719 + C21010 * C16723 + C21013 * C6551 +
             C21009 * C6556 + C21012 * C1244 + C21008 * C1250 + C21011 * C1016 +
             C21007 * C1024) *
                C50821 +
            (C21014 * C16717 + C21010 * C16720 + C21013 * C6547 +
             C21009 * C6552 + C21012 * C1238 + C21008 * C1245 + C21011 * C1009 +
             C21007 * C1015) *
                C118) *
               C50765 * C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                    C294 +
                (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                    C51053 -
                (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                    C295 -
                (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                    C50837) *
                   C2434 +
               ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
                (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
                   C2435 +
               C5531 * C2436) *
                  C50924 * C291 +
              (((C5514 + C5513) * C295 -
                ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
                (C5516 + C5515) * C50837) *
                   C2434 +
               ((C5519 + C5518) * C295 -
                ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
                (C5521 + C5520) * C50837) *
                   C2435 +
               ((C5522 + C5523) * C295 - (C5333 * C51053 + C5334 * C294) +
                (C5524 + C5525) * C50837) *
                   C2436) *
                  C50924 * C292 +
              (C5531 * C2434 +
               ((C5326 + C5325) * C294 + (C5324 + C5323) * C51053 -
                (C5523 + C5522) * C295 - (C5525 + C5524) * C50837) *
                   C2435 +
               ((C5327 + C5328) * C294 + (C5329 + C5330) * C51053 -
                (C5281 * C1633 + C50962 * C1634 + C5280 * C300 +
                 C51068 * C310) *
                    C295 -
                (C5281 * C1635 + C50962 * C1636 + C5280 * C311 +
                 C51068 * C318) *
                    C50837) *
                   C2436) *
                  C50924 * C293) *
             C50851 +
         0.5 * std::pow(Pi, 2.5) *
             (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                   C757 +
               (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                   C752 -
               (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                   C758 -
               (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                   C753 +
               (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                   C759 +
               (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                   C754 -
               (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
                   C760 -
               (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
                   C755) *
                  C2434 +
              ((C5315 + C5316) * C757 + (C5317 + C5318) * C752 -
               (C5513 + C5514) * C758 - (C5515 + C5516) * C753 +
               (C5881 + C5882) * C759 + (C5883 + C5884) * C754 -
               (C5281 * C3208 + C50962 * C3212 + C5280 * C762 + C51068 * C767) *
                   C760 -
               (C5281 * C3213 + C50962 * C3217 + C5280 * C768 + C51068 * C774) *
                   C755) *
                  C2435 +
              (C5331 * C757 + C5332 * C752 - C5526 * C758 - C5527 * C753 +
               (C5885 + C5886) * C759 + (C5887 + C5888) * C754 -
               (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                   C760 -
               (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                   C755) *
                  C2436) *
             C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C295 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
            (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
               C2435 +
           C5531 * C2436) *
              C50924 * C50787 * C1005 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C295 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51053 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C294) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C50837) *
               C2434 +
           ((C5280 * C877 + C51068 * C887 + C5281 * C1151 + C50962 * C1156) *
                C295 -
            ((C5705 + C5704) * C51053 + (C5703 + C5702) * C294) +
            (C5280 * C888 + C51068 * C901 + C5281 * C1157 + C50962 * C1163) *
                C50837) *
               C2435 +
           ((C5280 * C879 + C51068 * C891 + C5281 * C1152 + C50962 * C1158) *
                C295 -
            (C5714 * C51053 + C5715 * C294) +
            (C5280 * C892 + C51068 * C903 + C5281 * C1159 + C50962 * C1164) *
                C50837) *
               C2436) *
              C50924 * C50787 * C1006 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C294 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C51053 -
            (C5281 * C3669 + C50962 * C3675 + C5280 * C1150 + C51068 * C1154) *
                C295 -
            (C5281 * C3674 + C50962 * C3678 + C5280 * C1155 + C51068 * C1162) *
                C50837) *
               C2434 +
           ((C6295 + C6296) * C294 + (C6297 + C6298) * C51053 -
            (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                C295 -
            (C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                C50837) *
               C2435 +
           ((C6299 + C6300) * C294 + (C6301 + C6302) * C51053 -
            (C5281 * C3667 + C50962 * C3671 + C5280 * C1152 + C51068 * C1158) *
                C295 -
            (C5281 * C3670 + C50962 * C3676 + C5280 * C1159 + C51068 * C1164) *
                C50837) *
               C2436) *
              C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
            (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           ((C12865 + C12864) * C294 + (C12867 + C12866) * C51053 -
            (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
                C295 -
            (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
                C50837) *
               C50765 * C8149) *
              C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C50765 * C8147 +
           ((C5881 + C5882) * C295 -
            ((C5515 + C5516) * C51053 + (C5513 + C5514) * C294) +
            (C5883 + C5884) * C50837) *
               C50765 * C8148 +
           ((C5280 * C762 + C51068 * C767 + C5281 * C3208 + C50962 * C3212) *
                C295 -
            ((C5884 + C5883) * C51053 + (C5882 + C5881) * C294) +
            (C5280 * C768 + C51068 * C774 + C5281 * C3213 + C50962 * C3217) *
                C50837) *
               C50765 * C8149) *
              C292 +
          (C5531 * C50765 * C8147 +
           ((C5519 + C5518) * C294 + (C5521 + C5520) * C51053 -
            (C5886 + C5885) * C295 - (C5888 + C5887) * C50837) *
               C50765 * C8148 +
           ((C5885 + C5886) * C294 + (C5887 + C5888) * C51053 -
            (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                C295 -
            (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                C50837) *
               C50765 * C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C12860 + C12861) * C758 - (C12862 + C12863) * C753 + C13160 * C759 +
           C13161 * C754 - C13286 * C760 - C13287 * C755) *
              C50765 * C8147 +
          ((C12861 + C12860) * C757 + (C12863 + C12862) * C752 -
           (C12864 + C12865) * C758 - (C12866 + C12867) * C753 +
           (C13180 + C13181) * C759 + (C13182 + C13183) * C754 -
           (C13296 + C13297) * C760 - (C13298 + C13299) * C755) *
              C50765 * C8148 +
          (C13160 * C757 + C13161 * C752 - C13286 * C758 - C13287 * C753 +
           (C13297 + C13296) * C759 + (C13299 + C13298) * C754 -
           (C5281 * C11335 + C50962 * C11336 + C5280 * C8716 + C51068 * C8718) *
               C760 -
           (C5281 * C11337 + C50962 * C11338 + C5280 * C8719 + C51068 * C8722) *
               C755) *
              C50765 * C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
            (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           (C13160 * C294 + C13161 * C51053 - C13286 * C295 - C13287 * C50837) *
               C50765 * C8149) *
              C50787 * C1005 +
          (((C13470 + C13471) * C295 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51053 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C294) +
            (C13472 + C13473) * C50837) *
               C50765 * C8147 +
           ((C13475 + C13474) * C295 -
            ((C13473 + C13472) * C51053 + (C13471 + C13470) * C294) +
            (C13477 + C13476) * C50837) *
               C50765 * C8148 +
           ((C13479 + C13478) * C295 - (C13483 * C51053 + C13482 * C294) +
            (C13481 + C13480) * C50837) *
               C50765 * C8149) *
              C50787 * C1006 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C294 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C51053 -
            (C13792 + C13793) * C295 - (C13794 + C13795) * C50837) *
               C50765 * C8147 +
           ((C13793 + C13792) * C294 + (C13795 + C13794) * C51053 -
            (C13796 + C13797) * C295 - (C13798 + C13799) * C50837) *
               C50765 * C8148 +
           ((C13797 + C13796) * C294 + (C13799 + C13798) * C51053 -
            (C5281 * C11617 + C50962 * C11619 + C5280 * C9196 +
             C51068 * C9198) *
                C295 -
            (C5281 * C11618 + C50962 * C11620 + C5280 * C9199 +
             C51068 * C9202) *
                C50837) *
               C50765 * C8149) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C294 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C51053 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C295 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C50837) *
              C50765 * C50924 * C291 +
          ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
            C21013 * C1151 + C21009 * C1156 + C21014 * C3668 + C21010 * C3673) *
               C295 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C51053 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C294) +
           (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
            C21013 * C1157 + C21009 * C1163 + C21014 * C3672 + C21010 * C3677) *
               C50837) *
              C50765 * C50924 * C292 +
          ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
            C21013 * C1010 + C21009 * C1017 + C21014 * C1237 + C21010 * C1243) *
               C294 +
           (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
            C21013 * C1018 + C21009 * C1025 + C21014 * C1242 + C21010 * C1249) *
               C51053 -
           (C21014 * C3667 + C21010 * C3671 + C21013 * C1152 + C21009 * C1158 +
            C21012 * C879 + C21008 * C891 + C21011 * C298 + C21007 * C306) *
               C295 -
           (C21014 * C3670 + C21010 * C3676 + C21013 * C1159 + C21009 * C1164 +
            C21012 * C892 + C21008 * C903 + C21011 * C307 + C21007 * C316) *
               C50837) *
              C50765 * C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
           C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
              C757 +
          (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
           C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
              C752 -
          (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
           C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
              C758 -
          (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
           C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
              C753 +
          (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
           C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
              C759 +
          (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
           C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
              C754 -
          (C21014 * C11617 + C21010 * C11619 + C21013 * C9196 + C21009 * C9198 +
           C21012 * C3207 + C21008 * C3210 + C21011 * C761 + C21007 * C765) *
              C760 -
          (C21014 * C11618 + C21010 * C11620 + C21013 * C9199 + C21009 * C9202 +
           C21012 * C3211 + C21008 * C3216 + C21011 * C766 + C21007 * C773) *
              C755) *
         C50765 * C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C294 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C51053 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C295 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C50837) *
              C50765 * C50924 * C50787 * C1005 +
          ((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
            C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
            C21010 * C13902) *
               C295 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C51053 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C294) +
           (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
            C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
            C21010 * C13904) *
               C50837) *
              C50765 * C50924 * C50787 * C1006 +
          ((C21011 * C1008 + C21007 * C1013 + C21012 * C1239 + C21008 * C1247 +
            C21013 * C6548 + C21009 * C6554 + C21014 * C16718 +
            C21010 * C16722) *
               C294 +
           (C21011 * C1014 + C21007 * C1023 + C21012 * C1246 + C21008 * C1251 +
            C21013 * C6553 + C21009 * C6557 + C21014 * C16721 +
            C21010 * C16724) *
               C51053 -
           (C21014 * C19479 + C21010 * C19481 + C21013 * C13898 +
            C21009 * C13902 + C21012 * C3669 + C21008 * C3675 + C21011 * C1150 +
            C21007 * C1154) *
               C295 -
           (C21014 * C19480 + C21010 * C19482 + C21013 * C13901 +
            C21009 * C13904 + C21012 * C3674 + C21008 * C3678 + C21011 * C1155 +
            C21007 * C1162) *
               C50837) *
              C50765 * C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                     C118 +
                 (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                     C50821) *
                    C2434 +
                ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
                C5339 * C2436) *
                   C50924 * C291 -
               (C5340 * C2436 +
                ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
                ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
                   C50924 * C292 +
               (C5339 * C2434 +
                ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
                ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
                   C50924 * C293) *
                  C51055 +
              ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
                ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
                ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
                   C50924 * C292 -
               (C5718 * C2436 +
                ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
                ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 +
                  C51068 * C488) *
                     C50821 +
                 (C5281 * C1008 + C50962 * C1013 + C5280 * C470 +
                  C51068 * C481) *
                     C118) *
                    C2434) *
                   C50924 * C291 -
               (((C5281 * C1021 + C50962 * C1027 + C5280 * C479 +
                  C51068 * C487) *
                     C50821 +
                 (C5281 * C1012 + C50962 * C1022 + C5280 * C469 +
                  C51068 * C478) *
                     C118) *
                    C2436 +
                ((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C2435 +
                C5718 * C2434) *
                   C50924 * C293) *
                  C50863) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                    C627 +
                (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                    C622 -
                (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                    C628 -
                (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                    C623 +
                (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                    C629 +
                (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                    C624) *
                   C2434 +
               ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
                (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
                (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
                   C2435 +
               (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
                (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
                   C2436) *
                  C50924 * C50787 * C51055 +
              (((C5280 * C875 + C51068 * C883 + C5281 * C1150 +
                 C50962 * C1154) *
                    C628 -
                ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 +
                  C51068 * C488) *
                     C622 +
                 (C5281 * C1008 + C50962 * C1013 + C5280 * C470 +
                  C51068 * C481) *
                     C627) +
                (C5280 * C884 + C51068 * C899 + C5281 * C1155 +
                 C50962 * C1162) *
                    C623 -
                (C5281 * C3551 + C50962 * C3554 + C5280 * C876 +
                 C51068 * C885) *
                    C629 -
                (C5281 * C3555 + C50962 * C3560 + C5280 * C886 +
                 C51068 * C900) *
                    C624) *
                   C2434 +
               ((C5280 * C877 + C51068 * C887 + C5281 * C1151 +
                 C50962 * C1156) *
                    C628 -
                ((C5705 + C5704) * C622 + (C5703 + C5702) * C627) +
                (C5280 * C888 + C51068 * C901 + C5281 * C1157 +
                 C50962 * C1163) *
                    C623 -
                (C5281 * C3552 + C50962 * C3556 + C5280 * C878 +
                 C51068 * C889) *
                    C629 -
                (C5281 * C3557 + C50962 * C3561 + C5280 * C890 +
                 C51068 * C902) *
                    C624) *
                   C2435 +
               ((C5280 * C879 + C51068 * C891 + C5281 * C1152 +
                 C50962 * C1158) *
                    C628 -
                (C5714 * C622 + C5715 * C627) +
                (C5280 * C892 + C51068 * C903 + C5281 * C1159 +
                 C50962 * C1164) *
                    C623 -
                (C5281 * C3553 + C50962 * C3558 + C5280 * C880 +
                 C51068 * C893) *
                    C629 -
                (C5281 * C3559 + C50962 * C3562 + C5280 * C894 +
                 C51068 * C904) *
                    C624) *
                   C2436) *
                  C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C2434 +
           ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
           C5339 * C2436) *
              C50924 * C50787 * C1232 -
          (C5718 * C2436 +
           ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
           ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                C50821 +
            (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                C118) *
               C2434) *
              C50924 * C50787 * C1233 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C118 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C50821) *
               C2434 +
           ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C2435 +
           ((C6299 + C6300) * C118 + (C6301 + C6302) * C50821) * C2436) *
              C50924 * C50787 * C1234 -
          (((C5281 * C6549 + C50962 * C6555 + C5280 * C1242 + C51068 * C1249) *
                C50821 +
            (C5281 * C6546 + C50962 * C6550 + C5280 * C1237 + C51068 * C1243) *
                C118) *
               C2436 +
           ((C5281 * C6551 + C50962 * C6556 + C5280 * C1244 + C51068 * C1250) *
                C50821 +
            (C5281 * C6547 + C50962 * C6552 + C5280 * C1238 + C51068 * C1245) *
                C118) *
               C2435 +
           ((C5281 * C6553 + C50962 * C6557 + C5280 * C1246 + C51068 * C1251) *
                C50821 +
            (C5281 * C6548 + C50962 * C6554 + C5280 * C1239 + C51068 * C1247) *
                C118) *
               C2434) *
              C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            ((C12865 + C12864) * C118 + (C12867 + C12866) * C50821) * C50765 *
                C8149) *
               C291 -
           (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
                C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C292 +
           (C5339 * C50765 * C8147 +
            ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
                C8148 +
            ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
                C8149) *
               C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C5280 * C878 + C51068 * C889 + C5281 * C3552 + C50962 * C3556) *
                 C118 +
             (C5280 * C890 + C51068 * C902 + C5281 * C3557 + C50962 * C3561) *
                 C50821) *
                C50765 * C8149) *
               C292 -
           (((C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                 C50821 +
             (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C1155 + C50962 * C1162 + C5280 * C884 + C51068 * C899) *
                 C50821 +
             (C5281 * C1150 + C50962 * C1154 + C5280 * C875 + C51068 * C883) *
                 C118) *
                C50765 * C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C291 -
           (((C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                 C50821 +
             (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                 C118) *
                C50765 * C8149 +
            ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C50765 *
                C8148 +
            C5718 * C50765 * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - C13286 * C628 - C13287 * C623 +
            (C13297 + C13296) * C629 + (C13299 + C13298) * C624) *
               C50765 * C8149) *
              C50787 * C51055 +
          (((C13470 + C13471) * C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C13472 + C13473) * C623 - C13482 * C629 - C13483 * C624) *
               C50765 * C8147 +
           ((C13475 + C13474) * C628 -
            ((C13473 + C13472) * C622 + (C13471 + C13470) * C627) +
            (C13477 + C13476) * C623 - (C13478 + C13479) * C629 -
            (C13480 + C13481) * C624) *
               C50765 * C8148 +
           ((C13479 + C13478) * C628 - (C13483 * C622 + C13482 * C627) +
            (C13481 + C13480) * C623 -
            (C5281 * C11541 + C50962 * C11542 + C5280 * C8876 +
             C51068 * C8878) *
                C629 -
            (C5281 * C11543 + C50962 * C11544 + C5280 * C8879 +
             C51068 * C8882) *
                C624) *
               C50765 * C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C8147 +
           ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
               C8148 +
           (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
              C50787 * C1232 -
          ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
           ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
               C8148 +
           ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                C50821 +
            (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                C118) *
               C50765 * C8147) *
              C50787 * C1233 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C118 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C50821) *
               C50765 * C8147 +
           ((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C50765 *
               C8148 +
           ((C13797 + C13796) * C118 + (C13799 + C13798) * C50821) * C50765 *
               C8149) *
              C50787 * C1234 -
          (((C5281 * C13899 + C50962 * C13903 + C5280 * C9312 +
             C51068 * C9315) *
                C50821 +
            (C5281 * C13897 + C50962 * C13900 + C5280 * C9309 +
             C51068 * C9313) *
                C118) *
               C50765 * C8149 +
           ((C5281 * C13901 + C50962 * C13904 + C5280 * C3674 +
             C51068 * C3678) *
                C50821 +
            (C5281 * C13898 + C50962 * C13902 + C5280 * C3669 +
             C51068 * C3675) *
                C118) *
               C50765 * C8148 +
           ((C5281 * C6553 + C50962 * C6557 + C5280 * C1246 + C51068 * C1251) *
                C50821 +
            (C5281 * C6548 + C50962 * C6554 + C5280 * C1239 + C51068 * C1247) *
                C118) *
               C50765 * C8147) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C118 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C50821) *
               C50765 * C50924 * C291 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C50821 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C118) *
               C50765 * C50924 * C292 +
           ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
             C21013 * C1010 + C21009 * C1017 + C21014 * C1237 +
             C21010 * C1243) *
                C118 +
            (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
             C21013 * C1018 + C21009 * C1025 + C21014 * C1242 +
             C21010 * C1249) *
                C50821) *
               C50765 * C50924 * C293) *
              C51055 +
          (((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C118 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C50821) *
               C50765 * C50924 * C292 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C50821 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C118) *
               C50765 * C50924 * C291 -
           ((C21014 * C6549 + C21010 * C6555 + C21013 * C1242 + C21009 * C1249 +
             C21012 * C1018 + C21008 * C1025 + C21011 * C475 + C21007 * C485) *
                C50821 +
            (C21014 * C6546 + C21010 * C6550 + C21013 * C1237 + C21009 * C1243 +
             C21012 * C1010 + C21008 * C1017 + C21011 * C467 + C21007 * C474) *
                C118) *
               C50765 * C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C627 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C622 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C628 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C623 +
           (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
            C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
               C629 +
           (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
            C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
               C624) *
              C50765 * C50924 * C50787 * C51055 +
          ((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
            C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
            C21010 * C13902) *
               C628 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C622 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C627) +
           (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
            C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
            C21010 * C13904) *
               C623 -
           (C21014 * C13897 + C21010 * C13900 + C21013 * C9309 +
            C21009 * C9313 + C21012 * C3551 + C21008 * C3554 + C21011 * C876 +
            C21007 * C885) *
               C629 -
           (C21014 * C13899 + C21010 * C13903 + C21013 * C9312 +
            C21009 * C9315 + C21012 * C3555 + C21008 * C3560 + C21011 * C886 +
            C21007 * C900) *
               C624) *
              C50765 * C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C118 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C50821) *
              C50765 * C50924 * C50787 * C1232 -
          ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
            C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
               C50821 +
           (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
            C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
               C118) *
              C50765 * C50924 * C50787 * C1233 +
          ((C21011 * C1008 + C21007 * C1013 + C21012 * C1239 + C21008 * C1247 +
            C21013 * C6548 + C21009 * C6554 + C21014 * C16718 +
            C21010 * C16722) *
               C118 +
           (C21011 * C1014 + C21007 * C1023 + C21012 * C1246 + C21008 * C1251 +
            C21013 * C6553 + C21009 * C6557 + C21014 * C16721 +
            C21010 * C16724) *
               C50821) *
              C50765 * C50924 * C50787 * C1234 -
          ((C21014 * C21736 + C21010 * C21738 + C21013 * C16721 +
            C21009 * C16724 + C21012 * C6553 + C21008 * C6557 + C21011 * C1246 +
            C21007 * C1251) *
               C50821 +
           (C21014 * C21735 + C21010 * C21737 + C21013 * C16718 +
            C21009 * C16722 + C21012 * C6548 + C21008 * C6554 + C21011 * C1239 +
            C21007 * C1247) *
               C118) *
              C50765 * C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
               C51098 -
           ((C13171 * C50821 + C13170 * C118) * C50765 * C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C51084 +
           (C5339 * C50765 * C8147 +
            ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
                C8148 +
            ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
                C8149) *
               C1354) *
              C1765 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C14401 + C14400) * C118 + (C14403 + C14402) * C50821) * C50765 *
                C8149) *
               C51084 -
           ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
                C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C51098 -
           (((C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                 C50821 +
             (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                 C118) *
                C50765 * C8149 +
            ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C50765 *
                C8148 +
            C5718 * C50765 * C8147) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C51098 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C51084 +
           (C5339 * C2434 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
            ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
               C50924 * C1354) *
              C1765 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C51084 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C51098 -
           (((C5281 * C1021 + C50962 * C1027 + C5280 * C479 + C51068 * C487) *
                 C50821 +
             (C5281 * C1012 + C50962 * C1022 + C5280 * C469 + C51068 * C478) *
                 C118) *
                C2436 +
            ((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C2435 +
            C5718 * C2434) *
               C50924 * C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C118 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C50821) *
               C50765 * C50924 * C51098 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C50821 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C118) *
               C50765 * C50924 * C51084 +
           ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
             C21013 * C1010 + C21009 * C1017 + C21014 * C1237 +
             C21010 * C1243) *
                C118 +
            (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
             C21013 * C1018 + C21009 * C1025 + C21014 * C1242 +
             C21010 * C1249) *
                C50821) *
               C50765 * C50924 * C1354) *
              C1765 +
          (((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C118 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C50821) *
               C50765 * C50924 * C51084 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C50821 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C118) *
               C50765 * C50924 * C51098 -
           ((C21014 * C6549 + C21010 * C6555 + C21013 * C1242 + C21009 * C1249 +
             C21012 * C1018 + C21008 * C1025 + C21011 * C475 + C21007 * C485) *
                C50821 +
            (C21014 * C6546 + C21010 * C6550 + C21013 * C1237 + C21009 * C1243 +
             C21012 * C1010 + C21008 * C1017 + C21011 * C467 + C21007 * C474) *
                C118) *
               C50765 * C50924 * C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
                C50765 * C8147 +
            ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
             (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
                C50765 * C8148 +
            (C13160 * C294 + C13161 * C51053 - C13286 * C295 -
             C13287 * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5514 + C5513) * C295 -
             ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
             (C5516 + C5515) * C50837) *
                C50765 * C8147 +
            ((C5881 + C5882) * C295 -
             ((C5515 + C5516) * C51053 + (C5513 + C5514) * C294) +
             (C5883 + C5884) * C50837) *
                C50765 * C8148 +
            ((C13185 + C13184) * C295 - (C13171 * C51053 + C13170 * C294) +
             (C13187 + C13186) * C50837) *
                C50765 * C8149) *
               C50792) *
              C1765 +
          ((((C13470 + C13471) * C295 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C51053 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C294) +
             (C13472 + C13473) * C50837) *
                C50765 * C8147 +
            ((C13475 + C13474) * C295 -
             ((C13473 + C13472) * C51053 + (C13471 + C13470) * C294) +
             (C13477 + C13476) * C50837) *
                C50765 * C8148 +
            ((C13479 + C13478) * C295 - (C13483 * C51053 + C13482 * C294) +
             (C13481 + C13480) * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5702 + C5703) * C294 + (C5704 + C5705) * C51053 -
             (C7069 + C7068) * C295 - (C7071 + C7070) * C50837) *
                C50765 * C8147 +
            ((C7068 + C7069) * C294 + (C7070 + C7071) * C51053 -
             (C14400 + C14401) * C295 - (C14402 + C14403) * C50837) *
                C50765 * C8148 +
            ((C14401 + C14400) * C294 + (C14403 + C14402) * C51053 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C295 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C50837) *
                C50765 * C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                 C295 -
             (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                 C50837) *
                C2434 +
            ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
             (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
                C2435 +
            C5531 * C2436) *
               C50924 * C1480 +
           (((C5514 + C5513) * C295 -
             ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
             (C5516 + C5515) * C50837) *
                C2434 +
            ((C5519 + C5518) * C295 -
             ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
             (C5521 + C5520) * C50837) *
                C2435 +
            ((C5522 + C5523) * C295 - (C5333 * C51053 + C5334 * C294) +
             (C5524 + C5525) * C50837) *
                C2436) *
               C50924 * C50792) *
              C1765 +
          ((((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                 C295 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C51053 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C294) +
             (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                 C50837) *
                C2434 +
            ((C7068 + C7069) * C295 -
             ((C5705 + C5704) * C51053 + (C5703 + C5702) * C294) +
             (C7070 + C7071) * C50837) *
                C2435 +
            ((C7072 + C7073) * C295 - (C5714 * C51053 + C5715 * C294) +
             (C7074 + C7075) * C50837) *
                C2436) *
               C50924 * C1480 +
           (((C5702 + C5703) * C294 + (C5704 + C5705) * C51053 -
             (C7069 + C7068) * C295 - (C7071 + C7070) * C50837) *
                C2434 +
            ((C5706 + C5707) * C294 + (C5708 + C5709) * C51053 -
             (C7073 + C7072) * C295 - (C7075 + C7074) * C50837) *
                C2435 +
            ((C5710 + C5711) * C294 + (C5712 + C5713) * C51053 -
             (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                 C295 -
             (C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                 C50837) *
                C2436) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C294 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C51053 -
            (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
             C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
                C295 -
            (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
             C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
                C50837) *
               C50765 * C50924 * C1480 +
           ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
             C21013 * C1151 + C21009 * C1156 + C21014 * C3668 +
             C21010 * C3673) *
                C295 -
            ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 +
              C21009 * C1024 + C21012 * C473 + C21008 * C484 + C21011 * C129 +
              C21007 * C141) *
                 C51053 +
             (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 +
              C21009 * C1015 + C21012 * C466 + C21008 * C472 + C21011 * C120 +
              C21007 * C128) *
                 C294) +
            (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
             C21013 * C1157 + C21009 * C1163 + C21014 * C3672 +
             C21010 * C3677) *
                C50837) *
               C50765 * C50924 * C50792) *
              C1765 +
          (((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
             C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
             C21010 * C13902) *
                C295 -
            ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 +
              C21009 * C1251 + C21012 * C1014 + C21008 * C1023 + C21011 * C480 +
              C21007 * C488) *
                 C51053 +
             (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 +
              C21009 * C1247 + C21012 * C1008 + C21008 * C1013 + C21011 * C470 +
              C21007 * C481) *
                 C294) +
            (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
             C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
             C21010 * C13904) *
                C50837) *
               C50765 * C50924 * C1480 +
           ((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C294 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C51053 -
            (C21014 * C16615 + C21010 * C16616 + C21013 * C3668 +
             C21009 * C3673 + C21012 * C1151 + C21008 * C1156 + C21011 * C877 +
             C21007 * C887) *
                C295 -
            (C21014 * C16617 + C21010 * C16618 + C21013 * C3672 +
             C21009 * C3677 + C21012 * C1157 + C21008 * C1163 + C21011 * C888 +
             C21007 * C901) *
                C50837) *
               C50765 * C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
               C1480 -
           ((C13171 * C50821 + C13170 * C118) * C50765 * C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C50792) *
              C51100 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C14401 + C14400) * C118 + (C14403 + C14402) * C50821) * C50765 *
                C8149) *
               C50792 -
           ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
                C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C1480) *
              C51090 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C50765 * C8147 +
            ((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C50765 *
                C8148 +
            ((C13797 + C13796) * C118 + (C13799 + C13798) * C50821) * C50765 *
                C8149) *
               C1480 -
           (((C5281 * C9310 + C50962 * C9314 + C5280 * C3557 + C51068 * C3561) *
                 C50821 +
             (C5281 * C9308 + C50962 * C9311 + C5280 * C3552 + C51068 * C3556) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                 C50821 +
             (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                 C118) *
                C50765 * C8148 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C50765 *
                C8147) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C1480 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C50792) *
              C51100 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C50792 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C1480) *
              C51090 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C2434 +
            ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C2435 +
            ((C6299 + C6300) * C118 + (C6301 + C6302) * C50821) * C2436) *
               C50924 * C1480 -
           (((C5281 * C1240 + C50962 * C1248 + C5280 * C1020 + C51068 * C1026) *
                 C50821 +
             (C5281 * C1236 + C50962 * C1241 + C5280 * C1011 + C51068 * C1019) *
                 C118) *
                C2436 +
            ((C6302 + C6301) * C50821 + (C6300 + C6299) * C118) * C2435 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C2434) *
               C50924 * C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C118 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C50821) *
               C50765 * C50924 * C1480 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C50821 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C118) *
               C50765 * C50924 * C50792) *
              C51100 +
          (((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C118 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C50821) *
               C50765 * C50924 * C50792 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C50821 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C118) *
               C50765 * C50924 * C1480) *
              C51090 +
          (((C21011 * C1008 + C21007 * C1013 + C21012 * C1239 + C21008 * C1247 +
             C21013 * C6548 + C21009 * C6554 + C21014 * C16718 +
             C21010 * C16722) *
                C118 +
            (C21011 * C1014 + C21007 * C1023 + C21012 * C1246 + C21008 * C1251 +
             C21013 * C6553 + C21009 * C6557 + C21014 * C16721 +
             C21010 * C16724) *
                C50821) *
               C50765 * C50924 * C1480 -
           ((C21014 * C16719 + C21010 * C16723 + C21013 * C6551 +
             C21009 * C6556 + C21012 * C1244 + C21008 * C1250 + C21011 * C1016 +
             C21007 * C1024) *
                C50821 +
            (C21014 * C16717 + C21010 * C16720 + C21013 * C6547 +
             C21009 * C6552 + C21012 * C1238 + C21008 * C1245 + C21011 * C1009 +
             C21007 * C1015) *
                C118) *
               C50765 * C50924 * C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C628 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C623 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C629 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C624) *
               C2434 +
           ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
            (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
            (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
               C2435 +
           (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
            (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
               C2436) *
              C50924 * C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - (C5882 + C5881) * C629 -
            (C5884 + C5883) * C624) *
               C2434 +
           ((C5519 + C5518) * C628 -
            ((C5322 + C5321) * C622 + (C5320 + C5319) * C627) +
            (C5521 + C5520) * C623 - (C5886 + C5885) * C629 -
            (C5888 + C5887) * C624) *
               C2435 +
           ((C5522 + C5523) * C628 - (C5333 * C622 + C5334 * C627) +
            (C5524 + C5525) * C623 -
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C629 -
            (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C624) *
               C2436) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C2434 +
           ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
           C5339 * C2436) *
              C50924 * C112 -
          (C5340 * C2436 +
           ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
              C50924 * C113 +
          (C5339 * C2434 +
           ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
           ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
              C50924 * C114 -
          (((C5281 * C482 + C50962 * C489 + C5280 * C137 + C51068 * C145) *
                C50821 +
            (C5281 * C471 + C50962 * C483 + C5280 * C124 + C51068 * C136) *
                C118) *
               C2436 +
           ((C5330 + C5329) * C50821 + (C5328 + C5327) * C118) * C2435 +
           C5340 * C2434) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C8147 +
           ((C5280 * C296 + C51068 * C302 + C5281 * C875 + C50962 * C883) *
                C118 +
            (C5280 * C303 + C51068 * C314 + C5281 * C884 + C50962 * C899) *
                C50821) *
               C50765 * C8148 +
           ((C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C118 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C50821) *
               C50765 * C8149) *
              C112 -
          (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
               C8149 +
           ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
               C8148 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
               C8147) *
              C113 +
          (C5339 * C50765 * C8147 +
           ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
               C8148 +
           ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
               C8149) *
              C114 -
          (((C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C50821 +
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C118) *
               C50765 * C8149 +
           ((C5525 + C5524) * C50821 + (C5523 + C5522) * C118) * C50765 *
               C8148 +
           C5340 * C50765 * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - (C13181 + C13180) * C628 -
            (C13183 + C13182) * C623 +
            (C5280 * C3043 + C51068 * C3046 + C5281 * C8876 + C50962 * C8878) *
                C629 +
            (C5280 * C3047 + C51068 * C3052 + C5281 * C8879 + C50962 * C8882) *
                C624) *
               C50765 * C8149) *
              C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - C13170 * C629 - C13171 * C624) *
               C50765 * C8147 +
           ((C5881 + C5882) * C628 -
            ((C5515 + C5516) * C622 + (C5513 + C5514) * C627) +
            (C5883 + C5884) * C623 - (C13184 + C13185) * C629 -
            (C13186 + C13187) * C624) *
               C50765 * C8148 +
           ((C13185 + C13184) * C628 - (C13171 * C622 + C13170 * C627) +
            (C13187 + C13186) * C623 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C629 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C624) *
               C50765 * C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C118 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C50821) *
              C50765 * C50924 * C112 -
          ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
            C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
               C50821 +
           (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
            C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
               C118) *
              C50765 * C50924 * C113 +
          ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
            C21013 * C1010 + C21009 * C1017 + C21014 * C1237 + C21010 * C1243) *
               C118 +
           (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
            C21013 * C1018 + C21009 * C1025 + C21014 * C1242 + C21010 * C1249) *
               C50821) *
              C50765 * C50924 * C114 -
          ((C21014 * C1240 + C21010 * C1248 + C21013 * C1020 + C21009 * C1026 +
            C21012 * C477 + C21008 * C486 + C21011 * C133 + C21007 * C143) *
               C50821 +
           (C21014 * C1236 + C21010 * C1241 + C21013 * C1011 + C21009 * C1019 +
            C21012 * C468 + C21008 * C476 + C21011 * C122 + C21007 * C132) *
               C118) *
              C50765 * C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C627 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C622 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C628 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C623 +
           (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
            C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
               C629 +
           (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
            C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
               C624) *
              C50765 * C50924 * C51046 +
          ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
            C21013 * C1151 + C21009 * C1156 + C21014 * C3668 + C21010 * C3673) *
               C628 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C622 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C627) +
           (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
            C21013 * C1157 + C21009 * C1163 + C21014 * C3672 + C21010 * C3677) *
               C623 -
           (C21014 * C9308 + C21010 * C9311 + C21013 * C3552 + C21009 * C3556 +
            C21012 * C878 + C21008 * C889 + C21011 * C631 + C21007 * C637) *
               C629 -
           (C21014 * C9310 + C21010 * C9314 + C21013 * C3557 + C21009 * C3561 +
            C21012 * C890 + C21008 * C902 + C21011 * C638 + C21007 * C646) *
               C624) *
              C50765 * C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
               C758 -
           (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
               C753 +
           (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
               C759 +
           (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
               C754 -
           (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
               C760 -
           (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
               C755) *
              C2434 +
          ((C5315 + C5316) * C757 + (C5317 + C5318) * C752 -
           (C5513 + C5514) * C758 - (C5515 + C5516) * C753 +
           (C5881 + C5882) * C759 + (C5883 + C5884) * C754 -
           (C5281 * C3208 + C50962 * C3212 + C5280 * C762 + C51068 * C767) *
               C760 -
           (C5281 * C3213 + C50962 * C3217 + C5280 * C768 + C51068 * C774) *
               C755) *
              C2435 +
          (C5331 * C757 + C5332 * C752 - C5526 * C758 - C5527 * C753 +
           (C5885 + C5886) * C759 + (C5887 + C5888) * C754 -
           (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
               C760 -
           (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
               C755) *
              C2436) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C295 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
            (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
               C2435 +
           C5531 * C2436) *
              C50924 * C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C2434 +
           ((C5519 + C5518) * C295 -
            ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
            (C5521 + C5520) * C50837) *
               C2435 +
           ((C5522 + C5523) * C295 - (C5333 * C51053 + C5334 * C294) +
            (C5524 + C5525) * C50837) *
               C2436) *
              C50924 * C292 +
          (C5531 * C2434 +
           ((C5326 + C5325) * C294 + (C5324 + C5323) * C51053 -
            (C5523 + C5522) * C295 - (C5525 + C5524) * C50837) *
               C2435 +
           ((C5327 + C5328) * C294 + (C5329 + C5330) * C51053 -
            (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                C295 -
            (C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                C50837) *
               C2436) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
            (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           ((C12865 + C12864) * C294 + (C12867 + C12866) * C51053 -
            (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
                C295 -
            (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
                C50837) *
               C50765 * C8149) *
              C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C50765 * C8147 +
           ((C5881 + C5882) * C295 -
            ((C5515 + C5516) * C51053 + (C5513 + C5514) * C294) +
            (C5883 + C5884) * C50837) *
               C50765 * C8148 +
           ((C5280 * C762 + C51068 * C767 + C5281 * C3208 + C50962 * C3212) *
                C295 -
            ((C5884 + C5883) * C51053 + (C5882 + C5881) * C294) +
            (C5280 * C768 + C51068 * C774 + C5281 * C3213 + C50962 * C3217) *
                C50837) *
               C50765 * C8149) *
              C292 +
          (C5531 * C50765 * C8147 +
           ((C5519 + C5518) * C294 + (C5521 + C5520) * C51053 -
            (C5886 + C5885) * C295 - (C5888 + C5887) * C50837) *
               C50765 * C8148 +
           ((C5885 + C5886) * C294 + (C5887 + C5888) * C51053 -
            (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                C295 -
            (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                C50837) *
               C50765 * C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C12860 + C12861) * C758 - (C12862 + C12863) * C753 + C13160 * C759 +
           C13161 * C754 - C13286 * C760 - C13287 * C755) *
              C50765 * C8147 +
          ((C12861 + C12860) * C757 + (C12863 + C12862) * C752 -
           (C12864 + C12865) * C758 - (C12866 + C12867) * C753 +
           (C13180 + C13181) * C759 + (C13182 + C13183) * C754 -
           (C13296 + C13297) * C760 - (C13298 + C13299) * C755) *
              C50765 * C8148 +
          (C13160 * C757 + C13161 * C752 - C13286 * C758 - C13287 * C753 +
           (C13297 + C13296) * C759 + (C13299 + C13298) * C754 -
           (C5281 * C11335 + C50962 * C11336 + C5280 * C8716 + C51068 * C8718) *
               C760 -
           (C5281 * C11337 + C50962 * C11338 + C5280 * C8719 + C51068 * C8722) *
               C755) *
              C50765 * C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C294 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C51053 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C295 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C50837) *
              C50765 * C50924 * C291 +
          ((C21011 * C297 + C21007 * C304 + C21012 * C877 + C21008 * C887 +
            C21013 * C1151 + C21009 * C1156 + C21014 * C3668 + C21010 * C3673) *
               C295 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C51053 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C294) +
           (C21011 * C305 + C21007 * C315 + C21012 * C888 + C21008 * C901 +
            C21013 * C1157 + C21009 * C1163 + C21014 * C3672 + C21010 * C3677) *
               C50837) *
              C50765 * C50924 * C292 +
          ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
            C21013 * C1010 + C21009 * C1017 + C21014 * C1237 + C21010 * C1243) *
               C294 +
           (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
            C21013 * C1018 + C21009 * C1025 + C21014 * C1242 + C21010 * C1249) *
               C51053 -
           (C21014 * C3667 + C21010 * C3671 + C21013 * C1152 + C21009 * C1158 +
            C21012 * C879 + C21008 * C891 + C21011 * C298 + C21007 * C306) *
               C295 -
           (C21014 * C3670 + C21010 * C3676 + C21013 * C1159 + C21009 * C1164 +
            C21012 * C892 + C21008 * C903 + C21011 * C307 + C21007 * C316) *
               C50837) *
              C50765 * C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
           C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
              C757 +
          (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
           C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
              C752 -
          (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
           C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
              C758 -
          (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
           C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
              C753 +
          (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
           C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
              C759 +
          (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
           C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
              C754 -
          (C21014 * C11617 + C21010 * C11619 + C21013 * C9196 + C21009 * C9198 +
           C21012 * C3207 + C21008 * C3210 + C21011 * C761 + C21007 * C765) *
              C760 -
          (C21014 * C11618 + C21010 * C11620 + C21013 * C9199 + C21009 * C9202 +
           C21012 * C3211 + C21008 * C3216 + C21011 * C766 + C21007 * C773) *
              C755) *
         C50765 * C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C628 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C623 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C629 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C624) *
               C2434 +
           ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
            (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
            (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
               C2435 +
           (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
            (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
               C2436) *
              C50924 * C50787 * C51055 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C623 -
            (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                C629 -
            (C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                C624) *
               C2434 +
           ((C5280 * C877 + C51068 * C887 + C5281 * C1151 + C50962 * C1156) *
                C628 -
            ((C5705 + C5704) * C622 + (C5703 + C5702) * C627) +
            (C5280 * C888 + C51068 * C901 + C5281 * C1157 + C50962 * C1163) *
                C623 -
            (C5281 * C3552 + C50962 * C3556 + C5280 * C878 + C51068 * C889) *
                C629 -
            (C5281 * C3557 + C50962 * C3561 + C5280 * C890 + C51068 * C902) *
                C624) *
               C2435 +
           ((C5280 * C879 + C51068 * C891 + C5281 * C1152 + C50962 * C1158) *
                C628 -
            (C5714 * C622 + C5715 * C627) +
            (C5280 * C892 + C51068 * C903 + C5281 * C1159 + C50962 * C1164) *
                C623 -
            (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                C629 -
            (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                C624) *
               C2436) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C291 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C292 +
           (C5339 * C2434 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
            ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
               C50924 * C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C292 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C291 -
           (((C5281 * C1021 + C50962 * C1027 + C5280 * C479 + C51068 * C487) *
                 C50821 +
             (C5281 * C1012 + C50962 * C1022 + C5280 * C469 + C51068 * C478) *
                 C118) *
                C2436 +
            ((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C2435 +
            C5718 * C2434) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            ((C12865 + C12864) * C118 + (C12867 + C12866) * C50821) * C50765 *
                C8149) *
               C291 -
           (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
                C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C292 +
           (C5339 * C50765 * C8147 +
            ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
                C8148 +
            ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
                C8149) *
               C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C5280 * C878 + C51068 * C889 + C5281 * C3552 + C50962 * C3556) *
                 C118 +
             (C5280 * C890 + C51068 * C902 + C5281 * C3557 + C50962 * C3561) *
                 C50821) *
                C50765 * C8149) *
               C292 -
           (((C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                 C50821 +
             (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C1155 + C50962 * C1162 + C5280 * C884 + C51068 * C899) *
                 C50821 +
             (C5281 * C1150 + C50962 * C1154 + C5280 * C875 + C51068 * C883) *
                 C118) *
                C50765 * C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C291 -
           (((C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                 C50821 +
             (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                 C118) *
                C50765 * C8149 +
            ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C50765 *
                C8148 +
            C5718 * C50765 * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - C13286 * C628 - C13287 * C623 +
            (C13297 + C13296) * C629 + (C13299 + C13298) * C624) *
               C50765 * C8149) *
              C50787 * C51055 +
          (((C13470 + C13471) * C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C13472 + C13473) * C623 - C13482 * C629 - C13483 * C624) *
               C50765 * C8147 +
           ((C13475 + C13474) * C628 -
            ((C13473 + C13472) * C622 + (C13471 + C13470) * C627) +
            (C13477 + C13476) * C623 - (C13478 + C13479) * C629 -
            (C13480 + C13481) * C624) *
               C50765 * C8148 +
           ((C13479 + C13478) * C628 - (C13483 * C622 + C13482 * C627) +
            (C13481 + C13480) * C623 -
            (C5281 * C11541 + C50962 * C11542 + C5280 * C8876 +
             C51068 * C8878) *
                C629 -
            (C5281 * C11543 + C50962 * C11544 + C5280 * C8879 +
             C51068 * C8882) *
                C624) *
               C50765 * C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
             C21013 * C1008 + C21009 * C1013 + C21014 * C1239 +
             C21010 * C1247) *
                C118 +
            (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
             C21013 * C1014 + C21009 * C1023 + C21014 * C1246 +
             C21010 * C1251) *
                C50821) *
               C50765 * C50924 * C291 -
           ((C21014 * C1244 + C21010 * C1250 + C21013 * C1016 + C21009 * C1024 +
             C21012 * C473 + C21008 * C484 + C21011 * C129 + C21007 * C141) *
                C50821 +
            (C21014 * C1238 + C21010 * C1245 + C21013 * C1009 + C21009 * C1015 +
             C21012 * C466 + C21008 * C472 + C21011 * C120 + C21007 * C128) *
                C118) *
               C50765 * C50924 * C292 +
           ((C21011 * C121 + C21007 * C130 + C21012 * C467 + C21008 * C474 +
             C21013 * C1010 + C21009 * C1017 + C21014 * C1237 +
             C21010 * C1243) *
                C118 +
            (C21011 * C131 + C21007 * C142 + C21012 * C475 + C21008 * C485 +
             C21013 * C1018 + C21009 * C1025 + C21014 * C1242 +
             C21010 * C1249) *
                C50821) *
               C50765 * C50924 * C293) *
              C51055 +
          (((C21011 * C466 + C21007 * C472 + C21012 * C1009 + C21008 * C1015 +
             C21013 * C1238 + C21009 * C1245 + C21014 * C6547 +
             C21010 * C6552) *
                C118 +
            (C21011 * C473 + C21007 * C484 + C21012 * C1016 + C21008 * C1024 +
             C21013 * C1244 + C21009 * C1250 + C21014 * C6551 +
             C21010 * C6556) *
                C50821) *
               C50765 * C50924 * C292 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C50821 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C118) *
               C50765 * C50924 * C291 -
           ((C21014 * C6549 + C21010 * C6555 + C21013 * C1242 + C21009 * C1249 +
             C21012 * C1018 + C21008 * C1025 + C21011 * C475 + C21007 * C485) *
                C50821 +
            (C21014 * C6546 + C21010 * C6550 + C21013 * C1237 + C21009 * C1243 +
             C21012 * C1010 + C21008 * C1017 + C21011 * C467 + C21007 * C474) *
                C118) *
               C50765 * C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21011 * C119 + C21007 * C126 + C21012 * C470 + C21008 * C481 +
            C21013 * C1008 + C21009 * C1013 + C21014 * C1239 + C21010 * C1247) *
               C627 +
           (C21011 * C127 + C21007 * C140 + C21012 * C480 + C21008 * C488 +
            C21013 * C1014 + C21009 * C1023 + C21014 * C1246 + C21010 * C1251) *
               C622 -
           (C21014 * C3669 + C21010 * C3675 + C21013 * C1150 + C21009 * C1154 +
            C21012 * C875 + C21008 * C883 + C21011 * C296 + C21007 * C302) *
               C628 -
           (C21014 * C3674 + C21010 * C3678 + C21013 * C1155 + C21009 * C1162 +
            C21012 * C884 + C21008 * C899 + C21011 * C303 + C21007 * C314) *
               C623 +
           (C21011 * C630 + C21007 * C635 + C21012 * C876 + C21008 * C885 +
            C21013 * C3551 + C21009 * C3554 + C21014 * C9309 + C21010 * C9313) *
               C629 +
           (C21011 * C636 + C21007 * C645 + C21012 * C886 + C21008 * C900 +
            C21013 * C3555 + C21009 * C3560 + C21014 * C9312 + C21010 * C9315) *
               C624) *
              C50765 * C50924 * C50787 * C51055 +
          ((C21011 * C875 + C21007 * C883 + C21012 * C1150 + C21008 * C1154 +
            C21013 * C3669 + C21009 * C3675 + C21014 * C13898 +
            C21010 * C13902) *
               C628 -
           ((C21014 * C6553 + C21010 * C6557 + C21013 * C1246 + C21009 * C1251 +
             C21012 * C1014 + C21008 * C1023 + C21011 * C480 + C21007 * C488) *
                C622 +
            (C21014 * C6548 + C21010 * C6554 + C21013 * C1239 + C21009 * C1247 +
             C21012 * C1008 + C21008 * C1013 + C21011 * C470 + C21007 * C481) *
                C627) +
           (C21011 * C884 + C21007 * C899 + C21012 * C1155 + C21008 * C1162 +
            C21013 * C3674 + C21009 * C3678 + C21014 * C13901 +
            C21010 * C13904) *
               C623 -
           (C21014 * C13897 + C21010 * C13900 + C21013 * C9309 +
            C21009 * C9313 + C21012 * C3551 + C21008 * C3554 + C21011 * C876 +
            C21007 * C885) *
               C629 -
           (C21014 * C13899 + C21010 * C13903 + C21013 * C9312 +
            C21009 * C9315 + C21012 * C3555 + C21008 * C3560 + C21011 * C886 +
            C21007 * C900) *
               C624) *
              C50765 * C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1355 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C1350 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C1356 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C50837) *
               C51097 +
           ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
            (C31832 + C31833) * C1356 - (C31834 + C31835) * C50837) *
               C51081 +
           C33018 * C22817) *
              C50924 * C51098 +
          (((C31833 + C31832) * C1356 -
            ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
            (C31835 + C31834) * C50837) *
               C51097 +
           ((C31838 + C31837) * C1356 -
            ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
            (C31840 + C31839) * C50837) *
               C51081 +
           ((C31841 + C31842) * C1356 - (C31652 * C1350 + C31653 * C1355) +
            (C31843 + C31844) * C50837) *
               C22817) *
              C50924 * C51084 +
          (C33018 * C51097 +
           ((C31645 + C31644) * C1355 + (C31643 + C31642) * C1350 -
            (C31842 + C31841) * C1356 - (C31844 + C31843) * C50837) *
               C51081 +
           ((C31646 + C31647) * C1355 + (C31648 + C31649) * C1350 -
            (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                C1356 -
            (C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                C50837) *
               C22817) *
              C50924 * C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1482 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51099 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C1483 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C51087 +
            (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
                C1484 +
            (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
                C1479) *
               C51097 +
           ((C31634 + C31635) * C1482 + (C31636 + C31637) * C51099 -
            (C31832 + C31833) * C1483 - (C31834 + C31835) * C51087 +
            (C32200 + C32201) * C1484 + (C32202 + C32203) * C1479) *
               C51081 +
           (C31650 * C1482 + C31651 * C51099 - C31845 * C1483 -
            C31846 * C51087 + (C32204 + C32205) * C1484 +
            (C32206 + C32207) * C1479) *
               C22817) *
              C50924 * C1480 +
          (((C31833 + C31832) * C1483 -
            ((C31637 + C31636) * C51099 + (C31635 + C31634) * C1482) +
            (C31835 + C31834) * C51087 - (C32201 + C32200) * C1484 -
            (C32203 + C32202) * C1479) *
               C51097 +
           ((C31838 + C31837) * C1483 -
            ((C31641 + C31640) * C51099 + (C31639 + C31638) * C1482) +
            (C31840 + C31839) * C51087 - (C32205 + C32204) * C1484 -
            (C32207 + C32206) * C1479) *
               C51081 +
           ((C31841 + C31842) * C1483 - (C31652 * C51099 + C31653 * C1482) +
            (C31843 + C31844) * C51087 -
            (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                C1484 -
            (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                C1479) *
               C22817) *
              C50924 * C50792) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                 C1356 -
             (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                 C50837) *
                C51097 +
            ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
             (C31832 + C31833) * C1356 - (C31834 + C31835) * C50837) *
                C51081 +
            C33018 * C22817) *
               C50924 * C1480 +
           (((C31833 + C31832) * C1356 -
             ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
             (C31835 + C31834) * C50837) *
                C51097 +
            ((C31838 + C31837) * C1356 -
             ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
             (C31840 + C31839) * C50837) *
                C51081 +
            ((C31841 + C31842) * C1356 - (C31652 * C1350 + C31653 * C1355) +
             (C31843 + C31844) * C50837) *
                C22817) *
               C50924 * C50792) *
              C51055 +
          ((((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                 C1356 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C1350 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1355) +
             (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                 C50837) *
                C51097 +
            ((C33375 + C33376) * C1356 -
             ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
             (C33377 + C33378) * C50837) *
                C51081 +
            ((C33379 + C33380) * C1356 - (C32033 * C1350 + C32034 * C1355) +
             (C33381 + C33382) * C50837) *
                C22817) *
               C50924 * C1480 +
           (((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
             (C33376 + C33375) * C1356 - (C33378 + C33377) * C50837) *
                C51097 +
            ((C32025 + C32026) * C1355 + (C32027 + C32028) * C1350 -
             (C33380 + C33379) * C1356 - (C33382 + C33381) * C50837) *
                C51081 +
            ((C32029 + C32030) * C1355 + (C32031 + C32032) * C1350 -
             (C31600 * C1153 + C50962 * C1160 + C31599 * C881 + C31597 * C895) *
                 C1356 -
             (C31600 * C1161 + C50962 * C1165 + C31599 * C896 + C31597 * C905) *
                 C50837) *
                C22817) *
               C50924 * C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                 C1356 -
             (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                 C50837) *
                C51097 +
            ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
             (C31832 + C31833) * C1356 - (C31834 + C31835) * C50837) *
                C51081 +
            C33018 * C22817) *
               C50924 * C51046 +
           (((C31833 + C31832) * C1356 -
             ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
             (C31835 + C31834) * C50837) *
                C51097 +
            ((C31838 + C31837) * C1356 -
             ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
             (C31840 + C31839) * C50837) *
                C51081 +
            ((C31841 + C31842) * C1356 - (C31652 * C1350 + C31653 * C1355) +
             (C31843 + C31844) * C50837) *
                C22817) *
               C50924 * C50792) *
              C1765 +
          ((((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                 C1356 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C1350 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1355) +
             (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                 C50837) *
                C51097 +
            ((C33375 + C33376) * C1356 -
             ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
             (C33377 + C33378) * C50837) *
                C51081 +
            ((C33379 + C33380) * C1356 - (C32033 * C1350 + C32034 * C1355) +
             (C33381 + C33382) * C50837) *
                C22817) *
               C50924 * C51046 +
           (((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
             (C33376 + C33375) * C1356 - (C33378 + C33377) * C50837) *
                C51097 +
            ((C32025 + C32026) * C1355 + (C32027 + C32028) * C1350 -
             (C33380 + C33379) * C1356 - (C33382 + C33381) * C50837) *
                C51081 +
            ((C32029 + C32030) * C1355 + (C32031 + C32032) * C1350 -
             (C31600 * C1153 + C50962 * C1160 + C31599 * C881 + C31597 * C895) *
                 C1356 -
             (C31600 * C1161 + C50962 * C1165 + C31599 * C896 + C31597 * C905) *
                 C50837) *
                C22817) *
               C50924 * C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1482 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51099 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C1483 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C51087 +
            (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
                C1484 +
            (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
                C1479) *
               C51097 +
           ((C31634 + C31635) * C1482 + (C31636 + C31637) * C51099 -
            (C31832 + C31833) * C1483 - (C31834 + C31835) * C51087 +
            (C32200 + C32201) * C1484 + (C32202 + C32203) * C1479) *
               C51081 +
           (C31650 * C1482 + C31651 * C51099 - C31845 * C1483 -
            C31846 * C51087 + (C32204 + C32205) * C1484 +
            (C32206 + C32207) * C1479) *
               C22817) *
              C50924 * C50787 * C1765 +
          (((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                C1483 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C51099 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C1482) +
            (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                C51087 -
            (C31600 * C3551 + C50962 * C3554 + C31599 * C876 + C31597 * C885) *
                C1484 -
            (C31600 * C3555 + C50962 * C3560 + C31599 * C886 + C31597 * C900) *
                C1479) *
               C51097 +
           ((C33375 + C33376) * C1483 -
            ((C32024 + C32023) * C51099 + (C32022 + C32021) * C1482) +
            (C33377 + C33378) * C51087 -
            (C31600 * C3552 + C50962 * C3556 + C31599 * C878 + C31597 * C889) *
                C1484 -
            (C31600 * C3557 + C50962 * C3561 + C31599 * C890 + C31597 * C902) *
                C1479) *
               C51081 +
           ((C33379 + C33380) * C1483 - (C32033 * C51099 + C32034 * C1482) +
            (C33381 + C33382) * C51087 -
            (C31600 * C3553 + C50962 * C3558 + C31599 * C880 + C31597 * C893) *
                C1484 -
            (C31600 * C3559 + C50962 * C3562 + C31599 * C894 + C31597 * C904) *
                C1479) *
               C22817) *
              C50924 * C50787 * C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C1355 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C1350 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C1356 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C50837) *
               C51097 +
           ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
            (C31832 + C31833) * C1356 - (C31834 + C31835) * C50837) *
               C51081 +
           C33018 * C22817) *
              C50924 * C50787 * C51100 +
          (((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                C1356 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C1350 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C1355) +
            (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                C50837) *
               C51097 +
           ((C33375 + C33376) * C1356 -
            ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
            (C33377 + C33378) * C50837) *
               C51081 +
           ((C33379 + C33380) * C1356 - (C32033 * C1350 + C32034 * C1355) +
            (C33381 + C33382) * C50837) *
               C22817) *
              C50924 * C50787 * C51090 +
          (((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
             C50962 * C1247) *
                C1355 +
            (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
             C50962 * C1251) *
                C1350 -
            (C31600 * C3669 + C50962 * C3675 + C31599 * C1150 +
             C31597 * C1154) *
                C1356 -
            (C31600 * C3674 + C50962 * C3678 + C31599 * C1155 +
             C31597 * C1162) *
                C50837) *
               C51097 +
           ((C32614 + C32615) * C1355 + (C32616 + C32617) * C1350 -
            (C31600 * C3668 + C50962 * C3673 + C31599 * C1151 +
             C31597 * C1156) *
                C1356 -
            (C31600 * C3672 + C50962 * C3677 + C31599 * C1157 +
             C31597 * C1163) *
                C50837) *
               C51081 +
           ((C32618 + C32619) * C1355 + (C32620 + C32621) * C1350 -
            (C31600 * C3667 + C50962 * C3671 + C31599 * C1152 +
             C31597 * C1158) *
                C1356 -
            (C31600 * C3670 + C50962 * C3676 + C31599 * C1159 +
             C31597 * C1164) *
                C50837) *
               C22817) *
              C50924 * C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C628 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C623 +
            (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
                C629 +
            (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
                C624) *
               C51097 +
           ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
            (C31832 + C31833) * C628 - (C31834 + C31835) * C623 +
            (C32200 + C32201) * C629 + (C32202 + C32203) * C624) *
               C51081 +
           (C31650 * C627 + C31651 * C622 - C31845 * C628 - C31846 * C623 +
            (C32204 + C32205) * C629 + (C32206 + C32207) * C624) *
               C22817) *
              C50924 * C51046 +
          (((C31833 + C31832) * C628 -
            ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
            (C31835 + C31834) * C623 - (C32201 + C32200) * C629 -
            (C32203 + C32202) * C624) *
               C51097 +
           ((C31838 + C31837) * C628 -
            ((C31641 + C31640) * C622 + (C31639 + C31638) * C627) +
            (C31840 + C31839) * C623 - (C32205 + C32204) * C629 -
            (C32207 + C32206) * C624) *
               C51081 +
           ((C31841 + C31842) * C628 - (C31652 * C622 + C31653 * C627) +
            (C31843 + C31844) * C623 -
            (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                C629 -
            (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                C624) *
               C22817) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C118 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C50821) *
               C51097 +
           ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
           C31658 * C22817) *
              C50924 * C112 -
          (C31659 * C22817 +
           ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
           ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
              C50924 * C113 +
          (C31658 * C51097 +
           ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C51081 +
           ((C31646 + C31647) * C118 + (C31648 + C31649) * C50821) * C22817) *
              C50924 * C114 -
          (((C31600 * C482 + C50962 * C489 + C31599 * C137 + C31597 * C145) *
                C50821 +
            (C31600 * C471 + C50962 * C483 + C31599 * C124 + C31597 * C136) *
                C118) *
               C22817 +
           ((C31649 + C31648) * C50821 + (C31647 + C31646) * C118) * C51081 +
           C31659 * C51097) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51097 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
            C31658 * C22817) *
               C50924 * C51046 -
           (C31659 * C22817 +
            ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
               C50924 * C50792) *
              C1005 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51097 +
            ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C51081 +
            ((C32029 + C32030) * C118 + (C32031 + C32032) * C50821) * C22817) *
               C50924 * C50792 -
           (C32037 * C22817 +
            ((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C51081 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C51097) *
               C50924 * C51046) *
              C1006 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C118 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C50821) *
                C51097 +
            ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C51081 +
            ((C32618 + C32619) * C118 + (C32620 + C32621) * C50821) * C22817) *
               C50924 * C51046 -
           (((C31600 * C1240 + C50962 * C1248 + C31599 * C1020 +
              C31597 * C1026) *
                 C50821 +
             (C31600 * C1236 + C50962 * C1241 + C31599 * C1011 +
              C31597 * C1019) *
                 C118) *
                C22817 +
            ((C32621 + C32620) * C50821 + (C32619 + C32618) * C118) * C51081 +
            ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C51097) *
               C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
               C757 +
           (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
               C752 -
           (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
               C758 -
           (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
               C753 +
           (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
               C759 +
           (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
               C754 -
           (C31600 * C3207 + C50962 * C3210 + C31599 * C761 + C31597 * C765) *
               C760 -
           (C31600 * C3211 + C50962 * C3216 + C31599 * C766 + C31597 * C773) *
               C755) *
              C51097 +
          ((C31634 + C31635) * C757 + (C31636 + C31637) * C752 -
           (C31832 + C31833) * C758 - (C31834 + C31835) * C753 +
           (C32200 + C32201) * C759 + (C32202 + C32203) * C754 -
           (C31600 * C3208 + C50962 * C3212 + C31599 * C762 + C31597 * C767) *
               C760 -
           (C31600 * C3213 + C50962 * C3217 + C31599 * C768 + C31597 * C774) *
               C755) *
              C51081 +
          (C31650 * C757 + C31651 * C752 - C31845 * C758 - C31846 * C753 +
           (C32204 + C32205) * C759 + (C32206 + C32207) * C754 -
           (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
               C760 -
           (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
               C755) *
              C22817) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C294 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51053 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C295 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C50837) *
               C51097 +
           ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
            (C31832 + C31833) * C295 - (C31834 + C31835) * C50837) *
               C51081 +
           C31850 * C22817) *
              C50924 * C291 +
          (((C31833 + C31832) * C295 -
            ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
            (C31835 + C31834) * C50837) *
               C51097 +
           ((C31838 + C31837) * C295 -
            ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
            (C31840 + C31839) * C50837) *
               C51081 +
           ((C31841 + C31842) * C295 - (C31652 * C51053 + C31653 * C294) +
            (C31843 + C31844) * C50837) *
               C22817) *
              C50924 * C292 +
          (C31850 * C51097 +
           ((C31645 + C31644) * C294 + (C31643 + C31642) * C51053 -
            (C31842 + C31841) * C295 - (C31844 + C31843) * C50837) *
               C51081 +
           ((C31646 + C31647) * C294 + (C31648 + C31649) * C51053 -
            (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                C295 -
            (C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                C50837) *
               C22817) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C294 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51053 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C295 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C50837) *
               C51097 +
           ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
            (C31832 + C31833) * C295 - (C31834 + C31835) * C50837) *
               C51081 +
           C31850 * C22817) *
              C50924 * C50787 * C1005 +
          (((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                C295 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C51053 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C294) +
            (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                C50837) *
               C51097 +
           ((C31599 * C877 + C31597 * C887 + C31600 * C1151 + C50962 * C1156) *
                C295 -
            ((C32024 + C32023) * C51053 + (C32022 + C32021) * C294) +
            (C31599 * C888 + C31597 * C901 + C31600 * C1157 + C50962 * C1163) *
                C50837) *
               C51081 +
           ((C31599 * C879 + C31597 * C891 + C31600 * C1152 + C50962 * C1158) *
                C295 -
            (C32033 * C51053 + C32034 * C294) +
            (C31599 * C892 + C31597 * C903 + C31600 * C1159 + C50962 * C1164) *
                C50837) *
               C22817) *
              C50924 * C50787 * C1006 +
          (((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
             C50962 * C1247) *
                C294 +
            (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
             C50962 * C1251) *
                C51053 -
            (C31600 * C3669 + C50962 * C3675 + C31599 * C1150 +
             C31597 * C1154) *
                C295 -
            (C31600 * C3674 + C50962 * C3678 + C31599 * C1155 +
             C31597 * C1162) *
                C50837) *
               C51097 +
           ((C32614 + C32615) * C294 + (C32616 + C32617) * C51053 -
            (C31600 * C3668 + C50962 * C3673 + C31599 * C1151 +
             C31597 * C1156) *
                C295 -
            (C31600 * C3672 + C50962 * C3677 + C31599 * C1157 +
             C31597 * C1163) *
                C50837) *
               C51081 +
           ((C32618 + C32619) * C294 + (C32620 + C32621) * C51053 -
            (C31600 * C3667 + C50962 * C3671 + C31599 * C1152 +
             C31597 * C1158) *
                C295 -
            (C31600 * C3670 + C50962 * C3676 + C31599 * C1159 +
             C31597 * C1164) *
                C50837) *
               C22817) *
              C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C628 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C623 +
            (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
                C629 +
            (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
                C624) *
               C51097 +
           ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
            (C31832 + C31833) * C628 - (C31834 + C31835) * C623 +
            (C32200 + C32201) * C629 + (C32202 + C32203) * C624) *
               C51081 +
           (C31650 * C627 + C31651 * C622 - C31845 * C628 - C31846 * C623 +
            (C32204 + C32205) * C629 + (C32206 + C32207) * C624) *
               C22817) *
              C50924 * C50787 * C51055 +
          (((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                C628 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C622 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C627) +
            (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                C623 -
            (C31600 * C3551 + C50962 * C3554 + C31599 * C876 + C31597 * C885) *
                C629 -
            (C31600 * C3555 + C50962 * C3560 + C31599 * C886 + C31597 * C900) *
                C624) *
               C51097 +
           ((C31599 * C877 + C31597 * C887 + C31600 * C1151 + C50962 * C1156) *
                C628 -
            ((C32024 + C32023) * C622 + (C32022 + C32021) * C627) +
            (C31599 * C888 + C31597 * C901 + C31600 * C1157 + C50962 * C1163) *
                C623 -
            (C31600 * C3552 + C50962 * C3556 + C31599 * C878 + C31597 * C889) *
                C629 -
            (C31600 * C3557 + C50962 * C3561 + C31599 * C890 + C31597 * C902) *
                C624) *
               C51081 +
           ((C31599 * C879 + C31597 * C891 + C31600 * C1152 + C50962 * C1158) *
                C628 -
            (C32033 * C622 + C32034 * C627) +
            (C31599 * C892 + C31597 * C903 + C31600 * C1159 + C50962 * C1164) *
                C623 -
            (C31600 * C3553 + C50962 * C3558 + C31599 * C880 + C31597 * C893) *
                C629 -
            (C31600 * C3559 + C50962 * C3562 + C31599 * C894 + C31597 * C904) *
                C624) *
               C22817) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51097 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
            C31658 * C22817) *
               C50924 * C291 -
           (C31659 * C22817 +
            ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
               C50924 * C292 +
           (C31658 * C51097 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C51081 +
            ((C31646 + C31647) * C118 + (C31648 + C31649) * C50821) * C22817) *
               C50924 * C293) *
              C51055 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51097 +
            ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C51081 +
            ((C32029 + C32030) * C118 + (C32031 + C32032) * C50821) * C22817) *
               C50924 * C292 -
           (C32037 * C22817 +
            ((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C51081 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C51097) *
               C50924 * C291 -
           (((C31600 * C1021 + C50962 * C1027 + C31599 * C479 + C31597 * C487) *
                 C50821 +
             (C31600 * C1012 + C50962 * C1022 + C31599 * C469 + C31597 * C478) *
                 C118) *
                C22817 +
            ((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C51081 +
            C32037 * C51097) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C118 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C50821) *
               C51097 +
           ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
           C31658 * C22817) *
              C50924 * C50787 * C1232 -
          (C32037 * C22817 +
           ((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C51081 +
           ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                C50821 +
            (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                C118) *
               C51097) *
              C50924 * C50787 * C1233 +
          (((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
             C50962 * C1247) *
                C118 +
            (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
             C50962 * C1251) *
                C50821) *
               C51097 +
           ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C51081 +
           ((C32618 + C32619) * C118 + (C32620 + C32621) * C50821) * C22817) *
              C50924 * C50787 * C1234 -
          (((C31600 * C6549 + C50962 * C6555 + C31599 * C1242 +
             C31597 * C1249) *
                C50821 +
            (C31600 * C6546 + C50962 * C6550 + C31599 * C1237 +
             C31597 * C1243) *
                C118) *
               C22817 +
           ((C31600 * C6551 + C50962 * C6556 + C31599 * C1244 +
             C31597 * C1250) *
                C50821 +
            (C31600 * C6547 + C50962 * C6552 + C31599 * C1238 +
             C31597 * C1245) *
                C118) *
               C51081 +
           ((C31600 * C6553 + C50962 * C6557 + C31599 * C1246 +
             C31597 * C1251) *
                C50821 +
            (C31600 * C6548 + C50962 * C6554 + C31599 * C1239 +
             C31597 * C1247) *
                C118) *
               C51097) *
              C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51097 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
            C31658 * C22817) *
               C50924 * C51098 -
           (C31659 * C22817 +
            ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
               C50924 * C51084 +
           (C31658 * C51097 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C51081 +
            ((C31646 + C31647) * C118 + (C31648 + C31649) * C50821) * C22817) *
               C50924 * C1354) *
              C1765 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51097 +
            ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C51081 +
            ((C32029 + C32030) * C118 + (C32031 + C32032) * C50821) * C22817) *
               C50924 * C51084 -
           (C32037 * C22817 +
            ((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C51081 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C51097) *
               C50924 * C51098 -
           (((C31600 * C1021 + C50962 * C1027 + C31599 * C479 + C31597 * C487) *
                 C50821 +
             (C31600 * C1012 + C50962 * C1022 + C31599 * C469 + C31597 * C478) *
                 C118) *
                C22817 +
            ((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C51081 +
            C32037 * C51097) *
               C50924 * C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                 C295 -
             (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                 C50837) *
                C51097 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             (C31832 + C31833) * C295 - (C31834 + C31835) * C50837) *
                C51081 +
            C31850 * C22817) *
               C50924 * C1480 +
           (((C31833 + C31832) * C295 -
             ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
             (C31835 + C31834) * C50837) *
                C51097 +
            ((C31838 + C31837) * C295 -
             ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
             (C31840 + C31839) * C50837) *
                C51081 +
            ((C31841 + C31842) * C295 - (C31652 * C51053 + C31653 * C294) +
             (C31843 + C31844) * C50837) *
                C22817) *
               C50924 * C50792) *
              C1765 +
          ((((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                 C295 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C51053 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C294) +
             (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                 C50837) *
                C51097 +
            ((C33375 + C33376) * C295 -
             ((C32024 + C32023) * C51053 + (C32022 + C32021) * C294) +
             (C33377 + C33378) * C50837) *
                C51081 +
            ((C33379 + C33380) * C295 - (C32033 * C51053 + C32034 * C294) +
             (C33381 + C33382) * C50837) *
                C22817) *
               C50924 * C1480 +
           (((C32021 + C32022) * C294 + (C32023 + C32024) * C51053 -
             (C33376 + C33375) * C295 - (C33378 + C33377) * C50837) *
                C51097 +
            ((C32025 + C32026) * C294 + (C32027 + C32028) * C51053 -
             (C33380 + C33379) * C295 - (C33382 + C33381) * C50837) *
                C51081 +
            ((C32029 + C32030) * C294 + (C32031 + C32032) * C51053 -
             (C31600 * C1153 + C50962 * C1160 + C31599 * C881 + C31597 * C895) *
                 C295 -
             (C31600 * C1161 + C50962 * C1165 + C31599 * C896 + C31597 * C905) *
                 C50837) *
                C22817) *
               C50924 * C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51097 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
            C31658 * C22817) *
               C50924 * C1480 -
           (C31659 * C22817 +
            ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
               C50924 * C50792) *
              C51100 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51097 +
            ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C51081 +
            ((C32029 + C32030) * C118 + (C32031 + C32032) * C50821) * C22817) *
               C50924 * C50792 -
           (C32037 * C22817 +
            ((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C51081 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C51097) *
               C50924 * C1480) *
              C51090 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C118 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C50821) *
                C51097 +
            ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C51081 +
            ((C32618 + C32619) * C118 + (C32620 + C32621) * C50821) * C22817) *
               C50924 * C1480 -
           (((C31600 * C1240 + C50962 * C1248 + C31599 * C1020 +
              C31597 * C1026) *
                 C50821 +
             (C31600 * C1236 + C50962 * C1241 + C31599 * C1011 +
              C31597 * C1019) *
                 C118) *
                C22817 +
            ((C32621 + C32620) * C50821 + (C32619 + C32618) * C118) * C51081 +
            ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C51097) *
               C50924 * C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C118 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C50821) *
               C51097 +
           ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
           C31658 * C22817) *
              C50924 * C112 -
          (C31659 * C22817 +
           ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
           ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
              C50924 * C113 +
          (C31658 * C51097 +
           ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C51081 +
           ((C31646 + C31647) * C118 + (C31648 + C31649) * C50821) * C22817) *
              C50924 * C114 -
          (((C31600 * C482 + C50962 * C489 + C31599 * C137 + C31597 * C145) *
                C50821 +
            (C31600 * C471 + C50962 * C483 + C31599 * C124 + C31597 * C136) *
                C118) *
               C22817 +
           ((C31649 + C31648) * C50821 + (C31647 + C31646) * C118) * C51081 +
           C31659 * C51097) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C628 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C623 +
            (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
                C629 +
            (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
                C624) *
               C51097 +
           ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
            (C31832 + C31833) * C628 - (C31834 + C31835) * C623 +
            (C32200 + C32201) * C629 + (C32202 + C32203) * C624) *
               C51081 +
           (C31650 * C627 + C31651 * C622 - C31845 * C628 - C31846 * C623 +
            (C32204 + C32205) * C629 + (C32206 + C32207) * C624) *
               C22817) *
              C50924 * C51046 +
          (((C31833 + C31832) * C628 -
            ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
            (C31835 + C31834) * C623 - (C32201 + C32200) * C629 -
            (C32203 + C32202) * C624) *
               C51097 +
           ((C31838 + C31837) * C628 -
            ((C31641 + C31640) * C622 + (C31639 + C31638) * C627) +
            (C31840 + C31839) * C623 - (C32205 + C32204) * C629 -
            (C32207 + C32206) * C624) *
               C51081 +
           ((C31841 + C31842) * C628 - (C31652 * C622 + C31653 * C627) +
            (C31843 + C31844) * C623 -
            (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                C629 -
            (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                C624) *
               C22817) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C294 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C51053 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C295 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C50837) *
               C51097 +
           ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
            (C31832 + C31833) * C295 - (C31834 + C31835) * C50837) *
               C51081 +
           C31850 * C22817) *
              C50924 * C291 +
          (((C31833 + C31832) * C295 -
            ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
            (C31835 + C31834) * C50837) *
               C51097 +
           ((C31838 + C31837) * C295 -
            ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
            (C31840 + C31839) * C50837) *
               C51081 +
           ((C31841 + C31842) * C295 - (C31652 * C51053 + C31653 * C294) +
            (C31843 + C31844) * C50837) *
               C22817) *
              C50924 * C292 +
          (C31850 * C51097 +
           ((C31645 + C31644) * C294 + (C31643 + C31642) * C51053 -
            (C31842 + C31841) * C295 - (C31844 + C31843) * C50837) *
               C51081 +
           ((C31646 + C31647) * C294 + (C31648 + C31649) * C51053 -
            (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                C295 -
            (C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                C50837) *
               C22817) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
               C757 +
           (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
               C752 -
           (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
               C758 -
           (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
               C753 +
           (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
               C759 +
           (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
               C754 -
           (C31600 * C3207 + C50962 * C3210 + C31599 * C761 + C31597 * C765) *
               C760 -
           (C31600 * C3211 + C50962 * C3216 + C31599 * C766 + C31597 * C773) *
               C755) *
              C51097 +
          ((C31634 + C31635) * C757 + (C31636 + C31637) * C752 -
           (C31832 + C31833) * C758 - (C31834 + C31835) * C753 +
           (C32200 + C32201) * C759 + (C32202 + C32203) * C754 -
           (C31600 * C3208 + C50962 * C3212 + C31599 * C762 + C31597 * C767) *
               C760 -
           (C31600 * C3213 + C50962 * C3217 + C31599 * C768 + C31597 * C774) *
               C755) *
              C51081 +
          (C31650 * C757 + C31651 * C752 - C31845 * C758 - C31846 * C753 +
           (C32204 + C32205) * C759 + (C32206 + C32207) * C754 -
           (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
               C760 -
           (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
               C755) *
              C22817) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C51097 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C51081 +
            C31658 * C22817) *
               C50924 * C291 -
           (C31659 * C22817 +
            ((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C51081 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C51097) *
               C50924 * C292 +
           (C31658 * C51097 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C51081 +
            ((C31646 + C31647) * C118 + (C31648 + C31649) * C50821) * C22817) *
               C50924 * C293) *
              C51055 +
          ((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C51097 +
            ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C51081 +
            ((C32029 + C32030) * C118 + (C32031 + C32032) * C50821) * C22817) *
               C50924 * C292 -
           (C32037 * C22817 +
            ((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C51081 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C51097) *
               C50924 * C291 -
           (((C31600 * C1021 + C50962 * C1027 + C31599 * C479 + C31597 * C487) *
                 C50821 +
             (C31600 * C1012 + C50962 * C1022 + C31599 * C469 + C31597 * C478) *
                 C118) *
                C22817 +
            ((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C51081 +
            C32037 * C51097) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C627 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C622 -
            (C31600 * C875 + C50962 * C883 + C31599 * C296 + C31597 * C302) *
                C628 -
            (C31600 * C884 + C50962 * C899 + C31599 * C303 + C31597 * C314) *
                C623 +
            (C31599 * C630 + C31597 * C635 + C31600 * C876 + C50962 * C885) *
                C629 +
            (C31599 * C636 + C31597 * C645 + C31600 * C886 + C50962 * C900) *
                C624) *
               C51097 +
           ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
            (C31832 + C31833) * C628 - (C31834 + C31835) * C623 +
            (C32200 + C32201) * C629 + (C32202 + C32203) * C624) *
               C51081 +
           (C31650 * C627 + C31651 * C622 - C31845 * C628 - C31846 * C623 +
            (C32204 + C32205) * C629 + (C32206 + C32207) * C624) *
               C22817) *
              C50924 * C50787 * C51055 +
          (((C31599 * C875 + C31597 * C883 + C31600 * C1150 + C50962 * C1154) *
                C628 -
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C622 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C627) +
            (C31599 * C884 + C31597 * C899 + C31600 * C1155 + C50962 * C1162) *
                C623 -
            (C31600 * C3551 + C50962 * C3554 + C31599 * C876 + C31597 * C885) *
                C629 -
            (C31600 * C3555 + C50962 * C3560 + C31599 * C886 + C31597 * C900) *
                C624) *
               C51097 +
           ((C31599 * C877 + C31597 * C887 + C31600 * C1151 + C50962 * C1156) *
                C628 -
            ((C32024 + C32023) * C622 + (C32022 + C32021) * C627) +
            (C31599 * C888 + C31597 * C901 + C31600 * C1157 + C50962 * C1163) *
                C623 -
            (C31600 * C3552 + C50962 * C3556 + C31599 * C878 + C31597 * C889) *
                C629 -
            (C31600 * C3557 + C50962 * C3561 + C31599 * C890 + C31597 * C902) *
                C624) *
               C51081 +
           ((C31599 * C879 + C31597 * C891 + C31600 * C1152 + C50962 * C1158) *
                C628 -
            (C32033 * C622 + C32034 * C627) +
            (C31599 * C892 + C31597 * C903 + C31600 * C1159 + C50962 * C1164) *
                C623 -
            (C31600 * C3553 + C50962 * C3558 + C31599 * C880 + C31597 * C893) *
                C629 -
            (C31600 * C3559 + C50962 * C3562 + C31599 * C894 + C31597 * C904) *
                C624) *
               C22817) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                C25448 +
            ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
             C34687 * C1356 - C34688 * C50837) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
             (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                C25448 +
            (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C51098 +
          (((C34689 * C1356 -
             ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
             C34690 * C50837) *
                C25448 +
            (C34691 * C1356 -
             ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
             C34692 * C50837) *
                C50770) *
               C51067 +
           ((C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
             C35094 * C50837) *
                C25448 +
            ((C32204 + C32205) * C1356 - (C31846 * C1350 + C31845 * C1355) +
             (C32206 + C32207) * C50837) *
                C50770) *
               C50938) *
              C51084 +
          ((C33018 * C25448 +
            ((C31645 + C31644) * C1355 + (C31643 + C31642) * C1350 -
             (C31842 + C31841) * C1356 - (C31844 + C31843) * C50837) *
                C50770) *
               C51067 +
           ((C34691 * C1355 + C34692 * C1350 - (C32205 + C32204) * C1356 -
             (C32207 + C32206) * C50837) *
                C25448 +
            ((C31841 + C31842) * C1355 + (C31843 + C31844) * C1350 -
             (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                 C1356 -
             (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C1354) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1482 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51099 -
             (C34693 + C34694) * C1483 - (C34695 + C34696) * C51087 +
             (C35105 + C35106) * C1484 + (C35107 + C35108) * C1479) *
                C25448 +
            ((C31634 + C31635) * C1482 + (C31636 + C31637) * C51099 -
             C34687 * C1483 - C34688 * C51087 + C35093 * C1484 +
             C35094 * C1479) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C1482 + (C34696 + C34695) * C51099 -
             (C35106 + C35105) * C1483 - (C35108 + C35107) * C51087 +
             (C35252 + C35251) * C1484 + (C35254 + C35253) * C1479) *
                C25448 +
            (C34689 * C1482 + C34690 * C51099 - C35095 * C1483 -
             C35096 * C51087 + (C35109 + C35110) * C1484 +
             (C35111 + C35112) * C1479) *
                C50770) *
               C50938) *
              C1480 +
          (((C34689 * C1483 -
             ((C31637 + C31636) * C51099 + (C31635 + C31634) * C1482) +
             C34690 * C51087 - C35095 * C1484 - C35096 * C1479) *
                C25448 +
            (C34691 * C1483 -
             ((C31641 + C31640) * C51099 + (C31639 + C31638) * C1482) +
             C34692 * C51087 - (C32205 + C32204) * C1484 -
             (C32207 + C32206) * C1479) *
                C50770) *
               C51067 +
           ((C35093 * C1483 - (C34688 * C51099 + C34687 * C1482) +
             C35094 * C51087 - (C35110 + C35109) * C1484 -
             (C35112 + C35111) * C1479) *
                C25448 +
            ((C32204 + C32205) * C1483 - (C31846 * C51099 + C31845 * C1482) +
             (C32206 + C32207) * C51087 -
             (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                 C1484 -
             (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                 C1479) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C1355 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C1350 -
              (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                 C25448 +
             ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
              C34687 * C1356 - C34688 * C50837) *
                 C50770) *
                C51067 +
            (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
              (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                 C25448 +
             (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
              C35096 * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           (((C34689 * C1356 -
              ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
              C34690 * C50837) *
                 C25448 +
             (C34691 * C1356 -
              ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
              C34692 * C50837) *
                 C50770) *
                C51067 +
            ((C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
              C35094 * C50837) *
                 C25448 +
             ((C32204 + C32205) * C1356 - (C31846 * C1350 + C31845 * C1355) +
              (C32206 + C32207) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C51055 +
          (((((C35473 + C35474) * C1356 -
              ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
                C31597 * C488) *
                   C1350 +
               (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
                C31597 * C481) *
                   C1355) +
              (C35475 + C35476) * C50837) *
                 C25448 +
             (C36673 * C1356 -
              ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
              C36674 * C50837) *
                 C50770) *
                C51067 +
            (((C35478 + C35477) * C1356 -
              ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
              (C35480 + C35479) * C50837) *
                 C25448 +
             ((C35482 + C35481) * C1356 - (C36675 * C1350 + C36676 * C1355) +
              (C35484 + C35483) * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           ((((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
              C36676 * C1356 - C36675 * C50837) *
                 C25448 +
             ((C32025 + C32026) * C1355 + (C32027 + C32028) * C1350 -
              (C33380 + C33379) * C1356 - (C33382 + C33381) * C50837) *
                 C50770) *
                C51067 +
            ((C36673 * C1355 + C36674 * C1350 - (C35481 + C35482) * C1356 -
              (C35483 + C35484) * C50837) *
                 C25448 +
             ((C33379 + C33380) * C1355 + (C33381 + C33382) * C1350 -
              (C31600 * C3553 + C50962 * C3558 + C31599 * C880 +
               C31597 * C893) *
                  C1356 -
              (C31600 * C3559 + C50962 * C3562 + C31599 * C894 +
               C31597 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C1355 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C1350 -
              (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                 C25448 +
             ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
              C34687 * C1356 - C34688 * C50837) *
                 C50770) *
                C51067 +
            (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
              (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                 C25448 +
             (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
              C35096 * C50837) *
                 C50770) *
                C50938) *
               C51046 +
           (((C34689 * C1356 -
              ((C31637 + C31636) * C1350 + (C31635 + C31634) * C1355) +
              C34690 * C50837) *
                 C25448 +
             (C34691 * C1356 -
              ((C31641 + C31640) * C1350 + (C31639 + C31638) * C1355) +
              C34692 * C50837) *
                 C50770) *
                C51067 +
            ((C35093 * C1356 - (C34688 * C1350 + C34687 * C1355) +
              C35094 * C50837) *
                 C25448 +
             ((C32204 + C32205) * C1356 - (C31846 * C1350 + C31845 * C1355) +
              (C32206 + C32207) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C1765 +
          (((((C35473 + C35474) * C1356 -
              ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
                C31597 * C488) *
                   C1350 +
               (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
                C31597 * C481) *
                   C1355) +
              (C35475 + C35476) * C50837) *
                 C25448 +
             (C36673 * C1356 -
              ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
              C36674 * C50837) *
                 C50770) *
                C51067 +
            (((C35478 + C35477) * C1356 -
              ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
              (C35480 + C35479) * C50837) *
                 C25448 +
             ((C35482 + C35481) * C1356 - (C36675 * C1350 + C36676 * C1355) +
              (C35484 + C35483) * C50837) *
                 C50770) *
                C50938) *
               C51046 +
           ((((C32021 + C32022) * C1355 + (C32023 + C32024) * C1350 -
              C36676 * C1356 - C36675 * C50837) *
                 C25448 +
             ((C32025 + C32026) * C1355 + (C32027 + C32028) * C1350 -
              (C33380 + C33379) * C1356 - (C33382 + C33381) * C50837) *
                 C50770) *
                C51067 +
            ((C36673 * C1355 + C36674 * C1350 - (C35481 + C35482) * C1356 -
              (C35483 + C35484) * C50837) *
                 C25448 +
             ((C33379 + C33380) * C1355 + (C33381 + C33382) * C1350 -
              (C31600 * C3553 + C50962 * C3558 + C31599 * C880 +
               C31597 * C893) *
                  C1356 -
              (C31600 * C3559 + C50962 * C3562 + C31599 * C894 +
               C31597 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1482 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51099 -
             (C34693 + C34694) * C1483 - (C34695 + C34696) * C51087 +
             (C35105 + C35106) * C1484 + (C35107 + C35108) * C1479) *
                C25448 +
            ((C31634 + C31635) * C1482 + (C31636 + C31637) * C51099 -
             C34687 * C1483 - C34688 * C51087 + C35093 * C1484 +
             C35094 * C1479) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C1482 + (C34696 + C34695) * C51099 -
             (C35106 + C35105) * C1483 - (C35108 + C35107) * C51087 +
             (C35252 + C35251) * C1484 + (C35254 + C35253) * C1479) *
                C25448 +
            (C34689 * C1482 + C34690 * C51099 - C35095 * C1483 -
             C35096 * C51087 + (C35109 + C35110) * C1484 +
             (C35111 + C35112) * C1479) *
                C50770) *
               C50938) *
              C50787 * C1765 +
          ((((C35473 + C35474) * C1483 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C51099 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1482) +
             (C35475 + C35476) * C51087 - (C35477 + C35478) * C1484 -
             (C35479 + C35480) * C1479) *
                C25448 +
            (C36673 * C1483 -
             ((C32024 + C32023) * C51099 + (C32022 + C32021) * C1482) +
             C36674 * C51087 - (C35481 + C35482) * C1484 -
             (C35483 + C35484) * C1479) *
                C50770) *
               C51067 +
           (((C35478 + C35477) * C1483 -
             ((C35476 + C35475) * C51099 + (C35474 + C35473) * C1482) +
             (C35480 + C35479) * C51087 -
             (C31600 * C9196 + C50962 * C9198 + C31599 * C3207 +
              C31597 * C3210) *
                 C1484 -
             (C31600 * C9199 + C50962 * C9202 + C31599 * C3211 +
              C31597 * C3216) *
                 C1479) *
                C25448 +
            ((C35482 + C35481) * C1483 - (C36675 * C51099 + C36676 * C1482) +
             (C35484 + C35483) * C51087 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C1484 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C1479) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C1355 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C1350 -
             (C34693 + C34694) * C1356 - (C34695 + C34696) * C50837) *
                C25448 +
            ((C31634 + C31635) * C1355 + (C31636 + C31637) * C1350 -
             C34687 * C1356 - C34688 * C50837) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C1355 + (C34696 + C34695) * C1350 -
             (C35106 + C35105) * C1356 - (C35108 + C35107) * C50837) *
                C25448 +
            (C34689 * C1355 + C34690 * C1350 - C35095 * C1356 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C50787 * C51100 +
          ((((C35473 + C35474) * C1356 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C1350 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C1355) +
             (C35475 + C35476) * C50837) *
                C25448 +
            (C36673 * C1356 -
             ((C32024 + C32023) * C1350 + (C32022 + C32021) * C1355) +
             C36674 * C50837) *
                C50770) *
               C51067 +
           (((C35478 + C35477) * C1356 -
             ((C35476 + C35475) * C1350 + (C35474 + C35473) * C1355) +
             (C35480 + C35479) * C50837) *
                C25448 +
            ((C35482 + C35481) * C1356 - (C36675 * C1350 + C36676 * C1355) +
             (C35484 + C35483) * C50837) *
                C50770) *
               C50938) *
              C50787 * C51090 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C1355 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C1350 -
             (C35893 + C35894) * C1356 - (C35895 + C35896) * C50837) *
                C25448 +
            ((C32614 + C32615) * C1355 + (C32616 + C32617) * C1350 -
             (C35688 + C35687) * C1356 - (C35690 + C35689) * C50837) *
                C50770) *
               C51067 +
           (((C35894 + C35893) * C1355 + (C35896 + C35895) * C1350 -
             (C31600 * C9309 + C50962 * C9313 + C31599 * C3551 +
              C31597 * C3554) *
                 C1356 -
             (C31600 * C9312 + C50962 * C9315 + C31599 * C3555 +
              C31597 * C3560) *
                 C50837) *
                C25448 +
            ((C35687 + C35688) * C1355 + (C35689 + C35690) * C1350 -
             (C31600 * C9308 + C50962 * C9311 + C31599 * C3552 +
              C31597 * C3556) *
                 C1356 -
             (C31600 * C9310 + C50962 * C9314 + C31599 * C3557 +
              C31597 * C3561) *
                 C50837) *
                C50770) *
               C50938) *
              C50787 * C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C25448 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C31599 * C761 + C31597 * C765 + C31600 * C3207 + C50962 * C3210) *
                 C629 +
             (C31599 * C766 + C31597 * C773 + C31600 * C3211 + C50962 * C3216) *
                 C624) *
                C25448 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C51046 +
          (((C34689 * C628 -
             ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
             C34690 * C623 - C35095 * C629 - C35096 * C624) *
                C25448 +
            (C34691 * C628 -
             ((C31641 + C31640) * C622 + (C31639 + C31638) * C627) +
             C34692 * C623 - (C32205 + C32204) * C629 -
             (C32207 + C32206) * C624) *
                C50770) *
               C51067 +
           ((C35093 * C628 - (C34688 * C622 + C34687 * C627) + C35094 * C623 -
             (C35110 + C35109) * C629 - (C35112 + C35111) * C624) *
                C25448 +
            ((C32204 + C32205) * C628 - (C31846 * C622 + C31845 * C627) +
             (C32206 + C32207) * C623 -
             (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                 C629 -
             (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                 C624) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C25448 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
               C51067 +
           (((C31599 * C296 + C31597 * C302 + C31600 * C875 + C50962 * C883) *
                 C118 +
             (C31599 * C303 + C31597 * C314 + C31600 * C884 + C50962 * C899) *
                 C50821) *
                C25448 +
            ((C31833 + C31832) * C118 + (C31835 + C31834) * C50821) * C50770) *
               C50938) *
              C112 -
          (((C31846 * C50821 + C31845 * C118) * C50770 +
            ((C31834 + C31835) * C50821 + (C31832 + C31833) * C118) * C25448) *
               C50938 +
           (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
               C51067) *
              C113 +
          ((C31658 * C25448 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
               C51067 +
           (((C31838 + C31837) * C118 + (C31840 + C31839) * C50821) * C25448 +
            ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
               C50938) *
              C114 -
          ((((C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                 C50821 +
             (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                 C118) *
                C50770 +
            ((C31844 + C31843) * C50821 + (C31842 + C31841) * C118) * C25448) *
               C50938 +
           (((C31649 + C31648) * C50821 + (C31647 + C31646) * C118) * C50770 +
            C31659 * C25448) *
               C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C51067 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C25448 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C51046 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C25448) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
                C51067) *
               C50792) *
              C1005 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C25448 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C51067 +
            (((C33375 + C33376) * C118 + (C33377 + C33378) * C50821) * C25448 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C50792 -
           ((((C33378 + C33377) * C50821 + (C33376 + C33375) * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C25448) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C25448) *
                C51067) *
               C51046) *
              C1006 +
          (((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
               C50962 * C1247) *
                  C118 +
              (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
               C50962 * C1251) *
                  C50821) *
                 C25448 +
             ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C50770) *
                C51067 +
            (((C31599 * C1150 + C31597 * C1154 + C31600 * C3669 +
               C50962 * C3675) *
                  C118 +
              (C31599 * C1155 + C31597 * C1162 + C31600 * C3674 +
               C50962 * C3678) *
                  C50821) *
                 C25448 +
             ((C35687 + C35688) * C118 + (C35689 + C35690) * C50821) * C50770) *
                C50938) *
               C51046 -
           ((((C31600 * C3670 + C50962 * C3676 + C31599 * C1159 +
               C31597 * C1164) *
                  C50821 +
              (C31600 * C3667 + C50962 * C3671 + C31599 * C1152 +
               C31597 * C1158) *
                  C118) *
                 C50770 +
             ((C35690 + C35689) * C50821 + (C35688 + C35687) * C118) * C25448) *
                C50938 +
            (((C32621 + C32620) * C50821 + (C32619 + C32618) * C118) * C50770 +
             ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C25448) *
                C51067) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C757 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C752 -
            (C34693 + C34694) * C758 - (C34695 + C34696) * C753 +
            (C35105 + C35106) * C759 + (C35107 + C35108) * C754 -
            (C35251 + C35252) * C760 - (C35253 + C35254) * C755) *
               C25448 +
           ((C31634 + C31635) * C757 + (C31636 + C31637) * C752 -
            C34687 * C758 - C34688 * C753 + C35093 * C759 + C35094 * C754 -
            (C35110 + C35109) * C760 - (C35112 + C35111) * C755) *
               C50770) *
              C51067 +
          (((C34694 + C34693) * C757 + (C34696 + C34695) * C752 -
            (C35106 + C35105) * C758 - (C35108 + C35107) * C753 +
            (C35252 + C35251) * C759 + (C35254 + C35253) * C754 -
            (C31600 * C8876 + C50962 * C8878 + C31599 * C3043 +
             C31597 * C3046) *
                C760 -
            (C31600 * C8879 + C50962 * C8882 + C31599 * C3047 +
             C31597 * C3052) *
                C755) *
               C25448 +
           (C34689 * C757 + C34690 * C752 - C35095 * C758 - C35096 * C753 +
            (C35109 + C35110) * C759 + (C35111 + C35112) * C754 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C760 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C755) *
               C50770) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C25448 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             C34687 * C295 - C34688 * C50837) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C31600 * C876 + C50962 * C885 + C31599 * C630 + C31597 * C635) *
                 C295 -
             (C31600 * C886 + C50962 * C900 + C31599 * C636 + C31597 * C645) *
                 C50837) *
                C25448 +
            (C34689 * C294 + C34690 * C51053 - (C32201 + C32200) * C295 -
             (C32203 + C32202) * C50837) *
                C50770) *
               C50938) *
              C291 +
          (((C34689 * C295 -
             ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
             C34690 * C50837) *
                C25448 +
            (C34691 * C295 -
             ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
             C34692 * C50837) *
                C50770) *
               C51067 +
           (((C32200 + C32201) * C295 - (C34688 * C51053 + C34687 * C294) +
             (C32202 + C32203) * C50837) *
                C25448 +
            ((C32204 + C32205) * C295 - (C31846 * C51053 + C31845 * C294) +
             (C32206 + C32207) * C50837) *
                C50770) *
               C50938) *
              C292 +
          ((C31850 * C25448 +
            ((C31645 + C31644) * C294 + (C31643 + C31642) * C51053 -
             (C31842 + C31841) * C295 - (C31844 + C31843) * C50837) *
                C50770) *
               C51067 +
           ((C34691 * C294 + C34692 * C51053 - (C32205 + C32204) * C295 -
             (C32207 + C32206) * C50837) *
                C25448 +
            ((C31841 + C31842) * C294 + (C31843 + C31844) * C51053 -
             (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                 C295 -
             (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C25448 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             C34687 * C295 - C34688 * C50837) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                C25448 +
            (C34689 * C294 + C34690 * C51053 - C35095 * C295 -
             C35096 * C50837) *
                C50770) *
               C50938) *
              C50787 * C1005 +
          ((((C35473 + C35474) * C295 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C51053 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C294) +
             (C35475 + C35476) * C50837) *
                C25448 +
            ((C33375 + C33376) * C295 -
             ((C32024 + C32023) * C51053 + (C32022 + C32021) * C294) +
             (C33377 + C33378) * C50837) *
                C50770) *
               C51067 +
           (((C35478 + C35477) * C295 -
             ((C35476 + C35475) * C51053 + (C35474 + C35473) * C294) +
             (C35480 + C35479) * C50837) *
                C25448 +
            ((C35482 + C35481) * C295 -
             ((C33378 + C33377) * C51053 + (C33376 + C33375) * C294) +
             (C35484 + C35483) * C50837) *
                C50770) *
               C50938) *
              C50787 * C1006 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C294 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C51053 -
             (C35893 + C35894) * C295 - (C35895 + C35896) * C50837) *
                C25448 +
            ((C32614 + C32615) * C294 + (C32616 + C32617) * C51053 -
             (C35688 + C35687) * C295 - (C35690 + C35689) * C50837) *
                C50770) *
               C51067 +
           (((C35894 + C35893) * C294 + (C35896 + C35895) * C51053 -
             (C31600 * C9309 + C50962 * C9313 + C31599 * C3551 +
              C31597 * C3554) *
                 C295 -
             (C31600 * C9312 + C50962 * C9315 + C31599 * C3555 +
              C31597 * C3560) *
                 C50837) *
                C25448 +
            ((C35687 + C35688) * C294 + (C35689 + C35690) * C51053 -
             (C31600 * C9308 + C50962 * C9311 + C31599 * C3552 +
              C31597 * C3556) *
                 C295 -
             (C31600 * C9310 + C50962 * C9314 + C31599 * C3557 +
              C31597 * C3561) *
                 C50837) *
                C50770) *
               C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C25448 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
                C25448 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C50787 * C51055 +
          ((((C35473 + C35474) * C628 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C622 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C627) +
             (C35475 + C35476) * C623 - (C35477 + C35478) * C629 -
             (C35479 + C35480) * C624) *
                C25448 +
            ((C33375 + C33376) * C628 -
             ((C32024 + C32023) * C622 + (C32022 + C32021) * C627) +
             (C33377 + C33378) * C623 - (C35481 + C35482) * C629 -
             (C35483 + C35484) * C624) *
                C50770) *
               C51067 +
           (((C35478 + C35477) * C628 -
             ((C35476 + C35475) * C622 + (C35474 + C35473) * C627) +
             (C35480 + C35479) * C623 -
             (C31600 * C9196 + C50962 * C9198 + C31599 * C3207 +
              C31597 * C3210) *
                 C629 -
             (C31600 * C9199 + C50962 * C9202 + C31599 * C3211 +
              C31597 * C3216) *
                 C624) *
                C25448 +
            ((C35482 + C35481) * C628 -
             ((C33378 + C33377) * C622 + (C33376 + C33375) * C627) +
             (C35484 + C35483) * C623 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C629 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C624) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C51067 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C25448 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C291 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C25448) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
                C51067) *
               C292 +
           ((C31658 * C25448 +
             ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
                C51067 +
            ((C34691 * C118 + C34692 * C50821) * C25448 +
             ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
                C50938) *
               C293) *
              C51055 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C25448 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C51067 +
            (((C33375 + C33376) * C118 + (C33377 + C33378) * C50821) * C25448 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C292 -
           ((((C33378 + C33377) * C50821 + (C33376 + C33375) * C118) * C50770 +
             ((C31600 * C1155 + C50962 * C1162 + C31599 * C884 +
               C31597 * C899) *
                  C50821 +
              (C31600 * C1150 + C50962 * C1154 + C31599 * C875 +
               C31597 * C883) *
                  C118) *
                 C25448) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C25448) *
                C51067) *
               C291 -
           ((((C31600 * C1161 + C50962 * C1165 + C31599 * C896 +
               C31597 * C905) *
                  C50821 +
              (C31600 * C1153 + C50962 * C1160 + C31599 * C881 +
               C31597 * C895) *
                  C118) *
                 C50770 +
             ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C25448) *
                C50938 +
            (((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C50770 +
             C32037 * C25448) *
                C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C25448 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
               C51067 +
           (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C25448 +
            (C34689 * C118 + C34690 * C50821) * C50770) *
               C50938) *
              C50787 * C1232 -
          ((((C33378 + C33377) * C50821 + (C33376 + C33375) * C118) * C50770 +
            ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C25448) *
               C50938 +
           (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
            ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 + C31597 * C488) *
                 C50821 +
             (C31600 * C1008 + C50962 * C1013 + C31599 * C470 + C31597 * C481) *
                 C118) *
                C25448) *
               C51067) *
              C50787 * C1233 +
          ((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
              C50962 * C1247) *
                 C118 +
             (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
              C50962 * C1251) *
                 C50821) *
                C25448 +
            ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C50770) *
               C51067 +
           (((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C25448 +
            ((C35687 + C35688) * C118 + (C35689 + C35690) * C50821) * C50770) *
               C50938) *
              C50787 * C1234 -
          ((((C31600 * C16617 + C50962 * C16618 + C31599 * C3672 +
              C31597 * C3677) *
                 C50821 +
             (C31600 * C16615 + C50962 * C16616 + C31599 * C3668 +
              C31597 * C3673) *
                 C118) *
                C50770 +
            ((C31600 * C13901 + C50962 * C13904 + C31599 * C3674 +
              C31597 * C3678) *
                 C50821 +
             (C31600 * C13898 + C50962 * C13902 + C31599 * C3669 +
              C31597 * C3675) *
                 C118) *
                C25448) *
               C50938 +
           (((C31600 * C6551 + C50962 * C6556 + C31599 * C1244 +
              C31597 * C1250) *
                 C50821 +
             (C31600 * C6547 + C50962 * C6552 + C31599 * C1238 +
              C31597 * C1245) *
                 C118) *
                C50770 +
            ((C31600 * C6553 + C50962 * C6557 + C31599 * C1246 +
              C31597 * C1251) *
                 C50821 +
             (C31600 * C6548 + C50962 * C6554 + C31599 * C1239 +
              C31597 * C1247) *
                 C118) *
                C25448) *
               C51067) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C51067 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C25448 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C51098 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C25448) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
                C51067) *
               C51084 +
           ((C31658 * C25448 +
             ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
                C51067 +
            ((C34691 * C118 + C34692 * C50821) * C25448 +
             ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
                C50938) *
               C1354) *
              C1765 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C25448 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C51067 +
            ((C36673 * C118 + C36674 * C50821) * C25448 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C51084 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C25448) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C25448) *
                C51067) *
               C51098 -
           ((((C31600 * C1161 + C50962 * C1165 + C31599 * C896 +
               C31597 * C905) *
                  C50821 +
              (C31600 * C1153 + C50962 * C1160 + C31599 * C881 +
               C31597 * C895) *
                  C118) *
                 C50770 +
             ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C25448) *
                C50938 +
            (((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C50770 +
             C32037 * C25448) *
                C51067) *
               C1354) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C294 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C51053 -
              (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                 C25448 +
             ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
              C34687 * C295 - C34688 * C50837) *
                 C50770) *
                C51067 +
            (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
              (C35106 + C35105) * C295 - (C35108 + C35107) * C50837) *
                 C25448 +
             (C34689 * C294 + C34690 * C51053 - C35095 * C295 -
              C35096 * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           (((C34689 * C295 -
              ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
              C34690 * C50837) *
                 C25448 +
             (C34691 * C295 -
              ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
              C34692 * C50837) *
                 C50770) *
                C51067 +
            ((C35093 * C295 - (C34688 * C51053 + C34687 * C294) +
              C35094 * C50837) *
                 C25448 +
             ((C32204 + C32205) * C295 - (C31846 * C51053 + C31845 * C294) +
              (C32206 + C32207) * C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C1765 +
          (((((C35473 + C35474) * C295 -
              ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
                C31597 * C488) *
                   C51053 +
               (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
                C31597 * C481) *
                   C294) +
              (C35475 + C35476) * C50837) *
                 C25448 +
             (C36673 * C295 -
              ((C32024 + C32023) * C51053 + (C32022 + C32021) * C294) +
              C36674 * C50837) *
                 C50770) *
                C51067 +
            (((C35478 + C35477) * C295 -
              ((C35476 + C35475) * C51053 + (C35474 + C35473) * C294) +
              (C35480 + C35479) * C50837) *
                 C25448 +
             ((C35482 + C35481) * C295 - (C36675 * C51053 + C36676 * C294) +
              (C35484 + C35483) * C50837) *
                 C50770) *
                C50938) *
               C1480 +
           ((((C32021 + C32022) * C294 + (C32023 + C32024) * C51053 -
              C36676 * C295 - C36675 * C50837) *
                 C25448 +
             ((C32025 + C32026) * C294 + (C32027 + C32028) * C51053 -
              (C33380 + C33379) * C295 - (C33382 + C33381) * C50837) *
                 C50770) *
                C51067 +
            ((C36673 * C294 + C36674 * C51053 - (C35481 + C35482) * C295 -
              (C35483 + C35484) * C50837) *
                 C25448 +
             ((C33379 + C33380) * C294 + (C33381 + C33382) * C51053 -
              (C31600 * C3553 + C50962 * C3558 + C31599 * C880 +
               C31597 * C893) *
                  C295 -
              (C31600 * C3559 + C50962 * C3562 + C31599 * C894 +
               C31597 * C904) *
                  C50837) *
                 C50770) *
                C50938) *
               C50792) *
              C50863)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C51067 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C25448 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C1480 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C25448) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
                C51067) *
               C50792) *
              C51100 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C25448 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C51067 +
            ((C36673 * C118 + C36674 * C50821) * C25448 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C50792 -
           (((C36675 * C50821 + C36676 * C118) * C50770 +
             ((C35476 + C35475) * C50821 + (C35474 + C35473) * C118) * C25448) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C25448) *
                C51067) *
               C1480) *
              C51090 +
          (((((C31599 * C1008 + C31597 * C1013 + C31600 * C1239 +
               C50962 * C1247) *
                  C118 +
              (C31599 * C1014 + C31597 * C1023 + C31600 * C1246 +
               C50962 * C1251) *
                  C50821) *
                 C25448 +
             ((C32614 + C32615) * C118 + (C32616 + C32617) * C50821) * C50770) *
                C51067 +
            (((C35894 + C35893) * C118 + (C35896 + C35895) * C50821) * C25448 +
             ((C35687 + C35688) * C118 + (C35689 + C35690) * C50821) * C50770) *
                C50938) *
               C1480 -
           ((((C31600 * C3670 + C50962 * C3676 + C31599 * C1159 +
               C31597 * C1164) *
                  C50821 +
              (C31600 * C3667 + C50962 * C3671 + C31599 * C1152 +
               C31597 * C1158) *
                  C118) *
                 C50770 +
             ((C35690 + C35689) * C50821 + (C35688 + C35687) * C118) * C25448) *
                C50938 +
            (((C32621 + C32620) * C50821 + (C32619 + C32618) * C118) * C50770 +
             ((C32617 + C32616) * C50821 + (C32615 + C32614) * C118) * C25448) *
                C51067) *
               C50792) *
              C2009)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C118 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C50821) *
                C25448 +
            ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
               C51067 +
           (((C31599 * C296 + C31597 * C302 + C31600 * C875 + C50962 * C883) *
                 C118 +
             (C31599 * C303 + C31597 * C314 + C31600 * C884 + C50962 * C899) *
                 C50821) *
                C25448 +
            ((C31833 + C31832) * C118 + (C31835 + C31834) * C50821) * C50770) *
               C50938) *
              C112 -
          (((C31846 * C50821 + C31845 * C118) * C50770 +
            ((C31834 + C31835) * C50821 + (C31832 + C31833) * C118) * C25448) *
               C50938 +
           (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
            ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
               C51067) *
              C113 +
          ((C31658 * C25448 +
            ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
               C51067 +
           (((C31838 + C31837) * C118 + (C31840 + C31839) * C50821) * C25448 +
            ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
               C50938) *
              C114 -
          ((((C31600 * C1635 + C50962 * C1636 + C31599 * C311 + C31597 * C318) *
                 C50821 +
             (C31600 * C1633 + C50962 * C1634 + C31599 * C300 + C31597 * C310) *
                 C118) *
                C50770 +
            ((C31844 + C31843) * C50821 + (C31842 + C31841) * C118) * C25448) *
               C50938 +
           (((C31649 + C31648) * C50821 + (C31647 + C31646) * C118) * C50770 +
            C31659 * C25448) *
               C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C25448 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C31599 * C761 + C31597 * C765 + C31600 * C3207 + C50962 * C3210) *
                 C629 +
             (C31599 * C766 + C31597 * C773 + C31600 * C3211 + C50962 * C3216) *
                 C624) *
                C25448 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C51046 +
          (((C34689 * C628 -
             ((C31637 + C31636) * C622 + (C31635 + C31634) * C627) +
             C34690 * C623 - C35095 * C629 - C35096 * C624) *
                C25448 +
            (C34691 * C628 -
             ((C31641 + C31640) * C622 + (C31639 + C31638) * C627) +
             C34692 * C623 - (C32205 + C32204) * C629 -
             (C32207 + C32206) * C624) *
                C50770) *
               C51067 +
           ((C35093 * C628 - (C34688 * C622 + C34687 * C627) + C35094 * C623 -
             (C35110 + C35109) * C629 - (C35112 + C35111) * C624) *
                C25448 +
            ((C32204 + C32205) * C628 - (C31846 * C622 + C31845 * C627) +
             (C32206 + C32207) * C623 -
             (C31600 * C3209 + C50962 * C3214 + C31599 * C763 + C31597 * C769) *
                 C629 -
             (C31600 * C3215 + C50962 * C3218 + C31599 * C770 + C31597 * C775) *
                 C624) *
                C50770) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C294 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C51053 -
             (C34693 + C34694) * C295 - (C34695 + C34696) * C50837) *
                C25448 +
            ((C31634 + C31635) * C294 + (C31636 + C31637) * C51053 -
             C34687 * C295 - C34688 * C50837) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C294 + (C34696 + C34695) * C51053 -
             (C31600 * C876 + C50962 * C885 + C31599 * C630 + C31597 * C635) *
                 C295 -
             (C31600 * C886 + C50962 * C900 + C31599 * C636 + C31597 * C645) *
                 C50837) *
                C25448 +
            (C34689 * C294 + C34690 * C51053 - (C32201 + C32200) * C295 -
             (C32203 + C32202) * C50837) *
                C50770) *
               C50938) *
              C291 +
          (((C34689 * C295 -
             ((C31637 + C31636) * C51053 + (C31635 + C31634) * C294) +
             C34690 * C50837) *
                C25448 +
            (C34691 * C295 -
             ((C31641 + C31640) * C51053 + (C31639 + C31638) * C294) +
             C34692 * C50837) *
                C50770) *
               C51067 +
           (((C32200 + C32201) * C295 - (C34688 * C51053 + C34687 * C294) +
             (C32202 + C32203) * C50837) *
                C25448 +
            ((C32204 + C32205) * C295 - (C31846 * C51053 + C31845 * C294) +
             (C32206 + C32207) * C50837) *
                C50770) *
               C50938) *
              C292 +
          ((C31850 * C25448 +
            ((C31645 + C31644) * C294 + (C31643 + C31642) * C51053 -
             (C31842 + C31841) * C295 - (C31844 + C31843) * C50837) *
                C50770) *
               C51067 +
           ((C34691 * C294 + C34692 * C51053 - (C32205 + C32204) * C295 -
             (C32207 + C32206) * C50837) *
                C25448 +
            ((C31841 + C31842) * C294 + (C31843 + C31844) * C51053 -
             (C31600 * C882 + C50962 * C897 + C31599 * C633 + C31597 * C641) *
                 C295 -
             (C31600 * C898 + C50962 * C906 + C31599 * C642 + C31597 * C648) *
                 C50837) *
                C50770) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                C757 +
            (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                C752 -
            (C34693 + C34694) * C758 - (C34695 + C34696) * C753 +
            (C35105 + C35106) * C759 + (C35107 + C35108) * C754 -
            (C35251 + C35252) * C760 - (C35253 + C35254) * C755) *
               C25448 +
           ((C31634 + C31635) * C757 + (C31636 + C31637) * C752 -
            C34687 * C758 - C34688 * C753 + C35093 * C759 + C35094 * C754 -
            (C35110 + C35109) * C760 - (C35112 + C35111) * C755) *
               C50770) *
              C51067 +
          (((C34694 + C34693) * C757 + (C34696 + C34695) * C752 -
            (C35106 + C35105) * C758 - (C35108 + C35107) * C753 +
            (C35252 + C35251) * C759 + (C35254 + C35253) * C754 -
            (C31600 * C8876 + C50962 * C8878 + C31599 * C3043 +
             C31597 * C3046) *
                C760 -
            (C31600 * C8879 + C50962 * C8882 + C31599 * C3047 +
             C31597 * C3052) *
                C755) *
               C25448 +
           (C34689 * C757 + C34690 * C752 - C35095 * C758 - C35096 * C753 +
            (C35109 + C35110) * C759 + (C35111 + C35112) * C754 -
            (C31600 * C8877 + C50962 * C8880 + C31599 * C3044 +
             C31597 * C3048) *
                C760 -
            (C31600 * C8881 + C50962 * C8883 + C31599 * C3049 +
             C31597 * C3053) *
                C755) *
               C50770) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                  C118 +
              (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                  C50821) *
                 C25448 +
             ((C31634 + C31635) * C118 + (C31636 + C31637) * C50821) * C50770) *
                C51067 +
            (((C34694 + C34693) * C118 + (C34696 + C34695) * C50821) * C25448 +
             (C34689 * C118 + C34690 * C50821) * C50770) *
                C50938) *
               C291 -
           (((C31846 * C50821 + C31845 * C118) * C50770 +
             (C34688 * C50821 + C34687 * C118) * C25448) *
                C50938 +
            (((C31641 + C31640) * C50821 + (C31639 + C31638) * C118) * C50770 +
             ((C31637 + C31636) * C50821 + (C31635 + C31634) * C118) * C25448) *
                C51067) *
               C292 +
           ((C31658 * C25448 +
             ((C31645 + C31644) * C118 + (C31643 + C31642) * C50821) * C50770) *
                C51067 +
            ((C34691 * C118 + C34692 * C50821) * C25448 +
             ((C31841 + C31842) * C118 + (C31843 + C31844) * C50821) * C50770) *
                C50938) *
               C293) *
              C51055 +
          (((((C32021 + C32022) * C118 + (C32023 + C32024) * C50821) * C25448 +
             ((C32025 + C32026) * C118 + (C32027 + C32028) * C50821) * C50770) *
                C51067 +
            (((C33375 + C33376) * C118 + (C33377 + C33378) * C50821) * C25448 +
             ((C33379 + C33380) * C118 + (C33381 + C33382) * C50821) * C50770) *
                C50938) *
               C292 -
           ((((C33378 + C33377) * C50821 + (C33376 + C33375) * C118) * C50770 +
             ((C31600 * C1155 + C50962 * C1162 + C31599 * C884 +
               C31597 * C899) *
                  C50821 +
              (C31600 * C1150 + C50962 * C1154 + C31599 * C875 +
               C31597 * C883) *
                  C118) *
                 C25448) *
                C50938 +
            (((C32024 + C32023) * C50821 + (C32022 + C32021) * C118) * C50770 +
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C50821 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C118) *
                 C25448) *
                C51067) *
               C291 -
           ((((C31600 * C1161 + C50962 * C1165 + C31599 * C896 +
               C31597 * C905) *
                  C50821 +
              (C31600 * C1153 + C50962 * C1160 + C31599 * C881 +
               C31597 * C895) *
                  C118) *
                 C50770 +
             ((C33382 + C33381) * C50821 + (C33380 + C33379) * C118) * C25448) *
                C50938 +
            (((C32032 + C32031) * C50821 + (C32030 + C32029) * C118) * C50770 +
             C32037 * C25448) *
                C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31599 * C119 + C31597 * C126 + C31600 * C470 + C50962 * C481) *
                 C627 +
             (C31599 * C127 + C31597 * C140 + C31600 * C480 + C50962 * C488) *
                 C622 -
             (C34693 + C34694) * C628 - (C34695 + C34696) * C623 +
             (C35105 + C35106) * C629 + (C35107 + C35108) * C624) *
                C25448 +
            ((C31634 + C31635) * C627 + (C31636 + C31637) * C622 -
             C34687 * C628 - C34688 * C623 + C35093 * C629 + C35094 * C624) *
                C50770) *
               C51067 +
           (((C34694 + C34693) * C627 + (C34696 + C34695) * C622 -
             (C35106 + C35105) * C628 - (C35108 + C35107) * C623 +
             (C35252 + C35251) * C629 + (C35254 + C35253) * C624) *
                C25448 +
            (C34689 * C627 + C34690 * C622 - C35095 * C628 - C35096 * C623 +
             (C35109 + C35110) * C629 + (C35111 + C35112) * C624) *
                C50770) *
               C50938) *
              C50787 * C51055 +
          ((((C35473 + C35474) * C628 -
             ((C31600 * C1014 + C50962 * C1023 + C31599 * C480 +
               C31597 * C488) *
                  C622 +
              (C31600 * C1008 + C50962 * C1013 + C31599 * C470 +
               C31597 * C481) *
                  C627) +
             (C35475 + C35476) * C623 - (C35477 + C35478) * C629 -
             (C35479 + C35480) * C624) *
                C25448 +
            ((C33375 + C33376) * C628 -
             ((C32024 + C32023) * C622 + (C32022 + C32021) * C627) +
             (C33377 + C33378) * C623 - (C35481 + C35482) * C629 -
             (C35483 + C35484) * C624) *
                C50770) *
               C51067 +
           (((C35478 + C35477) * C628 -
             ((C35476 + C35475) * C622 + (C35474 + C35473) * C627) +
             (C35480 + C35479) * C623 -
             (C31600 * C9196 + C50962 * C9198 + C31599 * C3207 +
              C31597 * C3210) *
                 C629 -
             (C31600 * C9199 + C50962 * C9202 + C31599 * C3211 +
              C31597 * C3216) *
                 C624) *
                C25448 +
            ((C35482 + C35481) * C628 -
             ((C33378 + C33377) * C622 + (C33376 + C33375) * C627) +
             (C35484 + C35483) * C623 -
             (C31600 * C9197 + C50962 * C9200 + C31599 * C3208 +
              C31597 * C3212) *
                 C629 -
             (C31600 * C9201 + C50962 * C9203 + C31599 * C3213 +
              C31597 * C3217) *
                 C624) *
                C50770) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C1355 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C1350 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C1356 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C50837) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C1355 +
                     (C38112 + C38113 + C38114) * C1350 -
                     (C38297 + C38298 + C38299) * C1356 -
                     (C38300 + C38301 + C38302) * C50837) *
                        C50770) *
                       C50924 * C51098 +
                   (((C38299 + C38298 + C38297) * C1356 -
                     ((C38114 + C38113 + C38112) * C1350 +
                      (C38111 + C38110 + C38109) * C1355) +
                     (C38302 + C38301 + C38300) * C50837) *
                        C25448 +
                    ((C38303 + C38304 + C38305) * C1356 -
                     ((C38115 + C38116 + C38117) * C1350 +
                      (C38118 + C38119 + C38120) * C1355) +
                     (C38306 + C38307 + C38308) * C50837) *
                        C50770) *
                       C50924 * C51084 +
                   (((C38120 + C38119 + C38118) * C1355 +
                     (C38117 + C38116 + C38115) * C1350 -
                     (C38305 + C38304 + C38303) * C1356 -
                     (C38308 + C38307 + C38306) * C50837) *
                        C25448 +
                    ((C38121 + C38122 + C38123) * C1355 +
                     (C38124 + C38125 + C38126) * C1350 -
                     (C38071 * C1153 + C38068 * C1160 + C38070 * C881 +
                      C51096 * C895 + C38069 * C299 + C51102 * C308) *
                         C1356 -
                     (C38071 * C1161 + C38068 * C1165 + C38070 * C896 +
                      C51096 * C905 + C38069 * C309 + C51102 * C317) *
                         C50837) *
                        C50770) *
                       C50924 * C1354) *
                  C50851) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C1482 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C51099 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C1483 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C51087 +
                     (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                      C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                         C1484 +
                     (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                      C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                         C1479) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C1482 +
                     (C38112 + C38113 + C38114) * C51099 -
                     (C38297 + C38298 + C38299) * C1483 -
                     (C38300 + C38301 + C38302) * C51087 +
                     (C38649 + C38650 + C38651) * C1484 +
                     (C38652 + C38653 + C38654) * C1479) *
                        C50770) *
                       C50924 * C1480 +
                   (((C38299 + C38298 + C38297) * C1483 -
                     ((C38114 + C38113 + C38112) * C51099 +
                      (C38111 + C38110 + C38109) * C1482) +
                     (C38302 + C38301 + C38300) * C51087 -
                     (C38651 + C38650 + C38649) * C1484 -
                     (C38654 + C38653 + C38652) * C1479) *
                        C25448 +
                    ((C38303 + C38304 + C38305) * C1483 -
                     ((C38115 + C38116 + C38117) * C51099 +
                      (C38118 + C38119 + C38120) * C1482) +
                     (C38306 + C38307 + C38308) * C51087 -
                     (C38071 * C3553 + C38068 * C3558 + C38070 * C880 +
                      C51096 * C893 + C38069 * C632 + C51102 * C639) *
                         C1484 -
                     (C38071 * C3559 + C38068 * C3562 + C38070 * C894 +
                      C51096 * C904 + C38069 * C640 + C51102 * C647) *
                         C1479) *
                        C50770) *
                       C50924 * C50792) *
                  C50851) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C1355 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C1350 -
                      (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                       C51096 * C883 + C38069 * C296 + C51102 * C302) *
                          C1356 -
                      (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                       C51096 * C899 + C38069 * C303 + C51102 * C314) *
                          C50837) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C1355 +
                      (C38112 + C38113 + C38114) * C1350 -
                      (C38297 + C38298 + C38299) * C1356 -
                      (C38300 + C38301 + C38302) * C50837) *
                         C50770) *
                        C50924 * C1480 +
                    (((C38299 + C38298 + C38297) * C1356 -
                      ((C38114 + C38113 + C38112) * C1350 +
                       (C38111 + C38110 + C38109) * C1355) +
                      (C38302 + C38301 + C38300) * C50837) *
                         C25448 +
                     ((C38303 + C38304 + C38305) * C1356 -
                      ((C38115 + C38116 + C38117) * C1350 +
                       (C38118 + C38119 + C38120) * C1355) +
                      (C38306 + C38307 + C38308) * C50837) *
                         C50770) *
                        C50924 * C50792) *
                       C51055 +
                   ((((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                       C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                          C1356 -
                      ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                        C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                           C1350 +
                       (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                        C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                           C1355) +
                      (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                       C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                          C50837) *
                         C25448 +
                     ((C39805 + C39806 + C39807) * C1356 -
                      ((C38484 + C38483 + C38482) * C1350 +
                       (C38481 + C38480 + C38479) * C1355) +
                      (C39808 + C39809 + C39810) * C50837) *
                         C50770) *
                        C50924 * C1480 +
                    (((C38479 + C38480 + C38481) * C1355 +
                      (C38482 + C38483 + C38484) * C1350 -
                      (C39807 + C39806 + C39805) * C1356 -
                      (C39810 + C39809 + C39808) * C50837) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C1355 +
                      (C38488 + C38489 + C38490) * C1350 -
                      (C38071 * C3667 + C38068 * C3671 + C38070 * C1152 +
                       C51096 * C1158 + C38069 * C879 + C51102 * C891) *
                          C1356 -
                      (C38071 * C3670 + C38068 * C3676 + C38070 * C1159 +
                       C51096 * C1164 + C38069 * C892 + C51102 * C903) *
                          C50837) *
                         C50770) *
                        C50924 * C50792) *
                       C50863)) /
                 (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C1355 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C1350 -
                      (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                       C51096 * C883 + C38069 * C296 + C51102 * C302) *
                          C1356 -
                      (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                       C51096 * C899 + C38069 * C303 + C51102 * C314) *
                          C50837) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C1355 +
                      (C38112 + C38113 + C38114) * C1350 -
                      (C38297 + C38298 + C38299) * C1356 -
                      (C38300 + C38301 + C38302) * C50837) *
                         C50770) *
                        C50924 * C51046 +
                    (((C38299 + C38298 + C38297) * C1356 -
                      ((C38114 + C38113 + C38112) * C1350 +
                       (C38111 + C38110 + C38109) * C1355) +
                      (C38302 + C38301 + C38300) * C50837) *
                         C25448 +
                     ((C38303 + C38304 + C38305) * C1356 -
                      ((C38115 + C38116 + C38117) * C1350 +
                       (C38118 + C38119 + C38120) * C1355) +
                      (C38306 + C38307 + C38308) * C50837) *
                         C50770) *
                        C50924 * C50792) *
                       C1765 +
                   ((((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                       C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                          C1356 -
                      ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                        C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                           C1350 +
                       (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                        C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                           C1355) +
                      (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                       C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                          C50837) *
                         C25448 +
                     ((C39805 + C39806 + C39807) * C1356 -
                      ((C38484 + C38483 + C38482) * C1350 +
                       (C38481 + C38480 + C38479) * C1355) +
                      (C39808 + C39809 + C39810) * C50837) *
                         C50770) *
                        C50924 * C51046 +
                    (((C38479 + C38480 + C38481) * C1355 +
                      (C38482 + C38483 + C38484) * C1350 -
                      (C39807 + C39806 + C39805) * C1356 -
                      (C39810 + C39809 + C39808) * C50837) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C1355 +
                      (C38488 + C38489 + C38490) * C1350 -
                      (C38071 * C3667 + C38068 * C3671 + C38070 * C1152 +
                       C51096 * C1158 + C38069 * C879 + C51102 * C891) *
                          C1356 -
                      (C38071 * C3670 + C38068 * C3676 + C38070 * C1159 +
                       C51096 * C1164 + C38069 * C892 + C51102 * C903) *
                          C50837) *
                         C50770) *
                        C50924 * C50792) *
                       C50863)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C1482 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C51099 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C1483 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C51087 +
                     (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                      C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                         C1484 +
                     (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                      C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                         C1479) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C1482 +
                     (C38112 + C38113 + C38114) * C51099 -
                     (C38297 + C38298 + C38299) * C1483 -
                     (C38300 + C38301 + C38302) * C51087 +
                     (C38649 + C38650 + C38651) * C1484 +
                     (C38652 + C38653 + C38654) * C1479) *
                        C50770) *
                       C50924 * C50787 * C1765 +
                   (((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                      C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                         C1483 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C51099 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C1482) +
                     (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                      C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                         C51087 -
                     (C38071 * C9309 + C38068 * C9313 + C38070 * C3551 +
                      C51096 * C3554 + C38069 * C876 + C51102 * C885) *
                         C1484 -
                     (C38071 * C9312 + C38068 * C9315 + C38070 * C3555 +
                      C51096 * C3560 + C38069 * C886 + C51102 * C900) *
                         C1479) *
                        C25448 +
                    ((C39805 + C39806 + C39807) * C1483 -
                     ((C38484 + C38483 + C38482) * C51099 +
                      (C38481 + C38480 + C38479) * C1482) +
                     (C39808 + C39809 + C39810) * C51087 -
                     (C38071 * C9308 + C38068 * C9311 + C38070 * C3552 +
                      C51096 * C3556 + C38069 * C878 + C51102 * C889) *
                         C1484 -
                     (C38071 * C9310 + C38068 * C9314 + C38070 * C3557 +
                      C51096 * C3561 + C38069 * C890 + C51102 * C902) *
                         C1479) *
                        C50770) *
                       C50924 * C50787 * C50863)) /
                 (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C1355 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C1350 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C1356 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C50837) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C1355 +
                     (C38112 + C38113 + C38114) * C1350 -
                     (C38297 + C38298 + C38299) * C1356 -
                     (C38300 + C38301 + C38302) * C50837) *
                        C50770) *
                       C50924 * C50787 * C51100 +
                   (((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                      C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                         C1356 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C1350 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C1355) +
                     (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                      C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                         C50837) *
                        C25448 +
                    ((C39805 + C39806 + C39807) * C1356 -
                     ((C38484 + C38483 + C38482) * C1350 +
                      (C38481 + C38480 + C38479) * C1355) +
                     (C39808 + C39809 + C39810) * C50837) *
                        C50770) *
                       C50924 * C50787 * C51090 +
                   (((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                      C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                         C1355 +
                     (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                      C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                         C1350 -
                     (C38071 * C13898 + C38068 * C13902 + C38070 * C3669 +
                      C51096 * C3675 + C38069 * C1150 + C51102 * C1154) *
                         C1356 -
                     (C38071 * C13901 + C38068 * C13904 + C38070 * C3674 +
                      C51096 * C3678 + C38069 * C1155 + C51102 * C1162) *
                         C50837) *
                        C25448 +
                    ((C39057 + C39058 + C39059) * C1355 +
                     (C39060 + C39061 + C39062) * C1350 -
                     (C38071 * C16615 + C38068 * C16616 + C38070 * C3668 +
                      C51096 * C3673 + C38069 * C1151 + C51102 * C1156) *
                         C1356 -
                     (C38071 * C16617 + C38068 * C16618 + C38070 * C3672 +
                      C51096 * C3677 + C38069 * C1157 + C51102 * C1163) *
                         C50837) *
                        C50770) *
                       C50924 * C50787 * C2009)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C627 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C622 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C628 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C623 +
                     (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                      C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                         C629 +
                     (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                      C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                         C624) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C627 +
                     (C38112 + C38113 + C38114) * C622 -
                     (C38297 + C38298 + C38299) * C628 -
                     (C38300 + C38301 + C38302) * C623 +
                     (C38649 + C38650 + C38651) * C629 +
                     (C38652 + C38653 + C38654) * C624) *
                        C50770) *
                       C50924 * C51046 +
                   (((C38299 + C38298 + C38297) * C628 -
                     ((C38114 + C38113 + C38112) * C622 +
                      (C38111 + C38110 + C38109) * C627) +
                     (C38302 + C38301 + C38300) * C623 -
                     (C38651 + C38650 + C38649) * C629 -
                     (C38654 + C38653 + C38652) * C624) *
                        C25448 +
                    ((C38303 + C38304 + C38305) * C628 -
                     ((C38115 + C38116 + C38117) * C622 +
                      (C38118 + C38119 + C38120) * C627) +
                     (C38306 + C38307 + C38308) * C623 -
                     (C38071 * C3553 + C38068 * C3558 + C38070 * C880 +
                      C51096 * C893 + C38069 * C632 + C51102 * C639) *
                         C629 -
                     (C38071 * C3559 + C38068 * C3562 + C38070 * C894 +
                      C51096 * C904 + C38069 * C640 + C51102 * C647) *
                         C624) *
                        C50770) *
                       C50924 * C50792) *
                  C50851) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C118 +
                     (C38112 + C38113 + C38114) * C50821) *
                        C50770) *
                       C50924 * C112 -
                   (((C38115 + C38116 + C38117) * C50821 +
                     (C38118 + C38119 + C38120) * C118) *
                        C50770 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C25448) *
                       C50924 * C113 +
                   (((C38120 + C38119 + C38118) * C118 +
                     (C38117 + C38116 + C38115) * C50821) *
                        C25448 +
                    ((C38121 + C38122 + C38123) * C118 +
                     (C38124 + C38125 + C38126) * C50821) *
                        C50770) *
                       C50924 * C114 -
                   (((C38071 * C1021 + C38068 * C1027 + C38070 * C479 +
                      C51096 * C487 + C38069 * C134 + C51102 * C144) *
                         C50821 +
                     (C38071 * C1012 + C38068 * C1022 + C38070 * C469 +
                      C51096 * C478 + C38069 * C123 + C51102 * C135) *
                         C118) *
                        C50770 +
                    ((C38126 + C38125 + C38124) * C50821 +
                     (C38123 + C38122 + C38121) * C118) *
                        C25448) *
                       C50924 * C115) *
                  C50851) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C118 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C50821) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C118 +
                      (C38112 + C38113 + C38114) * C50821) *
                         C50770) *
                        C50924 * C51046 -
                    (((C38115 + C38116 + C38117) * C50821 +
                      (C38118 + C38119 + C38120) * C118) *
                         C50770 +
                     ((C38114 + C38113 + C38112) * C50821 +
                      (C38111 + C38110 + C38109) * C118) *
                         C25448) *
                        C50924 * C50792) *
                       C1005 +
                   ((((C38479 + C38480 + C38481) * C118 +
                      (C38482 + C38483 + C38484) * C50821) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C118 +
                      (C38488 + C38489 + C38490) * C50821) *
                         C50770) *
                        C50924 * C50792 -
                    (((C38484 + C38483 + C38482) * C50821 +
                      (C38481 + C38480 + C38479) * C118) *
                         C50770 +
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C50821 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C118) *
                         C25448) *
                        C50924 * C51046) *
                       C1006 +
                   ((((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                       C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                          C118 +
                      (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                       C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                          C50821) *
                         C25448 +
                     ((C39057 + C39058 + C39059) * C118 +
                      (C39060 + C39061 + C39062) * C50821) *
                         C50770) *
                        C50924 * C51046 -
                    (((C38071 * C6549 + C38068 * C6555 + C38070 * C1242 +
                       C51096 * C1249 + C38069 * C1018 + C51102 * C1025) *
                          C50821 +
                      (C38071 * C6546 + C38068 * C6550 + C38070 * C1237 +
                       C51096 * C1243 + C38069 * C1010 + C51102 * C1017) *
                          C118) *
                         C50770 +
                     ((C39062 + C39061 + C39060) * C50821 +
                      (C39059 + C39058 + C39057) * C118) *
                         C25448) *
                        C50924 * C50792) *
                       C1007)) /
                     (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C757 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C752 -
                    (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                     C51096 * C883 + C38069 * C296 + C51102 * C302) *
                        C758 -
                    (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                     C51096 * C899 + C38069 * C303 + C51102 * C314) *
                        C753 +
                    (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                     C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                        C759 +
                    (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                     C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                        C754 -
                    (C38071 * C9196 + C38068 * C9198 + C38070 * C3207 +
                     C51096 * C3210 + C38069 * C761 + C51102 * C765) *
                        C760 -
                    (C38071 * C9199 + C38068 * C9202 + C38070 * C3211 +
                     C51096 * C3216 + C38069 * C766 + C51102 * C773) *
                        C755) *
                       C25448 +
                   ((C38109 + C38110 + C38111) * C757 +
                    (C38112 + C38113 + C38114) * C752 -
                    (C38297 + C38298 + C38299) * C758 -
                    (C38300 + C38301 + C38302) * C753 +
                    (C38649 + C38650 + C38651) * C759 +
                    (C38652 + C38653 + C38654) * C754 -
                    (C38071 * C9197 + C38068 * C9200 + C38070 * C3208 +
                     C51096 * C3212 + C38069 * C762 + C51102 * C767) *
                        C760 -
                    (C38071 * C9201 + C38068 * C9203 + C38070 * C3213 +
                     C51096 * C3217 + C38069 * C768 + C51102 * C774) *
                        C755) *
                       C50770) *
                  C50924 * C50787 * C50851) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C294 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C51053 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C295 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C50837) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C294 +
                     (C38112 + C38113 + C38114) * C51053 -
                     (C38297 + C38298 + C38299) * C295 -
                     (C38300 + C38301 + C38302) * C50837) *
                        C50770) *
                       C50924 * C291 +
                   (((C38299 + C38298 + C38297) * C295 -
                     ((C38114 + C38113 + C38112) * C51053 +
                      (C38111 + C38110 + C38109) * C294) +
                     (C38302 + C38301 + C38300) * C50837) *
                        C25448 +
                    ((C38303 + C38304 + C38305) * C295 -
                     ((C38115 + C38116 + C38117) * C51053 +
                      (C38118 + C38119 + C38120) * C294) +
                     (C38306 + C38307 + C38308) * C50837) *
                        C50770) *
                       C50924 * C292 +
                   (((C38120 + C38119 + C38118) * C294 +
                     (C38117 + C38116 + C38115) * C51053 -
                     (C38305 + C38304 + C38303) * C295 -
                     (C38308 + C38307 + C38306) * C50837) *
                        C25448 +
                    ((C38121 + C38122 + C38123) * C294 +
                     (C38124 + C38125 + C38126) * C51053 -
                     (C38071 * C1153 + C38068 * C1160 + C38070 * C881 +
                      C51096 * C895 + C38069 * C299 + C51102 * C308) *
                         C295 -
                     (C38071 * C1161 + C38068 * C1165 + C38070 * C896 +
                      C51096 * C905 + C38069 * C309 + C51102 * C317) *
                         C50837) *
                        C50770) *
                       C50924 * C293) *
                  C50851) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C294 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C51053 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C295 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C50837) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C294 +
                     (C38112 + C38113 + C38114) * C51053 -
                     (C38297 + C38298 + C38299) * C295 -
                     (C38300 + C38301 + C38302) * C50837) *
                        C50770) *
                       C50924 * C50787 * C1005 +
                   (((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                      C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                         C295 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C51053 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C294) +
                     (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                      C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                         C50837) *
                        C25448 +
                    ((C38069 * C877 + C51102 * C887 + C38070 * C1151 +
                      C51096 * C1156 + C38071 * C3668 + C38068 * C3673) *
                         C295 -
                     ((C38484 + C38483 + C38482) * C51053 +
                      (C38481 + C38480 + C38479) * C294) +
                     (C38069 * C888 + C51102 * C901 + C38070 * C1157 +
                      C51096 * C1163 + C38071 * C3672 + C38068 * C3677) *
                         C50837) *
                        C50770) *
                       C50924 * C50787 * C1006 +
                   (((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                      C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                         C294 +
                     (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                      C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                         C51053 -
                     (C38071 * C13898 + C38068 * C13902 + C38070 * C3669 +
                      C51096 * C3675 + C38069 * C1150 + C51102 * C1154) *
                         C295 -
                     (C38071 * C13901 + C38068 * C13904 + C38070 * C3674 +
                      C51096 * C3678 + C38069 * C1155 + C51102 * C1162) *
                         C50837) *
                        C25448 +
                    ((C39057 + C39058 + C39059) * C294 +
                     (C39060 + C39061 + C39062) * C51053 -
                     (C38071 * C16615 + C38068 * C16616 + C38070 * C3668 +
                      C51096 * C3673 + C38069 * C1151 + C51102 * C1156) *
                         C295 -
                     (C38071 * C16617 + C38068 * C16618 + C38070 * C3672 +
                      C51096 * C3677 + C38069 * C1157 + C51102 * C1163) *
                         C50837) *
                        C50770) *
                       C50924 * C50787 * C1007)) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C627 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C622 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C628 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C623 +
                     (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                      C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                         C629 +
                     (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                      C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                         C624) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C627 +
                     (C38112 + C38113 + C38114) * C622 -
                     (C38297 + C38298 + C38299) * C628 -
                     (C38300 + C38301 + C38302) * C623 +
                     (C38649 + C38650 + C38651) * C629 +
                     (C38652 + C38653 + C38654) * C624) *
                        C50770) *
                       C50924 * C50787 * C51055 +
                   (((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                      C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                         C628 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C622 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C627) +
                     (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                      C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                         C623 -
                     (C38071 * C9309 + C38068 * C9313 + C38070 * C3551 +
                      C51096 * C3554 + C38069 * C876 + C51102 * C885) *
                         C629 -
                     (C38071 * C9312 + C38068 * C9315 + C38070 * C3555 +
                      C51096 * C3560 + C38069 * C886 + C51102 * C900) *
                         C624) *
                        C25448 +
                    ((C38069 * C877 + C51102 * C887 + C38070 * C1151 +
                      C51096 * C1156 + C38071 * C3668 + C38068 * C3673) *
                         C628 -
                     ((C38484 + C38483 + C38482) * C622 +
                      (C38481 + C38480 + C38479) * C627) +
                     (C38069 * C888 + C51102 * C901 + C38070 * C1157 +
                      C51096 * C1163 + C38071 * C3672 + C38068 * C3677) *
                         C623 -
                     (C38071 * C9308 + C38068 * C9311 + C38070 * C3552 +
                      C51096 * C3556 + C38069 * C878 + C51102 * C889) *
                         C629 -
                     (C38071 * C9310 + C38068 * C9314 + C38070 * C3557 +
                      C51096 * C3561 + C38069 * C890 + C51102 * C902) *
                         C624) *
                        C50770) *
                       C50924 * C50787 * C50863)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C118 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C50821) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C118 +
                      (C38112 + C38113 + C38114) * C50821) *
                         C50770) *
                        C50924 * C291 -
                    (((C38115 + C38116 + C38117) * C50821 +
                      (C38118 + C38119 + C38120) * C118) *
                         C50770 +
                     ((C38114 + C38113 + C38112) * C50821 +
                      (C38111 + C38110 + C38109) * C118) *
                         C25448) *
                        C50924 * C292 +
                    (((C38120 + C38119 + C38118) * C118 +
                      (C38117 + C38116 + C38115) * C50821) *
                         C25448 +
                     ((C38121 + C38122 + C38123) * C118 +
                      (C38124 + C38125 + C38126) * C50821) *
                         C50770) *
                        C50924 * C293) *
                       C51055 +
                   ((((C38479 + C38480 + C38481) * C118 +
                      (C38482 + C38483 + C38484) * C50821) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C118 +
                      (C38488 + C38489 + C38490) * C50821) *
                         C50770) *
                        C50924 * C292 -
                    (((C38484 + C38483 + C38482) * C50821 +
                      (C38481 + C38480 + C38479) * C118) *
                         C50770 +
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C50821 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C118) *
                         C25448) *
                        C50924 * C291 -
                    (((C38071 * C1240 + C38068 * C1248 + C38070 * C1020 +
                       C51096 * C1026 + C38069 * C477 + C51102 * C486) *
                          C50821 +
                      (C38071 * C1236 + C38068 * C1241 + C38070 * C1011 +
                       C51096 * C1019 + C38069 * C468 + C51102 * C476) *
                          C118) *
                         C50770 +
                     ((C38490 + C38489 + C38488) * C50821 +
                      (C38487 + C38486 + C38485) * C118) *
                         C25448) *
                        C50924 * C293) *
                       C50863)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C118 +
                     (C38112 + C38113 + C38114) * C50821) *
                        C50770) *
                       C50924 * C50787 * C1232 -
                   (((C38484 + C38483 + C38482) * C50821 +
                     (C38481 + C38480 + C38479) * C118) *
                        C50770 +
                    ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                      C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                         C50821 +
                     (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                      C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                         C118) *
                        C25448) *
                       C50924 * C50787 * C1233 +
                   (((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                      C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                         C118 +
                     (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                      C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                         C50821) *
                        C25448 +
                    ((C39057 + C39058 + C39059) * C118 +
                     (C39060 + C39061 + C39062) * C50821) *
                        C50770) *
                       C50924 * C50787 * C1234 -
                   (((C38071 * C16719 + C38068 * C16723 + C38070 * C6551 +
                      C51096 * C6556 + C38069 * C1244 + C51102 * C1250) *
                         C50821 +
                     (C38071 * C16717 + C38068 * C16720 + C38070 * C6547 +
                      C51096 * C6552 + C38069 * C1238 + C51102 * C1245) *
                         C118) *
                        C50770 +
                    ((C38071 * C16721 + C38068 * C16724 + C38070 * C6553 +
                      C51096 * C6557 + C38069 * C1246 + C51102 * C1251) *
                         C50821 +
                     (C38071 * C16718 + C38068 * C16722 + C38070 * C6548 +
                      C51096 * C6554 + C38069 * C1239 + C51102 * C1247) *
                         C118) *
                        C25448) *
                       C50924 * C50787 * C1235)) /
                     (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C118 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C50821) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C118 +
                      (C38112 + C38113 + C38114) * C50821) *
                         C50770) *
                        C50924 * C51098 -
                    (((C38115 + C38116 + C38117) * C50821 +
                      (C38118 + C38119 + C38120) * C118) *
                         C50770 +
                     ((C38114 + C38113 + C38112) * C50821 +
                      (C38111 + C38110 + C38109) * C118) *
                         C25448) *
                        C50924 * C51084 +
                    (((C38120 + C38119 + C38118) * C118 +
                      (C38117 + C38116 + C38115) * C50821) *
                         C25448 +
                     ((C38121 + C38122 + C38123) * C118 +
                      (C38124 + C38125 + C38126) * C50821) *
                         C50770) *
                        C50924 * C1354) *
                       C1765 +
                   ((((C38479 + C38480 + C38481) * C118 +
                      (C38482 + C38483 + C38484) * C50821) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C118 +
                      (C38488 + C38489 + C38490) * C50821) *
                         C50770) *
                        C50924 * C51084 -
                    (((C38484 + C38483 + C38482) * C50821 +
                      (C38481 + C38480 + C38479) * C118) *
                         C50770 +
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C50821 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C118) *
                         C25448) *
                        C50924 * C51098 -
                    (((C38071 * C1240 + C38068 * C1248 + C38070 * C1020 +
                       C51096 * C1026 + C38069 * C477 + C51102 * C486) *
                          C50821 +
                      (C38071 * C1236 + C38068 * C1241 + C38070 * C1011 +
                       C51096 * C1019 + C38069 * C468 + C51102 * C476) *
                          C118) *
                         C50770 +
                     ((C38490 + C38489 + C38488) * C50821 +
                      (C38487 + C38486 + C38485) * C118) *
                         C25448) *
                        C50924 * C1354) *
                       C50863)) /
                 (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C294 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C51053 -
                      (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                       C51096 * C883 + C38069 * C296 + C51102 * C302) *
                          C295 -
                      (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                       C51096 * C899 + C38069 * C303 + C51102 * C314) *
                          C50837) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C294 +
                      (C38112 + C38113 + C38114) * C51053 -
                      (C38297 + C38298 + C38299) * C295 -
                      (C38300 + C38301 + C38302) * C50837) *
                         C50770) *
                        C50924 * C1480 +
                    (((C38299 + C38298 + C38297) * C295 -
                      ((C38114 + C38113 + C38112) * C51053 +
                       (C38111 + C38110 + C38109) * C294) +
                      (C38302 + C38301 + C38300) * C50837) *
                         C25448 +
                     ((C38303 + C38304 + C38305) * C295 -
                      ((C38115 + C38116 + C38117) * C51053 +
                       (C38118 + C38119 + C38120) * C294) +
                      (C38306 + C38307 + C38308) * C50837) *
                         C50770) *
                        C50924 * C50792) *
                       C1765 +
                   ((((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                       C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                          C295 -
                      ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                        C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                           C51053 +
                       (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                        C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                           C294) +
                      (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                       C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                          C50837) *
                         C25448 +
                     ((C39805 + C39806 + C39807) * C295 -
                      ((C38484 + C38483 + C38482) * C51053 +
                       (C38481 + C38480 + C38479) * C294) +
                      (C39808 + C39809 + C39810) * C50837) *
                         C50770) *
                        C50924 * C1480 +
                    (((C38479 + C38480 + C38481) * C294 +
                      (C38482 + C38483 + C38484) * C51053 -
                      (C39807 + C39806 + C39805) * C295 -
                      (C39810 + C39809 + C39808) * C50837) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C294 +
                      (C38488 + C38489 + C38490) * C51053 -
                      (C38071 * C3667 + C38068 * C3671 + C38070 * C1152 +
                       C51096 * C1158 + C38069 * C879 + C51102 * C891) *
                          C295 -
                      (C38071 * C3670 + C38068 * C3676 + C38070 * C1159 +
                       C51096 * C1164 + C38069 * C892 + C51102 * C903) *
                          C50837) *
                         C50770) *
                        C50924 * C50792) *
                       C50863)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C118 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C50821) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C118 +
                      (C38112 + C38113 + C38114) * C50821) *
                         C50770) *
                        C50924 * C1480 -
                    (((C38115 + C38116 + C38117) * C50821 +
                      (C38118 + C38119 + C38120) * C118) *
                         C50770 +
                     ((C38114 + C38113 + C38112) * C50821 +
                      (C38111 + C38110 + C38109) * C118) *
                         C25448) *
                        C50924 * C50792) *
                       C51100 +
                   ((((C38479 + C38480 + C38481) * C118 +
                      (C38482 + C38483 + C38484) * C50821) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C118 +
                      (C38488 + C38489 + C38490) * C50821) *
                         C50770) *
                        C50924 * C50792 -
                    (((C38484 + C38483 + C38482) * C50821 +
                      (C38481 + C38480 + C38479) * C118) *
                         C50770 +
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C50821 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C118) *
                         C25448) *
                        C50924 * C1480) *
                       C51090 +
                   ((((C38069 * C1008 + C51102 * C1013 + C38070 * C1239 +
                       C51096 * C1247 + C38071 * C6548 + C38068 * C6554) *
                          C118 +
                      (C38069 * C1014 + C51102 * C1023 + C38070 * C1246 +
                       C51096 * C1251 + C38071 * C6553 + C38068 * C6557) *
                          C50821) *
                         C25448 +
                     ((C39057 + C39058 + C39059) * C118 +
                      (C39060 + C39061 + C39062) * C50821) *
                         C50770) *
                        C50924 * C1480 -
                    (((C38071 * C6549 + C38068 * C6555 + C38070 * C1242 +
                       C51096 * C1249 + C38069 * C1018 + C51102 * C1025) *
                          C50821 +
                      (C38071 * C6546 + C38068 * C6550 + C38070 * C1237 +
                       C51096 * C1243 + C38069 * C1010 + C51102 * C1017) *
                          C118) *
                         C50770 +
                     ((C39062 + C39061 + C39060) * C50821 +
                      (C39059 + C39058 + C39057) * C118) *
                         C25448) *
                        C50924 * C50792) *
                       C2009)) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C118 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C50821) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C118 +
                     (C38112 + C38113 + C38114) * C50821) *
                        C50770) *
                       C50924 * C112 -
                   (((C38115 + C38116 + C38117) * C50821 +
                     (C38118 + C38119 + C38120) * C118) *
                        C50770 +
                    ((C38114 + C38113 + C38112) * C50821 +
                     (C38111 + C38110 + C38109) * C118) *
                        C25448) *
                       C50924 * C113 +
                   (((C38120 + C38119 + C38118) * C118 +
                     (C38117 + C38116 + C38115) * C50821) *
                        C25448 +
                    ((C38121 + C38122 + C38123) * C118 +
                     (C38124 + C38125 + C38126) * C50821) *
                        C50770) *
                       C50924 * C114 -
                   (((C38071 * C1021 + C38068 * C1027 + C38070 * C479 +
                      C51096 * C487 + C38069 * C134 + C51102 * C144) *
                         C50821 +
                     (C38071 * C1012 + C38068 * C1022 + C38070 * C469 +
                      C51096 * C478 + C38069 * C123 + C51102 * C135) *
                         C118) *
                        C50770 +
                    ((C38126 + C38125 + C38124) * C50821 +
                     (C38123 + C38122 + C38121) * C118) *
                        C25448) *
                       C50924 * C115) *
                  C50851) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C627 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C622 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C628 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C623 +
                     (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                      C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                         C629 +
                     (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                      C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                         C624) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C627 +
                     (C38112 + C38113 + C38114) * C622 -
                     (C38297 + C38298 + C38299) * C628 -
                     (C38300 + C38301 + C38302) * C623 +
                     (C38649 + C38650 + C38651) * C629 +
                     (C38652 + C38653 + C38654) * C624) *
                        C50770) *
                       C50924 * C51046 +
                   (((C38299 + C38298 + C38297) * C628 -
                     ((C38114 + C38113 + C38112) * C622 +
                      (C38111 + C38110 + C38109) * C627) +
                     (C38302 + C38301 + C38300) * C623 -
                     (C38651 + C38650 + C38649) * C629 -
                     (C38654 + C38653 + C38652) * C624) *
                        C25448 +
                    ((C38303 + C38304 + C38305) * C628 -
                     ((C38115 + C38116 + C38117) * C622 +
                      (C38118 + C38119 + C38120) * C627) +
                     (C38306 + C38307 + C38308) * C623 -
                     (C38071 * C3553 + C38068 * C3558 + C38070 * C880 +
                      C51096 * C893 + C38069 * C632 + C51102 * C639) *
                         C629 -
                     (C38071 * C3559 + C38068 * C3562 + C38070 * C894 +
                      C51096 * C904 + C38069 * C640 + C51102 * C647) *
                         C624) *
                        C50770) *
                       C50924 * C50792) *
                  C50851) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C294 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C51053 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C295 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C50837) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C294 +
                     (C38112 + C38113 + C38114) * C51053 -
                     (C38297 + C38298 + C38299) * C295 -
                     (C38300 + C38301 + C38302) * C50837) *
                        C50770) *
                       C50924 * C291 +
                   (((C38299 + C38298 + C38297) * C295 -
                     ((C38114 + C38113 + C38112) * C51053 +
                      (C38111 + C38110 + C38109) * C294) +
                     (C38302 + C38301 + C38300) * C50837) *
                        C25448 +
                    ((C38303 + C38304 + C38305) * C295 -
                     ((C38115 + C38116 + C38117) * C51053 +
                      (C38118 + C38119 + C38120) * C294) +
                     (C38306 + C38307 + C38308) * C50837) *
                        C50770) *
                       C50924 * C292 +
                   (((C38120 + C38119 + C38118) * C294 +
                     (C38117 + C38116 + C38115) * C51053 -
                     (C38305 + C38304 + C38303) * C295 -
                     (C38308 + C38307 + C38306) * C50837) *
                        C25448 +
                    ((C38121 + C38122 + C38123) * C294 +
                     (C38124 + C38125 + C38126) * C51053 -
                     (C38071 * C1153 + C38068 * C1160 + C38070 * C881 +
                      C51096 * C895 + C38069 * C299 + C51102 * C308) *
                         C295 -
                     (C38071 * C1161 + C38068 * C1165 + C38070 * C896 +
                      C51096 * C905 + C38069 * C309 + C51102 * C317) *
                         C50837) *
                        C50770) *
                       C50924 * C293) *
                  C50851) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                     C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                        C757 +
                    (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                     C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                        C752 -
                    (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                     C51096 * C883 + C38069 * C296 + C51102 * C302) *
                        C758 -
                    (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                     C51096 * C899 + C38069 * C303 + C51102 * C314) *
                        C753 +
                    (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                     C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                        C759 +
                    (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                     C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                        C754 -
                    (C38071 * C9196 + C38068 * C9198 + C38070 * C3207 +
                     C51096 * C3210 + C38069 * C761 + C51102 * C765) *
                        C760 -
                    (C38071 * C9199 + C38068 * C9202 + C38070 * C3211 +
                     C51096 * C3216 + C38069 * C766 + C51102 * C773) *
                        C755) *
                       C25448 +
                   ((C38109 + C38110 + C38111) * C757 +
                    (C38112 + C38113 + C38114) * C752 -
                    (C38297 + C38298 + C38299) * C758 -
                    (C38300 + C38301 + C38302) * C753 +
                    (C38649 + C38650 + C38651) * C759 +
                    (C38652 + C38653 + C38654) * C754 -
                    (C38071 * C9197 + C38068 * C9200 + C38070 * C3208 +
                     C51096 * C3212 + C38069 * C762 + C51102 * C767) *
                        C760 -
                    (C38071 * C9201 + C38068 * C9203 + C38070 * C3213 +
                     C51096 * C3217 + C38069 * C768 + C51102 * C774) *
                        C755) *
                       C50770) *
                  C50924 * C50787 * C50851) /
                     (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                       C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                          C118 +
                      (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                       C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                          C50821) *
                         C25448 +
                     ((C38109 + C38110 + C38111) * C118 +
                      (C38112 + C38113 + C38114) * C50821) *
                         C50770) *
                        C50924 * C291 -
                    (((C38115 + C38116 + C38117) * C50821 +
                      (C38118 + C38119 + C38120) * C118) *
                         C50770 +
                     ((C38114 + C38113 + C38112) * C50821 +
                      (C38111 + C38110 + C38109) * C118) *
                         C25448) *
                        C50924 * C292 +
                    (((C38120 + C38119 + C38118) * C118 +
                      (C38117 + C38116 + C38115) * C50821) *
                         C25448 +
                     ((C38121 + C38122 + C38123) * C118 +
                      (C38124 + C38125 + C38126) * C50821) *
                         C50770) *
                        C50924 * C293) *
                       C51055 +
                   ((((C38479 + C38480 + C38481) * C118 +
                      (C38482 + C38483 + C38484) * C50821) *
                         C25448 +
                     ((C38485 + C38486 + C38487) * C118 +
                      (C38488 + C38489 + C38490) * C50821) *
                         C50770) *
                        C50924 * C292 -
                    (((C38484 + C38483 + C38482) * C50821 +
                      (C38481 + C38480 + C38479) * C118) *
                         C50770 +
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C50821 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C118) *
                         C25448) *
                        C50924 * C291 -
                    (((C38071 * C1240 + C38068 * C1248 + C38070 * C1020 +
                       C51096 * C1026 + C38069 * C477 + C51102 * C486) *
                          C50821 +
                      (C38071 * C1236 + C38068 * C1241 + C38070 * C1011 +
                       C51096 * C1019 + C38069 * C468 + C51102 * C476) *
                          C118) *
                         C50770 +
                     ((C38490 + C38489 + C38488) * C50821 +
                      (C38487 + C38486 + C38485) * C118) *
                         C25448) *
                        C50924 * C293) *
                       C50863)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38069 * C119 + C51102 * C126 + C38070 * C470 +
                      C51096 * C481 + C38071 * C1008 + C38068 * C1013) *
                         C627 +
                     (C38069 * C127 + C51102 * C140 + C38070 * C480 +
                      C51096 * C488 + C38071 * C1014 + C38068 * C1023) *
                         C622 -
                     (C38071 * C1150 + C38068 * C1154 + C38070 * C875 +
                      C51096 * C883 + C38069 * C296 + C51102 * C302) *
                         C628 -
                     (C38071 * C1155 + C38068 * C1162 + C38070 * C884 +
                      C51096 * C899 + C38069 * C303 + C51102 * C314) *
                         C623 +
                     (C38069 * C630 + C51102 * C635 + C38070 * C876 +
                      C51096 * C885 + C38071 * C3551 + C38068 * C3554) *
                         C629 +
                     (C38069 * C636 + C51102 * C645 + C38070 * C886 +
                      C51096 * C900 + C38071 * C3555 + C38068 * C3560) *
                         C624) *
                        C25448 +
                    ((C38109 + C38110 + C38111) * C627 +
                     (C38112 + C38113 + C38114) * C622 -
                     (C38297 + C38298 + C38299) * C628 -
                     (C38300 + C38301 + C38302) * C623 +
                     (C38649 + C38650 + C38651) * C629 +
                     (C38652 + C38653 + C38654) * C624) *
                        C50770) *
                       C50924 * C50787 * C51055 +
                   (((C38069 * C875 + C51102 * C883 + C38070 * C1150 +
                      C51096 * C1154 + C38071 * C3669 + C38068 * C3675) *
                         C628 -
                     ((C38071 * C1246 + C38068 * C1251 + C38070 * C1014 +
                       C51096 * C1023 + C38069 * C480 + C51102 * C488) *
                          C622 +
                      (C38071 * C1239 + C38068 * C1247 + C38070 * C1008 +
                       C51096 * C1013 + C38069 * C470 + C51102 * C481) *
                          C627) +
                     (C38069 * C884 + C51102 * C899 + C38070 * C1155 +
                      C51096 * C1162 + C38071 * C3674 + C38068 * C3678) *
                         C623 -
                     (C38071 * C9309 + C38068 * C9313 + C38070 * C3551 +
                      C51096 * C3554 + C38069 * C876 + C51102 * C885) *
                         C629 -
                     (C38071 * C9312 + C38068 * C9315 + C38070 * C3555 +
                      C51096 * C3560 + C38069 * C886 + C51102 * C900) *
                         C624) *
                        C25448 +
                    ((C38069 * C877 + C51102 * C887 + C38070 * C1151 +
                      C51096 * C1156 + C38071 * C3668 + C38068 * C3673) *
                         C628 -
                     ((C38484 + C38483 + C38482) * C622 +
                      (C38481 + C38480 + C38479) * C627) +
                     (C38069 * C888 + C51102 * C901 + C38070 * C1157 +
                      C51096 * C1163 + C38071 * C3672 + C38068 * C3677) *
                         C623 -
                     (C38071 * C9308 + C38068 * C9311 + C38070 * C3552 +
                      C51096 * C3556 + C38069 * C878 + C51102 * C889) *
                         C629 -
                     (C38071 * C9310 + C38068 * C9314 + C38070 * C3557 +
                      C51096 * C3561 + C38069 * C890 + C51102 * C902) *
                         C624) *
                        C50770) *
                       C50924 * C50787 * C50863)) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 -
            (C117 * C296 + C50950 * C302) * C1356 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
           C1379 * C110) *
              C50924 * C51098 +
          ((C1360 - (C1359 + C1358) + C1361) * C107 +
           (C1364 - (C1363 + C1362) + C1365) * C108 +
           (C1368 - (C1367 + C1366) + C1369) * C109 +
           (C1370 - (C1371 + C1372) + C1373) * C110) *
              C50924 * C51084 +
          (C1378 * C107 + C1379 * C108 +
           (C1372 + C1371 - C1370 - C1373) * C109 +
           (C176 * C1355 + C177 * C1350 -
            (C117 * C301 + C50950 * C312) * C1356 -
            (C117 * C313 + C50950 * C319) * C50837) *
               C110) *
              C50924 * C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C51039 +
            (C1358 + C1359 - C1360 - C1361) * C50770) *
               C8147 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C51039 +
            (C3826 + C3827 - C3828 - C3829) * C50770) *
               C8148 +
           ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C51039 +
            (C9463 + C9464 - C9465 - C9466) * C50770) *
               C8149) *
              C51098 +
          (((C1360 - (C1359 + C1358) + C1361) * C51039 +
            (C1364 - (C1363 + C1362) + C1365) * C50770) *
               C8147 +
           ((C3828 - (C3827 + C3826) + C3829) * C51039 +
            (C3832 - (C3831 + C3830) + C3833) * C50770) *
               C8148 +
           ((C9465 - (C9464 + C9463) + C9466) * C51039 +
            (C9467 - (C9468 + C9469) + C9470) * C50770) *
               C8149) *
              C51084 +
          ((C1378 * C51039 + C1379 * C50770) * C8147 +
           (C3840 * C51039 + (C3836 + C3835 - C3834 - C3837) * C50770) * C8148 +
           ((C9469 + C9468 - C9467 - C9470) * C51039 +
            (C679 * C1355 + C680 * C1350 -
             (C117 * C764 + C50950 * C771) * C1356 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C8149) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1482 +
            (C117 * C127 + C50950 * C140) * C51099 -
            (C117 * C296 + C50950 * C302) * C1483 -
            (C117 * C303 + C50950 * C314) * C51087 +
            (C117 * C630 + C50950 * C635) * C1484 +
            (C117 * C636 + C50950 * C645) * C1479) *
               C107 +
           (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C108 +
           (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C109 +
           (C1498 + C1499 - C1500 - C1501 + C1502 + C1503) * C110) *
              C50924 * C1480 +
          ((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C107 +
           (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C108 +
           (C1500 - (C1499 + C1498) + C1501 - C1502 - C1503) * C109 +
           (C353 * C1483 - (C174 * C51099 + C175 * C1482) + C354 * C51087 -
            (C117 * C634 + C50950 * C643) * C1484 -
            (C117 * C644 + C50950 * C649) * C1479) *
               C110) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C51039 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C50770) *
               C8147 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C51039 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C50770) *
               C8148 +
           ((C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
             C8729 * C1484 + C8730 * C1479) *
                C51039 +
            (C9617 + C9618 - C9619 - C9620 + C9621 + C9622) * C50770) *
               C8149) *
              C1480 +
          (((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C51039 +
            (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C50770) *
               C8147 +
           ((C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C51039 +
            (C3995 - (C3994 + C3993) + C3996 - C3997 - C3998) * C50770) *
               C8148 +
           ((C9619 - (C9618 + C9617) + C9620 - C9621 - C9622) * C51039 +
            (C2940 * C1483 - (C678 * C51099 + C677 * C1482) + C2941 * C51087 -
             (C117 * C3045 + C50950 * C3050) * C1484 -
             (C117 * C3051 + C50950 * C3054) * C1479) *
                C50770) *
               C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 -
             (C117 * C296 + C50950 * C302) * C1356 -
             (C117 * C303 + C50950 * C314) * C50837) *
                C107 +
            (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
            C1379 * C110) *
               C50924 * C1480 +
           ((C1360 - (C1359 + C1358) + C1361) * C107 +
            (C1364 - (C1363 + C1362) + C1365) * C108 +
            (C1368 - (C1367 + C1366) + C1369) * C109 +
            (C1370 - (C1371 + C1372) + C1373) * C110) *
               C50924 * C50792) *
              C51055 +
          ((((C117 * C875 + C50950 * C883) * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             (C117 * C884 + C50950 * C899) * C50837) *
                C107 +
            (C1662 - (C1640 + C1641) + C1663) * C108 +
            (C1664 - (C1646 + C1647) + C1665) * C109 +
            (C1666 - (C1652 + C1653) + C1667) * C110) *
               C50924 * C1480 +
           ((C1641 + C1640 - C1662 - C1663) * C107 +
            (C1647 + C1646 - C1664 - C1665) * C108 +
            (C1653 + C1652 - C1666 - C1667) * C109 +
            (C513 * C1355 + C514 * C1350 -
             (C117 * C1633 + C50950 * C1634) * C1356 -
             (C117 * C1635 + C50950 * C1636) * C50837) *
                C110) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C51039 +
             (C1358 + C1359 - C1360 - C1361) * C50770) *
                C8147 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C51039 +
             (C3826 + C3827 - C3828 - C3829) * C50770) *
                C8148 +
            ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                 C51039 +
             (C9463 + C9464 - C9465 - C9466) * C50770) *
                C8149) *
               C1480 +
           (((C1360 - (C1359 + C1358) + C1361) * C51039 +
             (C1364 - (C1363 + C1362) + C1365) * C50770) *
                C8147 +
            ((C3828 - (C3827 + C3826) + C3829) * C51039 +
             (C3832 - (C3831 + C3830) + C3833) * C50770) *
                C8148 +
            ((C9465 - (C9464 + C9463) + C9466) * C51039 +
             (C9467 - (C9468 + C9469) + C9470) * C50770) *
                C8149) *
               C50792) *
              C51055 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C51039 +
             (C1662 - (C1640 + C1641) + C1663) * C50770) *
                C8147 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C51039 +
             (C4193 - (C4194 + C4195) + C4196) * C50770) *
                C8148 +
            ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) +
              C8894 * C50837) *
                 C51039 +
             (C9817 - (C9818 + C9819) + C9820) * C50770) *
                C8149) *
               C1480 +
           (((C1641 + C1640 - C1662 - C1663) * C51039 +
             (C1647 + C1646 - C1664 - C1665) * C50770) *
                C8147 +
            ((C4195 + C4194 - C4193 - C4196) * C51039 +
             (C4199 + C4198 - C4197 - C4200) * C50770) *
                C8148 +
            ((C9819 + C9818 - C9817 - C9820) * C51039 +
             (C3242 * C1355 + C3243 * C1350 -
              (C117 * C3209 + C50950 * C3214) * C1356 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 -
             (C117 * C296 + C50950 * C302) * C1356 -
             (C117 * C303 + C50950 * C314) * C50837) *
                C107 +
            (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
            C1379 * C110) *
               C50924 * C51046 +
           ((C1360 - (C1359 + C1358) + C1361) * C107 +
            (C1364 - (C1363 + C1362) + C1365) * C108 +
            (C1368 - (C1367 + C1366) + C1369) * C109 +
            (C1370 - (C1371 + C1372) + C1373) * C110) *
               C50924 * C50792) *
              C1765 +
          ((((C117 * C875 + C50950 * C883) * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             (C117 * C884 + C50950 * C899) * C50837) *
                C107 +
            (C1662 - (C1640 + C1641) + C1663) * C108 +
            (C1664 - (C1646 + C1647) + C1665) * C109 +
            (C1666 - (C1652 + C1653) + C1667) * C110) *
               C50924 * C51046 +
           ((C1641 + C1640 - C1662 - C1663) * C107 +
            (C1647 + C1646 - C1664 - C1665) * C108 +
            (C1653 + C1652 - C1666 - C1667) * C109 +
            (C513 * C1355 + C514 * C1350 -
             (C117 * C1633 + C50950 * C1634) * C1356 -
             (C117 * C1635 + C50950 * C1636) * C50837) *
                C110) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C51039 +
             (C1358 + C1359 - C1360 - C1361) * C50770) *
                C8147 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C51039 +
             (C3826 + C3827 - C3828 - C3829) * C50770) *
                C8148 +
            ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                 C51039 +
             (C9463 + C9464 - C9465 - C9466) * C50770) *
                C8149) *
               C51046 +
           (((C1360 - (C1359 + C1358) + C1361) * C51039 +
             (C1364 - (C1363 + C1362) + C1365) * C50770) *
                C8147 +
            ((C3828 - (C3827 + C3826) + C3829) * C51039 +
             (C3832 - (C3831 + C3830) + C3833) * C50770) *
                C8148 +
            ((C9465 - (C9464 + C9463) + C9466) * C51039 +
             (C9467 - (C9468 + C9469) + C9470) * C50770) *
                C8149) *
               C50792) *
              C1765 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C51039 +
             (C1662 - (C1640 + C1641) + C1663) * C50770) *
                C8147 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C51039 +
             (C4193 - (C4194 + C4195) + C4196) * C50770) *
                C8148 +
            ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) +
              C8894 * C50837) *
                 C51039 +
             (C9817 - (C9818 + C9819) + C9820) * C50770) *
                C8149) *
               C51046 +
           (((C1641 + C1640 - C1662 - C1663) * C51039 +
             (C1647 + C1646 - C1664 - C1665) * C50770) *
                C8147 +
            ((C4195 + C4194 - C4193 - C4196) * C51039 +
             (C4199 + C4198 - C4197 - C4200) * C50770) *
                C8148 +
            ((C9819 + C9818 - C9817 - C9820) * C51039 +
             (C3242 * C1355 + C3243 * C1350 -
              (C117 * C3209 + C50950 * C3214) * C1356 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C50950 * C126) * C1482 +
                     (C117 * C127 + C50950 * C140) * C51099 -
                     (C117 * C296 + C50950 * C302) * C1483 -
                     (C117 * C303 + C50950 * C314) * C51087 +
                     (C117 * C630 + C50950 * C635) * C1484 +
                     (C117 * C636 + C50950 * C645) * C1479) *
                        C107 +
                    (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C108 +
                    (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C109 +
                    (C1498 + C1499 - C1500 - C1501 + C1502 + C1503) * C110) *
                       C50924 * C50787 * C1765 +
                   (((C117 * C875 + C50950 * C883) * C1483 -
                     ((C117 * C480 + C50950 * C488) * C51099 +
                      (C117 * C470 + C50950 * C481) * C1482) +
                     (C117 * C884 + C50950 * C899) * C51087 -
                     (C117 * C876 + C50950 * C885) * C1484 -
                     (C117 * C886 + C50950 * C900) * C1479) *
                        C107 +
                    (C1656 * C1483 - (C508 * C51099 + C507 * C1482) +
                     C1657 * C51087 - (C117 * C878 + C50950 * C889) * C1484 -
                     (C117 * C890 + C50950 * C902) * C1479) *
                        C108 +
                    (C1658 * C1483 - (C510 * C51099 + C509 * C1482) +
                     C1659 * C51087 - (C117 * C880 + C50950 * C893) * C1484 -
                     (C117 * C894 + C50950 * C904) * C1479) *
                        C109 +
                    (C1660 * C1483 - (C512 * C51099 + C511 * C1482) +
                     C1661 * C51087 - (C117 * C882 + C50950 * C897) * C1484 -
                     (C117 * C898 + C50950 * C906) * C1479) *
                        C110) *
                       C50924 * C50787 * C50863)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50950 * C126) * C1482 +
                      (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
                      C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                         C51039 +
                     (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C50770) *
                        C8147 +
                    ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 -
                      C2937 * C51087 + C3060 * C1484 + C3061 * C1479) *
                         C51039 +
                     (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C50770) *
                        C8148 +
                    ((C2936 * C1482 + C2937 * C51099 - C3060 * C1483 -
                      C3061 * C51087 + C8729 * C1484 + C8730 * C1479) *
                         C51039 +
                     (C9617 + C9618 - C9619 - C9620 + C9621 + C9622) * C50770) *
                        C8149) *
                       C50787 * C1765 +
                   (((C3236 * C1483 -
                      ((C117 * C480 + C50950 * C488) * C51099 +
                       (C117 * C470 + C50950 * C481) * C1482) +
                      C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
                         C51039 +
                     (C1656 * C1483 - (C508 * C51099 + C507 * C1482) +
                      C1657 * C51087 - C3240 * C1484 - C3241 * C1479) *
                         C50770) *
                        C8147 +
                    ((C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) +
                      C3239 * C51087 - C8893 * C1484 - C8894 * C1479) *
                         C51039 +
                     (C3240 * C1483 - (C1657 * C51099 + C1656 * C1482) +
                      C3241 * C51087 - C8895 * C1484 - C8896 * C1479) *
                         C50770) *
                        C8148 +
                    ((C8893 * C1483 - (C3239 * C51099 + C3238 * C1482) +
                      C8894 * C51087 - (C117 * C8876 + C50950 * C8878) * C1484 -
                      (C117 * C8879 + C50950 * C8882) * C1479) *
                         C51039 +
                     (C8895 * C1483 - (C3241 * C51099 + C3240 * C1482) +
                      C8896 * C51087 - (C117 * C8877 + C50950 * C8880) * C1484 -
                      (C117 * C8881 + C50950 * C8883) * C1479) *
                         C50770) *
                        C8149) *
                       C50787 * C50863)) /
                     (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 -
            (C117 * C296 + C50950 * C302) * C1356 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C1358 + C1359 - C1360 - C1361) * C108 + C1378 * C109 +
           C1379 * C110) *
              C50924 * C50787 * C51100 +
          (((C117 * C875 + C50950 * C883) * C1356 -
            ((C117 * C480 + C50950 * C488) * C1350 +
             (C117 * C470 + C50950 * C481) * C1355) +
            (C117 * C884 + C50950 * C899) * C50837) *
               C107 +
           (C1662 - (C1640 + C1641) + C1663) * C108 +
           (C1664 - (C1646 + C1647) + C1665) * C109 +
           (C1666 - (C1652 + C1653) + C1667) * C110) *
              C50924 * C50787 * C51090 +
          (((C117 * C1008 + C50950 * C1013) * C1355 +
            (C117 * C1014 + C50950 * C1023) * C1350 -
            (C117 * C1150 + C50950 * C1154) * C1356 -
            (C117 * C1155 + C50950 * C1162) * C50837) *
               C107 +
           (C1041 * C1355 + C1042 * C1350 -
            (C117 * C1151 + C50950 * C1156) * C1356 -
            (C117 * C1157 + C50950 * C1163) * C50837) *
               C108 +
           (C1043 * C1355 + C1044 * C1350 -
            (C117 * C1152 + C50950 * C1158) * C1356 -
            (C117 * C1159 + C50950 * C1164) * C50837) *
               C109 +
           (C1045 * C1355 + C1046 * C1350 -
            (C117 * C1153 + C50950 * C1160) * C1356 -
            (C117 * C1161 + C50950 * C1165) * C50837) *
               C110) *
              C50924 * C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C51039 +
            (C1358 + C1359 - C1360 - C1361) * C50770) *
               C8147 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C51039 +
            (C3826 + C3827 - C3828 - C3829) * C50770) *
               C8148 +
           ((C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C51039 +
            (C9463 + C9464 - C9465 - C9466) * C50770) *
               C8149) *
              C50787 * C51100 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C51039 +
            (C1662 - (C1640 + C1641) + C1663) * C50770) *
               C8147 +
           ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C51039 +
            (C4193 - (C4194 + C4195) + C4196) * C50770) *
               C8148 +
           ((C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C51039 +
            (C9817 - (C9818 + C9819) + C9820) * C50770) *
               C8149) *
              C50787 * C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C1355 +
             (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
             C3569 * C50837) *
                C51039 +
            (C1041 * C1355 + C1042 * C1350 - C3398 * C1356 - C3399 * C50837) *
                C50770) *
               C8147 +
           ((C3568 * C1355 + C3569 * C1350 - C9209 * C1356 - C9210 * C50837) *
                C51039 +
            (C3398 * C1355 + C3399 * C1350 - C9047 * C1356 - C9048 * C50837) *
                C50770) *
               C8148 +
           ((C9209 * C1355 + C9210 * C1350 -
             (C117 * C9196 + C50950 * C9198) * C1356 -
             (C117 * C9199 + C50950 * C9202) * C50837) *
                C51039 +
            (C9047 * C1355 + C9048 * C1350 -
             (C117 * C9197 + C50950 * C9200) * C1356 -
             (C117 * C9201 + C50950 * C9203) * C50837) *
                C50770) *
               C8149) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 -
            (C117 * C296 + C50950 * C302) * C628 -
            (C117 * C303 + C50950 * C314) * C623 +
            (C117 * C630 + C50950 * C635) * C629 +
            (C117 * C636 + C50950 * C645) * C624) *
               C107 +
           (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
           (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
           (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
              C50924 * C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C107 +
           (C661 - (C660 + C659) + C662 - C683 - C684) * C108 +
           (C669 - (C668 + C667) + C670 - C685 - C686) * C109 +
           (C353 * C628 - (C174 * C622 + C175 * C627) + C354 * C623 -
            (C117 * C634 + C50950 * C643) * C629 -
            (C117 * C644 + C50950 * C649) * C624) *
               C110) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50924 * C112 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50924 * C113 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50924 * C114 -
          (((C117 * C138 + C50950 * C146) * C50821 +
            (C117 * C125 + C50950 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C51046 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C50792) *
              C1005 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C50792 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C51046) *
              C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C107 +
            (C1047 + C1048) * C108 + (C1049 + C1050) * C109 +
            (C1051 + C1052) * C110) *
               C50924 * C51046 -
           (((C117 * C1021 + C50950 * C1027) * C50821 +
             (C117 * C1012 + C50950 * C1022) * C118) *
                C110 +
            (C1052 + C1051) * C109 + (C1050 + C1049) * C108 +
            (C1048 + C1047) * C107) *
               C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51039 +
            (C178 + C179) * C50770) *
               C8147 +
           ((C2612 * C118 + C2613 * C50821) * C51039 +
            (C2440 + C2441) * C50770) *
               C8148 +
           ((C2936 * C118 + C2937 * C50821) * C51039 +
            (C8151 + C8152) * C50770) *
               C8149) *
              C112 -
          (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
           ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
           ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
              C113 +
          ((C188 * C51039 + C189 * C50770) * C8147 +
           (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
           ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
              C114 -
          ((((C117 * C644 + C50950 * C649) * C50821 +
             (C117 * C634 + C50950 * C643) * C118) *
                C50770 +
            (C8156 + C8155) * C51039) *
               C8149 +
           ((C2447 + C2446) * C50770 + C2449 * C51039) * C8148 +
           (C190 * C50770 + C191 * C51039) * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             (C117 * C3043 + C50950 * C3046) * C629 +
             (C117 * C3047 + C50950 * C3052) * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C51039 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C50770) *
               C8147 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C51039 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C50770) *
               C8148 +
           ((C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C51039 +
            (C2940 * C628 - (C678 * C622 + C677 * C627) + C2941 * C623 -
             (C117 * C3045 + C50950 * C3050) * C629 -
             (C117 * C3051 + C50950 * C3054) * C624) *
                C50770) *
               C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C51046 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C50792) *
              C1005 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C50792 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C51046) *
              C1006 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C51039 +
             (C1047 + C1048) * C50770) *
                C8147 +
            ((C3568 * C118 + C3569 * C50821) * C51039 +
             (C3402 + C3403) * C50770) *
                C8148 +
            (((C117 * C3551 + C50950 * C3554) * C118 +
              (C117 * C3555 + C50950 * C3560) * C50821) *
                 C51039 +
             (C9049 + C9050) * C50770) *
                C8149) *
               C51046 -
           ((((C117 * C3559 + C50950 * C3562) * C50821 +
              (C117 * C3553 + C50950 * C3558) * C118) *
                 C50770 +
             (C9050 + C9049) * C51039) *
                C8149 +
            ((C3405 + C3404) * C50770 + (C3403 + C3402) * C51039) * C8148 +
            ((C1050 + C1049) * C50770 + (C1048 + C1047) * C51039) * C8147) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 -
           (C117 * C296 + C50950 * C302) * C758 -
           (C117 * C303 + C50950 * C314) * C753 +
           (C117 * C630 + C50950 * C635) * C759 +
           (C117 * C636 + C50950 * C645) * C754 -
           (C117 * C761 + C50950 * C765) * C760 -
           (C117 * C766 + C50950 * C773) * C755) *
              C107 +
          (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 + C675 * C759 +
           C676 * C754 - (C117 * C762 + C50950 * C767) * C760 -
           (C117 * C768 + C50950 * C774) * C755) *
              C108 +
          (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 + C677 * C759 +
           C678 * C754 - (C117 * C763 + C50950 * C769) * C760 -
           (C117 * C770 + C50950 * C775) * C755) *
              C109 +
          (C172 * C757 + C173 * C752 - C351 * C758 - C352 * C753 + C679 * C759 +
           C680 * C754 - (C117 * C764 + C50950 * C771) * C760 -
           (C117 * C772 + C50950 * C776) * C755) *
              C110) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 -
            (C117 * C296 + C50950 * C302) * C295 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
              C50924 * C291 +
          ((C355 - (C322 + C321) + C356) * C107 +
           (C357 - (C328 + C327) + C358) * C108 +
           (C359 - (C334 + C333) + C360) * C109 +
           (C361 - (C341 + C342) + C362) * C110) *
              C50924 * C292 +
          (C365 * C107 + C366 * C108 + (C342 + C341 - C361 - C362) * C109 +
           (C176 * C294 + C177 * C51053 - (C117 * C301 + C50950 * C312) * C295 -
            (C117 * C313 + C50950 * C319) * C50837) *
               C110) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 -
            (C117 * C296 + C50950 * C302) * C295 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
              C50924 * C50787 * C1005 +
          (((C117 * C875 + C50950 * C883) * C295 -
            ((C117 * C480 + C50950 * C488) * C51053 +
             (C117 * C470 + C50950 * C481) * C294) +
            (C117 * C884 + C50950 * C899) * C50837) *
               C107 +
           ((C117 * C877 + C50950 * C887) * C295 -
            (C508 * C51053 + C507 * C294) +
            (C117 * C888 + C50950 * C901) * C50837) *
               C108 +
           ((C117 * C879 + C50950 * C891) * C295 -
            (C510 * C51053 + C509 * C294) +
            (C117 * C892 + C50950 * C903) * C50837) *
               C109 +
           ((C117 * C881 + C50950 * C895) * C295 -
            (C512 * C51053 + C511 * C294) +
            (C117 * C896 + C50950 * C905) * C50837) *
               C110) *
              C50924 * C50787 * C1006 +
          (((C117 * C1008 + C50950 * C1013) * C294 +
            (C117 * C1014 + C50950 * C1023) * C51053 -
            (C117 * C1150 + C50950 * C1154) * C295 -
            (C117 * C1155 + C50950 * C1162) * C50837) *
               C107 +
           (C1041 * C294 + C1042 * C51053 -
            (C117 * C1151 + C50950 * C1156) * C295 -
            (C117 * C1157 + C50950 * C1163) * C50837) *
               C108 +
           (C1043 * C294 + C1044 * C51053 -
            (C117 * C1152 + C50950 * C1158) * C295 -
            (C117 * C1159 + C50950 * C1164) * C50837) *
               C109 +
           (C1045 * C294 + C1046 * C51053 -
            (C117 * C1153 + C50950 * C1160) * C295 -
            (C117 * C1161 + C50950 * C1165) * C50837) *
               C110) *
              C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51039 +
            (C321 + C322 - C355 - C356) * C50770) *
               C8147 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51039 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C8148 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C51039 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C8149) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C51039 +
            (C357 - (C328 + C327) + C358) * C50770) *
               C8147 +
           ((C2602 - (C2601 + C2600) + C2603) * C51039 +
            (C2606 - (C2605 + C2604) + C2607) * C50770) *
               C8148 +
           ((C8305 - (C8304 + C8303) + C8306) * C51039 +
            (C8307 - (C8308 + C8309) + C8310) * C50770) *
               C8149) *
              C292 +
          ((C365 * C51039 + C366 * C50770) * C8147 +
           (C2616 * C51039 + (C2610 + C2609 - C2608 - C2611) * C50770) * C8148 +
           ((C8309 + C8308 - C8307 - C8310) * C51039 +
            (C679 * C294 + C680 * C51053 -
             (C117 * C764 + C50950 * C771) * C295 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C51039 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C50770) *
              C8147 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C51039 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C50770) *
              C8148 +
          ((C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
            C8729 * C759 + C8730 * C754 -
            (C117 * C8716 + C50950 * C8718) * C760 -
            (C117 * C8719 + C50950 * C8722) * C755) *
               C51039 +
           (C675 * C757 + C676 * C752 - C2938 * C758 - C2939 * C753 +
            C8615 * C759 + C8616 * C754 -
            (C117 * C8717 + C50950 * C8720) * C760 -
            (C117 * C8721 + C50950 * C8723) * C755) *
               C50770) *
              C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51039 +
            (C321 + C322 - C355 - C356) * C50770) *
               C8147 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51039 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C8148 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C51039 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C8149) *
              C50787 * C1005 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C51039 +
            (C1898 - (C1899 + C1900) + C1901) * C50770) *
               C8147 +
           ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C51039 +
            (C4541 - (C4542 + C4543) + C4544) * C50770) *
               C8148 +
           ((C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                C51039 +
            (C8895 * C295 - (C3241 * C51053 + C3240 * C294) + C8896 * C50837) *
                C50770) *
               C8149) *
              C50787 * C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C294 +
             (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
             C3569 * C50837) *
                C51039 +
            (C1041 * C294 + C1042 * C51053 - C3398 * C295 - C3399 * C50837) *
                C50770) *
               C8147 +
           ((C3568 * C294 + C3569 * C51053 - C9209 * C295 - C9210 * C50837) *
                C51039 +
            (C3398 * C294 + C3399 * C51053 - C9047 * C295 - C9048 * C50837) *
                C50770) *
               C8148 +
           ((C9209 * C294 + C9210 * C51053 -
             (C117 * C9196 + C50950 * C9198) * C295 -
             (C117 * C9199 + C50950 * C9202) * C50837) *
                C51039 +
            (C9047 * C294 + C9048 * C51053 -
             (C117 * C9197 + C50950 * C9200) * C295 -
             (C117 * C9201 + C50950 * C9203) * C50837) *
                C50770) *
               C8149) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 -
            (C117 * C296 + C50950 * C302) * C628 -
            (C117 * C303 + C50950 * C314) * C623 +
            (C117 * C630 + C50950 * C635) * C629 +
            (C117 * C636 + C50950 * C645) * C624) *
               C107 +
           (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
           (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
           (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
              C50924 * C50787 * C51055 +
          (((C117 * C875 + C50950 * C883) * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            (C117 * C884 + C50950 * C899) * C623 -
            (C117 * C876 + C50950 * C885) * C629 -
            (C117 * C886 + C50950 * C900) * C624) *
               C107 +
           ((C117 * C877 + C50950 * C887) * C628 - (C508 * C622 + C507 * C627) +
            (C117 * C888 + C50950 * C901) * C623 -
            (C117 * C878 + C50950 * C889) * C629 -
            (C117 * C890 + C50950 * C902) * C624) *
               C108 +
           ((C117 * C879 + C50950 * C891) * C628 - (C510 * C622 + C509 * C627) +
            (C117 * C892 + C50950 * C903) * C623 -
            (C117 * C880 + C50950 * C893) * C629 -
            (C117 * C894 + C50950 * C904) * C624) *
               C109 +
           ((C117 * C881 + C50950 * C895) * C628 - (C512 * C622 + C511 * C627) +
            (C117 * C896 + C50950 * C905) * C623 -
            (C117 * C882 + C50950 * C897) * C629 -
            (C117 * C898 + C50950 * C906) * C624) *
               C110) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C291 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C292 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50924 * C293) *
              C51055 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C292 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C291 -
           (((C117 * C482 + C50950 * C489) * C50821 +
             (C117 * C471 + C50950 * C483) * C118) *
                C110 +
            (C522 + C521) * C109 + C523 * C108 + C524 * C107) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50924 * C50787 * C1232 -
          (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
           ((C117 * C480 + C50950 * C488) * C50821 +
            (C117 * C470 + C50950 * C481) * C118) *
               C107) *
              C50924 * C50787 * C1233 +
          (((C117 * C1008 + C50950 * C1013) * C118 +
            (C117 * C1014 + C50950 * C1023) * C50821) *
               C107 +
           (C1047 + C1048) * C108 + (C1049 + C1050) * C109 +
           (C1051 + C1052) * C110) *
              C50924 * C50787 * C1234 -
          (((C117 * C1240 + C50950 * C1248) * C50821 +
            (C117 * C1236 + C50950 * C1241) * C118) *
               C110 +
           ((C117 * C1242 + C50950 * C1249) * C50821 +
            (C117 * C1237 + C50950 * C1243) * C118) *
               C109 +
           ((C117 * C1244 + C50950 * C1250) * C50821 +
            (C117 * C1238 + C50950 * C1245) * C118) *
               C108 +
           ((C117 * C1246 + C50950 * C1251) * C50821 +
            (C117 * C1239 + C50950 * C1247) * C118) *
               C107) *
              C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C291 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C292 +
           ((C188 * C51039 + C189 * C50770) * C8147 +
            (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
            ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
               C293) *
              C51055 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C292 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C291 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C51039) *
                C8149 +
            ((C2768 + C2767) * C50770 + C2769 * C51039) * C8148 +
            (C523 * C50770 + C524 * C51039) * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C51039 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C50770) *
               C8147 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C51039 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C50770) *
               C8148 +
           ((C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
             (C117 * C8876 + C50950 * C8878) * C629 -
             (C117 * C8879 + C50950 * C8882) * C624) *
                C51039 +
            (C8895 * C628 - (C3241 * C622 + C3240 * C627) + C8896 * C623 -
             (C117 * C8877 + C50950 * C8880) * C629 -
             (C117 * C8881 + C50950 * C8883) * C624) *
                C50770) *
               C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51039 +
            (C178 + C179) * C50770) *
               C8147 +
           ((C2612 * C118 + C2613 * C50821) * C51039 +
            (C2440 + C2441) * C50770) *
               C8148 +
           ((C2936 * C118 + C2937 * C50821) * C51039 +
            (C8151 + C8152) * C50770) *
               C8149) *
              C50787 * C1232 -
          (((C8458 + C8457) * C50770 +
            (C3239 * C50821 + C3238 * C118) * C51039) *
               C8149 +
           ((C2764 + C2763) * C50770 +
            (C3237 * C50821 + C3236 * C118) * C51039) *
               C8148 +
           ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                      (C117 * C470 + C50950 * C481) * C118) *
                                         C51039) *
               C8147) *
              C50787 * C1233 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C51039 +
            (C1047 + C1048) * C50770) *
               C8147 +
           ((C3568 * C118 + C3569 * C50821) * C51039 +
            (C3402 + C3403) * C50770) *
               C8148 +
           ((C9209 * C118 + C9210 * C50821) * C51039 +
            (C9049 + C9050) * C50770) *
               C8149) *
              C50787 * C1234 -
          ((((C117 * C9310 + C50950 * C9314) * C50821 +
             (C117 * C9308 + C50950 * C9311) * C118) *
                C50770 +
            ((C117 * C9312 + C50950 * C9315) * C50821 +
             (C117 * C9309 + C50950 * C9313) * C118) *
                C51039) *
               C8149 +
           (((C117 * C3672 + C50950 * C3677) * C50821 +
             (C117 * C3668 + C50950 * C3673) * C118) *
                C50770 +
            ((C117 * C3674 + C50950 * C3678) * C50821 +
             (C117 * C3669 + C50950 * C3675) * C118) *
                C51039) *
               C8148 +
           (((C117 * C1244 + C50950 * C1250) * C50821 +
             (C117 * C1238 + C50950 * C1245) * C118) *
                C50770 +
            ((C117 * C1246 + C50950 * C1251) * C50821 +
             (C117 * C1239 + C50950 * C1247) * C118) *
                C51039) *
               C8147) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C51098 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C51084 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50924 * C1354) *
              C1765 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C51084 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C51098 -
           (((C117 * C482 + C50950 * C489) * C50821 +
             (C117 * C471 + C50950 * C483) * C118) *
                C110 +
            (C522 + C521) * C109 + C523 * C108 + C524 * C107) *
               C50924 * C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C51098 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C51084 +
           ((C188 * C51039 + C189 * C50770) * C8147 +
            (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
            ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
               C1354) *
              C1765 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C51084 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C51098 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C51039) *
                C8149 +
            ((C2768 + C2767) * C50770 + C2769 * C51039) * C8148 +
            (C523 * C50770 + C524 * C51039) * C8147) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 -
             (C117 * C296 + C50950 * C302) * C295 -
             (C117 * C303 + C50950 * C314) * C50837) *
                C107 +
            (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
               C50924 * C1480 +
           ((C355 - (C322 + C321) + C356) * C107 +
            (C357 - (C328 + C327) + C358) * C108 +
            (C359 - (C334 + C333) + C360) * C109 +
            (C361 - (C341 + C342) + C362) * C110) *
               C50924 * C50792) *
              C1765 +
          ((((C117 * C875 + C50950 * C883) * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             (C117 * C884 + C50950 * C899) * C50837) *
                C107 +
            (C1898 - (C1899 + C1900) + C1901) * C108 +
            (C1902 - (C1903 + C1904) + C1905) * C109 +
            (C1906 - (C1907 + C1908) + C1909) * C110) *
               C50924 * C1480 +
           ((C1900 + C1899 - C1898 - C1901) * C107 +
            (C1904 + C1903 - C1902 - C1905) * C108 +
            (C1908 + C1907 - C1906 - C1909) * C109 +
            (C513 * C294 + C514 * C51053 -
             (C117 * C1633 + C50950 * C1634) * C295 -
             (C117 * C1635 + C50950 * C1636) * C50837) *
                C110) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C294 +
              (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
              C2613 * C50837) *
                 C51039 +
             (C321 + C322 - C355 - C356) * C50770) *
                C8147 +
            ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                 C51039 +
             (C2600 + C2601 - C2602 - C2603) * C50770) *
                C8148 +
            ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                 C51039 +
             (C8303 + C8304 - C8305 - C8306) * C50770) *
                C8149) *
               C1480 +
           (((C355 - (C322 + C321) + C356) * C51039 +
             (C357 - (C328 + C327) + C358) * C50770) *
                C8147 +
            ((C2602 - (C2601 + C2600) + C2603) * C51039 +
             (C2606 - (C2605 + C2604) + C2607) * C50770) *
                C8148 +
            ((C8305 - (C8304 + C8303) + C8306) * C51039 +
             (C8307 - (C8308 + C8309) + C8310) * C50770) *
                C8149) *
               C50792) *
              C1765 +
          ((((C3236 * C295 -
              ((C117 * C480 + C50950 * C488) * C51053 +
               (C117 * C470 + C50950 * C481) * C294) +
              C3237 * C50837) *
                 C51039 +
             (C1898 - (C1899 + C1900) + C1901) * C50770) *
                C8147 +
            ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                 C51039 +
             (C4541 - (C4542 + C4543) + C4544) * C50770) *
                C8148 +
            ((C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                 C51039 +
             (C10161 - (C10162 + C10163) + C10164) * C50770) *
                C8149) *
               C1480 +
           (((C1900 + C1899 - C1898 - C1901) * C51039 +
             (C1904 + C1903 - C1902 - C1905) * C50770) *
                C8147 +
            ((C4543 + C4542 - C4541 - C4544) * C51039 +
             (C4547 + C4546 - C4545 - C4548) * C50770) *
                C8148 +
            ((C10163 + C10162 - C10161 - C10164) * C51039 +
             (C3242 * C294 + C3243 * C51053 -
              (C117 * C3209 + C50950 * C3214) * C295 -
              (C117 * C3215 + C50950 * C3218) * C50837) *
                 C50770) *
                C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C1480 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C50792) *
              C51100 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C50792 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C1480) *
              C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C107 +
            (C1047 + C1048) * C108 + (C1049 + C1050) * C109 +
            (C1051 + C1052) * C110) *
               C50924 * C1480 -
           (((C117 * C1021 + C50950 * C1027) * C50821 +
             (C117 * C1012 + C50950 * C1022) * C118) *
                C110 +
            (C1052 + C1051) * C109 + (C1050 + C1049) * C108 +
            (C1048 + C1047) * C107) *
               C50924 * C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C1480 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C50792) *
              C51100 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C50792 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C1480) *
              C51090 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C51039 +
             (C1047 + C1048) * C50770) *
                C8147 +
            ((C3568 * C118 + C3569 * C50821) * C51039 +
             (C3402 + C3403) * C50770) *
                C8148 +
            ((C9209 * C118 + C9210 * C50821) * C51039 +
             (C9049 + C9050) * C50770) *
                C8149) *
               C1480 -
           ((((C117 * C3559 + C50950 * C3562) * C50821 +
              (C117 * C3553 + C50950 * C3558) * C118) *
                 C50770 +
             (C9050 + C9049) * C51039) *
                C8149 +
            ((C3405 + C3404) * C50770 + (C3403 + C3402) * C51039) * C8148 +
            ((C1050 + C1049) * C50770 + (C1048 + C1047) * C51039) * C8147) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50924 * C112 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50924 * C113 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50924 * C114 -
          (((C117 * C138 + C50950 * C146) * C50821 +
            (C117 * C125 + C50950 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 -
            (C117 * C296 + C50950 * C302) * C628 -
            (C117 * C303 + C50950 * C314) * C623 +
            (C117 * C630 + C50950 * C635) * C629 +
            (C117 * C636 + C50950 * C645) * C624) *
               C107 +
           (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
           (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
           (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
              C50924 * C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C107 +
           (C661 - (C660 + C659) + C662 - C683 - C684) * C108 +
           (C669 - (C668 + C667) + C670 - C685 - C686) * C109 +
           (C353 * C628 - (C174 * C622 + C175 * C627) + C354 * C623 -
            (C117 * C634 + C50950 * C643) * C629 -
            (C117 * C644 + C50950 * C649) * C624) *
               C110) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C51039 +
            (C178 + C179) * C50770) *
               C8147 +
           ((C2612 * C118 + C2613 * C50821) * C51039 +
            (C2440 + C2441) * C50770) *
               C8148 +
           ((C2936 * C118 + C2937 * C50821) * C51039 +
            (C8151 + C8152) * C50770) *
               C8149) *
              C112 -
          (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
           ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
           ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
              C113 +
          ((C188 * C51039 + C189 * C50770) * C8147 +
           (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
           ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
              C114 -
          ((((C117 * C644 + C50950 * C649) * C50821 +
             (C117 * C634 + C50950 * C643) * C118) *
                C50770 +
            (C8156 + C8155) * C51039) *
               C8149 +
           ((C2447 + C2446) * C50770 + C2449 * C51039) * C8148 +
           (C190 * C50770 + C191 * C51039) * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             (C117 * C3043 + C50950 * C3046) * C629 +
             (C117 * C3047 + C50950 * C3052) * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C51039 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C50770) *
               C8147 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C51039 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C50770) *
               C8148 +
           ((C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C51039 +
            (C2940 * C628 - (C678 * C622 + C677 * C627) + C2941 * C623 -
             (C117 * C3045 + C50950 * C3050) * C629 -
             (C117 * C3051 + C50950 * C3054) * C624) *
                C50770) *
               C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 -
            (C117 * C296 + C50950 * C302) * C295 -
            (C117 * C303 + C50950 * C314) * C50837) *
               C107 +
           (C321 + C322 - C355 - C356) * C108 + C365 * C109 + C366 * C110) *
              C50924 * C291 +
          ((C355 - (C322 + C321) + C356) * C107 +
           (C357 - (C328 + C327) + C358) * C108 +
           (C359 - (C334 + C333) + C360) * C109 +
           (C361 - (C341 + C342) + C362) * C110) *
              C50924 * C292 +
          (C365 * C107 + C366 * C108 + (C342 + C341 - C361 - C362) * C109 +
           (C176 * C294 + C177 * C51053 - (C117 * C301 + C50950 * C312) * C295 -
            (C117 * C313 + C50950 * C319) * C50837) *
               C110) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 -
           (C117 * C296 + C50950 * C302) * C758 -
           (C117 * C303 + C50950 * C314) * C753 +
           (C117 * C630 + C50950 * C635) * C759 +
           (C117 * C636 + C50950 * C645) * C754 -
           (C117 * C761 + C50950 * C765) * C760 -
           (C117 * C766 + C50950 * C773) * C755) *
              C107 +
          (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 + C675 * C759 +
           C676 * C754 - (C117 * C762 + C50950 * C767) * C760 -
           (C117 * C768 + C50950 * C774) * C755) *
              C108 +
          (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 + C677 * C759 +
           C678 * C754 - (C117 * C763 + C50950 * C769) * C760 -
           (C117 * C770 + C50950 * C775) * C755) *
              C109 +
          (C172 * C757 + C173 * C752 - C351 * C758 - C352 * C753 + C679 * C759 +
           C680 * C754 - (C117 * C764 + C50950 * C771) * C760 -
           (C117 * C772 + C50950 * C776) * C755) *
              C110) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C51039 +
            (C321 + C322 - C355 - C356) * C50770) *
               C8147 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C51039 +
            (C2600 + C2601 - C2602 - C2603) * C50770) *
               C8148 +
           ((C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C51039 +
            (C8303 + C8304 - C8305 - C8306) * C50770) *
               C8149) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C51039 +
            (C357 - (C328 + C327) + C358) * C50770) *
               C8147 +
           ((C2602 - (C2601 + C2600) + C2603) * C51039 +
            (C2606 - (C2605 + C2604) + C2607) * C50770) *
               C8148 +
           ((C8305 - (C8304 + C8303) + C8306) * C51039 +
            (C8307 - (C8308 + C8309) + C8310) * C50770) *
               C8149) *
              C292 +
          ((C365 * C51039 + C366 * C50770) * C8147 +
           (C2616 * C51039 + (C2610 + C2609 - C2608 - C2611) * C50770) * C8148 +
           ((C8309 + C8308 - C8307 - C8310) * C51039 +
            (C679 * C294 + C680 * C51053 -
             (C117 * C764 + C50950 * C771) * C295 -
             (C117 * C772 + C50950 * C776) * C50837) *
                C50770) *
               C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C51039 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C50770) *
              C8147 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
               C51039 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 - C8615 * C760 - C8616 * C755) *
               C50770) *
              C8148 +
          ((C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
            C8729 * C759 + C8730 * C754 -
            (C117 * C8716 + C50950 * C8718) * C760 -
            (C117 * C8719 + C50950 * C8722) * C755) *
               C51039 +
           (C675 * C757 + C676 * C752 - C2938 * C758 - C2939 * C753 +
            C8615 * C759 + C8616 * C754 -
            (C117 * C8717 + C50950 * C8720) * C760 -
            (C117 * C8721 + C50950 * C8723) * C755) *
               C50770) *
              C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50924 * C291 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50924 * C292 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50924 * C293) *
              C51055 +
          (((C515 + C516) * C107 + (C517 + C518) * C108 + (C519 + C520) * C109 +
            (C521 + C522) * C110) *
               C50924 * C292 -
           (C523 * C110 + C524 * C109 + (C516 + C515) * C108 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C107) *
               C50924 * C291 -
           (((C117 * C482 + C50950 * C489) * C50821 +
             (C117 * C471 + C50950 * C483) * C118) *
                C110 +
            (C522 + C521) * C109 + C523 * C108 + C524 * C107) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 -
            (C117 * C296 + C50950 * C302) * C628 -
            (C117 * C303 + C50950 * C314) * C623 +
            (C117 * C630 + C50950 * C635) * C629 +
            (C117 * C636 + C50950 * C645) * C624) *
               C107 +
           (C651 + C652 - C653 - C654 + C681 + C682) * C108 +
           (C659 + C660 - C661 - C662 + C683 + C684) * C109 +
           (C667 + C668 - C669 - C670 + C685 + C686) * C110) *
              C50924 * C50787 * C51055 +
          (((C117 * C875 + C50950 * C883) * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            (C117 * C884 + C50950 * C899) * C623 -
            (C117 * C876 + C50950 * C885) * C629 -
            (C117 * C886 + C50950 * C900) * C624) *
               C107 +
           ((C117 * C877 + C50950 * C887) * C628 - (C508 * C622 + C507 * C627) +
            (C117 * C888 + C50950 * C901) * C623 -
            (C117 * C878 + C50950 * C889) * C629 -
            (C117 * C890 + C50950 * C902) * C624) *
               C108 +
           ((C117 * C879 + C50950 * C891) * C628 - (C510 * C622 + C509 * C627) +
            (C117 * C892 + C50950 * C903) * C623 -
            (C117 * C880 + C50950 * C893) * C629 -
            (C117 * C894 + C50950 * C904) * C624) *
               C109 +
           ((C117 * C881 + C50950 * C895) * C628 - (C512 * C622 + C511 * C627) +
            (C117 * C896 + C50950 * C905) * C623 -
            (C117 * C882 + C50950 * C897) * C629 -
            (C117 * C898 + C50950 * C906) * C624) *
               C110) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C51039 +
             (C178 + C179) * C50770) *
                C8147 +
            ((C2612 * C118 + C2613 * C50821) * C51039 +
             (C2440 + C2441) * C50770) *
                C8148 +
            ((C2936 * C118 + C2937 * C50821) * C51039 +
             (C8151 + C8152) * C50770) *
                C8149) *
               C291 -
           (((C8153 + C8154) * C50770 + (C8152 + C8151) * C51039) * C8149 +
            ((C2443 + C2442) * C50770 + (C2441 + C2440) * C51039) * C8148 +
            ((C181 + C180) * C50770 + (C179 + C178) * C51039) * C8147) *
               C292 +
           ((C188 * C51039 + C189 * C50770) * C8147 +
            (C2448 * C51039 + (C2445 + C2444) * C50770) * C8148 +
            ((C8154 + C8153) * C51039 + (C8155 + C8156) * C50770) * C8149) *
               C293) *
              C51055 +
          ((((C515 + C516) * C51039 + (C517 + C518) * C50770) * C8147 +
            ((C2763 + C2764) * C51039 + (C2765 + C2766) * C50770) * C8148 +
            ((C8457 + C8458) * C51039 + (C8459 + C8460) * C50770) * C8149) *
               C292 -
           (((C8458 + C8457) * C50770 +
             (C3239 * C50821 + C3238 * C118) * C51039) *
                C8149 +
            ((C2764 + C2763) * C50770 +
             (C3237 * C50821 + C3236 * C118) * C51039) *
                C8148 +
            ((C516 + C515) * C50770 + ((C117 * C480 + C50950 * C488) * C50821 +
                                       (C117 * C470 + C50950 * C481) * C118) *
                                          C51039) *
                C8147) *
               C291 -
           ((((C117 * C898 + C50950 * C906) * C50821 +
              (C117 * C882 + C50950 * C897) * C118) *
                 C50770 +
             (C8460 + C8459) * C51039) *
                C8149 +
            ((C2768 + C2767) * C50770 + C2769 * C51039) * C8148 +
            (C523 * C50770 + C524 * C51039) * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C51039 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C50770) *
               C8147 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C51039 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C50770) *
               C8148 +
           ((C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
             C8729 * C629 + C8730 * C624) *
                C51039 +
            (C8607 + C8608 - C8609 - C8610 + C8617 + C8618) * C50770) *
               C8149) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C51039 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C50770) *
               C8147 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             C8893 * C629 - C8894 * C624) *
                C51039 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             C8895 * C629 - C8896 * C624) *
                C50770) *
               C8148 +
           ((C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
             (C117 * C8876 + C50950 * C8878) * C629 -
             (C117 * C8879 + C50950 * C8882) * C624) *
                C51039 +
            (C8895 * C628 - (C3241 * C622 + C3240 * C627) + C8896 * C623 -
             (C117 * C8877 + C50950 * C8880) * C629 -
             (C117 * C8881 + C50950 * C8883) * C624) *
                C50770) *
               C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C2434 +
            (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
               C51067 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C2434 +
            (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
               C50938) *
              C51098 +
          (((C1360 - (C1359 + C1358) + C1361) * C2434 +
            (C1364 - (C1363 + C1362) + C1365) * C2435 +
            (C1368 - (C1367 + C1366) + C1369) * C2436) *
               C51067 +
           ((C3828 - (C3827 + C3826) + C3829) * C2434 +
            (C3832 - (C3831 + C3830) + C3833) * C2435 +
            (C3834 - (C3835 + C3836) + C3837) * C2436) *
               C50938) *
              C51084 +
          ((C1378 * C2434 + C1379 * C2435 +
            (C1372 + C1371 - C1370 - C1373) * C2436) *
               C51067 +
           (C3840 * C2434 + (C3836 + C3835 - C3834 - C3837) * C2435 +
            (C353 * C1355 + C354 * C1350 -
             (C117 * C634 + C50950 * C643) * C1356 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C2436) *
               C50938) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
               C50765 * C10866) *
              C51098 +
          ((C1360 - (C1359 + C1358) + C1361) * C50765 * C10863 +
           (C3828 - (C3827 + C3826) + C3829) * C50765 * C10864 +
           (C9465 - (C9464 + C9463) + C9466) * C50765 * C10865 +
           (C8615 * C1356 - (C2939 * C1350 + C2938 * C1355) + C8616 * C50837) *
               C50765 * C10866) *
              C51084 +
          (C1378 * C50765 * C10863 + C3840 * C50765 * C10864 +
           (C9469 + C9468 - C9467 - C9470) * C50765 * C10865 +
           (C2940 * C1355 + C2941 * C1350 -
            (C117 * C3045 + C50950 * C3050) * C1356 -
            (C117 * C3051 + C50950 * C3054) * C50837) *
               C50765 * C10866) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C2434 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C2435 +
            (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C2436) *
               C51067 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C2434 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C2435 +
            (C3993 + C3994 - C3995 - C3996 + C3997 + C3998) * C2436) *
               C50938) *
              C1480 +
          (((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C2434 +
            (C1494 - (C1493 + C1492) + C1495 - C1496 - C1497) * C2435 +
            (C1500 - (C1499 + C1498) + C1501 - C1502 - C1503) * C2436) *
               C51067 +
           ((C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C2434 +
            (C3995 - (C3994 + C3993) + C3996 - C3997 - C3998) * C2435 +
            (C679 * C1483 - (C352 * C51099 + C351 * C1482) + C680 * C51087 -
             (C117 * C764 + C50950 * C771) * C1484 -
             (C117 * C772 + C50950 * C776) * C1479) *
                C2436) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1482 +
            (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
            C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
               C50765 * C10863 +
           (C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
            C3060 * C1484 + C3061 * C1479) *
               C50765 * C10864 +
           (C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
            C8729 * C1484 + C8730 * C1479) *
               C50765 * C10865 +
           (C3060 * C1482 + C3061 * C51099 - C8729 * C1483 - C8730 * C51087 +
            C11236 * C1484 + C11237 * C1479) *
               C50765 * C10866) *
              C1480 +
          ((C1488 - (C1487 + C1486) + C1489 - C1490 - C1491) * C50765 * C10863 +
           (C3989 - (C3988 + C3987) + C3990 - C3991 - C3992) * C50765 * C10864 +
           (C9619 - (C9618 + C9617) + C9620 - C9621 - C9622) * C50765 * C10865 +
           (C8615 * C1483 - (C2939 * C51099 + C2938 * C1482) + C8616 * C51087 -
            (C117 * C8717 + C50950 * C8720) * C1484 -
            (C117 * C8721 + C50950 * C8723) * C1479) *
               C50765 * C10866) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C2434 +
             (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
                C51067 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C2434 +
             (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
                C50938) *
               C1480 +
           (((C1360 - (C1359 + C1358) + C1361) * C2434 +
             (C1364 - (C1363 + C1362) + C1365) * C2435 +
             (C1368 - (C1367 + C1366) + C1369) * C2436) *
                C51067 +
            ((C3828 - (C3827 + C3826) + C3829) * C2434 +
             (C3832 - (C3831 + C3830) + C3833) * C2435 +
             (C3834 - (C3835 + C3836) + C3837) * C2436) *
                C50938) *
               C50792) *
              C51055 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C2434 +
             (C1662 - (C1640 + C1641) + C1663) * C2435 +
             (C1664 - (C1646 + C1647) + C1665) * C2436) *
                C51067 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C2434 +
             (C4193 - (C4194 + C4195) + C4196) * C2435 +
             (C4197 - (C4198 + C4199) + C4200) * C2436) *
                C50938) *
               C1480 +
           (((C1641 + C1640 - C1662 - C1663) * C2434 +
             (C1647 + C1646 - C1664 - C1665) * C2435 +
             (C1653 + C1652 - C1666 - C1667) * C2436) *
                C51067 +
            ((C4195 + C4194 - C4193 - C4196) * C2434 +
             (C4199 + C4198 - C4197 - C4200) * C2435 +
             (C1660 * C1355 + C1661 * C1350 -
              (C117 * C882 + C50950 * C897) * C1356 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C2436) *
                C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C50765 * C10863 +
            (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C50765 * C10864 +
            (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C50765 * C10865 +
            (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C1360 - (C1359 + C1358) + C1361) * C50765 * C10863 +
            (C3828 - (C3827 + C3826) + C3829) * C50765 * C10864 +
            (C9465 - (C9464 + C9463) + C9466) * C50765 * C10865 +
            (C8615 * C1356 - (C2939 * C1350 + C2938 * C1355) + C8616 * C50837) *
                C50765 * C10866) *
               C50792) *
              C51055 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C50765 * C10863 +
            (C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C50765 * C10864 +
            (C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C50765 * C10865 +
            (C11344 * C1356 - (C8894 * C1350 + C8893 * C1355) +
             C11345 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C1641 + C1640 - C1662 - C1663) * C50765 * C10863 +
            (C4195 + C4194 - C4193 - C4196) * C50765 * C10864 +
            (C9819 + C9818 - C9817 - C9820) * C50765 * C10865 +
            (C8895 * C1355 + C8896 * C1350 -
             (C117 * C8877 + C50950 * C8880) * C1356 -
             (C117 * C8881 + C50950 * C8883) * C50837) *
                C50765 * C10866) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C1355 +
              (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
              C2613 * C50837) *
                 C2434 +
             (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
                C51067 +
            ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                 C2434 +
             (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
                C50938) *
               C51046 +
           (((C1360 - (C1359 + C1358) + C1361) * C2434 +
             (C1364 - (C1363 + C1362) + C1365) * C2435 +
             (C1368 - (C1367 + C1366) + C1369) * C2436) *
                C51067 +
            ((C3828 - (C3827 + C3826) + C3829) * C2434 +
             (C3832 - (C3831 + C3830) + C3833) * C2435 +
             (C3834 - (C3835 + C3836) + C3837) * C2436) *
                C50938) *
               C50792) *
              C1765 +
          ((((C3236 * C1356 -
              ((C117 * C480 + C50950 * C488) * C1350 +
               (C117 * C470 + C50950 * C481) * C1355) +
              C3237 * C50837) *
                 C2434 +
             (C1662 - (C1640 + C1641) + C1663) * C2435 +
             (C1664 - (C1646 + C1647) + C1665) * C2436) *
                C51067 +
            ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) +
              C3239 * C50837) *
                 C2434 +
             (C4193 - (C4194 + C4195) + C4196) * C2435 +
             (C4197 - (C4198 + C4199) + C4200) * C2436) *
                C50938) *
               C51046 +
           (((C1641 + C1640 - C1662 - C1663) * C2434 +
             (C1647 + C1646 - C1664 - C1665) * C2435 +
             (C1653 + C1652 - C1666 - C1667) * C2436) *
                C51067 +
            ((C4195 + C4194 - C4193 - C4196) * C2434 +
             (C4199 + C4198 - C4197 - C4200) * C2435 +
             (C1660 * C1355 + C1661 * C1350 -
              (C117 * C882 + C50950 * C897) * C1356 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C2436) *
                C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C50765 * C10863 +
            (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C50765 * C10864 +
            (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
                C50765 * C10865 +
            (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
                C50765 * C10866) *
               C51046 +
           ((C1360 - (C1359 + C1358) + C1361) * C50765 * C10863 +
            (C3828 - (C3827 + C3826) + C3829) * C50765 * C10864 +
            (C9465 - (C9464 + C9463) + C9466) * C50765 * C10865 +
            (C8615 * C1356 - (C2939 * C1350 + C2938 * C1355) + C8616 * C50837) *
                C50765 * C10866) *
               C50792) *
              C1765 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C50765 * C10863 +
            (C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C50765 * C10864 +
            (C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
                C50765 * C10865 +
            (C11344 * C1356 - (C8894 * C1350 + C8893 * C1355) +
             C11345 * C50837) *
                C50765 * C10866) *
               C51046 +
           ((C1641 + C1640 - C1662 - C1663) * C50765 * C10863 +
            (C4195 + C4194 - C4193 - C4196) * C50765 * C10864 +
            (C9819 + C9818 - C9817 - C9820) * C50765 * C10865 +
            (C8895 * C1355 + C8896 * C1350 -
             (C117 * C8877 + C50950 * C8880) * C1356 -
             (C117 * C8881 + C50950 * C8883) * C50837) *
                C50765 * C10866) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1482 +
             (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
             C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
                C2434 +
            (C1486 + C1487 - C1488 - C1489 + C1490 + C1491) * C2435 +
            (C1492 + C1493 - C1494 - C1495 + C1496 + C1497) * C2436) *
               C51067 +
           ((C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
             C3060 * C1484 + C3061 * C1479) *
                C2434 +
            (C3987 + C3988 - C3989 - C3990 + C3991 + C3992) * C2435 +
            (C3993 + C3994 - C3995 - C3996 + C3997 + C3998) * C2436) *
               C50938) *
              C50787 * C1765 +
          (((C3236 * C1483 -
             ((C117 * C480 + C50950 * C488) * C51099 +
              (C117 * C470 + C50950 * C481) * C1482) +
             C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
                C2434 +
            (C1656 * C1483 - (C508 * C51099 + C507 * C1482) + C1657 * C51087 -
             C3240 * C1484 - C3241 * C1479) *
                C2435 +
            (C1658 * C1483 - (C510 * C51099 + C509 * C1482) + C1659 * C51087 -
             C3242 * C1484 - C3243 * C1479) *
                C2436) *
               C51067 +
           ((C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) + C3239 * C51087 -
             (C117 * C3207 + C50950 * C3210) * C1484 -
             (C117 * C3211 + C50950 * C3216) * C1479) *
                C2434 +
            (C3240 * C1483 - (C1657 * C51099 + C1656 * C1482) + C3241 * C51087 -
             (C117 * C3208 + C50950 * C3212) * C1484 -
             (C117 * C3213 + C50950 * C3217) * C1479) *
                C2435 +
            (C3242 * C1483 - (C1659 * C51099 + C1658 * C1482) + C3243 * C51087 -
             (C117 * C3209 + C50950 * C3214) * C1484 -
             (C117 * C3215 + C50950 * C3218) * C1479) *
                C2436) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1482 +
            (C117 * C127 + C50950 * C140) * C51099 - C2612 * C1483 -
            C2613 * C51087 + C2936 * C1484 + C2937 * C1479) *
               C50765 * C10863 +
           (C2612 * C1482 + C2613 * C51099 - C2936 * C1483 - C2937 * C51087 +
            C3060 * C1484 + C3061 * C1479) *
               C50765 * C10864 +
           (C2936 * C1482 + C2937 * C51099 - C3060 * C1483 - C3061 * C51087 +
            C8729 * C1484 + C8730 * C1479) *
               C50765 * C10865 +
           (C3060 * C1482 + C3061 * C51099 - C8729 * C1483 - C8730 * C51087 +
            C11236 * C1484 + C11237 * C1479) *
               C50765 * C10866) *
              C50787 * C1765 +
          ((C3236 * C1483 -
            ((C117 * C480 + C50950 * C488) * C51099 +
             (C117 * C470 + C50950 * C481) * C1482) +
            C3237 * C51087 - C3238 * C1484 - C3239 * C1479) *
               C50765 * C10863 +
           (C3238 * C1483 - (C3237 * C51099 + C3236 * C1482) + C3239 * C51087 -
            C8893 * C1484 - C8894 * C1479) *
               C50765 * C10864 +
           (C8893 * C1483 - (C3239 * C51099 + C3238 * C1482) + C8894 * C51087 -
            C11344 * C1484 - C11345 * C1479) *
               C50765 * C10865 +
           (C11344 * C1483 - (C8894 * C51099 + C8893 * C1482) +
            C11345 * C51087 - (C117 * C11335 + C50950 * C11336) * C1484 -
            (C117 * C11337 + C50950 * C11338) * C1479) *
               C50765 * C10866) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C1355 +
             (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
             C2613 * C50837) *
                C2434 +
            (C1358 + C1359 - C1360 - C1361) * C2435 + C1378 * C2436) *
               C51067 +
           ((C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
                C2434 +
            (C3826 + C3827 - C3828 - C3829) * C2435 + C3840 * C2436) *
               C50938) *
              C50787 * C51100 +
          (((C3236 * C1356 -
             ((C117 * C480 + C50950 * C488) * C1350 +
              (C117 * C470 + C50950 * C481) * C1355) +
             C3237 * C50837) *
                C2434 +
            (C1662 - (C1640 + C1641) + C1663) * C2435 +
            (C1664 - (C1646 + C1647) + C1665) * C2436) *
               C51067 +
           ((C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
                C2434 +
            (C4193 - (C4194 + C4195) + C4196) * C2435 +
            (C4197 - (C4198 + C4199) + C4200) * C2436) *
               C50938) *
              C50787 * C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C1355 +
             (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
             C3569 * C50837) *
                C2434 +
            (C1041 * C1355 + C1042 * C1350 - C3398 * C1356 - C3399 * C50837) *
                C2435 +
            (C1043 * C1355 + C1044 * C1350 - C3400 * C1356 - C3401 * C50837) *
                C2436) *
               C51067 +
           ((C3568 * C1355 + C3569 * C1350 -
             (C117 * C3551 + C50950 * C3554) * C1356 -
             (C117 * C3555 + C50950 * C3560) * C50837) *
                C2434 +
            (C3398 * C1355 + C3399 * C1350 -
             (C117 * C3552 + C50950 * C3556) * C1356 -
             (C117 * C3557 + C50950 * C3561) * C50837) *
                C2435 +
            (C3400 * C1355 + C3401 * C1350 -
             (C117 * C3553 + C50950 * C3558) * C1356 -
             (C117 * C3559 + C50950 * C3562) * C50837) *
                C2436) *
               C50938) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C1355 +
            (C117 * C127 + C50950 * C140) * C1350 - C2612 * C1356 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C1355 + C2613 * C1350 - C2936 * C1356 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C1355 + C2937 * C1350 - C3060 * C1356 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C1355 + C3061 * C1350 - C8729 * C1356 - C8730 * C50837) *
               C50765 * C10866) *
              C50787 * C51100 +
          ((C3236 * C1356 -
            ((C117 * C480 + C50950 * C488) * C1350 +
             (C117 * C470 + C50950 * C481) * C1355) +
            C3237 * C50837) *
               C50765 * C10863 +
           (C3238 * C1356 - (C3237 * C1350 + C3236 * C1355) + C3239 * C50837) *
               C50765 * C10864 +
           (C8893 * C1356 - (C3239 * C1350 + C3238 * C1355) + C8894 * C50837) *
               C50765 * C10865 +
           (C11344 * C1356 - (C8894 * C1350 + C8893 * C1355) +
            C11345 * C50837) *
               C50765 * C10866) *
              C50787 * C51090 +
          (((C117 * C1008 + C50950 * C1013) * C1355 +
            (C117 * C1014 + C50950 * C1023) * C1350 - C3568 * C1356 -
            C3569 * C50837) *
               C50765 * C10863 +
           (C3568 * C1355 + C3569 * C1350 - C9209 * C1356 - C9210 * C50837) *
               C50765 * C10864 +
           (C9209 * C1355 + C9210 * C1350 - C11550 * C1356 - C11551 * C50837) *
               C50765 * C10865 +
           (C11550 * C1355 + C11551 * C1350 -
            (C117 * C11541 + C50950 * C11542) * C1356 -
            (C117 * C11543 + C50950 * C11544) * C50837) *
               C50765 * C10866) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C2434 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
               C51067 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             (C117 * C761 + C50950 * C765) * C629 +
             (C117 * C766 + C50950 * C773) * C624) *
                C2434 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
               C50938) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C2434 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C2435 +
            (C669 - (C668 + C667) + C670 - C685 - C686) * C2436) *
               C51067 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C2434 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C2435 +
            (C679 * C628 - (C352 * C622 + C351 * C627) + C680 * C623 -
             (C117 * C764 + C50950 * C771) * C629 -
             (C117 * C772 + C50950 * C776) * C624) *
                C2436) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51067 +
           (((C117 * C296 + C50950 * C302) * C118 +
             (C117 * C303 + C50950 * C314) * C50821) *
                C2434 +
            (C2440 + C2441) * C2435 + C2448 * C2436) *
               C50938) *
              C112 -
          ((C2449 * C2436 + (C2443 + C2442) * C2435 + (C2441 + C2440) * C2434) *
               C50938 +
           (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
               C51067) *
              C113 +
          ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
           (C2448 * C2434 + (C2445 + C2444) * C2435 + (C2446 + C2447) * C2436) *
               C50938) *
              C114 -
          ((((C117 * C313 + C50950 * C319) * C50821 +
             (C117 * C301 + C50950 * C312) * C118) *
                C2436 +
            (C2447 + C2446) * C2435 + C2449 * C2434) *
               C50938 +
           ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C51046 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C50792) *
              C1005 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C50792 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             (C3237 * C50821 + C3236 * C118) * C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C51046) *
              C1006 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C2434 +
             (C1047 + C1048) * C2435 + (C1049 + C1050) * C2436) *
                C51067 +
            (((C117 * C1150 + C50950 * C1154) * C118 +
              (C117 * C1155 + C50950 * C1162) * C50821) *
                 C2434 +
             (C3402 + C3403) * C2435 + (C3404 + C3405) * C2436) *
                C50938) *
               C51046 -
           ((((C117 * C1161 + C50950 * C1165) * C50821 +
              (C117 * C1153 + C50950 * C1160) * C118) *
                 C2436 +
             (C3405 + C3404) * C2435 + (C3403 + C3402) * C2434) *
                C50938 +
            ((C1052 + C1051) * C2436 + (C1050 + C1049) * C2435 +
             (C1048 + C1047) * C2434) *
                C51067) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C50765 * C10863 +
           (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
           (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
           (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
              C112 -
          ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
           (C8152 + C8151) * C50765 * C10865 +
           (C2441 + C2440) * C50765 * C10864 +
           (C179 + C178) * C50765 * C10863) *
              C113 +
          (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
           (C8154 + C8153) * C50765 * C10865 +
           (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
              C114 -
          (((C117 * C772 + C50950 * C776) * C50821 +
            (C117 * C764 + C50950 * C771) * C118) *
               C50765 * C10866 +
           (C8156 + C8155) * C50765 * C10865 + C2449 * C50765 * C10864 +
           C191 * C50765 * C10863) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            (C117 * C8716 + C50950 * C8718) * C629 +
            (C117 * C8719 + C50950 * C8722) * C624) *
               C50765 * C10866) *
              C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C50765 * C10863 +
           (C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C50765 * C10864 +
           (C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C50765 * C10865 +
           (C8615 * C628 - (C2939 * C622 + C2938 * C627) + C8616 * C623 -
            (C117 * C8717 + C50950 * C8720) * C629 -
            (C117 * C8721 + C50950 * C8723) * C624) *
               C50765 * C10866) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C51046 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C50792) *
              C1005 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C50792 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C51046) *
              C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C50765 * C10863 +
            (C3568 * C118 + C3569 * C50821) * C50765 * C10864 +
            (C9209 * C118 + C9210 * C50821) * C50765 * C10865 +
            ((C117 * C9196 + C50950 * C9198) * C118 +
             (C117 * C9199 + C50950 * C9202) * C50821) *
                C50765 * C10866) *
               C51046 -
           (((C117 * C9201 + C50950 * C9203) * C50821 +
             (C117 * C9197 + C50950 * C9200) * C118) *
                C50765 * C10866 +
            (C9050 + C9049) * C50765 * C10865 +
            (C3403 + C3402) * C50765 * C10864 +
            (C1048 + C1047) * C50765 * C10863) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C2434 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C2435 +
           (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
            C677 * C759 + C678 * C754 - C2940 * C760 - C2941 * C755) *
               C2436) *
              C51067 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 -
            (C117 * C3043 + C50950 * C3046) * C760 -
            (C117 * C3047 + C50950 * C3052) * C755) *
               C2434 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 -
            (C117 * C3044 + C50950 * C3048) * C760 -
            (C117 * C3049 + C50950 * C3053) * C755) *
               C2435 +
           (C348 * C757 + C349 * C752 - C677 * C758 - C678 * C753 +
            C2940 * C759 + C2941 * C754 -
            (C117 * C3045 + C50950 * C3050) * C760 -
            (C117 * C3051 + C50950 * C3054) * C755) *
               C2436) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C2434 +
            (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
               C51067 +
           ((C2612 * C294 + C2613 * C51053 -
             (C117 * C630 + C50950 * C635) * C295 -
             (C117 * C636 + C50950 * C645) * C50837) *
                C2434 +
            (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
               C50938) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C2434 +
            (C357 - (C328 + C327) + C358) * C2435 +
            (C359 - (C334 + C333) + C360) * C2436) *
               C51067 +
           ((C2602 - (C2601 + C2600) + C2603) * C2434 +
            (C2606 - (C2605 + C2604) + C2607) * C2435 +
            (C2608 - (C2609 + C2610) + C2611) * C2436) *
               C50938) *
              C292 +
          ((C365 * C2434 + C366 * C2435 + (C342 + C341 - C361 - C362) * C2436) *
               C51067 +
           (C2616 * C2434 + (C2610 + C2609 - C2608 - C2611) * C2435 +
            (C353 * C294 + C354 * C51053 -
             (C117 * C634 + C50950 * C643) * C295 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C2436) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C2434 +
            (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
               C51067 +
           ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C2434 +
            (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
               C50938) *
              C50787 * C1005 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C2434 +
            (C1898 - (C1899 + C1900) + C1901) * C2435 +
            (C1902 - (C1903 + C1904) + C1905) * C2436) *
               C51067 +
           ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C2434 +
            (C3240 * C295 - (C1657 * C51053 + C1656 * C294) + C3241 * C50837) *
                C2435 +
            (C3242 * C295 - (C1659 * C51053 + C1658 * C294) + C3243 * C50837) *
                C2436) *
               C50938) *
              C50787 * C1006 +
          ((((C117 * C1008 + C50950 * C1013) * C294 +
             (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
             C3569 * C50837) *
                C2434 +
            (C1041 * C294 + C1042 * C51053 - C3398 * C295 - C3399 * C50837) *
                C2435 +
            (C1043 * C294 + C1044 * C51053 - C3400 * C295 - C3401 * C50837) *
                C2436) *
               C51067 +
           ((C3568 * C294 + C3569 * C51053 -
             (C117 * C3551 + C50950 * C3554) * C295 -
             (C117 * C3555 + C50950 * C3560) * C50837) *
                C2434 +
            (C3398 * C294 + C3399 * C51053 -
             (C117 * C3552 + C50950 * C3556) * C295 -
             (C117 * C3557 + C50950 * C3561) * C50837) *
                C2435 +
            (C3400 * C294 + C3401 * C51053 -
             (C117 * C3553 + C50950 * C3558) * C295 -
             (C117 * C3559 + C50950 * C3562) * C50837) *
                C2436) *
               C50938) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
               C50765 * C10866) *
              C291 +
          ((C355 - (C322 + C321) + C356) * C50765 * C10863 +
           (C2602 - (C2601 + C2600) + C2603) * C50765 * C10864 +
           (C8305 - (C8304 + C8303) + C8306) * C50765 * C10865 +
           (C8615 * C295 - (C2939 * C51053 + C2938 * C294) + C8616 * C50837) *
               C50765 * C10866) *
              C292 +
          (C365 * C50765 * C10863 + C2616 * C50765 * C10864 +
           (C8309 + C8308 - C8307 - C8310) * C50765 * C10865 +
           (C2940 * C294 + C2941 * C51053 -
            (C117 * C3045 + C50950 * C3050) * C295 -
            (C117 * C3051 + C50950 * C3054) * C50837) *
               C50765 * C10866) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
           C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
              C50765 * C10863 +
          (C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
           C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
              C50765 * C10864 +
          (C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
           C8729 * C759 + C8730 * C754 - C11236 * C760 - C11237 * C755) *
              C50765 * C10865 +
          (C3060 * C757 + C3061 * C752 - C8729 * C758 - C8730 * C753 +
           C11236 * C759 + C11237 * C754 -
           (C117 * C11227 + C50950 * C11228) * C760 -
           (C117 * C11229 + C50950 * C11230) * C755) *
              C50765 * C10866) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
               C50765 * C10866) *
              C50787 * C1005 +
          ((C3236 * C295 -
            ((C117 * C480 + C50950 * C488) * C51053 +
             (C117 * C470 + C50950 * C481) * C294) +
            C3237 * C50837) *
               C50765 * C10863 +
           (C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
               C50765 * C10864 +
           (C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
               C50765 * C10865 +
           (C11344 * C295 - (C8894 * C51053 + C8893 * C294) + C11345 * C50837) *
               C50765 * C10866) *
              C50787 * C1006 +
          (((C117 * C1008 + C50950 * C1013) * C294 +
            (C117 * C1014 + C50950 * C1023) * C51053 - C3568 * C295 -
            C3569 * C50837) *
               C50765 * C10863 +
           (C3568 * C294 + C3569 * C51053 - C9209 * C295 - C9210 * C50837) *
               C50765 * C10864 +
           (C9209 * C294 + C9210 * C51053 - C11550 * C295 - C11551 * C50837) *
               C50765 * C10865 +
           (C11550 * C294 + C11551 * C51053 -
            (C117 * C11541 + C50950 * C11542) * C295 -
            (C117 * C11543 + C50950 * C11544) * C50837) *
               C50765 * C10866) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C2434 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
               C51067 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C2434 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
               C50938) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C2434 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C2435 +
            (C1658 * C628 - (C510 * C622 + C509 * C627) + C1659 * C623 -
             C3242 * C629 - C3243 * C624) *
                C2436) *
               C51067 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             (C117 * C3207 + C50950 * C3210) * C629 -
             (C117 * C3211 + C50950 * C3216) * C624) *
                C2434 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             (C117 * C3208 + C50950 * C3212) * C629 -
             (C117 * C3213 + C50950 * C3217) * C624) *
                C2435 +
            (C3242 * C628 - (C1659 * C622 + C1658 * C627) + C3243 * C623 -
             (C117 * C3209 + C50950 * C3214) * C629 -
             (C117 * C3215 + C50950 * C3218) * C624) *
                C2436) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C291 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C292 +
           ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
            (C2448 * C2434 + (C2445 + C2444) * C2435 +
             (C2446 + C2447) * C2436) *
                C50938) *
               C293) *
              C51055 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C292 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             ((C117 * C884 + C50950 * C899) * C50821 +
              (C117 * C875 + C50950 * C883) * C118) *
                 C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C291 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C2436 +
             (C2768 + C2767) * C2435 + C2769 * C2434) *
                C50938 +
            ((C522 + C521) * C2436 + C523 * C2435 + C524 * C2434) * C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51067 +
           ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
            C2448 * C2436) *
               C50938) *
              C50787 * C1232 -
          ((C2769 * C2436 + (C2764 + C2763) * C2435 +
            (C3237 * C50821 + C3236 * C118) * C2434) *
               C50938 +
           (C524 * C2436 + (C516 + C515) * C2435 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C2434) *
               C51067) *
              C50787 * C1233 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C2434 +
            (C1047 + C1048) * C2435 + (C1049 + C1050) * C2436) *
               C51067 +
           ((C3568 * C118 + C3569 * C50821) * C2434 + (C3402 + C3403) * C2435 +
            (C3404 + C3405) * C2436) *
               C50938) *
              C50787 * C1234 -
          ((((C117 * C3670 + C50950 * C3676) * C50821 +
             (C117 * C3667 + C50950 * C3671) * C118) *
                C2436 +
            ((C117 * C3672 + C50950 * C3677) * C50821 +
             (C117 * C3668 + C50950 * C3673) * C118) *
                C2435 +
            ((C117 * C3674 + C50950 * C3678) * C50821 +
             (C117 * C3669 + C50950 * C3675) * C118) *
                C2434) *
               C50938 +
           (((C117 * C1242 + C50950 * C1249) * C50821 +
             (C117 * C1237 + C50950 * C1243) * C118) *
                C2436 +
            ((C117 * C1244 + C50950 * C1250) * C50821 +
             (C117 * C1238 + C50950 * C1245) * C118) *
                C2435 +
            ((C117 * C1246 + C50950 * C1251) * C50821 +
             (C117 * C1239 + C50950 * C1247) * C118) *
                C2434) *
               C51067) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C291 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C292 +
           (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
            (C8154 + C8153) * C50765 * C10865 +
            (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
               C293) *
              C51055 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C292 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C291 -
           (((C117 * C3215 + C50950 * C3218) * C50821 +
             (C117 * C3209 + C50950 * C3214) * C118) *
                C50765 * C10866 +
            (C8460 + C8459) * C50765 * C10865 + C2769 * C50765 * C10864 +
            C524 * C50765 * C10863) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            C11236 * C629 + C11237 * C624) *
               C50765 * C10866) *
              C50787 * C51055 +
          ((C3236 * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            C3237 * C623 - C3238 * C629 - C3239 * C624) *
               C50765 * C10863 +
           (C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
            C8893 * C629 - C8894 * C624) *
               C50765 * C10864 +
           (C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
            C11344 * C629 - C11345 * C624) *
               C50765 * C10865 +
           (C11344 * C628 - (C8894 * C622 + C8893 * C627) + C11345 * C623 -
            (C117 * C11335 + C50950 * C11336) * C629 -
            (C117 * C11337 + C50950 * C11338) * C624) *
               C50765 * C10866) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C50765 * C10863 +
           (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
           (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
           (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
              C50787 * C1232 -
          ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
           (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
           (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
           ((C117 * C480 + C50950 * C488) * C50821 +
            (C117 * C470 + C50950 * C481) * C118) *
               C50765 * C10863) *
              C50787 * C1233 +
          (((C117 * C1008 + C50950 * C1013) * C118 +
            (C117 * C1014 + C50950 * C1023) * C50821) *
               C50765 * C10863 +
           (C3568 * C118 + C3569 * C50821) * C50765 * C10864 +
           (C9209 * C118 + C9210 * C50821) * C50765 * C10865 +
           (C11550 * C118 + C11551 * C50821) * C50765 * C10866) *
              C50787 * C1234 -
          (((C117 * C11618 + C50950 * C11620) * C50821 +
            (C117 * C11617 + C50950 * C11619) * C118) *
               C50765 * C10866 +
           ((C117 * C9312 + C50950 * C9315) * C50821 +
            (C117 * C9309 + C50950 * C9313) * C118) *
               C50765 * C10865 +
           ((C117 * C3674 + C50950 * C3678) * C50821 +
            (C117 * C3669 + C50950 * C3675) * C118) *
               C50765 * C10864 +
           ((C117 * C1246 + C50950 * C1251) * C50821 +
            (C117 * C1239 + C50950 * C1247) * C118) *
               C50765 * C10863) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C51098 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C51084 +
           ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
            (C2448 * C2434 + (C2445 + C2444) * C2435 +
             (C2446 + C2447) * C2436) *
                C50938) *
               C1354) *
              C1765 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C51084 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             (C3237 * C50821 + C3236 * C118) * C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C51098 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C2436 +
             (C2768 + C2767) * C2435 + C2769 * C2434) *
                C50938 +
            ((C522 + C521) * C2436 + C523 * C2435 + C524 * C2434) * C51067) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C51098 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C51084 +
           (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
            (C8154 + C8153) * C50765 * C10865 +
            (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
               C1354) *
              C1765 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C51084 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C51098 -
           (((C117 * C3215 + C50950 * C3218) * C50821 +
             (C117 * C3209 + C50950 * C3214) * C118) *
                C50765 * C10866 +
            (C8460 + C8459) * C50765 * C10865 + C2769 * C50765 * C10864 +
            C524 * C50765 * C10863) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C294 +
              (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
              C2613 * C50837) *
                 C2434 +
             (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
                C51067 +
            ((C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                 C2434 +
             (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
                C50938) *
               C1480 +
           (((C355 - (C322 + C321) + C356) * C2434 +
             (C357 - (C328 + C327) + C358) * C2435 +
             (C359 - (C334 + C333) + C360) * C2436) *
                C51067 +
            ((C2602 - (C2601 + C2600) + C2603) * C2434 +
             (C2606 - (C2605 + C2604) + C2607) * C2435 +
             (C2608 - (C2609 + C2610) + C2611) * C2436) *
                C50938) *
               C50792) *
              C1765 +
          ((((C3236 * C295 -
              ((C117 * C480 + C50950 * C488) * C51053 +
               (C117 * C470 + C50950 * C481) * C294) +
              C3237 * C50837) *
                 C2434 +
             (C1898 - (C1899 + C1900) + C1901) * C2435 +
             (C1902 - (C1903 + C1904) + C1905) * C2436) *
                C51067 +
            ((C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                 C2434 +
             (C4541 - (C4542 + C4543) + C4544) * C2435 +
             (C4545 - (C4546 + C4547) + C4548) * C2436) *
                C50938) *
               C1480 +
           (((C1900 + C1899 - C1898 - C1901) * C2434 +
             (C1904 + C1903 - C1902 - C1905) * C2435 +
             (C1908 + C1907 - C1906 - C1909) * C2436) *
                C51067 +
            ((C4543 + C4542 - C4541 - C4544) * C2434 +
             (C4547 + C4546 - C4545 - C4548) * C2435 +
             (C1660 * C294 + C1661 * C51053 -
              (C117 * C882 + C50950 * C897) * C295 -
              (C117 * C898 + C50950 * C906) * C50837) *
                 C2436) *
                C50938) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C50765 * C10863 +
            (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
                C50765 * C10864 +
            (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
                C50765 * C10865 +
            (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C355 - (C322 + C321) + C356) * C50765 * C10863 +
            (C2602 - (C2601 + C2600) + C2603) * C50765 * C10864 +
            (C8305 - (C8304 + C8303) + C8306) * C50765 * C10865 +
            (C8615 * C295 - (C2939 * C51053 + C2938 * C294) + C8616 * C50837) *
                C50765 * C10866) *
               C50792) *
              C1765 +
          (((C3236 * C295 -
             ((C117 * C480 + C50950 * C488) * C51053 +
              (C117 * C470 + C50950 * C481) * C294) +
             C3237 * C50837) *
                C50765 * C10863 +
            (C3238 * C295 - (C3237 * C51053 + C3236 * C294) + C3239 * C50837) *
                C50765 * C10864 +
            (C8893 * C295 - (C3239 * C51053 + C3238 * C294) + C8894 * C50837) *
                C50765 * C10865 +
            (C11344 * C295 - (C8894 * C51053 + C8893 * C294) +
             C11345 * C50837) *
                C50765 * C10866) *
               C1480 +
           ((C1900 + C1899 - C1898 - C1901) * C50765 * C10863 +
            (C4543 + C4542 - C4541 - C4544) * C50765 * C10864 +
            (C10163 + C10162 - C10161 - C10164) * C50765 * C10865 +
            (C8895 * C294 + C8896 * C51053 -
             (C117 * C8877 + C50950 * C8880) * C295 -
             (C117 * C8881 + C50950 * C8883) * C50837) *
                C50765 * C10866) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C1480 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C50792) *
              C51100 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C50792 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             (C3237 * C50821 + C3236 * C118) * C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C1480) *
              C51090 +
          (((((C117 * C1008 + C50950 * C1013) * C118 +
              (C117 * C1014 + C50950 * C1023) * C50821) *
                 C2434 +
             (C1047 + C1048) * C2435 + (C1049 + C1050) * C2436) *
                C51067 +
            ((C3568 * C118 + C3569 * C50821) * C2434 + (C3402 + C3403) * C2435 +
             (C3404 + C3405) * C2436) *
                C50938) *
               C1480 -
           ((((C117 * C1161 + C50950 * C1165) * C50821 +
              (C117 * C1153 + C50950 * C1160) * C118) *
                 C2436 +
             (C3405 + C3404) * C2435 + (C3403 + C3402) * C2434) *
                C50938 +
            ((C1052 + C1051) * C2436 + (C1050 + C1049) * C2435 +
             (C1048 + C1047) * C2434) *
                C51067) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C1480 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C50792) *
              C51100 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C50792 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C1480) *
              C51090 +
          ((((C117 * C1008 + C50950 * C1013) * C118 +
             (C117 * C1014 + C50950 * C1023) * C50821) *
                C50765 * C10863 +
            (C3568 * C118 + C3569 * C50821) * C50765 * C10864 +
            (C9209 * C118 + C9210 * C50821) * C50765 * C10865 +
            (C11550 * C118 + C11551 * C50821) * C50765 * C10866) *
               C1480 -
           (((C117 * C9201 + C50950 * C9203) * C50821 +
             (C117 * C9197 + C50950 * C9200) * C118) *
                C50765 * C10866 +
            (C9050 + C9049) * C50765 * C10865 +
            (C3403 + C3402) * C50765 * C10864 +
            (C1048 + C1047) * C50765 * C10863) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51067 +
           (((C117 * C296 + C50950 * C302) * C118 +
             (C117 * C303 + C50950 * C314) * C50821) *
                C2434 +
            (C2440 + C2441) * C2435 + C2448 * C2436) *
               C50938) *
              C112 -
          ((C2449 * C2436 + (C2443 + C2442) * C2435 + (C2441 + C2440) * C2434) *
               C50938 +
           (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
               C51067) *
              C113 +
          ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
           (C2448 * C2434 + (C2445 + C2444) * C2435 + (C2446 + C2447) * C2436) *
               C50938) *
              C114 -
          ((((C117 * C313 + C50950 * C319) * C50821 +
             (C117 * C301 + C50950 * C312) * C118) *
                C2436 +
            (C2447 + C2446) * C2435 + C2449 * C2434) *
               C50938 +
           ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51067) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C2434 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
               C51067 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             (C117 * C761 + C50950 * C765) * C629 +
             (C117 * C766 + C50950 * C773) * C624) *
                C2434 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
               C50938) *
              C51046 +
          (((C653 - (C652 + C651) + C654 - C681 - C682) * C2434 +
            (C661 - (C660 + C659) + C662 - C683 - C684) * C2435 +
            (C669 - (C668 + C667) + C670 - C685 - C686) * C2436) *
               C51067 +
           ((C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C2434 +
            (C2930 - (C2929 + C2928) + C2931 - C2944 - C2945) * C2435 +
            (C679 * C628 - (C352 * C622 + C351 * C627) + C680 * C623 -
             (C117 * C764 + C50950 * C771) * C629 -
             (C117 * C772 + C50950 * C776) * C624) *
                C2436) *
               C50938) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C118 +
            (C117 * C127 + C50950 * C140) * C50821) *
               C50765 * C10863 +
           (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
           (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
           (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
              C112 -
          ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
           (C8152 + C8151) * C50765 * C10865 +
           (C2441 + C2440) * C50765 * C10864 +
           (C179 + C178) * C50765 * C10863) *
              C113 +
          (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
           (C8154 + C8153) * C50765 * C10865 +
           (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
              C114 -
          (((C117 * C772 + C50950 * C776) * C50821 +
            (C117 * C764 + C50950 * C771) * C118) *
               C50765 * C10866 +
           (C8156 + C8155) * C50765 * C10865 + C2449 * C50765 * C10864 +
           C191 * C50765 * C10863) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            (C117 * C8716 + C50950 * C8718) * C629 +
            (C117 * C8719 + C50950 * C8722) * C624) *
               C50765 * C10866) *
              C51046 +
          ((C653 - (C652 + C651) + C654 - C681 - C682) * C50765 * C10863 +
           (C2922 - (C2921 + C2920) + C2923 - C2942 - C2943) * C50765 * C10864 +
           (C8609 - (C8608 + C8607) + C8610 - C8617 - C8618) * C50765 * C10865 +
           (C8615 * C628 - (C2939 * C622 + C2938 * C627) + C8616 * C623 -
            (C117 * C8717 + C50950 * C8720) * C629 -
            (C117 * C8721 + C50950 * C8723) * C624) *
               C50765 * C10866) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C294 +
             (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
             C2613 * C50837) *
                C2434 +
            (C321 + C322 - C355 - C356) * C2435 + C365 * C2436) *
               C51067 +
           ((C2612 * C294 + C2613 * C51053 -
             (C117 * C630 + C50950 * C635) * C295 -
             (C117 * C636 + C50950 * C645) * C50837) *
                C2434 +
            (C2600 + C2601 - C2602 - C2603) * C2435 + C2616 * C2436) *
               C50938) *
              C291 +
          (((C355 - (C322 + C321) + C356) * C2434 +
            (C357 - (C328 + C327) + C358) * C2435 +
            (C359 - (C334 + C333) + C360) * C2436) *
               C51067 +
           ((C2602 - (C2601 + C2600) + C2603) * C2434 +
            (C2606 - (C2605 + C2604) + C2607) * C2435 +
            (C2608 - (C2609 + C2610) + C2611) * C2436) *
               C50938) *
              C292 +
          ((C365 * C2434 + C366 * C2435 + (C342 + C341 - C361 - C362) * C2436) *
               C51067 +
           (C2616 * C2434 + (C2610 + C2609 - C2608 - C2611) * C2435 +
            (C353 * C294 + C354 * C51053 -
             (C117 * C634 + C50950 * C643) * C295 -
             (C117 * C644 + C50950 * C649) * C50837) *
                C2436) *
               C50938) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C757 +
            (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
            C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
               C2434 +
           (C168 * C757 + C169 * C752 - C345 * C758 - C346 * C753 +
            C675 * C759 + C676 * C754 - C2938 * C760 - C2939 * C755) *
               C2435 +
           (C170 * C757 + C171 * C752 - C348 * C758 - C349 * C753 +
            C677 * C759 + C678 * C754 - C2940 * C760 - C2941 * C755) *
               C2436) *
              C51067 +
          ((C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
            C3060 * C759 + C3061 * C754 -
            (C117 * C3043 + C50950 * C3046) * C760 -
            (C117 * C3047 + C50950 * C3052) * C755) *
               C2434 +
           (C345 * C757 + C346 * C752 - C675 * C758 - C676 * C753 +
            C2938 * C759 + C2939 * C754 -
            (C117 * C3044 + C50950 * C3048) * C760 -
            (C117 * C3049 + C50950 * C3053) * C755) *
               C2435 +
           (C348 * C757 + C349 * C752 - C677 * C758 - C678 * C753 +
            C2940 * C759 + C2941 * C754 -
            (C117 * C3045 + C50950 * C3050) * C760 -
            (C117 * C3051 + C50950 * C3054) * C755) *
               C2436) *
              C50938) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C294 +
            (C117 * C127 + C50950 * C140) * C51053 - C2612 * C295 -
            C2613 * C50837) *
               C50765 * C10863 +
           (C2612 * C294 + C2613 * C51053 - C2936 * C295 - C2937 * C50837) *
               C50765 * C10864 +
           (C2936 * C294 + C2937 * C51053 - C3060 * C295 - C3061 * C50837) *
               C50765 * C10865 +
           (C3060 * C294 + C3061 * C51053 - C8729 * C295 - C8730 * C50837) *
               C50765 * C10866) *
              C291 +
          ((C355 - (C322 + C321) + C356) * C50765 * C10863 +
           (C2602 - (C2601 + C2600) + C2603) * C50765 * C10864 +
           (C8305 - (C8304 + C8303) + C8306) * C50765 * C10865 +
           (C8615 * C295 - (C2939 * C51053 + C2938 * C294) + C8616 * C50837) *
               C50765 * C10866) *
              C292 +
          (C365 * C50765 * C10863 + C2616 * C50765 * C10864 +
           (C8309 + C8308 - C8307 - C8310) * C50765 * C10865 +
           (C2940 * C294 + C2941 * C51053 -
            (C117 * C3045 + C50950 * C3050) * C295 -
            (C117 * C3051 + C50950 * C3054) * C50837) *
               C50765 * C10866) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50950 * C126) * C757 +
           (C117 * C127 + C50950 * C140) * C752 - C2612 * C758 - C2613 * C753 +
           C2936 * C759 + C2937 * C754 - C3060 * C760 - C3061 * C755) *
              C50765 * C10863 +
          (C2612 * C757 + C2613 * C752 - C2936 * C758 - C2937 * C753 +
           C3060 * C759 + C3061 * C754 - C8729 * C760 - C8730 * C755) *
              C50765 * C10864 +
          (C2936 * C757 + C2937 * C752 - C3060 * C758 - C3061 * C753 +
           C8729 * C759 + C8730 * C754 - C11236 * C760 - C11237 * C755) *
              C50765 * C10865 +
          (C3060 * C757 + C3061 * C752 - C8729 * C758 - C8730 * C753 +
           C11236 * C759 + C11237 * C754 -
           (C117 * C11227 + C50950 * C11228) * C760 -
           (C117 * C11229 + C50950 * C11230) * C755) *
              C50765 * C10866) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50950 * C126) * C118 +
              (C117 * C127 + C50950 * C140) * C50821) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51067 +
            ((C2612 * C118 + C2613 * C50821) * C2434 + (C2440 + C2441) * C2435 +
             C2448 * C2436) *
                C50938) *
               C291 -
           ((C2449 * C2436 + (C2443 + C2442) * C2435 +
             (C2441 + C2440) * C2434) *
                C50938 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51067) *
               C292 +
           ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51067 +
            (C2448 * C2434 + (C2445 + C2444) * C2435 +
             (C2446 + C2447) * C2436) *
                C50938) *
               C293) *
              C51055 +
          ((((C515 + C516) * C2434 + (C517 + C518) * C2435 +
             (C519 + C520) * C2436) *
                C51067 +
            ((C2763 + C2764) * C2434 + (C2765 + C2766) * C2435 +
             (C2767 + C2768) * C2436) *
                C50938) *
               C292 -
           ((C2769 * C2436 + (C2764 + C2763) * C2435 +
             ((C117 * C884 + C50950 * C899) * C50821 +
              (C117 * C875 + C50950 * C883) * C118) *
                 C2434) *
                C50938 +
            (C524 * C2436 + (C516 + C515) * C2435 +
             ((C117 * C480 + C50950 * C488) * C50821 +
              (C117 * C470 + C50950 * C481) * C118) *
                 C2434) *
                C51067) *
               C291 -
           ((((C117 * C1635 + C50950 * C1636) * C50821 +
              (C117 * C1633 + C50950 * C1634) * C118) *
                 C2436 +
             (C2768 + C2767) * C2435 + C2769 * C2434) *
                C50938 +
            ((C522 + C521) * C2436 + C523 * C2435 + C524 * C2434) * C51067) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C627 +
             (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 -
             C2613 * C623 + C2936 * C629 + C2937 * C624) *
                C2434 +
            (C651 + C652 - C653 - C654 + C681 + C682) * C2435 +
            (C659 + C660 - C661 - C662 + C683 + C684) * C2436) *
               C51067 +
           ((C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
             C3060 * C629 + C3061 * C624) *
                C2434 +
            (C2920 + C2921 - C2922 - C2923 + C2942 + C2943) * C2435 +
            (C2928 + C2929 - C2930 - C2931 + C2944 + C2945) * C2436) *
               C50938) *
              C50787 * C51055 +
          (((C3236 * C628 -
             ((C117 * C480 + C50950 * C488) * C622 +
              (C117 * C470 + C50950 * C481) * C627) +
             C3237 * C623 - C3238 * C629 - C3239 * C624) *
                C2434 +
            (C1656 * C628 - (C508 * C622 + C507 * C627) + C1657 * C623 -
             C3240 * C629 - C3241 * C624) *
                C2435 +
            (C1658 * C628 - (C510 * C622 + C509 * C627) + C1659 * C623 -
             C3242 * C629 - C3243 * C624) *
                C2436) *
               C51067 +
           ((C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
             (C117 * C3207 + C50950 * C3210) * C629 -
             (C117 * C3211 + C50950 * C3216) * C624) *
                C2434 +
            (C3240 * C628 - (C1657 * C622 + C1656 * C627) + C3241 * C623 -
             (C117 * C3208 + C50950 * C3212) * C629 -
             (C117 * C3213 + C50950 * C3217) * C624) *
                C2435 +
            (C3242 * C628 - (C1659 * C622 + C1658 * C627) + C3243 * C623 -
             (C117 * C3209 + C50950 * C3214) * C629 -
             (C117 * C3215 + C50950 * C3218) * C624) *
                C2436) *
               C50938) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50950 * C126) * C118 +
             (C117 * C127 + C50950 * C140) * C50821) *
                C50765 * C10863 +
            (C2612 * C118 + C2613 * C50821) * C50765 * C10864 +
            (C2936 * C118 + C2937 * C50821) * C50765 * C10865 +
            (C3060 * C118 + C3061 * C50821) * C50765 * C10866) *
               C291 -
           ((C2939 * C50821 + C2938 * C118) * C50765 * C10866 +
            (C8152 + C8151) * C50765 * C10865 +
            (C2441 + C2440) * C50765 * C10864 +
            (C179 + C178) * C50765 * C10863) *
               C292 +
           (C188 * C50765 * C10863 + C2448 * C50765 * C10864 +
            (C8154 + C8153) * C50765 * C10865 +
            (C2940 * C118 + C2941 * C50821) * C50765 * C10866) *
               C293) *
              C51055 +
          (((C515 + C516) * C50765 * C10863 +
            (C2763 + C2764) * C50765 * C10864 +
            (C8457 + C8458) * C50765 * C10865 +
            (C8895 * C118 + C8896 * C50821) * C50765 * C10866) *
               C292 -
           ((C8894 * C50821 + C8893 * C118) * C50765 * C10866 +
            (C3239 * C50821 + C3238 * C118) * C50765 * C10865 +
            (C3237 * C50821 + C3236 * C118) * C50765 * C10864 +
            ((C117 * C480 + C50950 * C488) * C50821 +
             (C117 * C470 + C50950 * C481) * C118) *
                C50765 * C10863) *
               C291 -
           (((C117 * C3215 + C50950 * C3218) * C50821 +
             (C117 * C3209 + C50950 * C3214) * C118) *
                C50765 * C10866 +
            (C8460 + C8459) * C50765 * C10865 + C2769 * C50765 * C10864 +
            C524 * C50765 * C10863) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50950 * C126) * C627 +
            (C117 * C127 + C50950 * C140) * C622 - C2612 * C628 - C2613 * C623 +
            C2936 * C629 + C2937 * C624) *
               C50765 * C10863 +
           (C2612 * C627 + C2613 * C622 - C2936 * C628 - C2937 * C623 +
            C3060 * C629 + C3061 * C624) *
               C50765 * C10864 +
           (C2936 * C627 + C2937 * C622 - C3060 * C628 - C3061 * C623 +
            C8729 * C629 + C8730 * C624) *
               C50765 * C10865 +
           (C3060 * C627 + C3061 * C622 - C8729 * C628 - C8730 * C623 +
            C11236 * C629 + C11237 * C624) *
               C50765 * C10866) *
              C50787 * C51055 +
          ((C3236 * C628 -
            ((C117 * C480 + C50950 * C488) * C622 +
             (C117 * C470 + C50950 * C481) * C627) +
            C3237 * C623 - C3238 * C629 - C3239 * C624) *
               C50765 * C10863 +
           (C3238 * C628 - (C3237 * C622 + C3236 * C627) + C3239 * C623 -
            C8893 * C629 - C8894 * C624) *
               C50765 * C10864 +
           (C8893 * C628 - (C3239 * C622 + C3238 * C627) + C8894 * C623 -
            C11344 * C629 - C11345 * C624) *
               C50765 * C10865 +
           (C11344 * C628 - (C8894 * C622 + C8893 * C627) + C11345 * C623 -
            (C117 * C11335 + C50950 * C11336) * C629 -
            (C117 * C11337 + C50950 * C11338) * C624) *
               C50765 * C10866) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1356 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
            (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
               C2435 +
           C6711 * C2436) *
              C50924 * C51098 +
          (((C5514 + C5513) * C1356 -
            ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
            (C5516 + C5515) * C50837) *
               C2434 +
           ((C5519 + C5518) * C1356 -
            ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
            (C5521 + C5520) * C50837) *
               C2435 +
           ((C5522 + C5523) * C1356 - (C5333 * C1350 + C5334 * C1355) +
            (C5524 + C5525) * C50837) *
               C2436) *
              C50924 * C51084 +
          (C6711 * C2434 +
           ((C5326 + C5325) * C1355 + (C5324 + C5323) * C1350 -
            (C5523 + C5522) * C1356 - (C5525 + C5524) * C50837) *
               C2435 +
           ((C5327 + C5328) * C1355 + (C5329 + C5330) * C1350 -
            (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                C1356 -
            (C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                C50837) *
               C2436) *
              C50924 * C1354) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
            (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
            C13287 * C50837) *
               C50765 * C8149) *
              C51098 +
          (((C5514 + C5513) * C1356 -
            ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
            (C5516 + C5515) * C50837) *
               C50765 * C8147 +
           ((C5881 + C5882) * C1356 -
            ((C5515 + C5516) * C1350 + (C5513 + C5514) * C1355) +
            (C5883 + C5884) * C50837) *
               C50765 * C8148 +
           ((C13185 + C13184) * C1356 - (C13171 * C1350 + C13170 * C1355) +
            (C13187 + C13186) * C50837) *
               C50765 * C8149) *
              C51084 +
          (C6711 * C50765 * C8147 +
           ((C5519 + C5518) * C1355 + (C5521 + C5520) * C1350 -
            (C5886 + C5885) * C1356 - (C5888 + C5887) * C50837) *
               C50765 * C8148 +
           ((C5885 + C5886) * C1355 + (C5887 + C5888) * C1350 -
            (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                C1356 -
            (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                C50837) *
               C50765 * C8149) *
              C1354) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1483 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C51087 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C1484 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C1479) *
               C2434 +
           ((C5315 + C5316) * C1482 + (C5317 + C5318) * C51099 -
            (C5513 + C5514) * C1483 - (C5515 + C5516) * C51087 +
            (C5881 + C5882) * C1484 + (C5883 + C5884) * C1479) *
               C2435 +
           (C5331 * C1482 + C5332 * C51099 - C5526 * C1483 - C5527 * C51087 +
            (C5885 + C5886) * C1484 + (C5887 + C5888) * C1479) *
               C2436) *
              C50924 * C1480 +
          (((C5514 + C5513) * C1483 -
            ((C5318 + C5317) * C51099 + (C5316 + C5315) * C1482) +
            (C5516 + C5515) * C51087 - (C5882 + C5881) * C1484 -
            (C5884 + C5883) * C1479) *
               C2434 +
           ((C5519 + C5518) * C1483 -
            ((C5322 + C5321) * C51099 + (C5320 + C5319) * C1482) +
            (C5521 + C5520) * C51087 - (C5886 + C5885) * C1484 -
            (C5888 + C5887) * C1479) *
               C2435 +
           ((C5522 + C5523) * C1483 - (C5333 * C51099 + C5334 * C1482) +
            (C5524 + C5525) * C51087 -
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C1484 -
            (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C1479) *
               C2436) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C12860 + C12861) * C1483 - (C12862 + C12863) * C51087 +
            C13160 * C1484 + C13161 * C1479) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1482 + (C12863 + C12862) * C51099 -
            (C12864 + C12865) * C1483 - (C12866 + C12867) * C51087 +
            (C13180 + C13181) * C1484 + (C13182 + C13183) * C1479) *
               C50765 * C8148 +
           (C13160 * C1482 + C13161 * C51099 - C13286 * C1483 -
            C13287 * C51087 + (C13297 + C13296) * C1484 +
            (C13299 + C13298) * C1479) *
               C50765 * C8149) *
              C1480 +
          (((C5514 + C5513) * C1483 -
            ((C5318 + C5317) * C51099 + (C5316 + C5315) * C1482) +
            (C5516 + C5515) * C51087 - C13170 * C1484 - C13171 * C1479) *
               C50765 * C8147 +
           ((C5881 + C5882) * C1483 -
            ((C5515 + C5516) * C51099 + (C5513 + C5514) * C1482) +
            (C5883 + C5884) * C51087 - (C13184 + C13185) * C1484 -
            (C13186 + C13187) * C1479) *
               C50765 * C8148 +
           ((C13185 + C13184) * C1483 - (C13171 * C51099 + C13170 * C1482) +
            (C13187 + C13186) * C51087 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C1484 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C1479) *
               C50765 * C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                 C1356 -
             (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                 C50837) *
                C2434 +
            ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
             (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
                C2435 +
            C6711 * C2436) *
               C50924 * C1480 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C2434 +
            ((C5519 + C5518) * C1356 -
             ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
             (C5521 + C5520) * C50837) *
                C2435 +
            ((C5522 + C5523) * C1356 - (C5333 * C1350 + C5334 * C1355) +
             (C5524 + C5525) * C50837) *
                C2436) *
               C50924 * C50792) *
              C51055 +
          ((((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                 C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                 C50837) *
                C2434 +
            ((C7068 + C7069) * C1356 -
             ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
             (C7070 + C7071) * C50837) *
                C2435 +
            ((C7072 + C7073) * C1356 - (C5714 * C1350 + C5715 * C1355) +
             (C7074 + C7075) * C50837) *
                C2436) *
               C50924 * C1480 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C2434 +
            ((C5706 + C5707) * C1355 + (C5708 + C5709) * C1350 -
             (C7073 + C7072) * C1356 - (C7075 + C7074) * C50837) *
                C2435 +
            ((C5710 + C5711) * C1355 + (C5712 + C5713) * C1350 -
             (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                 C1356 -
             (C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                 C50837) *
                C2436) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                C50765 * C8147 +
            ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
             (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                C50765 * C8148 +
            (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
             C13287 * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C50765 * C8147 +
            ((C5881 + C5882) * C1356 -
             ((C5515 + C5516) * C1350 + (C5513 + C5514) * C1355) +
             (C5883 + C5884) * C50837) *
                C50765 * C8148 +
            ((C13185 + C13184) * C1356 - (C13171 * C1350 + C13170 * C1355) +
             (C13187 + C13186) * C50837) *
                C50765 * C8149) *
               C50792) *
              C51055 +
          ((((C13470 + C13471) * C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C13472 + C13473) * C50837) *
                C50765 * C8147 +
            ((C13475 + C13474) * C1356 -
             ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
             (C13477 + C13476) * C50837) *
                C50765 * C8148 +
            ((C13479 + C13478) * C1356 - (C13483 * C1350 + C13482 * C1355) +
             (C13481 + C13480) * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C50765 * C8147 +
            ((C7068 + C7069) * C1355 + (C7070 + C7071) * C1350 -
             (C14400 + C14401) * C1356 - (C14402 + C14403) * C50837) *
                C50765 * C8148 +
            ((C14401 + C14400) * C1355 + (C14403 + C14402) * C1350 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C1356 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C50837) *
                C50765 * C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                 C1356 -
             (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                 C50837) *
                C2434 +
            ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
             (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
                C2435 +
            C6711 * C2436) *
               C50924 * C51046 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C2434 +
            ((C5519 + C5518) * C1356 -
             ((C5322 + C5321) * C1350 + (C5320 + C5319) * C1355) +
             (C5521 + C5520) * C50837) *
                C2435 +
            ((C5522 + C5523) * C1356 - (C5333 * C1350 + C5334 * C1355) +
             (C5524 + C5525) * C50837) *
                C2436) *
               C50924 * C50792) *
              C1765 +
          ((((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                 C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                 C50837) *
                C2434 +
            ((C7068 + C7069) * C1356 -
             ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
             (C7070 + C7071) * C50837) *
                C2435 +
            ((C7072 + C7073) * C1356 - (C5714 * C1350 + C5715 * C1355) +
             (C7074 + C7075) * C50837) *
                C2436) *
               C50924 * C51046 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C2434 +
            ((C5706 + C5707) * C1355 + (C5708 + C5709) * C1350 -
             (C7073 + C7072) * C1356 - (C7075 + C7074) * C50837) *
                C2435 +
            ((C5710 + C5711) * C1355 + (C5712 + C5713) * C1350 -
             (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                 C1356 -
             (C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                 C50837) *
                C2436) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C1355 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C1350 -
             (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
                C50765 * C8147 +
            ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
             (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
                C50765 * C8148 +
            (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
             C13287 * C50837) *
                C50765 * C8149) *
               C51046 +
           (((C5514 + C5513) * C1356 -
             ((C5318 + C5317) * C1350 + (C5316 + C5315) * C1355) +
             (C5516 + C5515) * C50837) *
                C50765 * C8147 +
            ((C5881 + C5882) * C1356 -
             ((C5515 + C5516) * C1350 + (C5513 + C5514) * C1355) +
             (C5883 + C5884) * C50837) *
                C50765 * C8148 +
            ((C13185 + C13184) * C1356 - (C13171 * C1350 + C13170 * C1355) +
             (C13187 + C13186) * C50837) *
                C50765 * C8149) *
               C50792) *
              C1765 +
          ((((C13470 + C13471) * C1356 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C1350 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C1355) +
             (C13472 + C13473) * C50837) *
                C50765 * C8147 +
            ((C13475 + C13474) * C1356 -
             ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
             (C13477 + C13476) * C50837) *
                C50765 * C8148 +
            ((C13479 + C13478) * C1356 - (C13483 * C1350 + C13482 * C1355) +
             (C13481 + C13480) * C50837) *
                C50765 * C8149) *
               C51046 +
           (((C5702 + C5703) * C1355 + (C5704 + C5705) * C1350 -
             (C7069 + C7068) * C1356 - (C7071 + C7070) * C50837) *
                C50765 * C8147 +
            ((C7068 + C7069) * C1355 + (C7070 + C7071) * C1350 -
             (C14400 + C14401) * C1356 - (C14402 + C14403) * C50837) *
                C50765 * C8148 +
            ((C14401 + C14400) * C1355 + (C14403 + C14402) * C1350 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C1356 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C50837) *
                C50765 * C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1483 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C51087 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C1484 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C1479) *
               C2434 +
           ((C5315 + C5316) * C1482 + (C5317 + C5318) * C51099 -
            (C5513 + C5514) * C1483 - (C5515 + C5516) * C51087 +
            (C5881 + C5882) * C1484 + (C5883 + C5884) * C1479) *
               C2435 +
           (C5331 * C1482 + C5332 * C51099 - C5526 * C1483 - C5527 * C51087 +
            (C5885 + C5886) * C1484 + (C5887 + C5888) * C1479) *
               C2436) *
              C50924 * C50787 * C1765 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C1483 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51099 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1482) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C51087 -
            (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                C1484 -
            (C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                C1479) *
               C2434 +
           ((C7068 + C7069) * C1483 -
            ((C5705 + C5704) * C51099 + (C5703 + C5702) * C1482) +
            (C7070 + C7071) * C51087 -
            (C5281 * C3552 + C50962 * C3556 + C5280 * C878 + C51068 * C889) *
                C1484 -
            (C5281 * C3557 + C50962 * C3561 + C5280 * C890 + C51068 * C902) *
                C1479) *
               C2435 +
           ((C7072 + C7073) * C1483 - (C5714 * C51099 + C5715 * C1482) +
            (C7074 + C7075) * C51087 -
            (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                C1484 -
            (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                C1479) *
               C2436) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1482 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51099 -
            (C12860 + C12861) * C1483 - (C12862 + C12863) * C51087 +
            C13160 * C1484 + C13161 * C1479) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1482 + (C12863 + C12862) * C51099 -
            (C12864 + C12865) * C1483 - (C12866 + C12867) * C51087 +
            (C13180 + C13181) * C1484 + (C13182 + C13183) * C1479) *
               C50765 * C8148 +
           (C13160 * C1482 + C13161 * C51099 - C13286 * C1483 -
            C13287 * C51087 + (C13297 + C13296) * C1484 +
            (C13299 + C13298) * C1479) *
               C50765 * C8149) *
              C50787 * C1765 +
          (((C13470 + C13471) * C1483 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51099 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1482) +
            (C13472 + C13473) * C51087 - C13482 * C1484 - C13483 * C1479) *
               C50765 * C8147 +
           ((C13475 + C13474) * C1483 -
            ((C13473 + C13472) * C51099 + (C13471 + C13470) * C1482) +
            (C13477 + C13476) * C51087 - (C13478 + C13479) * C1484 -
            (C13480 + C13481) * C1479) *
               C50765 * C8148 +
           ((C13479 + C13478) * C1483 - (C13483 * C51099 + C13482 * C1482) +
            (C13481 + C13480) * C51087 -
            (C5281 * C11541 + C50962 * C11542 + C5280 * C8876 +
             C51068 * C8878) *
                C1484 -
            (C5281 * C11543 + C50962 * C11544 + C5280 * C8879 +
             C51068 * C8882) *
                C1479) *
               C50765 * C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C1356 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C1355 + (C5317 + C5318) * C1350 -
            (C5513 + C5514) * C1356 - (C5515 + C5516) * C50837) *
               C2435 +
           C6711 * C2436) *
              C50924 * C50787 * C51100 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C1356 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C1350 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1355) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C50837) *
               C2434 +
           ((C7068 + C7069) * C1356 -
            ((C5705 + C5704) * C1350 + (C5703 + C5702) * C1355) +
            (C7070 + C7071) * C50837) *
               C2435 +
           ((C7072 + C7073) * C1356 - (C5714 * C1350 + C5715 * C1355) +
            (C7074 + C7075) * C50837) *
               C2436) *
              C50924 * C50787 * C51090 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C1355 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C1350 -
            (C5281 * C3669 + C50962 * C3675 + C5280 * C1150 + C51068 * C1154) *
                C1356 -
            (C5281 * C3674 + C50962 * C3678 + C5280 * C1155 + C51068 * C1162) *
                C50837) *
               C2434 +
           ((C6295 + C6296) * C1355 + (C6297 + C6298) * C1350 -
            (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                C1356 -
            (C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                C50837) *
               C2435 +
           ((C6299 + C6300) * C1355 + (C6301 + C6302) * C1350 -
            (C5281 * C3667 + C50962 * C3671 + C5280 * C1152 + C51068 * C1158) *
                C1356 -
            (C5281 * C3670 + C50962 * C3676 + C5280 * C1159 + C51068 * C1164) *
                C50837) *
               C2436) *
              C50924 * C50787 * C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C1355 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C1350 -
            (C12860 + C12861) * C1356 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C1355 + (C12863 + C12862) * C1350 -
            (C12864 + C12865) * C1356 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           (C13160 * C1355 + C13161 * C1350 - C13286 * C1356 -
            C13287 * C50837) *
               C50765 * C8149) *
              C50787 * C51100 +
          (((C13470 + C13471) * C1356 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C1350 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C1355) +
            (C13472 + C13473) * C50837) *
               C50765 * C8147 +
           ((C13475 + C13474) * C1356 -
            ((C13473 + C13472) * C1350 + (C13471 + C13470) * C1355) +
            (C13477 + C13476) * C50837) *
               C50765 * C8148 +
           ((C13479 + C13478) * C1356 - (C13483 * C1350 + C13482 * C1355) +
            (C13481 + C13480) * C50837) *
               C50765 * C8149) *
              C50787 * C51090 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C1355 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C1350 -
            (C13792 + C13793) * C1356 - (C13794 + C13795) * C50837) *
               C50765 * C8147 +
           ((C13793 + C13792) * C1355 + (C13795 + C13794) * C1350 -
            (C13796 + C13797) * C1356 - (C13798 + C13799) * C50837) *
               C50765 * C8148 +
           ((C13797 + C13796) * C1355 + (C13799 + C13798) * C1350 -
            (C5281 * C11617 + C50962 * C11619 + C5280 * C9196 +
             C51068 * C9198) *
                C1356 -
            (C5281 * C11618 + C50962 * C11620 + C5280 * C9199 +
             C51068 * C9202) *
                C50837) *
               C50765 * C8149) *
              C50787 * C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C628 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C623 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C629 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C624) *
               C2434 +
           ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
            (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
            (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
               C2435 +
           (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
            (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
               C2436) *
              C50924 * C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - (C5882 + C5881) * C629 -
            (C5884 + C5883) * C624) *
               C2434 +
           ((C5519 + C5518) * C628 -
            ((C5322 + C5321) * C622 + (C5320 + C5319) * C627) +
            (C5521 + C5520) * C623 - (C5886 + C5885) * C629 -
            (C5888 + C5887) * C624) *
               C2435 +
           ((C5522 + C5523) * C628 - (C5333 * C622 + C5334 * C627) +
            (C5524 + C5525) * C623 -
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C629 -
            (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C624) *
               C2436) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C2434 +
           ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
           C5339 * C2436) *
              C50924 * C112 -
          (C5340 * C2436 +
           ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
              C50924 * C113 +
          (C5339 * C2434 +
           ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
           ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
              C50924 * C114 -
          (((C5281 * C482 + C50962 * C489 + C5280 * C137 + C51068 * C145) *
                C50821 +
            (C5281 * C471 + C50962 * C483 + C5280 * C124 + C51068 * C136) *
                C118) *
               C2436 +
           ((C5330 + C5329) * C50821 + (C5328 + C5327) * C118) * C2435 +
           C5340 * C2434) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C51046 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C50792) *
              C1005 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C50792 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C51046) *
              C1006 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C2434 +
            ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C2435 +
            ((C6299 + C6300) * C118 + (C6301 + C6302) * C50821) * C2436) *
               C50924 * C51046 -
           (((C5281 * C1240 + C50962 * C1248 + C5280 * C1020 + C51068 * C1026) *
                 C50821 +
             (C5281 * C1236 + C50962 * C1241 + C5280 * C1011 + C51068 * C1019) *
                 C118) *
                C2436 +
            ((C6302 + C6301) * C50821 + (C6300 + C6299) * C118) * C2435 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C2434) *
               C50924 * C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C8147 +
           ((C5280 * C296 + C51068 * C302 + C5281 * C875 + C50962 * C883) *
                C118 +
            (C5280 * C303 + C51068 * C314 + C5281 * C884 + C50962 * C899) *
                C50821) *
               C50765 * C8148 +
           ((C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C118 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C50821) *
               C50765 * C8149) *
              C112 -
          (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
               C8149 +
           ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
               C8148 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
               C8147) *
              C113 +
          (C5339 * C50765 * C8147 +
           ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
               C8148 +
           ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
               C8149) *
              C114 -
          (((C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C50821 +
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C118) *
               C50765 * C8149 +
           ((C5525 + C5524) * C50821 + (C5523 + C5522) * C118) * C50765 *
               C8148 +
           C5340 * C50765 * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - (C13181 + C13180) * C628 -
            (C13183 + C13182) * C623 +
            (C5280 * C3043 + C51068 * C3046 + C5281 * C8876 + C50962 * C8878) *
                C629 +
            (C5280 * C3047 + C51068 * C3052 + C5281 * C8879 + C50962 * C8882) *
                C624) *
               C50765 * C8149) *
              C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - C13170 * C629 - C13171 * C624) *
               C50765 * C8147 +
           ((C5881 + C5882) * C628 -
            ((C5515 + C5516) * C622 + (C5513 + C5514) * C627) +
            (C5883 + C5884) * C623 - (C13184 + C13185) * C629 -
            (C13186 + C13187) * C624) *
               C50765 * C8148 +
           ((C13185 + C13184) * C628 - (C13171 * C622 + C13170 * C627) +
            (C13187 + C13186) * C623 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C629 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C624) *
               C50765 * C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
               C51046 -
           ((C13171 * C50821 + C13170 * C118) * C50765 * C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C50792) *
              C1005 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C5280 * C878 + C51068 * C889 + C5281 * C3552 + C50962 * C3556) *
                 C118 +
             (C5280 * C890 + C51068 * C902 + C5281 * C3557 + C50962 * C3561) *
                 C50821) *
                C50765 * C8149) *
               C50792 -
           ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
                C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C51046) *
              C1006 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C50765 * C8147 +
            ((C5280 * C1150 + C51068 * C1154 + C5281 * C3669 + C50962 * C3675) *
                 C118 +
             (C5280 * C1155 + C51068 * C1162 + C5281 * C3674 + C50962 * C3678) *
                 C50821) *
                C50765 * C8148 +
            ((C5280 * C3551 + C51068 * C3554 + C5281 * C9309 + C50962 * C9313) *
                 C118 +
             (C5280 * C3555 + C51068 * C3560 + C5281 * C9312 + C50962 * C9315) *
                 C50821) *
                C50765 * C8149) *
               C51046 -
           (((C5281 * C9310 + C50962 * C9314 + C5280 * C3557 + C51068 * C3561) *
                 C50821 +
             (C5281 * C9308 + C50962 * C9311 + C5280 * C3552 + C51068 * C3556) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                 C50821 +
             (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                 C118) *
                C50765 * C8148 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C50765 *
                C8147) *
               C50792) *
              C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
               C758 -
           (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
               C753 +
           (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
               C759 +
           (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
               C754 -
           (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
               C760 -
           (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
               C755) *
              C2434 +
          ((C5315 + C5316) * C757 + (C5317 + C5318) * C752 -
           (C5513 + C5514) * C758 - (C5515 + C5516) * C753 +
           (C5881 + C5882) * C759 + (C5883 + C5884) * C754 -
           (C5281 * C3208 + C50962 * C3212 + C5280 * C762 + C51068 * C767) *
               C760 -
           (C5281 * C3213 + C50962 * C3217 + C5280 * C768 + C51068 * C774) *
               C755) *
              C2435 +
          (C5331 * C757 + C5332 * C752 - C5526 * C758 - C5527 * C753 +
           (C5885 + C5886) * C759 + (C5887 + C5888) * C754 -
           (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
               C760 -
           (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
               C755) *
              C2436) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C295 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
            (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
               C2435 +
           C5531 * C2436) *
              C50924 * C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C2434 +
           ((C5519 + C5518) * C295 -
            ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
            (C5521 + C5520) * C50837) *
               C2435 +
           ((C5522 + C5523) * C295 - (C5333 * C51053 + C5334 * C294) +
            (C5524 + C5525) * C50837) *
               C2436) *
              C50924 * C292 +
          (C5531 * C2434 +
           ((C5326 + C5325) * C294 + (C5324 + C5323) * C51053 -
            (C5523 + C5522) * C295 - (C5525 + C5524) * C50837) *
               C2435 +
           ((C5327 + C5328) * C294 + (C5329 + C5330) * C51053 -
            (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                C295 -
            (C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                C50837) *
               C2436) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C295 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
            (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
               C2435 +
           C5531 * C2436) *
              C50924 * C50787 * C1005 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C295 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51053 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C294) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C50837) *
               C2434 +
           ((C5280 * C877 + C51068 * C887 + C5281 * C1151 + C50962 * C1156) *
                C295 -
            ((C5705 + C5704) * C51053 + (C5703 + C5702) * C294) +
            (C5280 * C888 + C51068 * C901 + C5281 * C1157 + C50962 * C1163) *
                C50837) *
               C2435 +
           ((C5280 * C879 + C51068 * C891 + C5281 * C1152 + C50962 * C1158) *
                C295 -
            (C5714 * C51053 + C5715 * C294) +
            (C5280 * C892 + C51068 * C903 + C5281 * C1159 + C50962 * C1164) *
                C50837) *
               C2436) *
              C50924 * C50787 * C1006 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C294 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C51053 -
            (C5281 * C3669 + C50962 * C3675 + C5280 * C1150 + C51068 * C1154) *
                C295 -
            (C5281 * C3674 + C50962 * C3678 + C5280 * C1155 + C51068 * C1162) *
                C50837) *
               C2434 +
           ((C6295 + C6296) * C294 + (C6297 + C6298) * C51053 -
            (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                C295 -
            (C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                C50837) *
               C2435 +
           ((C6299 + C6300) * C294 + (C6301 + C6302) * C51053 -
            (C5281 * C3667 + C50962 * C3671 + C5280 * C1152 + C51068 * C1158) *
                C295 -
            (C5281 * C3670 + C50962 * C3676 + C5280 * C1159 + C51068 * C1164) *
                C50837) *
               C2436) *
              C50924 * C50787 * C1007)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
            (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           ((C12865 + C12864) * C294 + (C12867 + C12866) * C51053 -
            (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
                C295 -
            (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
                C50837) *
               C50765 * C8149) *
              C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C50765 * C8147 +
           ((C5881 + C5882) * C295 -
            ((C5515 + C5516) * C51053 + (C5513 + C5514) * C294) +
            (C5883 + C5884) * C50837) *
               C50765 * C8148 +
           ((C5280 * C762 + C51068 * C767 + C5281 * C3208 + C50962 * C3212) *
                C295 -
            ((C5884 + C5883) * C51053 + (C5882 + C5881) * C294) +
            (C5280 * C768 + C51068 * C774 + C5281 * C3213 + C50962 * C3217) *
                C50837) *
               C50765 * C8149) *
              C292 +
          (C5531 * C50765 * C8147 +
           ((C5519 + C5518) * C294 + (C5521 + C5520) * C51053 -
            (C5886 + C5885) * C295 - (C5888 + C5887) * C50837) *
               C50765 * C8148 +
           ((C5885 + C5886) * C294 + (C5887 + C5888) * C51053 -
            (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                C295 -
            (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                C50837) *
               C50765 * C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C12860 + C12861) * C758 - (C12862 + C12863) * C753 + C13160 * C759 +
           C13161 * C754 - C13286 * C760 - C13287 * C755) *
              C50765 * C8147 +
          ((C12861 + C12860) * C757 + (C12863 + C12862) * C752 -
           (C12864 + C12865) * C758 - (C12866 + C12867) * C753 +
           (C13180 + C13181) * C759 + (C13182 + C13183) * C754 -
           (C13296 + C13297) * C760 - (C13298 + C13299) * C755) *
              C50765 * C8148 +
          (C13160 * C757 + C13161 * C752 - C13286 * C758 - C13287 * C753 +
           (C13297 + C13296) * C759 + (C13299 + C13298) * C754 -
           (C5281 * C11335 + C50962 * C11336 + C5280 * C8716 + C51068 * C8718) *
               C760 -
           (C5281 * C11337 + C50962 * C11338 + C5280 * C8719 + C51068 * C8722) *
               C755) *
              C50765 * C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
            (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           (C13160 * C294 + C13161 * C51053 - C13286 * C295 - C13287 * C50837) *
               C50765 * C8149) *
              C50787 * C1005 +
          (((C13470 + C13471) * C295 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C51053 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C294) +
            (C13472 + C13473) * C50837) *
               C50765 * C8147 +
           ((C13475 + C13474) * C295 -
            ((C13473 + C13472) * C51053 + (C13471 + C13470) * C294) +
            (C13477 + C13476) * C50837) *
               C50765 * C8148 +
           ((C13479 + C13478) * C295 - (C13483 * C51053 + C13482 * C294) +
            (C13481 + C13480) * C50837) *
               C50765 * C8149) *
              C50787 * C1006 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C294 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C51053 -
            (C13792 + C13793) * C295 - (C13794 + C13795) * C50837) *
               C50765 * C8147 +
           ((C13793 + C13792) * C294 + (C13795 + C13794) * C51053 -
            (C13796 + C13797) * C295 - (C13798 + C13799) * C50837) *
               C50765 * C8148 +
           ((C13797 + C13796) * C294 + (C13799 + C13798) * C51053 -
            (C5281 * C11617 + C50962 * C11619 + C5280 * C9196 +
             C51068 * C9198) *
                C295 -
            (C5281 * C11618 + C50962 * C11620 + C5280 * C9199 +
             C51068 * C9202) *
                C50837) *
               C50765 * C8149) *
              C50787 * C1007)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C628 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C623 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C629 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C624) *
               C2434 +
           ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
            (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
            (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
               C2435 +
           (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
            (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
               C2436) *
              C50924 * C50787 * C51055 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C623 -
            (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                C629 -
            (C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                C624) *
               C2434 +
           ((C5280 * C877 + C51068 * C887 + C5281 * C1151 + C50962 * C1156) *
                C628 -
            ((C5705 + C5704) * C622 + (C5703 + C5702) * C627) +
            (C5280 * C888 + C51068 * C901 + C5281 * C1157 + C50962 * C1163) *
                C623 -
            (C5281 * C3552 + C50962 * C3556 + C5280 * C878 + C51068 * C889) *
                C629 -
            (C5281 * C3557 + C50962 * C3561 + C5280 * C890 + C51068 * C902) *
                C624) *
               C2435 +
           ((C5280 * C879 + C51068 * C891 + C5281 * C1152 + C50962 * C1158) *
                C628 -
            (C5714 * C622 + C5715 * C627) +
            (C5280 * C892 + C51068 * C903 + C5281 * C1159 + C50962 * C1164) *
                C623 -
            (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                C629 -
            (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                C624) *
               C2436) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C291 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C292 +
           (C5339 * C2434 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
            ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
               C50924 * C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C292 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C291 -
           (((C5281 * C1021 + C50962 * C1027 + C5280 * C479 + C51068 * C487) *
                 C50821 +
             (C5281 * C1012 + C50962 * C1022 + C5280 * C469 + C51068 * C478) *
                 C118) *
                C2436 +
            ((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C2435 +
            C5718 * C2434) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C2434 +
           ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
           C5339 * C2436) *
              C50924 * C50787 * C1232 -
          (C5718 * C2436 +
           ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
           ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                C50821 +
            (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                C118) *
               C2434) *
              C50924 * C50787 * C1233 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C118 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C50821) *
               C2434 +
           ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C2435 +
           ((C6299 + C6300) * C118 + (C6301 + C6302) * C50821) * C2436) *
              C50924 * C50787 * C1234 -
          (((C5281 * C6549 + C50962 * C6555 + C5280 * C1242 + C51068 * C1249) *
                C50821 +
            (C5281 * C6546 + C50962 * C6550 + C5280 * C1237 + C51068 * C1243) *
                C118) *
               C2436 +
           ((C5281 * C6551 + C50962 * C6556 + C5280 * C1244 + C51068 * C1250) *
                C50821 +
            (C5281 * C6547 + C50962 * C6552 + C5280 * C1238 + C51068 * C1245) *
                C118) *
               C2435 +
           ((C5281 * C6553 + C50962 * C6557 + C5280 * C1246 + C51068 * C1251) *
                C50821 +
            (C5281 * C6548 + C50962 * C6554 + C5280 * C1239 + C51068 * C1247) *
                C118) *
               C2434) *
              C50924 * C50787 * C1235)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            ((C12865 + C12864) * C118 + (C12867 + C12866) * C50821) * C50765 *
                C8149) *
               C291 -
           (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
                C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C292 +
           (C5339 * C50765 * C8147 +
            ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
                C8148 +
            ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
                C8149) *
               C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C5280 * C878 + C51068 * C889 + C5281 * C3552 + C50962 * C3556) *
                 C118 +
             (C5280 * C890 + C51068 * C902 + C5281 * C3557 + C50962 * C3561) *
                 C50821) *
                C50765 * C8149) *
               C292 -
           (((C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                 C50821 +
             (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C1155 + C50962 * C1162 + C5280 * C884 + C51068 * C899) *
                 C50821 +
             (C5281 * C1150 + C50962 * C1154 + C5280 * C875 + C51068 * C883) *
                 C118) *
                C50765 * C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C291 -
           (((C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                 C50821 +
             (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                 C118) *
                C50765 * C8149 +
            ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C50765 *
                C8148 +
            C5718 * C50765 * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - C13286 * C628 - C13287 * C623 +
            (C13297 + C13296) * C629 + (C13299 + C13298) * C624) *
               C50765 * C8149) *
              C50787 * C51055 +
          (((C13470 + C13471) * C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C13472 + C13473) * C623 - C13482 * C629 - C13483 * C624) *
               C50765 * C8147 +
           ((C13475 + C13474) * C628 -
            ((C13473 + C13472) * C622 + (C13471 + C13470) * C627) +
            (C13477 + C13476) * C623 - (C13478 + C13479) * C629 -
            (C13480 + C13481) * C624) *
               C50765 * C8148 +
           ((C13479 + C13478) * C628 - (C13483 * C622 + C13482 * C627) +
            (C13481 + C13480) * C623 -
            (C5281 * C11541 + C50962 * C11542 + C5280 * C8876 +
             C51068 * C8878) *
                C629 -
            (C5281 * C11543 + C50962 * C11544 + C5280 * C8879 +
             C51068 * C8882) *
                C624) *
               C50765 * C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C8147 +
           ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
               C8148 +
           (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
              C50787 * C1232 -
          ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
           ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
               C8148 +
           ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                C50821 +
            (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                C118) *
               C50765 * C8147) *
              C50787 * C1233 +
          (((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                C118 +
            (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                C50821) *
               C50765 * C8147 +
           ((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C50765 *
               C8148 +
           ((C13797 + C13796) * C118 + (C13799 + C13798) * C50821) * C50765 *
               C8149) *
              C50787 * C1234 -
          (((C5281 * C13899 + C50962 * C13903 + C5280 * C9312 +
             C51068 * C9315) *
                C50821 +
            (C5281 * C13897 + C50962 * C13900 + C5280 * C9309 +
             C51068 * C9313) *
                C118) *
               C50765 * C8149 +
           ((C5281 * C13901 + C50962 * C13904 + C5280 * C3674 +
             C51068 * C3678) *
                C50821 +
            (C5281 * C13898 + C50962 * C13902 + C5280 * C3669 +
             C51068 * C3675) *
                C118) *
               C50765 * C8148 +
           ((C5281 * C6553 + C50962 * C6557 + C5280 * C1246 + C51068 * C1251) *
                C50821 +
            (C5281 * C6548 + C50962 * C6554 + C5280 * C1239 + C51068 * C1247) *
                C118) *
               C50765 * C8147) *
              C50787 * C1235)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C51098 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C51084 +
           (C5339 * C2434 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
            ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
               C50924 * C1354) *
              C1765 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C51084 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C51098 -
           (((C5281 * C1021 + C50962 * C1027 + C5280 * C479 + C51068 * C487) *
                 C50821 +
             (C5281 * C1012 + C50962 * C1022 + C5280 * C469 + C51068 * C478) *
                 C118) *
                C2436 +
            ((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C2435 +
            C5718 * C2434) *
               C50924 * C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
               C51098 -
           ((C13171 * C50821 + C13170 * C118) * C50765 * C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C51084 +
           (C5339 * C50765 * C8147 +
            ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
                C8148 +
            ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
                C8149) *
               C1354) *
              C1765 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C14401 + C14400) * C118 + (C14403 + C14402) * C50821) * C50765 *
                C8149) *
               C51084 -
           ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
                C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C51098 -
           (((C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                 C50821 +
             (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                 C118) *
                C50765 * C8149 +
            ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C50765 *
                C8148 +
            C5718 * C50765 * C8147) *
               C1354) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                 C295 -
             (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                 C50837) *
                C2434 +
            ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
             (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
                C2435 +
            C5531 * C2436) *
               C50924 * C1480 +
           (((C5514 + C5513) * C295 -
             ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
             (C5516 + C5515) * C50837) *
                C2434 +
            ((C5519 + C5518) * C295 -
             ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
             (C5521 + C5520) * C50837) *
                C2435 +
            ((C5522 + C5523) * C295 - (C5333 * C51053 + C5334 * C294) +
             (C5524 + C5525) * C50837) *
                C2436) *
               C50924 * C50792) *
              C1765 +
          ((((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                 C295 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C51053 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C294) +
             (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                 C50837) *
                C2434 +
            ((C7068 + C7069) * C295 -
             ((C5705 + C5704) * C51053 + (C5703 + C5702) * C294) +
             (C7070 + C7071) * C50837) *
                C2435 +
            ((C7072 + C7073) * C295 - (C5714 * C51053 + C5715 * C294) +
             (C7074 + C7075) * C50837) *
                C2436) *
               C50924 * C1480 +
           (((C5702 + C5703) * C294 + (C5704 + C5705) * C51053 -
             (C7069 + C7068) * C295 - (C7071 + C7070) * C50837) *
                C2434 +
            ((C5706 + C5707) * C294 + (C5708 + C5709) * C51053 -
             (C7073 + C7072) * C295 - (C7075 + C7074) * C50837) *
                C2435 +
            ((C5710 + C5711) * C294 + (C5712 + C5713) * C51053 -
             (C5281 * C1153 + C50962 * C1160 + C5280 * C881 + C51068 * C895) *
                 C295 -
             (C5281 * C1161 + C50962 * C1165 + C5280 * C896 + C51068 * C905) *
                 C50837) *
                C2436) *
               C50924 * C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C294 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C51053 -
             (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
                C50765 * C8147 +
            ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
             (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
                C50765 * C8148 +
            (C13160 * C294 + C13161 * C51053 - C13286 * C295 -
             C13287 * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5514 + C5513) * C295 -
             ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
             (C5516 + C5515) * C50837) *
                C50765 * C8147 +
            ((C5881 + C5882) * C295 -
             ((C5515 + C5516) * C51053 + (C5513 + C5514) * C294) +
             (C5883 + C5884) * C50837) *
                C50765 * C8148 +
            ((C13185 + C13184) * C295 - (C13171 * C51053 + C13170 * C294) +
             (C13187 + C13186) * C50837) *
                C50765 * C8149) *
               C50792) *
              C1765 +
          ((((C13470 + C13471) * C295 -
             ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                  C51053 +
              (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                  C294) +
             (C13472 + C13473) * C50837) *
                C50765 * C8147 +
            ((C13475 + C13474) * C295 -
             ((C13473 + C13472) * C51053 + (C13471 + C13470) * C294) +
             (C13477 + C13476) * C50837) *
                C50765 * C8148 +
            ((C13479 + C13478) * C295 - (C13483 * C51053 + C13482 * C294) +
             (C13481 + C13480) * C50837) *
                C50765 * C8149) *
               C1480 +
           (((C5702 + C5703) * C294 + (C5704 + C5705) * C51053 -
             (C7069 + C7068) * C295 - (C7071 + C7070) * C50837) *
                C50765 * C8147 +
            ((C7068 + C7069) * C294 + (C7070 + C7071) * C51053 -
             (C14400 + C14401) * C295 - (C14402 + C14403) * C50837) *
                C50765 * C8148 +
            ((C14401 + C14400) * C294 + (C14403 + C14402) * C51053 -
             (C5281 * C9197 + C50962 * C9200 + C5280 * C3208 + C51068 * C3212) *
                 C295 -
             (C5281 * C9201 + C50962 * C9203 + C5280 * C3213 + C51068 * C3217) *
                 C50837) *
                C50765 * C8149) *
               C50792) *
              C50863)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C1480 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C50792) *
              C51100 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C50792 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C1480) *
              C51090 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C2434 +
            ((C6295 + C6296) * C118 + (C6297 + C6298) * C50821) * C2435 +
            ((C6299 + C6300) * C118 + (C6301 + C6302) * C50821) * C2436) *
               C50924 * C1480 -
           (((C5281 * C1240 + C50962 * C1248 + C5280 * C1020 + C51068 * C1026) *
                 C50821 +
             (C5281 * C1236 + C50962 * C1241 + C5280 * C1011 + C51068 * C1019) *
                 C118) *
                C2436 +
            ((C6302 + C6301) * C50821 + (C6300 + C6299) * C118) * C2435 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C2434) *
               C50924 * C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            (C13160 * C118 + C13161 * C50821) * C50765 * C8149) *
               C1480 -
           ((C13171 * C50821 + C13170 * C118) * C50765 * C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C50792) *
              C51100 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C14401 + C14400) * C118 + (C14403 + C14402) * C50821) * C50765 *
                C8149) *
               C50792 -
           ((C13483 * C50821 + C13482 * C118) * C50765 * C8149 +
            ((C13473 + C13472) * C50821 + (C13471 + C13470) * C118) * C50765 *
                C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C1480) *
              C51090 +
          ((((C5280 * C1008 + C51068 * C1013 + C5281 * C1239 + C50962 * C1247) *
                 C118 +
             (C5280 * C1014 + C51068 * C1023 + C5281 * C1246 + C50962 * C1251) *
                 C50821) *
                C50765 * C8147 +
            ((C13793 + C13792) * C118 + (C13795 + C13794) * C50821) * C50765 *
                C8148 +
            ((C13797 + C13796) * C118 + (C13799 + C13798) * C50821) * C50765 *
                C8149) *
               C1480 -
           (((C5281 * C9310 + C50962 * C9314 + C5280 * C3557 + C51068 * C3561) *
                 C50821 +
             (C5281 * C9308 + C50962 * C9311 + C5280 * C3552 + C51068 * C3556) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C3672 + C50962 * C3677 + C5280 * C1157 + C51068 * C1163) *
                 C50821 +
             (C5281 * C3668 + C50962 * C3673 + C5280 * C1151 + C51068 * C1156) *
                 C118) *
                C50765 * C8148 +
            ((C6298 + C6297) * C50821 + (C6296 + C6295) * C118) * C50765 *
                C8147) *
               C50792) *
              C2009)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C2434 +
           ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
           C5339 * C2436) *
              C50924 * C112 -
          (C5340 * C2436 +
           ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
              C50924 * C113 +
          (C5339 * C2434 +
           ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
           ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
              C50924 * C114 -
          (((C5281 * C482 + C50962 * C489 + C5280 * C137 + C51068 * C145) *
                C50821 +
            (C5281 * C471 + C50962 * C483 + C5280 * C124 + C51068 * C136) *
                C118) *
               C2436 +
           ((C5330 + C5329) * C50821 + (C5328 + C5327) * C118) * C2435 +
           C5340 * C2434) *
              C50924 * C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C628 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C623 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C629 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C624) *
               C2434 +
           ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
            (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
            (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
               C2435 +
           (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
            (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
               C2436) *
              C50924 * C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - (C5882 + C5881) * C629 -
            (C5884 + C5883) * C624) *
               C2434 +
           ((C5519 + C5518) * C628 -
            ((C5322 + C5321) * C622 + (C5320 + C5319) * C627) +
            (C5521 + C5520) * C623 - (C5886 + C5885) * C629 -
            (C5888 + C5887) * C624) *
               C2435 +
           ((C5522 + C5523) * C628 - (C5333 * C622 + C5334 * C627) +
            (C5524 + C5525) * C623 -
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C629 -
            (C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C624) *
               C2436) *
              C50924 * C50792) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C118 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C50821) *
               C50765 * C8147 +
           ((C5280 * C296 + C51068 * C302 + C5281 * C875 + C50962 * C883) *
                C118 +
            (C5280 * C303 + C51068 * C314 + C5281 * C884 + C50962 * C899) *
                C50821) *
               C50765 * C8148 +
           ((C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C118 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C50821) *
               C50765 * C8149) *
              C112 -
          (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
               C8149 +
           ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
               C8148 +
           ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
               C8147) *
              C113 +
          (C5339 * C50765 * C8147 +
           ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
               C8148 +
           ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
               C8149) *
              C114 -
          (((C5281 * C898 + C50962 * C906 + C5280 * C642 + C51068 * C648) *
                C50821 +
            (C5281 * C882 + C50962 * C897 + C5280 * C633 + C51068 * C641) *
                C118) *
               C50765 * C8149 +
           ((C5525 + C5524) * C50821 + (C5523 + C5522) * C118) * C50765 *
               C8148 +
           C5340 * C50765 * C8147) *
              C115) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - (C13181 + C13180) * C628 -
            (C13183 + C13182) * C623 +
            (C5280 * C3043 + C51068 * C3046 + C5281 * C8876 + C50962 * C8878) *
                C629 +
            (C5280 * C3047 + C51068 * C3052 + C5281 * C8879 + C50962 * C8882) *
                C624) *
               C50765 * C8149) *
              C51046 +
          (((C5514 + C5513) * C628 -
            ((C5318 + C5317) * C622 + (C5316 + C5315) * C627) +
            (C5516 + C5515) * C623 - C13170 * C629 - C13171 * C624) *
               C50765 * C8147 +
           ((C5881 + C5882) * C628 -
            ((C5515 + C5516) * C622 + (C5513 + C5514) * C627) +
            (C5883 + C5884) * C623 - (C13184 + C13185) * C629 -
            (C13186 + C13187) * C624) *
               C50765 * C8148 +
           ((C13185 + C13184) * C628 - (C13171 * C622 + C13170 * C627) +
            (C13187 + C13186) * C623 -
            (C5281 * C8877 + C50962 * C8880 + C5280 * C3044 + C51068 * C3048) *
                C629 -
            (C5281 * C8881 + C50962 * C8883 + C5280 * C3049 + C51068 * C3053) *
                C624) *
               C50765 * C8149) *
              C50792) *
         C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C295 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C50837) *
               C2434 +
           ((C5315 + C5316) * C294 + (C5317 + C5318) * C51053 -
            (C5513 + C5514) * C295 - (C5515 + C5516) * C50837) *
               C2435 +
           C5531 * C2436) *
              C50924 * C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C2434 +
           ((C5519 + C5518) * C295 -
            ((C5322 + C5321) * C51053 + (C5320 + C5319) * C294) +
            (C5521 + C5520) * C50837) *
               C2435 +
           ((C5522 + C5523) * C295 - (C5333 * C51053 + C5334 * C294) +
            (C5524 + C5525) * C50837) *
               C2436) *
              C50924 * C292 +
          (C5531 * C2434 +
           ((C5326 + C5325) * C294 + (C5324 + C5323) * C51053 -
            (C5523 + C5522) * C295 - (C5525 + C5524) * C50837) *
               C2435 +
           ((C5327 + C5328) * C294 + (C5329 + C5330) * C51053 -
            (C5281 * C1633 + C50962 * C1634 + C5280 * C300 + C51068 * C310) *
                C295 -
            (C5281 * C1635 + C50962 * C1636 + C5280 * C311 + C51068 * C318) *
                C50837) *
               C2436) *
              C50924 * C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
               C758 -
           (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
               C753 +
           (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
               C759 +
           (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
               C754 -
           (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
               C760 -
           (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
               C755) *
              C2434 +
          ((C5315 + C5316) * C757 + (C5317 + C5318) * C752 -
           (C5513 + C5514) * C758 - (C5515 + C5516) * C753 +
           (C5881 + C5882) * C759 + (C5883 + C5884) * C754 -
           (C5281 * C3208 + C50962 * C3212 + C5280 * C762 + C51068 * C767) *
               C760 -
           (C5281 * C3213 + C50962 * C3217 + C5280 * C768 + C51068 * C774) *
               C755) *
              C2435 +
          (C5331 * C757 + C5332 * C752 - C5526 * C758 - C5527 * C753 +
           (C5885 + C5886) * C759 + (C5887 + C5888) * C754 -
           (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
               C760 -
           (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
               C755) *
              C2436) *
         C50924 * C50787 * C50851) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C294 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C51053 -
            (C12860 + C12861) * C295 - (C12862 + C12863) * C50837) *
               C50765 * C8147 +
           ((C12861 + C12860) * C294 + (C12863 + C12862) * C51053 -
            (C12864 + C12865) * C295 - (C12866 + C12867) * C50837) *
               C50765 * C8148 +
           ((C12865 + C12864) * C294 + (C12867 + C12866) * C51053 -
            (C5281 * C3207 + C50962 * C3210 + C5280 * C761 + C51068 * C765) *
                C295 -
            (C5281 * C3211 + C50962 * C3216 + C5280 * C766 + C51068 * C773) *
                C50837) *
               C50765 * C8149) *
              C291 +
          (((C5514 + C5513) * C295 -
            ((C5318 + C5317) * C51053 + (C5316 + C5315) * C294) +
            (C5516 + C5515) * C50837) *
               C50765 * C8147 +
           ((C5881 + C5882) * C295 -
            ((C5515 + C5516) * C51053 + (C5513 + C5514) * C294) +
            (C5883 + C5884) * C50837) *
               C50765 * C8148 +
           ((C5280 * C762 + C51068 * C767 + C5281 * C3208 + C50962 * C3212) *
                C295 -
            ((C5884 + C5883) * C51053 + (C5882 + C5881) * C294) +
            (C5280 * C768 + C51068 * C774 + C5281 * C3213 + C50962 * C3217) *
                C50837) *
               C50765 * C8149) *
              C292 +
          (C5531 * C50765 * C8147 +
           ((C5519 + C5518) * C294 + (C5521 + C5520) * C51053 -
            (C5886 + C5885) * C295 - (C5888 + C5887) * C50837) *
               C50765 * C8148 +
           ((C5885 + C5886) * C294 + (C5887 + C5888) * C51053 -
            (C5281 * C3209 + C50962 * C3214 + C5280 * C763 + C51068 * C769) *
                C295 -
            (C5281 * C3215 + C50962 * C3218 + C5280 * C770 + C51068 * C775) *
                C50837) *
               C50765 * C8149) *
              C293) *
         C50851) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
               C757 +
           (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
               C752 -
           (C12860 + C12861) * C758 - (C12862 + C12863) * C753 + C13160 * C759 +
           C13161 * C754 - C13286 * C760 - C13287 * C755) *
              C50765 * C8147 +
          ((C12861 + C12860) * C757 + (C12863 + C12862) * C752 -
           (C12864 + C12865) * C758 - (C12866 + C12867) * C753 +
           (C13180 + C13181) * C759 + (C13182 + C13183) * C754 -
           (C13296 + C13297) * C760 - (C13298 + C13299) * C755) *
              C50765 * C8148 +
          (C13160 * C757 + C13161 * C752 - C13286 * C758 - C13287 * C753 +
           (C13297 + C13296) * C759 + (C13299 + C13298) * C754 -
           (C5281 * C11335 + C50962 * C11336 + C5280 * C8716 + C51068 * C8718) *
               C760 -
           (C5281 * C11337 + C50962 * C11338 + C5280 * C8719 + C51068 * C8722) *
               C755) *
              C50765 * C8149) *
         C50787 * C50851) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C2434 +
            ((C5315 + C5316) * C118 + (C5317 + C5318) * C50821) * C2435 +
            C5339 * C2436) *
               C50924 * C291 -
           (C5340 * C2436 +
            ((C5322 + C5321) * C50821 + (C5320 + C5319) * C118) * C2435 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C2434) *
               C50924 * C292 +
           (C5339 * C2434 +
            ((C5326 + C5325) * C118 + (C5324 + C5323) * C50821) * C2435 +
            ((C5327 + C5328) * C118 + (C5329 + C5330) * C50821) * C2436) *
               C50924 * C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C2434 +
            ((C5706 + C5707) * C118 + (C5708 + C5709) * C50821) * C2435 +
            ((C5710 + C5711) * C118 + (C5712 + C5713) * C50821) * C2436) *
               C50924 * C292 -
           (C5718 * C2436 +
            ((C5705 + C5704) * C50821 + (C5703 + C5702) * C118) * C2435 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C2434) *
               C50924 * C291 -
           (((C5281 * C1021 + C50962 * C1027 + C5280 * C479 + C51068 * C487) *
                 C50821 +
             (C5281 * C1012 + C50962 * C1022 + C5280 * C469 + C51068 * C478) *
                 C118) *
                C2436 +
            ((C5713 + C5712) * C50821 + (C5711 + C5710) * C118) * C2435 +
            C5718 * C2434) *
               C50924 * C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C5281 * C875 + C50962 * C883 + C5280 * C296 + C51068 * C302) *
                C628 -
            (C5281 * C884 + C50962 * C899 + C5280 * C303 + C51068 * C314) *
                C623 +
            (C5280 * C630 + C51068 * C635 + C5281 * C876 + C50962 * C885) *
                C629 +
            (C5280 * C636 + C51068 * C645 + C5281 * C886 + C50962 * C900) *
                C624) *
               C2434 +
           ((C5315 + C5316) * C627 + (C5317 + C5318) * C622 -
            (C5513 + C5514) * C628 - (C5515 + C5516) * C623 +
            (C5881 + C5882) * C629 + (C5883 + C5884) * C624) *
               C2435 +
           (C5331 * C627 + C5332 * C622 - C5526 * C628 - C5527 * C623 +
            (C5885 + C5886) * C629 + (C5887 + C5888) * C624) *
               C2436) *
              C50924 * C50787 * C51055 +
          (((C5280 * C875 + C51068 * C883 + C5281 * C1150 + C50962 * C1154) *
                C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C5280 * C884 + C51068 * C899 + C5281 * C1155 + C50962 * C1162) *
                C623 -
            (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                C629 -
            (C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                C624) *
               C2434 +
           ((C5280 * C877 + C51068 * C887 + C5281 * C1151 + C50962 * C1156) *
                C628 -
            ((C5705 + C5704) * C622 + (C5703 + C5702) * C627) +
            (C5280 * C888 + C51068 * C901 + C5281 * C1157 + C50962 * C1163) *
                C623 -
            (C5281 * C3552 + C50962 * C3556 + C5280 * C878 + C51068 * C889) *
                C629 -
            (C5281 * C3557 + C50962 * C3561 + C5280 * C890 + C51068 * C902) *
                C624) *
               C2435 +
           ((C5280 * C879 + C51068 * C891 + C5281 * C1152 + C50962 * C1158) *
                C628 -
            (C5714 * C622 + C5715 * C627) +
            (C5280 * C892 + C51068 * C903 + C5281 * C1159 + C50962 * C1164) *
                C623 -
            (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                C629 -
            (C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                C624) *
               C2436) *
              C50924 * C50787 * C50863)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                 C118 +
             (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                 C50821) *
                C50765 * C8147 +
            ((C12861 + C12860) * C118 + (C12863 + C12862) * C50821) * C50765 *
                C8148 +
            ((C12865 + C12864) * C118 + (C12867 + C12866) * C50821) * C50765 *
                C8149) *
               C291 -
           (((C5884 + C5883) * C50821 + (C5882 + C5881) * C118) * C50765 *
                C8149 +
            ((C5515 + C5516) * C50821 + (C5513 + C5514) * C118) * C50765 *
                C8148 +
            ((C5318 + C5317) * C50821 + (C5316 + C5315) * C118) * C50765 *
                C8147) *
               C292 +
           (C5339 * C50765 * C8147 +
            ((C5519 + C5518) * C118 + (C5521 + C5520) * C50821) * C50765 *
                C8148 +
            ((C5885 + C5886) * C118 + (C5887 + C5888) * C50821) * C50765 *
                C8149) *
               C293) *
              C51055 +
          ((((C5702 + C5703) * C118 + (C5704 + C5705) * C50821) * C50765 *
                C8147 +
            ((C7068 + C7069) * C118 + (C7070 + C7071) * C50821) * C50765 *
                C8148 +
            ((C5280 * C878 + C51068 * C889 + C5281 * C3552 + C50962 * C3556) *
                 C118 +
             (C5280 * C890 + C51068 * C902 + C5281 * C3557 + C50962 * C3561) *
                 C50821) *
                C50765 * C8149) *
               C292 -
           (((C5281 * C3555 + C50962 * C3560 + C5280 * C886 + C51068 * C900) *
                 C50821 +
             (C5281 * C3551 + C50962 * C3554 + C5280 * C876 + C51068 * C885) *
                 C118) *
                C50765 * C8149 +
            ((C5281 * C1155 + C50962 * C1162 + C5280 * C884 + C51068 * C899) *
                 C50821 +
             (C5281 * C1150 + C50962 * C1154 + C5280 * C875 + C51068 * C883) *
                 C118) *
                C50765 * C8148 +
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C50821 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C118) *
                C50765 * C8147) *
               C291 -
           (((C5281 * C3559 + C50962 * C3562 + C5280 * C894 + C51068 * C904) *
                 C50821 +
             (C5281 * C3553 + C50962 * C3558 + C5280 * C880 + C51068 * C893) *
                 C118) *
                C50765 * C8149 +
            ((C7075 + C7074) * C50821 + (C7073 + C7072) * C118) * C50765 *
                C8148 +
            C5718 * C50765 * C8147) *
               C293) *
              C50863)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5280 * C119 + C51068 * C126 + C5281 * C470 + C50962 * C481) *
                C627 +
            (C5280 * C127 + C51068 * C140 + C5281 * C480 + C50962 * C488) *
                C622 -
            (C12860 + C12861) * C628 - (C12862 + C12863) * C623 +
            C13160 * C629 + C13161 * C624) *
               C50765 * C8147 +
           ((C12861 + C12860) * C627 + (C12863 + C12862) * C622 -
            (C12864 + C12865) * C628 - (C12866 + C12867) * C623 +
            (C13180 + C13181) * C629 + (C13182 + C13183) * C624) *
               C50765 * C8148 +
           (C13160 * C627 + C13161 * C622 - C13286 * C628 - C13287 * C623 +
            (C13297 + C13296) * C629 + (C13299 + C13298) * C624) *
               C50765 * C8149) *
              C50787 * C51055 +
          (((C13470 + C13471) * C628 -
            ((C5281 * C1014 + C50962 * C1023 + C5280 * C480 + C51068 * C488) *
                 C622 +
             (C5281 * C1008 + C50962 * C1013 + C5280 * C470 + C51068 * C481) *
                 C627) +
            (C13472 + C13473) * C623 - C13482 * C629 - C13483 * C624) *
               C50765 * C8147 +
           ((C13475 + C13474) * C628 -
            ((C13473 + C13472) * C622 + (C13471 + C13470) * C627) +
            (C13477 + C13476) * C623 - (C13478 + C13479) * C629 -
            (C13480 + C13481) * C624) *
               C50765 * C8148 +
           ((C13479 + C13478) * C628 - (C13483 * C622 + C13482 * C627) +
            (C13481 + C13480) * C623 -
            (C5281 * C11541 + C50962 * C11542 + C5280 * C8876 +
             C51068 * C8878) *
                C629 -
            (C5281 * C11543 + C50962 * C11544 + C5280 * C8879 +
             C51068 * C8882) *
                C624) *
               C50765 * C8149) *
              C50787 * C50863)) /
            (p * q * std::sqrt(p + q));
}
