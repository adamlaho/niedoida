/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdp_AC_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2121_13_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49932 = ce + de;
    const double C49931 = zC - zD;
    const double C49942 = ce * de;
    const double C49941 = 0 * de;
    const double C49960 = 0 * ce;
    const double C49956 = 0 * de;
    const double C49999 = ae + be;
    const double C49998 = zA - zB;
    const double C50009 = ae * be;
    const double C50008 = 0 * be;
    const double C50027 = 0 * ae;
    const double C50023 = 0 * be;
    const double C50064 = p + q;
    const double C50063 = p * q;
    const double C50072 = ae * ce;
    const double C50071 = zP - zQ;
    const double C50069 = bs[3];
    const double C50078 = bs[4];
    const double C50076 = xP - xQ;
    const double C50087 = bs[5];
    const double C50096 = bs[6];
    const double C50111 = bs[7];
    const double C50135 = bs[2];
    const double C50165 = yP - yQ;
    const double C119 = bs[0];
    const double C51157 = xA - xB;
    const double C51181 = xC - xD;
    const double C51201 = yC - yD;
    const double C51306 = yA - yB;
    const double C49940 = 2 * C49932;
    const double C49957 = std::pow(C49932, 2);
    const double C51246 = std::pow(C49931, 2);
    const double C51258 = C49931 * de;
    const double C51257 = C49931 * ce;
    const double C49943 = C49942 * C49931;
    const double C49958 = C49931 * C49941;
    const double C49964 = C49960 / C49932;
    const double C50007 = 2 * C49999;
    const double C50024 = std::pow(C49999, 2);
    const double C50080 = C49932 * C49999;
    const double C51345 = std::pow(C49998, 2);
    const double C51357 = C49998 * be;
    const double C51356 = C49998 * ae;
    const double C50010 = C50009 * C49998;
    const double C50025 = C49998 * C50008;
    const double C50031 = C50027 / C49999;
    const double C50065 = 2 * C50063;
    const double C50074 = std::pow(C50071, 2);
    const double C50139 = C50071 * ce;
    const double C50138 = C50071 * ae;
    const double C50089 = std::pow(C50076, 2);
    const double C50175 = std::pow(C50165, 2);
    const double C51160 = C51157 * be;
    const double C51159 = C51157 * ae;
    const double C51158 = std::pow(C51157, 2);
    const double C51184 = C51181 * de;
    const double C51183 = C51181 * ce;
    const double C51182 = std::pow(C51181, 2);
    const double C51216 = std::pow(C51201, 2);
    const double C51232 = C51201 * de;
    const double C51231 = C51201 * ce;
    const double C51319 = std::pow(C51306, 2);
    const double C51333 = C51306 * be;
    const double C51332 = C51306 * ae;
    const double C51192 = std::pow(C49940, -1);
    const double C51453 = std::pow(C49940, -2);
    const double C49961 = 2 * C49957;
    const double C51451 = 4 * C49957;
    const double C51247 = C51246 * C49942;
    const double C49962 = C49958 / C49932;
    const double C51168 = std::pow(C50007, -1);
    const double C51465 = std::pow(C50007, -2);
    const double C50028 = 2 * C50024;
    const double C51444 = 4 * C50024;
    const double C51346 = C51345 * C50009;
    const double C50029 = C50025 / C49999;
    const double C50067 = C50065 / C50064;
    const double C140 =
        (-((std::pow(zP - zQ, 2) * bs[2] * std::pow(C50065 / C50064, 2) -
            (bs[1] * C50065) / C50064) *
           ae * ce) /
         C49932) /
        C49999;
    const double C120 = -(C50076 * bs[1] * C50065) / C50064;
    const double C297 = -(C50165 * bs[1] * C50065) / C50064;
    const double C454 = -(C50071 * bs[1] * C50065) / C50064;
    const double C50081 = C50074 * C50078;
    const double C50090 = C50074 * C50087;
    const double C50099 = C50074 * C50096;
    const double C50115 = C50074 * C50111;
    const double C50141 = C50078 * C50139;
    const double C50146 = C50087 * C50139;
    const double C50151 = C50096 * C50139;
    const double C50180 = C50069 * C50139;
    const double C50216 = C50111 * C50139;
    const double C127 = (bs[1] * C50139 * C50065) / (C50064 * C49932);
    const double C50142 = C50078 * C50138;
    const double C50147 = C50087 * C50138;
    const double C50152 = C50096 * C50138;
    const double C50182 = C50069 * C50138;
    const double C50222 = C50111 * C50138;
    const double C126 = (-(bs[1] * C50138 * C50065) / C50064) / C49999;
    const double C51161 = C51158 * C50009;
    const double C51185 = C51182 * C49942;
    const double C51217 = C51216 * C49942;
    const double C51320 = C51319 * C50009;
    const double C49969 = C49941 / C49961;
    const double C49967 = C49956 / C49961;
    const double C51248 = C51247 / C49932;
    const double C49966 = 0 - C49962;
    const double C50036 = C50008 / C50028;
    const double C50034 = C50023 / C50028;
    const double C51347 = C51346 / C49999;
    const double C50033 = 0 - C50029;
    const double C50070 = -C50067;
    const double C50079 = std::pow(C50067, 4);
    const double C50097 = std::pow(C50067, 6);
    const double C50134 = std::pow(C50067, 2);
    const double C141 =
        (-((xP - xQ) *
           (bs[2] * std::pow(C50067, 2) +
            std::pow(zP - zQ, 2) * bs[3] * std::pow(-C50067, 3)) *
           ae * ce) /
         C49932) /
        C49999;
    const double C51162 = C51161 / C49999;
    const double C51186 = C51185 / C49932;
    const double C51218 = C51217 / C49932;
    const double C51321 = C51320 / C49999;
    const double C51249 = -C51248;
    const double C49971 = C49966 * ce;
    const double C51348 = -C51347;
    const double C50038 = C50033 * ae;
    const double C50073 = std::pow(C50070, 3);
    const double C50088 = std::pow(C50070, 5);
    const double C50112 = std::pow(C50070, 7);
    const double C50082 = C50081 * C50079;
    const double C50086 = C50078 * C50079;
    const double C50144 = C50079 * C50142;
    const double C50143 = C50079 * C50141;
    const double C50100 = C50099 * C50097;
    const double C50110 = C50096 * C50097;
    const double C50154 = C50097 * C50152;
    const double C50153 = C50097 * C50151;
    const double C50181 = C50135 * C50134;
    const double C128 = (C50076 * C50134 * C50135 * C50138) / C49999;
    const double C129 = -(C50076 * C50134 * C50135 * C50139) / C49932;
    const double C306 = -(C50165 * C50134 * C50135 * C50139) / C49932;
    const double C307 = (C50165 * C50134 * C50135 * C50138) / C49999;
    const double C460 = (C50071 * C50134 * C50135 * C50138) / C49999 -
                        (ae * bs[1] * C50065) / (C50064 * C49999);
    const double C461 = (ce * bs[1] * C50065) / (C50064 * C49932) -
                        (C50071 * C50134 * C50135 * C50139) / C49932;
    const double C51163 = -C51162;
    const double C51187 = -C51186;
    const double C51219 = -C51218;
    const double C51322 = -C51321;
    const double C51250 = std::exp(C51249);
    const double C49973 = C49971 / C49932;
    const double C51349 = std::exp(C51348);
    const double C50040 = C50038 / C49999;
    const double C50077 = C50069 * C50073;
    const double C50184 = C50073 * C50182;
    const double C50183 = C50073 * C50180;
    const double C142 =
        (-((C50069 * C50073 + C50074 * bs[4] * std::pow(C50067, 4)) * C50072 *
           std::pow(xP - xQ, 2)) /
         C49932) /
            C49999 -
        ((bs[2] * std::pow(C50067, 2) + C50074 * C50069 * C50073) * C50072) /
            (C49932 * C49999);
    const double C315 =
        (-((yP - yQ) *
           (bs[2] * std::pow(C50067, 2) + C50074 * C50069 * C50073) * C50072) /
         C49932) /
        C49999;
    const double C472 =
        (-(C50134 * C50135 * C50071 * ae * ce) / C49932) / C49999 -
        (ae * C50134 * C50135 * C50071 * ce) / C50080 -
        (C50071 * (C50135 * C50134 + C50074 * C50069 * C50073) * C50072) /
            C50080;
    const double C50091 = C50090 * C50088;
    const double C50095 = C50087 * C50088;
    const double C50149 = C50088 * C50147;
    const double C50148 = C50088 * C50146;
    const double C50117 = C50115 * C50112;
    const double C50229 = C50112 * C50222;
    const double C50225 = C50112 * C50216;
    const double C50191 = C50086 * C50089;
    const double C50199 = C50076 * C50086;
    const double C50306 = C50086 * C50175;
    const double C50328 = C50165 * C50086;
    const double C50370 = C50086 * ae;
    const double C50368 = C50086 * C50074;
    const double C50367 = C50071 * C50086;
    const double C50366 = C50086 * ce;
    const double C50188 = C50076 * C50144;
    const double C50251 = C50165 * C50144;
    const double C50268 = C50071 * C50144;
    const double C50362 = C50144 * ce;
    const double C50186 = C50076 * C50143;
    const double C50249 = C50165 * C50143;
    const double C50265 = C50071 * C50143;
    const double C50363 = ae * C50143;
    const double C50219 = C50110 * C50089;
    const double C50482 = C50076 * C50110;
    const double C50533 = C50110 * C50175;
    const double C50771 = C50165 * C50110;
    const double C50841 = C50110 * ae;
    const double C50835 = C50110 * C50074;
    const double C50834 = C50071 * C50110;
    const double C50833 = C50110 * ce;
    const double C50156 = C50154 * C50089;
    const double C50221 = C50076 * C50154;
    const double C50466 = C50154 * C50175;
    const double C50535 = C50165 * C50154;
    const double C50667 = C50071 * C50154;
    const double C50827 = C50154 * ce;
    const double C50155 = C50153 * C50089;
    const double C50215 = C50076 * C50153;
    const double C50462 = C50153 * C50175;
    const double C50529 = C50165 * C50153;
    const double C50661 = C50071 * C50153;
    const double C50828 = ae * C50153;
    const double C121 = C50181 * C50089 - (bs[1] * C50065) / C50064;
    const double C296 = C50165 * C50076 * C50181;
    const double C455 = C50071 * C50076 * C50181;
    const double C627 = C50181 * C50175 - (bs[1] * C50065) / C50064;
    const double C856 = C50071 * C50165 * C50181;
    const double C992 = C50181 * C50074 - (bs[1] * C50065) / C50064;
    const double C51164 = std::exp(C51163);
    const double C51188 = std::exp(C51187);
    const double C51220 = std::exp(C51219);
    const double C51323 = std::exp(C51322);
    const double C49944 = C49943 * C51250;
    const double C118 = -(2 * ce * de * (zC - zD) * C51250) / (ce + de);
    const double C452 =
        ((C51250 - (C49931 * 2 * ce * de * C49931 * C51250) / C49932) * ce) /
            C49932 -
        (0 * de) / (2 * std::pow(C49932, 2));
    const double C453 =
        (0 * ce) / C49932 - (ce * de * C49931 * C51250) / std::pow(C49932, 2);
    const double C51259 = C51250 * C51257;
    const double C51262 = C51192 * C51250;
    const double C51461 = C51250 * C51258;
    const double C51460 = C51250 / C49940;
    const double C988 = C51453 * C51250;
    const double C49975 = C49973 - C49967;
    const double C151 = C51349 * C141;
    const double C149 = C51349 * C128;
    const double C2588 = C51349 * C307;
    const double C50011 = C50010 * C51349;
    const double C117 = -(2 * ae * be * (zA - zB) * C51349) / (ae + be);
    const double C5299 =
        ((C51349 - (C49998 * 2 * ae * be * C49998 * C51349) / C49999) * ae) /
            C49999 -
        (0 * be) / (2 * std::pow(C49999, 2));
    const double C5300 =
        (0 * ae) / C49999 - (ae * be * C49998 * C51349) / std::pow(C49999, 2);
    const double C51358 = C51349 * C51356;
    const double C51361 = C51168 * C51349;
    const double C51474 = C51349 * C51357;
    const double C51473 = C51349 / C50007;
    const double C15595 = C51465 * C51349;
    const double C50042 = C50040 - C50034;
    const double C50083 = C50077 + C50082;
    const double C50187 = C50076 * C50077;
    const double C50250 = C50165 * C50077;
    const double C50269 = C50077 * ae;
    const double C50267 = C50071 * C50077;
    const double C50266 = C50077 * ce;
    const double C122 =
        2 * C50076 * C50181 + C50076 * (C50181 + C50077 * C50089);
    const double C295 = C50165 * (C50181 + C50077 * C50089);
    const double C456 = C50071 * (C50181 + C50077 * C50089);
    const double C745 =
        2 * C50165 * C50181 + C50165 * (C50181 + C50077 * C50175);
    const double C860 = C50071 * (C50181 + C50077 * C50175);
    const double C1236 =
        2 * C50071 * C50181 + C50071 * (C50181 + C50077 * C50074);
    const double C130 = (C50134 * C50135 * C50138 + C50184 * C50089) / C49999;
    const double C132 =
        (2 * C50076 * C50184 + C50076 * (C50184 + C50144 * C50089)) / C49999;
    const double C303 = (C50165 * (C50184 + C50144 * C50089)) / C49999;
    const double C305 = (C50165 * C50076 * C50184) / C49999;
    const double C462 =
        (C50071 * C50076 * C50184 + C50076 * C50181 * ae) / C49999;
    const double C464 = (C50071 * (C50184 + C50144 * C50089) +
                         (C50181 + C50077 * C50089) * ae) /
                        C49999;
    const double C632 = (C50134 * C50135 * C50138 + C50184 * C50175) / C49999;
    const double C753 =
        (2 * C50165 * C50184 + C50165 * (C50184 + C50144 * C50175)) / C49999;
    const double C864 =
        (C50071 * C50165 * C50184 + C50165 * C50181 * ae) / C49999;
    const double C872 = (C50071 * (C50184 + C50144 * C50175) +
                         (C50181 + C50077 * C50175) * ae) /
                        C49999;
    const double C997 =
        (C50134 * C50135 * C50138 + C50071 * (C50071 * C50184 + C50181 * ae) +
         C50071 * C50181 * ae) /
        C49999;
    const double C131 = -(C50183 * C50089 + C50134 * C50135 * C50139) / C49932;
    const double C133 = (-2 * C50076 * C50183) / C49932 -
                        (C50076 * (C50143 * C50089 + C50183)) / C49932;
    const double C302 = -(C50165 * (C50143 * C50089 + C50183)) / C49932;
    const double C304 = -(C50165 * C50076 * C50183) / C49932;
    const double C463 =
        -(C50071 * C50076 * C50183 + C50076 * C50181 * ce) / C49932;
    const double C465 = -(C50071 * (C50143 * C50089 + C50183) +
                          (C50181 + C50077 * C50089) * ce) /
                        C49932;
    const double C633 = -(C50183 * C50175 + C50134 * C50135 * C50139) / C49932;
    const double C752 = (-2 * C50165 * C50183) / C49932 -
                        (C50165 * (C50143 * C50175 + C50183)) / C49932;
    const double C865 =
        -(C50071 * C50165 * C50183 + C50165 * C50181 * ce) / C49932;
    const double C873 = -(C50071 * (C50143 * C50175 + C50183) +
                          (C50181 + C50077 * C50175) * ce) /
                        C49932;
    const double C998 = -(C50071 * (C50071 * C50183 + C50181 * ce) +
                          C50134 * C50135 * C50139 + C50071 * C50181 * ce) /
                        C49932;
    const double C155 = C51349 * C142;
    const double C2590 = C51349 * C315;
    const double C50092 = C50086 + C50091;
    const double C50101 = C50095 + C50100;
    const double C50200 = C50095 * C50089;
    const double C50218 = C50076 * C50095;
    const double C50464 = C50095 * C50175;
    const double C50532 = C50165 * C50095;
    const double C50668 = C50095 * ae;
    const double C50664 = C50095 * C50074;
    const double C50663 = C50071 * C50095;
    const double C50662 = C50095 * ce;
    const double C50192 = C50149 * C50089;
    const double C50201 = C50076 * C50149;
    const double C50307 = C50149 * C50175;
    const double C50329 = C50165 * C50149;
    const double C50369 = C50071 * C50149;
    const double C50657 = C50149 * ce;
    const double C50190 = C50148 * C50089;
    const double C50197 = C50076 * C50148;
    const double C50305 = C50148 * C50175;
    const double C50327 = C50165 * C50148;
    const double C50365 = C50071 * C50148;
    const double C50658 = ae * C50148;
    const double C50118 = C50110 + C50117;
    const double C50233 = C50229 * C50089;
    const double C50484 = C50076 * C50229;
    const double C50536 = C50229 * C50175;
    const double C50774 = C50165 * C50229;
    const double C50840 = C50071 * C50229;
    const double C50231 = C50225 * C50089;
    const double C50480 = C50076 * C50225;
    const double C50530 = C50225 * C50175;
    const double C50770 = C50165 * C50225;
    const double C50832 = C50071 * C50225;
    const double C50194 = C50077 + C50191;
    const double C50205 = 2 * C50199;
    const double C50254 = C50165 * C50199;
    const double C50277 = C50199 * ae;
    const double C50275 = C50071 * C50199;
    const double C50274 = C50199 * ce;
    const double C50309 = C50077 + C50306;
    const double C50334 = C50328 * ae;
    const double C50332 = C50071 * C50328;
    const double C50331 = C50328 * ce;
    const double C50463 = 2 * C50328;
    const double C50376 = C50077 + C50368;
    const double C50378 = C50367 * ae;
    const double C50375 = C50367 * ce;
    const double C50665 = 2 * C50367;
    const double C634 = (C50076 * C50184 + C50188 * C50175) / C49999;
    const double C50371 = C50362 / C49932;
    const double C635 = -(C50186 * C50175 + C50076 * C50183) / C49932;
    const double C50372 = C50363 / C50080;
    const double C50227 = C50095 + C50219;
    const double C50487 = C50482 * C50175;
    const double C50627 = C50165 * C50482;
    const double C50722 = C50482 * ae;
    const double C50718 = C50482 * C50074;
    const double C50717 = C50071 * C50482;
    const double C50716 = C50482 * ce;
    const double C50541 = C50095 + C50533;
    const double C50786 = C50771 * ae;
    const double C50784 = C50771 * C50074;
    const double C50783 = C50071 * C50771;
    const double C50782 = C50771 * ce;
    const double C50853 = C50095 + C50835;
    const double C50855 = C50834 * ae;
    const double C50852 = C50834 * ce;
    const double C50158 = C50149 + C50156;
    const double C50228 = 2 * C50221;
    const double C50314 = C50221 * C50175;
    const double C50341 = C50165 * C50221;
    const double C50397 = C50071 * C50221;
    const double C50711 = C50221 * ce;
    const double C50470 = C50149 + C50466;
    const double C50542 = 2 * C50535;
    const double C50575 = C50071 * C50535;
    const double C50766 = C50535 * ce;
    const double C50846 = C50827 / C49932;
    const double C50157 = C50155 + C50148;
    const double C50224 = -2 * C50215;
    const double C50312 = C50215 * C50175;
    const double C50339 = C50165 * C50215;
    const double C50393 = C50071 * C50215;
    const double C50712 = ae * C50215;
    const double C50468 = C50462 + C50148;
    const double C50538 = -2 * C50529;
    const double C50571 = C50071 * C50529;
    const double C50767 = ae * C50529;
    const double C50847 = C50828 / C50080;
    const double C51165 = C51164 * C51159;
    const double C51169 = C51168 * C51164;
    const double C51440 = C51164 / C50007;
    const double C51439 = C51164 * C51160;
    const double C2436 = C51465 * C51164;
    const double C51189 = C51188 * C51183;
    const double C51193 = C51192 * C51188;
    const double C51447 = C51188 / C49940;
    const double C51446 = C51188 * C51184;
    const double C293 = C51453 * C51188;
    const double C51233 = C51220 * C51231;
    const double C51236 = C51192 * C51220;
    const double C51456 = C51220 * C51232;
    const double C51455 = C51220 / C49940;
    const double C624 = C51453 * C51220;
    const double C51334 = C51323 * C51332;
    const double C51337 = C51168 * C51323;
    const double C51469 = C51323 * C51333;
    const double C51468 = C51323 / C50007;
    const double C8168 = C51465 * C51323;
    const double C49945 = 2 * C49944;
    const double C49965 = C49944 / C49957;
    const double C51463 = C51259 / C49961;
    const double C51462 = C51259 * C51258;
    const double C51454 = C51259 / C49932;
    const double C51265 = C51262 * C51258;
    const double C1231 = C51262 / C51451;
    const double C1988 = C51262 / C49940;
    const double C51487 = C51461 / C49932;
    const double C987 = (-2 * C51192 * C51461) / C49932;
    const double C986 = (C51250 * std::pow(C51258, 2)) / C49957 + C51460;
    const double C50012 = 2 * C50011;
    const double C50032 = C50011 / C50024;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C329 = C117 * C296;
    const double C481 = C117 * C455;
    const double C2589 = C117 * C306;
    const double C2587 = C117 * C297;
    const double C2897 = C117 * C627;
    const double C3199 = C117 * C856;
    const double C5310 = C5299 * C121;
    const double C5306 = C5299 * C129;
    const double C5302 = C5299 * C120;
    const double C5520 = C5299 * C296;
    const double C5695 = C5299 * C455;
    const double C12944 = C5299 * C627;
    const double C12940 = C5299 * C306;
    const double C12936 = C5299 * C297;
    const double C13552 = C5299 * C856;
    const double C5304 = C5300 * C455;
    const double C12938 = C5300 * C856;
    const double C51476 = C51358 / C50028;
    const double C51475 = C51358 * C51357;
    const double C51467 = C51358 / C49999;
    const double C51364 = C51361 * C51357;
    const double C21130 = C51361 / C51444;
    const double C38286 = C51361 / C50007;
    const double C51493 = C51474 / C49999;
    const double C15594 = (-2 * C51168 * C51474) / C49999;
    const double C15593 = (C51349 * std::pow(C51357, 2)) / C50024 + C51473;
    const double C50084 = C50083 * C50072;
    const double C866 =
        (C50071 * C50165 * C50188 + C50165 * C50187 * ae) / C49999;
    const double C867 =
        -(C50071 * C50165 * C50186 + C50165 * C50187 * ce) / C49932;
    const double C999 =
        (C50076 * C50184 + C50071 * (C50071 * C50188 + C50187 * ae) +
         C50071 * C50187 * ae) /
        C49999;
    const double C1000 = -(C50071 * (C50071 * C50186 + C50187 * ce) +
                           C50076 * C50183 + C50071 * C50187 * ce) /
                         C49932;
    const double C628 = C50076 * C50181 + C50187 * C50175;
    const double C744 =
        2 * C50165 * C50187 + C50165 * (C50187 + C50199 * C50175);
    const double C857 = C50071 * C50165 * C50187;
    const double C861 = C50071 * (C50187 + C50199 * C50175);
    const double C993 = C50076 * C50181 + C50187 * C50074;
    const double C1237 =
        2 * C50071 * C50187 + C50071 * (C50187 + C50199 * C50074);
    const double C1150 =
        (C50165 * C50184 + C50071 * (C50071 * C50251 + C50250 * ae) +
         C50071 * C50250 * ae) /
        C49999;
    const double C1151 = -(C50071 * (C50071 * C50249 + C50250 * ce) +
                           C50165 * C50183 + C50071 * C50250 * ce) /
                         C49932;
    const double C1146 = C50165 * C50181 + C50250 * C50074;
    const double C3674 =
        2 * C50071 * C50250 + C50071 * (C50250 + C50328 * C50074);
    const double C50271 = C50268 + C50269;
    const double C50270 = C50265 + C50266;
    const double C156 = C117 * C122;
    const double C5324 = C5299 * C122;
    const double C325 = C117 * C295;
    const double C5512 = C5299 * C295;
    const double C487 = C117 * C456;
    const double C5312 = C5300 * C456;
    const double C5705 = C5299 * C456;
    const double C3031 = C117 * C745;
    const double C13260 = C5299 * C745;
    const double C3203 = C117 * C860;
    const double C12946 = C5300 * C860;
    const double C13562 = C5299 * C860;
    const double C153 = C51349 * C130;
    const double C157 = C51349 * C132;
    const double C326 = C51349 * C303;
    const double C330 = C51349 * C305;
    const double C482 = C51349 * C462;
    const double C5305 = C51361 * C462;
    const double C31780 = C51361 * C462;
    const double C488 = C51349 * C464;
    const double C5313 = C51361 * C464;
    const double C31788 = C51361 * C464;
    const double C2898 = C51349 * C632;
    const double C3032 = C51349 * C753;
    const double C3200 = C51349 * C864;
    const double C12939 = C51361 * C864;
    const double C34857 = C51361 * C864;
    const double C3204 = C51349 * C872;
    const double C12947 = C51361 * C872;
    const double C35276 = C51361 * C872;
    const double C154 = C117 * C131;
    const double C5314 = C5299 * C131;
    const double C158 = C117 * C133;
    const double C5320 = C5299 * C133;
    const double C323 = C117 * C302;
    const double C5508 = C5299 * C302;
    const double C327 = C117 * C304;
    const double C5516 = C5299 * C304;
    const double C483 = C117 * C463;
    const double C5308 = C5300 * C463;
    const double C5699 = C5299 * C463;
    const double C489 = C117 * C465;
    const double C5316 = C5300 * C465;
    const double C5709 = C5299 * C465;
    const double C2895 = C117 * C633;
    const double C12948 = C5299 * C633;
    const double C3033 = C117 * C752;
    const double C13256 = C5299 * C752;
    const double C3201 = C117 * C865;
    const double C12942 = C5300 * C865;
    const double C13556 = C5299 * C865;
    const double C3207 = C117 * C873;
    const double C12950 = C5300 * C873;
    const double C13566 = C5299 * C873;
    const double C50093 = C50092 * C50072;
    const double C50102 = C50101 * C50072;
    const double C50206 = C50086 + C50200;
    const double C50226 = 2 * C50218;
    const double C50313 = C50218 * C50175;
    const double C50340 = C50165 * C50218;
    const double C50398 = C50218 * ae;
    const double C50396 = C50218 * C50074;
    const double C50395 = C50071 * C50218;
    const double C50394 = C50218 * ce;
    const double C50469 = C50086 + C50464;
    const double C50540 = 2 * C50532;
    const double C50576 = C50532 * ae;
    const double C50574 = C50532 * C50074;
    const double C50573 = C50071 * C50532;
    const double C50572 = C50532 * ce;
    const double C50678 = C50667 + C50668;
    const double C50677 = C50086 + C50664;
    const double C50679 = C50663 * ae;
    const double C50676 = C50663 * ce;
    const double C50836 = 2 * C50663;
    const double C50675 = C50661 + C50662;
    const double C50195 = C50144 + C50192;
    const double C50207 = 2 * C50201;
    const double C50255 = C50165 * C50201;
    const double C50276 = C50071 * C50201;
    const double C50390 = C50201 * ce;
    const double C751 =
        (2 * C50165 * C50188 + C50165 * (C50188 + C50201 * C50175)) / C49999;
    const double C874 = (C50071 * (C50188 + C50201 * C50175) +
                         (C50187 + C50199 * C50175) * ae) /
                        C49999;
    const double C50310 = C50144 + C50307;
    const double C50333 = C50071 * C50329;
    const double C50465 = 2 * C50329;
    const double C50568 = C50329 * ce;
    const double C50377 = C50369 + C50370;
    const double C50671 = C50657 / C49932;
    const double C50193 = C50190 + C50143;
    const double C50203 = -2 * C50197;
    const double C50253 = C50165 * C50197;
    const double C50273 = C50071 * C50197;
    const double C50391 = ae * C50197;
    const double C750 = (-2 * C50165 * C50186) / C49932 -
                        (C50165 * (C50197 * C50175 + C50186)) / C49932;
    const double C875 = -(C50071 * (C50197 * C50175 + C50186) +
                          (C50187 + C50199 * C50175) * ce) /
                        C49932;
    const double C50308 = C50305 + C50143;
    const double C50330 = C50071 * C50327;
    const double C50461 = -2 * C50327;
    const double C50569 = ae * C50327;
    const double C50374 = C50365 + C50366;
    const double C50672 = C50658 / C50080;
    const double C50119 = C50118 * C50072;
    const double C50236 = C50154 + C50233;
    const double C50488 = C50484 * C50175;
    const double C50628 = C50165 * C50484;
    const double C50721 = C50071 * C50484;
    const double C50543 = C50154 + C50536;
    const double C50785 = C50071 * C50774;
    const double C50854 = C50840 + C50841;
    const double C50234 = C50231 + C50153;
    const double C50486 = C50480 * C50175;
    const double C50626 = C50165 * C50480;
    const double C50715 = C50071 * C50480;
    const double C50539 = C50530 + C50153;
    const double C50781 = C50071 * C50770;
    const double C50851 = C50832 + C50833;
    const double C123 = 3 * (C50181 + C50077 * C50089) +
                        C50076 * (2 * C50187 + C50076 * C50194);
    const double C294 = C50165 * (2 * C50187 + C50076 * C50194);
    const double C457 = C50071 * (2 * C50187 + C50076 * C50194);
    const double C629 = C50181 + C50077 * C50089 + C50194 * C50175;
    const double C858 = C50071 * C50165 * C50194;
    const double C994 = C50181 + C50077 * C50089 + C50194 * C50074;
    const double C1147 = C50165 * C50187 + C50254 * C50074;
    const double C3020 = 3 * (C50181 + C50077 * C50175) +
                         C50165 * (2 * C50250 + C50165 * C50309);
    const double C3184 = C50071 * (2 * C50250 + C50165 * C50309);
    const double C3552 = C50181 + C50077 * C50175 + C50309 * C50074;
    const double C6565 = 3 * (C50181 + C50077 * C50074) +
                         C50071 * (2 * C50267 + C50071 * C50376);
    const double C649 = C51349 * C634;
    const double C50379 = -C50371;
    const double C650 = C117 * C635;
    const double C5888 = C5299 * C635;
    const double C50232 = C50076 * C50227;
    const double C50320 = C50227 * C50175;
    const double C50352 = C50165 * C50227;
    const double C50426 = C50227 * ae;
    const double C50424 = C50227 * C50074;
    const double C50423 = C50071 * C50227;
    const double C50422 = C50227 * ce;
    const double C50490 = C50218 + C50487;
    const double C50637 = C50627 * ae;
    const double C50635 = C50627 * C50074;
    const double C50634 = C50071 * C50627;
    const double C50633 = C50627 * ce;
    const double C50731 = C50218 + C50718;
    const double C50733 = C50717 * ae;
    const double C50730 = C50717 * ce;
    const double C50546 = C50165 * C50541;
    const double C50604 = C50541 * ae;
    const double C50602 = C50541 * C50074;
    const double C50601 = C50071 * C50541;
    const double C50600 = C50541 * ce;
    const double C50792 = C50532 + C50784;
    const double C50794 = C50783 * ae;
    const double C50791 = C50783 * ce;
    const double C50863 = C50853 * ae;
    const double C50861 = C50071 * C50853;
    const double C50860 = C50853 * ce;
    const double C50202 = C50076 * C50158;
    const double C50220 = 3 * C50158;
    const double C50259 = C50165 * C50158;
    const double C50284 = C50071 * C50158;
    const double C50418 = C50158 * ce;
    const double C50317 = C50201 + C50314;
    const double C50345 = C50071 * C50341;
    const double C50483 = 2 * C50341;
    const double C50623 = C50341 * ce;
    const double C50725 = C50711 / C49932;
    const double C50473 = C50165 * C50470;
    const double C50503 = C50071 * C50470;
    const double C50534 = 3 * C50470;
    const double C50596 = C50470 * ce;
    const double C50777 = C50766 / C49932;
    const double C50858 = -C50846;
    const double C50198 = C50076 * C50157;
    const double C50214 = -3 * C50157;
    const double C50257 = C50165 * C50157;
    const double C50281 = C50071 * C50157;
    const double C50419 = ae * C50157;
    const double C50230 = C50224 / C49932;
    const double C50315 = C50312 + C50197;
    const double C50342 = C50071 * C50339;
    const double C50479 = -2 * C50339;
    const double C50624 = ae * C50339;
    const double C50726 = C50712 / C50080;
    const double C50471 = C50165 * C50468;
    const double C50500 = C50071 * C50468;
    const double C50528 = -3 * C50468;
    const double C50597 = ae * C50468;
    const double C50544 = C50538 / C49932;
    const double C50778 = C50767 / C50080;
    const double C51442 = C51165 / C50028;
    const double C51441 = C51165 * C51160;
    const double C51438 = C51165 / C49999;
    const double C51172 = C51169 * C51160;
    const double C110 = C51169 / C51444;
    const double C22937 = C51169 / C50007;
    const double C2434 = (C51164 * std::pow(C51160, 2)) / C50024 + C51440;
    const double C51478 = C51439 / C49999;
    const double C2435 = (-2 * C51168 * C51439) / C49999;
    const double C51449 = C51189 / C49961;
    const double C51448 = C51189 * C51184;
    const double C51445 = C51189 / C49932;
    const double C51196 = C51193 * C51184;
    const double C116 = C51193 / C51451;
    const double C1354 = C51193 / C49940;
    const double C291 = (C51188 * std::pow(C51184, 2)) / C49957 + C51447;
    const double C51481 = C51446 / C49932;
    const double C292 = (-2 * C51192 * C51446) / C49932;
    const double C51458 = C51233 / C49961;
    const double C51457 = C51233 * C51232;
    const double C51452 = C51233 / C49932;
    const double C51239 = C51236 * C51232;
    const double C740 = C51236 / C51451;
    const double C1455 = C51236 / C49940;
    const double C51484 = C51456 / C49932;
    const double C623 = (-2 * C51192 * C51456) / C49932;
    const double C622 = (C51220 * std::pow(C51232, 2)) / C49957 + C51455;
    const double C51471 = C51334 / C50028;
    const double C51470 = C51334 * C51333;
    const double C51466 = C51334 / C49999;
    const double C51340 = C51337 * C51333;
    const double C10918 = C51337 / C51444;
    const double C25572 = C51337 / C50007;
    const double C51490 = C51469 / C49999;
    const double C8167 = (-2 * C51168 * C51469) / C49999;
    const double C8166 = (C51323 * std::pow(C51333, 2)) / C50024 + C51468;
    const double C49959 = C49931 * C49945;
    const double C990 =
        ((-C49941 / C49932) / C49940 -
         ((C51250 - (C49931 * C49945) / C49932) * de) / C49932) /
            C49940 -
        ((C49931 * ((-C49945 / C49932) / C49940 - (0 * de) / C49932) + C51262) *
         de) /
            C49932;
    const double C991 =
        ((-C49945 / C49932) / C49940 - (0 * de) / C49932) / C49940 -
        (0 * de) / C49932;
    const double C1723 = (-C49945 / C49932) / C49940 - (0 * de) / C49932;
    const double C49970 = C49964 - C49965;
    const double C51488 = C51462 / C49957;
    const double C51464 = C51265 / C49932;
    const double C1720 = -C51487;
    const double C50026 = C49998 * C50012;
    const double C15597 =
        ((-C50008 / C49999) / C50007 -
         ((C51349 - (C49998 * C50012) / C49999) * be) / C49999) /
            C50007 -
        ((C49998 * ((-C50012 / C49999) / C50007 - (0 * be) / C49999) + C51361) *
         be) /
            C49999;
    const double C15598 =
        ((-C50012 / C49999) / C50007 - (0 * be) / C49999) / C50007 -
        (0 * be) / C49999;
    const double C31775 = (-C50012 / C49999) / C50007 - (0 * be) / C49999;
    const double C50037 = C50031 - C50032;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C2596 = C2589 + C2590;
    const double C2595 = C2587 + C2588;
    const double C51494 = C51475 / C50024;
    const double C5325 = C51467 * C132;
    const double C5315 = C51467 * C142;
    const double C5311 = C51467 * C130;
    const double C5307 = C51467 * C141;
    const double C5303 = C51467 * C128;
    const double C5521 = C51467 * C305;
    const double C5513 = C51467 * C303;
    const double C5706 = C51467 * C464;
    const double C5696 = C51467 * C462;
    const double C5885 = C51467 * C634;
    const double C12945 = C51467 * C632;
    const double C12941 = C51467 * C315;
    const double C12937 = C51467 * C307;
    const double C13261 = C51467 * C753;
    const double C13563 = C51467 * C872;
    const double C13553 = C51467 * C864;
    const double C51477 = C51364 / C49999;
    const double C31772 = -C51493;
    const double C15621 = C15594 * C464;
    const double C15603 = C15594 * C462;
    const double C18569 = C15594 * C864;
    const double C18885 = C15594 * C872;
    const double C15625 = C15593 * C132;
    const double C15623 = C15593 * C130;
    const double C15617 = C15593 * C142;
    const double C15607 = C15593 * C141;
    const double C15601 = C15593 * C128;
    const double C15813 = C15593 * C303;
    const double C15811 = C15593 * C305;
    const double C15995 = C15593 * C464;
    const double C15987 = C15593 * C462;
    const double C16165 = C15593 * C634;
    const double C18573 = C15593 * C315;
    const double C18567 = C15593 * C307;
    const double C18887 = C15593 * C632;
    const double C18993 = C15593 * C753;
    const double C19169 = C15593 * C872;
    const double C19161 = C15593 * C864;
    const double C143 =
        (-2 * C50076 * C50084) / C50080 +
        C50076 * ((-((C50078 * C50079 + C50074 * bs[5] * std::pow(C50070, 5)) *
                     C50072 * std::pow(C50076, 2)) /
                   C49932) /
                      C49999 -
                  C50084 / C50080);
    const double C314 = (-((yP - yQ) * C50076 * C50084) / C49932) / C49999;
    const double C473 =
        (-(C50076 * C50073 * C50069 * C50071 * ae * ce) / C49932) / C49999 -
        (ae * C50076 * C50073 * C50069 * C50071 * ce) / C50080 -
        (C50071 * C50076 * C50084) / C50080;
    const double C642 =
        (-(C50084 * std::pow(yP - yQ, 2)) / C49932) / C49999 -
        ((C50135 * C50134 + C50074 * C50069 * C50073) * C50072) / C50080;
    const double C880 =
        (-(C50165 * C50073 * C50069 * C50138 * ce) / C49932) / C49999 -
        (ae * C50165 * C50073 * C50069 * C50139) / C50080 -
        (C50071 * C50165 * C50084) / C50080;
    const double C1007 =
        (-(ae * (C50071 * C50183 + C50181 * ce)) / C49932) / C49999 -
        ((C50181 + C50074 * C50069 * C50073) * C50072) / C50080 -
        ((C50071 * C50184 + C50181 * ae) * ce) / C50080 +
        C50071 * ((-(C50184 * ce) / C49932) / C49999 - (ae * C50183) / C50080 -
                  (C50071 * C50084) / C50080);
    const double C1594 = C51349 * C866;
    const double C5519 = C51361 * C866;
    const double C7065 = C51467 * C866;
    const double C15809 = C15594 * C866;
    const double C17333 = C15593 * C866;
    const double C31994 = C51361 * C866;
    const double C1597 = C117 * C867;
    const double C5514 = C5300 * C867;
    const double C7068 = C5299 * C867;
    const double C1018 = C51349 * C999;
    const double C5694 = C51361 * C999;
    const double C6299 = C51467 * C999;
    const double C15605 = C15595 * C999;
    const double C15985 = C15594 * C999;
    const double C16573 = C15593 * C999;
    const double C32169 = C51361 * C999;
    const double C38296 = C38286 * C999;
    const double C1019 = C117 * C1000;
    const double C5697 = C5300 * C1000;
    const double C6302 = C5299 * C1000;
    const double C648 = C117 * C628;
    const double C5884 = C5299 * C628;
    const double C2901 = C117 * C744;
    const double C13262 = C5299 * C744;
    const double C1593 = C117 * C857;
    const double C5518 = C5300 * C857;
    const double C7064 = C5299 * C857;
    const double C3209 = C117 * C861;
    const double C5886 = C5300 * C861;
    const double C14504 = C5299 * C861;
    const double C1017 = C117 * C993;
    const double C5693 = C5300 * C993;
    const double C6298 = C5299 * C993;
    const double C6300 = C5300 * C1237;
    const double C3570 = C51349 * C1150;
    const double C13551 = C51361 * C1150;
    const double C13889 = C51467 * C1150;
    const double C18571 = C15595 * C1150;
    const double C19159 = C15594 * C1150;
    const double C19485 = C15593 * C1150;
    const double C35640 = C51361 * C1150;
    const double C47437 = C38286 * C1150;
    const double C3571 = C117 * C1151;
    const double C13554 = C5300 * C1151;
    const double C13892 = C5299 * C1151;
    const double C3569 = C117 * C1146;
    const double C13550 = C5300 * C1146;
    const double C13888 = C5299 * C1146;
    const double C13890 = C5300 * C3674;
    const double C1240 = (2 * (C50071 * C50184 + C50181 * ae) +
                          C50071 * (C50184 + C50071 * C50271 + C50267 * ae) +
                          (C50181 + C50077 * C50074) * ae) /
                         C49999;
    const double C1241 =
        (-2 * (C50071 * C50183 + C50181 * ce)) / C49932 -
        (C50071 * (C50071 * C50270 + C50183 + C50267 * ce)) / C49932 -
        ((C50181 + C50077 * C50074) * ce) / C49932;
    const double C170 = C152 + C153;
    const double C172 = C156 + C157;
    const double C338 = C325 + C326;
    const double C340 = C329 + C330;
    const double C503 = C481 + C482;
    const double C5335 = C5304 + C5305;
    const double C506 = C487 + C488;
    const double C5339 = C5312 + C5313;
    const double C2910 = C2897 + C2898;
    const double C3035 = C3031 + C3032;
    const double C3221 = C3199 + C3200;
    const double C12953 = C12938 + C12939;
    const double C3223 = C3203 + C3204;
    const double C12957 = C12946 + C12947;
    const double C171 = C154 + C155;
    const double C50098 = C50093 / C50080;
    const double C50168 = C50076 * C50093;
    const double C50326 = C50165 * C50093;
    const double C50364 = C50071 * C50093;
    const double C144 =
        3 * ((-(C50093 * C50089) / C49932) / C49999 - C50084 / C50080) +
        C50076 *
            ((-2 * C50076 * C50093) / C50080 +
             C50076 *
                 ((-((C50087 * C50088 + C50074 * bs[6] * std::pow(C50067, 6)) *
                     C50072 * C50089) /
                   C49932) /
                      C49999 -
                  C50093 / C50080));
    const double C313 =
        (yP - yQ) * ((-(C50093 * C50089) / C49932) / C49999 - C50084 / C50080);
    const double C474 =
        (-((C50073 * C50069 * C50138 + C50079 * C50078 * C50138 * C50089) *
           ce) /
         C49932) /
            C49999 -
        (ae * (C50079 * C50078 * C50139 * C50089 + C50073 * C50069 * C50139)) /
            C50080 +
        C50071 * ((-(C50093 * C50089) / C49932) / C49999 - C50084 / C50080);
    const double C643 =
        (-(C50076 * C50093 * std::pow(yP - yQ, 2)) / C49932) / C49999 -
        (C50076 * C50084) / C50080;
    const double C757 =
        (-2 * C50165 * C50084) / C50080 +
        C50165 * ((-(C50093 * std::pow(C50165, 2)) / C49932) / C49999 -
                  C50084 / C50080);
    const double C884 =
        (-((C50073 * C50069 * C50138 + C50144 * C50175) * ce) / C49932) /
            C49999 -
        (ae * (C50143 * C50175 + C50073 * C50069 * C50139)) / C50080 +
        C50071 * ((-(C50093 * C50175) / C49932) / C49999 - C50084 / C50080);
    const double C1158 =
        (-(ae * (C50071 * C50249 + C50250 * ce)) / C49932) / C49999 -
        (C50165 * C50084) / C50080 -
        ((C50071 * C50251 + C50250 * ae) * ce) / C50080 +
        C50071 * ((-(C50251 * ce) / C49932) / C49999 - (ae * C50249) / C50080 -
                  (C50071 * C50165 * C50093) / C50080);
    const double C1248 =
        2 * ((-(C50184 * ce) / C49932) / C49999 - (ae * C50183) / C50080 -
             (C50071 * C50084) / C50080) -
        (ae * (C50071 * C50270 + C50183 + C50267 * ce)) / C50080 -
        ((C50184 + C50071 * C50271 + C50267 * ae) * ce) / C50080 +
        C50071 *
            ((-(ae * C50270) / C49932) / C49999 - C50084 / C50080 -
             (C50271 * ce) / C50080 +
             C50071 * ((-(C50144 * ce) / C49932) / C49999 -
                       (ae * C50143) / C50080 - (C50071 * C50093) / C50080));
    const double C50103 = C50102 * C50089;
    const double C50113 = C50102 / C50080;
    const double C50109 = C50076 * C50102;
    const double C50453 = C50102 * C50175;
    const double C50516 = C50165 * C50102;
    const double C50659 = C50071 * C50102;
    const double C50209 = C50076 * C50206;
    const double C50217 = 3 * C50206;
    const double C50258 = C50165 * C50206;
    const double C50285 = C50206 * ae;
    const double C50283 = C50071 * C50206;
    const double C50282 = C50206 * ce;
    const double C743 =
        2 * C50165 * C50194 + C50165 * (C50194 + C50206 * C50175);
    const double C862 = C50071 * (C50194 + C50206 * C50175);
    const double C1238 =
        2 * C50071 * C50194 + C50071 * (C50194 + C50206 * C50074);
    const double C50316 = C50199 + C50313;
    const double C50346 = C50340 * ae;
    const double C50344 = C50071 * C50340;
    const double C50343 = C50340 * ce;
    const double C50481 = 2 * C50340;
    const double C3675 =
        2 * C50071 * C50254 + C50071 * (C50254 + C50340 * C50074);
    const double C50405 = C50397 + C50398;
    const double C50404 = C50199 + C50396;
    const double C50406 = C50395 * ae;
    const double C50403 = C50395 * ce;
    const double C50719 = 2 * C50395;
    const double C50402 = C50393 + C50394;
    const double C50472 = C50165 * C50469;
    const double C50504 = C50469 * ae;
    const double C50502 = C50071 * C50469;
    const double C50501 = C50469 * ce;
    const double C50531 = 3 * C50469;
    const double C9347 =
        2 * C50071 * C50309 + C50071 * (C50309 + C50469 * C50074);
    const double C50583 = C50575 + C50576;
    const double C50582 = C50328 + C50574;
    const double C50584 = C50573 * ae;
    const double C50581 = C50573 * ce;
    const double C50772 = 2 * C50573;
    const double C50580 = C50571 + C50572;
    const double C50685 = C50071 * C50678;
    const double C50839 = 2 * C50678;
    const double C50826 = C50678 * ce;
    const double C50686 = C50677 * ae;
    const double C50684 = C50071 * C50677;
    const double C50683 = C50677 * ce;
    const double C50837 = 3 * C50677;
    const double C50682 = C50071 * C50675;
    const double C50831 = -2 * C50675;
    const double C50825 = ae * C50675;
    const double C135 = (3 * (C50184 + C50144 * C50089) +
                         C50076 * (2 * C50188 + C50076 * C50195)) /
                        C49999;
    const double C301 = (C50165 * (2 * C50188 + C50076 * C50195)) / C49999;
    const double C466 = (C50071 * (2 * C50188 + C50076 * C50195) +
                         (2 * C50187 + C50076 * C50194) * ae) /
                        C49999;
    const double C636 = (C50184 + C50144 * C50089 + C50195 * C50175) / C49999;
    const double C749 =
        (2 * C50165 * C50195 + C50165 * (C50195 + C50158 * C50175)) / C49999;
    const double C868 =
        (C50071 * C50165 * C50195 + C50165 * C50194 * ae) / C49999;
    const double C876 = (C50071 * (C50195 + C50158 * C50175) +
                         (C50194 + C50206 * C50175) * ae) /
                        C49999;
    const double C1001 =
        (C50184 + C50144 * C50089 + C50071 * (C50071 * C50195 + C50194 * ae) +
         C50071 * C50194 * ae) /
        C49999;
    const double C1152 =
        (C50165 * C50188 + C50071 * (C50071 * C50255 + C50254 * ae) +
         C50071 * C50254 * ae) /
        C49999;
    const double C50279 = C50276 + C50277;
    const double C50399 = C50390 / C49932;
    const double C2902 = C51349 * C751;
    const double C13263 = C51467 * C751;
    const double C3210 = C51349 * C874;
    const double C5887 = C51361 * C874;
    const double C14505 = C51467 * C874;
    const double C16167 = C15594 * C874;
    const double C32362 = C51361 * C874;
    const double C3026 = (3 * (C50184 + C50144 * C50175) +
                          C50165 * (2 * C50251 + C50165 * C50310)) /
                         C49999;
    const double C3187 = (C50071 * (2 * C50251 + C50165 * C50310) +
                          (2 * C50250 + C50165 * C50309) * ae) /
                         C49999;
    const double C3555 =
        (C50184 + C50144 * C50175 + C50071 * (C50071 * C50310 + C50309 * ae) +
         C50071 * C50309 * ae) /
        C49999;
    const double C50336 = C50333 + C50334;
    const double C50577 = C50568 / C49932;
    const double C50381 = C50071 * C50377;
    const double C50666 = 2 * C50377;
    const double C50656 = C50377 * ce;
    const double C50681 = -C50671;
    const double C134 =
        (-3 * (C50143 * C50089 + C50183)) / C49932 +
        C50076 * ((-2 * C50186) / C49932 - (C50076 * C50193) / C49932);
    const double C300 =
        C50165 * ((-2 * C50186) / C49932 - (C50076 * C50193) / C49932);
    const double C467 =
        C50071 * ((-2 * C50186) / C49932 - (C50076 * C50193) / C49932) -
        ((2 * C50187 + C50076 * C50194) * ce) / C49932;
    const double C637 = -(C50193 * C50175 + C50143 * C50089 + C50183) / C49932;
    const double C748 = (-2 * C50165 * C50193) / C49932 -
                        (C50165 * (C50157 * C50175 + C50193)) / C49932;
    const double C869 =
        -(C50071 * C50165 * C50193 + C50165 * C50194 * ce) / C49932;
    const double C877 = -(C50071 * (C50157 * C50175 + C50193) +
                          (C50194 + C50206 * C50175) * ce) /
                        C49932;
    const double C1002 = -(C50071 * (C50071 * C50193 + C50194 * ce) +
                           C50143 * C50089 + C50183 + C50071 * C50194 * ce) /
                         C49932;
    const double C50208 = C50203 / C49932;
    const double C1153 = -(C50071 * (C50071 * C50253 + C50254 * ce) +
                           C50165 * C50186 + C50071 * C50254 * ce) /
                         C49932;
    const double C50278 = C50273 + C50274;
    const double C50400 = C50391 / C50080;
    const double C2903 = C117 * C750;
    const double C13266 = C5299 * C750;
    const double C3213 = C117 * C875;
    const double C5890 = C5300 * C875;
    const double C14508 = C5299 * C875;
    const double C3025 =
        (-3 * (C50143 * C50175 + C50183)) / C49932 +
        C50165 * ((-2 * C50249) / C49932 - (C50165 * C50308) / C49932);
    const double C3188 =
        C50071 * ((-2 * C50249) / C49932 - (C50165 * C50308) / C49932) -
        ((2 * C50250 + C50165 * C50309) * ce) / C49932;
    const double C3556 = -(C50071 * (C50071 * C50308 + C50309 * ce) +
                           C50143 * C50175 + C50183 + C50071 * C50309 * ce) /
                         C49932;
    const double C50335 = C50330 + C50331;
    const double C50467 = C50461 / C49932;
    const double C50578 = C50569 / C50080;
    const double C50380 = C50071 * C50374;
    const double C50660 = -2 * C50374;
    const double C50655 = ae * C50374;
    const double C50120 = C50119 * C50089;
    const double C50445 = C50076 * C50119;
    const double C50517 = C50119 * C50175;
    const double C50768 = C50165 * C50119;
    const double C50829 = C50071 * C50119;
    const double C50239 = C50076 * C50236;
    const double C50321 = C50236 * C50175;
    const double C50353 = C50165 * C50236;
    const double C50425 = C50071 * C50236;
    const double C50491 = C50221 + C50488;
    const double C50636 = C50071 * C50628;
    const double C50732 = C50721 + C50722;
    const double C50547 = C50165 * C50543;
    const double C50603 = C50071 * C50543;
    const double C50793 = C50785 + C50786;
    const double C50862 = C50071 * C50854;
    const double C50237 = C50076 * C50234;
    const double C50319 = C50234 * C50175;
    const double C50351 = C50165 * C50234;
    const double C50421 = C50071 * C50234;
    const double C50489 = C50486 + C50215;
    const double C50632 = C50071 * C50626;
    const double C50729 = C50715 + C50716;
    const double C50545 = C50165 * C50539;
    const double C50599 = C50071 * C50539;
    const double C50790 = C50781 + C50782;
    const double C50859 = C50071 * C50851;
    const double C162 = C117 * C123;
    const double C5326 = C5299 * C123;
    const double C321 = C117 * C294;
    const double C5522 = C5299 * C294;
    const double C493 = C117 * C457;
    const double C5322 = C5300 * C457;
    const double C5711 = C5299 * C457;
    const double C652 = C117 * C629;
    const double C5892 = C5299 * C629;
    const double C1599 = C117 * C858;
    const double C5510 = C5300 * C858;
    const double C7072 = C5299 * C858;
    const double C1025 = C117 * C994;
    const double C5703 = C5300 * C994;
    const double C6306 = C5299 * C994;
    const double C3387 = C117 * C1147;
    const double C7066 = C5300 * C1147;
    const double C29369 = C5299 * C1147;
    const double C8733 = C117 * C3020;
    const double C13388 = C5299 * C3020;
    const double C8899 = C117 * C3184;
    const double C13258 = C5300 * C3184;
    const double C13568 = C5299 * C3184;
    const double C9242 = C117 * C3552;
    const double C13560 = C5300 * C3552;
    const double C13896 = C5299 * C3552;
    const double C50382 = C50379 / C49999;
    const double C50235 = C50226 + C50232;
    const double C50323 = C50206 + C50320;
    const double C50358 = C50352 * ae;
    const double C50356 = C50071 * C50352;
    const double C50355 = C50352 * ce;
    const double C50431 = C50206 + C50424;
    const double C50433 = C50423 * ae;
    const double C50430 = C50423 * ce;
    const double C50493 = C50165 * C50490;
    const double C50512 = C50490 * ae;
    const double C50510 = C50071 * C50490;
    const double C50509 = C50490 * ce;
    const double C50642 = C50340 + C50635;
    const double C50644 = C50634 * ae;
    const double C50641 = C50634 * ce;
    const double C50740 = C50731 * ae;
    const double C50738 = C50071 * C50731;
    const double C50737 = C50731 * ce;
    const double C50549 = C50540 + C50546;
    const double C50609 = C50469 + C50602;
    const double C50611 = C50601 * ae;
    const double C50608 = C50601 * ce;
    const double C50801 = C50792 * ae;
    const double C50799 = C50071 * C50792;
    const double C50798 = C50792 * ce;
    const double C50869 = C50836 + C50861;
    const double C50868 = C50860 / C49932;
    const double C50210 = C50207 + C50202;
    const double C50427 = C50418 / C49932;
    const double C3024 = (3 * (C50188 + C50201 * C50175) +
                          C50165 * (2 * C50255 + C50165 * C50317)) /
                         C49999;
    const double C50629 = C50623 / C49932;
    const double C50735 = -C50725;
    const double C50476 = C50465 + C50473;
    const double C50605 = C50596 / C49932;
    const double C50788 = -C50777;
    const double C50866 = C50858 / C49999;
    const double C50204 = C50198 / C49932;
    const double C50223 = C50214 / C49932;
    const double C50428 = C50419 / C50080;
    const double C3023 =
        (-3 * (C50197 * C50175 + C50186)) / C49932 +
        C50165 * ((-2 * C50253) / C49932 - (C50165 * C50315) / C49932);
    const double C50485 = C50479 / C49932;
    const double C50630 = C50624 / C50080;
    const double C50474 = C50471 / C49932;
    const double C50537 = C50528 / C49932;
    const double C50606 = C50597 / C50080;
    const double C51479 = C51441 / C50024;
    const double C51443 = C51172 / C49999;
    const double C25568 = -C51478;
    const double C51482 = C51448 / C49957;
    const double C51450 = C51196 / C49932;
    const double C1456 = -C51481;
    const double C51485 = C51457 / C49957;
    const double C51459 = C51239 / C49932;
    const double C1350 = -C51484;
    const double C51491 = C51470 / C50024;
    const double C51472 = C51340 / C49999;
    const double C22938 = -C51490;
    const double C49963 = C49959 / C49932;
    const double C1235 =
        (C49970 / C49940 - (0 * de) / C49932) / C49940 - (0 * de) / C49932;
    const double C1991 = C49970 / C49940 - (0 * de) / C49932;
    const double C51499 = C51460 - C51488;
    const double C51489 = C51463 - C51464;
    const double C989 =
        ((-(0 * de) / C49932) / C49940 -
         ((0 - (C49931 * C49941) / C49932) * de) / C49932) /
            C49940 -
        ((C49931 * ((-C49941 / C49932) / C49940 -
                    ((C51250 - (C49931 * C49945) / C49932) * de) / C49932) +
          C1720) *
         de) /
            C49932 +
        (-C49945 / C49932) / C49940 - (0 * de) / C49932;
    const double C50030 = C50026 / C49999;
    const double C15626 = C15597 * C457;
    const double C15620 = C15597 * C456;
    const double C15614 = C15597 * C465;
    const double C15608 = C15597 * C463;
    const double C15602 = C15597 * C455;
    const double C15814 = C15597 * C858;
    const double C15808 = C15597 * C857;
    const double C15802 = C15597 * C867;
    const double C15996 = C15597 * C994;
    const double C15990 = C15597 * C1000;
    const double C15984 = C15597 * C993;
    const double C16172 = C15597 * C875;
    const double C16166 = C15597 * C861;
    const double C16574 = C15597 * C1237;
    const double C17334 = C15597 * C1147;
    const double C18574 = C15597 * C865;
    const double C18568 = C15597 * C856;
    const double C18884 = C15597 * C860;
    const double C18878 = C15597 * C873;
    const double C18994 = C15597 * C3184;
    const double C19170 = C15597 * C3552;
    const double C19164 = C15597 * C1151;
    const double C19158 = C15597 * C1146;
    const double C19486 = C15597 * C3674;
    const double C15618 = C15598 * C994;
    const double C15610 = C15598 * C1000;
    const double C15604 = C15598 * C993;
    const double C15806 = C15598 * C1147;
    const double C15982 = C15598 * C1237;
    const double C18576 = C15598 * C1151;
    const double C18570 = C15598 * C1146;
    const double C18882 = C15598 * C3552;
    const double C19156 = C15598 * C3674;
    const double C31797 = C31775 * C457;
    const double C31791 = C31775 * C465;
    const double C31787 = C31775 * C456;
    const double C31783 = C31775 * C463;
    const double C31779 = C31775 * C455;
    const double C31993 = C31775 * C857;
    const double C31989 = C31775 * C867;
    const double C31985 = C31775 * C858;
    const double C32178 = C31775 * C994;
    const double C32172 = C31775 * C1000;
    const double C32168 = C31775 * C993;
    const double C32365 = C31775 * C875;
    const double C32361 = C31775 * C861;
    const double C32775 = C31775 * C1237;
    const double C33529 = C31775 * C1147;
    const double C34860 = C31775 * C865;
    const double C34856 = C31775 * C856;
    const double C35275 = C31775 * C860;
    const double C35271 = C31775 * C873;
    const double C35435 = C31775 * C3184;
    const double C35649 = C31775 * C3552;
    const double C35643 = C31775 * C1151;
    const double C35639 = C31775 * C1146;
    const double C36077 = C31775 * C3674;
    const double C21134 =
        (C50037 / C50007 - (0 * be) / C49999) / C50007 - (0 * be) / C49999;
    const double C38289 = C50037 / C50007 - (0 * be) / C49999;
    const double C179 = C169 * C51250;
    const double C480 = C169 * C51454;
    const double C1014 = C169 * C986;
    const double C1726 = C169 * C1720;
    const double C178 = C168 * C118;
    const double C479 = C168 * C452;
    const double C2598 = C2596 * C51250;
    const double C3198 = C2596 * C51454;
    const double C3566 = C2596 * C986;
    const double C4526 = C2596 * C1720;
    const double C2597 = C2595 * C118;
    const double C3197 = C2595 * C452;
    const double C51501 = C51473 - C51494;
    const double C5345 = C5324 + C5325;
    const double C5340 = C5314 + C5315;
    const double C5338 = C5310 + C5311;
    const double C5336 = C5306 + C5307;
    const double C5334 = C5302 + C5303;
    const double C5537 = C5520 + C5521;
    const double C5533 = C5512 + C5513;
    const double C5725 = C5705 + C5706;
    const double C5720 = C5695 + C5696;
    const double C12956 = C12944 + C12945;
    const double C12954 = C12940 + C12941;
    const double C12952 = C12936 + C12937;
    const double C13277 = C13260 + C13261;
    const double C13582 = C13562 + C13563;
    const double C13577 = C13552 + C13553;
    const double C51495 = C51476 - C51477;
    const double C31800 = C31772 * C132;
    const double C31790 = C31772 * C142;
    const double C31786 = C31772 * C130;
    const double C31782 = C31772 * C141;
    const double C31778 = C31772 * C128;
    const double C31996 = C31772 * C305;
    const double C31988 = C31772 * C303;
    const double C32181 = C31772 * C464;
    const double C32171 = C31772 * C462;
    const double C32360 = C31772 * C634;
    const double C32774 = C31772 * C999;
    const double C33528 = C31772 * C866;
    const double C34859 = C31772 * C315;
    const double C34855 = C31772 * C307;
    const double C35282 = C31772 * C751;
    const double C35278 = C31772 * C632;
    const double C35434 = C31772 * C753;
    const double C35656 = C31772 * C874;
    const double C35648 = C31772 * C872;
    const double C35642 = C31772 * C864;
    const double C36076 = C31772 * C1150;
    const double C15596 =
        ((-(0 * be) / C49999) / C50007 -
         ((0 - (C49998 * C50008) / C49999) * be) / C49999) /
            C50007 -
        ((C49998 * ((-C50008 / C49999) / C50007 -
                    ((C51349 - (C49998 * C50012) / C49999) * be) / C49999) +
          C31772) *
         be) /
            C49999 +
        (-C50012 / C49999) / C50007 - (0 * be) / C49999;
    const double C159 = C51349 * C143;
    const double C5321 = C51467 * C143;
    const double C15631 = C15593 * C143;
    const double C31796 = C31772 * C143;
    const double C328 = C51349 * C314;
    const double C5517 = C51467 * C314;
    const double C15805 = C15593 * C314;
    const double C31992 = C31772 * C314;
    const double C484 = C51349 * C473;
    const double C5309 = C51361 * C473;
    const double C5700 = C51467 * C473;
    const double C15609 = C15594 * C473;
    const double C15993 = C15593 * C473;
    const double C31784 = C51361 * C473;
    const double C32175 = C31772 * C473;
    const double C2896 = C51349 * C642;
    const double C12949 = C51467 * C642;
    const double C18881 = C15593 * C642;
    const double C35274 = C31772 * C642;
    const double C3202 = C51349 * C880;
    const double C12943 = C51361 * C880;
    const double C13557 = C51467 * C880;
    const double C18575 = C15594 * C880;
    const double C19167 = C15593 * C880;
    const double C34861 = C51361 * C880;
    const double C35646 = C31772 * C880;
    const double C660 = C648 + C649;
    const double C5900 = C5884 + C5885;
    const double C1611 = C1593 + C1594;
    const double C5536 = C5518 + C5519;
    const double C7080 = C7064 + C7065;
    const double C1037 = C1017 + C1018;
    const double C5719 = C5693 + C5694;
    const double C6314 = C6298 + C6299;
    const double C3573 = C3569 + C3570;
    const double C13576 = C13550 + C13551;
    const double C13904 = C13888 + C13889;
    const double C180 = C170 * C118;
    const double C485 = C170 * C452;
    const double C182 = C172 * C118;
    const double C491 = C172 * C452;
    const double C346 = C338 * C118;
    const double C1602 = C338 * C452;
    const double C348 = C340 * C118;
    const double C1596 = C340 * C452;
    const double C513 = C503 * C453;
    const double C1015 = C503 * C990;
    const double C1727 = C503 * C1723;
    const double C515 = C506 * C453;
    const double C1023 = C506 * C990;
    const double C1731 = C506 * C1723;
    const double C2916 = C2910 * C118;
    const double C3206 = C2910 * C452;
    const double C3037 = C3035 * C118;
    const double C8902 = C3035 * C452;
    const double C3229 = C3221 * C453;
    const double C3567 = C3221 * C990;
    const double C4527 = C3221 * C1723;
    const double C3231 = C3223 * C453;
    const double C5044 = C3223 * C1723;
    const double C9240 = C3223 * C990;
    const double C181 = C171 * C51250;
    const double C486 = C171 * C51454;
    const double C1022 = C171 * C986;
    const double C1730 = C171 * C1720;
    const double C3029 =
        3 * ((-(C50093 * C50175) / C49932) / C49999 - C50084 / C50080) +
        C50165 * ((-2 * C50165 * C50093) / C50080 +
                  C50165 * ((-(C50102 * C50175) / C49932) / C49999 - C50098));
    const double C3193 =
        (((-2 * C50249) / C49932 -
          (C50165 * (C50148 * C50175 + C50143)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50251 + C50165 * (C50144 + C50149 * C50175)) * ce) / C50080 +
        C50071 * ((-2 * C50165 * C50093) / C50080 +
                  C50165 * ((-(C50102 * C50175) / C49932) / C49999 - C50098));
    const double C3561 =
        (-(C50093 * C50175) / C49932) / C49999 - C50084 / C50080 -
        (ae * (C50071 * C50308 + C50309 * ce)) / C50080 -
        ((C50071 * C50310 + C50309 * ae) * ce) / C50080 +
        C50071 * ((-(C50310 * ce) / C49932) / C49999 - (ae * C50308) / C50080 +
                  C50071 * ((-(C50102 * C50175) / C49932) / C49999 - C50098));
    const double C881 = (-(C50165 * C50076 * C50144 * ce) / C49932) / C49999 -
                        (ae * C50165 * C50076 * C50143) / C50080 -
                        (C50071 * C50165 * C50168) / C50080;
    const double C1008 =
        (-(ae * (C50071 * C50186 + C50187 * ce)) / C49932) / C49999 -
        (C50076 * C50084) / C50080 -
        ((C50071 * C50188 + C50187 * ae) * ce) / C50080 +
        C50071 * ((-(C50188 * ce) / C49932) / C49999 - (ae * C50186) / C50080 -
                  (C50071 * C50168) / C50080);
    const double C50373 = C50364 / C50080;
    const double C161 = C51349 * C144;
    const double C5331 = C51467 * C144;
    const double C31806 = C31772 * C144;
    const double C324 = C51349 * C313;
    const double C5509 = C51467 * C313;
    const double C15819 = C15593 * C313;
    const double C31984 = C31772 * C313;
    const double C490 = C51349 * C474;
    const double C5317 = C51361 * C474;
    const double C5710 = C51467 * C474;
    const double C15615 = C15594 * C474;
    const double C16001 = C15593 * C474;
    const double C31792 = C51361 * C474;
    const double C32185 = C31772 * C474;
    const double C651 = C51349 * C643;
    const double C5889 = C51467 * C643;
    const double C16171 = C15593 * C643;
    const double C32364 = C31772 * C643;
    const double C3034 = C51349 * C757;
    const double C13257 = C51467 * C757;
    const double C18999 = C15593 * C757;
    const double C35438 = C31772 * C757;
    const double C3208 = C51349 * C884;
    const double C12951 = C51361 * C884;
    const double C13567 = C51467 * C884;
    const double C18879 = C15594 * C884;
    const double C19175 = C15593 * C884;
    const double C35272 = C51361 * C884;
    const double C35652 = C31772 * C884;
    const double C3572 = C51349 * C1158;
    const double C13555 = C51361 * C1158;
    const double C13893 = C51467 * C1158;
    const double C18577 = C15595 * C1158;
    const double C19165 = C15594 * C1158;
    const double C19491 = C15593 * C1158;
    const double C35644 = C51361 * C1158;
    const double C36080 = C31772 * C1158;
    const double C47443 = C38286 * C1158;
    const double C50104 = C50103 / C49932;
    const double C50114 = -2 * C50109;
    const double C50338 = C50165 * C50109;
    const double C50392 = C50071 * C50109;
    const double C50446 = C50109 / C50080;
    const double C756 =
        (-2 * C50165 * C50168) / C50080 +
        C50165 * ((-(C50109 * std::pow(C50165, 2)) / C49932) / C49999 -
                  C50168 / C50080);
    const double C885 =
        (-((C50076 * C50144 + C50076 * C50149 * C50175) * ce) / C49932) /
            C49999 -
        (ae * (C50076 * C50148 * C50175 + C50076 * C50143)) / C50080 +
        C50071 * ((-(C50109 * C50175) / C49932) / C49999 - C50168 / C50080);
    const double C1159 =
        (-(ae * (C50071 * C50253 + C50254 * ce)) / C49932) / C49999 -
        (C50165 * C50168) / C50080 -
        ((C50071 * C50255 + C50254 * ae) * ce) / C50080 +
        C50071 * ((-(C50255 * ce) / C49932) / C49999 - (ae * C50253) / C50080 -
                  (C50071 * C50165 * C50109) / C50080);
    const double C3028 =
        3 * ((-(C50109 * C50175) / C49932) / C49999 - C50168 / C50080) +
        C50165 * ((-2 * C50165 * C50109) / C50080 +
                  C50165 * ((-(C50076 * C50119 * C50175) / C49932) / C49999 -
                            C50109 / C50080));
    const double C3194 =
        (((-2 * C50253) / C49932 -
          (C50165 * (C50215 * C50175 + C50197)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50255 + C50165 * (C50201 + C50221 * C50175)) * ce) / C50080 +
        C50071 * ((-2 * C50165 * C50109) / C50080 +
                  C50165 * ((-(C50076 * C50119 * C50175) / C49932) / C49999 -
                            C50109 / C50080));
    const double C50454 = C50453 / C49932;
    const double C50518 = -2 * C50516;
    const double C50570 = C50071 * C50516;
    const double C50764 = C50516 / C50080;
    const double C50673 = C50659 / C50080;
    const double C50212 = C50205 + C50209;
    const double C1154 =
        (C50165 * C50195 + C50071 * (C50071 * C50259 + C50258 * ae) +
         C50071 * C50258 * ae) /
        C49999;
    const double C1155 = -(C50071 * (C50071 * C50257 + C50258 * ce) +
                           C50165 * C50193 + C50071 * C50258 * ce) /
                         C49932;
    const double C1148 = C50165 * C50194 + C50258 * C50074;
    const double C3676 =
        2 * C50071 * C50258 + C50071 * (C50258 + C50352 * C50074);
    const double C50287 = C50284 + C50285;
    const double C50286 = C50281 + C50282;
    const double C2905 = C117 * C743;
    const double C3215 = C117 * C862;
    const double C5894 = C5300 * C862;
    const double C32369 = C31775 * C862;
    const double C6308 = C5300 * C1238;
    const double C15998 = C15598 * C1238;
    const double C32783 = C31775 * C1238;
    const double C3562 =
        (-(C50109 * C50175) / C49932) / C49999 - C50168 / C50080 -
        (ae * (C50071 * C50315 + C50316 * ce)) / C50080 -
        ((C50071 * C50317 + C50316 * ae) * ce) / C50080 +
        C50071 * ((-(C50317 * ce) / C49932) / C49999 - (ae * C50315) / C50080 +
                  C50071 * ((-(C50076 * C50119 * C50175) / C49932) / C49999 -
                            C50109 / C50080));
    const double C3189 = (C50071 * (2 * C50255 + C50165 * C50317) +
                          (2 * C50254 + C50165 * C50316) * ae) /
                         C49999;
    const double C3190 =
        C50071 * ((-2 * C50253) / C49932 - (C50165 * C50315) / C49932) -
        ((2 * C50254 + C50165 * C50316) * ce) / C49932;
    const double C3557 =
        (C50188 + C50201 * C50175 + C50071 * (C50071 * C50317 + C50316 * ae) +
         C50071 * C50316 * ae) /
        C49999;
    const double C3558 = -(C50071 * (C50071 * C50315 + C50316 * ce) +
                           C50197 * C50175 + C50186 + C50071 * C50316 * ce) /
                         C49932;
    const double C3019 = 3 * (C50187 + C50199 * C50175) +
                         C50165 * (2 * C50254 + C50165 * C50316);
    const double C3185 = C50071 * (2 * C50254 + C50165 * C50316);
    const double C3553 = C50187 + C50199 * C50175 + C50316 * C50074;
    const double C9348 =
        2 * C50071 * C50316 + C50071 * (C50316 + C50490 * C50074);
    const double C50348 = C50345 + C50346;
    const double C50347 = C50342 + C50343;
    const double C17336 = C15598 * C3675;
    const double C29371 = C5300 * C3675;
    const double C35871 = C31775 * C3675;
    const double C50409 = C50071 * C50405;
    const double C50720 = 2 * C50405;
    const double C50710 = C50405 * ce;
    const double C6566 = 3 * (C50187 + C50199 * C50074) +
                         C50071 * (2 * C50275 + C50071 * C50404);
    const double C50408 = C50071 * C50402;
    const double C50714 = -2 * C50402;
    const double C50709 = ae * C50402;
    const double C50475 = C50463 + C50472;
    const double C50506 = C50503 + C50504;
    const double C50505 = C50500 + C50501;
    const double C13898 = C5300 * C9347;
    const double C19172 = C15598 * C9347;
    const double C45614 = C31775 * C9347;
    const double C50587 = C50071 * C50583;
    const double C50773 = 2 * C50583;
    const double C50765 = C50583 * ce;
    const double C14009 = 3 * (C50250 + C50328 * C50074) +
                          C50071 * (2 * C50332 + C50071 * C50582);
    const double C50586 = C50071 * C50580;
    const double C50769 = -2 * C50580;
    const double C50763 = ae * C50580;
    const double C50692 = C50149 + C50685;
    const double C50845 = C50826 / C50080;
    const double C50691 = C50665 + C50684;
    const double C50690 = C50683 / C49932;
    const double C50689 = C50682 + C50148;
    const double C50850 = C50831 / C49932;
    const double C50844 = C50825 / C49932;
    const double C163 = C51349 * C135;
    const double C5327 = C51467 * C135;
    const double C31802 = C31772 * C135;
    const double C322 = C51349 * C301;
    const double C5523 = C51467 * C301;
    const double C31998 = C31772 * C301;
    const double C494 = C51349 * C466;
    const double C5323 = C51361 * C466;
    const double C5712 = C51467 * C466;
    const double C15627 = C15594 * C466;
    const double C31798 = C51361 * C466;
    const double C32187 = C31772 * C466;
    const double C653 = C51349 * C636;
    const double C5893 = C51467 * C636;
    const double C32368 = C31772 * C636;
    const double C2906 = C51349 * C749;
    const double C1600 = C51349 * C868;
    const double C5511 = C51361 * C868;
    const double C7073 = C51467 * C868;
    const double C15815 = C15594 * C868;
    const double C31986 = C51361 * C868;
    const double C33536 = C31772 * C868;
    const double C3216 = C51349 * C876;
    const double C5895 = C51361 * C876;
    const double C32370 = C51361 * C876;
    const double C1026 = C51349 * C1001;
    const double C5704 = C51361 * C1001;
    const double C6307 = C51467 * C1001;
    const double C15619 = C15595 * C1001;
    const double C15997 = C15594 * C1001;
    const double C32179 = C51361 * C1001;
    const double C32782 = C31772 * C1001;
    const double C38310 = C38286 * C1001;
    const double C3388 = C51349 * C1152;
    const double C7067 = C51361 * C1152;
    const double C15807 = C15595 * C1152;
    const double C17335 = C15594 * C1152;
    const double C29370 = C51467 * C1152;
    const double C33530 = C51361 * C1152;
    const double C35870 = C31772 * C1152;
    const double C38498 = C38286 * C1152;
    const double C1242 = (2 * (C50071 * C50188 + C50187 * ae) +
                          C50071 * (C50188 + C50071 * C50279 + C50275 * ae) +
                          (C50187 + C50199 * C50074) * ae) /
                         C49999;
    const double C50407 = -C50399;
    const double C2911 = C2901 + C2902;
    const double C13278 = C13262 + C13263;
    const double C3225 = C3209 + C3210;
    const double C5901 = C5886 + C5887;
    const double C14512 = C14504 + C14505;
    const double C8734 = C51349 * C3026;
    const double C13389 = C51467 * C3026;
    const double C45137 = C31772 * C3026;
    const double C8900 = C51349 * C3187;
    const double C13259 = C51361 * C3187;
    const double C13569 = C51467 * C3187;
    const double C18995 = C15594 * C3187;
    const double C35436 = C51361 * C3187;
    const double C45303 = C31772 * C3187;
    const double C9243 = C51349 * C3555;
    const double C13561 = C51361 * C3555;
    const double C13897 = C51467 * C3555;
    const double C18883 = C15595 * C3555;
    const double C19171 = C15594 * C3555;
    const double C35650 = C51361 * C3555;
    const double C45613 = C31772 * C3555;
    const double C47749 = C38286 * C3555;
    const double C3677 = (2 * (C50071 * C50251 + C50250 * ae) +
                          C50071 * (C50251 + C50071 * C50336 + C50332 * ae) +
                          (C50250 + C50328 * C50074) * ae) /
                         C49999;
    const double C50585 = -C50577;
    const double C50384 = C50144 + C50381;
    const double C50670 = C50656 / C50080;
    const double C50688 = C50681 / C49999;
    const double C160 = C117 * C134;
    const double C5330 = C5299 * C134;
    const double C319 = C117 * C300;
    const double C5526 = C5299 * C300;
    const double C495 = C117 * C467;
    const double C5318 = C5300 * C467;
    const double C5715 = C5299 * C467;
    const double C15632 = C15597 * C467;
    const double C31793 = C31775 * C467;
    const double C654 = C117 * C637;
    const double C5896 = C5299 * C637;
    const double C2907 = C117 * C748;
    const double C1603 = C117 * C869;
    const double C5506 = C5300 * C869;
    const double C7076 = C5299 * C869;
    const double C15820 = C15597 * C869;
    const double C31981 = C31775 * C869;
    const double C3219 = C117 * C877;
    const double C5898 = C5300 * C877;
    const double C32373 = C31775 * C877;
    const double C1027 = C117 * C1002;
    const double C5707 = C5300 * C1002;
    const double C6310 = C5299 * C1002;
    const double C15612 = C15598 * C1002;
    const double C16002 = C15597 * C1002;
    const double C32182 = C31775 * C1002;
    const double C3389 = C117 * C1153;
    const double C7070 = C5300 * C1153;
    const double C15800 = C15598 * C1153;
    const double C17340 = C15597 * C1153;
    const double C29373 = C5299 * C1153;
    const double C33533 = C31775 * C1153;
    const double C1249 =
        2 * ((-(C50188 * ce) / C49932) / C49999 - (ae * C50186) / C50080 -
             (C50071 * C50168) / C50080) -
        (ae * (C50071 * C50278 + C50186 + C50275 * ce)) / C50080 -
        ((C50188 + C50071 * C50279 + C50275 * ae) * ce) / C50080 +
        C50071 *
            ((-(ae * C50278) / C49932) / C49999 - C50168 / C50080 -
             (C50279 * ce) / C50080 +
             C50071 * ((-(C50201 * ce) / C49932) / C49999 -
                       (ae * C50197) / C50080 - (C50071 * C50109) / C50080));
    const double C1243 =
        (-2 * (C50071 * C50186 + C50187 * ce)) / C49932 -
        (C50071 * (C50071 * C50278 + C50186 + C50275 * ce)) / C49932 -
        ((C50187 + C50199 * C50074) * ce) / C49932;
    const double C8735 = C117 * C3025;
    const double C13392 = C5299 * C3025;
    const double C8903 = C117 * C3188;
    const double C13254 = C5300 * C3188;
    const double C13572 = C5299 * C3188;
    const double C19000 = C15597 * C3188;
    const double C35439 = C31775 * C3188;
    const double C9244 = C117 * C3556;
    const double C13564 = C5300 * C3556;
    const double C13900 = C5299 * C3556;
    const double C18876 = C15598 * C3556;
    const double C19176 = C15597 * C3556;
    const double C35653 = C31775 * C3556;
    const double C3683 =
        2 * ((-(C50251 * ce) / C49932) / C49999 - (ae * C50249) / C50080 -
             (C50071 * C50326) / C50080) -
        (ae * (C50071 * C50335 + C50249 + C50332 * ce)) / C50080 -
        ((C50251 + C50071 * C50336 + C50332 * ae) * ce) / C50080 +
        C50071 * ((-(ae * C50335) / C49932) / C49999 - C50326 / C50080 -
                  (C50336 * ce) / C50080 +
                  C50071 * ((-(C50329 * ce) / C49932) / C49999 -
                            (ae * C50327) / C50080 -
                            (C50071 * C50165 * C50102) / C50080));
    const double C3678 =
        (-2 * (C50071 * C50249 + C50250 * ce)) / C49932 -
        (C50071 * (C50071 * C50335 + C50249 + C50332 * ce)) / C49932 -
        ((C50250 + C50328 * C50074) * ce) / C49932;
    const double C50383 = C50380 + C50143;
    const double C50674 = C50660 / C49932;
    const double C50669 = C50655 / C49932;
    const double C50121 = C50120 / C49932;
    const double C50447 = C50445 * C50175;
    const double C50625 = C50165 * C50445;
    const double C50713 = C50071 * C50445;
    const double C50519 = C50517 / C49932;
    const double C50779 = C50071 * C50768;
    const double C50848 = C50829 / C50080;
    const double C50242 = C50228 + C50239;
    const double C50324 = C50158 + C50321;
    const double C50357 = C50071 * C50353;
    const double C50432 = C50425 + C50426;
    const double C50494 = C50165 * C50491;
    const double C50511 = C50071 * C50491;
    const double C50643 = C50636 + C50637;
    const double C50739 = C50071 * C50732;
    const double C50550 = C50542 + C50547;
    const double C50610 = C50603 + C50604;
    const double C50800 = C50071 * C50793;
    const double C50870 = C50154 + C50862;
    const double C50240 = C50237 / C49932;
    const double C50322 = C50319 + C50157;
    const double C50354 = C50071 * C50351;
    const double C50429 = C50421 + C50422;
    const double C50492 = C50165 * C50489;
    const double C50508 = C50071 * C50489;
    const double C50640 = C50632 + C50633;
    const double C50736 = C50071 * C50729;
    const double C50548 = C50545 / C49932;
    const double C50607 = C50599 + C50600;
    const double C50797 = C50071 * C50790;
    const double C50867 = C50859 + C50153;
    const double C50385 = C50382 - C50372;
    const double C50238 = C50076 * C50235;
    const double C50262 = C50165 * C50235;
    const double C50293 = C50235 * ae;
    const double C50291 = C50071 * C50235;
    const double C50290 = C50235 * ce;
    const double C3018 = 3 * (C50194 + C50206 * C50175) +
                         C50165 * (2 * C50258 + C50165 * C50323);
    const double C3186 = C50071 * (2 * C50258 + C50165 * C50323);
    const double C3554 = C50194 + C50206 * C50175 + C50323 * C50074;
    const double C6567 = 3 * (C50194 + C50206 * C50074) +
                         C50071 * (2 * C50283 + C50071 * C50431);
    const double C50496 = C50481 + C50493;
    const double C16735 = 3 * (C50254 + C50340 * C50074) +
                          C50071 * (2 * C50344 + C50071 * C50642);
    const double C50745 = C50719 + C50738;
    const double C50744 = C50737 / C49932;
    const double C50552 = C50165 * C50549;
    const double C50563 = C50549 * ae;
    const double C50561 = C50071 * C50549;
    const double C50560 = C50549 * ce;
    const double C14010 = 3 * (C50309 + C50469 * C50074) +
                          C50071 * (2 * C50502 + C50071 * C50609);
    const double C50806 = C50772 + C50799;
    const double C50805 = C50798 / C49932;
    const double C50877 = C50869 * ae;
    const double C50875 = C50071 * C50869;
    const double C50874 = C50869 * ce;
    const double C136 = (4 * (2 * C50188 + C50076 * C50195) +
                         C50076 * (3 * C50195 + C50076 * C50210)) /
                        C49999;
    const double C308 = (C50165 * (3 * C50195 + C50076 * C50210)) / C49999;
    const double C638 =
        (2 * C50188 + C50076 * C50195 + C50210 * C50175) / C49999;
    const double C50434 = -C50427;
    const double C8613 = C51349 * C3024;
    const double C50638 = -C50629;
    const double C50742 = C50735 / C49999;
    const double C8727 = (4 * (2 * C50251 + C50165 * C50310) +
                          C50165 * (3 * C50310 + C50165 * C50476)) /
                         C49999;
    const double C50612 = -C50605;
    const double C50796 = C50788 / C49999;
    const double C50872 = C50866 - C50847;
    const double C50211 = C50208 - C50204;
    const double C8614 = C117 * C3023;
    const double C50477 = C50467 - C50474;
    const double C51496 = C51440 - C51479;
    const double C51480 = C51442 - C51443;
    const double C51497 = C51447 - C51482;
    const double C51483 = C51449 - C51450;
    const double C51498 = C51455 - C51485;
    const double C51486 = C51458 - C51459;
    const double C51500 = C51468 - C51491;
    const double C51492 = C51471 - C51472;
    const double C49968 = C51250 - C49963;
    const double C2000 = C171 * C51499;
    const double C1994 = C169 * C51499;
    const double C5195 = C2596 * C51499;
    const double C1228 =
        (C51454 - C51487) / C49940 - (C51499 * C51258) / C49932;
    const double C1229 =
        (2 * C51262 + C51499) / C49940 - (C51489 * C51258) / C49932;
    const double C1230 = C51489 / C49940 - C51265 / C49961;
    const double C1029 = C172 * C989;
    const double C1021 = C170 * C989;
    const double C1013 = C168 * C989;
    const double C3391 = C338 * C989;
    const double C3383 = C340 * C989;
    const double C3565 = C2595 * C989;
    const double C9238 = C2910 * C989;
    const double C11617 = C3035 * C989;
    const double C50035 = C51349 - C50030;
    const double C15646 = C15620 + C15621;
    const double C15637 = C15602 + C15603;
    const double C15828 = C15808 + C15809;
    const double C16007 = C15984 + C15985;
    const double C16177 = C16166 + C16167;
    const double C18579 = C18568 + C18569;
    const double C18892 = C18884 + C18885;
    const double C19181 = C19158 + C19159;
    const double C15638 = C15604 + C15605;
    const double C18580 = C18570 + C18571;
    const double C31814 = C31787 + C31788;
    const double C31810 = C31779 + C31780;
    const double C32011 = C31993 + C31994;
    const double C32194 = C32168 + C32169;
    const double C32376 = C32361 + C32362;
    const double C34869 = C34856 + C34857;
    const double C35293 = C35275 + C35276;
    const double C35663 = C35639 + C35640;
    const double C38309 = C38289 * C994;
    const double C38303 = C38289 * C1002;
    const double C38301 = C38289 * C1000;
    const double C38295 = C38289 * C993;
    const double C38497 = C38289 * C1147;
    const double C38491 = C38289 * C1153;
    const double C38689 = C38289 * C1238;
    const double C38673 = C38289 * C1237;
    const double C40015 = C38289 * C3675;
    const double C47442 = C38289 * C1151;
    const double C47436 = C38289 * C1146;
    const double C47748 = C38289 * C3552;
    const double C47742 = C38289 * C3556;
    const double C48038 = C38289 * C9347;
    const double C48022 = C38289 * C3674;
    const double C38322 = C51501 * C143;
    const double C38316 = C51501 * C132;
    const double C38314 = C51501 * C130;
    const double C38308 = C51501 * C142;
    const double C38298 = C51501 * C141;
    const double C38292 = C51501 * C128;
    const double C38510 = C51501 * C313;
    const double C38504 = C51501 * C303;
    const double C38502 = C51501 * C305;
    const double C38496 = C51501 * C314;
    const double C38692 = C51501 * C474;
    const double C38686 = C51501 * C464;
    const double C38684 = C51501 * C473;
    const double C38678 = C51501 * C462;
    const double C38862 = C51501 * C643;
    const double C38856 = C51501 * C634;
    const double C39264 = C51501 * C999;
    const double C40012 = C51501 * C866;
    const double C47439 = C51501 * C315;
    const double C47433 = C51501 * C307;
    const double C47753 = C51501 * C632;
    const double C47747 = C51501 * C642;
    const double C47865 = C51501 * C757;
    const double C47859 = C51501 * C753;
    const double C48041 = C51501 * C884;
    const double C48035 = C51501 * C872;
    const double C48033 = C51501 * C880;
    const double C48027 = C51501 * C864;
    const double C48357 = C51501 * C1158;
    const double C48351 = C51501 * C1150;
    const double C21127 =
        (C51467 - C51493) / C50007 - (C51501 * C51357) / C49999;
    const double C5350 = C5338 + C5339;
    const double C13252 = C12956 + C12957;
    const double C38318 = C51495 * C466;
    const double C38312 = C51495 * C464;
    const double C38306 = C51495 * C474;
    const double C38300 = C51495 * C473;
    const double C38294 = C51495 * C462;
    const double C38506 = C51495 * C868;
    const double C38500 = C51495 * C866;
    const double C38688 = C51495 * C1001;
    const double C38676 = C51495 * C999;
    const double C38858 = C51495 * C874;
    const double C40014 = C51495 * C1152;
    const double C47441 = C51495 * C880;
    const double C47435 = C51495 * C864;
    const double C47751 = C51495 * C872;
    const double C47745 = C51495 * C884;
    const double C47861 = C51495 * C3187;
    const double C48037 = C51495 * C3555;
    const double C48031 = C51495 * C1158;
    const double C48025 = C51495 * C1150;
    const double C21128 =
        (2 * C51361 + C51501) / C50007 - (C51495 * C51357) / C49999;
    const double C21129 = C51495 / C50007 - C51364 / C50028;
    const double C15630 = C15596 * C133;
    const double C15624 = C15596 * C122;
    const double C15622 = C15596 * C121;
    const double C15616 = C15596 * C131;
    const double C15606 = C15596 * C129;
    const double C15600 = C15596 * C120;
    const double C15818 = C15596 * C302;
    const double C15812 = C15596 * C295;
    const double C15810 = C15596 * C296;
    const double C15804 = C15596 * C304;
    const double C16000 = C15596 * C465;
    const double C15994 = C15596 * C456;
    const double C15992 = C15596 * C463;
    const double C15986 = C15596 * C455;
    const double C16170 = C15596 * C635;
    const double C16164 = C15596 * C628;
    const double C16578 = C15596 * C1000;
    const double C16572 = C15596 * C993;
    const double C17338 = C15596 * C867;
    const double C17332 = C15596 * C857;
    const double C18572 = C15596 * C306;
    const double C18566 = C15596 * C297;
    const double C18886 = C15596 * C627;
    const double C18880 = C15596 * C633;
    const double C18998 = C15596 * C752;
    const double C18992 = C15596 * C745;
    const double C19174 = C15596 * C873;
    const double C19168 = C15596 * C860;
    const double C19166 = C15596 * C865;
    const double C19160 = C15596 * C856;
    const double C19490 = C15596 * C1151;
    const double C19484 = C15596 * C1146;
    const double C173 = C158 + C159;
    const double C5343 = C5320 + C5321;
    const double C339 = C327 + C328;
    const double C5535 = C5516 + C5517;
    const double C504 = C483 + C484;
    const double C5337 = C5308 + C5309;
    const double C5722 = C5699 + C5700;
    const double C15640 = C15608 + C15609;
    const double C31812 = C31783 + C31784;
    const double C2909 = C2895 + C2896;
    const double C12958 = C12948 + C12949;
    const double C3222 = C3201 + C3202;
    const double C12955 = C12942 + C12943;
    const double C13579 = C13556 + C13557;
    const double C18582 = C18574 + C18575;
    const double C34871 = C34860 + C34861;
    const double C666 = C660 * C118;
    const double C3212 = C660 * C452;
    const double C9072 = C660 * C989;
    const double C1617 = C1611 * C453;
    const double C1877 = C1611 * C1723;
    const double C3385 = C1611 * C990;
    const double C28446 = C5536 + C5537;
    const double C28443 = C5537 + C5536;
    const double C1043 = C1037 * C991;
    const double C1997 = C1037 * C1991;
    const double C3575 = C3573 * C991;
    const double C5198 = C3573 * C1991;
    const double C188 = C180 + C181;
    const double C505 = C485 + C486;
    const double C8736 = C51349 * C3029;
    const double C13393 = C51467 * C3029;
    const double C45141 = C31772 * C3029;
    const double C8904 = C51349 * C3193;
    const double C13255 = C51361 * C3193;
    const double C13573 = C51467 * C3193;
    const double C19001 = C15594 * C3193;
    const double C35440 = C51361 * C3193;
    const double C45307 = C31772 * C3193;
    const double C47867 = C51495 * C3193;
    const double C9245 = C51349 * C3561;
    const double C13565 = C51361 * C3561;
    const double C13901 = C51467 * C3561;
    const double C18877 = C15595 * C3561;
    const double C19177 = C15594 * C3561;
    const double C35654 = C51361 * C3561;
    const double C45617 = C31772 * C3561;
    const double C47743 = C38286 * C3561;
    const double C48043 = C51495 * C3561;
    const double C1598 = C51349 * C881;
    const double C5515 = C51361 * C881;
    const double C7069 = C51467 * C881;
    const double C15803 = C15594 * C881;
    const double C17339 = C15593 * C881;
    const double C31990 = C51361 * C881;
    const double C33532 = C31772 * C881;
    const double C38494 = C51495 * C881;
    const double C40018 = C51501 * C881;
    const double C1020 = C51349 * C1008;
    const double C5698 = C51361 * C1008;
    const double C6303 = C51467 * C1008;
    const double C15611 = C15595 * C1008;
    const double C15991 = C15594 * C1008;
    const double C16579 = C15593 * C1008;
    const double C32173 = C51361 * C1008;
    const double C32778 = C31772 * C1008;
    const double C38302 = C38286 * C1008;
    const double C38682 = C51495 * C1008;
    const double C39270 = C51501 * C1008;
    const double C337 = C323 + C324;
    const double C5531 = C5508 + C5509;
    const double C507 = C489 + C490;
    const double C5341 = C5316 + C5317;
    const double C5727 = C5709 + C5710;
    const double C15643 = C15614 + C15615;
    const double C31816 = C31791 + C31792;
    const double C661 = C650 + C651;
    const double C5902 = C5888 + C5889;
    const double C3036 = C3033 + C3034;
    const double C13275 = C13256 + C13257;
    const double C3224 = C3207 + C3208;
    const double C12959 = C12950 + C12951;
    const double C13584 = C13566 + C13567;
    const double C18889 = C18878 + C18879;
    const double C35291 = C35271 + C35272;
    const double C3574 = C3571 + C3572;
    const double C13578 = C13554 + C13555;
    const double C13906 = C13892 + C13893;
    const double C18583 = C18576 + C18577;
    const double C19184 = C19164 + C19165;
    const double C35665 = C35643 + C35644;
    const double C50105 = -C50104;
    const double C50116 = C50114 / C50080;
    const double C50401 = C50392 / C50080;
    const double C2904 = C51349 * C756;
    const double C13267 = C51467 * C756;
    const double C35286 = C31772 * C756;
    const double C3214 = C51349 * C885;
    const double C5891 = C51361 * C885;
    const double C14509 = C51467 * C885;
    const double C16173 = C15594 * C885;
    const double C32366 = C51361 * C885;
    const double C35660 = C31772 * C885;
    const double C38864 = C51495 * C885;
    const double C3390 = C51349 * C1159;
    const double C7071 = C51361 * C1159;
    const double C15801 = C15595 * C1159;
    const double C17341 = C15594 * C1159;
    const double C29374 = C51467 * C1159;
    const double C33534 = C51361 * C1159;
    const double C35874 = C31772 * C1159;
    const double C38492 = C38286 * C1159;
    const double C40020 = C51495 * C1159;
    const double C8615 = C51349 * C3028;
    const double C8910 = C51349 * C3194;
    const double C13269 = C51361 * C3194;
    const double C35288 = C51361 * C3194;
    const double C50455 = -C50454;
    const double C50520 = C50518 / C50080;
    const double C50579 = C50570 / C50080;
    const double C468 = (C50071 * (3 * C50195 + C50076 * C50210) +
                         (3 * C50194 + C50076 * C50212) * ae) /
                        C49999;
    const double C870 =
        (C50071 * C50165 * C50210 + C50165 * C50212 * ae) / C49999;
    const double C1003 =
        (2 * C50188 + C50076 * C50195 +
         C50071 * (C50071 * C50210 + C50212 * ae) + C50071 * C50212 * ae) /
        C49999;
    const double C124 = 4 * (2 * C50187 + C50076 * C50194) +
                        C50076 * (3 * C50194 + C50076 * C50212);
    const double C298 = C50165 * (3 * C50194 + C50076 * C50212);
    const double C458 = C50071 * (3 * C50194 + C50076 * C50212);
    const double C630 = 2 * C50187 + C50076 * C50194 + C50212 * C50175;
    const double C742 =
        2 * C50165 * C50212 + C50165 * (C50212 + C50235 * C50175);
    const double C859 = C50071 * C50165 * C50212;
    const double C863 = C50071 * (C50212 + C50235 * C50175);
    const double C995 = 2 * C50187 + C50076 * C50194 + C50212 * C50074;
    const double C1239 =
        2 * C50071 * C50212 + C50071 * (C50212 + C50235 * C50074);
    const double C3396 = C51349 * C1154;
    const double C7075 = C51361 * C1154;
    const double C15817 = C15595 * C1154;
    const double C33538 = C51361 * C1154;
    const double C38508 = C38286 * C1154;
    const double C3397 = C117 * C1155;
    const double C7078 = C5300 * C1155;
    const double C15822 = C15598 * C1155;
    const double C33541 = C31775 * C1155;
    const double C38513 = C38289 * C1155;
    const double C3395 = C117 * C1148;
    const double C7074 = C5300 * C1148;
    const double C15816 = C15598 * C1148;
    const double C33537 = C31775 * C1148;
    const double C38507 = C38289 * C1148;
    const double C1244 = (2 * (C50071 * C50195 + C50194 * ae) +
                          C50071 * (C50195 + C50071 * C50287 + C50283 * ae) +
                          (C50194 + C50206 * C50074) * ae) /
                         C49999;
    const double C1245 =
        (-2 * (C50071 * C50193 + C50194 * ce)) / C49932 -
        (C50071 * (C50071 * C50286 + C50193 + C50283 * ce)) / C49932 -
        ((C50194 + C50206 * C50074) * ce) / C49932;
    const double C9079 = C51349 * C3562;
    const double C14511 = C51361 * C3562;
    const double C16175 = C15595 * C3562;
    const double C35662 = C51361 * C3562;
    const double C38866 = C38286 * C3562;
    const double C8906 = C51349 * C3189;
    const double C13265 = C51361 * C3189;
    const double C35284 = C51361 * C3189;
    const double C8909 = C117 * C3190;
    const double C13268 = C5300 * C3190;
    const double C35287 = C31775 * C3190;
    const double C9077 = C51349 * C3557;
    const double C14507 = C51361 * C3557;
    const double C16169 = C15595 * C3557;
    const double C35658 = C51361 * C3557;
    const double C38860 = C38286 * C3557;
    const double C9078 = C117 * C3558;
    const double C14510 = C5300 * C3558;
    const double C16174 = C15598 * C3558;
    const double C35661 = C31775 * C3558;
    const double C38865 = C38289 * C3558;
    const double C8612 = C117 * C3019;
    const double C8905 = C117 * C3185;
    const double C13264 = C5300 * C3185;
    const double C35283 = C31775 * C3185;
    const double C9076 = C117 * C3553;
    const double C14506 = C5300 * C3553;
    const double C16168 = C15598 * C3553;
    const double C35657 = C31775 * C3553;
    const double C38859 = C38289 * C3553;
    const double C3679 = (2 * (C50071 * C50255 + C50254 * ae) +
                          C50071 * (C50255 + C50071 * C50348 + C50344 * ae) +
                          (C50254 + C50340 * C50074) * ae) /
                         C49999;
    const double C3684 =
        2 * ((-(C50255 * ce) / C49932) / C49999 - (ae * C50253) / C50080 -
             (C50071 * C50338) / C50080) -
        (ae * (C50071 * C50347 + C50253 + C50344 * ce)) / C50080 -
        ((C50255 + C50071 * C50348 + C50344 * ae) * ce) / C50080 +
        C50071 * ((-(ae * C50347) / C49932) / C49999 - C50338 / C50080 -
                  (C50348 * ce) / C50080 +
                  C50071 * ((-(C50341 * ce) / C49932) / C49999 -
                            (ae * C50339) / C50080 -
                            (C50071 * C50165 * C50076 * C50119) / C50080));
    const double C3680 =
        (-2 * (C50071 * C50253 + C50254 * ce)) / C49932 -
        (C50071 * (C50071 * C50347 + C50253 + C50344 * ce)) / C49932 -
        ((C50254 + C50340 * C50074) * ce) / C49932;
    const double C50412 = C50201 + C50409;
    const double C50724 = C50710 / C50080;
    const double C16576 = C15598 * C6566;
    const double C39267 = C38289 * C6566;
    const double C50411 = C50408 + C50197;
    const double C50728 = C50714 / C49932;
    const double C50723 = C50709 / C49932;
    const double C8890 = (C50071 * (3 * C50310 + C50165 * C50476) +
                          (3 * C50309 + C50165 * C50475) * ae) /
                         C49999;
    const double C9231 =
        (2 * C50251 + C50165 * C50310 +
         C50071 * (C50071 * C50476 + C50475 * ae) + C50071 * C50475 * ae) /
        C49999;
    const double C8723 = 4 * (2 * C50250 + C50165 * C50309) +
                         C50165 * (3 * C50309 + C50165 * C50475);
    const double C8888 = C50071 * (3 * C50309 + C50165 * C50475);
    const double C9229 = 2 * C50250 + C50165 * C50309 + C50475 * C50074;
    const double C11694 =
        2 * C50071 * C50475 + C50071 * (C50475 + C50549 * C50074);
    const double C9349 = (2 * (C50071 * C50310 + C50309 * ae) +
                          C50071 * (C50310 + C50071 * C50506 + C50502 * ae) +
                          (C50309 + C50469 * C50074) * ae) /
                         C49999;
    const double C9350 =
        (-2 * (C50071 * C50308 + C50309 * ce)) / C49932 -
        (C50071 * (C50071 * C50505 + C50308 + C50502 * ce)) / C49932 -
        ((C50309 + C50469 * C50074) * ce) / C49932;
    const double C50590 = C50329 + C50587;
    const double C50776 = C50765 / C50080;
    const double C19488 = C15598 * C14009;
    const double C48354 = C38289 * C14009;
    const double C50589 = C50586 + C50327;
    const double C50780 = C50769 / C49932;
    const double C50775 = C50763 / C49932;
    const double C50696 = C50692 + C50679;
    const double C16837 = 4 * (2 * C50267 + C50071 * C50376) +
                          C50071 * (3 * C50376 + C50071 * C50691);
    const double C50695 = C50689 + C50676;
    const double C50857 = -C50844;
    const double C175 = C162 + C163;
    const double C5346 = C5326 + C5327;
    const double C336 = C321 + C322;
    const double C5538 = C5522 + C5523;
    const double C509 = C493 + C494;
    const double C5344 = C5322 + C5323;
    const double C5728 = C5711 + C5712;
    const double C15649 = C15626 + C15627;
    const double C31819 = C31797 + C31798;
    const double C662 = C652 + C653;
    const double C5904 = C5892 + C5893;
    const double C2913 = C2905 + C2906;
    const double C1613 = C1599 + C1600;
    const double C5532 = C5510 + C5511;
    const double C7084 = C7072 + C7073;
    const double C15831 = C15814 + C15815;
    const double C32007 = C31985 + C31986;
    const double C3227 = C3215 + C3216;
    const double C5905 = C5894 + C5895;
    const double C32380 = C32369 + C32370;
    const double C1039 = C1025 + C1026;
    const double C5724 = C5703 + C5704;
    const double C6318 = C6306 + C6307;
    const double C15645 = C15618 + C15619;
    const double C16013 = C15996 + C15997;
    const double C32199 = C32178 + C32179;
    const double C3399 = C3387 + C3388;
    const double C7081 = C7066 + C7067;
    const double C15827 = C15806 + C15807;
    const double C17345 = C17334 + C17335;
    const double C29377 = C29369 + C29370;
    const double C33544 = C33529 + C33530;
    const double C6301 = C51361 * C1242;
    const double C15983 = C15595 * C1242;
    const double C16575 = C15594 * C1242;
    const double C32776 = C51361 * C1242;
    const double C38674 = C38286 * C1242;
    const double C39266 = C51495 * C1242;
    const double C50410 = C50407 / C49999;
    const double C2917 = C2911 * C118;
    const double C8908 = C2911 * C452;
    const double C3233 = C3225 * C453;
    const double C4532 = C3225 * C1723;
    const double C9074 = C3225 * C990;
    const double C13271 = C5901 + C5900;
    const double C28846 = C5900 + C5901;
    const double C8738 = C8733 + C8734;
    const double C13398 = C13388 + C13389;
    const double C8913 = C8899 + C8900;
    const double C13276 = C13258 + C13259;
    const double C13585 = C13568 + C13569;
    const double C19005 = C18994 + C18995;
    const double C35442 = C35435 + C35436;
    const double C9246 = C9242 + C9243;
    const double C13581 = C13560 + C13561;
    const double C13908 = C13896 + C13897;
    const double C18891 = C18882 + C18883;
    const double C19187 = C19170 + C19171;
    const double C35668 = C35649 + C35650;
    const double C13891 = C51361 * C3677;
    const double C19157 = C15595 * C3677;
    const double C19487 = C15594 * C3677;
    const double C36078 = C51361 * C3677;
    const double C48023 = C38286 * C3677;
    const double C48353 = C51495 * C3677;
    const double C50588 = C50585 / C49999;
    const double C50387 = C50384 + C50378;
    const double C50694 = C50688 - C50672;
    const double C174 = C160 + C161;
    const double C5348 = C5330 + C5331;
    const double C6305 = C51361 * C1249;
    const double C15989 = C15595 * C1249;
    const double C16581 = C15594 * C1249;
    const double C32780 = C51361 * C1249;
    const double C38680 = C38286 * C1249;
    const double C39272 = C51495 * C1249;
    const double C6304 = C5300 * C1243;
    const double C15988 = C15598 * C1243;
    const double C16580 = C15597 * C1243;
    const double C32779 = C31775 * C1243;
    const double C38679 = C38289 * C1243;
    const double C13895 = C51361 * C3683;
    const double C19163 = C15595 * C3683;
    const double C19493 = C15594 * C3683;
    const double C36082 = C51361 * C3683;
    const double C48029 = C38286 * C3683;
    const double C48359 = C51495 * C3683;
    const double C13894 = C5300 * C3678;
    const double C19162 = C15598 * C3678;
    const double C19492 = C15597 * C3678;
    const double C36081 = C31775 * C3678;
    const double C48028 = C38289 * C3678;
    const double C50386 = C50383 + C50375;
    const double C50680 = -C50669;
    const double C50122 = -C50121;
    const double C50448 = C50447 / C49932;
    const double C50631 = C50071 * C50625;
    const double C50727 = C50713 / C50080;
    const double C50521 = -C50519;
    const double C50789 = C50779 / C50080;
    const double C50244 = C50076 * C50242;
    const double C50263 = C50165 * C50242;
    const double C50292 = C50071 * C50242;
    const double C747 =
        (2 * C50165 * C50210 + C50165 * (C50210 + C50242 * C50175)) / C49999;
    const double C878 = (C50071 * (C50210 + C50242 * C50175) +
                         (C50212 + C50235 * C50175) * ae) /
                        C49999;
    const double C3022 = (3 * (C50195 + C50158 * C50175) +
                          C50165 * (2 * C50259 + C50165 * C50324)) /
                         C49999;
    const double C3191 = (C50071 * (2 * C50259 + C50165 * C50324) +
                          (2 * C50258 + C50165 * C50323) * ae) /
                         C49999;
    const double C3559 =
        (C50195 + C50158 * C50175 + C50071 * (C50071 * C50324 + C50323 * ae) +
         C50071 * C50323 * ae) /
        C49999;
    const double C50360 = C50357 + C50358;
    const double C50436 = C50071 * C50432;
    const double C50497 = C50483 + C50494;
    const double C50514 = C50511 + C50512;
    const double C50647 = C50071 * C50643;
    const double C50746 = C50221 + C50739;
    const double C50553 = C50165 * C50550;
    const double C50562 = C50071 * C50550;
    const double C50614 = C50071 * C50610;
    const double C50807 = C50535 + C50800;
    const double C50876 = C50870 + C50855;
    const double C50243 = C50230 - C50240;
    const double C3021 =
        (-3 * (C50157 * C50175 + C50193)) / C49932 +
        C50165 * ((-2 * C50257) / C49932 - (C50165 * C50322) / C49932);
    const double C3192 =
        C50071 * ((-2 * C50257) / C49932 - (C50165 * C50322) / C49932) -
        ((2 * C50258 + C50165 * C50323) * ce) / C49932;
    const double C3560 = -(C50071 * (C50071 * C50322 + C50323 * ce) +
                           C50157 * C50175 + C50193 + C50071 * C50323 * ce) /
                         C49932;
    const double C50359 = C50354 + C50355;
    const double C50435 = C50071 * C50429;
    const double C50495 = C50492 / C49932;
    const double C50513 = C50508 + C50509;
    const double C50646 = C50071 * C50640;
    const double C50743 = C50736 + C50215;
    const double C50551 = C50544 - C50548;
    const double C50613 = C50071 * C50607;
    const double C50804 = C50797 + C50529;
    const double C50873 = C50867 + C50852;
    const double C50388 = C50385 - C50373;
    const double C50241 = C50217 + C50238;
    const double C1149 = C50165 * C50212 + C50262 * C50074;
    const double C50294 = C50290 / C49932;
    const double C8722 = 4 * (2 * C50254 + C50165 * C50316) +
                         C50165 * (3 * C50316 + C50165 * C50496);
    const double C8889 = C50071 * (3 * C50316 + C50165 * C50496);
    const double C9230 = 2 * C50254 + C50165 * C50316 + C50496 * C50074;
    const double C16838 = 4 * (2 * C50275 + C50071 * C50404) +
                          C50071 * (3 * C50404 + C50071 * C50745);
    const double C50555 = C50531 + C50552;
    const double C50564 = C50560 / C49932;
    const double C19599 = 4 * (2 * C50332 + C50071 * C50582) +
                          C50071 * (3 * C50582 + C50071 * C50806);
    const double C50882 = C50837 + C50875;
    const double C50881 = C50874 / C49932;
    const double C165 = C51349 * C136;
    const double C332 = C51349 * C308;
    const double C657 = C51349 * C638;
    const double C50437 = C50434 / C49999;
    const double C50645 = C50638 / C49999;
    const double C50748 = C50742 - C50726;
    const double C11292 = C51349 * C8727;
    const double C50615 = C50612 / C49999;
    const double C50803 = C50796 - C50778;
    const double C50879 = C50872 - C50848;
    const double C137 =
        4 * ((-2 * C50186) / C49932 - (C50076 * C50193) / C49932) +
        C50076 * ((-3 * C50193) / C49932 + C50076 * C50211);
    const double C309 = C50165 * ((-3 * C50193) / C49932 + C50076 * C50211);
    const double C469 = C50071 * ((-3 * C50193) / C49932 + C50076 * C50211) -
                        ((3 * C50194 + C50076 * C50212) * ce) / C49932;
    const double C639 =
        (-2 * C50186) / C49932 - (C50076 * C50193) / C49932 + C50211 * C50175;
    const double C871 =
        C50071 * C50165 * C50211 - (C50165 * C50212 * ce) / C49932;
    const double C1004 = (-2 * C50186) / C49932 - (C50076 * C50193) / C49932 +
                         C50071 * (C50071 * C50211 - (C50212 * ce) / C49932) -
                         (C50071 * C50212 * ce) / C49932;
    const double C8726 =
        4 * ((-2 * C50249) / C49932 - (C50165 * C50308) / C49932) +
        C50165 * ((-3 * C50308) / C49932 + C50165 * C50477);
    const double C8891 = C50071 * ((-3 * C50308) / C49932 + C50165 * C50477) -
                         ((3 * C50309 + C50165 * C50475) * ce) / C49932;
    const double C9232 = (-2 * C50249) / C49932 - (C50165 * C50308) / C49932 +
                         C50071 * (C50071 * C50477 - (C50475 * ce) / C49932) -
                         (C50071 * C50475 * ce) / C49932;
    const double C107 = (C51438 - C51478) / C50007 - (C51496 * C51160) / C49999;
    const double C108 =
        (2 * C51169 + C51496) / C50007 - (C51480 * C51160) / C49999;
    const double C109 = C51480 / C50007 - C51172 / C50028;
    const double C113 = (C51445 - C51481) / C49940 - (C51497 * C51184) / C49932;
    const double C114 =
        (2 * C51193 + C51497) / C49940 - (C51483 * C51184) / C49932;
    const double C115 = C51483 / C49940 - C51196 / C49961;
    const double C737 = (C51452 - C51484) / C49940 - (C51498 * C51232) / C49932;
    const double C738 =
        (2 * C51236 + C51498) / C49940 - (C51486 * C51232) / C49932;
    const double C739 = C51486 / C49940 - C51239 / C49961;
    const double C10915 =
        (C51466 - C51490) / C50007 - (C51500 * C51333) / C49999;
    const double C10916 =
        (2 * C51337 + C51500) / C50007 - (C51492 * C51333) / C49999;
    const double C10917 = C51492 / C50007 - C51340 / C50028;
    const double C49972 = C49968 * ce;
    const double C1722 = (-C49941 / C49932) / C49940 - (C49968 * de) / C49932;
    const double C50039 = C50035 * ae;
    const double C31774 = (-C50008 / C49999) / C50007 - (C50035 * be) / C49999;
    const double C38336 = C38309 + C38310;
    const double C38329 = C38295 + C38296;
    const double C38518 = C38497 + C38498;
    const double C47449 = C47442 + C47443;
    const double C47446 = C47436 + C47437;
    const double C47757 = C47748 + C47749;
    const double C5354 = C5350 * C118;
    const double C5701 = C5350 * C452;
    const double C13272 = C13252 * C118;
    const double C13558 = C13252 * C452;
    const double C15651 = C15630 + C15631;
    const double C15648 = C15624 + C15625;
    const double C15647 = C15622 + C15623;
    const double C15644 = C15616 + C15617;
    const double C15639 = C15606 + C15607;
    const double C15636 = C15600 + C15601;
    const double C15833 = C15818 + C15819;
    const double C15830 = C15812 + C15813;
    const double C15829 = C15810 + C15811;
    const double C15826 = C15804 + C15805;
    const double C16015 = C16000 + C16001;
    const double C16012 = C15994 + C15995;
    const double C16011 = C15992 + C15993;
    const double C16008 = C15986 + C15987;
    const double C16179 = C16170 + C16171;
    const double C16176 = C16164 + C16165;
    const double C16584 = C16572 + C16573;
    const double C17344 = C17332 + C17333;
    const double C18581 = C18572 + C18573;
    const double C18578 = C18566 + C18567;
    const double C18893 = C18886 + C18887;
    const double C18890 = C18880 + C18881;
    const double C19007 = C18998 + C18999;
    const double C19004 = C18992 + C18993;
    const double C19189 = C19174 + C19175;
    const double C19186 = C19168 + C19169;
    const double C19185 = C19166 + C19167;
    const double C19182 = C19160 + C19161;
    const double C19499 = C19490 + C19491;
    const double C19496 = C19484 + C19485;
    const double C183 = C173 * C51250;
    const double C492 = C173 * C51454;
    const double C1030 = C173 * C986;
    const double C1734 = C173 * C1720;
    const double C2006 = C173 * C51499;
    const double C347 = C339 * C51250;
    const double C1595 = C339 * C51454;
    const double C1878 = C339 * C1720;
    const double C3384 = C339 * C986;
    const double C4693 = C339 * C51499;
    const double C514 = C504 * C51262;
    const double C1016 = C504 * C987;
    const double C1728 = C504 * C51262;
    const double C1996 = C504 * C51489;
    const double C2915 = C2909 * C51250;
    const double C3205 = C2909 * C51454;
    const double C5045 = C2909 * C1720;
    const double C9239 = C2909 * C986;
    const double C10844 = C2909 * C51499;
    const double C3230 = C3222 * C51262;
    const double C3568 = C3222 * C987;
    const double C4528 = C3222 * C51262;
    const double C5197 = C3222 * C51489;
    const double C28452 = C28446 * C118;
    const double C30357 = C28446 * C452;
    const double C28449 = C28443 * C118;
    const double C30351 = C28443 * C452;
    const double C521 = C505 - C515;
    const double C8739 = C8735 + C8736;
    const double C13400 = C13392 + C13393;
    const double C8914 = C8903 + C8904;
    const double C13274 = C13254 + C13255;
    const double C13587 = C13572 + C13573;
    const double C19008 = C19000 + C19001;
    const double C35444 = C35439 + C35440;
    const double C9247 = C9244 + C9245;
    const double C13583 = C13564 + C13565;
    const double C13910 = C13900 + C13901;
    const double C18888 = C18876 + C18877;
    const double C19190 = C19176 + C19177;
    const double C35670 = C35653 + C35654;
    const double C47754 = C47742 + C47743;
    const double C1612 = C1597 + C1598;
    const double C5534 = C5514 + C5515;
    const double C7082 = C7068 + C7069;
    const double C15825 = C15802 + C15803;
    const double C17347 = C17338 + C17339;
    const double C32009 = C31989 + C31990;
    const double C1038 = C1019 + C1020;
    const double C5721 = C5697 + C5698;
    const double C6316 = C6302 + C6303;
    const double C15641 = C15610 + C15611;
    const double C16010 = C15990 + C15991;
    const double C16587 = C16578 + C16579;
    const double C32196 = C32172 + C32173;
    const double C38332 = C38301 + C38302;
    const double C345 = C337 * C51250;
    const double C1601 = C337 * C51454;
    const double C1882 = C337 * C1720;
    const double C3392 = C337 * C986;
    const double C4699 = C337 * C51499;
    const double C516 = C507 * C51262;
    const double C1024 = C507 * C987;
    const double C1732 = C507 * C51262;
    const double C2002 = C507 * C51489;
    const double C5351 = C5340 + C5341;
    const double C667 = C661 * C51250;
    const double C3211 = C661 * C51454;
    const double C4533 = C661 * C1720;
    const double C9073 = C661 * C986;
    const double C10342 = C661 * C51499;
    const double C3038 = C3036 * C51250;
    const double C8901 = C3036 * C51454;
    const double C10690 = C3036 * C1720;
    const double C11618 = C3036 * C986;
    const double C12687 = C3036 * C51499;
    const double C3232 = C3224 * C51262;
    const double C5047 = C3224 * C51262;
    const double C9241 = C3224 * C987;
    const double C10846 = C3224 * C51489;
    const double C13253 = C12958 + C12959;
    const double C3576 = C3574 * C988;
    const double C5199 = C3574 * C1988;
    const double C50106 = C50105 / C49999;
    const double C2912 = C2903 + C2904;
    const double C13280 = C13266 + C13267;
    const double C3226 = C3213 + C3214;
    const double C5903 = C5890 + C5891;
    const double C14514 = C14508 + C14509;
    const double C16180 = C16172 + C16173;
    const double C32378 = C32365 + C32366;
    const double C3400 = C3389 + C3390;
    const double C7083 = C7070 + C7071;
    const double C15824 = C15800 + C15801;
    const double C17348 = C17340 + C17341;
    const double C29379 = C29373 + C29374;
    const double C33546 = C33533 + C33534;
    const double C38515 = C38491 + C38492;
    const double C8620 = C8614 + C8615;
    const double C50456 = C50455 / C49999;
    const double C498 = C51349 * C468;
    const double C5329 = C51361 * C468;
    const double C31804 = C51361 * C468;
    const double C1606 = C51349 * C870;
    const double C5525 = C51361 * C870;
    const double C32000 = C51361 * C870;
    const double C1034 = C51349 * C1003;
    const double C5714 = C51361 * C1003;
    const double C15629 = C15595 * C1003;
    const double C32189 = C51361 * C1003;
    const double C38320 = C38286 * C1003;
    const double C164 = C117 * C124;
    const double C331 = C117 * C298;
    const double C497 = C117 * C458;
    const double C5328 = C5300 * C458;
    const double C31803 = C31775 * C458;
    const double C656 = C117 * C630;
    const double C1605 = C117 * C859;
    const double C5524 = C5300 * C859;
    const double C31999 = C31775 * C859;
    const double C1033 = C117 * C995;
    const double C5713 = C5300 * C995;
    const double C15628 = C15598 * C995;
    const double C32188 = C31775 * C995;
    const double C38319 = C38289 * C995;
    const double C3401 = C3395 + C3396;
    const double C7085 = C7074 + C7075;
    const double C15832 = C15816 + C15817;
    const double C33548 = C33537 + C33538;
    const double C38523 = C38507 + C38508;
    const double C6309 = C51361 * C1244;
    const double C15999 = C15595 * C1244;
    const double C32784 = C51361 * C1244;
    const double C38690 = C38286 * C1244;
    const double C6312 = C5300 * C1245;
    const double C16004 = C15598 * C1245;
    const double C32787 = C31775 * C1245;
    const double C38695 = C38289 * C1245;
    const double C8916 = C8909 + C8910;
    const double C13281 = C13268 + C13269;
    const double C35300 = C35287 + C35288;
    const double C9081 = C9078 + C9079;
    const double C14515 = C14510 + C14511;
    const double C16181 = C16174 + C16175;
    const double C35674 = C35661 + C35662;
    const double C38872 = C38865 + C38866;
    const double C8619 = C8612 + C8613;
    const double C8915 = C8905 + C8906;
    const double C13279 = C13264 + C13265;
    const double C35298 = C35283 + C35284;
    const double C9080 = C9076 + C9077;
    const double C14513 = C14506 + C14507;
    const double C16178 = C16168 + C16169;
    const double C35672 = C35657 + C35658;
    const double C38869 = C38859 + C38860;
    const double C17337 = C15595 * C3679;
    const double C29372 = C51361 * C3679;
    const double C35872 = C51361 * C3679;
    const double C40016 = C38286 * C3679;
    const double C17343 = C15595 * C3684;
    const double C29376 = C51361 * C3684;
    const double C35876 = C51361 * C3684;
    const double C40022 = C38286 * C3684;
    const double C17342 = C15598 * C3680;
    const double C29375 = C5300 * C3680;
    const double C35875 = C31775 * C3680;
    const double C40021 = C38289 * C3680;
    const double C50415 = C50412 + C50406;
    const double C50414 = C50411 + C50403;
    const double C50734 = -C50723;
    const double C11405 = C51349 * C8890;
    const double C13391 = C51361 * C8890;
    const double C45139 = C51361 * C8890;
    const double C11622 = C51349 * C9231;
    const double C13571 = C51361 * C9231;
    const double C18997 = C15595 * C9231;
    const double C45305 = C51361 * C9231;
    const double C47863 = C38286 * C9231;
    const double C11291 = C117 * C8723;
    const double C11404 = C117 * C8888;
    const double C13390 = C5300 * C8888;
    const double C45138 = C31775 * C8888;
    const double C11621 = C117 * C9229;
    const double C13570 = C5300 * C9229;
    const double C18996 = C15598 * C9229;
    const double C45304 = C31775 * C9229;
    const double C47862 = C38289 * C9229;
    const double C13899 = C51361 * C9349;
    const double C19173 = C15595 * C9349;
    const double C45615 = C51361 * C9349;
    const double C48039 = C38286 * C9349;
    const double C13902 = C5300 * C9350;
    const double C19178 = C15598 * C9350;
    const double C45618 = C31775 * C9350;
    const double C48044 = C38289 * C9350;
    const double C50593 = C50590 + C50584;
    const double C50592 = C50589 + C50581;
    const double C50787 = -C50775;
    const double C50700 = C50071 * C50696;
    const double C50838 = 3 * C50696;
    const double C50824 = C50696 * ce;
    const double C50699 = C50071 * C50695;
    const double C50830 = -3 * C50695;
    const double C50823 = ae * C50695;
    const double C50865 = C50857 / C49999;
    const double C185 = C175 * C118;
    const double C500 = C175 * C452;
    const double C344 = C336 * C118;
    const double C1608 = C336 * C452;
    const double C517 = C509 * C453;
    const double C1031 = C509 * C990;
    const double C1735 = C509 * C1723;
    const double C5353 = C5344 + C5345;
    const double C668 = C662 * C118;
    const double C3218 = C662 * C452;
    const double C2919 = C2913 * C118;
    const double C1619 = C1613 * C453;
    const double C1881 = C1613 * C1723;
    const double C3393 = C1613 * C990;
    const double C5543 = C5532 + C5533;
    const double C28447 = C5533 + C5532;
    const double C3235 = C3227 * C453;
    const double C4536 = C3227 * C1723;
    const double C1045 = C1039 * C991;
    const double C2003 = C1039 * C1991;
    const double C5732 = C5724 + C5725;
    const double C3403 = C3399 * C991;
    const double C4696 = C3399 * C1991;
    const double C30355 = C7080 + C7081;
    const double C30353 = C7081 + C7080;
    const double C6315 = C6300 + C6301;
    const double C16006 = C15982 + C15983;
    const double C16585 = C16574 + C16575;
    const double C32790 = C32775 + C32776;
    const double C38697 = C38673 + C38674;
    const double C50413 = C50410 - C50400;
    const double C13283 = C13271 * C118;
    const double C28848 = C28846 * C118;
    const double C8741 = C8738 * C118;
    const double C11407 = C8738 * C452;
    const double C8919 = C8913 * C453;
    const double C10689 = C8913 * C1723;
    const double C11619 = C8913 * C990;
    const double C13387 = C13276 + C13277;
    const double C9248 = C9246 * C991;
    const double C10847 = C9246 * C1991;
    const double C13589 = C13581 + C13582;
    const double C13905 = C13890 + C13891;
    const double C19180 = C19156 + C19157;
    const double C19497 = C19486 + C19487;
    const double C36084 = C36077 + C36078;
    const double C48046 = C48022 + C48023;
    const double C50591 = C50588 - C50578;
    const double C6568 =
        (3 * (C50184 + C50071 * C50271 + C50267 * ae) +
         C50071 * (2 * C50271 + C50071 * C50387 + C50376 * ae) +
         (2 * C50267 + C50071 * C50376) * ae) /
        C49999;
    const double C50698 = C50694 - C50673;
    const double C184 = C174 * C51250;
    const double C499 = C174 * C51454;
    const double C1738 = C174 * C1720;
    const double C6317 = C6304 + C6305;
    const double C16009 = C15988 + C15989;
    const double C16588 = C16580 + C16581;
    const double C32792 = C32779 + C32780;
    const double C38700 = C38679 + C38680;
    const double C13907 = C13894 + C13895;
    const double C19183 = C19162 + C19163;
    const double C19500 = C19492 + C19493;
    const double C36086 = C36081 + C36082;
    const double C48049 = C48028 + C48029;
    const double C6569 =
        (-3 * (C50071 * C50270 + C50183 + C50267 * ce)) / C49932 +
        C50071 * ((-2 * C50270) / C49932 - (C50071 * C50386) / C49932 -
                  (C50376 * ce) / C49932) -
        ((2 * C50267 + C50071 * C50376) * ce) / C49932;
    const double C50687 = C50680 / C49999;
    const double C50123 = C50122 / C49999;
    const double C50449 = -C50448;
    const double C50639 = C50631 / C50080;
    const double C50522 = C50521 / C49999;
    const double C50246 = C50220 + C50244;
    const double C1156 =
        (C50165 * C50210 + C50071 * (C50071 * C50263 + C50262 * ae) +
         C50071 * C50262 * ae) /
        C49999;
    const double C50295 = C50292 + C50293;
    const double C3681 = (2 * (C50071 * C50259 + C50258 * ae) +
                          C50071 * (C50259 + C50071 * C50360 + C50356 * ae) +
                          (C50258 + C50352 * C50074) * ae) /
                         C49999;
    const double C50439 = C50158 + C50436;
    const double C8725 = (4 * (2 * C50255 + C50165 * C50317) +
                          C50165 * (3 * C50317 + C50165 * C50497)) /
                         C49999;
    const double C8892 = (C50071 * (3 * C50317 + C50165 * C50497) +
                          (3 * C50316 + C50165 * C50496) * ae) /
                         C49999;
    const double C9233 =
        (2 * C50255 + C50165 * C50317 +
         C50071 * (C50071 * C50497 + C50496 * ae) + C50071 * C50496 * ae) /
        C49999;
    const double C9351 = (2 * (C50071 * C50317 + C50316 * ae) +
                          C50071 * (C50317 + C50071 * C50514 + C50510 * ae) +
                          (C50316 + C50490 * C50074) * ae) /
                         C49999;
    const double C50650 = C50341 + C50647;
    const double C50750 = C50746 + C50733;
    const double C50556 = C50534 + C50553;
    const double C50565 = C50562 + C50563;
    const double C50617 = C50470 + C50614;
    const double C50811 = C50807 + C50794;
    const double C50883 = C50071 * C50876;
    const double C50245 = C50076 * C50243;
    const double C50261 = C50165 * C50243;
    const double C50289 = C50071 * C50243;
    const double C746 =
        2 * C50165 * C50211 + C50165 * (C50211 + C50243 * C50175);
    const double C879 = C50071 * (C50211 + C50243 * C50175) -
                        ((C50212 + C50235 * C50175) * ce) / C49932;
    const double C3682 =
        (-2 * (C50071 * C50257 + C50258 * ce)) / C49932 -
        (C50071 * (C50071 * C50359 + C50257 + C50356 * ce)) / C49932 -
        ((C50258 + C50352 * C50074) * ce) / C49932;
    const double C50438 = C50435 + C50157;
    const double C50498 = C50485 - C50495;
    const double C9352 =
        (-2 * (C50071 * C50315 + C50316 * ce)) / C49932 -
        (C50071 * (C50071 * C50513 + C50315 + C50510 * ce)) / C49932 -
        ((C50316 + C50490 * C50074) * ce) / C49932;
    const double C50649 = C50646 + C50339;
    const double C50749 = C50743 + C50730;
    const double C50554 = C50165 * C50551;
    const double C50559 = C50071 * C50551;
    const double C50616 = C50613 + C50468;
    const double C50810 = C50804 + C50791;
    const double C50880 = C50071 * C50873;
    const double C6574 =
        3 * ((-(ae * C50270) / C49932) / C49999 - C50084 / C50080 -
             (C50271 * ce) / C50080 + C50071 * C50388) +
        (((-2 * C50270) / C49932 - (C50071 * C50386) / C49932 -
          (C50376 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50271 + C50071 * C50387 + C50376 * ae) * ce) / C50080 +
        C50071 * (2 * C50388 - (ae * C50386) / C50080 - (C50387 * ce) / C50080 +
                  C50071 * ((-(ae * C50374) / C49932) / C49999 - C50098 -
                            (C50377 * ce) / C50080 +
                            C50071 * ((-(C50149 * ce) / C49932) / C49999 -
                                      (ae * C50148) / C50080 -
                                      (C50071 * C50102) / C50080)));
    const double C125 = 5 * (3 * C50194 + C50076 * C50212) +
                        C50076 * (4 * C50212 + C50076 * C50241);
    const double C299 = C50165 * (4 * C50212 + C50076 * C50241);
    const double C459 = C50071 * (4 * C50212 + C50076 * C50241);
    const double C631 = 3 * C50194 + C50076 * C50212 + C50241 * C50175;
    const double C996 = 3 * C50194 + C50076 * C50212 + C50241 * C50074;
    const double C1588 = C50071 * C50165 * C50241;
    const double C11284 = 5 * (3 * C50309 + C50165 * C50475) +
                          C50165 * (4 * C50475 + C50165 * C50555);
    const double C11397 = C50071 * (4 * C50475 + C50165 * C50555);
    const double C11612 = 3 * C50309 + C50165 * C50475 + C50555 * C50074;
    const double C21855 = 5 * (3 * C50376 + C50071 * C50691) +
                          C50071 * (4 * C50691 + C50071 * C50882);
    const double C50440 = C50437 - C50428;
    const double C50648 = C50645 - C50630;
    const double C50752 = C50748 - C50727;
    const double C50618 = C50615 - C50606;
    const double C50809 = C50803 - C50789;
    const double C50884 = C50071 * C50879;
    const double C166 = C117 * C137;
    const double C333 = C117 * C309;
    const double C501 = C117 * C469;
    const double C5332 = C5300 * C469;
    const double C31807 = C31775 * C469;
    const double C658 = C117 * C639;
    const double C1609 = C117 * C871;
    const double C5528 = C5300 * C871;
    const double C32003 = C31775 * C871;
    const double C1035 = C117 * C1004;
    const double C5717 = C5300 * C1004;
    const double C15634 = C15598 * C1004;
    const double C32192 = C31775 * C1004;
    const double C38325 = C38289 * C1004;
    const double C11293 = C117 * C8726;
    const double C11408 = C117 * C8891;
    const double C13394 = C5300 * C8891;
    const double C45142 = C31775 * C8891;
    const double C11623 = C117 * C9232;
    const double C13574 = C5300 * C9232;
    const double C19002 = C15598 * C9232;
    const double C45308 = C31775 * C9232;
    const double C47868 = C38289 * C9232;
    const double C49974 = C49972 / C49932;
    const double C1739 = C175 * C1722;
    const double C1733 = C172 * C1722;
    const double C1729 = C170 * C1722;
    const double C1725 = C168 * C1722;
    const double C1887 = C336 * C1722;
    const double C1883 = C338 * C1722;
    const double C1879 = C340 * C1722;
    const double C4538 = C662 * C1722;
    const double C4534 = C660 * C1722;
    const double C4525 = C2595 * C1722;
    const double C5046 = C2910 * C1722;
    const double C7234 = C5350 * C1722;
    const double C10189 = C2911 * C1722;
    const double C10691 = C3035 * C1722;
    const double C12583 = C8738 * C1722;
    const double C15342 = C13252 * C1722;
    const double C30827 = C28446 * C1722;
    const double C30821 = C28443 * C1722;
    const double C50041 = C50039 / C49999;
    const double C31805 = C31774 * C134;
    const double C31801 = C31774 * C123;
    const double C31799 = C31774 * C122;
    const double C31795 = C31774 * C133;
    const double C31789 = C31774 * C131;
    const double C31785 = C31774 * C121;
    const double C31781 = C31774 * C129;
    const double C31777 = C31774 * C120;
    const double C32001 = C31774 * C300;
    const double C31997 = C31774 * C294;
    const double C31995 = C31774 * C296;
    const double C31991 = C31774 * C304;
    const double C31987 = C31774 * C295;
    const double C31983 = C31774 * C302;
    const double C32190 = C31774 * C467;
    const double C32186 = C31774 * C457;
    const double C32184 = C31774 * C465;
    const double C32180 = C31774 * C456;
    const double C32174 = C31774 * C463;
    const double C32170 = C31774 * C455;
    const double C32371 = C31774 * C637;
    const double C32367 = C31774 * C629;
    const double C32363 = C31774 * C635;
    const double C32359 = C31774 * C628;
    const double C32785 = C31774 * C1002;
    const double C32781 = C31774 * C994;
    const double C32777 = C31774 * C1000;
    const double C32773 = C31774 * C993;
    const double C33539 = C31774 * C869;
    const double C33535 = C31774 * C858;
    const double C33531 = C31774 * C867;
    const double C33527 = C31774 * C857;
    const double C34858 = C31774 * C306;
    const double C34854 = C31774 * C297;
    const double C35285 = C31774 * C750;
    const double C35281 = C31774 * C744;
    const double C35277 = C31774 * C627;
    const double C35273 = C31774 * C633;
    const double C35437 = C31774 * C752;
    const double C35433 = C31774 * C745;
    const double C35659 = C31774 * C875;
    const double C35655 = C31774 * C861;
    const double C35651 = C31774 * C873;
    const double C35647 = C31774 * C860;
    const double C35645 = C31774 * C865;
    const double C35641 = C31774 * C856;
    const double C35873 = C31774 * C1153;
    const double C35869 = C31774 * C1147;
    const double C36079 = C31774 * C1151;
    const double C36075 = C31774 * C1146;
    const double C45140 = C31774 * C3025;
    const double C45136 = C31774 * C3020;
    const double C45306 = C31774 * C3188;
    const double C45302 = C31774 * C3184;
    const double C45616 = C31774 * C3556;
    const double C45612 = C31774 * C3552;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C508 = C491 + C492;
    const double C2593 = C347 + C348;
    const double C2591 = C348 + C347;
    const double C4174 = C1595 + C1596;
    const double C4173 = C1596 + C1595;
    const double C8608 = C2916 + C2915;
    const double C8897 = C3206 + C3205;
    const double C8742 = C8739 * C51250;
    const double C11406 = C8739 * C51454;
    const double C12582 = C8739 * C1720;
    const double C8920 = C8914 * C51262;
    const double C10692 = C8914 * C51262;
    const double C11620 = C8914 * C987;
    const double C12689 = C8914 * C51489;
    const double C13386 = C13274 + C13275;
    const double C9249 = C9247 * C988;
    const double C10848 = C9247 * C1988;
    const double C13590 = C13583 + C13584;
    const double C1618 = C1612 * C51262;
    const double C1880 = C1612 * C51262;
    const double C3386 = C1612 * C987;
    const double C4695 = C1612 * C51489;
    const double C28445 = C5534 + C5535;
    const double C28444 = C5535 + C5534;
    const double C1044 = C1038 * C988;
    const double C1998 = C1038 * C1988;
    const double C352 = C345 + C346;
    const double C2440 = C346 + C345;
    const double C2745 = C1602 + C1601;
    const double C4175 = C1601 + C1602;
    const double C523 = C521 - C516;
    const double C5355 = C5351 * C51250;
    const double C5702 = C5351 * C51454;
    const double C7235 = C5351 * C1720;
    const double C2899 = C666 + C667;
    const double C2894 = C667 + C666;
    const double C8898 = C3212 + C3211;
    const double C9842 = C3211 + C3212;
    const double C8732 = C3038 + C3037;
    const double C11215 = C3037 + C3038;
    const double C11403 = C8902 + C8901;
    const double C13273 = C13253 * C51250;
    const double C13559 = C13253 * C51454;
    const double C15343 = C13253 * C1720;
    const double C50107 = C50106 - C50098;
    const double C2918 = C2912 * C51250;
    const double C8907 = C2912 * C51454;
    const double C10188 = C2912 * C1720;
    const double C3234 = C3226 * C51262;
    const double C4535 = C3226 * C51262;
    const double C9075 = C3226 * C987;
    const double C10344 = C3226 * C51489;
    const double C13270 = C5903 + C5902;
    const double C28847 = C5902 + C5903;
    const double C3404 = C3400 * C988;
    const double C4697 = C3400 * C1988;
    const double C30358 = C7082 + C7083;
    const double C30354 = C7083 + C7082;
    const double C8624 = C8620 * C51250;
    const double C50457 = C50456 - C50098;
    const double C176 = C164 + C165;
    const double C341 = C331 + C332;
    const double C511 = C497 + C498;
    const double C5347 = C5328 + C5329;
    const double C31822 = C31803 + C31804;
    const double C664 = C656 + C657;
    const double C1615 = C1605 + C1606;
    const double C5539 = C5524 + C5525;
    const double C32014 = C31999 + C32000;
    const double C1041 = C1033 + C1034;
    const double C5729 = C5713 + C5714;
    const double C15650 = C15628 + C15629;
    const double C32204 = C32188 + C32189;
    const double C38341 = C38319 + C38320;
    const double C3405 = C3401 * C991;
    const double C4702 = C3401 * C1991;
    const double C6319 = C6308 + C6309;
    const double C16014 = C15998 + C15999;
    const double C32794 = C32783 + C32784;
    const double C38705 = C38689 + C38690;
    const double C8922 = C8916 * C51262;
    const double C10190 = C8916 * C51262;
    const double C9083 = C9081 * C988;
    const double C10346 = C9081 * C1988;
    const double C8623 = C8619 * C118;
    const double C8921 = C8915 * C453;
    const double C10187 = C8915 * C1723;
    const double C9082 = C9080 * C991;
    const double C10345 = C9080 * C1991;
    const double C17346 = C17336 + C17337;
    const double C29378 = C29371 + C29372;
    const double C35878 = C35871 + C35872;
    const double C40025 = C40015 + C40016;
    const double C17349 = C17342 + C17343;
    const double C29380 = C29375 + C29376;
    const double C35880 = C35875 + C35876;
    const double C40028 = C40021 + C40022;
    const double C6570 =
        (3 * (C50188 + C50071 * C50279 + C50275 * ae) +
         C50071 * (2 * C50279 + C50071 * C50415 + C50404 * ae) +
         (2 * C50275 + C50071 * C50404) * ae) /
        C49999;
    const double C6571 =
        (-3 * (C50071 * C50278 + C50186 + C50275 * ce)) / C49932 +
        C50071 * ((-2 * C50278) / C49932 - (C50071 * C50414) / C49932 -
                  (C50404 * ce) / C49932) -
        ((2 * C50275 + C50071 * C50404) * ce) / C49932;
    const double C50741 = C50734 / C49999;
    const double C11296 = C11291 + C11292;
    const double C11411 = C11404 + C11405;
    const double C13399 = C13390 + C13391;
    const double C45147 = C45138 + C45139;
    const double C11625 = C11621 + C11622;
    const double C13586 = C13570 + C13571;
    const double C19006 = C18996 + C18997;
    const double C45314 = C45304 + C45305;
    const double C47872 = C47862 + C47863;
    const double C13909 = C13898 + C13899;
    const double C19188 = C19172 + C19173;
    const double C45621 = C45614 + C45615;
    const double C48054 = C48038 + C48039;
    const double C14011 =
        (3 * (C50251 + C50071 * C50336 + C50332 * ae) +
         C50071 * (2 * C50336 + C50071 * C50593 + C50582 * ae) +
         (2 * C50332 + C50071 * C50582) * ae) /
        C49999;
    const double C14012 =
        (-3 * (C50071 * C50335 + C50249 + C50332 * ce)) / C49932 +
        C50071 * ((-2 * C50335) / C49932 - (C50071 * C50592) / C49932 -
                  (C50582 * ce) / C49932) -
        ((2 * C50332 + C50071 * C50582) * ce) / C49932;
    const double C50795 = C50787 / C49999;
    const double C50703 = C50666 + C50700;
    const double C50843 = C50824 / C50080;
    const double C50702 = C50699 / C49932;
    const double C50849 = C50830 / C49932;
    const double C50842 = C50823 / C50080;
    const double C50871 = C50865 - C50113;
    const double C5357 = C5353 * C118;
    const double C5545 = C5543 * C118;
    const double C28453 = C28447 * C118;
    const double C5734 = C5732 * C453;
    const double C7236 = C5732 * C1723;
    const double C30362 = C30355 * C453;
    const double C30825 = C30355 * C1723;
    const double C30360 = C30353 * C453;
    const double C30823 = C30353 * C1723;
    const double C50416 = C50413 - C50401;
    const double C13397 = C13387 * C118;
    const double C13591 = C13589 * C453;
    const double C15344 = C13589 * C1723;
    const double C50594 = C50591 - C50579;
    const double C50701 = C50071 * C50698;
    const double C50822 = 2 * C50698;
    const double C190 = C184 + C185;
    const double C50693 = C50687 - C50098;
    const double C50124 = C50123 - C50113;
    const double C50450 = C50449 / C49999;
    const double C50523 = C50522 - C50113;
    const double C139 = (5 * (3 * C50195 + C50076 * C50210) +
                         C50076 * (4 * C50210 + C50076 * C50246)) /
                        C49999;
    const double C311 = (C50165 * (4 * C50210 + C50076 * C50246)) / C49999;
    const double C470 = (C50071 * (4 * C50210 + C50076 * C50246) +
                         (4 * C50212 + C50076 * C50241) * ae) /
                        C49999;
    const double C641 =
        (3 * C50195 + C50076 * C50210 + C50246 * C50175) / C49999;
    const double C1005 =
        (3 * C50195 + C50076 * C50210 +
         C50071 * (C50071 * C50246 + C50241 * ae) + C50071 * C50241 * ae) /
        C49999;
    const double C1589 =
        (C50071 * C50165 * C50246 + C50165 * C50241 * ae) / C49999;
    const double C1246 = (2 * (C50071 * C50210 + C50212 * ae) +
                          C50071 * (C50210 + C50071 * C50295 + C50291 * ae) +
                          (C50212 + C50235 * C50074) * ae) /
                         C49999;
    const double C50442 = C50439 + C50433;
    const double C50653 = C50650 + C50644;
    const double C50754 = C50071 * C50750;
    const double C11286 = (5 * (3 * C50310 + C50165 * C50476) +
                           C50165 * (4 * C50476 + C50165 * C50556)) /
                          C49999;
    const double C11398 = (C50071 * (4 * C50476 + C50165 * C50556) +
                           (4 * C50475 + C50165 * C50555) * ae) /
                          C49999;
    const double C11613 =
        (3 * C50310 + C50165 * C50476 +
         C50071 * (C50071 * C50556 + C50555 * ae) + C50071 * C50555 * ae) /
        C49999;
    const double C11695 = (2 * (C50071 * C50476 + C50475 * ae) +
                           C50071 * (C50476 + C50071 * C50565 + C50561 * ae) +
                           (C50475 + C50549 * C50074) * ae) /
                          C49999;
    const double C50620 = C50617 + C50611;
    const double C50814 = C50071 * C50811;
    const double C50886 = C50839 + C50883;
    const double C50247 = C50223 + C50245;
    const double C1157 = C50165 * C50211 +
                         C50071 * (C50071 * C50261 - (C50262 * ce) / C49932) -
                         (C50071 * C50262 * ce) / C49932;
    const double C50296 = C50289 - C50294;
    const double C50441 = C50438 + C50430;
    const double C8724 =
        4 * ((-2 * C50253) / C49932 - (C50165 * C50315) / C49932) +
        C50165 * ((-3 * C50315) / C49932 + C50165 * C50498);
    const double C8893 = C50071 * ((-3 * C50315) / C49932 + C50165 * C50498) -
                         ((3 * C50316 + C50165 * C50496) * ce) / C49932;
    const double C9234 = (-2 * C50253) / C49932 - (C50165 * C50315) / C49932 +
                         C50071 * (C50071 * C50498 - (C50496 * ce) / C49932) -
                         (C50071 * C50496 * ce) / C49932;
    const double C50652 = C50649 + C50641;
    const double C50753 = C50071 * C50749;
    const double C50557 = C50537 + C50554;
    const double C50566 = C50559 - C50564;
    const double C50619 = C50616 + C50608;
    const double C50813 = C50071 * C50810;
    const double C50885 = C50880 / C49932;
    const double C50651 = C50648 - C50639;
    const double C50755 = C50071 * C50752;
    const double C50812 = C50071 * C50809;
    const double C49976 = C49974 - C49969;
    const double C1742 = C1733 + C1734;
    const double C1741 = C1729 + C1730;
    const double C4328 = C1883 + C1882;
    const double C4531 = C1882 + C1883;
    const double C4530 = C1878 + C1879;
    const double C4529 = C1879 + C1878;
    const double C10186 = C4533 + C4534;
    const double C10185 = C4534 + C4533;
    const double C10687 = C5046 + C5045;
    const double C12580 = C10691 + C10690;
    const double C50043 = C50041 - C50036;
    const double C31823 = C31805 + C31806;
    const double C31821 = C31801 + C31802;
    const double C31820 = C31799 + C31800;
    const double C31818 = C31795 + C31796;
    const double C31815 = C31789 + C31790;
    const double C31813 = C31785 + C31786;
    const double C31811 = C31781 + C31782;
    const double C31809 = C31777 + C31778;
    const double C32013 = C31997 + C31998;
    const double C32012 = C31995 + C31996;
    const double C32010 = C31991 + C31992;
    const double C32008 = C31987 + C31988;
    const double C32006 = C31983 + C31984;
    const double C32203 = C32186 + C32187;
    const double C32202 = C32184 + C32185;
    const double C32200 = C32180 + C32181;
    const double C32197 = C32174 + C32175;
    const double C32195 = C32170 + C32171;
    const double C32379 = C32367 + C32368;
    const double C32377 = C32363 + C32364;
    const double C32375 = C32359 + C32360;
    const double C32793 = C32781 + C32782;
    const double C32791 = C32777 + C32778;
    const double C32789 = C32773 + C32774;
    const double C33547 = C33535 + C33536;
    const double C33545 = C33531 + C33532;
    const double C33543 = C33527 + C33528;
    const double C34870 = C34858 + C34859;
    const double C34868 = C34854 + C34855;
    const double C35299 = C35285 + C35286;
    const double C35297 = C35281 + C35282;
    const double C35294 = C35277 + C35278;
    const double C35292 = C35273 + C35274;
    const double C35443 = C35437 + C35438;
    const double C35441 = C35433 + C35434;
    const double C35673 = C35659 + C35660;
    const double C35671 = C35655 + C35656;
    const double C35669 = C35651 + C35652;
    const double C35667 = C35647 + C35648;
    const double C35666 = C35645 + C35646;
    const double C35664 = C35641 + C35642;
    const double C35879 = C35873 + C35874;
    const double C35877 = C35869 + C35870;
    const double C36085 = C36079 + C36080;
    const double C36083 = C36075 + C36076;
    const double C45148 = C45140 + C45141;
    const double C45146 = C45136 + C45137;
    const double C45315 = C45306 + C45307;
    const double C45313 = C45302 + C45303;
    const double C45622 = C45616 + C45617;
    const double C45620 = C45612 + C45613;
    const double C522 = C508 - C517;
    const double C4177 = C1617 - C4174;
    const double C4176 = C4173 - C1617;
    const double C8618 = C8608 * C51438;
    const double C11214 = C8608 * C51164;
    const double C26012 = C8608 * C25568;
    const double C8911 = C8897 - C3231;
    const double C11289 = C8742 + C8741;
    const double C13396 = C13386 * C51250;
    const double C13592 = C13590 * C51262;
    const double C15345 = C13590 * C51262;
    const double C28451 = C28445 * C51250;
    const double C30356 = C28445 * C51454;
    const double C30826 = C28445 * C1720;
    const double C28450 = C28444 * C51250;
    const double C30352 = C28444 * C51454;
    const double C30822 = C28444 * C1720;
    const double C2746 = C2745 - C1619;
    const double C4178 = C1619 - C4175;
    const double C5358 = C5354 + C5355;
    const double C5723 = C5701 + C5702;
    const double C7238 = C7234 + C7235;
    const double C8609 = C2899 * C51169;
    const double C26013 = C2899 * C51169;
    const double C8617 = C2894 * C51438;
    const double C11217 = C2894 * C51164;
    const double C26015 = C2894 * C25568;
    const double C8912 = C8898 - C3233;
    const double C9843 = C3233 - C9842;
    const double C8737 = C8732 * C51438;
    const double C11290 = C8732 * C51164;
    const double C26117 = C8732 * C25568;
    const double C11218 = C11215 * C51164;
    const double C11410 = C11403 - C8919;
    const double C13284 = C13272 + C13273;
    const double C13580 = C13558 + C13559;
    const double C15346 = C15342 + C15343;
    const double C145 =
        4 * ((-2 * C50076 * C50093) / C50080 + C50076 * C50107) +
        C50076 *
            (3 * C50107 +
             C50076 * ((-2 * C50076 * C50102) / C50080 +
                       C50076 * ((-((C50096 * C50097 +
                                     C50074 * bs[7] * std::pow(C50070, 7)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50102 / C50080)));
    const double C312 =
        (yP - yQ) * ((-2 * C50076 * C50093) / C50080 + C50076 * C50107);
    const double C475 =
        (((-2 * C50076 * C50143) / C49932 -
          (C50076 * (C50088 * C50087 * C50139 * C50089 + C50143)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50076 * C50144 +
          C50076 * (C50144 + C50088 * C50087 * C50138 * C50089)) *
         ce) /
            C50080 +
        C50071 * ((-2 * C50076 * C50093) / C50080 + C50076 * C50107);
    const double C644 = (-(C50093 * C50089) / C49932) / C49999 -
                        C50084 / C50080 + C50107 * std::pow(yP - yQ, 2);
    const double C882 =
        (-(C50165 * (C50144 + C50149 * C50089) * ce) / C49932) / C49999 -
        (ae * C50165 * (C50148 * C50089 + C50143)) / C50080 +
        C50071 * C50165 * C50107;
    const double C1009 = (-(C50093 * C50089) / C49932) / C49999 -
                         C50084 / C50080 -
                         (ae * (C50071 * C50193 + C50194 * ce)) / C50080 -
                         ((C50071 * C50195 + C50194 * ae) * ce) / C50080 +
                         C50071 * ((-(C50195 * ce) / C49932) / C49999 -
                                   (ae * C50193) / C50080 + C50071 * C50107);
    const double C8611 = C2917 + C2918;
    const double C8610 = C2918 + C2917;
    const double C13282 = C13270 * C51250;
    const double C28849 = C28847 * C51250;
    const double C30364 = C30358 * C51262;
    const double C30828 = C30358 * C51262;
    const double C30361 = C30354 * C51262;
    const double C30824 = C30354 * C51262;
    const double C8729 =
        4 * ((-2 * C50326) / C50080 + C50165 * C50457) +
        C50165 * (3 * C50457 +
                  C50165 * ((-2 * C50165 * C50102) / C50080 +
                            C50165 * ((-(C50119 * C50175) / C49932) / C49999 -
                                      C50113)));
    const double C8894 =
        (((-3 * C50308) / C49932 +
          C50165 * ((-2 * C50327) / C49932 -
                    (C50165 * (C50153 * C50175 + C50148)) / C49932)) *
         ae) /
            C49999 -
        ((3 * C50310 +
          C50165 * (2 * C50329 + C50165 * (C50149 + C50154 * C50175))) *
         ce) /
            C50080 +
        C50071 * (3 * C50457 +
                  C50165 * ((-2 * C50165 * C50102) / C50080 +
                            C50165 * ((-(C50119 * C50175) / C49932) / C49999 -
                                      C50113)));
    const double C9235 =
        (-2 * C50326) / C50080 + C50165 * C50457 +
        ((C50071 * C50477 - (C50475 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50476 + C50475 * ae) * ce) / C50080 +
        C50071 * ((C50477 * ae) / C49999 - (C50476 * ce) / C50080 +
                  C50071 * ((-2 * C50165 * C50102) / C50080 +
                            C50165 * ((-(C50119 * C50175) / C49932) / C49999 -
                                      C50113)));
    const double C9353 =
        2 * ((-(C50310 * ce) / C49932) / C49999 - (ae * C50308) / C50080 +
             C50071 * C50457) -
        (ae * (C50071 * C50505 + C50308 + C50502 * ce)) / C50080 -
        ((C50310 + C50071 * C50506 + C50502 * ae) * ce) / C50080 +
        C50071 *
            (C50457 - (ae * C50505) / C50080 - (C50506 * ce) / C50080 +
             C50071 *
                 ((-(C50470 * ce) / C49932) / C49999 - (ae * C50468) / C50080 +
                  C50071 * ((-(C50119 * C50175) / C49932) / C49999 - C50113)));
    const double C186 = C176 * C118;
    const double C349 = C341 * C118;
    const double C519 = C511 * C453;
    const double C1737 = C511 * C1723;
    const double C670 = C664 * C118;
    const double C1621 = C1615 * C453;
    const double C1885 = C1615 * C1723;
    const double C1047 = C1041 * C991;
    const double C2009 = C1041 * C1991;
    const double C16577 = C15595 * C6570;
    const double C39268 = C38286 * C6570;
    const double C16582 = C15598 * C6571;
    const double C39273 = C38289 * C6571;
    const double C50747 = C50741 - C50446;
    const double C11298 = C11296 * C118;
    const double C11414 = C11411 * C453;
    const double C12581 = C11411 * C1723;
    const double C11627 = C11625 * C991;
    const double C12690 = C11625 * C1991;
    const double C19489 = C15595 * C14011;
    const double C48355 = C38286 * C14011;
    const double C19494 = C15598 * C14012;
    const double C48360 = C38289 * C14012;
    const double C50802 = C50795 - C50764;
    const double C50706 = C50703 + C50686;
    const double C50705 = C50674 - C50702;
    const double C50878 = C50871 - C50845;
    const double C6575 =
        3 * ((-(ae * C50278) / C49932) / C49999 - C50168 / C50080 -
             (C50279 * ce) / C50080 + C50071 * C50416) +
        (((-2 * C50278) / C49932 - (C50071 * C50414) / C49932 -
          (C50404 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50279 + C50071 * C50415 + C50404 * ae) * ce) / C50080 +
        C50071 * (2 * C50416 - (ae * C50414) / C50080 - (C50415 * ce) / C50080 +
                  C50071 * ((-(ae * C50402) / C49932) / C49999 -
                            C50109 / C50080 - (C50405 * ce) / C50080 +
                            C50071 * ((-(C50221 * ce) / C49932) / C49999 -
                                      (ae * C50215) / C50080 -
                                      (C50071 * C50076 * C50119) / C50080)));
    const double C14015 =
        3 * ((-(ae * C50335) / C49932) / C49999 - C50326 / C50080 -
             (C50336 * ce) / C50080 + C50071 * C50594) +
        (((-2 * C50335) / C49932 - (C50071 * C50592) / C49932 -
          (C50582 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50336 + C50071 * C50593 + C50582 * ae) * ce) / C50080 +
        C50071 * (2 * C50594 - (ae * C50592) / C50080 - (C50593 * ce) / C50080 +
                  C50071 * ((-(ae * C50580) / C49932) / C49999 -
                            C50516 / C50080 - (C50583 * ce) / C50080 +
                            C50071 * ((-(C50535 * ce) / C49932) / C49999 -
                                      (ae * C50529) / C50080 -
                                      (C50071 * C50165 * C50119) / C50080)));
    const double C50856 = C50822 - C50842;
    const double C50697 = C50693 - C50670;
    const double C50125 = C50076 * C50124;
    const double C50350 = C50165 * C50124;
    const double C50420 = C50071 * C50124;
    const double C755 =
        2 * C50165 * C50107 + C50165 * (C50107 + C50124 * std::pow(C50165, 2));
    const double C886 =
        (-((C50144 + C50149 * C50089 + C50158 * C50175) * ce) / C49932) /
            C49999 -
        (ae * (C50157 * C50175 + C50148 * C50089 + C50143)) / C50080 +
        C50071 * (C50107 + C50124 * C50175);
    const double C1160 =
        C50165 * C50107 - (ae * (C50071 * C50257 + C50258 * ce)) / C50080 -
        ((C50071 * C50259 + C50258 * ae) * ce) / C50080 +
        C50071 * ((-(C50259 * ce) / C49932) / C49999 - (ae * C50257) / C50080 +
                  C50071 * C50165 * C50124);
    const double C1250 =
        2 * ((-(C50195 * ce) / C49932) / C49999 - (ae * C50193) / C50080 +
             C50071 * C50107) -
        (ae * (C50071 * C50286 + C50193 + C50283 * ce)) / C50080 -
        ((C50195 + C50071 * C50287 + C50283 * ae) * ce) / C50080 +
        C50071 * (C50107 - (ae * C50286) / C50080 - (C50287 * ce) / C50080 +
                  C50071 * ((-(C50158 * ce) / C49932) / C49999 -
                            (ae * C50157) / C50080 + C50071 * C50124));
    const double C3027 =
        3 * (C50107 + C50124 * C50175) +
        C50165 *
            (2 * C50165 * C50124 +
             C50165 *
                 (C50124 +
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080) *
                      C50175));
    const double C3195 =
        (((-2 * C50257) / C49932 -
          (C50165 * (C50234 * C50175 + C50157)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50259 + C50165 * (C50158 + C50236 * C50175)) * ce) / C50080 +
        C50071 *
            (2 * C50165 * C50124 +
             C50165 *
                 (C50124 +
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080) *
                      C50175));
    const double C3563 =
        C50107 + C50124 * C50175 -
        (ae * (C50071 * C50322 + C50323 * ce)) / C50080 -
        ((C50071 * C50324 + C50323 * ae) * ce) / C50080 +
        C50071 *
            ((-(C50324 * ce) / C49932) / C49999 - (ae * C50322) / C50080 +
             C50071 *
                 (C50124 +
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080) *
                      C50175));
    const double C50451 = C50450 - C50446;
    const double C50524 = C50165 * C50523;
    const double C50598 = C50071 * C50523;
    const double C6572 =
        (3 * (C50195 + C50071 * C50287 + C50283 * ae) +
         C50071 * (2 * C50287 + C50071 * C50442 + C50431 * ae) +
         (2 * C50283 + C50071 * C50431) * ae) /
        C49999;
    const double C16736 =
        (3 * (C50255 + C50071 * C50348 + C50344 * ae) +
         C50071 * (2 * C50348 + C50071 * C50653 + C50642 * ae) +
         (2 * C50344 + C50071 * C50642) * ae) /
        C49999;
    const double C50757 = C50720 + C50754;
    const double C14013 =
        (3 * (C50310 + C50071 * C50506 + C50502 * ae) +
         C50071 * (2 * C50506 + C50071 * C50620 + C50609 * ae) +
         (2 * C50502 + C50071 * C50609) * ae) /
        C49999;
    const double C50817 = C50773 + C50814;
    const double C50889 = C50886 + C50863;
    const double C1591 =
        (C50165 * C50247 * ae) / C49999 - (C50165 * C50246 * ce) / C50080 +
        C50071 * C50165 *
            (3 * C50124 +
             C50076 * ((-2 * C50076 * C50119) / C50080 +
                       C50076 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080)));
    const double C138 = 5 * ((-3 * C50193) / C49932 + C50076 * C50211) +
                        C50076 * (4 * C50211 + C50076 * C50247);
    const double C310 = C50165 * (4 * C50211 + C50076 * C50247);
    const double C471 = C50071 * (4 * C50211 + C50076 * C50247) -
                        ((4 * C50212 + C50076 * C50241) * ce) / C49932;
    const double C640 =
        (-3 * C50193) / C49932 + C50076 * C50211 + C50247 * C50175;
    const double C1006 = (-3 * C50193) / C49932 + C50076 * C50211 +
                         C50071 * (C50071 * C50247 - (C50241 * ce) / C49932) -
                         (C50071 * C50241 * ce) / C49932;
    const double C1590 =
        C50071 * C50165 * C50247 - (C50165 * C50241 * ce) / C49932;
    const double C1247 =
        2 * (C50071 * C50211 - (C50212 * ce) / C49932) +
        C50071 * (C50211 + C50071 * C50296 - (C50291 * ce) / C49932) -
        ((C50212 + C50235 * C50074) * ce) / C49932;
    const double C6573 =
        (-3 * (C50071 * C50286 + C50193 + C50283 * ce)) / C49932 +
        C50071 * ((-2 * C50286) / C49932 - (C50071 * C50441) / C49932 -
                  (C50431 * ce) / C49932) -
        ((2 * C50283 + C50071 * C50431) * ce) / C49932;
    const double C16737 =
        (-3 * (C50071 * C50347 + C50253 + C50344 * ce)) / C49932 +
        C50071 * ((-2 * C50347) / C49932 - (C50071 * C50652) / C49932 -
                  (C50642 * ce) / C49932) -
        ((2 * C50344 + C50071 * C50642) * ce) / C49932;
    const double C50756 = C50753 / C49932;
    const double C11285 = 5 * ((-3 * C50308) / C49932 + C50165 * C50477) +
                          C50165 * (4 * C50477 + C50165 * C50557);
    const double C11399 = C50071 * (4 * C50477 + C50165 * C50557) -
                          ((4 * C50475 + C50165 * C50555) * ce) / C49932;
    const double C11614 = (-3 * C50308) / C49932 + C50165 * C50477 +
                          C50071 * (C50071 * C50557 - (C50555 * ce) / C49932) -
                          (C50071 * C50555 * ce) / C49932;
    const double C11696 =
        2 * (C50071 * C50477 - (C50475 * ce) / C49932) +
        C50071 * (C50477 + C50071 * C50566 - (C50561 * ce) / C49932) -
        ((C50475 + C50549 * C50074) * ce) / C49932;
    const double C14014 =
        (-3 * (C50071 * C50505 + C50308 + C50502 * ce)) / C49932 +
        C50071 * ((-2 * C50505) / C49932 - (C50071 * C50619) / C49932 -
                  (C50609 * ce) / C49932) -
        ((2 * C50502 + C50071 * C50609) * ce) / C49932;
    const double C50816 = C50813 / C49932;
    const double C50888 = C50850 - C50885;
    const double C16738 =
        3 * ((-(ae * C50347) / C49932) / C49999 - C50338 / C50080 -
             (C50348 * ce) / C50080 + C50071 * C50651) +
        (((-2 * C50347) / C49932 - (C50071 * C50652) / C49932 -
          (C50642 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50348 + C50071 * C50653 + C50642 * ae) * ce) / C50080 +
        C50071 * (2 * C50651 - (ae * C50652) / C50080 - (C50653 * ce) / C50080 +
                  C50071 * ((-(ae * C50640) / C49932) / C49999 -
                            C50625 / C50080 - (C50643 * ce) / C50080 +
                            C50071 * ((-(C50628 * ce) / C49932) / C49999 -
                                      (ae * C50626) / C50080 -
                                      (C50071 * C50165 * C50076 *
                                       (C50111 * C50112 +
                                        C50074 * bs[8] * std::pow(C50067, 8)) *
                                       C50072) /
                                          C50080)));
    const double C1232 =
        ((((0 - (C49931 * C49956) / C49932) * ce) / C49932 - (0 * de) / C49961 +
          C49941 / C49932) /
             C49940 -
         ((C49931 * C49975 + 0) * de) / C49932) /
            C49940 -
        ((C49931 * (C49975 / C49940 -
                    ((C49931 * C49976 + C51454) * de) / C49932 + C49970) +
          C51499) *
         de) /
            C49932 +
        C49976 / C49940 - ((C49931 * C49970 + C51262) * de) / C49932;
    const double C1233 =
        (C49975 / C49940 - ((C49931 * C49976 + C51454) * de) / C49932 +
         C49970) /
            C49940 -
        ((C49931 *
              (C49976 / C49940 - ((C49931 * C49970 + C51262) * de) / C49932) +
          C51489) *
         de) /
            C49932 +
        2 * (C49970 / C49940 - (0 * de) / C49932);
    const double C1234 =
        (C49976 / C49940 - ((C49931 * C49970 + C51262) * de) / C49932) /
            C49940 -
        ((C49931 * (C49970 / C49940 - (0 * de) / C49932) + C1988) * de) /
            C49932;
    const double C1989 =
        C49975 / C49940 - ((C49931 * C49976 + C51454) * de) / C49932 + C49970;
    const double C1990 =
        C49976 / C49940 - ((C49931 * C49970 + C51262) * de) / C49932;
    const double C1744 = C1742 - C1735;
    const double C1743 = C1741 - C1731;
    const double C4329 = C4328 - C1881;
    const double C4542 = C1881 - C4531;
    const double C4541 = C1877 - C4530;
    const double C4540 = C4529 - C1877;
    const double C10192 = C4532 - C10186;
    const double C10191 = C10185 - C4532;
    const double C10693 = C10687 - C5044;
    const double C12585 = C12580 - C10689;
    const double C21131 =
        ((((0 - (C49998 * C50023) / C49999) * ae) / C49999 - (0 * be) / C50028 +
          C50008 / C49999) /
             C50007 -
         ((C49998 * C50042 + 0) * be) / C49999) /
            C50007 -
        ((C49998 * (C50042 / C50007 -
                    ((C49998 * C50043 + C51467) * be) / C49999 + C50037) +
          C51501) *
         be) /
            C49999 +
        C50043 / C50007 - ((C49998 * C50037 + C51361) * be) / C49999;
    const double C21132 =
        (C50042 / C50007 - ((C49998 * C50043 + C51467) * be) / C49999 +
         C50037) /
            C50007 -
        ((C49998 *
              (C50043 / C50007 - ((C49998 * C50037 + C51361) * be) / C49999) +
          C51495) *
         be) /
            C49999 +
        2 * (C50037 / C50007 - (0 * be) / C49999);
    const double C21133 =
        (C50043 / C50007 - ((C49998 * C50037 + C51361) * be) / C49999) /
            C50007 -
        ((C49998 * (C50037 / C50007 - (0 * be) / C49999) + C38286) * be) /
            C49999;
    const double C38287 =
        C50042 / C50007 - ((C49998 * C50043 + C51467) * be) / C49999 + C50037;
    const double C38288 =
        C50043 / C50007 - ((C49998 * C50037 + C51361) * be) / C49999;
    const double C31828 = C31819 + C31820;
    const double C31826 = C31815 + C31816;
    const double C31825 = C31813 + C31814;
    const double C34865 = C32011 + C32012;
    const double C34862 = C32012 + C32011;
    const double C34864 = C32009 + C32010;
    const double C34863 = C32010 + C32009;
    const double C32018 = C32007 + C32008;
    const double C34866 = C32008 + C32007;
    const double C32207 = C32199 + C32200;
    const double C35280 = C32377 + C32378;
    const double C35269 = C32378 + C32377;
    const double C35279 = C32375 + C32376;
    const double C35270 = C32376 + C32375;
    const double C36870 = C33545 + C33546;
    const double C36866 = C33546 + C33545;
    const double C36867 = C33543 + C33544;
    const double C36865 = C33544 + C33543;
    const double C45029 = C35294 + C35293;
    const double C45030 = C35292 + C35291;
    const double C45134 = C35444 + C35443;
    const double C45135 = C35442 + C35441;
    const double C45301 = C35670 + C35669;
    const double C45300 = C35668 + C35667;
    const double C4180 = C4177 + C1618;
    const double C4179 = C4176 - C1618;
    const double C8917 = C8911 - C3232;
    const double C11295 = C11289 * C51164;
    const double C13402 = C13396 + C13397;
    const double C28456 = C28451 + C28452;
    const double C30363 = C30356 + C30357;
    const double C30830 = C30826 + C30827;
    const double C28455 = C28449 + C28450;
    const double C30359 = C30351 + C30352;
    const double C30829 = C30821 + C30822;
    const double C5736 = C5723 - C5734;
    const double C7239 = C7238 - C7236;
    const double C8622 = C8618 + C8609;
    const double C26016 = C26012 + C26013;
    const double C8918 = C8912 - C3234;
    const double C9844 = C9843 + C3234;
    const double C11413 = C11410 - C8920;
    const double C13286 = C13284 * C51164;
    const double C13593 = C13580 - C13591;
    const double C15347 = C15346 - C15344;
    const double C167 = C51349 * C145;
    const double C320 = C51349 * C312;
    const double C5527 = C51467 * C312;
    const double C32002 = C31772 * C312;
    const double C496 = C51349 * C475;
    const double C5319 = C51361 * C475;
    const double C5716 = C51467 * C475;
    const double C15633 = C15594 * C475;
    const double C31794 = C51361 * C475;
    const double C32191 = C31772 * C475;
    const double C38324 = C51495 * C475;
    const double C655 = C51349 * C644;
    const double C5897 = C51467 * C644;
    const double C32372 = C31772 * C644;
    const double C1604 = C51349 * C882;
    const double C5507 = C51361 * C882;
    const double C7077 = C51467 * C882;
    const double C15821 = C15594 * C882;
    const double C31982 = C51361 * C882;
    const double C33540 = C31772 * C882;
    const double C38512 = C51495 * C882;
    const double C1028 = C51349 * C1009;
    const double C5708 = C51361 * C1009;
    const double C6311 = C51467 * C1009;
    const double C15613 = C15595 * C1009;
    const double C16003 = C15594 * C1009;
    const double C32183 = C51361 * C1009;
    const double C32786 = C31772 * C1009;
    const double C38304 = C38286 * C1009;
    const double C38694 = C51495 * C1009;
    const double C8731 = C8610 * C51169;
    const double C11216 = C8610 * C51164;
    const double C26116 = C8610 * C51169;
    const double C13285 = C13282 + C13283;
    const double C28850 = C28848 + C28849;
    const double C11294 = C51349 * C8729;
    const double C11409 = C51349 * C8894;
    const double C13395 = C51361 * C8894;
    const double C45143 = C51361 * C8894;
    const double C11624 = C51349 * C9235;
    const double C13575 = C51361 * C9235;
    const double C19003 = C15595 * C9235;
    const double C45309 = C51361 * C9235;
    const double C47869 = C38286 * C9235;
    const double C13903 = C51361 * C9353;
    const double C19179 = C15595 * C9353;
    const double C45619 = C51361 * C9353;
    const double C48045 = C38286 * C9353;
    const double C16586 = C16576 + C16577;
    const double C39277 = C39267 + C39268;
    const double C50751 = C50747 - C50724;
    const double C19498 = C19488 + C19489;
    const double C48364 = C48354 + C48355;
    const double C50808 = C50802 - C50776;
    const double C16839 =
        (4 * (2 * C50271 + C50071 * C50387 + C50376 * ae) +
         C50071 * (3 * C50387 + C50071 * C50706 + C50691 * ae) +
         (3 * C50376 + C50071 * C50691) * ae) /
        C49999;
    const double C50707 = C50705 - C50690;
    const double C50887 = C50878 + C50884;
    const double C16583 = C15595 * C6575;
    const double C39274 = C38286 * C6575;
    const double C19495 = C15595 * C14015;
    const double C48361 = C38286 * C14015;
    const double C50864 = C50856 - C50843;
    const double C50704 = C50697 + C50701;
    const double C50126 = C50116 + C50125;
    const double C3685 =
        2 * ((-(C50259 * ce) / C49932) / C49999 - (ae * C50257) / C50080 +
             C50071 * C50350) -
        (ae * (C50071 * C50359 + C50257 + C50356 * ce)) / C50080 -
        ((C50259 + C50071 * C50360 + C50356 * ae) * ce) / C50080 +
        C50071 * (C50350 - (ae * C50359) / C50080 - (C50360 * ce) / C50080 +
                  C50071 * ((-(C50353 * ce) / C49932) / C49999 -
                            (ae * C50351) / C50080 +
                            C50071 * C50165 *
                                ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080)));
    const double C50443 = C50440 + C50420;
    const double C2908 = C51349 * C755;
    const double C3220 = C51349 * C886;
    const double C5899 = C51361 * C886;
    const double C32374 = C51361 * C886;
    const double C3398 = C51349 * C1160;
    const double C7079 = C51361 * C1160;
    const double C15823 = C15595 * C1160;
    const double C33542 = C51361 * C1160;
    const double C38514 = C38286 * C1160;
    const double C6313 = C51361 * C1250;
    const double C16005 = C15595 * C1250;
    const double C32788 = C51361 * C1250;
    const double C38696 = C38286 * C1250;
    const double C8728 =
        4 * ((-2 * C50338) / C50080 + C50165 * C50451) +
        C50165 *
            (3 * C50451 +
             C50165 * ((-2 * C50165 * C50445) / C50080 +
                       C50165 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50175) /
                                  C49932) /
                                     C49999 -
                                 C50445 / C50080)));
    const double C8895 =
        (((-3 * C50315) / C49932 +
          C50165 * ((-2 * C50339) / C49932 -
                    (C50165 * (C50076 * C50225 * C50175 + C50215)) / C49932)) *
         ae) /
            C49999 -
        ((3 * C50317 +
          C50165 *
              (2 * C50341 + C50165 * (C50221 + C50076 * C50229 * C50175))) *
         ce) /
            C50080 +
        C50071 *
            (3 * C50451 +
             C50165 * ((-2 * C50165 * C50445) / C50080 +
                       C50165 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50175) /
                                  C49932) /
                                     C49999 -
                                 C50445 / C50080)));
    const double C9236 =
        (-2 * C50338) / C50080 + C50165 * C50451 +
        ((C50071 * C50498 - (C50496 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50497 + C50496 * ae) * ce) / C50080 +
        C50071 *
            ((C50498 * ae) / C49999 - (C50497 * ce) / C50080 +
             C50071 * ((-2 * C50165 * C50445) / C50080 +
                       C50165 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50175) /
                                  C49932) /
                                     C49999 -
                                 C50445 / C50080)));
    const double C9354 =
        2 * ((-(C50317 * ce) / C49932) / C49999 - (ae * C50315) / C50080 +
             C50071 * C50451) -
        (ae * (C50071 * C50513 + C50315 + C50510 * ce)) / C50080 -
        ((C50317 + C50071 * C50514 + C50510 * ae) * ce) / C50080 +
        C50071 *
            (C50451 - (ae * C50513) / C50080 - (C50514 * ce) / C50080 +
             C50071 *
                 ((-(C50491 * ce) / C49932) / C49999 - (ae * C50489) / C50080 +
                  C50071 * ((-(C50076 *
                               (C50111 * C50112 +
                                C50074 * bs[8] * std::pow(C50067, 8)) *
                               C50072 * C50175) /
                             C49932) /
                                C49999 -
                            C50445 / C50080)));
    const double C50525 = C50520 + C50524;
    const double C50621 = C50618 + C50598;
    const double C50760 = C50757 + C50740;
    const double C50819 = C50817 + C50801;
    const double C50892 = C50071 * C50889;
    const double C50759 = C50728 - C50756;
    const double C50818 = C50780 - C50816;
    const double C50891 = C50888 - C50868;
    const double C2005 = C172 * C1989;
    const double C1999 = C170 * C1989;
    const double C1993 = C168 * C1989;
    const double C4698 = C338 * C1989;
    const double C4692 = C340 * C1989;
    const double C5194 = C2595 * C1989;
    const double C10341 = C660 * C1989;
    const double C10843 = C2910 * C1989;
    const double C12686 = C3035 * C1989;
    const double C2007 = C509 * C1990;
    const double C2001 = C506 * C1990;
    const double C1995 = C503 * C1990;
    const double C4700 = C1613 * C1990;
    const double C4694 = C1611 * C1990;
    const double C5196 = C3221 * C1990;
    const double C10343 = C3225 * C1990;
    const double C10845 = C3223 * C1990;
    const double C12688 = C8913 * C1990;
    const double C1745 = C1743 - C1732;
    const double C4544 = C4541 + C1880;
    const double C4543 = C4540 - C1880;
    const double C10194 = C10192 + C4535;
    const double C10193 = C10191 - C4535;
    const double C10694 = C10693 - C5047;
    const double C12586 = C12585 - C10692;
    const double C38321 = C38287 * C133;
    const double C38315 = C38287 * C122;
    const double C38313 = C38287 * C121;
    const double C38307 = C38287 * C131;
    const double C38297 = C38287 * C129;
    const double C38291 = C38287 * C120;
    const double C38509 = C38287 * C302;
    const double C38503 = C38287 * C295;
    const double C38501 = C38287 * C296;
    const double C38495 = C38287 * C304;
    const double C38691 = C38287 * C465;
    const double C38685 = C38287 * C456;
    const double C38683 = C38287 * C463;
    const double C38677 = C38287 * C455;
    const double C38861 = C38287 * C635;
    const double C38855 = C38287 * C628;
    const double C39269 = C38287 * C1000;
    const double C39263 = C38287 * C993;
    const double C40017 = C38287 * C867;
    const double C40011 = C38287 * C857;
    const double C47438 = C38287 * C306;
    const double C47432 = C38287 * C297;
    const double C47752 = C38287 * C627;
    const double C47746 = C38287 * C633;
    const double C47864 = C38287 * C752;
    const double C47858 = C38287 * C745;
    const double C48040 = C38287 * C873;
    const double C48034 = C38287 * C860;
    const double C48032 = C38287 * C865;
    const double C48026 = C38287 * C856;
    const double C48356 = C38287 * C1151;
    const double C48350 = C38287 * C1146;
    const double C38323 = C38288 * C467;
    const double C38317 = C38288 * C457;
    const double C38311 = C38288 * C456;
    const double C38305 = C38288 * C465;
    const double C38299 = C38288 * C463;
    const double C38293 = C38288 * C455;
    const double C38511 = C38288 * C869;
    const double C38505 = C38288 * C858;
    const double C38499 = C38288 * C857;
    const double C38493 = C38288 * C867;
    const double C38693 = C38288 * C1002;
    const double C38687 = C38288 * C994;
    const double C38681 = C38288 * C1000;
    const double C38675 = C38288 * C993;
    const double C38863 = C38288 * C875;
    const double C38857 = C38288 * C861;
    const double C39271 = C38288 * C1243;
    const double C39265 = C38288 * C1237;
    const double C40019 = C38288 * C1153;
    const double C40013 = C38288 * C1147;
    const double C47440 = C38288 * C865;
    const double C47434 = C38288 * C856;
    const double C47750 = C38288 * C860;
    const double C47744 = C38288 * C873;
    const double C47866 = C38288 * C3188;
    const double C47860 = C38288 * C3184;
    const double C48042 = C38288 * C3556;
    const double C48036 = C38288 * C3552;
    const double C48030 = C38288 * C1151;
    const double C48024 = C38288 * C1146;
    const double C48358 = C38288 * C3678;
    const double C48352 = C38288 * C3674;
    const double C31832 = C31828 * C118;
    const double C31830 = C31826 * C51250;
    const double C32177 = C31826 * C51454;
    const double C33698 = C31826 * C1720;
    const double C31829 = C31825 * C118;
    const double C32176 = C31825 * C452;
    const double C33697 = C31825 * C1722;
    const double C34875 = C34865 * C118;
    const double C36869 = C34865 * C452;
    const double C37339 = C34865 * C1722;
    const double C34872 = C34862 * C118;
    const double C36863 = C34862 * C452;
    const double C37333 = C34862 * C1722;
    const double C34874 = C34864 * C51250;
    const double C36868 = C34864 * C51454;
    const double C37338 = C34864 * C1720;
    const double C34873 = C34863 * C51250;
    const double C36864 = C34863 * C51454;
    const double C37334 = C34863 * C1720;
    const double C32020 = C32018 * C118;
    const double C34876 = C34866 * C118;
    const double C32209 = C32207 * C453;
    const double C33699 = C32207 * C1723;
    const double C35296 = C35280 * C51250;
    const double C35289 = C35269 * C51250;
    const double C35295 = C35279 * C118;
    const double C35290 = C35270 * C118;
    const double C36876 = C36870 * C51262;
    const double C37340 = C36870 * C51262;
    const double C36873 = C36866 * C51262;
    const double C37336 = C36866 * C51262;
    const double C36874 = C36867 * C453;
    const double C37337 = C36867 * C1723;
    const double C36872 = C36865 * C453;
    const double C37335 = C36865 * C1723;
    const double C45032 = C45029 * C118;
    const double C45298 = C45029 * C452;
    const double C47034 = C45029 * C1722;
    const double C45033 = C45030 * C51250;
    const double C45299 = C45030 * C51454;
    const double C47035 = C45030 * C1720;
    const double C45144 = C45134 * C51250;
    const double C45145 = C45135 * C118;
    const double C45312 = C45301 * C51262;
    const double C47037 = C45301 * C51262;
    const double C45311 = C45300 * C453;
    const double C47036 = C45300 * C1723;
    const double C8923 = C8917 * C51438;
    const double C11402 = C8917 * C51164;
    const double C26265 = C8917 * C25568;
    const double C13403 = C13402 * C51164;
    const double C30366 = C30362 - C30363;
    const double C30832 = C30825 - C30830;
    const double C30365 = C30359 - C30360;
    const double C30831 = C30829 - C30823;
    const double C8924 = C8918 * C51169;
    const double C26266 = C8918 * C51169;
    const double C11416 = C11413 * C51164;
    const double C13594 = C13593 - C13592;
    const double C15348 = C15347 - C15345;
    const double C177 = C166 + C167;
    const double C335 = C319 + C320;
    const double C5540 = C5526 + C5527;
    const double C32015 = C32001 + C32002;
    const double C510 = C495 + C496;
    const double C5342 = C5318 + C5319;
    const double C5730 = C5715 + C5716;
    const double C15652 = C15632 + C15633;
    const double C31817 = C31793 + C31794;
    const double C32205 = C32190 + C32191;
    const double C663 = C654 + C655;
    const double C5906 = C5896 + C5897;
    const double C32381 = C32371 + C32372;
    const double C1614 = C1603 + C1604;
    const double C5530 = C5506 + C5507;
    const double C7086 = C7076 + C7077;
    const double C15834 = C15820 + C15821;
    const double C32005 = C31981 + C31982;
    const double C33549 = C33539 + C33540;
    const double C1040 = C1027 + C1028;
    const double C5726 = C5707 + C5708;
    const double C6320 = C6310 + C6311;
    const double C15642 = C15612 + C15613;
    const double C16016 = C16002 + C16003;
    const double C32201 = C32182 + C32183;
    const double C32795 = C32785 + C32786;
    const double C38333 = C38303 + C38304;
    const double C8740 = C8731 + C8737;
    const double C26118 = C26116 + C26117;
    const double C13287 = C13285 * C51164;
    const double C11297 = C11293 + C11294;
    const double C11412 = C11408 + C11409;
    const double C13401 = C13394 + C13395;
    const double C45149 = C45142 + C45143;
    const double C11626 = C11623 + C11624;
    const double C13588 = C13574 + C13575;
    const double C19009 = C19002 + C19003;
    const double C45316 = C45308 + C45309;
    const double C47875 = C47868 + C47869;
    const double C13911 = C13902 + C13903;
    const double C19191 = C19178 + C19179;
    const double C45623 = C45618 + C45619;
    const double C48057 = C48044 + C48045;
    const double C50758 = C50751 + C50755;
    const double C50815 = C50808 + C50812;
    const double C16840 =
        4 * ((-2 * C50270) / C49932 - (C50071 * C50386) / C49932 -
             (C50376 * ce) / C49932) +
        C50071 * ((-3 * C50386) / C49932 + C50071 * C50707 -
                  (C50691 * ce) / C49932) -
        ((3 * C50376 + C50071 * C50691) * ce) / C49932;
    const double C50890 = C50071 * C50887;
    const double C16589 = C16582 + C16583;
    const double C39280 = C39273 + C39274;
    const double C19501 = C19494 + C19495;
    const double C48367 = C48360 + C48361;
    const double C16843 =
        4 * (2 * C50388 - (ae * C50386) / C50080 - (C50387 * ce) / C50080 +
             C50071 * C50704) +
        (((-3 * C50386) / C49932 + C50071 * C50707 - (C50691 * ce) / C49932) *
         ae) /
            C49999 -
        ((3 * C50387 + C50071 * C50706 + C50691 * ae) * ce) / C50080 +
        C50071 *
            (3 * C50704 + (C50707 * ae) / C49999 - (C50706 * ce) / C50080 +
             C50071 *
                 (2 * C50698 - (ae * C50695) / C50080 - (C50696 * ce) / C50080 +
                  C50071 * ((-(ae * C50675) / C49932) / C49999 - C50113 -
                            (C50678 * ce) / C50080 +
                            C50071 * ((-(C50154 * ce) / C49932) / C49999 -
                                      (ae * C50153) / C50080 -
                                      (C50071 * C50119) / C50080))));
    const double C146 =
        5 * (3 * C50107 + C50076 * C50126) +
        C50076 * (4 * C50126 +
                  C50076 * (3 * C50124 +
                            C50076 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C316 = (yP - yQ) * (3 * C50107 + C50076 * C50126);
    const double C317 =
        (yP - yQ) *
        (4 * C50126 +
         C50076 *
             (3 * C50124 +
              C50076 * ((-2 * C50076 * C50119) / C50080 +
                        C50076 * ((-((C50111 * C50112 +
                                      C50074 * bs[8] * std::pow(C50067, 8)) *
                                     C50072 * C50089) /
                                   C49932) /
                                      C49999 -
                                  C50119 / C50080))));
    const double C476 =
        (((-3 * (C50148 * C50089 + C50143)) / C49932 +
          C50076 * ((-2 * C50076 * C50148) / C49932 -
                    (C50076 * (C50097 * C50096 * C50139 * C50089 + C50148)) /
                        C49932)) *
         ae) /
            C49999 -
        ((3 * (C50144 + C50149 * C50089) +
          C50076 * (2 * C50076 * C50149 +
                    C50076 * (C50149 + C50097 * C50096 * C50138 * C50089))) *
         ce) /
            C50080 +
        C50071 * (3 * C50107 + C50076 * C50126);
    const double C477 =
        ((4 * ((-2 * C50076 * C50148) / C49932 - (C50076 * C50157) / C49932) +
          C50076 * ((-3 * C50157) / C49932 +
                    C50076 * ((-2 * C50076 * C50153) / C49932 -
                              (C50076 *
                               (C50112 * C50111 * C50139 * C50089 + C50153)) /
                                  C49932))) *
         ae) /
            C49999 -
        ((4 * (2 * C50076 * C50149 + C50076 * C50158) +
          C50076 * (3 * C50158 +
                    C50076 * (2 * C50076 * C50154 +
                              C50076 * (C50154 +
                                        C50112 * C50111 * C50138 * C50089)))) *
         ce) /
            C50080 +
        C50071 * (4 * C50126 +
                  C50076 * (3 * C50124 +
                            C50076 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C645 = (-2 * C50076 * C50093) / C50080 + C50076 * C50107 +
                        C50126 * std::pow(yP - yQ, 2);
    const double C646 =
        3 * C50107 + C50076 * C50126 +
        (3 * C50124 +
         C50076 *
             ((-2 * C50076 * C50119) / C50080 +
              C50076 *
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080))) *
            std::pow(yP - yQ, 2);
    const double C754 =
        2 * C50165 * C50126 +
        C50165 *
            (C50126 +
             ((-2 * C50076 * C50119) / C50080 +
              C50076 *
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080)) *
                 std::pow(C50165, 2));
    const double C883 =
        (C50165 *
         ((-2 * C50076 * C50148) / C49932 - (C50076 * C50157) / C49932) * ae) /
            C49999 -
        (C50165 * (2 * C50076 * C50149 + C50076 * C50158) * ce) / C50080 +
        C50071 * C50165 * C50126;
    const double C887 =
        (((-2 * C50076 * C50148) / C49932 - (C50076 * C50157) / C49932 +
          ((-2 * C50076 * C50153) / C49932 -
           (C50076 * (C50112 * C50111 * C50139 * C50089 + C50153)) / C49932) *
              C50175) *
         ae) /
            C49999 -
        ((2 * C50076 * C50149 + C50076 * C50158 +
          (2 * C50076 * C50154 +
           C50076 * (C50154 + C50112 * C50111 * C50138 * C50089)) *
              C50175) *
         ce) /
            C50080 +
        C50071 *
            (C50126 +
             ((-2 * C50076 * C50119) / C50080 +
              C50076 *
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080)) *
                 C50175);
    const double C1010 =
        (-2 * C50168) / C50080 + C50076 * C50107 +
        ((C50071 * C50211 - (C50212 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50210 + C50212 * ae) * ce) / C50080 +
        C50071 *
            ((C50211 * ae) / C49999 - (C50210 * ce) / C50080 + C50071 * C50126);
    const double C1011 =
        3 * C50107 + C50076 * C50126 +
        ((C50071 * C50247 - (C50241 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50246 + C50241 * ae) * ce) / C50080 +
        C50071 * ((C50247 * ae) / C49999 - (C50246 * ce) / C50080 +
                  C50071 * (3 * C50124 +
                            C50076 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C1161 =
        C50165 * C50126 +
        ((C50071 * C50261 - (C50262 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50263 + C50262 * ae) * ce) / C50080 +
        C50071 * ((C50261 * ae) / C49999 - (C50263 * ce) / C50080 +
                  C50071 * C50165 *
                      ((-2 * C50076 * C50119) / C50080 +
                       C50076 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080)));
    const double C1251 =
        2 * ((C50211 * ae) / C49999 - (C50210 * ce) / C50080 +
             C50071 * C50126) +
        ((C50211 + C50071 * C50296 - (C50291 * ce) / C49932) * ae) / C49999 -
        ((C50210 + C50071 * C50295 + C50291 * ae) * ce) / C50080 +
        C50071 * (C50126 + (C50296 * ae) / C49999 - (C50295 * ce) / C50080 +
                  C50071 * ((C50243 * ae) / C49999 - (C50242 * ce) / C50080 +
                            C50071 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C6576 =
        3 * (C50107 - (ae * C50286) / C50080 - (C50287 * ce) / C50080 +
             C50071 * C50443) +
        (((-2 * C50286) / C49932 - (C50071 * C50441) / C49932 -
          (C50431 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50287 + C50071 * C50442 + C50431 * ae) * ce) / C50080 +
        C50071 *
            (2 * C50443 - (ae * C50441) / C50080 - (C50442 * ce) / C50080 +
             C50071 *
                 (C50124 - (ae * C50429) / C50080 - (C50432 * ce) / C50080 +
                  C50071 *
                      ((-(C50236 * ce) / C49932) / C49999 -
                       (ae * C50234) / C50080 +
                       C50071 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080))));
    const double C2914 = C2907 + C2908;
    const double C3228 = C3219 + C3220;
    const double C5907 = C5898 + C5899;
    const double C32382 = C32373 + C32374;
    const double C3402 = C3397 + C3398;
    const double C7087 = C7078 + C7079;
    const double C15835 = C15822 + C15823;
    const double C33550 = C33541 + C33542;
    const double C38526 = C38513 + C38514;
    const double C6321 = C6312 + C6313;
    const double C16017 = C16004 + C16005;
    const double C32796 = C32787 + C32788;
    const double C38708 = C38695 + C38696;
    const double C11287 =
        5 * (3 * C50457 + C50165 * C50525) +
        C50165 * (4 * C50525 +
                  C50165 * (3 * C50523 +
                            C50165 * ((-2 * C50165 * C50119) / C50080 +
                                      C50165 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50175) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C11400 =
        ((4 * C50477 +
          C50165 *
              ((-3 * C50468) / C49932 +
               C50165 * ((-2 * C50165 * C50153) / C49932 -
                         (C50165 * (C50225 * C50175 + C50153)) / C49932))) *
         ae) /
            C49999 -
        ((4 * C50476 +
          C50165 *
              (3 * C50470 + C50165 * (2 * C50165 * C50154 +
                                      C50165 * (C50154 + C50229 * C50175)))) *
         ce) /
            C50080 +
        C50071 * (4 * C50525 +
                  C50165 * (3 * C50523 +
                            C50165 * ((-2 * C50165 * C50119) / C50080 +
                                      C50165 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50175) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C11615 =
        3 * C50457 + C50165 * C50525 +
        ((C50071 * C50557 - (C50555 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50556 + C50555 * ae) * ce) / C50080 +
        C50071 * ((C50557 * ae) / C49999 - (C50556 * ce) / C50080 +
                  C50071 * (3 * C50523 +
                            C50165 * ((-2 * C50165 * C50119) / C50080 +
                                      C50165 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50175) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C11697 =
        2 * ((C50477 * ae) / C49999 - (C50476 * ce) / C50080 +
             C50071 * C50525) +
        ((C50477 + C50071 * C50566 - (C50561 * ce) / C49932) * ae) / C49999 -
        ((C50476 + C50071 * C50565 + C50561 * ae) * ce) / C50080 +
        C50071 * (C50525 + (C50566 * ae) / C49999 - (C50565 * ce) / C50080 +
                  C50071 * ((C50551 * ae) / C49999 - (C50550 * ce) / C50080 +
                            C50071 * ((-2 * C50165 * C50119) / C50080 +
                                      C50165 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50175) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C14016 =
        3 * (C50457 - (ae * C50505) / C50080 - (C50506 * ce) / C50080 +
             C50071 * C50621) +
        (((-2 * C50505) / C49932 - (C50071 * C50619) / C49932 -
          (C50609 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50506 + C50071 * C50620 + C50609 * ae) * ce) / C50080 +
        C50071 *
            (2 * C50621 - (ae * C50619) / C50080 - (C50620 * ce) / C50080 +
             C50071 *
                 (C50523 - (ae * C50607) / C50080 - (C50610 * ce) / C50080 +
                  C50071 *
                      ((-(C50543 * ce) / C49932) / C49999 -
                       (ae * C50539) / C50080 +
                       C50071 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50175) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080))));
    const double C16841 =
        (4 * (2 * C50279 + C50071 * C50415 + C50404 * ae) +
         C50071 * (3 * C50415 + C50071 * C50760 + C50745 * ae) +
         (3 * C50404 + C50071 * C50745) * ae) /
        C49999;
    const double C19600 =
        (4 * (2 * C50336 + C50071 * C50593 + C50582 * ae) +
         C50071 * (3 * C50593 + C50071 * C50819 + C50806 * ae) +
         (3 * C50582 + C50071 * C50806) * ae) /
        C49999;
    const double C50895 = C50838 + C50892;
    const double C50761 = C50759 - C50744;
    const double C50820 = C50818 - C50805;
    const double C50894 = C50071 * C50891;
    const double C10688 = C10193 * C51169;
    const double C27971 = C10193 * C51169;
    const double C10695 = C10694 * C51438;
    const double C12579 = C10694 * C51164;
    const double C27970 = C10694 * C25568;
    const double C12587 = C12586 * C51164;
    const double C38342 = C38321 + C38322;
    const double C38339 = C38315 + C38316;
    const double C38338 = C38313 + C38314;
    const double C38335 = C38307 + C38308;
    const double C38330 = C38297 + C38298;
    const double C38327 = C38291 + C38292;
    const double C38524 = C38509 + C38510;
    const double C38521 = C38503 + C38504;
    const double C38520 = C38501 + C38502;
    const double C38517 = C38495 + C38496;
    const double C38706 = C38691 + C38692;
    const double C38703 = C38685 + C38686;
    const double C38702 = C38683 + C38684;
    const double C38699 = C38677 + C38678;
    const double C38870 = C38861 + C38862;
    const double C38867 = C38855 + C38856;
    const double C39278 = C39269 + C39270;
    const double C39275 = C39263 + C39264;
    const double C40026 = C40017 + C40018;
    const double C40023 = C40011 + C40012;
    const double C47447 = C47438 + C47439;
    const double C47444 = C47432 + C47433;
    const double C47759 = C47752 + C47753;
    const double C47756 = C47746 + C47747;
    const double C47873 = C47864 + C47865;
    const double C47870 = C47858 + C47859;
    const double C48055 = C48040 + C48041;
    const double C48052 = C48034 + C48035;
    const double C48051 = C48032 + C48033;
    const double C48048 = C48026 + C48027;
    const double C48365 = C48356 + C48357;
    const double C48362 = C48350 + C48351;
    const double C38343 = C38323 + C38324;
    const double C38340 = C38317 + C38318;
    const double C38337 = C38311 + C38312;
    const double C38334 = C38305 + C38306;
    const double C38331 = C38299 + C38300;
    const double C38328 = C38293 + C38294;
    const double C38525 = C38511 + C38512;
    const double C38522 = C38505 + C38506;
    const double C38519 = C38499 + C38500;
    const double C38516 = C38493 + C38494;
    const double C38707 = C38693 + C38694;
    const double C38704 = C38687 + C38688;
    const double C38701 = C38681 + C38682;
    const double C38698 = C38675 + C38676;
    const double C38871 = C38863 + C38864;
    const double C38868 = C38857 + C38858;
    const double C39279 = C39271 + C39272;
    const double C39276 = C39265 + C39266;
    const double C40027 = C40019 + C40020;
    const double C40024 = C40013 + C40014;
    const double C47448 = C47440 + C47441;
    const double C47445 = C47434 + C47435;
    const double C47758 = C47750 + C47751;
    const double C47755 = C47744 + C47745;
    const double C47874 = C47866 + C47867;
    const double C47871 = C47860 + C47861;
    const double C48056 = C48042 + C48043;
    const double C48053 = C48036 + C48037;
    const double C48050 = C48030 + C48031;
    const double C48047 = C48024 + C48025;
    const double C48366 = C48358 + C48359;
    const double C48363 = C48352 + C48353;
    const double C31833 = C31829 + C31830;
    const double C32198 = C32176 + C32177;
    const double C33701 = C33697 + C33698;
    const double C34879 = C34874 + C34875;
    const double C36875 = C36868 + C36869;
    const double C37342 = C37338 + C37339;
    const double C34878 = C34872 + C34873;
    const double C36871 = C36863 + C36864;
    const double C37341 = C37333 + C37334;
    const double C35302 = C35295 + C35296;
    const double C35301 = C35289 + C35290;
    const double C45034 = C45032 + C45033;
    const double C45310 = C45298 + C45299;
    const double C47038 = C47034 + C47035;
    const double C45150 = C45144 + C45145;
    const double C30368 = C30366 + C30364;
    const double C30834 = C30832 + C30828;
    const double C30367 = C30365 - C30361;
    const double C30833 = C30831 - C30824;
    const double C8925 = C8923 + C8924;
    const double C26267 = C26265 + C26266;
    const double C13595 = C13594 * C51164;
    const double C15349 = C15348 * C51164;
    const double C187 = C177 * C51250;
    const double C343 = C335 * C51250;
    const double C1607 = C335 * C51454;
    const double C1886 = C335 * C1720;
    const double C518 = C510 * C51262;
    const double C1032 = C510 * C987;
    const double C1736 = C510 * C51262;
    const double C2008 = C510 * C51489;
    const double C5352 = C5342 + C5343;
    const double C31827 = C31817 + C31818;
    const double C669 = C663 * C51250;
    const double C3217 = C663 * C51454;
    const double C4537 = C663 * C1720;
    const double C1620 = C1614 * C51262;
    const double C1884 = C1614 * C51262;
    const double C3394 = C1614 * C987;
    const double C4701 = C1614 * C51489;
    const double C5542 = C5530 + C5531;
    const double C28448 = C5531 + C5530;
    const double C32017 = C32005 + C32006;
    const double C34867 = C32006 + C32005;
    const double C1046 = C1040 * C988;
    const double C2004 = C1040 * C1988;
    const double C5733 = C5726 + C5727;
    const double C32208 = C32201 + C32202;
    const double C11299 = C11297 * C51250;
    const double C11415 = C11412 * C51262;
    const double C12584 = C11412 * C51262;
    const double C11628 = C11626 * C988;
    const double C12691 = C11626 * C1988;
    const double C50893 = C50864 + C50890;
    const double C334 = C51349 * C316;
    const double C502 = C51349 * C476;
    const double C5333 = C51361 * C476;
    const double C31808 = C51361 * C476;
    const double C659 = C51349 * C645;
    const double C1610 = C51349 * C883;
    const double C5529 = C51361 * C883;
    const double C32004 = C51361 * C883;
    const double C1036 = C51349 * C1010;
    const double C5718 = C51361 * C1010;
    const double C15635 = C15595 * C1010;
    const double C32193 = C51361 * C1010;
    const double C38326 = C38286 * C1010;
    const double C2920 = C2914 * C51250;
    const double C3236 = C3228 * C51262;
    const double C4539 = C3228 * C51262;
    const double C3406 = C3402 * C988;
    const double C4703 = C3402 * C1988;
    const double C50897 = C50895 + C50877;
    const double C16844 =
        4 * (2 * C50416 - (ae * C50414) / C50080 - (C50415 * ce) / C50080 +
             C50071 * C50758) +
        (((-3 * C50414) / C49932 + C50071 * C50761 - (C50745 * ce) / C49932) *
         ae) /
            C49999 -
        ((3 * C50415 + C50071 * C50760 + C50745 * ae) * ce) / C50080 +
        C50071 *
            (3 * C50758 + (C50761 * ae) / C49999 - (C50760 * ce) / C50080 +
             C50071 *
                 (2 * C50752 - (ae * C50749) / C50080 - (C50750 * ce) / C50080 +
                  C50071 * ((-(ae * C50729) / C49932) / C49999 -
                            C50445 / C50080 - (C50732 * ce) / C50080 +
                            C50071 * ((-(C50484 * ce) / C49932) / C49999 -
                                      (ae * C50480) / C50080 -
                                      (C50071 * C50076 *
                                       (C50111 * C50112 +
                                        C50074 * bs[8] * std::pow(C50067, 8)) *
                                       C50072) /
                                          C50080))));
    const double C16842 =
        4 * ((-2 * C50278) / C49932 - (C50071 * C50414) / C49932 -
             (C50404 * ce) / C49932) +
        C50071 * ((-3 * C50414) / C49932 + C50071 * C50761 -
                  (C50745 * ce) / C49932) -
        ((3 * C50404 + C50071 * C50745) * ce) / C49932;
    const double C19602 =
        4 * (2 * C50594 - (ae * C50592) / C50080 - (C50593 * ce) / C50080 +
             C50071 * C50815) +
        (((-3 * C50592) / C49932 + C50071 * C50820 - (C50806 * ce) / C49932) *
         ae) /
            C49999 -
        ((3 * C50593 + C50071 * C50819 + C50806 * ae) * ce) / C50080 +
        C50071 *
            (3 * C50815 + (C50820 * ae) / C49999 - (C50819 * ce) / C50080 +
             C50071 *
                 (2 * C50809 - (ae * C50810) / C50080 - (C50811 * ce) / C50080 +
                  C50071 * ((-(ae * C50790) / C49932) / C49999 -
                            C50768 / C50080 - (C50793 * ce) / C50080 +
                            C50071 * ((-(C50774 * ce) / C49932) / C49999 -
                                      (ae * C50770) / C50080 -
                                      (C50071 * C50165 *
                                       (C50111 * C50112 +
                                        C50074 * bs[8] * std::pow(C50067, 8)) *
                                       C50072) /
                                          C50080))));
    const double C19601 =
        4 * ((-2 * C50335) / C49932 - (C50071 * C50592) / C49932 -
             (C50582 * ce) / C49932) +
        C50071 * ((-3 * C50592) / C49932 + C50071 * C50820 -
                  (C50806 * ce) / C49932) -
        ((3 * C50582 + C50071 * C50806) * ce) / C49932;
    const double C50896 = C50849 + C50894;
    const double C10696 = C10695 + C10688;
    const double C27972 = C27970 + C27971;
    const double C32211 = C32198 - C32209;
    const double C33702 = C33701 - C33699;
    const double C36878 = C36874 - C36875;
    const double C37344 = C37337 - C37342;
    const double C36877 = C36871 - C36872;
    const double C37343 = C37341 - C37335;
    const double C45031 = C35301 * C51164;
    const double C45035 = C45034 * C51164;
    const double C45317 = C45310 - C45311;
    const double C47039 = C47038 - C47036;
    const double C45151 = C45150 * C51164;
    const double C351 = C343 + C344;
    const double C2594 = C344 + C343;
    const double C524 = C522 - C518;
    const double C1746 = C1744 - C1736;
    const double C5356 = C5352 * C51250;
    const double C31831 = C31827 * C51250;
    const double C2592 = C669 + C668;
    const double C2900 = C668 + C669;
    const double C2747 = C2746 - C1620;
    const double C4181 = C4178 + C1620;
    const double C4330 = C4329 - C1884;
    const double C4545 = C4542 + C1884;
    const double C5544 = C5542 * C51250;
    const double C28454 = C28448 * C51250;
    const double C32019 = C32017 * C51250;
    const double C34877 = C34867 * C51250;
    const double C5735 = C5733 * C51262;
    const double C7237 = C5733 * C51262;
    const double C32210 = C32208 * C51262;
    const double C33700 = C32208 * C51262;
    const double C342 = C333 + C334;
    const double C512 = C501 + C502;
    const double C5349 = C5332 + C5333;
    const double C31824 = C31807 + C31808;
    const double C665 = C658 + C659;
    const double C1616 = C1609 + C1610;
    const double C5541 = C5528 + C5529;
    const double C32016 = C32003 + C32004;
    const double C1042 = C1035 + C1036;
    const double C5731 = C5717 + C5718;
    const double C15653 = C15634 + C15635;
    const double C32206 = C32192 + C32193;
    const double C38344 = C38325 + C38326;
    const double C21856 =
        (5 * (3 * C50387 + C50071 * C50706 + C50691 * ae) +
         C50071 * (4 * C50706 + C50071 * C50897 + C50882 * ae) +
         (4 * C50691 + C50071 * C50882) * ae) /
        C49999;
    const double C50898 = C50896 - C50881;
    const double C36880 = C36878 + C36876;
    const double C37346 = C37344 + C37340;
    const double C36879 = C36877 - C36873;
    const double C37345 = C37343 - C37336;
    const double C45318 = C45317 - C45312;
    const double C47040 = C47039 - C47037;
    const double C5359 = C5356 + C5357;
    const double C31834 = C31831 + C31832;
    const double C8616 = C2592 * C51169;
    const double C26014 = C2592 * C51169;
    const double C5546 = C5544 + C5545;
    const double C28457 = C28453 + C28454;
    const double C32021 = C32019 + C32020;
    const double C34880 = C34876 + C34877;
    const double C5737 = C5736 - C5735;
    const double C7240 = C7239 - C7237;
    const double C32212 = C32211 - C32210;
    const double C33703 = C33702 - C33700;
    const double C350 = C342 * C51250;
    const double C520 = C512 * C51262;
    const double C1740 = C512 * C51262;
    const double C671 = C665 * C51250;
    const double C1622 = C1616 * C51262;
    const double C1888 = C1616 * C51262;
    const double C1048 = C1042 * C988;
    const double C2010 = C1042 * C1988;
    const double C21858 =
        5 * (3 * C50704 + (C50707 * ae) / C49999 - (C50706 * ce) / C50080 +
             C50071 * C50893) +
        ((4 * C50707 + C50071 * C50898 - (C50882 * ce) / C49932) * ae) /
            C49999 -
        ((4 * C50706 + C50071 * C50897 + C50882 * ae) * ce) / C50080 +
        C50071 *
            (4 * C50893 + (C50898 * ae) / C49999 - (C50897 * ce) / C50080 +
             C50071 *
                 (3 * C50887 + (C50891 * ae) / C49999 - (C50889 * ce) / C50080 +
                  C50071 *
                      (2 * C50879 - (ae * C50873) / C50080 -
                       (C50876 * ce) / C50080 +
                       C50071 *
                           ((-(ae * C50851) / C49932) / C49999 -
                            C50119 / C50080 - (C50854 * ce) / C50080 +
                            C50071 * ((-(C50229 * ce) / C49932) / C49999 -
                                      (ae * C50225) / C50080 -
                                      (C50071 *
                                       (C50111 * C50112 +
                                        C50074 * bs[8] * std::pow(C50067, 8)) *
                                       C50072) /
                                          C50080)))));
    const double C21857 =
        5 * ((-3 * C50386) / C49932 + C50071 * C50707 -
             (C50691 * ce) / C49932) +
        C50071 * (4 * C50707 + C50071 * C50898 - (C50882 * ce) / C49932) -
        ((4 * C50691 + C50071 * C50882) * ce) / C49932;
    const double C45319 = C45318 * C51164;
    const double C47041 = C47040 * C51164;
    const double C8621 = C8616 + C8617;
    const double C26017 = C26014 + C26015;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51496 +
             (C178 + C179) * C51480 + C188 * C22937) *
                C22938 +
            ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
                C51337) *
               C1350 -
           ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
                C51337 +
            (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
                C22938) *
               C51236) *
              C51497 +
          (((C2591 * C51496 + C2440 * C51480 + C2594 * C22937) * C22938 +
            (C2899 * C51496 + C2900 * C51480 + (C670 + C671) * C22937) *
                C51337) *
               C51236 -
           ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
            (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
                C22938) *
               C1350) *
              C51483 +
          (((C188 * C51496 + C189 * C51480 + (C185 + C184) * C22937) * C22938 +
            (C2440 * C51496 + C2594 * C51480 + (C349 + C350) * C22937) *
                C51337) *
               C1350 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C22937 +
             (C671 + C670) * C51480 + C2592 * C51496) *
                C51337 +
            ((C350 + C349) * C22937 + C351 * C51480 + C352 * C51496) * C22938) *
               C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51496 +
             (C178 + C179) * C51480 + C188 * C22937) *
                C22938 +
            ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
                C51337) *
               C51498 -
           ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
                C51337 +
            (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
                C22938) *
               C51486 +
           ((C8608 * C51496 + C2899 * C51480 + C2900 * C22937) * C22938 +
            (C11215 * C51496 + C8611 * C51480 + (C2919 + C2920) * C22937) *
                C51337) *
               C1455) *
              C1456 +
          (((C2591 * C51496 + C2440 * C51480 + C2594 * C22937) * C22938 +
            (C2899 * C51496 + C2900 * C51480 + (C670 + C671) * C22937) *
                C51337) *
               C51486 -
           ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
            (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
                C22938) *
               C51498 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C22937 +
             (C2920 + C2919) * C51480 + C8610 * C51496) *
                C51337 +
            ((C671 + C670) * C22937 + C2592 * C51480 + C2894 * C51496) *
                C22938) *
               C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C452 +
              (C117 * C127 + C51349 * C140) * C51454 -
              (C117 * C454 + C51349 * C460) * C453 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51496 +
             (C479 + C480 - C513 - C514) * C51480 + C523 * C22937) *
                C22938 +
            ((C3197 + C3198 - C3229 - C3230) * C51496 + C4179 * C51480 +
             C2747 * C22937) *
                C51337) *
               C1350 +
           (((C3229 - (C3198 + C3197) + C3230) * C51496 + C4180 * C51480 +
             C4181 * C22937) *
                C22938 +
            ((C3231 - (C3205 + C3206) + C3232) * C51496 + C9844 * C51480 +
             (C3235 - (C3217 + C3218) + C3236) * C22937) *
                C51337) *
               C51236) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C51496 +
             (C515 - (C486 + C485) + C516) * C51480 +
             (C517 - (C492 + C491) + C518) * C22937) *
                C22938 +
            (C4180 * C51496 + C4181 * C51480 +
             (C1621 - (C1607 + C1608) + C1622) * C22937) *
                C51337) *
               C1350 +
           ((C4179 * C51496 + C2747 * C51480 +
             (C1608 + C1607 - C1621 - C1622) * C22937) *
                C22938 +
            (C8918 * C51496 + (C3218 + C3217 - C3235 - C3236) * C51480 +
             (C664 * C452 + C665 * C51454 -
              (C117 * C863 + C51349 * C878) * C453 -
              (C117 * C879 + C51349 * C887) * C51262) *
                 C22937) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51496 +
             (C1725 + C1726 - C1727 - C1728) * C51480 + C1745 * C22937) *
                C22938 +
            ((C4525 + C4526 - C4527 - C4528) * C51496 + C4543 * C51480 +
             C4330 * C22937) *
                C51337) *
               C1350 +
           (((C4527 - (C4526 + C4525) + C4528) * C51496 + C4544 * C51480 +
             C4545 * C22937) *
                C22938 +
            ((C5044 - (C5045 + C5046) + C5047) * C51496 + C10194 * C51480 +
             (C4536 - (C4537 + C4538) + C4539) * C22937) *
                C51337) *
               C51236) *
              C51445 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51496 +
             (C1731 - (C1730 + C1729) + C1732) * C51480 +
             (C1735 - (C1734 + C1733) + C1736) * C22937) *
                C22938 +
            (C4544 * C51496 + C4545 * C51480 +
             (C1885 - (C1886 + C1887) + C1888) * C22937) *
                C51337) *
               C1350 +
           ((C4543 * C51496 + C4330 * C51480 +
             (C1887 + C1886 - C1885 - C1888) * C22937) *
                C22938 +
            (C10193 * C51496 + (C4538 + C4537 - C4536 - C4539) * C51480 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51349 * C878) * C1723 -
              (C117 * C879 + C51349 * C887) * C51262) *
                 C22937) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51496 +
            (C1725 + C1726 - C1727 - C1728) * C51480 + C1745 * C22937) *
               C22938 +
           ((C4525 + C4526 - C4527 - C4528) * C51496 + C4543 * C51480 +
            C4330 * C22937) *
               C51337) *
              C51498 +
          (((C4527 - (C4526 + C4525) + C4528) * C51496 + C4544 * C51480 +
            C4545 * C22937) *
               C22938 +
           ((C5044 - (C5045 + C5046) + C5047) * C51496 + C10194 * C51480 +
            (C4536 - (C4537 + C4538) + C4539) * C22937) *
               C51337) *
              C51486 +
          ((C10694 * C51496 + C10193 * C51480 +
            (C4538 + C4537 - C4536 - C4539) * C22937) *
               C22938 +
           (C12586 * C51496 + (C10189 + C10188 - C10187 - C10190) * C51480 +
            (C2913 * C1722 + C2914 * C1720 -
             (C117 * C3186 + C51349 * C3191) * C1723 -
             (C117 * C3192 + C51349 * C3195) * C51262) *
                C22937) *
               C51337) *
              C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C51496 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51480 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C22937) *
               C22938 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51496 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51480 +
            (C4698 + C4699 - C4700 - C4701 + C4702 + C4703) * C22937) *
               C51337) *
              C1350 +
          (((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C51496 +
            (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51480 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C22937) *
               C22938 +
           ((C10845 - (C10844 + C10843) + C10846 - C10847 - C10848) * C51496 +
            (C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51480 +
            (C3227 * C1990 - (C663 * C51499 + C662 * C1989) + C3228 * C51489 -
             (C117 * C3554 + C51349 * C3559) * C1991 -
             (C117 * C3560 + C51349 * C3563) * C1988) *
                C22937) *
               C51337) *
              C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51496 +
             (C178 + C179) * C51480 + C188 * C22937) *
                C22938 +
            ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
                C51337) *
               C622 -
           ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
                C51337 +
            (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
                C22938) *
               C623 +
           ((C8608 * C51496 + C2899 * C51480 + C2900 * C22937) * C22938 +
            (C11215 * C51496 + C8611 * C51480 + (C2919 + C2920) * C22937) *
                C51337) *
               C624) *
              C51445 +
          (((C2591 * C51496 + C2440 * C51480 + C2594 * C22937) * C22938 +
            (C2899 * C51496 + C2900 * C51480 + (C670 + C671) * C22937) *
                C51337) *
               C623 -
           ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
            (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
                C22938) *
               C622 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C22937 +
             (C2920 + C2919) * C51480 + C8610 * C51496) *
                C51337 +
            ((C671 + C670) * C22937 + C2592 * C51480 + C2894 * C51496) *
                C22938) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51496 +
            (C178 + C179) * C51480 + C188 * C22937) *
               C22938 +
           ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
               C51337) *
              C51220 * C113 -
          ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
           (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
               C22938) *
              C51220 * C114 +
          ((C188 * C51496 + C189 * C51480 + (C185 + C184) * C22937) * C22938 +
           (C2440 * C51496 + C2594 * C51480 + (C349 + C350) * C22937) *
               C51337) *
              C51220 * C115 -
          ((((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C22937 +
            (C350 + C349) * C51480 + C351 * C51496) *
               C51337 +
           ((C187 + C186) * C22937 + C190 * C51480 + C191 * C51496) * C22938) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C51496 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51480 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C22937) *
               C22938 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51496 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51480 +
            (C3391 + C3392 - C3393 - C3394 + C3405 + C3406) * C22937) *
               C51337) *
              C51220 * C51445 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51496 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51480 +
            (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C22937) *
               C22938 +
           ((C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51496 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C51480 +
            (C1615 * C990 - (C335 * C986 + C336 * C989) + C1616 * C987 -
             (C117 * C1149 + C51349 * C1156) * C991 -
             (C117 * C1157 + C51349 * C1161) * C988) *
                C22937) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51496 +
            (C178 + C179) * C51480 + C188 * C22937) *
               C22938 +
           ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
               C51337) *
              C737 -
          ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
               C51337 +
           (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
               C22938) *
              C738 +
          ((C8608 * C51496 + C2899 * C51480 + C2900 * C22937) * C22938 +
           (C11215 * C51496 + C8611 * C51480 + (C2919 + C2920) * C22937) *
               C51337) *
              C739 -
          ((((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C22937 +
            (C8624 + C8623) * C51480 + C11289 * C51496) *
               C51337 +
           ((C2920 + C2919) * C22937 + C8610 * C51480 + C8732 * C51496) *
               C22938) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51496 +
             (C178 + C179) * C51480 + C188 * C22937) *
                C22938 +
            ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
                C51337) *
               C51452 -
           ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
                C51337 +
            (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
                C22938) *
               C51236) *
              C291 +
          (((C2591 * C51496 + C2440 * C51480 + C2594 * C22937) * C22938 +
            (C2899 * C51496 + C2900 * C51480 + (C670 + C671) * C22937) *
                C51337) *
               C51236 -
           ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
            (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
                C22938) *
               C51452) *
              C292 +
          (((C188 * C51496 + C189 * C51480 + (C185 + C184) * C22937) * C22938 +
            (C2440 * C51496 + C2594 * C51480 + (C349 + C350) * C22937) *
                C51337) *
               C51452 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C22937 +
             (C671 + C670) * C51480 + C2592 * C51496) *
                C51337 +
            ((C350 + C349) * C22937 + C351 * C51480 + C352 * C51496) * C22938) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C51496 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51480 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C22937) *
               C22938 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51496 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51480 +
            (C3391 + C3392 - C3393 - C3394 + C3405 + C3406) * C22937) *
               C51337) *
              C51452 +
          (((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C51496 +
            (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51480 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C22937) *
               C22938 +
           ((C9240 - (C9239 + C9238) + C9241 - C9248 - C9249) * C51496 +
            (C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51480 +
            (C3227 * C990 - (C663 * C986 + C662 * C989) + C3228 * C987 -
             (C117 * C3554 + C51349 * C3559) * C991 -
             (C117 * C3560 + C51349 * C3563) * C988) *
                C22937) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51349 * C126) * C452 +
                    (C117 * C127 + C51349 * C140) * C51454 -
                    (C117 * C454 + C51349 * C460) * C453 -
                    (C117 * C461 + C51349 * C472) * C51262) *
                       C51496 +
                   (C479 + C480 - C513 - C514) * C51480 + C523 * C22937) *
                      C22938 +
                  ((C3197 + C3198 - C3229 - C3230) * C51496 + C4179 * C51480 +
                   C2747 * C22937) *
                      C51337) *
                     C622 +
                 (((C3229 - (C3198 + C3197) + C3230) * C51496 + C4180 * C51480 +
                   C4181 * C22937) *
                      C22938 +
                  ((C3231 - (C3205 + C3206) + C3232) * C51496 + C9844 * C51480 +
                   (C3235 - (C3217 + C3218) + C3236) * C22937) *
                      C51337) *
                     C623 +
                 ((C8917 * C51496 + C8918 * C51480 +
                   (C3218 + C3217 - C3235 - C3236) * C22937) *
                      C22938 +
                  (C11413 * C51496 + (C8908 + C8907 - C8921 - C8922) * C51480 +
                   (C2913 * C452 + C2914 * C51454 -
                    (C117 * C3186 + C51349 * C3191) * C453 -
                    (C117 * C3192 + C51349 * C3195) * C51262) *
                       C22937) *
                      C51337) *
                     C624) *
                C51188) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51349 * C126) * C452 +
                    (C117 * C127 + C51349 * C140) * C51454 -
                    (C117 * C454 + C51349 * C460) * C453 -
                    (C117 * C461 + C51349 * C472) * C51262) *
                       C51496 +
                   (C479 + C480 - C513 - C514) * C51480 + C523 * C22937) *
                      C22938 +
                  ((C3197 + C3198 - C3229 - C3230) * C51496 + C4179 * C51480 +
                   C2747 * C22937) *
                      C51337) *
                     C51220 * C291 +
                 (((C513 - (C480 + C479) + C514) * C51496 +
                   (C515 - (C486 + C485) + C516) * C51480 +
                   (C517 - (C492 + C491) + C518) * C22937) *
                      C22938 +
                  (C4180 * C51496 + C4181 * C51480 +
                   (C1621 - (C1607 + C1608) + C1622) * C22937) *
                      C51337) *
                     C51220 * C292 +
                 ((C523 * C51496 + C524 * C51480 +
                   (C500 + C499 - C519 - C520) * C22937) *
                      C22938 +
                  (C2747 * C51496 + (C1608 + C1607 - C1621 - C1622) * C51480 +
                   (C341 * C452 + C342 * C51454 -
                    (C117 * C1588 + C51349 * C1589) * C453 -
                    (C117 * C1590 + C51349 * C1591) * C51262) *
                       C22937) *
                      C51337) *
                     C51220 * C293)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C51349 * C126) * C1232 +
                   (C117 * C127 + C51349 * C140) * C1228 -
                   (C117 * C454 + C51349 * C460) * C1233 -
                   (C117 * C461 + C51349 * C472) * C1229 +
                   (C117 * C992 + C51349 * C997) * C1234 +
                   (C117 * C998 + C51349 * C1007) * C1230 -
                   (C117 * C1236 + C51349 * C1240) * C1235 -
                   (C117 * C1241 + C51349 * C1248) * C1231) *
                      C51496 +
                  (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
                   C1037 * C1234 + C1038 * C1230 -
                   (C117 * C1237 + C51349 * C1242) * C1235 -
                   (C117 * C1243 + C51349 * C1249) * C1231) *
                      C51480 +
                  (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
                   C1039 * C1234 + C1040 * C1230 -
                   (C117 * C1238 + C51349 * C1244) * C1235 -
                   (C117 * C1245 + C51349 * C1250) * C1231) *
                      C22937) *
                     C22938 +
                 ((C2595 * C1232 + C2596 * C1228 - C3221 * C1233 -
                   C3222 * C1229 + C3573 * C1234 + C3574 * C1230 -
                   (C117 * C3674 + C51349 * C3677) * C1235 -
                   (C117 * C3678 + C51349 * C3683) * C1231) *
                      C51496 +
                  (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
                   C3399 * C1234 + C3400 * C1230 -
                   (C117 * C3675 + C51349 * C3679) * C1235 -
                   (C117 * C3680 + C51349 * C3684) * C1231) *
                      C51480 +
                  (C338 * C1232 + C337 * C1228 - C1613 * C1233 - C1614 * C1229 +
                   C3401 * C1234 + C3402 * C1230 -
                   (C117 * C3676 + C51349 * C3681) * C1235 -
                   (C117 * C3682 + C51349 * C3685) * C1231) *
                      C22937) *
                     C51337) *
                C51220 * C51188) /
                   (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51349 * C126) * C1722 +
                    (C117 * C127 + C51349 * C140) * C1720 -
                    (C117 * C454 + C51349 * C460) * C1723 -
                    (C117 * C461 + C51349 * C472) * C51262) *
                       C51496 +
                   (C1725 + C1726 - C1727 - C1728) * C51480 + C1745 * C22937) *
                      C22938 +
                  ((C4525 + C4526 - C4527 - C4528) * C51496 + C4543 * C51480 +
                   C4330 * C22937) *
                      C51337) *
                     C51220 * C51497 +
                 (((C1727 - (C1726 + C1725) + C1728) * C51496 +
                   (C1731 - (C1730 + C1729) + C1732) * C51480 +
                   (C1735 - (C1734 + C1733) + C1736) * C22937) *
                      C22938 +
                  (C4544 * C51496 + C4545 * C51480 +
                   (C1885 - (C1886 + C1887) + C1888) * C22937) *
                      C51337) *
                     C51220 * C51483 +
                 ((C1745 * C51496 + C1746 * C51480 +
                   (C1739 + C1738 - C1737 - C1740) * C22937) *
                      C22938 +
                  (C4330 * C51496 + (C1887 + C1886 - C1885 - C1888) * C51480 +
                   (C341 * C1722 + C342 * C1720 -
                    (C117 * C1588 + C51349 * C1589) * C1723 -
                    (C117 * C1590 + C51349 * C1591) * C51262) *
                       C22937) *
                      C51337) *
                     C51220 * C1354)) /
               (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51496 +
             (C1725 + C1726 - C1727 - C1728) * C51480 + C1745 * C22937) *
                C22938 +
            ((C4525 + C4526 - C4527 - C4528) * C51496 + C4543 * C51480 +
             C4330 * C22937) *
                C51337) *
               C51452 +
           (((C4527 - (C4526 + C4525) + C4528) * C51496 + C4544 * C51480 +
             C4545 * C22937) *
                C22938 +
            ((C5044 - (C5045 + C5046) + C5047) * C51496 + C10194 * C51480 +
             (C4536 - (C4537 + C4538) + C4539) * C22937) *
                C51337) *
               C51236) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51496 +
             (C1731 - (C1730 + C1729) + C1732) * C51480 +
             (C1735 - (C1734 + C1733) + C1736) * C22937) *
                C22938 +
            (C4544 * C51496 + C4545 * C51480 +
             (C1885 - (C1886 + C1887) + C1888) * C22937) *
                C51337) *
               C51452 +
           ((C4543 * C51496 + C4330 * C51480 +
             (C1887 + C1886 - C1885 - C1888) * C22937) *
                C22938 +
            (C10193 * C51496 + (C4538 + C4537 - C4536 - C4539) * C51480 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51349 * C878) * C1723 -
              (C117 * C879 + C51349 * C887) * C51262) *
                 C22937) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C51496 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51480 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C22937) *
               C22938 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51496 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51480 +
            (C4698 + C4699 - C4700 - C4701 + C4702 + C4703) * C22937) *
               C51337) *
              C51220 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51496 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51480 +
            (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C22937) *
               C22938 +
           ((C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51496 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C51480 +
            (C1615 * C1990 - (C335 * C51499 + C336 * C1989) + C1616 * C51489 -
             (C117 * C1149 + C51349 * C1156) * C1991 -
             (C117 * C1157 + C51349 * C1161) * C1988) *
                C22937) *
               C51337) *
              C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51496 +
            (C178 + C179) * C51480 + C188 * C22937) *
               C22938 +
           ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
               C51337) *
              C51220 * C113 -
          ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
           (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
               C22938) *
              C51220 * C114 +
          ((C188 * C51496 + C189 * C51480 + (C185 + C184) * C22937) * C22938 +
           (C2440 * C51496 + C2594 * C51480 + (C349 + C350) * C22937) *
               C51337) *
              C51220 * C115 -
          ((((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C22937 +
            (C350 + C349) * C51480 + C351 * C51496) *
               C51337 +
           ((C187 + C186) * C22937 + C190 * C51480 + C191 * C51496) * C22938) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51496 +
             (C178 + C179) * C51480 + C188 * C22937) *
                C22938 +
            ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
                C51337) *
               C622 -
           ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
                C51337 +
            (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
                C22938) *
               C623 +
           ((C8608 * C51496 + C2899 * C51480 + C2900 * C22937) * C22938 +
            (C11215 * C51496 + C8611 * C51480 + (C2919 + C2920) * C22937) *
                C51337) *
               C624) *
              C51445 +
          (((C2591 * C51496 + C2440 * C51480 + C2594 * C22937) * C22938 +
            (C2899 * C51496 + C2900 * C51480 + (C670 + C671) * C22937) *
                C51337) *
               C623 -
           ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
            (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
                C22938) *
               C622 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C22937 +
             (C2920 + C2919) * C51480 + C8610 * C51496) *
                C51337 +
            ((C671 + C670) * C22937 + C2592 * C51480 + C2894 * C51496) *
                C22938) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51496 +
             (C178 + C179) * C51480 + C188 * C22937) *
                C22938 +
            ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
                C51337) *
               C51452 -
           ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
                C51337 +
            (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
                C22938) *
               C51236) *
              C291 +
          (((C2591 * C51496 + C2440 * C51480 + C2594 * C22937) * C22938 +
            (C2899 * C51496 + C2900 * C51480 + (C670 + C671) * C22937) *
                C51337) *
               C51236 -
           ((C351 * C22937 + C352 * C51480 + C2593 * C51496) * C51337 +
            (C191 * C22937 + (C181 + C180) * C51480 + (C179 + C178) * C51496) *
                C22938) *
               C51452) *
              C292 +
          (((C188 * C51496 + C189 * C51480 + (C185 + C184) * C22937) * C22938 +
            (C2440 * C51496 + C2594 * C51480 + (C349 + C350) * C22937) *
                C51337) *
               C51452 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C22937 +
             (C671 + C670) * C51480 + C2592 * C51496) *
                C51337 +
            ((C350 + C349) * C22937 + C351 * C51480 + C352 * C51496) * C22938) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51496 +
            (C178 + C179) * C51480 + C188 * C22937) *
               C22938 +
           ((C2597 + C2598) * C51496 + C2591 * C51480 + C2440 * C22937) *
               C51337) *
              C737 -
          ((C2592 * C22937 + C2894 * C51480 + (C2915 + C2916) * C51496) *
               C51337 +
           (C352 * C22937 + C2593 * C51480 + (C2598 + C2597) * C51496) *
               C22938) *
              C738 +
          ((C8608 * C51496 + C2899 * C51480 + C2900 * C22937) * C22938 +
           (C11215 * C51496 + C8611 * C51480 + (C2919 + C2920) * C22937) *
               C51337) *
              C739 -
          ((((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C22937 +
            (C8624 + C8623) * C51480 + C11289 * C51496) *
               C51337 +
           ((C2920 + C2919) * C22937 + C8610 * C51480 + C8732 * C51496) *
               C22938) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51496 +
            (C479 + C480 - C513 - C514) * C51480 + C523 * C22937) *
               C22938 +
           ((C3197 + C3198 - C3229 - C3230) * C51496 + C4179 * C51480 +
            C2747 * C22937) *
               C51337) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C51496 +
            (C515 - (C486 + C485) + C516) * C51480 +
            (C517 - (C492 + C491) + C518) * C22937) *
               C22938 +
           (C4180 * C51496 + C4181 * C51480 +
            (C1621 - (C1607 + C1608) + C1622) * C22937) *
               C51337) *
              C51220 * C292 +
          ((C523 * C51496 + C524 * C51480 +
            (C500 + C499 - C519 - C520) * C22937) *
               C22938 +
           (C2747 * C51496 + (C1608 + C1607 - C1621 - C1622) * C51480 +
            (C341 * C452 + C342 * C51454 -
             (C117 * C1588 + C51349 * C1589) * C453 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C22937) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51496 +
            (C479 + C480 - C513 - C514) * C51480 + C523 * C22937) *
               C22938 +
           ((C3197 + C3198 - C3229 - C3230) * C51496 + C4179 * C51480 +
            C2747 * C22937) *
               C51337) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C51496 + C4180 * C51480 +
            C4181 * C22937) *
               C22938 +
           ((C3231 - (C3205 + C3206) + C3232) * C51496 + C9844 * C51480 +
            (C3235 - (C3217 + C3218) + C3236) * C22937) *
               C51337) *
              C623 +
          ((C8917 * C51496 + C8918 * C51480 +
            (C3218 + C3217 - C3235 - C3236) * C22937) *
               C22938 +
           (C11413 * C51496 + (C8908 + C8907 - C8921 - C8922) * C51480 +
            (C2913 * C452 + C2914 * C51454 -
             (C117 * C3186 + C51349 * C3191) * C453 -
             (C117 * C3192 + C51349 * C3195) * C51262) *
                C22937) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C25568 +
             (C178 + C179) * C51169) *
                C51500 +
            ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
            C26016 * C25572) *
               C1350 -
           (C26118 * C25572 +
            (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
            (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
               C51236) *
              C51497 +
          (((C2591 * C25568 + C2440 * C51169) * C51500 +
            (C2899 * C25568 + C2900 * C51169) * C51492 +
            (C8611 * C25568 + (C2919 + C2920) * C51169) * C25572) *
               C51236 -
           (C26017 * C25572 + (C352 * C51169 + C2593 * C25568) * C51492 +
            ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
               C1350) *
              C51483 +
          (((C188 * C25568 + C189 * C51169) * C51500 +
            (C2440 * C25568 + C2594 * C51169) * C51492 +
            (C2900 * C25568 + (C670 + C671) * C51169) * C25572) *
               C1350 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C25568) *
                C25572 +
            ((C671 + C670) * C51169 + C2592 * C25568) * C51492 +
            (C351 * C51169 + C352 * C25568) * C51500) *
               C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C25568 +
             (C178 + C179) * C51169) *
                C51500 +
            ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
            C26016 * C25572) *
               C51498 -
           (C26118 * C25572 +
            (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
            (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
               C51486 +
           (C26016 * C51500 + (C11215 * C25568 + C8611 * C51169) * C51492 +
            ((C8741 + C8742) * C25568 + (C8623 + C8624) * C51169) * C25572) *
               C1455) *
              C1456 +
          (((C2591 * C25568 + C2440 * C51169) * C51500 +
            (C2899 * C25568 + C2900 * C51169) * C51492 +
            (C8611 * C25568 + (C2919 + C2920) * C51169) * C25572) *
               C51486 -
           (C26017 * C25572 + (C352 * C51169 + C2593 * C25568) * C51492 +
            ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
               C51498 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C25568) *
                C25572 +
            ((C2920 + C2919) * C51169 + C8610 * C25568) * C51492 +
            C26017 * C51500) *
               C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C452 +
              (C117 * C127 + C51349 * C140) * C51454 -
              (C117 * C454 + C51349 * C460) * C453 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C25568 +
             (C479 + C480 - C513 - C514) * C51169) *
                C51500 +
            ((C3197 + C3198 - C3229 - C3230) * C25568 + C4179 * C51169) *
                C51492 +
            C26267 * C25572) *
               C1350 +
           (((C3229 - (C3198 + C3197) + C3230) * C25568 + C4180 * C51169) *
                C51500 +
            ((C3231 - (C3205 + C3206) + C3232) * C25568 + C9844 * C51169) *
                C51492 +
            ((C8919 - (C8901 + C8902) + C8920) * C25568 +
             (C8921 - (C8907 + C8908) + C8922) * C51169) *
                C25572) *
               C51236) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C25568 +
             (C515 - (C486 + C485) + C516) * C51169) *
                C51500 +
            (C4180 * C25568 + C4181 * C51169) * C51492 +
            (C9844 * C25568 + (C3235 - (C3217 + C3218) + C3236) * C51169) *
                C25572) *
               C1350 +
           ((C4179 * C25568 + C2747 * C51169) * C51500 +
            (C8918 * C25568 + (C3218 + C3217 - C3235 - C3236) * C51169) *
                C51492 +
            ((C8908 + C8907 - C8921 - C8922) * C25568 +
             (C2913 * C452 + C2914 * C51454 -
              (C117 * C3186 + C51349 * C3191) * C453 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C25572) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C25568 +
             (C1725 + C1726 - C1727 - C1728) * C51169) *
                C51500 +
            ((C4525 + C4526 - C4527 - C4528) * C25568 + C4543 * C51169) *
                C51492 +
            (C10694 * C25568 + C10193 * C51169) * C25572) *
               C1350 +
           (((C4527 - (C4526 + C4525) + C4528) * C25568 + C4544 * C51169) *
                C51500 +
            ((C5044 - (C5045 + C5046) + C5047) * C25568 + C10194 * C51169) *
                C51492 +
            ((C10689 - (C10690 + C10691) + C10692) * C25568 +
             (C10187 - (C10188 + C10189) + C10190) * C51169) *
                C25572) *
               C51236) *
              C51445 +
          ((((C1727 - (C1726 + C1725) + C1728) * C25568 +
             (C1731 - (C1730 + C1729) + C1732) * C51169) *
                C51500 +
            (C4544 * C25568 + C4545 * C51169) * C51492 +
            (C10194 * C25568 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
                C25572) *
               C1350 +
           ((C4543 * C25568 + C4330 * C51169) * C51500 +
            (C10193 * C25568 + (C4538 + C4537 - C4536 - C4539) * C51169) *
                C51492 +
            ((C10189 + C10188 - C10187 - C10190) * C25568 +
             (C2913 * C1722 + C2914 * C1720 -
              (C117 * C3186 + C51349 * C3191) * C1723 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C25572) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C25568 +
            (C1725 + C1726 - C1727 - C1728) * C51169) *
               C51500 +
           ((C4525 + C4526 - C4527 - C4528) * C25568 + C4543 * C51169) *
               C51492 +
           C27972 * C25572) *
              C51498 +
          (((C4527 - (C4526 + C4525) + C4528) * C25568 + C4544 * C51169) *
               C51500 +
           ((C5044 - (C5045 + C5046) + C5047) * C25568 + C10194 * C51169) *
               C51492 +
           ((C10689 - (C10690 + C10691) + C10692) * C25568 +
            (C10187 - (C10188 + C10189) + C10190) * C51169) *
               C25572) *
              C51486 +
          (C27972 * C51500 +
           (C12586 * C25568 + (C10189 + C10188 - C10187 - C10190) * C51169) *
               C51492 +
           ((C12583 + C12582 - C12581 - C12584) * C25568 +
            (C8619 * C1722 + C8620 * C1720 -
             (C117 * C8889 + C51349 * C8892) * C1723 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C25572) *
              C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C25568 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51169) *
               C51500 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C25568 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51169) *
               C51492 +
           ((C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C25568 +
            (C10341 + C10342 - C10343 - C10344 + C10345 + C10346) * C51169) *
               C25572) *
              C1350 +
          (((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C25568 +
            (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51169) *
               C51500 +
           ((C10845 - (C10844 + C10843) + C10846 - C10847 - C10848) * C25568 +
            (C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51169) *
               C51492 +
           ((C12688 - (C12687 + C12686) + C12689 - C12690 - C12691) * C25568 +
            (C8915 * C1990 - (C2912 * C51499 + C2911 * C1989) + C8916 * C51489 -
             (C117 * C9230 + C51349 * C9233) * C1991 -
             (C117 * C9234 + C51349 * C9236) * C1988) *
                C51169) *
               C25572) *
              C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C25568 +
             (C178 + C179) * C51169) *
                C51500 +
            ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
            C26016 * C25572) *
               C622 -
           ((C8610 * C51169 + C8732 * C25568) * C25572 +
            (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
            (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
               C623 +
           (C26016 * C51500 + (C11215 * C25568 + C8611 * C51169) * C51492 +
            ((C8741 + C8742) * C25568 + (C8623 + C8624) * C51169) * C25572) *
               C624) *
              C51445 +
          (((C2591 * C25568 + C2440 * C51169) * C51500 +
            (C2899 * C25568 + C2900 * C51169) * C51492 +
            (C8611 * C25568 + (C2919 + C2920) * C51169) * C25572) *
               C623 -
           (C26017 * C25572 + (C352 * C51169 + C2593 * C25568) * C51492 +
            ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
               C622 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C25568) *
                C25572 +
            ((C2920 + C2919) * C51169 + C8610 * C25568) * C51492 +
            C26017 * C51500) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C25568 +
            (C178 + C179) * C51169) *
               C51500 +
           ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
           (C8608 * C25568 + C2899 * C51169) * C25572) *
              C51220 * C113 -
          ((C2592 * C51169 + C2894 * C25568) * C25572 +
           (C352 * C51169 + C2593 * C25568) * C51492 +
           ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
              C51220 * C114 +
          ((C188 * C25568 + C189 * C51169) * C51500 +
           (C2440 * C25568 + C2594 * C51169) * C51492 +
           (C2900 * C25568 + (C670 + C671) * C51169) * C25572) *
              C51220 * C115 -
          ((((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C51169 +
            (C671 + C670) * C25568) *
               C25572 +
           ((C350 + C349) * C51169 + C351 * C25568) * C51492 +
           (C190 * C51169 + C191 * C25568) * C51500) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C25568 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51169) *
               C51500 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C25568 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51169) *
               C51492 +
           ((C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C25568 +
            (C9072 + C9073 - C9074 - C9075 + C9082 + C9083) * C51169) *
               C25572) *
              C51220 * C51445 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C25568 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51169) *
               C51500 +
           ((C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C25568 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C51169) *
               C51492 +
           ((C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C25568 +
            (C3227 * C990 - (C663 * C986 + C662 * C989) + C3228 * C987 -
             (C117 * C3554 + C51349 * C3559) * C991 -
             (C117 * C3560 + C51349 * C3563) * C988) *
                C51169) *
               C25572) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C25568 +
            (C178 + C179) * C51169) *
               C51500 +
           ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
           C26016 * C25572) *
              C737 -
          (C26118 * C25572 +
           (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
           (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
              C738 +
          (C26016 * C51500 + (C11215 * C25568 + C8611 * C51169) * C51492 +
           ((C8741 + C8742) * C25568 + (C8623 + C8624) * C51169) * C25572) *
              C739 -
          ((((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51169 +
            (C11299 + C11298) * C25568) *
               C25572 +
           ((C8624 + C8623) * C51169 + C11289 * C25568) * C51492 +
           C26118 * C51500) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C25568 +
             (C178 + C179) * C51169) *
                C51500 +
            ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
            (C8608 * C25568 + C2899 * C51169) * C25572) *
               C51452 -
           ((C8610 * C51169 + C8732 * C25568) * C25572 +
            (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
            (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
               C51236) *
              C291 +
          (((C2591 * C25568 + C2440 * C51169) * C51500 +
            (C2899 * C25568 + C2900 * C51169) * C51492 +
            (C8611 * C25568 + (C2919 + C2920) * C51169) * C25572) *
               C51236 -
           ((C2592 * C51169 + C2894 * C25568) * C25572 +
            (C352 * C51169 + C2593 * C25568) * C51492 +
            ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
               C51452) *
              C292 +
          (((C188 * C25568 + C189 * C51169) * C51500 +
            (C2440 * C25568 + C2594 * C51169) * C51492 +
            (C2900 * C25568 + (C670 + C671) * C51169) * C25572) *
               C51452 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C25568) *
                C25572 +
            ((C671 + C670) * C51169 + C2592 * C25568) * C51492 +
            (C351 * C51169 + C352 * C25568) * C51500) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C25568 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51169) *
               C51500 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C25568 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51169) *
               C51492 +
           ((C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C25568 +
            (C9072 + C9073 - C9074 - C9075 + C9082 + C9083) * C51169) *
               C25572) *
              C51452 +
          (((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C25568 +
            (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51169) *
               C51500 +
           ((C9240 - (C9239 + C9238) + C9241 - C9248 - C9249) * C25568 +
            (C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51169) *
               C51492 +
           ((C11619 - (C11618 + C11617) + C11620 - C11627 - C11628) * C25568 +
            (C8915 * C990 - (C2912 * C986 + C2911 * C989) + C8916 * C987 -
             (C117 * C9230 + C51349 * C9233) * C991 -
             (C117 * C9234 + C51349 * C9236) * C988) *
                C51169) *
               C25572) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C25568 +
            (C479 + C480 - C513 - C514) * C51169) *
               C51500 +
           ((C3197 + C3198 - C3229 - C3230) * C25568 + C4179 * C51169) *
               C51492 +
           C26267 * C25572) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C25568 + C4180 * C51169) *
               C51500 +
           ((C3231 - (C3205 + C3206) + C3232) * C25568 + C9844 * C51169) *
               C51492 +
           ((C8919 - (C8901 + C8902) + C8920) * C25568 +
            (C8921 - (C8907 + C8908) + C8922) * C51169) *
               C25572) *
              C623 +
          (C26267 * C51500 +
           (C11413 * C25568 + (C8908 + C8907 - C8921 - C8922) * C51169) *
               C51492 +
           ((C11407 + C11406 - C11414 - C11415) * C25568 +
            (C8619 * C452 + C8620 * C51454 -
             (C117 * C8889 + C51349 * C8892) * C453 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C25572) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C25568 +
            (C479 + C480 - C513 - C514) * C51169) *
               C51500 +
           ((C3197 + C3198 - C3229 - C3230) * C25568 + C4179 * C51169) *
               C51492 +
           (C8917 * C25568 + C8918 * C51169) * C25572) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C25568 +
            (C515 - (C486 + C485) + C516) * C51169) *
               C51500 +
           (C4180 * C25568 + C4181 * C51169) * C51492 +
           (C9844 * C25568 + (C3235 - (C3217 + C3218) + C3236) * C51169) *
               C25572) *
              C51220 * C292 +
          ((C523 * C25568 + C524 * C51169) * C51500 +
           (C2747 * C25568 + (C1608 + C1607 - C1621 - C1622) * C51169) *
               C51492 +
           ((C3218 + C3217 - C3235 - C3236) * C25568 +
            (C664 * C452 + C665 * C51454 -
             (C117 * C863 + C51349 * C878) * C453 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C25572) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1232 +
            (C117 * C127 + C51349 * C140) * C1228 -
            (C117 * C454 + C51349 * C460) * C1233 -
            (C117 * C461 + C51349 * C472) * C1229 +
            (C117 * C992 + C51349 * C997) * C1234 +
            (C117 * C998 + C51349 * C1007) * C1230 -
            (C117 * C1236 + C51349 * C1240) * C1235 -
            (C117 * C1241 + C51349 * C1248) * C1231) *
               C25568 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51349 * C1242) * C1235 -
            (C117 * C1243 + C51349 * C1249) * C1231) *
               C51169) *
              C51500 +
          ((C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
            C3573 * C1234 + C3574 * C1230 -
            (C117 * C3674 + C51349 * C3677) * C1235 -
            (C117 * C3678 + C51349 * C3683) * C1231) *
               C25568 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3399 * C1234 + C3400 * C1230 -
            (C117 * C3675 + C51349 * C3679) * C1235 -
            (C117 * C3680 + C51349 * C3684) * C1231) *
               C51169) *
              C51492 +
          ((C2910 * C1232 + C2909 * C1228 - C3223 * C1233 - C3224 * C1229 +
            C9246 * C1234 + C9247 * C1230 -
            (C117 * C9347 + C51349 * C9349) * C1235 -
            (C117 * C9350 + C51349 * C9353) * C1231) *
               C25568 +
           (C660 * C1232 + C661 * C1228 - C3225 * C1233 - C3226 * C1229 +
            C9080 * C1234 + C9081 * C1230 -
            (C117 * C9348 + C51349 * C9351) * C1235 -
            (C117 * C9352 + C51349 * C9354) * C1231) *
               C51169) *
              C25572) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C25568 +
            (C1725 + C1726 - C1727 - C1728) * C51169) *
               C51500 +
           ((C4525 + C4526 - C4527 - C4528) * C25568 + C4543 * C51169) *
               C51492 +
           (C10694 * C25568 + C10193 * C51169) * C25572) *
              C51220 * C51497 +
          (((C1727 - (C1726 + C1725) + C1728) * C25568 +
            (C1731 - (C1730 + C1729) + C1732) * C51169) *
               C51500 +
           (C4544 * C25568 + C4545 * C51169) * C51492 +
           (C10194 * C25568 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
               C25572) *
              C51220 * C51483 +
          ((C1745 * C25568 + C1746 * C51169) * C51500 +
           (C4330 * C25568 + (C1887 + C1886 - C1885 - C1888) * C51169) *
               C51492 +
           ((C4538 + C4537 - C4536 - C4539) * C25568 +
            (C664 * C1722 + C665 * C1720 -
             (C117 * C863 + C51349 * C878) * C1723 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C25572) *
              C51220 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C25568 +
             (C1725 + C1726 - C1727 - C1728) * C51169) *
                C51500 +
            ((C4525 + C4526 - C4527 - C4528) * C25568 + C4543 * C51169) *
                C51492 +
            (C10694 * C25568 + C10193 * C51169) * C25572) *
               C51452 +
           (((C4527 - (C4526 + C4525) + C4528) * C25568 + C4544 * C51169) *
                C51500 +
            ((C5044 - (C5045 + C5046) + C5047) * C25568 + C10194 * C51169) *
                C51492 +
            ((C10689 - (C10690 + C10691) + C10692) * C25568 +
             (C10187 - (C10188 + C10189) + C10190) * C51169) *
                C25572) *
               C51236) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C25568 +
             (C1731 - (C1730 + C1729) + C1732) * C51169) *
                C51500 +
            (C4544 * C25568 + C4545 * C51169) * C51492 +
            (C10194 * C25568 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
                C25572) *
               C51452 +
           ((C4543 * C25568 + C4330 * C51169) * C51500 +
            (C10193 * C25568 + (C4538 + C4537 - C4536 - C4539) * C51169) *
                C51492 +
            ((C10189 + C10188 - C10187 - C10190) * C25568 +
             (C2913 * C1722 + C2914 * C1720 -
              (C117 * C3186 + C51349 * C3191) * C1723 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C25572) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C25568 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51169) *
               C51500 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C25568 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51169) *
               C51492 +
           ((C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C25568 +
            (C10341 + C10342 - C10343 - C10344 + C10345 + C10346) * C51169) *
               C25572) *
              C51220 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C25568 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51169) *
               C51500 +
           ((C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C25568 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C51169) *
               C51492 +
           ((C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C25568 +
            (C3227 * C1990 - (C663 * C51499 + C662 * C1989) + C3228 * C51489 -
             (C117 * C3554 + C51349 * C3559) * C1991 -
             (C117 * C3560 + C51349 * C3563) * C1988) *
                C51169) *
               C25572) *
              C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C25568 +
            (C178 + C179) * C51169) *
               C51500 +
           ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
           (C8608 * C25568 + C2899 * C51169) * C25572) *
              C51220 * C113 -
          ((C2592 * C51169 + C2894 * C25568) * C25572 +
           (C352 * C51169 + C2593 * C25568) * C51492 +
           ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
              C51220 * C114 +
          ((C188 * C25568 + C189 * C51169) * C51500 +
           (C2440 * C25568 + C2594 * C51169) * C51492 +
           (C2900 * C25568 + (C670 + C671) * C51169) * C25572) *
              C51220 * C115 -
          ((((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C51169 +
            (C671 + C670) * C25568) *
               C25572 +
           ((C350 + C349) * C51169 + C351 * C25568) * C51492 +
           (C190 * C51169 + C191 * C25568) * C51500) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C25568 +
             (C178 + C179) * C51169) *
                C51500 +
            ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
            C26016 * C25572) *
               C622 -
           ((C8610 * C51169 + C8732 * C25568) * C25572 +
            (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
            (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
               C623 +
           (C26016 * C51500 + (C11215 * C25568 + C8611 * C51169) * C51492 +
            ((C8741 + C8742) * C25568 + (C8623 + C8624) * C51169) * C25572) *
               C624) *
              C51445 +
          (((C2591 * C25568 + C2440 * C51169) * C51500 +
            (C2899 * C25568 + C2900 * C51169) * C51492 +
            (C8611 * C25568 + (C2919 + C2920) * C51169) * C25572) *
               C623 -
           (C26017 * C25572 + (C352 * C51169 + C2593 * C25568) * C51492 +
            ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
               C622 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C25568) *
                C25572 +
            ((C2920 + C2919) * C51169 + C8610 * C25568) * C51492 +
            C26017 * C51500) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C25568 +
             (C178 + C179) * C51169) *
                C51500 +
            ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
            (C8608 * C25568 + C2899 * C51169) * C25572) *
               C51452 -
           ((C8610 * C51169 + C8732 * C25568) * C25572 +
            (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
            (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
               C51236) *
              C291 +
          (((C2591 * C25568 + C2440 * C51169) * C51500 +
            (C2899 * C25568 + C2900 * C51169) * C51492 +
            (C8611 * C25568 + (C2919 + C2920) * C51169) * C25572) *
               C51236 -
           ((C2592 * C51169 + C2894 * C25568) * C25572 +
            (C352 * C51169 + C2593 * C25568) * C51492 +
            ((C181 + C180) * C51169 + (C179 + C178) * C25568) * C51500) *
               C51452) *
              C292 +
          (((C188 * C25568 + C189 * C51169) * C51500 +
            (C2440 * C25568 + C2594 * C51169) * C51492 +
            (C2900 * C25568 + (C670 + C671) * C51169) * C25572) *
               C51452 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C25568) *
                C25572 +
            ((C671 + C670) * C51169 + C2592 * C25568) * C51492 +
            (C351 * C51169 + C352 * C25568) * C51500) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C25568 +
            (C178 + C179) * C51169) *
               C51500 +
           ((C2597 + C2598) * C25568 + C2591 * C51169) * C51492 +
           C26016 * C25572) *
              C737 -
          (C26118 * C25572 +
           (C2894 * C51169 + (C2915 + C2916) * C25568) * C51492 +
           (C2593 * C51169 + (C2598 + C2597) * C25568) * C51500) *
              C738 +
          (C26016 * C51500 + (C11215 * C25568 + C8611 * C51169) * C51492 +
           ((C8741 + C8742) * C25568 + (C8623 + C8624) * C51169) * C25572) *
              C739 -
          ((((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51169 +
            (C11299 + C11298) * C25568) *
               C25572 +
           ((C8624 + C8623) * C51169 + C11289 * C25568) * C51492 +
           C26118 * C51500) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C25568 +
            (C479 + C480 - C513 - C514) * C51169) *
               C51500 +
           ((C3197 + C3198 - C3229 - C3230) * C25568 + C4179 * C51169) *
               C51492 +
           (C8917 * C25568 + C8918 * C51169) * C25572) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C25568 +
            (C515 - (C486 + C485) + C516) * C51169) *
               C51500 +
           (C4180 * C25568 + C4181 * C51169) * C51492 +
           (C9844 * C25568 + (C3235 - (C3217 + C3218) + C3236) * C51169) *
               C25572) *
              C51220 * C292 +
          ((C523 * C25568 + C524 * C51169) * C51500 +
           (C2747 * C25568 + (C1608 + C1607 - C1621 - C1622) * C51169) *
               C51492 +
           ((C3218 + C3217 - C3235 - C3236) * C25568 +
            (C664 * C452 + C665 * C51454 -
             (C117 * C863 + C51349 * C878) * C453 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C25572) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C25568 +
            (C479 + C480 - C513 - C514) * C51169) *
               C51500 +
           ((C3197 + C3198 - C3229 - C3230) * C25568 + C4179 * C51169) *
               C51492 +
           C26267 * C25572) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C25568 + C4180 * C51169) *
               C51500 +
           ((C3231 - (C3205 + C3206) + C3232) * C25568 + C9844 * C51169) *
               C51492 +
           ((C8919 - (C8901 + C8902) + C8920) * C25568 +
            (C8921 - (C8907 + C8908) + C8922) * C51169) *
               C25572) *
              C623 +
          (C26267 * C51500 +
           (C11413 * C25568 + (C8908 + C8907 - C8921 - C8922) * C51169) *
               C51492 +
           ((C11407 + C11406 - C11414 - C11415) * C25568 +
            (C8619 * C452 + C8620 * C51454 -
             (C117 * C8889 + C51349 * C8892) * C453 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C25572) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C118 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
                C22938 +
            (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
             C28455 * C51169) *
                C51337) *
               C1350 -
           ((C13285 * C51169 +
             ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
                C51337 +
            (C28456 * C51169 +
             ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
                C22938) *
               C51236) *
              C51497 +
          (((C28455 * C25568 + C28457 * C51169) * C22938 +
            (C28850 * C25568 +
             ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C5546 * C51169 + C28456 * C25568) * C51337 +
            (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
             ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
                C22938) *
               C1350) *
              C51483 +
          (((C5358 * C25568 +
             ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C51169) *
                C22938 +
            (C28457 * C25568 +
             ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C51169) *
                C51337) *
               C1350 -
           ((((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                  C51250 +
              (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                  C118) *
                 C51169 +
             ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C25568) *
                C51337 +
            (((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51169 +
             C5546 * C25568) *
                C22938) *
               C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C118 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
                C22938 +
            (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
             C28455 * C51169) *
                C51337) *
               C51498 -
           ((C13285 * C51169 +
             ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
                C51337 +
            (C28456 * C51169 +
             ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
                C22938) *
               C51486 +
           ((C13284 * C25568 + C28850 * C51169) * C22938 +
            (((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C25568 +
             ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51169) *
                C51337) *
               C1455) *
              C1456 +
          (((C28455 * C25568 + C28457 * C51169) * C22938 +
            (C28850 * C25568 +
             ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51169) *
                C51337) *
               C51486 -
           ((C5546 * C51169 + C28456 * C25568) * C51337 +
            (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
             ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
                C22938) *
               C51498 -
           ((((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                  C51250 +
              (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                  C118) *
                 C51169 +
             ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C25568) *
                C51337 +
            (((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51169 +
             C13285 * C25568) *
                C22938) *
               C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C452 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51454 -
              (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                  C453 -
              (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                  C51262) *
                 C25568 +
             ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
              (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                 C51169) *
                C22938 +
            (((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
              (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                 C25568 +
             C30367 * C51169) *
                C51337) *
               C1350 +
           ((((C13577 + C13576) * C453 -
              ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
              (C13579 + C13578) * C51262) *
                 C25568 +
             C30368 * C51169) *
                C22938 +
            (((C13582 + C13581) * C453 -
              ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
              (C13584 + C13583) * C51262) *
                 C25568 +
             ((C14512 + C14513) * C453 - (C13270 * C51454 + C13271 * C452) +
              (C14514 + C14515) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C1456 +
          (((((C5720 + C5719) * C453 -
              ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
              (C5722 + C5721) * C51262) *
                 C25568 +
             ((C5725 + C5724) * C453 -
              ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
              (C5727 + C5726) * C51262) *
                 C51169) *
                C22938 +
            (C30368 * C25568 +
             ((C7084 + C7085) * C453 - (C5542 * C51454 + C5543 * C452) +
              (C7086 + C7087) * C51262) *
                 C51169) *
                C51337) *
               C1350 +
           ((C30367 * C25568 +
             (C28447 * C452 + C28448 * C51454 - (C7085 + C7084) * C453 -
              (C7087 + C7086) * C51262) *
                 C51169) *
                C22938 +
            ((C28846 * C452 + C28847 * C51454 - (C14513 + C14512) * C453 -
              (C14515 + C14514) * C51262) *
                 C25568 +
             ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
              (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                  C453 -
              (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C1722 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C1720 -
              (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                  C1723 -
              (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                  C51262) *
                 C25568 +
             ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
              (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                 C51169) *
                C22938 +
            (((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
              (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                 C25568 +
             C30833 * C51169) *
                C51337) *
               C1350 +
           ((((C13577 + C13576) * C1723 -
              ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
              (C13579 + C13578) * C51262) *
                 C25568 +
             C30834 * C51169) *
                C22938 +
            (((C13582 + C13581) * C1723 -
              ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
              (C13584 + C13583) * C51262) *
                 C25568 +
             ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
              (C14514 + C14515) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51445 +
          (((((C5720 + C5719) * C1723 -
              ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
              (C5722 + C5721) * C51262) *
                 C25568 +
             ((C5725 + C5724) * C1723 -
              ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
              (C5727 + C5726) * C51262) *
                 C51169) *
                C22938 +
            (C30834 * C25568 +
             ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
              (C7086 + C7087) * C51262) *
                 C51169) *
                C51337) *
               C1350 +
           ((C30833 * C25568 +
             (C28447 * C1722 + C28448 * C1720 - (C7085 + C7084) * C1723 -
              (C7087 + C7086) * C51262) *
                 C51169) *
                C22938 +
            ((C28846 * C1722 + C28847 * C1720 - (C14513 + C14512) * C1723 -
              (C14515 + C14514) * C51262) *
                 C25568 +
             ((C5904 + C5905) * C1722 + (C5906 + C5907) * C1720 -
              (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                  C1723 -
              (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C25568 +
            ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
             (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
             (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                C25568 +
            C30833 * C51169) *
               C51337) *
              C51498 +
          ((((C13577 + C13576) * C1723 -
             ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
             (C13579 + C13578) * C51262) *
                C25568 +
            C30834 * C51169) *
               C22938 +
           (((C13582 + C13581) * C1723 -
             ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
             (C13584 + C13583) * C51262) *
                C25568 +
            ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
             (C14514 + C14515) * C51262) *
                C51169) *
               C51337) *
              C51486 +
          ((C15348 * C25568 +
            (C28846 * C1722 + C28847 * C1720 - (C14513 + C14512) * C1723 -
             (C14515 + C14514) * C51262) *
                C51169) *
               C22938 +
           (((C13277 + C13276) * C1722 + (C13275 + C13274) * C1720 -
             (C13586 + C13585) * C1723 - (C13588 + C13587) * C51262) *
                C25568 +
            ((C13278 + C13279) * C1722 + (C13280 + C13281) * C1720 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C1723 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1989 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51499 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1990 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51489 +
             (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                 C1991 +
             (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                 C1988) *
                C25568 +
            ((C5334 + C5335) * C1989 + (C5336 + C5337) * C51499 -
             (C5719 + C5720) * C1990 - (C5721 + C5722) * C51489 +
             (C6314 + C6315) * C1991 + (C6316 + C6317) * C1988) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C1989 + (C12954 + C12955) * C51499 -
             (C13576 + C13577) * C1990 - (C13578 + C13579) * C51489 +
             (C13904 + C13905) * C1991 + (C13906 + C13907) * C1988) *
                C25568 +
            (C28443 * C1989 + C28444 * C51499 - C30353 * C1990 -
             C30354 * C51489 + (C29377 + C29378) * C1991 +
             (C29379 + C29380) * C1988) *
                C51169) *
               C51337) *
              C1350 +
          ((((C13577 + C13576) * C1990 -
             ((C12955 + C12954) * C51499 + (C12953 + C12952) * C1989) +
             (C13579 + C13578) * C51489 - (C13905 + C13904) * C1991 -
             (C13907 + C13906) * C1988) *
                C25568 +
            (C30355 * C1990 - (C28445 * C51499 + C28446 * C1989) +
             C30358 * C51489 - (C29378 + C29377) * C1991 -
             (C29380 + C29379) * C1988) *
                C51169) *
               C22938 +
           (((C13582 + C13581) * C1990 -
             ((C12959 + C12958) * C51499 + (C12957 + C12956) * C1989) +
             (C13584 + C13583) * C51489 - (C13909 + C13908) * C1991 -
             (C13911 + C13910) * C1988) *
                C25568 +
            ((C14512 + C14513) * C1990 - (C13270 * C51499 + C13271 * C1989) +
             (C14514 + C14515) * C51489 -
             (C5300 * C9348 + C51361 * C9351 + C5299 * C3553 + C51467 * C3557) *
                 C1991 -
             (C5300 * C9352 + C51361 * C9354 + C5299 * C3558 + C51467 * C3562) *
                 C1988) *
                C51169) *
               C51337) *
              C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C118 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
                C22938 +
            (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
             C28455 * C51169) *
                C51337) *
               C622 -
           ((C13285 * C51169 +
             ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
                C51337 +
            (C28456 * C51169 +
             ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
                C22938) *
               C623 +
           ((C13284 * C25568 + C28850 * C51169) * C22938 +
            (((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C25568 +
             ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51169) *
                C51337) *
               C624) *
              C51445 +
          (((C28455 * C25568 + C28457 * C51169) * C22938 +
            (C28850 * C25568 +
             ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51169) *
                C51337) *
               C623 -
           ((C5546 * C51169 + C28456 * C25568) * C51337 +
            (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
             ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
                C22938) *
               C622 -
           ((((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                  C51250 +
              (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                  C118) *
                 C51169 +
             ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C25568) *
                C51337 +
            (((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51169 +
             C13285 * C25568) *
                C22938) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
               C22938 +
           (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
            ((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51169) *
               C51337) *
              C51220 * C113 -
          ((C5546 * C51169 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C25568) *
               C51337 +
           (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
               C22938) *
              C51220 * C114 +
          ((C5358 * C25568 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C51169) *
               C22938 +
           (((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C25568 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C51169) *
               C51337) *
              C51220 * C115 -
          ((((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C51169 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C25568) *
               C51337 +
           (((C5349 + C5348) * C51250 + (C5347 + C5346) * C118) * C51169 +
            C5359 * C25568) *
               C22938) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C989 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C986 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C990 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C987 +
             (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                 C991 +
             (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                 C988) *
                C25568 +
            ((C5334 + C5335) * C989 + (C5336 + C5337) * C986 -
             (C5719 + C5720) * C990 - (C5721 + C5722) * C987 +
             (C6314 + C6315) * C991 + (C6316 + C6317) * C988) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C989 + (C12954 + C12955) * C986 -
             (C13576 + C13577) * C990 - (C13578 + C13579) * C987 +
             (C13904 + C13905) * C991 + (C13906 + C13907) * C988) *
                C25568 +
            (C28443 * C989 + C28444 * C986 - (C7081 + C7080) * C990 -
             (C7083 + C7082) * C987 + (C29377 + C29378) * C991 +
             (C29379 + C29380) * C988) *
                C51169) *
               C51337) *
              C51220 * C51445 +
          ((((C5720 + C5719) * C990 -
             ((C5337 + C5336) * C986 + (C5335 + C5334) * C989) +
             (C5722 + C5721) * C987 - (C6315 + C6314) * C991 -
             (C6317 + C6316) * C988) *
                C25568 +
            ((C5725 + C5724) * C990 -
             ((C5341 + C5340) * C986 + (C5339 + C5338) * C989) +
             (C5727 + C5726) * C987 - (C6319 + C6318) * C991 -
             (C6321 + C6320) * C988) *
                C51169) *
               C22938 +
           (((C7080 + C7081) * C990 - (C28445 * C986 + C28446 * C989) +
             (C7082 + C7083) * C987 - (C29378 + C29377) * C991 -
             (C29380 + C29379) * C988) *
                C25568 +
            ((C7084 + C7085) * C990 - (C5542 * C986 + C5543 * C989) +
             (C7086 + C7087) * C987 -
             (C5300 * C3676 + C51361 * C3681 + C5299 * C1148 + C51467 * C1154) *
                 C991 -
             (C5300 * C3682 + C51361 * C3685 + C5299 * C1155 + C51467 * C1160) *
                 C988) *
                C51169) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
               C22938 +
           (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
            C28455 * C51169) *
               C51337) *
              C737 -
          ((C13285 * C51169 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
               C51337 +
           (C28456 * C51169 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
               C22938) *
              C738 +
          ((C13284 * C25568 + C28850 * C51169) * C22938 +
           (((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C25568 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51169) *
               C51337) *
              C739 -
          ((((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51169 +
            ((C13401 + C13400) * C51250 + (C13399 + C13398) * C118) * C25568) *
               C51337 +
           (((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51169 +
            C13402 * C25568) *
               C22938) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C118 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
                C22938 +
            (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
             C28455 * C51169) *
                C51337) *
               C51452 -
           ((C13285 * C51169 +
             ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
                C51337 +
            (C28456 * C51169 +
             ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
                C22938) *
               C51236) *
              C291 +
          (((C28455 * C25568 + C28457 * C51169) * C22938 +
            (((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C25568 +
             ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C5546 * C51169 + C28456 * C25568) * C51337 +
            (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
             ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
                C22938) *
               C51452) *
              C292 +
          (((C5358 * C25568 +
             ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C51169) *
                C22938 +
            (C28457 * C25568 +
             ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C51169) *
                C51337) *
               C51452 -
           ((((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                  C51250 +
              (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                  C118) *
                 C51169 +
             ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C25568) *
                C51337 +
            (((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51169 +
             C5546 * C25568) *
                C22938) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C989 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C986 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C990 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C987 +
             (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                 C991 +
             (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                 C988) *
                C25568 +
            ((C5334 + C5335) * C989 + (C5336 + C5337) * C986 -
             (C5719 + C5720) * C990 - (C5721 + C5722) * C987 +
             (C6314 + C6315) * C991 + (C6316 + C6317) * C988) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C989 + (C12954 + C12955) * C986 -
             (C13576 + C13577) * C990 - (C13578 + C13579) * C987 +
             (C13904 + C13905) * C991 + (C13906 + C13907) * C988) *
                C25568 +
            (C28443 * C989 + C28444 * C986 - (C7081 + C7080) * C990 -
             (C7083 + C7082) * C987 + (C29377 + C29378) * C991 +
             (C29379 + C29380) * C988) *
                C51169) *
               C51337) *
              C51452 +
          ((((C13577 + C13576) * C990 -
             ((C12955 + C12954) * C986 + (C12953 + C12952) * C989) +
             (C13579 + C13578) * C987 - (C13905 + C13904) * C991 -
             (C13907 + C13906) * C988) *
                C25568 +
            ((C7080 + C7081) * C990 - (C28445 * C986 + C28446 * C989) +
             (C7082 + C7083) * C987 - (C29378 + C29377) * C991 -
             (C29380 + C29379) * C988) *
                C51169) *
               C22938 +
           (((C13582 + C13581) * C990 -
             ((C12959 + C12958) * C986 + (C12957 + C12956) * C989) +
             (C13584 + C13583) * C987 - (C13909 + C13908) * C991 -
             (C13911 + C13910) * C988) *
                C25568 +
            ((C14512 + C14513) * C990 - (C13270 * C986 + C13271 * C989) +
             (C14514 + C14515) * C987 -
             (C5300 * C9348 + C51361 * C9351 + C5299 * C3553 + C51467 * C3557) *
                 C991 -
             (C5300 * C9352 + C51361 * C9354 + C5299 * C3558 + C51467 * C3562) *
                 C988) *
                C51169) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C25568 +
            ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
             (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
             (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                C25568 +
            (C28443 * C452 + C28444 * C51454 - (C7081 + C7080) * C453 -
             (C7083 + C7082) * C51262) *
                C51169) *
               C51337) *
              C622 +
          ((((C13577 + C13576) * C453 -
             ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
             (C13579 + C13578) * C51262) *
                C25568 +
            ((C7080 + C7081) * C453 - (C28445 * C51454 + C28446 * C452) +
             (C7082 + C7083) * C51262) *
                C51169) *
               C22938 +
           (((C13582 + C13581) * C453 -
             ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
             (C13584 + C13583) * C51262) *
                C25568 +
            ((C14512 + C14513) * C453 - (C13270 * C51454 + C13271 * C452) +
             (C14514 + C14515) * C51262) *
                C51169) *
               C51337) *
              C623 +
          ((C13594 * C25568 +
            (C28846 * C452 + C28847 * C51454 - (C14513 + C14512) * C453 -
             (C14515 + C14514) * C51262) *
                C51169) *
               C22938 +
           (((C13277 + C13276) * C452 + (C13275 + C13274) * C51454 -
             (C13586 + C13585) * C453 - (C13588 + C13587) * C51262) *
                C25568 +
            ((C13278 + C13279) * C452 + (C13280 + C13281) * C51454 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C453 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C25568 +
            ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
             (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
             (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                C25568 +
            (C28443 * C452 + C28444 * C51454 - (C7081 + C7080) * C453 -
             (C7083 + C7082) * C51262) *
                C51169) *
               C51337) *
              C51220 * C291 +
          ((((C5720 + C5719) * C453 -
             ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
             (C5722 + C5721) * C51262) *
                C25568 +
            ((C5725 + C5724) * C453 -
             ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
             (C5727 + C5726) * C51262) *
                C51169) *
               C22938 +
           (((C7080 + C7081) * C453 - (C28445 * C51454 + C28446 * C452) +
             (C7082 + C7083) * C51262) *
                C25568 +
            ((C7084 + C7085) * C453 - (C5542 * C51454 + C5543 * C452) +
             (C7086 + C7087) * C51262) *
                C51169) *
               C51337) *
              C51220 * C292 +
          ((C5737 * C25568 +
            ((C5345 + C5344) * C452 + (C5343 + C5342) * C51454 -
             (C5729 + C5728) * C453 - (C5731 + C5730) * C51262) *
                C51169) *
               C22938 +
           ((C28447 * C452 + C28448 * C51454 - (C7085 + C7084) * C453 -
             (C7087 + C7086) * C51262) *
                C25568 +
            ((C5538 + C5539) * C452 + (C5540 + C5541) * C51454 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C453 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1232 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1228 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1233 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C1229 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1234 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1230 -
            (C5300 * C6565 + C51361 * C6568 + C5299 * C1236 + C51467 * C1240) *
                C1235 -
            (C5300 * C6569 + C51361 * C6574 + C5299 * C1241 + C51467 * C1248) *
                C1231) *
               C25568 +
           ((C5334 + C5335) * C1232 + (C5336 + C5337) * C1228 -
            (C5719 + C5720) * C1233 - (C5721 + C5722) * C1229 +
            (C6314 + C6315) * C1234 + (C6316 + C6317) * C1230 -
            (C5300 * C6566 + C51361 * C6570 + C5299 * C1237 + C51467 * C1242) *
                C1235 -
            (C5300 * C6571 + C51361 * C6575 + C5299 * C1243 + C51467 * C1249) *
                C1231) *
               C51169) *
              C22938 +
          (((C12952 + C12953) * C1232 + (C12954 + C12955) * C1228 -
            (C13576 + C13577) * C1233 - (C13578 + C13579) * C1229 +
            (C13904 + C13905) * C1234 + (C13906 + C13907) * C1230 -
            (C5300 * C14009 + C51361 * C14011 + C5299 * C3674 +
             C51467 * C3677) *
                C1235 -
            (C5300 * C14012 + C51361 * C14015 + C5299 * C3678 +
             C51467 * C3683) *
                C1231) *
               C25568 +
           (C28443 * C1232 + C28444 * C1228 - (C7081 + C7080) * C1233 -
            (C7083 + C7082) * C1229 + (C29377 + C29378) * C1234 +
            (C29379 + C29380) * C1230 -
            (C5300 * C16735 + C51361 * C16736 + C5299 * C3675 +
             C51467 * C3679) *
                C1235 -
            (C5300 * C16737 + C51361 * C16738 + C5299 * C3680 +
             C51467 * C3684) *
                C1231) *
               C51169) *
              C51337) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C25568 +
            ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
             (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
             (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                C25568 +
            (C28443 * C1722 + C28444 * C1720 - C30353 * C1723 -
             C30354 * C51262) *
                C51169) *
               C51337) *
              C51220 * C51497 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C25568 +
            ((C5725 + C5724) * C1723 -
             ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
             (C5727 + C5726) * C51262) *
                C51169) *
               C22938 +
           ((C30355 * C1723 - (C28445 * C1720 + C28446 * C1722) +
             C30358 * C51262) *
                C25568 +
            ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
             (C7086 + C7087) * C51262) *
                C51169) *
               C51337) *
              C51220 * C51483 +
          ((C7240 * C25568 +
            ((C5345 + C5344) * C1722 + (C5343 + C5342) * C1720 -
             (C5729 + C5728) * C1723 - (C5731 + C5730) * C51262) *
                C51169) *
               C22938 +
           ((C28447 * C1722 + C28448 * C1720 - (C7085 + C7084) * C1723 -
             (C7087 + C7086) * C51262) *
                C25568 +
            ((C5538 + C5539) * C1722 + (C5540 + C5541) * C1720 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C1723 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C1722 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C1720 -
              (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                  C1723 -
              (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                  C51262) *
                 C25568 +
             ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
              (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                 C51169) *
                C22938 +
            (((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
              (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                 C25568 +
             C30833 * C51169) *
                C51337) *
               C51452 +
           ((((C13577 + C13576) * C1723 -
              ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
              (C13579 + C13578) * C51262) *
                 C25568 +
             C30834 * C51169) *
                C22938 +
            (((C13582 + C13581) * C1723 -
              ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
              (C13584 + C13583) * C51262) *
                 C25568 +
             ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
              (C14514 + C14515) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C1456 +
          (((((C5720 + C5719) * C1723 -
              ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
              (C5722 + C5721) * C51262) *
                 C25568 +
             ((C5725 + C5724) * C1723 -
              ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
              (C5727 + C5726) * C51262) *
                 C51169) *
                C22938 +
            (C30834 * C25568 +
             ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
              (C7086 + C7087) * C51262) *
                 C51169) *
                C51337) *
               C51452 +
           ((C30833 * C25568 +
             (C28447 * C1722 + C28448 * C1720 - (C7085 + C7084) * C1723 -
              (C7087 + C7086) * C51262) *
                 C51169) *
                C22938 +
            ((C28846 * C1722 + C28847 * C1720 - (C14513 + C14512) * C1723 -
              (C14515 + C14514) * C51262) *
                 C25568 +
             ((C5904 + C5905) * C1722 + (C5906 + C5907) * C1720 -
              (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                  C1723 -
              (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1989 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51499 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1990 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51489 +
             (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                 C1991 +
             (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                 C1988) *
                C25568 +
            ((C5334 + C5335) * C1989 + (C5336 + C5337) * C51499 -
             (C5719 + C5720) * C1990 - (C5721 + C5722) * C51489 +
             (C6314 + C6315) * C1991 + (C6316 + C6317) * C1988) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C1989 + (C12954 + C12955) * C51499 -
             (C13576 + C13577) * C1990 - (C13578 + C13579) * C51489 +
             (C13904 + C13905) * C1991 + (C13906 + C13907) * C1988) *
                C25568 +
            (C28443 * C1989 + C28444 * C51499 - C30353 * C1990 -
             C30354 * C51489 + (C29377 + C29378) * C1991 +
             (C29379 + C29380) * C1988) *
                C51169) *
               C51337) *
              C51220 * C1456 +
          ((((C5720 + C5719) * C1990 -
             ((C5337 + C5336) * C51499 + (C5335 + C5334) * C1989) +
             (C5722 + C5721) * C51489 - (C6315 + C6314) * C1991 -
             (C6317 + C6316) * C1988) *
                C25568 +
            ((C5725 + C5724) * C1990 -
             ((C5341 + C5340) * C51499 + (C5339 + C5338) * C1989) +
             (C5727 + C5726) * C51489 - (C6319 + C6318) * C1991 -
             (C6321 + C6320) * C1988) *
                C51169) *
               C22938 +
           ((C30355 * C1990 - (C28445 * C51499 + C28446 * C1989) +
             C30358 * C51489 - (C29378 + C29377) * C1991 -
             (C29380 + C29379) * C1988) *
                C25568 +
            ((C7084 + C7085) * C1990 - (C5542 * C51499 + C5543 * C1989) +
             (C7086 + C7087) * C51489 -
             (C5300 * C3676 + C51361 * C3681 + C5299 * C1148 + C51467 * C1154) *
                 C1991 -
             (C5300 * C3682 + C51361 * C3685 + C5299 * C1155 + C51467 * C1160) *
                 C1988) *
                C51169) *
               C51337) *
              C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
               C22938 +
           (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
            ((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51169) *
               C51337) *
              C51220 * C113 -
          ((C5546 * C51169 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C25568) *
               C51337 +
           (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
               C22938) *
              C51220 * C114 +
          ((C5358 * C25568 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C51169) *
               C22938 +
           (((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C25568 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C51169) *
               C51337) *
              C51220 * C115 -
          ((((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C51169 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C25568) *
               C51337 +
           (((C5349 + C5348) * C51250 + (C5347 + C5346) * C118) * C51169 +
            C5359 * C25568) *
               C22938) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C118 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
                C22938 +
            (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
             C28455 * C51169) *
                C51337) *
               C622 -
           ((C13285 * C51169 +
             ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
                C51337 +
            (C28456 * C51169 +
             ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
                C22938) *
               C623 +
           ((C13284 * C25568 + C28850 * C51169) * C22938 +
            (((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C25568 +
             ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51169) *
                C51337) *
               C624) *
              C51445 +
          (((C28455 * C25568 + C28457 * C51169) * C22938 +
            (C28850 * C25568 +
             ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51169) *
                C51337) *
               C623 -
           ((C5546 * C51169 + C28456 * C25568) * C51337 +
            (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
             ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
                C22938) *
               C622 -
           ((((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                  C51250 +
              (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                  C118) *
                 C51169 +
             ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C25568) *
                C51337 +
            (((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51169 +
             C13285 * C25568) *
                C22938) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                  C118 +
              (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
                C22938 +
            (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
             C28455 * C51169) *
                C51337) *
               C51452 -
           ((C13285 * C51169 +
             ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
                C51337 +
            (C28456 * C51169 +
             ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
                C22938) *
               C51236) *
              C291 +
          (((C28455 * C25568 + C28457 * C51169) * C22938 +
            (((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C25568 +
             ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C5546 * C51169 + C28456 * C25568) * C51337 +
            (((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C51169 +
             ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C25568) *
                C22938) *
               C51452) *
              C292 +
          (((C5358 * C25568 +
             ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C51169) *
                C22938 +
            (C28457 * C25568 +
             ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C51169) *
                C51337) *
               C51452 -
           ((((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                  C51250 +
              (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                  C118) *
                 C51169 +
             ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C25568) *
                C51337 +
            (((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51169 +
             C5546 * C25568) *
                C22938) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C51169) *
               C22938 +
           (((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C25568 +
            C28455 * C51169) *
               C51337) *
              C737 -
          ((C13285 * C51169 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C25568) *
               C51337 +
           (C28456 * C51169 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C25568) *
               C22938) *
              C738 +
          ((C13284 * C25568 + C28850 * C51169) * C22938 +
           (((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C25568 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51169) *
               C51337) *
              C739 -
          ((((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51169 +
            ((C13401 + C13400) * C51250 + (C13399 + C13398) * C118) * C25568) *
               C51337 +
           (((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51169 +
            C13402 * C25568) *
               C22938) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C25568 +
            ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
             (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
             (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                C25568 +
            (C28443 * C452 + C28444 * C51454 - (C7081 + C7080) * C453 -
             (C7083 + C7082) * C51262) *
                C51169) *
               C51337) *
              C51220 * C291 +
          ((((C5720 + C5719) * C453 -
             ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
             (C5722 + C5721) * C51262) *
                C25568 +
            ((C5725 + C5724) * C453 -
             ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
             (C5727 + C5726) * C51262) *
                C51169) *
               C22938 +
           (((C7080 + C7081) * C453 - (C28445 * C51454 + C28446 * C452) +
             (C7082 + C7083) * C51262) *
                C25568 +
            ((C7084 + C7085) * C453 - (C5542 * C51454 + C5543 * C452) +
             (C7086 + C7087) * C51262) *
                C51169) *
               C51337) *
              C51220 * C292 +
          ((C5737 * C25568 +
            ((C5345 + C5344) * C452 + (C5343 + C5342) * C51454 -
             (C5729 + C5728) * C453 - (C5731 + C5730) * C51262) *
                C51169) *
               C22938 +
           ((C28447 * C452 + C28448 * C51454 - (C7085 + C7084) * C453 -
             (C7087 + C7086) * C51262) *
                C25568 +
            ((C5538 + C5539) * C452 + (C5540 + C5541) * C51454 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C453 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C25568 +
            ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
             (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                C51169) *
               C22938 +
           (((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
             (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                C25568 +
            (C28443 * C452 + C28444 * C51454 - (C7081 + C7080) * C453 -
             (C7083 + C7082) * C51262) *
                C51169) *
               C51337) *
              C622 +
          ((((C13577 + C13576) * C453 -
             ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
             (C13579 + C13578) * C51262) *
                C25568 +
            ((C7080 + C7081) * C453 - (C28445 * C51454 + C28446 * C452) +
             (C7082 + C7083) * C51262) *
                C51169) *
               C22938 +
           (((C13582 + C13581) * C453 -
             ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
             (C13584 + C13583) * C51262) *
                C25568 +
            ((C14512 + C14513) * C453 - (C13270 * C51454 + C13271 * C452) +
             (C14514 + C14515) * C51262) *
                C51169) *
               C51337) *
              C623 +
          ((C13594 * C25568 +
            (C28846 * C452 + C28847 * C51454 - (C14513 + C14512) * C453 -
             (C14515 + C14514) * C51262) *
                C51169) *
               C22938 +
           (((C13277 + C13276) * C452 + (C13275 + C13274) * C51454 -
             (C13586 + C13585) * C453 - (C13588 + C13587) * C51262) *
                C25568 +
            ((C13278 + C13279) * C452 + (C13280 + C13281) * C51454 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C453 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C51438 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C22938 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
             C34878 * C51169) *
                C51337) *
               C1350 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
                C22938) *
               C51236) *
              C51497 +
          (((C34878 * C51438 + C34880 * C51169) * C22938 +
            (C35302 * C51438 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C32021 * C51169 + C34879 * C51438) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
                C22938) *
               C1350) *
              C51483 +
          (((C31833 * C51438 +
             ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
                C22938 +
            (C34880 * C51438 +
             ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
                C51337) *
               C1350 -
           ((((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                  C51250 +
              (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                  C118) *
                 C51169 +
             ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51438) *
                C51337 +
            (((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51169 +
             C32021 * C51438) *
                C22938) *
               C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C51438 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C22938 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
             C34878 * C51169) *
                C51337) *
               C51498 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
                C22938) *
               C51486 +
           ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51438 +
             C35302 * C51169) *
                C22938 +
            (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51438 +
             ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
                C51337) *
               C1455) *
              C1456 +
          (((C34878 * C51438 + C34880 * C51169) * C22938 +
            (C35302 * C51438 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51486 -
           ((C32021 * C51169 + C34879 * C51438) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
                C22938) *
               C51498 -
           ((((C31775 * C3192 + C51361 * C3195 + C31774 * C748 +
               C31772 * C755) *
                  C51250 +
              (C31775 * C3186 + C51361 * C3191 + C31774 * C743 +
               C31772 * C749) *
                  C118) *
                 C51169 +
             ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51438) *
                C51337 +
            (((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51169 +
             C35301 * C51438) *
                C22938) *
               C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C452 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51454 -
              (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                  C453 -
              (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                  C51262) *
                 C51438 +
             ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
              (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                 C51169) *
                C22938 +
            (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
              (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                 C51438 +
             C36879 * C51169) *
                C51337) *
               C1350 +
           ((((C35664 + C35663) * C453 -
              ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
              (C35666 + C35665) * C51262) *
                 C51438 +
             C36880 * C51169) *
                C22938 +
            (((C35667 + C35668) * C453 -
              ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
              (C35669 + C35670) * C51262) *
                 C51438 +
             ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
              (C35673 + C35674) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C1456 +
          (((((C32195 + C32194) * C453 -
              ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
              (C32197 + C32196) * C51262) *
                 C51438 +
             ((C32200 + C32199) * C453 -
              ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
              (C32202 + C32201) * C51262) *
                 C51169) *
                C22938 +
            (C36880 * C51438 +
             ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
              (C33549 + C33550) * C51262) *
                 C51169) *
                C51337) *
               C1350 +
           ((C36879 * C51438 +
             (C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
              (C33550 + C33549) * C51262) *
                 C51169) *
                C22938 +
            ((C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
              (C35674 + C35673) * C51262) *
                 C51438 +
             ((C32379 + C32380) * C452 + (C32381 + C32382) * C51454 -
              (C31775 * C3554 + C51361 * C3559 + C31774 * C862 +
               C31772 * C876) *
                  C453 -
              (C31775 * C3560 + C51361 * C3563 + C31774 * C877 +
               C31772 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C1722 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C1720 -
              (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                  C1723 -
              (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                  C51262) *
                 C51438 +
             ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
              (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                 C51169) *
                C22938 +
            (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
              (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                 C51438 +
             C37345 * C51169) *
                C51337) *
               C1350 +
           ((((C35664 + C35663) * C1723 -
              ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
              (C35666 + C35665) * C51262) *
                 C51438 +
             C37346 * C51169) *
                C22938 +
            (((C35667 + C35668) * C1723 -
              ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
              (C35669 + C35670) * C51262) *
                 C51438 +
             ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
              (C35673 + C35674) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51445 +
          (((((C32195 + C32194) * C1723 -
              ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
              (C32197 + C32196) * C51262) *
                 C51438 +
             ((C32200 + C32199) * C1723 -
              ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
              (C32202 + C32201) * C51262) *
                 C51169) *
                C22938 +
            (C37346 * C51438 +
             ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
              (C33549 + C33550) * C51262) *
                 C51169) *
                C51337) *
               C1350 +
           ((C37345 * C51438 +
             (C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
              (C33550 + C33549) * C51262) *
                 C51169) *
                C22938 +
            ((C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
              (C35674 + C35673) * C51262) *
                 C51438 +
             ((C32379 + C32380) * C1722 + (C32381 + C32382) * C1720 -
              (C31775 * C3554 + C51361 * C3559 + C31774 * C862 +
               C31772 * C876) *
                  C1723 -
              (C31775 * C3560 + C51361 * C3563 + C31774 * C877 +
               C31772 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51438 +
            ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
             (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
             (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                C51438 +
            C37345 * C51169) *
               C51337) *
              C51498 +
          ((((C35664 + C35663) * C1723 -
             ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
             (C35666 + C35665) * C51262) *
                C51438 +
            C37346 * C51169) *
               C22938 +
           (((C35667 + C35668) * C1723 -
             ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
             (C35669 + C35670) * C51262) *
                C51438 +
            ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
             (C35673 + C35674) * C51262) *
                C51169) *
               C51337) *
              C51486 +
          ((((C35294 + C35293) * C1722 + (C35292 + C35291) * C1720 -
             (C35668 + C35667) * C1723 - (C35670 + C35669) * C51262) *
                C51438 +
            (C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
             (C35674 + C35673) * C51262) *
                C51169) *
               C22938 +
           (((C35441 + C35442) * C1722 + (C35443 + C35444) * C1720 -
             (C31775 * C9229 + C51361 * C9231 + C31774 * C3184 +
              C31772 * C3187) *
                 C1723 -
             (C31775 * C9232 + C51361 * C9235 + C31774 * C3188 +
              C31772 * C3193) *
                 C51262) *
                C51438 +
            ((C35297 + C35298) * C1722 + (C35299 + C35300) * C1720 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C1723 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51499 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51489 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C1991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C1988) *
                C51438 +
            ((C31809 + C31810) * C1989 + (C31811 + C31812) * C51499 -
             (C32194 + C32195) * C1990 - (C32196 + C32197) * C51489 +
             (C32789 + C32790) * C1991 + (C32791 + C32792) * C1988) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C1989 + (C34870 + C34871) * C51499 -
             (C35663 + C35664) * C1990 - (C35665 + C35666) * C51489 +
             (C36083 + C36084) * C1991 + (C36085 + C36086) * C1988) *
                C51438 +
            (C34862 * C1989 + C34863 * C51499 - C36865 * C1990 -
             C36866 * C51489 + (C35877 + C35878) * C1991 +
             (C35879 + C35880) * C1988) *
                C51169) *
               C51337) *
              C1350 +
          ((((C35664 + C35663) * C1990 -
             ((C34871 + C34870) * C51499 + (C34869 + C34868) * C1989) +
             (C35666 + C35665) * C51489 - (C36084 + C36083) * C1991 -
             (C36086 + C36085) * C1988) *
                C51438 +
            (C36867 * C1990 - (C34864 * C51499 + C34865 * C1989) +
             C36870 * C51489 - (C35878 + C35877) * C1991 -
             (C35880 + C35879) * C1988) *
                C51169) *
               C22938 +
           (((C35667 + C35668) * C1990 -
             ((C35291 + C35292) * C51499 + (C35293 + C35294) * C1989) +
             (C35669 + C35670) * C51489 -
             (C31775 * C9347 + C51361 * C9349 + C31774 * C3552 +
              C31772 * C3555) *
                 C1991 -
             (C31775 * C9350 + C51361 * C9353 + C31774 * C3556 +
              C31772 * C3561) *
                 C1988) *
                C51438 +
            ((C35671 + C35672) * C1990 - (C35269 * C51499 + C35270 * C1989) +
             (C35673 + C35674) * C51489 -
             (C31775 * C9348 + C51361 * C9351 + C31774 * C3553 +
              C31772 * C3557) *
                 C1991 -
             (C31775 * C9352 + C51361 * C9354 + C31774 * C3558 +
              C31772 * C3562) *
                 C1988) *
                C51169) *
               C51337) *
              C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C51438 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C22938 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
             C34878 * C51169) *
                C51337) *
               C622 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
                C22938) *
               C623 +
           ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51438 +
             C35302 * C51169) *
                C22938 +
            (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51438 +
             ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
                C51337) *
               C624) *
              C51445 +
          (((C34878 * C51438 + C34880 * C51169) * C22938 +
            (C35302 * C51438 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C623 -
           ((C32021 * C51169 + C34879 * C51438) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
                C22938) *
               C622 -
           ((((C31775 * C3192 + C51361 * C3195 + C31774 * C748 +
               C31772 * C755) *
                  C51250 +
              (C31775 * C3186 + C51361 * C3191 + C31774 * C743 +
               C31772 * C749) *
                  C118) *
                 C51169 +
             ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51438) *
                C51337 +
            (((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51169 +
             C35301 * C51438) *
                C22938) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51438 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C22938 +
           (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
            C34878 * C51169) *
               C51337) *
              C51220 * C113 -
          ((C32021 * C51169 + C34879 * C51438) * C51337 +
           (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
               C22938) *
              C51220 * C114 +
          ((C31833 * C51438 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
               C22938 +
           (C34880 * C51438 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
               C51337) *
              C51220 * C115 -
          ((((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C51169 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51438) *
               C51337 +
           (((C31824 + C31823) * C51250 + (C31822 + C31821) * C118) * C51169 +
            C31834 * C51438) *
               C22938) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C986 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C987 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C988) *
                C51438 +
            ((C31809 + C31810) * C989 + (C31811 + C31812) * C986 -
             (C32194 + C32195) * C990 - (C32196 + C32197) * C987 +
             (C32789 + C32790) * C991 + (C32791 + C32792) * C988) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C989 + (C34870 + C34871) * C986 -
             (C35663 + C35664) * C990 - (C35665 + C35666) * C987 +
             (C36083 + C36084) * C991 + (C36085 + C36086) * C988) *
                C51438 +
            (C34862 * C989 + C34863 * C986 - C36865 * C990 - C36866 * C987 +
             (C35877 + C35878) * C991 + (C35879 + C35880) * C988) *
                C51169) *
               C51337) *
              C51220 * C51445 +
          ((((C32195 + C32194) * C990 -
             ((C31812 + C31811) * C986 + (C31810 + C31809) * C989) +
             (C32197 + C32196) * C987 - (C32790 + C32789) * C991 -
             (C32792 + C32791) * C988) *
                C51438 +
            ((C32200 + C32199) * C990 -
             ((C31816 + C31815) * C986 + (C31814 + C31813) * C989) +
             (C32202 + C32201) * C987 - (C32794 + C32793) * C991 -
             (C32796 + C32795) * C988) *
                C51169) *
               C22938 +
           ((C36867 * C990 - (C34864 * C986 + C34865 * C989) + C36870 * C987 -
             (C35878 + C35877) * C991 - (C35880 + C35879) * C988) *
                C51438 +
            ((C33547 + C33548) * C990 - (C32017 * C986 + C32018 * C989) +
             (C33549 + C33550) * C987 -
             (C31775 * C3676 + C51361 * C3681 + C31774 * C1148 +
              C31772 * C1154) *
                 C991 -
             (C31775 * C3682 + C51361 * C3685 + C31774 * C1155 +
              C31772 * C1160) *
                 C988) *
                C51169) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51438 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C22938 +
           (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
            C34878 * C51169) *
               C51337) *
              C737 -
          ((C35301 * C51169 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
               C51337 +
           (C34879 * C51169 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
               C22938) *
              C738 +
          ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51438 +
            C35302 * C51169) *
               C22938 +
           (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51438 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
               C51337) *
              C739 -
          ((((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51169 +
            ((C31775 * C8891 + C51361 * C8894 + C31774 * C3025 +
              C31772 * C3029) *
                 C51250 +
             (C31775 * C8888 + C51361 * C8890 + C31774 * C3020 +
              C31772 * C3026) *
                 C118) *
                C51438) *
               C51337 +
           (((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51169 +
            ((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C51438) *
               C22938) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C51438 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C22938 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
             C34878 * C51169) *
                C51337) *
               C51452 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
                C22938) *
               C51236) *
              C291 +
          (((C34878 * C51438 + C34880 * C51169) * C22938 +
            (C35302 * C51438 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C32021 * C51169 + C34879 * C51438) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
                C22938) *
               C51452) *
              C292 +
          (((C31833 * C51438 +
             ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
                C22938 +
            (C34880 * C51438 +
             ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
                C51337) *
               C51452 -
           ((((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                  C51250 +
              (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                  C118) *
                 C51169 +
             ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51438) *
                C51337 +
            (((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51169 +
             C32021 * C51438) *
                C22938) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C986 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C987 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C988) *
                C51438 +
            ((C31809 + C31810) * C989 + (C31811 + C31812) * C986 -
             (C32194 + C32195) * C990 - (C32196 + C32197) * C987 +
             (C32789 + C32790) * C991 + (C32791 + C32792) * C988) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C989 + (C34870 + C34871) * C986 -
             (C35663 + C35664) * C990 - (C35665 + C35666) * C987 +
             (C36083 + C36084) * C991 + (C36085 + C36086) * C988) *
                C51438 +
            (C34862 * C989 + C34863 * C986 - C36865 * C990 - C36866 * C987 +
             (C35877 + C35878) * C991 + (C35879 + C35880) * C988) *
                C51169) *
               C51337) *
              C51452 +
          ((((C35664 + C35663) * C990 -
             ((C34871 + C34870) * C986 + (C34869 + C34868) * C989) +
             (C35666 + C35665) * C987 - (C36084 + C36083) * C991 -
             (C36086 + C36085) * C988) *
                C51438 +
            (C36867 * C990 - (C34864 * C986 + C34865 * C989) + C36870 * C987 -
             (C35878 + C35877) * C991 - (C35880 + C35879) * C988) *
                C51169) *
               C22938 +
           (((C35667 + C35668) * C990 -
             ((C35291 + C35292) * C986 + (C35293 + C35294) * C989) +
             (C35669 + C35670) * C987 -
             (C31775 * C9347 + C51361 * C9349 + C31774 * C3552 +
              C31772 * C3555) *
                 C991 -
             (C31775 * C9350 + C51361 * C9353 + C31774 * C3556 +
              C31772 * C3561) *
                 C988) *
                C51438 +
            ((C35671 + C35672) * C990 - (C35269 * C986 + C35270 * C989) +
             (C35673 + C35674) * C987 -
             (C31775 * C9348 + C51361 * C9351 + C31774 * C3553 +
              C31772 * C3557) *
                 C991 -
             (C31775 * C9352 + C51361 * C9354 + C31774 * C3558 +
              C31772 * C3562) *
                 C988) *
                C51169) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51438 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C51438 +
            C36879 * C51169) *
               C51337) *
              C622 +
          ((((C35664 + C35663) * C453 -
             ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
             (C35666 + C35665) * C51262) *
                C51438 +
            C36880 * C51169) *
               C22938 +
           (((C35667 + C35668) * C453 -
             ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
             (C35669 + C35670) * C51262) *
                C51438 +
            ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
             (C35673 + C35674) * C51262) *
                C51169) *
               C51337) *
              C623 +
          ((((C35294 + C35293) * C452 + (C35292 + C35291) * C51454 -
             (C35668 + C35667) * C453 - (C35670 + C35669) * C51262) *
                C51438 +
            (C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
             (C35674 + C35673) * C51262) *
                C51169) *
               C22938 +
           (((C35441 + C35442) * C452 + (C35443 + C35444) * C51454 -
             (C31775 * C9229 + C51361 * C9231 + C31774 * C3184 +
              C31772 * C3187) *
                 C453 -
             (C31775 * C9232 + C51361 * C9235 + C31774 * C3188 +
              C31772 * C3193) *
                 C51262) *
                C51438 +
            ((C35297 + C35298) * C452 + (C35299 + C35300) * C51454 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C453 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51438 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C51438 +
            C36879 * C51169) *
               C51337) *
              C51220 * C291 +
          ((((C32195 + C32194) * C453 -
             ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
             (C32197 + C32196) * C51262) *
                C51438 +
            ((C32200 + C32199) * C453 -
             ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
             (C32202 + C32201) * C51262) *
                C51169) *
               C22938 +
           (C36880 * C51438 +
            ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
             (C33549 + C33550) * C51262) *
                C51169) *
               C51337) *
              C51220 * C292 +
          ((C32212 * C51438 +
            ((C31820 + C31819) * C452 + (C31818 + C31817) * C51454 -
             (C32204 + C32203) * C453 - (C32206 + C32205) * C51262) *
                C51169) *
               C22938 +
           ((C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
             (C33550 + C33549) * C51262) *
                C51438 +
            ((C32013 + C32014) * C452 + (C32015 + C32016) * C51454 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C453 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1232 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C1228 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1233 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C1229 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C1234 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C1230 -
            (C31775 * C6565 + C51361 * C6568 + C31774 * C1236 +
             C31772 * C1240) *
                C1235 -
            (C31775 * C6569 + C51361 * C6574 + C31774 * C1241 +
             C31772 * C1248) *
                C1231) *
               C51438 +
           ((C31809 + C31810) * C1232 + (C31811 + C31812) * C1228 -
            (C32194 + C32195) * C1233 - (C32196 + C32197) * C1229 +
            (C32789 + C32790) * C1234 + (C32791 + C32792) * C1230 -
            (C31775 * C6566 + C51361 * C6570 + C31774 * C1237 +
             C31772 * C1242) *
                C1235 -
            (C31775 * C6571 + C51361 * C6575 + C31774 * C1243 +
             C31772 * C1249) *
                C1231) *
               C51169) *
              C22938 +
          (((C34868 + C34869) * C1232 + (C34870 + C34871) * C1228 -
            (C35663 + C35664) * C1233 - (C35665 + C35666) * C1229 +
            (C36083 + C36084) * C1234 + (C36085 + C36086) * C1230 -
            (C31775 * C14009 + C51361 * C14011 + C31774 * C3674 +
             C31772 * C3677) *
                C1235 -
            (C31775 * C14012 + C51361 * C14015 + C31774 * C3678 +
             C31772 * C3683) *
                C1231) *
               C51438 +
           (C34862 * C1232 + C34863 * C1228 - C36865 * C1233 - C36866 * C1229 +
            (C35877 + C35878) * C1234 + (C35879 + C35880) * C1230 -
            (C31775 * C16735 + C51361 * C16736 + C31774 * C3675 +
             C31772 * C3679) *
                C1235 -
            (C31775 * C16737 + C51361 * C16738 + C31774 * C3680 +
             C31772 * C3684) *
                C1231) *
               C51169) *
              C51337) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51438 +
            ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
             (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
             (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                C51438 +
            C37345 * C51169) *
               C51337) *
              C51220 * C51497 +
          ((((C32195 + C32194) * C1723 -
             ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
             (C32197 + C32196) * C51262) *
                C51438 +
            ((C32200 + C32199) * C1723 -
             ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
             (C32202 + C32201) * C51262) *
                C51169) *
               C22938 +
           (C37346 * C51438 +
            ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
             (C33549 + C33550) * C51262) *
                C51169) *
               C51337) *
              C51220 * C51483 +
          ((C33703 * C51438 +
            ((C31820 + C31819) * C1722 + (C31818 + C31817) * C1720 -
             (C32204 + C32203) * C1723 - (C32206 + C32205) * C51262) *
                C51169) *
               C22938 +
           ((C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
             (C33550 + C33549) * C51262) *
                C51438 +
            ((C32013 + C32014) * C1722 + (C32015 + C32016) * C1720 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C1723 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C1722 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C1720 -
              (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                  C1723 -
              (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                  C51262) *
                 C51438 +
             ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
              (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                 C51169) *
                C22938 +
            (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
              (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                 C51438 +
             C37345 * C51169) *
                C51337) *
               C51452 +
           ((((C35664 + C35663) * C1723 -
              ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
              (C35666 + C35665) * C51262) *
                 C51438 +
             C37346 * C51169) *
                C22938 +
            (((C35667 + C35668) * C1723 -
              ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
              (C35669 + C35670) * C51262) *
                 C51438 +
             ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
              (C35673 + C35674) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C1456 +
          (((((C32195 + C32194) * C1723 -
              ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
              (C32197 + C32196) * C51262) *
                 C51438 +
             ((C32200 + C32199) * C1723 -
              ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
              (C32202 + C32201) * C51262) *
                 C51169) *
                C22938 +
            (C37346 * C51438 +
             ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
              (C33549 + C33550) * C51262) *
                 C51169) *
                C51337) *
               C51452 +
           ((C37345 * C51438 +
             (C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
              (C33550 + C33549) * C51262) *
                 C51169) *
                C22938 +
            ((C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
              (C35674 + C35673) * C51262) *
                 C51438 +
             ((C32379 + C32380) * C1722 + (C32381 + C32382) * C1720 -
              (C31775 * C3554 + C51361 * C3559 + C31774 * C862 +
               C31772 * C876) *
                  C1723 -
              (C31775 * C3560 + C51361 * C3563 + C31774 * C877 +
               C31772 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51499 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51489 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C1991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C1988) *
                C51438 +
            ((C31809 + C31810) * C1989 + (C31811 + C31812) * C51499 -
             (C32194 + C32195) * C1990 - (C32196 + C32197) * C51489 +
             (C32789 + C32790) * C1991 + (C32791 + C32792) * C1988) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C1989 + (C34870 + C34871) * C51499 -
             (C35663 + C35664) * C1990 - (C35665 + C35666) * C51489 +
             (C36083 + C36084) * C1991 + (C36085 + C36086) * C1988) *
                C51438 +
            (C34862 * C1989 + C34863 * C51499 - C36865 * C1990 -
             C36866 * C51489 + (C35877 + C35878) * C1991 +
             (C35879 + C35880) * C1988) *
                C51169) *
               C51337) *
              C51220 * C1456 +
          ((((C32195 + C32194) * C1990 -
             ((C31812 + C31811) * C51499 + (C31810 + C31809) * C1989) +
             (C32197 + C32196) * C51489 - (C32790 + C32789) * C1991 -
             (C32792 + C32791) * C1988) *
                C51438 +
            ((C32200 + C32199) * C1990 -
             ((C31816 + C31815) * C51499 + (C31814 + C31813) * C1989) +
             (C32202 + C32201) * C51489 - (C32794 + C32793) * C1991 -
             (C32796 + C32795) * C1988) *
                C51169) *
               C22938 +
           ((C36867 * C1990 - (C34864 * C51499 + C34865 * C1989) +
             C36870 * C51489 - (C35878 + C35877) * C1991 -
             (C35880 + C35879) * C1988) *
                C51438 +
            ((C33547 + C33548) * C1990 - (C32017 * C51499 + C32018 * C1989) +
             (C33549 + C33550) * C51489 -
             (C31775 * C3676 + C51361 * C3681 + C31774 * C1148 +
              C31772 * C1154) *
                 C1991 -
             (C31775 * C3682 + C51361 * C3685 + C31774 * C1155 +
              C31772 * C1160) *
                 C1988) *
                C51169) *
               C51337) *
              C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51438 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C22938 +
           (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
            C34878 * C51169) *
               C51337) *
              C51220 * C113 -
          ((C32021 * C51169 + C34879 * C51438) * C51337 +
           (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
               C22938) *
              C51220 * C114 +
          ((C31833 * C51438 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
               C22938 +
           (C34880 * C51438 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
               C51337) *
              C51220 * C115 -
          ((((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C51169 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51438) *
               C51337 +
           (((C31824 + C31823) * C51250 + (C31822 + C31821) * C118) * C51169 +
            C31834 * C51438) *
               C22938) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C51438 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C22938 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
             C34878 * C51169) *
                C51337) *
               C622 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
                C22938) *
               C623 +
           ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51438 +
             C35302 * C51169) *
                C22938 +
            (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51438 +
             ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
                C51337) *
               C624) *
              C51445 +
          (((C34878 * C51438 + C34880 * C51169) * C22938 +
            (C35302 * C51438 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C623 -
           ((C32021 * C51169 + C34879 * C51438) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
                C22938) *
               C622 -
           ((((C31775 * C3192 + C51361 * C3195 + C31774 * C748 +
               C31772 * C755) *
                  C51250 +
              (C31775 * C3186 + C51361 * C3191 + C31774 * C743 +
               C31772 * C749) *
                  C118) *
                 C51169 +
             ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51438) *
                C51337 +
            (((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51169 +
             C35301 * C51438) *
                C22938) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C51438 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C22938 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
             C34878 * C51169) *
                C51337) *
               C51452 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
                C22938) *
               C51236) *
              C291 +
          (((C34878 * C51438 + C34880 * C51169) * C22938 +
            (C35302 * C51438 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C32021 * C51169 + C34879 * C51438) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51438) *
                C22938) *
               C51452) *
              C292 +
          (((C31833 * C51438 +
             ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
                C22938 +
            (C34880 * C51438 +
             ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
                C51337) *
               C51452 -
           ((((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                  C51250 +
              (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                  C118) *
                 C51169 +
             ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51438) *
                C51337 +
            (((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51169 +
             C32021 * C51438) *
                C22938) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51438 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C22938 +
           (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51438 +
            C34878 * C51169) *
               C51337) *
              C737 -
          ((C35301 * C51169 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51438) *
               C51337 +
           (C34879 * C51169 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51438) *
               C22938) *
              C738 +
          ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51438 +
            C35302 * C51169) *
               C22938 +
           (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51438 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
               C51337) *
              C739 -
          ((((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51169 +
            ((C31775 * C8891 + C51361 * C8894 + C31774 * C3025 +
              C31772 * C3029) *
                 C51250 +
             (C31775 * C8888 + C51361 * C8890 + C31774 * C3020 +
              C31772 * C3026) *
                 C118) *
                C51438) *
               C51337 +
           (((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51169 +
            ((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C51438) *
               C22938) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51438 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C51438 +
            C36879 * C51169) *
               C51337) *
              C51220 * C291 +
          ((((C32195 + C32194) * C453 -
             ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
             (C32197 + C32196) * C51262) *
                C51438 +
            ((C32200 + C32199) * C453 -
             ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
             (C32202 + C32201) * C51262) *
                C51169) *
               C22938 +
           (C36880 * C51438 +
            ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
             (C33549 + C33550) * C51262) *
                C51169) *
               C51337) *
              C51220 * C292 +
          ((C32212 * C51438 +
            ((C31820 + C31819) * C452 + (C31818 + C31817) * C51454 -
             (C32204 + C32203) * C453 - (C32206 + C32205) * C51262) *
                C51169) *
               C22938 +
           ((C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
             (C33550 + C33549) * C51262) *
                C51438 +
            ((C32013 + C32014) * C452 + (C32015 + C32016) * C51454 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C453 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51438 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C22938 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C51438 +
            C36879 * C51169) *
               C51337) *
              C622 +
          ((((C35664 + C35663) * C453 -
             ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
             (C35666 + C35665) * C51262) *
                C51438 +
            C36880 * C51169) *
               C22938 +
           (((C35667 + C35668) * C453 -
             ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
             (C35669 + C35670) * C51262) *
                C51438 +
            ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
             (C35673 + C35674) * C51262) *
                C51169) *
               C51337) *
              C623 +
          ((((C35294 + C35293) * C452 + (C35292 + C35291) * C51454 -
             (C35668 + C35667) * C453 - (C35670 + C35669) * C51262) *
                C51438 +
            (C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
             (C35674 + C35673) * C51262) *
                C51169) *
               C22938 +
           (((C35441 + C35442) * C452 + (C35443 + C35444) * C51454 -
             (C31775 * C9229 + C51361 * C9231 + C31774 * C3184 +
              C31772 * C3187) *
                 C453 -
             (C31775 * C9232 + C51361 * C9235 + C31774 * C3188 +
              C31772 * C3193) *
                 C51262) *
                C51438 +
            ((C35297 + C35298) * C452 + (C35299 + C35300) * C51454 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C453 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C51500 +
            ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
                C51492 +
            C45035 * C25572) *
               C1350 -
           (C45151 * C25572 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
                C51492 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
                C51500) *
               C51236) *
              C51497 +
          ((C34878 * C51164 * C51500 + C35302 * C51164 * C51492 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51164 *
                C25572) *
               C51236 -
           (C45031 * C25572 + C34879 * C51164 * C51492 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
                C51500) *
               C1350) *
              C51483 +
          ((C31833 * C51164 * C51500 + C34880 * C51164 * C51492 +
            ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51164 *
                C25572) *
               C1350 -
           (((C31775 * C3192 + C51361 * C3195 + C31774 * C748 + C31772 * C755) *
                 C51250 +
             (C31775 * C3186 + C51361 * C3191 + C31774 * C743 + C31772 * C749) *
                 C118) *
                C51164 * C25572 +
            ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51164 *
                C51492 +
            C32021 * C51164 * C51500) *
               C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C51500 +
            ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
                C51492 +
            C45035 * C25572) *
               C51498 -
           (C45151 * C25572 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
                C51492 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
                C51500) *
               C51486 +
           (C45035 * C51500 +
            ((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51164 *
                C51492 +
            ((C45146 + C45147) * C118 + (C45148 + C45149) * C51250) * C51164 *
                C25572) *
               C1455) *
              C1456 +
          ((C34878 * C51164 * C51500 + C35302 * C51164 * C51492 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51164 *
                C25572) *
               C51486 -
           (C45031 * C25572 + C34879 * C51164 * C51492 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
                C51500) *
               C51498 -
           (((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51164 * C25572 +
            ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51164 *
                C51492 +
            C45031 * C51500) *
               C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51164 * C51500 +
            ((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C51164 * C51492 +
            C45319 * C25572) *
               C1350 +
           (((C35664 + C35663) * C453 -
             ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
             (C35666 + C35665) * C51262) *
                C51164 * C51500 +
            ((C35667 + C35668) * C453 -
             ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
             (C35669 + C35670) * C51262) *
                C51164 * C51492 +
            ((C45313 + C45314) * C453 - (C45134 * C51454 + C45135 * C452) +
             (C45315 + C45316) * C51262) *
                C51164 * C25572) *
               C51236) *
              C1456 +
          ((((C32195 + C32194) * C453 -
             ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
             (C32197 + C32196) * C51262) *
                C51164 * C51500 +
            C36880 * C51164 * C51492 +
            ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
             (C35673 + C35674) * C51262) *
                C51164 * C25572) *
               C1350 +
           (C36879 * C51164 * C51500 +
            (C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
             (C35674 + C35673) * C51262) *
                C51164 * C51492 +
            ((C35297 + C35298) * C452 + (C35299 + C35300) * C51454 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C453 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51164 * C25572) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51164 * C51500 +
            ((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
             (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                C51164 * C51492 +
            (C45029 * C1722 + C45030 * C1720 - C45300 * C1723 -
             C45301 * C51262) *
                C51164 * C25572) *
               C1350 +
           (((C35664 + C35663) * C1723 -
             ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
             (C35666 + C35665) * C51262) *
                C51164 * C51500 +
            ((C35667 + C35668) * C1723 -
             ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
             (C35669 + C35670) * C51262) *
                C51164 * C51492 +
            ((C45313 + C45314) * C1723 - (C45134 * C1720 + C45135 * C1722) +
             (C45315 + C45316) * C51262) *
                C51164 * C25572) *
               C51236) *
              C51445 +
          ((((C32195 + C32194) * C1723 -
             ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
             (C32197 + C32196) * C51262) *
                C51164 * C51500 +
            C37346 * C51164 * C51492 +
            ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
             (C35673 + C35674) * C51262) *
                C51164 * C25572) *
               C1350 +
           (C37345 * C51164 * C51500 +
            (C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
             (C35674 + C35673) * C51262) *
                C51164 * C51492 +
            ((C35297 + C35298) * C1722 + (C35299 + C35300) * C1720 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C1723 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51164 * C25572) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1722 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C1720 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1723 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51164 * C51500 +
           ((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
            (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
               C51164 * C51492 +
           C47041 * C25572) *
              C51498 +
          (((C35664 + C35663) * C1723 -
            ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
            (C35666 + C35665) * C51262) *
               C51164 * C51500 +
           ((C35667 + C35668) * C1723 -
            ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
            (C35669 + C35670) * C51262) *
               C51164 * C51492 +
           ((C45313 + C45314) * C1723 - (C45134 * C1720 + C45135 * C1722) +
            (C45315 + C45316) * C51262) *
               C51164 * C25572) *
              C51486 +
          (C47041 * C51500 +
           ((C35441 + C35442) * C1722 + (C35443 + C35444) * C1720 -
            (C45314 + C45313) * C1723 - (C45316 + C45315) * C51262) *
               C51164 * C51492 +
           ((C45146 + C45147) * C1722 + (C45148 + C45149) * C1720 -
            (C31775 * C11612 + C51361 * C11613 + C31774 * C8888 +
             C31772 * C8890) *
                C1723 -
            (C31775 * C11614 + C51361 * C11615 + C31774 * C8891 +
             C31772 * C8894) *
                C51262) *
               C51164 * C25572) *
              C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51499 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51489 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C1991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C1988) *
               C51164 * C51500 +
           ((C34868 + C34869) * C1989 + (C34870 + C34871) * C51499 -
            (C35663 + C35664) * C1990 - (C35665 + C35666) * C51489 +
            (C36083 + C36084) * C1991 + (C36085 + C36086) * C1988) *
               C51164 * C51492 +
           (C45029 * C1989 + C45030 * C51499 - C45300 * C1990 -
            C45301 * C51489 + (C45620 + C45621) * C1991 +
            (C45622 + C45623) * C1988) *
               C51164 * C25572) *
              C1350 +
          (((C35664 + C35663) * C1990 -
            ((C34871 + C34870) * C51499 + (C34869 + C34868) * C1989) +
            (C35666 + C35665) * C51489 - (C36084 + C36083) * C1991 -
            (C36086 + C36085) * C1988) *
               C51164 * C51500 +
           ((C35667 + C35668) * C1990 -
            ((C35291 + C35292) * C51499 + (C35293 + C35294) * C1989) +
            (C35669 + C35670) * C51489 - (C45621 + C45620) * C1991 -
            (C45623 + C45622) * C1988) *
               C51164 * C51492 +
           ((C45313 + C45314) * C1990 - (C45134 * C51499 + C45135 * C1989) +
            (C45315 + C45316) * C51489 -
            (C31775 * C11694 + C51361 * C11695 + C31774 * C9229 +
             C31772 * C9231) *
                C1991 -
            (C31775 * C11696 + C51361 * C11697 + C31774 * C9232 +
             C31772 * C9235) *
                C1988) *
               C51164 * C25572) *
              C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C51500 +
            ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
                C51492 +
            C45035 * C25572) *
               C622 -
           (((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C51164 *
                C25572 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
                C51492 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
                C51500) *
               C623 +
           (C45035 * C51500 +
            ((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51164 *
                C51492 +
            ((C31774 * C3020 + C31772 * C3026 + C31775 * C8888 +
              C51361 * C8890) *
                 C118 +
             (C31774 * C3025 + C31772 * C3029 + C31775 * C8891 +
              C51361 * C8894) *
                 C51250) *
                C51164 * C25572) *
               C624) *
              C51445 +
          ((C34878 * C51164 * C51500 + C35302 * C51164 * C51492 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51164 *
                C25572) *
               C623 -
           (C45031 * C25572 + C34879 * C51164 * C51492 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
                C51500) *
               C622 -
           (((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51164 * C25572 +
            ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51164 *
                C51492 +
            C45031 * C51500) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C51500 +
           ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
               C51492 +
           ((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51164 *
               C25572) *
              C51220 * C113 -
          (C35301 * C51164 * C25572 + C34879 * C51164 * C51492 +
           ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
               C51500) *
              C51220 * C114 +
          (C31833 * C51164 * C51500 + C34880 * C51164 * C51492 +
           ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51164 *
               C25572) *
              C51220 * C115 -
          (((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                C51250 +
            (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                C118) *
               C51164 * C25572 +
           ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51164 *
               C51492 +
           C31834 * C51164 * C51500) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C986 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C987 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C988) *
               C51164 * C51500 +
           ((C34868 + C34869) * C989 + (C34870 + C34871) * C986 -
            (C35663 + C35664) * C990 - (C35665 + C35666) * C987 +
            (C36083 + C36084) * C991 + (C36085 + C36086) * C988) *
               C51164 * C51492 +
           (C45029 * C989 + C45030 * C986 - C45300 * C990 - C45301 * C987 +
            (C31774 * C3552 + C31772 * C3555 + C31775 * C9347 +
             C51361 * C9349) *
                C991 +
            (C31774 * C3556 + C31772 * C3561 + C31775 * C9350 +
             C51361 * C9353) *
                C988) *
               C51164 * C25572) *
              C51220 * C51445 +
          (((C32195 + C32194) * C990 -
            ((C31812 + C31811) * C986 + (C31810 + C31809) * C989) +
            (C32197 + C32196) * C987 - (C32790 + C32789) * C991 -
            (C32792 + C32791) * C988) *
               C51164 * C51500 +
           (C36867 * C990 - (C34864 * C986 + C34865 * C989) + C36870 * C987 -
            (C35878 + C35877) * C991 - (C35880 + C35879) * C988) *
               C51164 * C51492 +
           ((C35671 + C35672) * C990 - (C35269 * C986 + C35270 * C989) +
            (C35673 + C35674) * C987 -
            (C31775 * C9348 + C51361 * C9351 + C31774 * C3553 +
             C31772 * C3557) *
                C991 -
            (C31775 * C9352 + C51361 * C9354 + C31774 * C3558 +
             C31772 * C3562) *
                C988) *
               C51164 * C25572) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C51500 +
           ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
               C51492 +
           C45035 * C25572) *
              C737 -
          (C45151 * C25572 +
           ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
               C51492 +
           ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
               C51500) *
              C738 +
          (C45035 * C51500 +
           ((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51164 *
               C51492 +
           ((C45146 + C45147) * C118 + (C45148 + C45149) * C51250) * C51164 *
               C25572) *
              C739 -
          (((C31775 * C11399 + C51361 * C11400 + C31774 * C8726 +
             C31772 * C8729) *
                C51250 +
            (C31775 * C11397 + C51361 * C11398 + C31774 * C8723 +
             C31772 * C8727) *
                C118) *
               C51164 * C25572 +
           ((C45149 + C45148) * C51250 + (C45147 + C45146) * C118) * C51164 *
               C51492 +
           C45151 * C51500) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C51500 +
            ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
                C51492 +
            ((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51164 *
                C25572) *
               C51452 -
           (((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C51164 *
                C25572 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
                C51492 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
                C51500) *
               C51236) *
              C291 +
          ((C34878 * C51164 * C51500 + C35302 * C51164 * C51492 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51164 *
                C25572) *
               C51236 -
           (C35301 * C51164 * C25572 + C34879 * C51164 * C51492 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
                C51500) *
               C51452) *
              C292 +
          ((C31833 * C51164 * C51500 + C34880 * C51164 * C51492 +
            ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51164 *
                C25572) *
               C51452 -
           (((C31775 * C3192 + C51361 * C3195 + C31774 * C748 + C31772 * C755) *
                 C51250 +
             (C31775 * C3186 + C51361 * C3191 + C31774 * C743 + C31772 * C749) *
                 C118) *
                C51164 * C25572 +
            ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51164 *
                C51492 +
            C32021 * C51164 * C51500) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C986 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C987 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C988) *
               C51164 * C51500 +
           ((C34868 + C34869) * C989 + (C34870 + C34871) * C986 -
            (C35663 + C35664) * C990 - (C35665 + C35666) * C987 +
            (C36083 + C36084) * C991 + (C36085 + C36086) * C988) *
               C51164 * C51492 +
           (C45029 * C989 + C45030 * C986 - C45300 * C990 - C45301 * C987 +
            (C45620 + C45621) * C991 + (C45622 + C45623) * C988) *
               C51164 * C25572) *
              C51452 +
          (((C35664 + C35663) * C990 -
            ((C34871 + C34870) * C986 + (C34869 + C34868) * C989) +
            (C35666 + C35665) * C987 - (C36084 + C36083) * C991 -
            (C36086 + C36085) * C988) *
               C51164 * C51500 +
           ((C35667 + C35668) * C990 -
            ((C35291 + C35292) * C986 + (C35293 + C35294) * C989) +
            (C35669 + C35670) * C987 - (C45621 + C45620) * C991 -
            (C45623 + C45622) * C988) *
               C51164 * C51492 +
           ((C45313 + C45314) * C990 - (C45134 * C986 + C45135 * C989) +
            (C45315 + C45316) * C987 -
            (C31775 * C11694 + C51361 * C11695 + C31774 * C9229 +
             C31772 * C9231) *
                C991 -
            (C31775 * C11696 + C51361 * C11697 + C31774 * C9232 +
             C31772 * C9235) *
                C988) *
               C51164 * C25572) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51164 * C51500 +
           ((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
            (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
               C51164 * C51492 +
           C45319 * C25572) *
              C622 +
          (((C35664 + C35663) * C453 -
            ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
            (C35666 + C35665) * C51262) *
               C51164 * C51500 +
           ((C35667 + C35668) * C453 -
            ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
            (C35669 + C35670) * C51262) *
               C51164 * C51492 +
           ((C45313 + C45314) * C453 - (C45134 * C51454 + C45135 * C452) +
            (C45315 + C45316) * C51262) *
               C51164 * C25572) *
              C623 +
          (C45319 * C51500 +
           ((C35441 + C35442) * C452 + (C35443 + C35444) * C51454 -
            (C45314 + C45313) * C453 - (C45316 + C45315) * C51262) *
               C51164 * C51492 +
           ((C45146 + C45147) * C452 + (C45148 + C45149) * C51454 -
            (C31775 * C11612 + C51361 * C11613 + C31774 * C8888 +
             C31772 * C8890) *
                C453 -
            (C31775 * C11614 + C51361 * C11615 + C31774 * C8891 +
             C31772 * C8894) *
                C51262) *
               C51164 * C25572) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51164 * C51500 +
           ((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
            (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
               C51164 * C51492 +
           ((C35294 + C35293) * C452 + (C35292 + C35291) * C51454 -
            (C35668 + C35667) * C453 - (C35670 + C35669) * C51262) *
               C51164 * C25572) *
              C51220 * C291 +
          (((C32195 + C32194) * C453 -
            ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
            (C32197 + C32196) * C51262) *
               C51164 * C51500 +
           C36880 * C51164 * C51492 +
           ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
            (C35673 + C35674) * C51262) *
               C51164 * C25572) *
              C51220 * C292 +
          (C32212 * C51164 * C51500 +
           (C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
            (C33550 + C33549) * C51262) *
               C51164 * C51492 +
           ((C32379 + C32380) * C452 + (C32381 + C32382) * C51454 -
            (C31775 * C3554 + C51361 * C3559 + C31774 * C862 + C31772 * C876) *
                C453 -
            (C31775 * C3560 + C51361 * C3563 + C31774 * C877 + C31772 * C886) *
                C51262) *
               C51164 * C25572) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
               C1232 +
           (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
               C1228 -
           (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
               C1233 -
           (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
               C1229 +
           (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
               C1234 +
           (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
               C1230 -
           (C31775 * C6565 + C51361 * C6568 + C31774 * C1236 + C31772 * C1240) *
               C1235 -
           (C31775 * C6569 + C51361 * C6574 + C31774 * C1241 + C31772 * C1248) *
               C1231) *
              C51164 * C51500 +
          ((C34868 + C34869) * C1232 + (C34870 + C34871) * C1228 -
           (C35663 + C35664) * C1233 - (C35665 + C35666) * C1229 +
           (C36083 + C36084) * C1234 + (C36085 + C36086) * C1230 -
           (C31775 * C14009 + C51361 * C14011 + C31774 * C3674 +
            C31772 * C3677) *
               C1235 -
           (C31775 * C14012 + C51361 * C14015 + C31774 * C3678 +
            C31772 * C3683) *
               C1231) *
              C51164 * C51492 +
          (C45029 * C1232 + C45030 * C1228 - C45300 * C1233 - C45301 * C1229 +
           (C45620 + C45621) * C1234 + (C45622 + C45623) * C1230 -
           (C31775 * C14010 + C51361 * C14013 + C31774 * C9347 +
            C31772 * C9349) *
               C1235 -
           (C31775 * C14014 + C51361 * C14016 + C31774 * C9350 +
            C31772 * C9353) *
               C1231) *
              C51164 * C25572) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1722 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C1720 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1723 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51164 * C51500 +
           ((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
            (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
               C51164 * C51492 +
           (C45029 * C1722 + C45030 * C1720 - C45300 * C1723 -
            C45301 * C51262) *
               C51164 * C25572) *
              C51220 * C51497 +
          (((C32195 + C32194) * C1723 -
            ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
            (C32197 + C32196) * C51262) *
               C51164 * C51500 +
           C37346 * C51164 * C51492 +
           ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
            (C35673 + C35674) * C51262) *
               C51164 * C25572) *
              C51220 * C51483 +
          (C33703 * C51164 * C51500 +
           (C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
            (C33550 + C33549) * C51262) *
               C51164 * C51492 +
           ((C32379 + C32380) * C1722 + (C32381 + C32382) * C1720 -
            (C31775 * C3554 + C51361 * C3559 + C31774 * C862 + C31772 * C876) *
                C1723 -
            (C31775 * C3560 + C51361 * C3563 + C31774 * C877 + C31772 * C886) *
                C51262) *
               C51164 * C25572) *
              C51220 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51164 * C51500 +
            ((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
             (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                C51164 * C51492 +
            (C45029 * C1722 + C45030 * C1720 - C45300 * C1723 -
             C45301 * C51262) *
                C51164 * C25572) *
               C51452 +
           (((C35664 + C35663) * C1723 -
             ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
             (C35666 + C35665) * C51262) *
                C51164 * C51500 +
            ((C35667 + C35668) * C1723 -
             ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
             (C35669 + C35670) * C51262) *
                C51164 * C51492 +
            ((C45313 + C45314) * C1723 - (C45134 * C1720 + C45135 * C1722) +
             (C45315 + C45316) * C51262) *
                C51164 * C25572) *
               C51236) *
              C1456 +
          ((((C32195 + C32194) * C1723 -
             ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
             (C32197 + C32196) * C51262) *
                C51164 * C51500 +
            C37346 * C51164 * C51492 +
            ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
             (C35673 + C35674) * C51262) *
                C51164 * C25572) *
               C51452 +
           (C37345 * C51164 * C51500 +
            (C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
             (C35674 + C35673) * C51262) *
                C51164 * C51492 +
            ((C35297 + C35298) * C1722 + (C35299 + C35300) * C1720 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C1723 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51164 * C25572) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51499 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51489 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C1991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C1988) *
               C51164 * C51500 +
           ((C34868 + C34869) * C1989 + (C34870 + C34871) * C51499 -
            (C35663 + C35664) * C1990 - (C35665 + C35666) * C51489 +
            (C36083 + C36084) * C1991 + (C36085 + C36086) * C1988) *
               C51164 * C51492 +
           (C45029 * C1989 + C45030 * C51499 - C45300 * C1990 -
            C45301 * C51489 + (C45620 + C45621) * C1991 +
            (C45622 + C45623) * C1988) *
               C51164 * C25572) *
              C51220 * C1456 +
          (((C32195 + C32194) * C1990 -
            ((C31812 + C31811) * C51499 + (C31810 + C31809) * C1989) +
            (C32197 + C32196) * C51489 - (C32790 + C32789) * C1991 -
            (C32792 + C32791) * C1988) *
               C51164 * C51500 +
           (C36867 * C1990 - (C34864 * C51499 + C34865 * C1989) +
            C36870 * C51489 - (C35878 + C35877) * C1991 -
            (C35880 + C35879) * C1988) *
               C51164 * C51492 +
           ((C35671 + C35672) * C1990 - (C35269 * C51499 + C35270 * C1989) +
            (C35673 + C35674) * C51489 -
            (C31775 * C9348 + C51361 * C9351 + C31774 * C3553 +
             C31772 * C3557) *
                C1991 -
            (C31775 * C9352 + C51361 * C9354 + C31774 * C3558 +
             C31772 * C3562) *
                C1988) *
               C51164 * C25572) *
              C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C51500 +
           ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
               C51492 +
           ((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51164 *
               C25572) *
              C51220 * C113 -
          (C35301 * C51164 * C25572 + C34879 * C51164 * C51492 +
           ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
               C51500) *
              C51220 * C114 +
          (C31833 * C51164 * C51500 + C34880 * C51164 * C51492 +
           ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51164 *
               C25572) *
              C51220 * C115 -
          (((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                C51250 +
            (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                C118) *
               C51164 * C25572 +
           ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51164 *
               C51492 +
           C31834 * C51164 * C51500) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C51500 +
            ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
                C51492 +
            C45035 * C25572) *
               C622 -
           (((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C51164 *
                C25572 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
                C51492 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
                C51500) *
               C623 +
           (C45035 * C51500 +
            ((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51164 *
                C51492 +
            ((C31774 * C3020 + C31772 * C3026 + C31775 * C8888 +
              C51361 * C8890) *
                 C118 +
             (C31774 * C3025 + C31772 * C3029 + C31775 * C8891 +
              C51361 * C8894) *
                 C51250) *
                C51164 * C25572) *
               C624) *
              C51445 +
          ((C34878 * C51164 * C51500 + C35302 * C51164 * C51492 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51164 *
                C25572) *
               C623 -
           (C45031 * C25572 + C34879 * C51164 * C51492 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
                C51500) *
               C622 -
           (((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51164 * C25572 +
            ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51164 *
                C51492 +
            C45031 * C51500) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C51500 +
            ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
                C51492 +
            ((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C51164 *
                C25572) *
               C51452 -
           (((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C51164 *
                C25572 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
                C51492 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
                C51500) *
               C51236) *
              C291 +
          ((C34878 * C51164 * C51500 + C35302 * C51164 * C51492 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51164 *
                C25572) *
               C51236 -
           (C35301 * C51164 * C25572 + C34879 * C51164 * C51492 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51164 *
                C51500) *
               C51452) *
              C292 +
          ((C31833 * C51164 * C51500 + C34880 * C51164 * C51492 +
            ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51164 *
                C25572) *
               C51452 -
           (((C31775 * C3192 + C51361 * C3195 + C31774 * C748 + C31772 * C755) *
                 C51250 +
             (C31775 * C3186 + C51361 * C3191 + C31774 * C743 + C31772 * C749) *
                 C118) *
                C51164 * C25572 +
            ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51164 *
                C51492 +
            C32021 * C51164 * C51500) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C51500 +
           ((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C51164 *
               C51492 +
           C45035 * C25572) *
              C737 -
          (C45151 * C25572 +
           ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C51164 *
               C51492 +
           ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C51164 *
               C51500) *
              C738 +
          (C45035 * C51500 +
           ((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C51164 *
               C51492 +
           ((C45146 + C45147) * C118 + (C45148 + C45149) * C51250) * C51164 *
               C25572) *
              C739 -
          (((C31775 * C11399 + C51361 * C11400 + C31774 * C8726 +
             C31772 * C8729) *
                C51250 +
            (C31775 * C11397 + C51361 * C11398 + C31774 * C8723 +
             C31772 * C8727) *
                C118) *
               C51164 * C25572 +
           ((C45149 + C45148) * C51250 + (C45147 + C45146) * C118) * C51164 *
               C51492 +
           C45151 * C51500) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51164 * C51500 +
           ((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
            (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
               C51164 * C51492 +
           ((C35294 + C35293) * C452 + (C35292 + C35291) * C51454 -
            (C35668 + C35667) * C453 - (C35670 + C35669) * C51262) *
               C51164 * C25572) *
              C51220 * C291 +
          (((C32195 + C32194) * C453 -
            ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
            (C32197 + C32196) * C51262) *
               C51164 * C51500 +
           C36880 * C51164 * C51492 +
           ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
            (C35673 + C35674) * C51262) *
               C51164 * C25572) *
              C51220 * C292 +
          (C32212 * C51164 * C51500 +
           (C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
            (C33550 + C33549) * C51262) *
               C51164 * C51492 +
           ((C32379 + C32380) * C452 + (C32381 + C32382) * C51454 -
            (C31775 * C3554 + C51361 * C3559 + C31774 * C862 + C31772 * C876) *
                C453 -
            (C31775 * C3560 + C51361 * C3563 + C31774 * C877 + C31772 * C886) *
                C51262) *
               C51164 * C25572) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51164 * C51500 +
           ((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
            (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
               C51164 * C51492 +
           C45319 * C25572) *
              C622 +
          (((C35664 + C35663) * C453 -
            ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
            (C35666 + C35665) * C51262) *
               C51164 * C51500 +
           ((C35667 + C35668) * C453 -
            ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
            (C35669 + C35670) * C51262) *
               C51164 * C51492 +
           ((C45313 + C45314) * C453 - (C45134 * C51454 + C45135 * C452) +
            (C45315 + C45316) * C51262) *
               C51164 * C25572) *
              C623 +
          (C45319 * C51500 +
           ((C35441 + C35442) * C452 + (C35443 + C35444) * C51454 -
            (C45314 + C45313) * C453 - (C45316 + C45315) * C51262) *
               C51164 * C51492 +
           ((C45146 + C45147) * C452 + (C45148 + C45149) * C51454 -
            (C31775 * C11612 + C51361 * C11613 + C31774 * C8888 +
             C31772 * C8890) *
                C453 -
            (C31775 * C11614 + C51361 * C11615 + C31774 * C8891 +
             C31772 * C8894) *
                C51262) *
               C51164 * C25572) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51250) *
                        C51164 * C51337) *
                       C1350 -
                   (((C47754 + C47755 + C47756) * C51250 +
                     (C47757 + C47758 + C47759) * C118) *
                        C51164 * C51337 +
                    ((C47449 + C47448 + C47447) * C51250 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51164 * C22938) *
                       C51236) *
                      C51497 +
                  ((((C38520 + C38519 + C38518) * C118 +
                     (C38517 + C38516 + C38515) * C51250) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51164 * C51337) *
                       C51236 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51164 * C51337 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C51164 * C22938) *
                       C1350) *
                      C51483 +
                  ((((C38338 + C38337 + C38336) * C118 +
                     (C38335 + C38334 + C38333) * C51250) *
                        C51164 * C22938 +
                    ((C38521 + C38522 + C38523) * C118 +
                     (C38524 + C38525 + C38526) * C51250) *
                        C51164 * C51337) *
                       C1350 -
                   (((C38289 * C3560 + C38286 * C3563 + C38288 * C877 +
                      C51495 * C886 + C38287 * C637 + C51501 * C644) *
                         C51250 +
                     (C38289 * C3554 + C38286 * C3559 + C38288 * C862 +
                      C51495 * C876 + C38287 * C629 + C51501 * C636) *
                         C118) *
                        C51164 * C51337 +
                    ((C38526 + C38525 + C38524) * C51250 +
                     (C38523 + C38522 + C38521) * C118) *
                        C51164 * C22938) *
                       C51236) *
                      C1354)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51250) *
                        C51164 * C51337) *
                       C51498 -
                   (((C47754 + C47755 + C47756) * C51250 +
                     (C47757 + C47758 + C47759) * C118) *
                        C51164 * C51337 +
                    ((C47449 + C47448 + C47447) * C51250 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51164 * C22938) *
                       C51486 +
                   (((C47759 + C47758 + C47757) * C118 +
                     (C47756 + C47755 + C47754) * C51250) *
                        C51164 * C22938 +
                    ((C47870 + C47871 + C47872) * C118 +
                     (C47873 + C47874 + C47875) * C51250) *
                        C51164 * C51337) *
                       C1455) *
                      C1456 +
                  ((((C38520 + C38519 + C38518) * C118 +
                     (C38517 + C38516 + C38515) * C51250) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51164 * C51337) *
                       C51486 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51164 * C51337 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C51164 * C22938) *
                       C51498 -
                   (((C38289 * C9234 + C38286 * C9236 + C38288 * C3190 +
                      C51495 * C3194 + C38287 * C750 + C51501 * C756) *
                         C51250 +
                     (C38289 * C9230 + C38286 * C9233 + C38288 * C3185 +
                      C51495 * C3189 + C38287 * C744 + C51501 * C751) *
                         C118) *
                        C51164 * C51337 +
                    ((C38872 + C38871 + C38870) * C51250 +
                     (C38869 + C38868 + C38867) * C118) *
                        C51164 * C22938) *
                       C1455) *
                      C51193)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C452 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51454 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C453 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C452 +
                     (C47447 + C47448 + C47449) * C51454 -
                     (C48046 + C48047 + C48048) * C453 -
                     (C48049 + C48050 + C48051) * C51262) *
                        C51164 * C51337) *
                       C1350 +
                   (((C48048 + C48047 + C48046) * C453 -
                     ((C47449 + C47448 + C47447) * C51454 +
                      (C47446 + C47445 + C47444) * C452) +
                     (C48051 + C48050 + C48049) * C51262) *
                        C51164 * C22938 +
                    ((C48052 + C48053 + C48054) * C453 -
                     ((C47754 + C47755 + C47756) * C51454 +
                      (C47757 + C47758 + C47759) * C452) +
                     (C48055 + C48056 + C48057) * C51262) *
                        C51164 * C51337) *
                       C51236) *
                      C1456 +
                  ((((C38699 + C38698 + C38697) * C453 -
                     ((C38332 + C38331 + C38330) * C51454 +
                      (C38329 + C38328 + C38327) * C452) +
                     (C38702 + C38701 + C38700) * C51262) *
                        C51164 * C22938 +
                    ((C40023 + C40024 + C40025) * C453 -
                     ((C38515 + C38516 + C38517) * C51454 +
                      (C38518 + C38519 + C38520) * C452) +
                     (C40026 + C40027 + C40028) * C51262) *
                        C51164 * C51337) *
                       C1350 +
                   (((C38520 + C38519 + C38518) * C452 +
                     (C38517 + C38516 + C38515) * C51454 -
                     (C40025 + C40024 + C40023) * C453 -
                     (C40028 + C40027 + C40026) * C51262) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C452 +
                     (C38870 + C38871 + C38872) * C51454 -
                     (C38289 * C9348 + C38286 * C9351 + C38288 * C3553 +
                      C51495 * C3557 + C38287 * C861 + C51501 * C874) *
                         C453 -
                     (C38289 * C9352 + C38286 * C9354 + C38288 * C3558 +
                      C51495 * C3562 + C38287 * C875 + C51501 * C885) *
                         C51262) *
                        C51164 * C51337) *
                       C51236) *
                      C51193)) /
                (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C1722 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C1720 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C1723 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C1722 +
                     (C47447 + C47448 + C47449) * C1720 -
                     (C48046 + C48047 + C48048) * C1723 -
                     (C48049 + C48050 + C48051) * C51262) *
                        C51164 * C51337) *
                       C1350 +
                   (((C48048 + C48047 + C48046) * C1723 -
                     ((C47449 + C47448 + C47447) * C1720 +
                      (C47446 + C47445 + C47444) * C1722) +
                     (C48051 + C48050 + C48049) * C51262) *
                        C51164 * C22938 +
                    ((C48052 + C48053 + C48054) * C1723 -
                     ((C47754 + C47755 + C47756) * C1720 +
                      (C47757 + C47758 + C47759) * C1722) +
                     (C48055 + C48056 + C48057) * C51262) *
                        C51164 * C51337) *
                       C51236) *
                      C51445 +
                  ((((C38699 + C38698 + C38697) * C1723 -
                     ((C38332 + C38331 + C38330) * C1720 +
                      (C38329 + C38328 + C38327) * C1722) +
                     (C38702 + C38701 + C38700) * C51262) *
                        C51164 * C22938 +
                    ((C40023 + C40024 + C40025) * C1723 -
                     ((C38515 + C38516 + C38517) * C1720 +
                      (C38518 + C38519 + C38520) * C1722) +
                     (C40026 + C40027 + C40028) * C51262) *
                        C51164 * C51337) *
                       C1350 +
                   (((C38520 + C38519 + C38518) * C1722 +
                     (C38517 + C38516 + C38515) * C1720 -
                     (C40025 + C40024 + C40023) * C1723 -
                     (C40028 + C40027 + C40026) * C51262) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C1722 +
                     (C38870 + C38871 + C38872) * C1720 -
                     (C38289 * C9348 + C38286 * C9351 + C38288 * C3553 +
                      C51495 * C3557 + C38287 * C861 + C51501 * C874) *
                         C1723 -
                     (C38289 * C9352 + C38286 * C9354 + C38288 * C3558 +
                      C51495 * C3562 + C38287 * C875 + C51501 * C885) *
                         C51262) *
                        C51164 * C51337) *
                       C51236) *
                      C51193)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C1722 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C1720 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C1723 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51262) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C1722 +
                    (C47447 + C47448 + C47449) * C1720 -
                    (C48046 + C48047 + C48048) * C1723 -
                    (C48049 + C48050 + C48051) * C51262) *
                       C51164 * C51337) *
                      C51498 +
                  (((C48048 + C48047 + C48046) * C1723 -
                    ((C47449 + C47448 + C47447) * C1720 +
                     (C47446 + C47445 + C47444) * C1722) +
                    (C48051 + C48050 + C48049) * C51262) *
                       C51164 * C22938 +
                   ((C48052 + C48053 + C48054) * C1723 -
                    ((C47754 + C47755 + C47756) * C1720 +
                     (C47757 + C47758 + C47759) * C1722) +
                    (C48055 + C48056 + C48057) * C51262) *
                       C51164 * C51337) *
                      C51486 +
                  (((C47759 + C47758 + C47757) * C1722 +
                    (C47756 + C47755 + C47754) * C1720 -
                    (C48054 + C48053 + C48052) * C1723 -
                    (C48057 + C48056 + C48055) * C51262) *
                       C51164 * C22938 +
                   ((C47870 + C47871 + C47872) * C1722 +
                    (C47873 + C47874 + C47875) * C1720 -
                    (C38289 * C11694 + C38286 * C11695 + C38288 * C9229 +
                     C51495 * C9231 + C38287 * C3184 + C51501 * C3187) *
                        C1723 -
                    (C38289 * C11696 + C38286 * C11697 + C38288 * C9232 +
                     C51495 * C9235 + C38287 * C3188 + C51501 * C3193) *
                        C51262) *
                       C51164 * C51337) *
                      C1455) *
                 C51188) /
                (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C1989 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51499 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C1990 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51489 +
                    (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                     C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                        C1991 +
                    (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                     C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                        C1988) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C1989 +
                    (C47447 + C47448 + C47449) * C51499 -
                    (C48046 + C48047 + C48048) * C1990 -
                    (C48049 + C48050 + C48051) * C51489 +
                    (C48362 + C48363 + C48364) * C1991 +
                    (C48365 + C48366 + C48367) * C1988) *
                       C51164 * C51337) *
                      C1350 +
                  (((C48048 + C48047 + C48046) * C1990 -
                    ((C47449 + C47448 + C47447) * C51499 +
                     (C47446 + C47445 + C47444) * C1989) +
                    (C48051 + C48050 + C48049) * C51489 -
                    (C48364 + C48363 + C48362) * C1991 -
                    (C48367 + C48366 + C48365) * C1988) *
                       C51164 * C22938 +
                   ((C48052 + C48053 + C48054) * C1990 -
                    ((C47754 + C47755 + C47756) * C51499 +
                     (C47757 + C47758 + C47759) * C1989) +
                    (C48055 + C48056 + C48057) * C51489 -
                    (C38289 * C14010 + C38286 * C14013 + C38288 * C9347 +
                     C51495 * C9349 + C38287 * C3552 + C51501 * C3555) *
                        C1991 -
                    (C38289 * C14014 + C38286 * C14016 + C38288 * C9350 +
                     C51495 * C9353 + C38287 * C3556 + C51501 * C3561) *
                        C1988) *
                       C51164 * C51337) *
                      C51236) *
                 C51188) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51250) *
                        C51164 * C51337) *
                       C622 -
                   (((C47754 + C47755 + C47756) * C51250 +
                     (C47757 + C47758 + C47759) * C118) *
                        C51164 * C51337 +
                    ((C47449 + C47448 + C47447) * C51250 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51164 * C22938) *
                       C623 +
                   (((C47759 + C47758 + C47757) * C118 +
                     (C47756 + C47755 + C47754) * C51250) *
                        C51164 * C22938 +
                    ((C38287 * C745 + C51501 * C753 + C38288 * C3184 +
                      C51495 * C3187 + C38289 * C9229 + C38286 * C9231) *
                         C118 +
                     (C38287 * C752 + C51501 * C757 + C38288 * C3188 +
                      C51495 * C3193 + C38289 * C9232 + C38286 * C9235) *
                         C51250) *
                        C51164 * C51337) *
                       C624) *
                      C51445 +
                  ((((C38520 + C38519 + C38518) * C118 +
                     (C38517 + C38516 + C38515) * C51250) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51164 * C51337) *
                       C623 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51164 * C51337 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C51164 * C22938) *
                       C622 -
                   (((C38289 * C9234 + C38286 * C9236 + C38288 * C3190 +
                      C51495 * C3194 + C38287 * C750 + C51501 * C756) *
                         C51250 +
                     (C38289 * C9230 + C38286 * C9233 + C38288 * C3185 +
                      C51495 * C3189 + C38287 * C744 + C51501 * C751) *
                         C118) *
                        C51164 * C51337 +
                    ((C38872 + C38871 + C38870) * C51250 +
                     (C38869 + C38868 + C38867) * C118) *
                        C51164 * C22938) *
                       C624) *
                      C51193)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C118 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51250) *
                       C51164 * C22938 +
                   ((C38287 * C297 + C51501 * C307 + C38288 * C856 +
                     C51495 * C864 + C38289 * C1146 + C38286 * C1150) *
                        C118 +
                    (C38287 * C306 + C51501 * C315 + C38288 * C865 +
                     C51495 * C880 + C38289 * C1151 + C38286 * C1158) *
                        C51250) *
                       C51164 * C51337) *
                      C51220 * C113 -
                  (((C38515 + C38516 + C38517) * C51250 +
                    (C38518 + C38519 + C38520) * C118) *
                       C51164 * C51337 +
                   ((C38332 + C38331 + C38330) * C51250 +
                    (C38329 + C38328 + C38327) * C118) *
                       C51164 * C22938) *
                      C51220 * C114 +
                  (((C38338 + C38337 + C38336) * C118 +
                    (C38335 + C38334 + C38333) * C51250) *
                       C51164 * C22938 +
                   ((C38521 + C38522 + C38523) * C118 +
                    (C38524 + C38525 + C38526) * C51250) *
                       C51164 * C51337) *
                      C51220 * C115 -
                  (((C38289 * C1157 + C38286 * C1161 + C38288 * C871 +
                     C51495 * C883 + C38287 * C300 + C51501 * C312) *
                        C51250 +
                    (C38289 * C1149 + C38286 * C1156 + C38288 * C859 +
                     C51495 * C870 + C38287 * C294 + C51501 * C301) *
                        C118) *
                       C51164 * C51337 +
                   ((C38344 + C38343 + C38342) * C51250 +
                    (C38341 + C38340 + C38339) * C118) *
                       C51164 * C22938) *
                      C51220 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C989 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C986 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C990 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C987 +
                    (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                     C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                        C991 +
                    (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                     C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                        C988) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C989 +
                    (C47447 + C47448 + C47449) * C986 -
                    (C48046 + C48047 + C48048) * C990 -
                    (C48049 + C48050 + C48051) * C987 +
                    (C38287 * C1146 + C51501 * C1150 + C38288 * C3674 +
                     C51495 * C3677 + C38289 * C14009 + C38286 * C14011) *
                        C991 +
                    (C38287 * C1151 + C51501 * C1158 + C38288 * C3678 +
                     C51495 * C3683 + C38289 * C14012 + C38286 * C14015) *
                        C988) *
                       C51164 * C51337) *
                      C51220 * C51445 +
                  (((C38699 + C38698 + C38697) * C990 -
                    ((C38332 + C38331 + C38330) * C986 +
                     (C38329 + C38328 + C38327) * C989) +
                    (C38702 + C38701 + C38700) * C987 -
                    (C39277 + C39276 + C39275) * C991 -
                    (C39280 + C39279 + C39278) * C988) *
                       C51164 * C22938 +
                   ((C40023 + C40024 + C40025) * C990 -
                    ((C38515 + C38516 + C38517) * C986 +
                     (C38518 + C38519 + C38520) * C989) +
                    (C40026 + C40027 + C40028) * C987 -
                    (C38289 * C16735 + C38286 * C16736 + C38288 * C3675 +
                     C51495 * C3679 + C38287 * C1147 + C51501 * C1152) *
                        C991 -
                    (C38289 * C16737 + C38286 * C16738 + C38288 * C3680 +
                     C51495 * C3684 + C38287 * C1153 + C51501 * C1159) *
                        C988) *
                       C51164 * C51337) *
                      C51220 * C51193)) /
                    (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C118 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51250) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C118 +
                    (C47447 + C47448 + C47449) * C51250) *
                       C51164 * C51337) *
                      C737 -
                  (((C47754 + C47755 + C47756) * C51250 +
                    (C47757 + C47758 + C47759) * C118) *
                       C51164 * C51337 +
                   ((C47449 + C47448 + C47447) * C51250 +
                    (C47446 + C47445 + C47444) * C118) *
                       C51164 * C22938) *
                      C738 +
                  (((C47759 + C47758 + C47757) * C118 +
                    (C47756 + C47755 + C47754) * C51250) *
                       C51164 * C22938 +
                   ((C47870 + C47871 + C47872) * C118 +
                    (C47873 + C47874 + C47875) * C51250) *
                       C51164 * C51337) *
                      C739 -
                  (((C38289 * C11614 + C38286 * C11615 + C38288 * C8891 +
                     C51495 * C8894 + C38287 * C3025 + C51501 * C3029) *
                        C51250 +
                    (C38289 * C11612 + C38286 * C11613 + C38288 * C8888 +
                     C51495 * C8890 + C38287 * C3020 + C51501 * C3026) *
                        C118) *
                       C51164 * C51337 +
                   ((C47875 + C47874 + C47873) * C51250 +
                    (C47872 + C47871 + C47870) * C118) *
                       C51164 * C22938) *
                      C740) *
                 C51188) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51250) *
                        C51164 * C51337) *
                       C51452 -
                   (((C38289 * C3556 + C38286 * C3561 + C38288 * C873 +
                      C51495 * C884 + C38287 * C633 + C51501 * C642) *
                         C51250 +
                     (C38289 * C3552 + C38286 * C3555 + C38288 * C860 +
                      C51495 * C872 + C38287 * C627 + C51501 * C632) *
                         C118) *
                        C51164 * C51337 +
                    ((C47449 + C47448 + C47447) * C51250 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51164 * C22938) *
                       C51236) *
                      C291 +
                  ((((C38520 + C38519 + C38518) * C118 +
                     (C38517 + C38516 + C38515) * C51250) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51164 * C51337) *
                       C51236 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51164 * C51337 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C51164 * C22938) *
                       C51452) *
                      C292 +
                  ((((C38338 + C38337 + C38336) * C118 +
                     (C38335 + C38334 + C38333) * C51250) *
                        C51164 * C22938 +
                    ((C38521 + C38522 + C38523) * C118 +
                     (C38524 + C38525 + C38526) * C51250) *
                        C51164 * C51337) *
                       C51452 -
                   (((C38289 * C3560 + C38286 * C3563 + C38288 * C877 +
                      C51495 * C886 + C38287 * C637 + C51501 * C644) *
                         C51250 +
                     (C38289 * C3554 + C38286 * C3559 + C38288 * C862 +
                      C51495 * C876 + C38287 * C629 + C51501 * C636) *
                         C118) *
                        C51164 * C51337 +
                    ((C38526 + C38525 + C38524) * C51250 +
                     (C38523 + C38522 + C38521) * C118) *
                        C51164 * C22938) *
                       C51236) *
                      C293)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C989 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C986 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C990 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C987 +
                    (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                     C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                        C991 +
                    (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                     C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                        C988) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C989 +
                    (C47447 + C47448 + C47449) * C986 -
                    (C48046 + C48047 + C48048) * C990 -
                    (C48049 + C48050 + C48051) * C987 +
                    (C48362 + C48363 + C48364) * C991 +
                    (C48365 + C48366 + C48367) * C988) *
                       C51164 * C51337) *
                      C51452 +
                  (((C48048 + C48047 + C48046) * C990 -
                    ((C47449 + C47448 + C47447) * C986 +
                     (C47446 + C47445 + C47444) * C989) +
                    (C48051 + C48050 + C48049) * C987 -
                    (C48364 + C48363 + C48362) * C991 -
                    (C48367 + C48366 + C48365) * C988) *
                       C51164 * C22938 +
                   ((C48052 + C48053 + C48054) * C990 -
                    ((C47754 + C47755 + C47756) * C986 +
                     (C47757 + C47758 + C47759) * C989) +
                    (C48055 + C48056 + C48057) * C987 -
                    (C38289 * C14010 + C38286 * C14013 + C38288 * C9347 +
                     C51495 * C9349 + C38287 * C3552 + C51501 * C3555) *
                        C991 -
                    (C38289 * C14014 + C38286 * C14016 + C38288 * C9350 +
                     C51495 * C9353 + C38287 * C3556 + C51501 * C3561) *
                        C988) *
                       C51164 * C51337) *
                      C51236) *
                 C51188) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C452 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51454 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C453 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51262) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C452 +
                    (C47447 + C47448 + C47449) * C51454 -
                    (C48046 + C48047 + C48048) * C453 -
                    (C48049 + C48050 + C48051) * C51262) *
                       C51164 * C51337) *
                      C622 +
                  (((C48048 + C48047 + C48046) * C453 -
                    ((C47449 + C47448 + C47447) * C51454 +
                     (C47446 + C47445 + C47444) * C452) +
                    (C48051 + C48050 + C48049) * C51262) *
                       C51164 * C22938 +
                   ((C48052 + C48053 + C48054) * C453 -
                    ((C47754 + C47755 + C47756) * C51454 +
                     (C47757 + C47758 + C47759) * C452) +
                    (C48055 + C48056 + C48057) * C51262) *
                       C51164 * C51337) *
                      C623 +
                  (((C47759 + C47758 + C47757) * C452 +
                    (C47756 + C47755 + C47754) * C51454 -
                    (C48054 + C48053 + C48052) * C453 -
                    (C48057 + C48056 + C48055) * C51262) *
                       C51164 * C22938 +
                   ((C47870 + C47871 + C47872) * C452 +
                    (C47873 + C47874 + C47875) * C51454 -
                    (C38289 * C11694 + C38286 * C11695 + C38288 * C9229 +
                     C51495 * C9231 + C38287 * C3184 + C51501 * C3187) *
                        C453 -
                    (C38289 * C11696 + C38286 * C11697 + C38288 * C9232 +
                     C51495 * C9235 + C38287 * C3188 + C51501 * C3193) *
                        C51262) *
                       C51164 * C51337) *
                      C624) *
                 C51188) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C452 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51454 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C453 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51262) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C452 +
                    (C47447 + C47448 + C47449) * C51454 -
                    (C38289 * C3674 + C38286 * C3677 + C38288 * C1146 +
                     C51495 * C1150 + C38287 * C856 + C51501 * C864) *
                        C453 -
                    (C38289 * C3678 + C38286 * C3683 + C38288 * C1151 +
                     C51495 * C1158 + C38287 * C865 + C51501 * C880) *
                        C51262) *
                       C51164 * C51337) *
                      C51220 * C291 +
                  (((C38699 + C38698 + C38697) * C453 -
                    ((C38332 + C38331 + C38330) * C51454 +
                     (C38329 + C38328 + C38327) * C452) +
                    (C38702 + C38701 + C38700) * C51262) *
                       C51164 * C22938 +
                   ((C40023 + C40024 + C40025) * C453 -
                    ((C38515 + C38516 + C38517) * C51454 +
                     (C38518 + C38519 + C38520) * C452) +
                    (C40026 + C40027 + C40028) * C51262) *
                       C51164 * C51337) *
                      C51220 * C292 +
                  (((C38338 + C38337 + C38336) * C452 +
                    (C38335 + C38334 + C38333) * C51454 -
                    (C38705 + C38704 + C38703) * C453 -
                    (C38708 + C38707 + C38706) * C51262) *
                       C51164 * C22938 +
                   ((C38521 + C38522 + C38523) * C452 +
                    (C38524 + C38525 + C38526) * C51454 -
                    (C38289 * C3676 + C38286 * C3681 + C38288 * C1148 +
                     C51495 * C1154 + C38287 * C858 + C51501 * C868) *
                        C453 -
                    (C38289 * C3682 + C38286 * C3685 + C38288 * C1155 +
                     C51495 * C1160 + C38287 * C869 + C51501 * C882) *
                        C51262) *
                       C51164 * C51337) *
                      C51220 * C293)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                    C51495 * C460 + C38289 * C992 + C38286 * C997) *
                       C1232 +
                   (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                    C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                       C1228 -
                   (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                    C51495 * C997 + C38287 * C454 + C51501 * C460) *
                       C1233 -
                   (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                    C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                       C1229 +
                   (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                    C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                       C1234 +
                   (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                    C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                       C1230 -
                   (C38289 * C16837 + C38286 * C16839 + C38288 * C6565 +
                    C51495 * C6568 + C38287 * C1236 + C51501 * C1240) *
                       C1235 -
                   (C38289 * C16840 + C38286 * C16843 + C38288 * C6569 +
                    C51495 * C6574 + C38287 * C1241 + C51501 * C1248) *
                       C1231) *
                      C51164 * C22938 +
                  ((C47444 + C47445 + C47446) * C1232 +
                   (C47447 + C47448 + C47449) * C1228 -
                   (C48046 + C48047 + C48048) * C1233 -
                   (C48049 + C48050 + C48051) * C1229 +
                   (C48362 + C48363 + C48364) * C1234 +
                   (C48365 + C48366 + C48367) * C1230 -
                   (C38289 * C19599 + C38286 * C19600 + C38288 * C14009 +
                    C51495 * C14011 + C38287 * C3674 + C51501 * C3677) *
                       C1235 -
                   (C38289 * C19601 + C38286 * C19602 + C38288 * C14012 +
                    C51495 * C14015 + C38287 * C3678 + C51501 * C3683) *
                       C1231) *
                      C51164 * C51337) *
                 C51220 * C51188) /
                    (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C1722 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C1720 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C1723 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51262) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C1722 +
                    (C47447 + C47448 + C47449) * C1720 -
                    (C48046 + C48047 + C48048) * C1723 -
                    (C48049 + C48050 + C48051) * C51262) *
                       C51164 * C51337) *
                      C51220 * C51497 +
                  (((C38699 + C38698 + C38697) * C1723 -
                    ((C38332 + C38331 + C38330) * C1720 +
                     (C38329 + C38328 + C38327) * C1722) +
                    (C38702 + C38701 + C38700) * C51262) *
                       C51164 * C22938 +
                   ((C40023 + C40024 + C40025) * C1723 -
                    ((C38515 + C38516 + C38517) * C1720 +
                     (C38518 + C38519 + C38520) * C1722) +
                    (C40026 + C40027 + C40028) * C51262) *
                       C51164 * C51337) *
                      C51220 * C51483 +
                  (((C38338 + C38337 + C38336) * C1722 +
                    (C38335 + C38334 + C38333) * C1720 -
                    (C38705 + C38704 + C38703) * C1723 -
                    (C38708 + C38707 + C38706) * C51262) *
                       C51164 * C22938 +
                   ((C38521 + C38522 + C38523) * C1722 +
                    (C38524 + C38525 + C38526) * C1720 -
                    (C38289 * C3676 + C38286 * C3681 + C38288 * C1148 +
                     C51495 * C1154 + C38287 * C858 + C51501 * C868) *
                        C1723 -
                    (C38289 * C3682 + C38286 * C3685 + C38288 * C1155 +
                     C51495 * C1160 + C38287 * C869 + C51501 * C882) *
                        C51262) *
                       C51164 * C51337) *
                      C51220 * C1354)) /
                (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C1722 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C1720 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C1723 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C1722 +
                     (C47447 + C47448 + C47449) * C1720 -
                     (C48046 + C48047 + C48048) * C1723 -
                     (C48049 + C48050 + C48051) * C51262) *
                        C51164 * C51337) *
                       C51452 +
                   (((C48048 + C48047 + C48046) * C1723 -
                     ((C47449 + C47448 + C47447) * C1720 +
                      (C47446 + C47445 + C47444) * C1722) +
                     (C48051 + C48050 + C48049) * C51262) *
                        C51164 * C22938 +
                    ((C48052 + C48053 + C48054) * C1723 -
                     ((C47754 + C47755 + C47756) * C1720 +
                      (C47757 + C47758 + C47759) * C1722) +
                     (C48055 + C48056 + C48057) * C51262) *
                        C51164 * C51337) *
                       C51236) *
                      C1456 +
                  ((((C38699 + C38698 + C38697) * C1723 -
                     ((C38332 + C38331 + C38330) * C1720 +
                      (C38329 + C38328 + C38327) * C1722) +
                     (C38702 + C38701 + C38700) * C51262) *
                        C51164 * C22938 +
                    ((C40023 + C40024 + C40025) * C1723 -
                     ((C38515 + C38516 + C38517) * C1720 +
                      (C38518 + C38519 + C38520) * C1722) +
                     (C40026 + C40027 + C40028) * C51262) *
                        C51164 * C51337) *
                       C51452 +
                   (((C38520 + C38519 + C38518) * C1722 +
                     (C38517 + C38516 + C38515) * C1720 -
                     (C40025 + C40024 + C40023) * C1723 -
                     (C40028 + C40027 + C40026) * C51262) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C1722 +
                     (C38870 + C38871 + C38872) * C1720 -
                     (C38289 * C9348 + C38286 * C9351 + C38288 * C3553 +
                      C51495 * C3557 + C38287 * C861 + C51501 * C874) *
                         C1723 -
                     (C38289 * C9352 + C38286 * C9354 + C38288 * C3558 +
                      C51495 * C3562 + C38287 * C875 + C51501 * C885) *
                         C51262) *
                        C51164 * C51337) *
                       C51236) *
                      C51193)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C1989 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51499 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C1990 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51489 +
                    (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                     C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                        C1991 +
                    (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                     C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                        C1988) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C1989 +
                    (C47447 + C47448 + C47449) * C51499 -
                    (C48046 + C48047 + C48048) * C1990 -
                    (C48049 + C48050 + C48051) * C51489 +
                    (C48362 + C48363 + C48364) * C1991 +
                    (C48365 + C48366 + C48367) * C1988) *
                       C51164 * C51337) *
                      C51220 * C1456 +
                  (((C38699 + C38698 + C38697) * C1990 -
                    ((C38332 + C38331 + C38330) * C51499 +
                     (C38329 + C38328 + C38327) * C1989) +
                    (C38702 + C38701 + C38700) * C51489 -
                    (C39277 + C39276 + C39275) * C1991 -
                    (C39280 + C39279 + C39278) * C1988) *
                       C51164 * C22938 +
                   ((C40023 + C40024 + C40025) * C1990 -
                    ((C38515 + C38516 + C38517) * C51499 +
                     (C38518 + C38519 + C38520) * C1989) +
                    (C40026 + C40027 + C40028) * C51489 -
                    (C38289 * C16735 + C38286 * C16736 + C38288 * C3675 +
                     C51495 * C3679 + C38287 * C1147 + C51501 * C1152) *
                        C1991 -
                    (C38289 * C16737 + C38286 * C16738 + C38288 * C3680 +
                     C51495 * C3684 + C38287 * C1153 + C51501 * C1159) *
                        C1988) *
                       C51164 * C51337) *
                      C51220 * C51193)) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C118 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51250) *
                       C51164 * C22938 +
                   ((C38287 * C297 + C51501 * C307 + C38288 * C856 +
                     C51495 * C864 + C38289 * C1146 + C38286 * C1150) *
                        C118 +
                    (C38287 * C306 + C51501 * C315 + C38288 * C865 +
                     C51495 * C880 + C38289 * C1151 + C38286 * C1158) *
                        C51250) *
                       C51164 * C51337) *
                      C51220 * C113 -
                  (((C38515 + C38516 + C38517) * C51250 +
                    (C38518 + C38519 + C38520) * C118) *
                       C51164 * C51337 +
                   ((C38332 + C38331 + C38330) * C51250 +
                    (C38329 + C38328 + C38327) * C118) *
                       C51164 * C22938) *
                      C51220 * C114 +
                  (((C38338 + C38337 + C38336) * C118 +
                    (C38335 + C38334 + C38333) * C51250) *
                       C51164 * C22938 +
                   ((C38521 + C38522 + C38523) * C118 +
                    (C38524 + C38525 + C38526) * C51250) *
                       C51164 * C51337) *
                      C51220 * C115 -
                  (((C38289 * C1157 + C38286 * C1161 + C38288 * C871 +
                     C51495 * C883 + C38287 * C300 + C51501 * C312) *
                        C51250 +
                    (C38289 * C1149 + C38286 * C1156 + C38288 * C859 +
                     C51495 * C870 + C38287 * C294 + C51501 * C301) *
                        C118) *
                       C51164 * C51337 +
                   ((C38344 + C38343 + C38342) * C51250 +
                    (C38341 + C38340 + C38339) * C118) *
                       C51164 * C22938) *
                      C51220 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51250) *
                        C51164 * C51337) *
                       C622 -
                   (((C47754 + C47755 + C47756) * C51250 +
                     (C47757 + C47758 + C47759) * C118) *
                        C51164 * C51337 +
                    ((C47449 + C47448 + C47447) * C51250 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51164 * C22938) *
                       C623 +
                   (((C47759 + C47758 + C47757) * C118 +
                     (C47756 + C47755 + C47754) * C51250) *
                        C51164 * C22938 +
                    ((C38287 * C745 + C51501 * C753 + C38288 * C3184 +
                      C51495 * C3187 + C38289 * C9229 + C38286 * C9231) *
                         C118 +
                     (C38287 * C752 + C51501 * C757 + C38288 * C3188 +
                      C51495 * C3193 + C38289 * C9232 + C38286 * C9235) *
                         C51250) *
                        C51164 * C51337) *
                       C624) *
                      C51445 +
                  ((((C38520 + C38519 + C38518) * C118 +
                     (C38517 + C38516 + C38515) * C51250) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51164 * C51337) *
                       C623 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51164 * C51337 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C51164 * C22938) *
                       C622 -
                   (((C38289 * C9234 + C38286 * C9236 + C38288 * C3190 +
                      C51495 * C3194 + C38287 * C750 + C51501 * C756) *
                         C51250 +
                     (C38289 * C9230 + C38286 * C9233 + C38288 * C3185 +
                      C51495 * C3189 + C38287 * C744 + C51501 * C751) *
                         C118) *
                        C51164 * C51337 +
                    ((C38872 + C38871 + C38870) * C51250 +
                     (C38869 + C38868 + C38867) * C118) *
                        C51164 * C22938) *
                       C624) *
                      C51193)) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C51164 * C22938 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51250) *
                        C51164 * C51337) *
                       C51452 -
                   (((C38289 * C3556 + C38286 * C3561 + C38288 * C873 +
                      C51495 * C884 + C38287 * C633 + C51501 * C642) *
                         C51250 +
                     (C38289 * C3552 + C38286 * C3555 + C38288 * C860 +
                      C51495 * C872 + C38287 * C627 + C51501 * C632) *
                         C118) *
                        C51164 * C51337 +
                    ((C47449 + C47448 + C47447) * C51250 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51164 * C22938) *
                       C51236) *
                      C291 +
                  ((((C38520 + C38519 + C38518) * C118 +
                     (C38517 + C38516 + C38515) * C51250) *
                        C51164 * C22938 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51164 * C51337) *
                       C51236 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51164 * C51337 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C51164 * C22938) *
                       C51452) *
                      C292 +
                  ((((C38338 + C38337 + C38336) * C118 +
                     (C38335 + C38334 + C38333) * C51250) *
                        C51164 * C22938 +
                    ((C38521 + C38522 + C38523) * C118 +
                     (C38524 + C38525 + C38526) * C51250) *
                        C51164 * C51337) *
                       C51452 -
                   (((C38289 * C3560 + C38286 * C3563 + C38288 * C877 +
                      C51495 * C886 + C38287 * C637 + C51501 * C644) *
                         C51250 +
                     (C38289 * C3554 + C38286 * C3559 + C38288 * C862 +
                      C51495 * C876 + C38287 * C629 + C51501 * C636) *
                         C118) *
                        C51164 * C51337 +
                    ((C38526 + C38525 + C38524) * C51250 +
                     (C38523 + C38522 + C38521) * C118) *
                        C51164 * C22938) *
                       C51236) *
                      C293)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C118 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51250) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C118 +
                    (C47447 + C47448 + C47449) * C51250) *
                       C51164 * C51337) *
                      C737 -
                  (((C47754 + C47755 + C47756) * C51250 +
                    (C47757 + C47758 + C47759) * C118) *
                       C51164 * C51337 +
                   ((C47449 + C47448 + C47447) * C51250 +
                    (C47446 + C47445 + C47444) * C118) *
                       C51164 * C22938) *
                      C738 +
                  (((C47759 + C47758 + C47757) * C118 +
                    (C47756 + C47755 + C47754) * C51250) *
                       C51164 * C22938 +
                   ((C47870 + C47871 + C47872) * C118 +
                    (C47873 + C47874 + C47875) * C51250) *
                       C51164 * C51337) *
                      C739 -
                  (((C38289 * C11614 + C38286 * C11615 + C38288 * C8891 +
                     C51495 * C8894 + C38287 * C3025 + C51501 * C3029) *
                        C51250 +
                    (C38289 * C11612 + C38286 * C11613 + C38288 * C8888 +
                     C51495 * C8890 + C38287 * C3020 + C51501 * C3026) *
                        C118) *
                       C51164 * C51337 +
                   ((C47875 + C47874 + C47873) * C51250 +
                    (C47872 + C47871 + C47870) * C118) *
                       C51164 * C22938) *
                      C740) *
                 C51188) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C452 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51454 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C453 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51262) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C452 +
                    (C47447 + C47448 + C47449) * C51454 -
                    (C38289 * C3674 + C38286 * C3677 + C38288 * C1146 +
                     C51495 * C1150 + C38287 * C856 + C51501 * C864) *
                        C453 -
                    (C38289 * C3678 + C38286 * C3683 + C38288 * C1151 +
                     C51495 * C1158 + C38287 * C865 + C51501 * C880) *
                        C51262) *
                       C51164 * C51337) *
                      C51220 * C291 +
                  (((C38699 + C38698 + C38697) * C453 -
                    ((C38332 + C38331 + C38330) * C51454 +
                     (C38329 + C38328 + C38327) * C452) +
                    (C38702 + C38701 + C38700) * C51262) *
                       C51164 * C22938 +
                   ((C40023 + C40024 + C40025) * C453 -
                    ((C38515 + C38516 + C38517) * C51454 +
                     (C38518 + C38519 + C38520) * C452) +
                    (C40026 + C40027 + C40028) * C51262) *
                       C51164 * C51337) *
                      C51220 * C292 +
                  (((C38338 + C38337 + C38336) * C452 +
                    (C38335 + C38334 + C38333) * C51454 -
                    (C38705 + C38704 + C38703) * C453 -
                    (C38708 + C38707 + C38706) * C51262) *
                       C51164 * C22938 +
                   ((C38521 + C38522 + C38523) * C452 +
                    (C38524 + C38525 + C38526) * C51454 -
                    (C38289 * C3676 + C38286 * C3681 + C38288 * C1148 +
                     C51495 * C1154 + C38287 * C858 + C51501 * C868) *
                        C453 -
                    (C38289 * C3682 + C38286 * C3685 + C38288 * C1155 +
                     C51495 * C1160 + C38287 * C869 + C51501 * C882) *
                        C51262) *
                       C51164 * C51337) *
                      C51220 * C293)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C452 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C51454 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C453 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C51262) *
                       C51164 * C22938 +
                   ((C47444 + C47445 + C47446) * C452 +
                    (C47447 + C47448 + C47449) * C51454 -
                    (C48046 + C48047 + C48048) * C453 -
                    (C48049 + C48050 + C48051) * C51262) *
                       C51164 * C51337) *
                      C622 +
                  (((C48048 + C48047 + C48046) * C453 -
                    ((C47449 + C47448 + C47447) * C51454 +
                     (C47446 + C47445 + C47444) * C452) +
                    (C48051 + C48050 + C48049) * C51262) *
                       C51164 * C22938 +
                   ((C48052 + C48053 + C48054) * C453 -
                    ((C47754 + C47755 + C47756) * C51454 +
                     (C47757 + C47758 + C47759) * C452) +
                    (C48055 + C48056 + C48057) * C51262) *
                       C51164 * C51337) *
                      C623 +
                  (((C47759 + C47758 + C47757) * C452 +
                    (C47756 + C47755 + C47754) * C51454 -
                    (C48054 + C48053 + C48052) * C453 -
                    (C48057 + C48056 + C48055) * C51262) *
                       C51164 * C22938 +
                   ((C47870 + C47871 + C47872) * C452 +
                    (C47873 + C47874 + C47875) * C51454 -
                    (C38289 * C11694 + C38286 * C11695 + C38288 * C9229 +
                     C51495 * C9231 + C38287 * C3184 + C51501 * C3187) *
                        C453 -
                    (C38289 * C11696 + C38286 * C11697 + C38288 * C9232 +
                     C51495 * C9235 + C38287 * C3188 + C51501 * C3193) *
                        C51262) *
                       C51164 * C51337) *
                      C624) *
                 C51188) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C51349 * C126) * C118 +
                      (C117 * C127 + C51349 * C140) * C51250) *
                         C51438 +
                     (C178 + C179) * C51169) *
                        C8166 +
                    ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
                    C8622 * C8168) *
                       C1350 -
                   (C8740 * C8168 +
                    (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
                    (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
                       C51236) *
                      C51497 +
                  (((C2591 * C51438 + C2440 * C51169) * C8166 +
                    (C2899 * C51438 + C2900 * C51169) * C8167 +
                    (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
                       C51236 -
                   (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
                    ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
                       C1350) *
                      C51483 +
                  (((C188 * C51438 + C189 * C51169) * C8166 +
                    (C2440 * C51438 + C2594 * C51169) * C8167 +
                    (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
                       C1350 -
                   ((((C117 * C746 + C51349 * C754) * C51250 +
                      (C117 * C742 + C51349 * C747) * C118) *
                         C51169 +
                     (C2920 + C2919) * C51438) *
                        C8168 +
                    ((C671 + C670) * C51169 + C2592 * C51438) * C8167 +
                    (C351 * C51169 + C352 * C51438) * C8166) *
                       C51236) *
                      C1354)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C51349 * C126) * C118 +
                     (C117 * C127 + C51349 * C140) * C51250) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C51323 * C1350 -
                   (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
                    ((C117 * C306 + C51349 * C315) * C51250 +
                     (C117 * C297 + C51349 * C307) * C118) *
                        C107) *
                       C51323 * C51236) *
                      C51497 +
                  (((C348 + C347) * C107 + (C346 + C345) * C108 +
                    (C344 + C343) * C109 + (C349 + C350) * C110) *
                       C51323 * C51236 -
                   (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                    (C179 + C178) * C107) *
                       C51323 * C1350) *
                      C51483 +
                  ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                    (C186 + C187) * C110) *
                       C51323 * C1350 -
                   (((C117 * C310 + C51349 * C317) * C51250 +
                     (C117 * C299 + C51349 * C311) * C118) *
                        C110 +
                    (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
                       C51323 * C51236) *
                      C1354)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15596 * C119 + C15593 * C126 + C15597 * C454 +
                      C15594 * C460 + C15598 * C992 + C15595 * C997) *
                         C118 +
                     (C15596 * C127 + C15593 * C140 + C15597 * C461 +
                      C15594 * C472 + C15598 * C998 + C15595 * C1007) *
                         C51250) *
                        C51438 +
                    ((C15636 + C15637 + C15638) * C118 +
                     (C15639 + C15640 + C15641) * C51250) *
                        C51169) *
                       C51323 * C1350 -
                   (((C15824 + C15825 + C15826) * C51250 +
                     (C15827 + C15828 + C15829) * C118) *
                        C51169 +
                    ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 +
                      C15594 * C880 + C15596 * C306 + C15593 * C315) *
                         C51250 +
                     (C15598 * C1146 + C15595 * C1150 + C15597 * C856 +
                      C15594 * C864 + C15596 * C297 + C15593 * C307) *
                         C118) *
                        C51438) *
                       C51323 * C51236) *
                      C51497 +
                  ((((C15829 + C15828 + C15827) * C118 +
                     (C15826 + C15825 + C15824) * C51250) *
                        C51438 +
                    ((C15830 + C15831 + C15832) * C118 +
                     (C15833 + C15834 + C15835) * C51250) *
                        C51169) *
                       C51323 * C51236 -
                   (((C15642 + C15643 + C15644) * C51250 +
                     (C15645 + C15646 + C15647) * C118) *
                        C51169 +
                    ((C15641 + C15640 + C15639) * C51250 +
                     (C15638 + C15637 + C15636) * C118) *
                        C51438) *
                       C51323 * C1350) *
                      C51483 +
                  ((((C15647 + C15646 + C15645) * C118 +
                     (C15644 + C15643 + C15642) * C51250) *
                        C51438 +
                    ((C15648 + C15649 + C15650) * C118 +
                     (C15651 + C15652 + C15653) * C51250) *
                        C51169) *
                       C51323 * C1350 -
                   (((C15598 * C1157 + C15595 * C1161 + C15597 * C871 +
                      C15594 * C883 + C15596 * C300 + C15593 * C312) *
                         C51250 +
                     (C15598 * C1149 + C15595 * C1156 + C15597 * C859 +
                      C15594 * C870 + C15596 * C294 + C15593 * C301) *
                         C118) *
                        C51169 +
                    ((C15835 + C15834 + C15833) * C51250 +
                     (C15832 + C15831 + C15830) * C118) *
                        C51438) *
                       C51323 * C51236) *
                      C1354)) /
                    (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C51498 -
           (C8740 * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51486 +
           (C8622 * C8166 +
            ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
            ((C8741 + C8742) * C51438 + (C8623 + C8624) * C51169) * C8168) *
               C1455) *
              C1456 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51486 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C51498 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C51438) *
                C8168 +
            ((C2920 + C2919) * C51169 + C8610 * C51438) * C8167 +
            C8621 * C8166) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C51498 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C51486 +
           (((C117 * C627 + C51349 * C632) * C118 +
             (C117 * C633 + C51349 * C642) * C51250) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51323 * C1455) *
              C1456 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C51486 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C51498 -
           (((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51323 * C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51438 +
            ((C15636 + C15637 + C15638) * C118 +
             (C15639 + C15640 + C15641) * C51250) *
                C51169) *
               C51323 * C51498 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51169 +
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51250 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C118) *
                C51438) *
               C51323 * C51486 +
           (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
              C15598 * C3552 + C15595 * C3555) *
                 C118 +
             (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
              C15598 * C3556 + C15595 * C3561) *
                 C51250) *
                C51438 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51169) *
               C51323 * C1455) *
              C1456 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51438 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51169) *
               C51323 * C51486 -
           (((C15642 + C15643 + C15644) * C51250 +
             (C15645 + C15646 + C15647) * C118) *
                C51169 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51438) *
               C51323 * C51498 -
           (((C15598 * C3560 + C15595 * C3563 + C15597 * C877 + C15594 * C886 +
              C15596 * C637 + C15593 * C644) *
                 C51250 +
             (C15598 * C3554 + C15595 * C3559 + C15597 * C862 + C15594 * C876 +
              C15596 * C629 + C15593 * C636) *
                 C118) *
                C51169 +
            ((C16181 + C16180 + C16179) * C51250 +
             (C16178 + C16177 + C16176) * C118) *
                C51438) *
               C51323 * C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C452 +
              (C117 * C127 + C51349 * C140) * C51454 -
              (C117 * C454 + C51349 * C460) * C453 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51438 +
             (C479 + C480 - C513 - C514) * C51169) *
                C8166 +
            ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) *
                C8167 +
            C8925 * C8168) *
               C1350 +
           (((C3229 - (C3198 + C3197) + C3230) * C51438 + C4180 * C51169) *
                C8166 +
            ((C3231 - (C3205 + C3206) + C3232) * C51438 + C9844 * C51169) *
                C8167 +
            ((C8919 - (C8901 + C8902) + C8920) * C51438 +
             (C8921 - (C8907 + C8908) + C8922) * C51169) *
                C8168) *
               C51236) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C51438 +
             (C515 - (C486 + C485) + C516) * C51169) *
                C8166 +
            (C4180 * C51438 + C4181 * C51169) * C8167 +
            (C9844 * C51438 + (C3235 - (C3217 + C3218) + C3236) * C51169) *
                C8168) *
               C1350 +
           ((C4179 * C51438 + C2747 * C51169) * C8166 +
            (C8918 * C51438 + (C3218 + C3217 - C3235 - C3236) * C51169) *
                C8167 +
            ((C8908 + C8907 - C8921 - C8922) * C51438 +
             (C2913 * C452 + C2914 * C51454 -
              (C117 * C3186 + C51349 * C3191) * C453 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C107 +
            (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
               C51323 * C1350 +
           (((C117 * C856 + C51349 * C864) * C453 -
             ((C117 * C306 + C51349 * C315) * C51454 +
              (C117 * C297 + C51349 * C307) * C452) +
             (C117 * C865 + C51349 * C880) * C51262) *
                C107 +
            (C1617 - (C1595 + C1596) + C1618) * C108 +
            (C1619 - (C1601 + C1602) + C1620) * C109 +
            (C1621 - (C1607 + C1608) + C1622) * C110) *
               C51323 * C51236) *
              C1456 +
          (((C513 - (C480 + C479) + C514) * C107 +
            (C515 - (C486 + C485) + C516) * C108 +
            (C517 - (C492 + C491) + C518) * C109 +
            (C519 - (C499 + C500) + C520) * C110) *
               C51323 * C1350 +
           ((C1596 + C1595 - C1617 - C1618) * C107 +
            (C1602 + C1601 - C1619 - C1620) * C108 +
            (C1608 + C1607 - C1621 - C1622) * C109 +
            (C341 * C452 + C342 * C51454 -
             (C117 * C1588 + C51349 * C1589) * C453 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C110) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C452 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51454 -
             (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
              C15596 * C454 + C15593 * C460) *
                 C453 -
             (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
              C15596 * C461 + C15593 * C472) *
                 C51262) *
                C51438 +
            ((C15636 + C15637 + C15638) * C452 +
             (C15639 + C15640 + C15641) * C51454 -
             (C16006 + C16007 + C16008) * C453 -
             (C16009 + C16010 + C16011) * C51262) *
                C51169) *
               C51323 * C1350 +
           (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
              C15598 * C3674 + C15595 * C3677) *
                 C453 -
             ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
               C15596 * C306 + C15593 * C315) *
                  C51454 +
              (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
               C15596 * C297 + C15593 * C307) *
                  C452) +
             (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
              C15598 * C3678 + C15595 * C3683) *
                 C51262) *
                C51438 +
            ((C17344 + C17345 + C17346) * C453 -
             ((C15824 + C15825 + C15826) * C51454 +
              (C15827 + C15828 + C15829) * C452) +
             (C17347 + C17348 + C17349) * C51262) *
                C51169) *
               C51323 * C51236) *
              C1456 +
          ((((C16008 + C16007 + C16006) * C453 -
             ((C15641 + C15640 + C15639) * C51454 +
              (C15638 + C15637 + C15636) * C452) +
             (C16011 + C16010 + C16009) * C51262) *
                C51438 +
            ((C16012 + C16013 + C16014) * C453 -
             ((C15642 + C15643 + C15644) * C51454 +
              (C15645 + C15646 + C15647) * C452) +
             (C16015 + C16016 + C16017) * C51262) *
                C51169) *
               C51323 * C1350 +
           (((C15829 + C15828 + C15827) * C452 +
             (C15826 + C15825 + C15824) * C51454 -
             (C17346 + C17345 + C17344) * C453 -
             (C17349 + C17348 + C17347) * C51262) *
                C51438 +
            ((C15830 + C15831 + C15832) * C452 +
             (C15833 + C15834 + C15835) * C51454 -
             (C15598 * C3676 + C15595 * C3681 + C15597 * C1148 +
              C15594 * C1154 + C15596 * C858 + C15593 * C868) *
                 C453 -
             (C15598 * C3682 + C15595 * C3685 + C15597 * C1155 +
              C15594 * C1160 + C15596 * C869 + C15593 * C882) *
                 C51262) *
                C51169) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51438 +
             (C1725 + C1726 - C1727 - C1728) * C51169) *
                C8166 +
            ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) *
                C8167 +
            ((C5046 + C5045 - C5044 - C5047) * C51438 + C10193 * C51169) *
                C8168) *
               C1350 +
           (((C4527 - (C4526 + C4525) + C4528) * C51438 + C4544 * C51169) *
                C8166 +
            ((C5044 - (C5045 + C5046) + C5047) * C51438 + C10194 * C51169) *
                C8167 +
            ((C8913 * C1723 - (C3036 * C1720 + C3035 * C1722) +
              C8914 * C51262) *
                 C51438 +
             (C10187 - (C10188 + C10189) + C10190) * C51169) *
                C8168) *
               C51236) *
              C51445 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51438 +
             (C1731 - (C1730 + C1729) + C1732) * C51169) *
                C8166 +
            (C4544 * C51438 + C4545 * C51169) * C8167 +
            (C10194 * C51438 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
                C8168) *
               C1350 +
           ((C4543 * C51438 + C4330 * C51169) * C8166 +
            (C10193 * C51438 + (C4538 + C4537 - C4536 - C4539) * C51169) *
                C8167 +
            ((C10189 + C10188 - C10187 - C10190) * C51438 +
             (C2913 * C1722 + C2914 * C1720 -
              (C117 * C3186 + C51349 * C3191) * C1723 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51323 * C1350 +
           (((C117 * C856 + C51349 * C864) * C1723 -
             ((C117 * C306 + C51349 * C315) * C1720 +
              (C117 * C297 + C51349 * C307) * C1722) +
             (C117 * C865 + C51349 * C880) * C51262) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51323 * C51236) *
              C51445 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51323 * C1350 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51349 * C1589) * C1723 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C110) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C1722 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C1720 -
             (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
              C15596 * C454 + C15593 * C460) *
                 C1723 -
             (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
              C15596 * C461 + C15593 * C472) *
                 C51262) *
                C51438 +
            ((C15636 + C15637 + C15638) * C1722 +
             (C15639 + C15640 + C15641) * C1720 -
             (C16006 + C16007 + C16008) * C1723 -
             (C16009 + C16010 + C16011) * C51262) *
                C51169) *
               C51323 * C1350 +
           (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
              C15598 * C3674 + C15595 * C3677) *
                 C1723 -
             ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
               C15596 * C306 + C15593 * C315) *
                  C1720 +
              (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
               C15596 * C297 + C15593 * C307) *
                  C1722) +
             (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
              C15598 * C3678 + C15595 * C3683) *
                 C51262) *
                C51438 +
            ((C17344 + C17345 + C17346) * C1723 -
             ((C15824 + C15825 + C15826) * C1720 +
              (C15827 + C15828 + C15829) * C1722) +
             (C17347 + C17348 + C17349) * C51262) *
                C51169) *
               C51323 * C51236) *
              C51445 +
          ((((C16008 + C16007 + C16006) * C1723 -
             ((C15641 + C15640 + C15639) * C1720 +
              (C15638 + C15637 + C15636) * C1722) +
             (C16011 + C16010 + C16009) * C51262) *
                C51438 +
            ((C16012 + C16013 + C16014) * C1723 -
             ((C15642 + C15643 + C15644) * C1720 +
              (C15645 + C15646 + C15647) * C1722) +
             (C16015 + C16016 + C16017) * C51262) *
                C51169) *
               C51323 * C1350 +
           (((C15829 + C15828 + C15827) * C1722 +
             (C15826 + C15825 + C15824) * C1720 -
             (C17346 + C17345 + C17344) * C1723 -
             (C17349 + C17348 + C17347) * C51262) *
                C51438 +
            ((C15830 + C15831 + C15832) * C1722 +
             (C15833 + C15834 + C15835) * C1720 -
             (C15598 * C3676 + C15595 * C3681 + C15597 * C1148 +
              C15594 * C1154 + C15596 * C858 + C15593 * C868) *
                 C1723 -
             (C15598 * C3682 + C15595 * C3685 + C15597 * C1155 +
              C15594 * C1160 + C15596 * C869 + C15593 * C882) *
                 C51262) *
                C51169) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C1725 + C1726 - C1727 - C1728) * C51169) *
               C8166 +
           ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) * C8167 +
           C10696 * C8168) *
              C51498 +
          (((C4527 - (C4526 + C4525) + C4528) * C51438 + C4544 * C51169) *
               C8166 +
           ((C5044 - (C5045 + C5046) + C5047) * C51438 + C10194 * C51169) *
               C8167 +
           ((C10689 - (C10690 + C10691) + C10692) * C51438 +
            (C10187 - (C10188 + C10189) + C10190) * C51169) *
               C8168) *
              C51486 +
          (C10696 * C8166 +
           ((C10691 + C10690 - C10689 - C10692) * C51438 +
            (C10189 + C10188 - C10187 - C10190) * C51169) *
               C8167 +
           ((C8738 * C1722 + C8739 * C1720 -
             (C117 * C8888 + C51349 * C8890) * C1723 -
             (C117 * C8891 + C51349 * C8894) * C51262) *
                C51438 +
            (C8619 * C1722 + C8620 * C1720 -
             (C117 * C8889 + C51349 * C8892) * C1723 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C8168) *
              C1455) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1722 +
            (C117 * C127 + C51349 * C140) * C1720 -
            (C117 * C454 + C51349 * C460) * C1723 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51323 * C51498 +
          (((C117 * C856 + C51349 * C864) * C1723 -
            ((C117 * C306 + C51349 * C315) * C1720 +
             (C117 * C297 + C51349 * C307) * C1722) +
            (C117 * C865 + C51349 * C880) * C51262) *
               C107 +
           (C1877 - (C1878 + C1879) + C1880) * C108 +
           (C1881 - (C1882 + C1883) + C1884) * C109 +
           (C1885 - (C1886 + C1887) + C1888) * C110) *
              C51323 * C51486 +
          (((C117 * C627 + C51349 * C632) * C1722 +
            (C117 * C633 + C51349 * C642) * C1720 -
            (C117 * C860 + C51349 * C872) * C1723 -
            (C117 * C873 + C51349 * C884) * C51262) *
               C107 +
           (C660 * C1722 + C661 * C1720 -
            (C117 * C861 + C51349 * C874) * C1723 -
            (C117 * C875 + C51349 * C885) * C51262) *
               C108 +
           (C662 * C1722 + C663 * C1720 -
            (C117 * C862 + C51349 * C876) * C1723 -
            (C117 * C877 + C51349 * C886) * C51262) *
               C109 +
           (C664 * C1722 + C665 * C1720 -
            (C117 * C863 + C51349 * C878) * C1723 -
            (C117 * C879 + C51349 * C887) * C51262) *
               C110) *
              C51323 * C1455) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1722 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C1720 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1723 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51438 +
           ((C15636 + C15637 + C15638) * C1722 +
            (C15639 + C15640 + C15641) * C1720 -
            (C16006 + C16007 + C16008) * C1723 -
            (C16009 + C16010 + C16011) * C51262) *
               C51169) *
              C51323 * C51498 +
          (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
             C15598 * C3674 + C15595 * C3677) *
                C1723 -
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C1720 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C1722) +
            (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
             C15598 * C3678 + C15595 * C3683) *
                C51262) *
               C51438 +
           ((C17344 + C17345 + C17346) * C1723 -
            ((C15824 + C15825 + C15826) * C1720 +
             (C15827 + C15828 + C15829) * C1722) +
            (C17347 + C17348 + C17349) * C51262) *
               C51169) *
              C51323 * C51486 +
          (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
             C15598 * C3552 + C15595 * C3555) *
                C1722 +
            (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
             C15598 * C3556 + C15595 * C3561) *
                C1720 -
            (C15598 * C9347 + C15595 * C9349 + C15597 * C3552 + C15594 * C3555 +
             C15596 * C860 + C15593 * C872) *
                C1723 -
            (C15598 * C9350 + C15595 * C9353 + C15597 * C3556 + C15594 * C3561 +
             C15596 * C873 + C15593 * C884) *
                C51262) *
               C51438 +
           ((C16176 + C16177 + C16178) * C1722 +
            (C16179 + C16180 + C16181) * C1720 -
            (C15598 * C9348 + C15595 * C9351 + C15597 * C3553 + C15594 * C3557 +
             C15596 * C861 + C15593 * C874) *
                C1723 -
            (C15598 * C9352 + C15595 * C9354 + C15597 * C3558 + C15594 * C3562 +
             C15596 * C875 + C15593 * C885) *
                C51262) *
               C51169) *
              C51323 * C1455) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C51438 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51169) *
               C8166 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51438 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51169) *
               C8167 +
           ((C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C51438 +
            (C10341 + C10342 - C10343 - C10344 + C10345 + C10346) * C51169) *
               C8168) *
              C1350 +
          (((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C51438 +
            (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51169) *
               C8166 +
           ((C10845 - (C10844 + C10843) + C10846 - C10847 - C10848) * C51438 +
            (C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51169) *
               C8167 +
           ((C8913 * C1990 - (C3036 * C51499 + C3035 * C1989) + C8914 * C51489 -
             (C117 * C9229 + C51349 * C9231) * C1991 -
             (C117 * C9232 + C51349 * C9235) * C1988) *
                C51438 +
            (C8915 * C1990 - (C2912 * C51499 + C2911 * C1989) + C8916 * C51489 -
             (C117 * C9230 + C51349 * C9233) * C1991 -
             (C117 * C9234 + C51349 * C9236) * C1988) *
                C51169) *
               C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51323 * C1350 +
          (((C117 * C856 + C51349 * C864) * C1990 -
            ((C117 * C306 + C51349 * C315) * C51499 +
             (C117 * C297 + C51349 * C307) * C1989) +
            (C117 * C865 + C51349 * C880) * C51489 -
            (C117 * C1146 + C51349 * C1150) * C1991 -
            (C117 * C1151 + C51349 * C1158) * C1988) *
               C107 +
           (C1611 * C1990 - (C339 * C51499 + C340 * C1989) + C1612 * C51489 -
            (C117 * C1147 + C51349 * C1152) * C1991 -
            (C117 * C1153 + C51349 * C1159) * C1988) *
               C108 +
           (C1613 * C1990 - (C337 * C51499 + C338 * C1989) + C1614 * C51489 -
            (C117 * C1148 + C51349 * C1154) * C1991 -
            (C117 * C1155 + C51349 * C1160) * C1988) *
               C109 +
           (C1615 * C1990 - (C335 * C51499 + C336 * C1989) + C1616 * C51489 -
            (C117 * C1149 + C51349 * C1156) * C1991 -
            (C117 * C1157 + C51349 * C1161) * C1988) *
               C110) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51499 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51489 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C1991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C1988) *
               C51438 +
           ((C15636 + C15637 + C15638) * C1989 +
            (C15639 + C15640 + C15641) * C51499 -
            (C16006 + C16007 + C16008) * C1990 -
            (C16009 + C16010 + C16011) * C51489 +
            (C16584 + C16585 + C16586) * C1991 +
            (C16587 + C16588 + C16589) * C1988) *
               C51169) *
              C51323 * C1350 +
          (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
             C15598 * C3674 + C15595 * C3677) *
                C1990 -
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51499 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C1989) +
            (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
             C15598 * C3678 + C15595 * C3683) *
                C51489 -
            (C15598 * C14009 + C15595 * C14011 + C15597 * C3674 +
             C15594 * C3677 + C15596 * C1146 + C15593 * C1150) *
                C1991 -
            (C15598 * C14012 + C15595 * C14015 + C15597 * C3678 +
             C15594 * C3683 + C15596 * C1151 + C15593 * C1158) *
                C1988) *
               C51438 +
           ((C17344 + C17345 + C17346) * C1990 -
            ((C15824 + C15825 + C15826) * C51499 +
             (C15827 + C15828 + C15829) * C1989) +
            (C17347 + C17348 + C17349) * C51489 -
            (C15598 * C16735 + C15595 * C16736 + C15597 * C3675 +
             C15594 * C3679 + C15596 * C1147 + C15593 * C1152) *
                C1991 -
            (C15598 * C16737 + C15595 * C16738 + C15597 * C3680 +
             C15594 * C3684 + C15596 * C1153 + C15593 * C1159) *
                C1988) *
               C51169) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51349 * C126) * C118 +
                (C117 * C127 + C51349 * C140) * C51250) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C51323 * C51220 * C113 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C51323 * C51220 * C114 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C51323 * C51220 * C115 -
              (((C117 * C138 + C51349 * C146) * C51250 +
                (C117 * C125 + C51349 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C51323 * C51220 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51349 * C126) * C118 +
                 (C117 * C127 + C51349 * C140) * C51250) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C51323 * C622 -
               (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
                ((C117 * C306 + C51349 * C315) * C51250 +
                 (C117 * C297 + C51349 * C307) * C118) *
                    C107) *
                   C51323 * C623 +
               (((C117 * C627 + C51349 * C632) * C118 +
                 (C117 * C633 + C51349 * C642) * C51250) *
                    C107 +
                (C666 + C667) * C108 + (C668 + C669) * C109 +
                (C670 + C671) * C110) *
                   C51323 * C624) *
                  C51445 +
              (((C348 + C347) * C107 + (C346 + C345) * C108 +
                (C344 + C343) * C109 + (C349 + C350) * C110) *
                   C51323 * C623 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C51323 * C622 -
               (((C117 * C640 + C51349 * C646) * C51250 +
                 (C117 * C631 + C51349 * C641) * C118) *
                    C110 +
                (C671 + C670) * C109 + (C669 + C668) * C108 +
                (C667 + C666) * C107) *
                   C51323 * C624) *
                  C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51323 * C51220 * C51445 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C107 +
           (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C109 +
           (C511 * C990 - (C174 * C986 + C175 * C989) + C512 * C987 -
            (C117 * C996 + C51349 * C1005) * C991 -
            (C117 * C1006 + C51349 * C1011) * C988) *
               C110) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
              C51220 * C113 -
          ((C2592 * C51169 + C2894 * C51438) * C8168 +
           (C352 * C51169 + C2593 * C51438) * C8167 +
           ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
              C51220 * C114 +
          ((C188 * C51438 + C189 * C51169) * C8166 +
           (C2440 * C51438 + C2594 * C51169) * C8167 +
           (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
              C51220 * C115 -
          ((((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C51169 +
            (C671 + C670) * C51438) *
               C8168 +
           ((C350 + C349) * C51169 + C351 * C51438) * C8167 +
           (C190 * C51169 + C191 * C51438) * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C622 -
           ((C8610 * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C623 +
           (C8622 * C8166 +
            ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
            (((C117 * C3020 + C51349 * C3026) * C118 +
              (C117 * C3025 + C51349 * C3029) * C51250) *
                 C51438 +
             (C8623 + C8624) * C51169) *
                C8168) *
               C624) *
              C51445 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C623 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C622 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C51438) *
                C8168 +
            ((C2920 + C2919) * C51169 + C8610 * C51438) * C8167 +
            C8621 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C51438 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51169) *
               C8166 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51438 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51169) *
               C8167 +
           ((C2910 * C989 + C2909 * C986 - C3223 * C990 - C3224 * C987 +
             (C117 * C3552 + C51349 * C3555) * C991 +
             (C117 * C3556 + C51349 * C3561) * C988) *
                C51438 +
            (C9072 + C9073 - C9074 - C9075 + C9082 + C9083) * C51169) *
               C8168) *
              C51220 * C51445 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51438 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51169) *
               C8166 +
           ((C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51438 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C51169) *
               C8167 +
           ((C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51438 +
            (C3227 * C990 - (C663 * C986 + C662 * C989) + C3228 * C987 -
             (C117 * C3554 + C51349 * C3559) * C991 -
             (C117 * C3560 + C51349 * C3563) * C988) *
                C51169) *
               C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51438 +
           ((C15636 + C15637 + C15638) * C118 +
            (C15639 + C15640 + C15641) * C51250) *
               C51169) *
              C51323 * C51220 * C113 -
          (((C15642 + C15643 + C15644) * C51250 +
            (C15645 + C15646 + C15647) * C118) *
               C51169 +
           ((C15641 + C15640 + C15639) * C51250 +
            (C15638 + C15637 + C15636) * C118) *
               C51438) *
              C51323 * C51220 * C114 +
          (((C15647 + C15646 + C15645) * C118 +
            (C15644 + C15643 + C15642) * C51250) *
               C51438 +
           ((C15648 + C15649 + C15650) * C118 +
            (C15651 + C15652 + C15653) * C51250) *
               C51169) *
              C51323 * C51220 * C115 -
          (((C15598 * C1006 + C15595 * C1011 + C15597 * C469 + C15594 * C476 +
             C15596 * C134 + C15593 * C144) *
                C51250 +
            (C15598 * C996 + C15595 * C1005 + C15597 * C458 + C15594 * C468 +
             C15596 * C123 + C15593 * C135) *
                C118) *
               C51169 +
           ((C15653 + C15652 + C15651) * C51250 +
            (C15650 + C15649 + C15648) * C118) *
               C51438) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51438 +
            ((C15636 + C15637 + C15638) * C118 +
             (C15639 + C15640 + C15641) * C51250) *
                C51169) *
               C51323 * C622 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51169 +
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51250 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C118) *
                C51438) *
               C51323 * C623 +
           (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
              C15598 * C3552 + C15595 * C3555) *
                 C118 +
             (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
              C15598 * C3556 + C15595 * C3561) *
                 C51250) *
                C51438 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51169) *
               C51323 * C624) *
              C51445 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51438 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51169) *
               C51323 * C623 -
           (((C15642 + C15643 + C15644) * C51250 +
             (C15645 + C15646 + C15647) * C118) *
                C51169 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51438) *
               C51323 * C622 -
           (((C15598 * C3560 + C15595 * C3563 + C15597 * C877 + C15594 * C886 +
              C15596 * C637 + C15593 * C644) *
                 C51250 +
             (C15598 * C3554 + C15595 * C3559 + C15597 * C862 + C15594 * C876 +
              C15596 * C629 + C15593 * C636) *
                 C118) *
                C51169 +
            ((C16181 + C16180 + C16179) * C51250 +
             (C16178 + C16177 + C16176) * C118) *
                C51438) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C986 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C987 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C988) *
               C51438 +
           ((C15636 + C15637 + C15638) * C989 +
            (C15639 + C15640 + C15641) * C986 -
            (C16006 + C16007 + C16008) * C990 -
            (C16009 + C16010 + C16011) * C987 +
            (C16584 + C16585 + C16586) * C991 +
            (C16587 + C16588 + C16589) * C988) *
               C51169) *
              C51323 * C51220 * C51445 +
          (((C16008 + C16007 + C16006) * C990 -
            ((C15641 + C15640 + C15639) * C986 +
             (C15638 + C15637 + C15636) * C989) +
            (C16011 + C16010 + C16009) * C987 -
            (C16586 + C16585 + C16584) * C991 -
            (C16589 + C16588 + C16587) * C988) *
               C51438 +
           ((C16012 + C16013 + C16014) * C990 -
            ((C15642 + C15643 + C15644) * C986 +
             (C15645 + C15646 + C15647) * C989) +
            (C16015 + C16016 + C16017) * C987 -
            (C15598 * C6567 + C15595 * C6572 + C15597 * C1238 + C15594 * C1244 +
             C15596 * C994 + C15593 * C1001) *
                C991 -
            (C15598 * C6573 + C15595 * C6576 + C15597 * C1245 + C15594 * C1250 +
             C15596 * C1002 + C15593 * C1009) *
                C988) *
               C51169) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51349 * C126) * C118 +
                 (C117 * C127 + C51349 * C140) * C51250) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C51323 * C51452 -
               (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
                ((C117 * C306 + C51349 * C315) * C51250 +
                 (C117 * C297 + C51349 * C307) * C118) *
                    C107) *
                   C51323 * C51236) *
                  C291 +
              (((C348 + C347) * C107 + (C346 + C345) * C108 +
                (C344 + C343) * C109 + (C349 + C350) * C110) *
                   C51323 * C51236 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C51323 * C51452) *
                  C292 +
              ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C51323 * C51452 -
               (((C117 * C310 + C51349 * C317) * C51250 +
                 (C117 * C299 + C51349 * C311) * C118) *
                    C110 +
                (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
                   C51323 * C51236) *
                  C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51349 * C126) * C118 +
                (C117 * C127 + C51349 * C140) * C51250) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C51323 * C737 -
              (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
               ((C117 * C306 + C51349 * C315) * C51250 +
                (C117 * C297 + C51349 * C307) * C118) *
                   C107) *
                  C51323 * C738 +
              (((C117 * C627 + C51349 * C632) * C118 +
                (C117 * C633 + C51349 * C642) * C51250) *
                   C107 +
               (C666 + C667) * C108 + (C668 + C669) * C109 +
               (C670 + C671) * C110) *
                  C51323 * C739 -
              (((C117 * C746 + C51349 * C754) * C51250 +
                (C117 * C742 + C51349 * C747) * C118) *
                   C110 +
               ((C117 * C748 + C51349 * C755) * C51250 +
                (C117 * C743 + C51349 * C749) * C118) *
                   C109 +
               ((C117 * C750 + C51349 * C756) * C51250 +
                (C117 * C744 + C51349 * C751) * C118) *
                   C108 +
               ((C117 * C752 + C51349 * C757) * C51250 +
                (C117 * C745 + C51349 * C753) * C118) *
                   C107) *
                  C51323 * C740) *
             C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51323 * C51452 +
          (((C117 * C856 + C51349 * C864) * C990 -
            ((C117 * C306 + C51349 * C315) * C986 +
             (C117 * C297 + C51349 * C307) * C989) +
            (C117 * C865 + C51349 * C880) * C987 -
            (C117 * C1146 + C51349 * C1150) * C991 -
            (C117 * C1151 + C51349 * C1158) * C988) *
               C107 +
           ((C117 * C857 + C51349 * C866) * C990 - (C339 * C986 + C340 * C989) +
            (C117 * C867 + C51349 * C881) * C987 -
            (C117 * C1147 + C51349 * C1152) * C991 -
            (C117 * C1153 + C51349 * C1159) * C988) *
               C108 +
           ((C117 * C858 + C51349 * C868) * C990 - (C337 * C986 + C338 * C989) +
            (C117 * C869 + C51349 * C882) * C987 -
            (C117 * C1148 + C51349 * C1154) * C991 -
            (C117 * C1155 + C51349 * C1160) * C988) *
               C109 +
           ((C117 * C859 + C51349 * C870) * C990 - (C335 * C986 + C336 * C989) +
            (C117 * C871 + C51349 * C883) * C987 -
            (C117 * C1149 + C51349 * C1156) * C991 -
            (C117 * C1157 + C51349 * C1161) * C988) *
               C110) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
               C51452 -
           (((C2918 + C2917) * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51236) *
              C291 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            ((C2917 + C2918) * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51236 -
           ((C2592 * C51169 + C2894 * C51438) * C8168 +
            (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C51452) *
              C292 +
          (((C188 * C51438 + C189 * C51169) * C8166 +
            (C2440 * C51438 + C2594 * C51169) * C8167 +
            (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
               C51452 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C51438) *
                C8168 +
            ((C671 + C670) * C51169 + C2592 * C51438) * C8167 +
            (C351 * C51169 + C352 * C51438) * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           C8622 * C8168) *
              C737 -
          (C8740 * C8168 + (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
           (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
              C738 +
          (C8622 * C8166 + ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
           ((C8741 + C8742) * C51438 + (C8623 + C8624) * C51169) * C8168) *
              C739 -
          ((((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51169 +
            ((C117 * C8726 + C51349 * C8729) * C51250 +
             (C117 * C8723 + C51349 * C8727) * C118) *
                C51438) *
               C8168 +
           ((C8624 + C8623) * C51169 + (C8742 + C8741) * C51438) * C8167 +
           C8740 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C51438 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51169) *
               C8166 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51438 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51169) *
               C8167 +
           ((C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C51438 +
            (C9072 + C9073 - C9074 - C9075 + C9082 + C9083) * C51169) *
               C8168) *
              C51452 +
          (((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C51438 +
            (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51169) *
               C8166 +
           ((C9240 - (C9239 + C9238) + C9241 - C9248 - C9249) * C51438 +
            (C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51169) *
               C8167 +
           ((C8913 * C990 - (C3036 * C986 + C3035 * C989) + C8914 * C987 -
             (C117 * C9229 + C51349 * C9231) * C991 -
             (C117 * C9232 + C51349 * C9235) * C988) *
                C51438 +
            (C8915 * C990 - (C2912 * C986 + C2911 * C989) + C8916 * C987 -
             (C117 * C9230 + C51349 * C9233) * C991 -
             (C117 * C9234 + C51349 * C9236) * C988) *
                C51169) *
               C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51438 +
            ((C15636 + C15637 + C15638) * C118 +
             (C15639 + C15640 + C15641) * C51250) *
                C51169) *
               C51323 * C51452 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51169 +
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51250 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C118) *
                C51438) *
               C51323 * C51236) *
              C291 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51438 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51169) *
               C51323 * C51236 -
           (((C15642 + C15643 + C15644) * C51250 +
             (C15645 + C15646 + C15647) * C118) *
                C51169 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51438) *
               C51323 * C51452) *
              C292 +
          ((((C15647 + C15646 + C15645) * C118 +
             (C15644 + C15643 + C15642) * C51250) *
                C51438 +
            ((C15648 + C15649 + C15650) * C118 +
             (C15651 + C15652 + C15653) * C51250) *
                C51169) *
               C51323 * C51452 -
           (((C15598 * C1157 + C15595 * C1161 + C15597 * C871 + C15594 * C883 +
              C15596 * C300 + C15593 * C312) *
                 C51250 +
             (C15598 * C1149 + C15595 * C1156 + C15597 * C859 + C15594 * C870 +
              C15596 * C294 + C15593 * C301) *
                 C118) *
                C51169 +
            ((C15835 + C15834 + C15833) * C51250 +
             (C15832 + C15831 + C15830) * C118) *
                C51438) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51438 +
           ((C15636 + C15637 + C15638) * C118 +
            (C15639 + C15640 + C15641) * C51250) *
               C51169) *
              C51323 * C737 -
          (((C15824 + C15825 + C15826) * C51250 +
            (C15827 + C15828 + C15829) * C118) *
               C51169 +
           ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
             C15596 * C306 + C15593 * C315) *
                C51250 +
            (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
             C15596 * C297 + C15593 * C307) *
                C118) *
               C51438) *
              C51323 * C738 +
          (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
             C15598 * C3552 + C15595 * C3555) *
                C118 +
            (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
             C15598 * C3556 + C15595 * C3561) *
                C51250) *
               C51438 +
           ((C16176 + C16177 + C16178) * C118 +
            (C16179 + C16180 + C16181) * C51250) *
               C51169) *
              C51323 * C739 -
          (((C15598 * C9234 + C15595 * C9236 + C15597 * C3190 + C15594 * C3194 +
             C15596 * C750 + C15593 * C756) *
                C51250 +
            (C15598 * C9230 + C15595 * C9233 + C15597 * C3185 + C15594 * C3189 +
             C15596 * C744 + C15593 * C751) *
                C118) *
               C51169 +
           ((C15598 * C9232 + C15595 * C9235 + C15597 * C3188 + C15594 * C3193 +
             C15596 * C752 + C15593 * C757) *
                C51250 +
            (C15598 * C9229 + C15595 * C9231 + C15597 * C3184 + C15594 * C3187 +
             C15596 * C745 + C15593 * C753) *
                C118) *
               C51438) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C986 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C987 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C988) *
               C51438 +
           ((C15636 + C15637 + C15638) * C989 +
            (C15639 + C15640 + C15641) * C986 -
            (C16006 + C16007 + C16008) * C990 -
            (C16009 + C16010 + C16011) * C987 +
            (C16584 + C16585 + C16586) * C991 +
            (C16587 + C16588 + C16589) * C988) *
               C51169) *
              C51323 * C51452 +
          (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
             C15598 * C3674 + C15595 * C3677) *
                C990 -
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C986 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C989) +
            (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
             C15598 * C3678 + C15595 * C3683) *
                C987 -
            (C15598 * C14009 + C15595 * C14011 + C15597 * C3674 +
             C15594 * C3677 + C15596 * C1146 + C15593 * C1150) *
                C991 -
            (C15598 * C14012 + C15595 * C14015 + C15597 * C3678 +
             C15594 * C3683 + C15596 * C1151 + C15593 * C1158) *
                C988) *
               C51438 +
           ((C15596 * C857 + C15593 * C866 + C15597 * C1147 + C15594 * C1152 +
             C15598 * C3675 + C15595 * C3679) *
                C990 -
            ((C15824 + C15825 + C15826) * C986 +
             (C15827 + C15828 + C15829) * C989) +
            (C15596 * C867 + C15593 * C881 + C15597 * C1153 + C15594 * C1159 +
             C15598 * C3680 + C15595 * C3684) *
                C987 -
            (C15598 * C16735 + C15595 * C16736 + C15597 * C3675 +
             C15594 * C3679 + C15596 * C1147 + C15593 * C1152) *
                C991 -
            (C15598 * C16737 + C15595 * C16738 + C15597 * C3680 +
             C15594 * C3684 + C15596 * C1153 + C15593 * C1159) *
                C988) *
               C51169) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51349 * C126) * C452 +
                (C117 * C127 + C51349 * C140) * C51454 -
                (C117 * C454 + C51349 * C460) * C453 -
                (C117 * C461 + C51349 * C472) * C51262) *
                   C107 +
               (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
                  C51323 * C51220 * C291 +
              ((C513 - (C480 + C479) + C514) * C107 +
               (C515 - (C486 + C485) + C516) * C108 +
               (C517 - (C492 + C491) + C518) * C109 +
               (C519 - (C499 + C500) + C520) * C110) *
                  C51323 * C51220 * C292 +
              (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
               (C176 * C452 + C177 * C51454 -
                (C117 * C459 + C51349 * C470) * C453 -
                (C117 * C471 + C51349 * C477) * C51262) *
                   C110) *
                  C51323 * C51220 * C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51349 * C126) * C452 +
                (C117 * C127 + C51349 * C140) * C51454 -
                (C117 * C454 + C51349 * C460) * C453 -
                (C117 * C461 + C51349 * C472) * C51262) *
                   C107 +
               (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
                  C51323 * C622 +
              (((C117 * C856 + C51349 * C864) * C453 -
                ((C117 * C306 + C51349 * C315) * C51454 +
                 (C117 * C297 + C51349 * C307) * C452) +
                (C117 * C865 + C51349 * C880) * C51262) *
                   C107 +
               ((C117 * C857 + C51349 * C866) * C453 -
                (C339 * C51454 + C340 * C452) +
                (C117 * C867 + C51349 * C881) * C51262) *
                   C108 +
               ((C117 * C858 + C51349 * C868) * C453 -
                (C337 * C51454 + C338 * C452) +
                (C117 * C869 + C51349 * C882) * C51262) *
                   C109 +
               ((C117 * C859 + C51349 * C870) * C453 -
                (C335 * C51454 + C336 * C452) +
                (C117 * C871 + C51349 * C883) * C51262) *
                   C110) *
                  C51323 * C623 +
              (((C117 * C627 + C51349 * C632) * C452 +
                (C117 * C633 + C51349 * C642) * C51454 -
                (C117 * C860 + C51349 * C872) * C453 -
                (C117 * C873 + C51349 * C884) * C51262) *
                   C107 +
               (C660 * C452 + C661 * C51454 -
                (C117 * C861 + C51349 * C874) * C453 -
                (C117 * C875 + C51349 * C885) * C51262) *
                   C108 +
               (C662 * C452 + C663 * C51454 -
                (C117 * C862 + C51349 * C876) * C453 -
                (C117 * C877 + C51349 * C886) * C51262) *
                   C109 +
               (C664 * C452 + C665 * C51454 -
                (C117 * C863 + C51349 * C878) * C453 -
                (C117 * C879 + C51349 * C887) * C51262) *
                   C110) *
                  C51323 * C624) *
             C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51349 * C126) * C1232 +
           (C117 * C127 + C51349 * C140) * C1228 -
           (C117 * C454 + C51349 * C460) * C1233 -
           (C117 * C461 + C51349 * C472) * C1229 +
           (C117 * C992 + C51349 * C997) * C1234 +
           (C117 * C998 + C51349 * C1007) * C1230 -
           (C117 * C1236 + C51349 * C1240) * C1235 -
           (C117 * C1241 + C51349 * C1248) * C1231) *
              C107 +
          (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
           C1037 * C1234 + C1038 * C1230 -
           (C117 * C1237 + C51349 * C1242) * C1235 -
           (C117 * C1243 + C51349 * C1249) * C1231) *
              C108 +
          (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
           C1039 * C1234 + C1040 * C1230 -
           (C117 * C1238 + C51349 * C1244) * C1235 -
           (C117 * C1245 + C51349 * C1250) * C1231) *
              C109 +
          (C172 * C1232 + C173 * C1228 - C509 * C1233 - C510 * C1229 +
           C1041 * C1234 + C1042 * C1230 -
           (C117 * C1239 + C51349 * C1246) * C1235 -
           (C117 * C1247 + C51349 * C1251) * C1231) *
              C110) *
         C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           ((C3206 + C3205 - C3231 - C3232) * C51438 +
            (C3212 + C3211 - C3233 - C3234) * C51169) *
               C8168) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C51438 +
            (C515 - (C486 + C485) + C516) * C51169) *
               C8166 +
           (C4180 * C51438 + C4181 * C51169) * C8167 +
           ((C3233 - (C3211 + C3212) + C3234) * C51438 +
            (C3235 - (C3217 + C3218) + C3236) * C51169) *
               C8168) *
              C51220 * C292 +
          ((C523 * C51438 + C524 * C51169) * C8166 +
           (C2747 * C51438 + (C1608 + C1607 - C1621 - C1622) * C51169) * C8167 +
           ((C3218 + C3217 - C3235 - C3236) * C51438 +
            (C664 * C452 + C665 * C51454 -
             (C117 * C863 + C51349 * C878) * C453 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           C8925 * C8168) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C51438 + C4180 * C51169) *
               C8166 +
           ((C3231 - (C3205 + C3206) + C3232) * C51438 +
            (C3233 - (C3211 + C3212) + C3234) * C51169) *
               C8167 +
           ((C8919 - (C8901 + C8902) + C8920) * C51438 +
            (C8921 - (C8907 + C8908) + C8922) * C51169) *
               C8168) *
              C623 +
          (C8925 * C8166 +
           ((C8902 + C8901 - C8919 - C8920) * C51438 +
            (C8908 + C8907 - C8921 - C8922) * C51169) *
               C8167 +
           ((C8738 * C452 + C8739 * C51454 -
             (C117 * C8888 + C51349 * C8890) * C453 -
             (C117 * C8891 + C51349 * C8894) * C51262) *
                C51438 +
            (C8619 * C452 + C8620 * C51454 -
             (C117 * C8889 + C51349 * C8892) * C453 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1232 +
            (C117 * C127 + C51349 * C140) * C1228 -
            (C117 * C454 + C51349 * C460) * C1233 -
            (C117 * C461 + C51349 * C472) * C1229 +
            (C117 * C992 + C51349 * C997) * C1234 +
            (C117 * C998 + C51349 * C1007) * C1230 -
            (C117 * C1236 + C51349 * C1240) * C1235 -
            (C117 * C1241 + C51349 * C1248) * C1231) *
               C51438 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51349 * C1242) * C1235 -
            (C117 * C1243 + C51349 * C1249) * C1231) *
               C51169) *
              C8166 +
          ((C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
            C3573 * C1234 + C3574 * C1230 -
            (C117 * C3674 + C51349 * C3677) * C1235 -
            (C117 * C3678 + C51349 * C3683) * C1231) *
               C51438 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3399 * C1234 + C3400 * C1230 -
            (C117 * C3675 + C51349 * C3679) * C1235 -
            (C117 * C3680 + C51349 * C3684) * C1231) *
               C51169) *
              C8167 +
          ((C2910 * C1232 + C2909 * C1228 - C3223 * C1233 - C3224 * C1229 +
            C9246 * C1234 + C9247 * C1230 -
            (C117 * C9347 + C51349 * C9349) * C1235 -
            (C117 * C9350 + C51349 * C9353) * C1231) *
               C51438 +
           (C660 * C1232 + C661 * C1228 - C3225 * C1233 - C3226 * C1229 +
            C9080 * C1234 + C9081 * C1230 -
            (C117 * C9348 + C51349 * C9351) * C1235 -
            (C117 * C9352 + C51349 * C9354) * C1231) *
               C51169) *
              C8168) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51438 +
           ((C15636 + C15637 + C15638) * C452 +
            (C15639 + C15640 + C15641) * C51454 -
            (C16006 + C16007 + C16008) * C453 -
            (C16009 + C16010 + C16011) * C51262) *
               C51169) *
              C51323 * C51220 * C291 +
          (((C16008 + C16007 + C16006) * C453 -
            ((C15641 + C15640 + C15639) * C51454 +
             (C15638 + C15637 + C15636) * C452) +
            (C16011 + C16010 + C16009) * C51262) *
               C51438 +
           ((C16012 + C16013 + C16014) * C453 -
            ((C15642 + C15643 + C15644) * C51454 +
             (C15645 + C15646 + C15647) * C452) +
            (C16015 + C16016 + C16017) * C51262) *
               C51169) *
              C51323 * C51220 * C292 +
          (((C15647 + C15646 + C15645) * C452 +
            (C15644 + C15643 + C15642) * C51454 -
            (C16014 + C16013 + C16012) * C453 -
            (C16017 + C16016 + C16015) * C51262) *
               C51438 +
           ((C15648 + C15649 + C15650) * C452 +
            (C15651 + C15652 + C15653) * C51454 -
            (C15598 * C1239 + C15595 * C1246 + C15597 * C995 + C15594 * C1003 +
             C15596 * C457 + C15593 * C466) *
                C453 -
            (C15598 * C1247 + C15595 * C1251 + C15597 * C1004 + C15594 * C1010 +
             C15596 * C467 + C15593 * C475) *
                C51262) *
               C51169) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51438 +
           ((C15636 + C15637 + C15638) * C452 +
            (C15639 + C15640 + C15641) * C51454 -
            (C16006 + C16007 + C16008) * C453 -
            (C16009 + C16010 + C16011) * C51262) *
               C51169) *
              C51323 * C622 +
          (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
             C15598 * C3674 + C15595 * C3677) *
                C453 -
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51454 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C452) +
            (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
             C15598 * C3678 + C15595 * C3683) *
                C51262) *
               C51438 +
           ((C15596 * C857 + C15593 * C866 + C15597 * C1147 + C15594 * C1152 +
             C15598 * C3675 + C15595 * C3679) *
                C453 -
            ((C15824 + C15825 + C15826) * C51454 +
             (C15827 + C15828 + C15829) * C452) +
            (C15596 * C867 + C15593 * C881 + C15597 * C1153 + C15594 * C1159 +
             C15598 * C3680 + C15595 * C3684) *
                C51262) *
               C51169) *
              C51323 * C623 +
          (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
             C15598 * C3552 + C15595 * C3555) *
                C452 +
            (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
             C15598 * C3556 + C15595 * C3561) *
                C51454 -
            (C15598 * C9347 + C15595 * C9349 + C15597 * C3552 + C15594 * C3555 +
             C15596 * C860 + C15593 * C872) *
                C453 -
            (C15598 * C9350 + C15595 * C9353 + C15597 * C3556 + C15594 * C3561 +
             C15596 * C873 + C15593 * C884) *
                C51262) *
               C51438 +
           ((C16176 + C16177 + C16178) * C452 +
            (C16179 + C16180 + C16181) * C51454 -
            (C15598 * C9348 + C15595 * C9351 + C15597 * C3553 + C15594 * C3557 +
             C15596 * C861 + C15593 * C874) *
                C453 -
            (C15598 * C9352 + C15595 * C9354 + C15597 * C3558 + C15594 * C3562 +
             C15596 * C875 + C15593 * C885) *
                C51262) *
               C51169) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
            C15598 * C992 + C15595 * C997) *
               C1232 +
           (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
            C15598 * C998 + C15595 * C1007) *
               C1228 -
           (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
            C15596 * C454 + C15593 * C460) *
               C1233 -
           (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
            C15596 * C461 + C15593 * C472) *
               C1229 +
           (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
            C15598 * C6565 + C15595 * C6568) *
               C1234 +
           (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
            C15598 * C6569 + C15595 * C6574) *
               C1230 -
           (C15598 * C16837 + C15595 * C16839 + C15597 * C6565 +
            C15594 * C6568 + C15596 * C1236 + C15593 * C1240) *
               C1235 -
           (C15598 * C16840 + C15595 * C16843 + C15597 * C6569 +
            C15594 * C6574 + C15596 * C1241 + C15593 * C1248) *
               C1231) *
              C51438 +
          ((C15636 + C15637 + C15638) * C1232 +
           (C15639 + C15640 + C15641) * C1228 -
           (C16006 + C16007 + C16008) * C1233 -
           (C16009 + C16010 + C16011) * C1229 +
           (C16584 + C16585 + C16586) * C1234 +
           (C16587 + C16588 + C16589) * C1230 -
           (C15598 * C16838 + C15595 * C16841 + C15597 * C6566 +
            C15594 * C6570 + C15596 * C1237 + C15593 * C1242) *
               C1235 -
           (C15598 * C16842 + C15595 * C16844 + C15597 * C6571 +
            C15594 * C6575 + C15596 * C1243 + C15593 * C1249) *
               C1231) *
              C51169) *
         C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C1725 + C1726 - C1727 - C1728) * C51169) *
               C8166 +
           ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) * C8167 +
           ((C5046 + C5045 - C5044 - C5047) * C51438 +
            (C4534 + C4533 - C4532 - C4535) * C51169) *
               C8168) *
              C51220 * C51497 +
          (((C1727 - (C1726 + C1725) + C1728) * C51438 +
            (C1731 - (C1730 + C1729) + C1732) * C51169) *
               C8166 +
           (C4544 * C51438 + C4545 * C51169) * C8167 +
           ((C4532 - (C4533 + C4534) + C4535) * C51438 +
            (C4536 - (C4537 + C4538) + C4539) * C51169) *
               C8168) *
              C51220 * C51483 +
          ((C1745 * C51438 + C1746 * C51169) * C8166 +
           (C4330 * C51438 + (C1887 + C1886 - C1885 - C1888) * C51169) * C8167 +
           ((C4538 + C4537 - C4536 - C4539) * C51438 +
            (C664 * C1722 + C665 * C1720 -
             (C117 * C863 + C51349 * C878) * C1723 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C8168) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1722 +
            (C117 * C127 + C51349 * C140) * C1720 -
            (C117 * C454 + C51349 * C460) * C1723 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51323 * C51220 * C51497 +
          ((C1727 - (C1726 + C1725) + C1728) * C107 +
           (C1731 - (C1730 + C1729) + C1732) * C108 +
           (C1735 - (C1734 + C1733) + C1736) * C109 +
           (C1737 - (C1738 + C1739) + C1740) * C110) *
              C51323 * C51220 * C51483 +
          (C1745 * C107 + C1746 * C108 +
           (C1739 + C1738 - C1737 - C1740) * C109 +
           (C176 * C1722 + C177 * C1720 -
            (C117 * C459 + C51349 * C470) * C1723 -
            (C117 * C471 + C51349 * C477) * C51262) *
               C110) *
              C51323 * C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1722 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C1720 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1723 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51438 +
           ((C15636 + C15637 + C15638) * C1722 +
            (C15639 + C15640 + C15641) * C1720 -
            (C16006 + C16007 + C16008) * C1723 -
            (C16009 + C16010 + C16011) * C51262) *
               C51169) *
              C51323 * C51220 * C51497 +
          (((C16008 + C16007 + C16006) * C1723 -
            ((C15641 + C15640 + C15639) * C1720 +
             (C15638 + C15637 + C15636) * C1722) +
            (C16011 + C16010 + C16009) * C51262) *
               C51438 +
           ((C16012 + C16013 + C16014) * C1723 -
            ((C15642 + C15643 + C15644) * C1720 +
             (C15645 + C15646 + C15647) * C1722) +
            (C16015 + C16016 + C16017) * C51262) *
               C51169) *
              C51323 * C51220 * C51483 +
          (((C15647 + C15646 + C15645) * C1722 +
            (C15644 + C15643 + C15642) * C1720 -
            (C16014 + C16013 + C16012) * C1723 -
            (C16017 + C16016 + C16015) * C51262) *
               C51438 +
           ((C15648 + C15649 + C15650) * C1722 +
            (C15651 + C15652 + C15653) * C1720 -
            (C15598 * C1239 + C15595 * C1246 + C15597 * C995 + C15594 * C1003 +
             C15596 * C457 + C15593 * C466) *
                C1723 -
            (C15598 * C1247 + C15595 * C1251 + C15597 * C1004 + C15594 * C1010 +
             C15596 * C467 + C15593 * C475) *
                C51262) *
               C51169) *
              C51323 * C51220 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51438 +
             (C1725 + C1726 - C1727 - C1728) * C51169) *
                C8166 +
            ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) *
                C8167 +
            ((C5046 + C5045 - C5044 - C5047) * C51438 + C10193 * C51169) *
                C8168) *
               C51452 +
           (((C4527 - (C4526 + C4525) + C4528) * C51438 + C4544 * C51169) *
                C8166 +
            ((C5044 - (C5045 + C5046) + C5047) * C51438 + C10194 * C51169) *
                C8167 +
            ((C8913 * C1723 - (C3036 * C1720 + C3035 * C1722) +
              C8914 * C51262) *
                 C51438 +
             (C10187 - (C10188 + C10189) + C10190) * C51169) *
                C8168) *
               C51236) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51438 +
             (C1731 - (C1730 + C1729) + C1732) * C51169) *
                C8166 +
            (C4544 * C51438 + C4545 * C51169) * C8167 +
            (C10194 * C51438 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
                C8168) *
               C51452 +
           ((C4543 * C51438 + C4330 * C51169) * C8166 +
            (C10193 * C51438 + (C4538 + C4537 - C4536 - C4539) * C51169) *
                C8167 +
            ((C10189 + C10188 - C10187 - C10190) * C51438 +
             (C2913 * C1722 + C2914 * C1720 -
              (C117 * C3186 + C51349 * C3191) * C1723 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51323 * C51452 +
           (((C117 * C856 + C51349 * C864) * C1723 -
             ((C117 * C306 + C51349 * C315) * C1720 +
              (C117 * C297 + C51349 * C307) * C1722) +
             (C117 * C865 + C51349 * C880) * C51262) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51323 * C51236) *
              C1456 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51323 * C51452 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51349 * C1589) * C1723 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C110) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C1722 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C1720 -
             (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
              C15596 * C454 + C15593 * C460) *
                 C1723 -
             (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
              C15596 * C461 + C15593 * C472) *
                 C51262) *
                C51438 +
            ((C15636 + C15637 + C15638) * C1722 +
             (C15639 + C15640 + C15641) * C1720 -
             (C16006 + C16007 + C16008) * C1723 -
             (C16009 + C16010 + C16011) * C51262) *
                C51169) *
               C51323 * C51452 +
           (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
              C15598 * C3674 + C15595 * C3677) *
                 C1723 -
             ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
               C15596 * C306 + C15593 * C315) *
                  C1720 +
              (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
               C15596 * C297 + C15593 * C307) *
                  C1722) +
             (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
              C15598 * C3678 + C15595 * C3683) *
                 C51262) *
                C51438 +
            ((C17344 + C17345 + C17346) * C1723 -
             ((C15824 + C15825 + C15826) * C1720 +
              (C15827 + C15828 + C15829) * C1722) +
             (C17347 + C17348 + C17349) * C51262) *
                C51169) *
               C51323 * C51236) *
              C1456 +
          ((((C16008 + C16007 + C16006) * C1723 -
             ((C15641 + C15640 + C15639) * C1720 +
              (C15638 + C15637 + C15636) * C1722) +
             (C16011 + C16010 + C16009) * C51262) *
                C51438 +
            ((C16012 + C16013 + C16014) * C1723 -
             ((C15642 + C15643 + C15644) * C1720 +
              (C15645 + C15646 + C15647) * C1722) +
             (C16015 + C16016 + C16017) * C51262) *
                C51169) *
               C51323 * C51452 +
           (((C15829 + C15828 + C15827) * C1722 +
             (C15826 + C15825 + C15824) * C1720 -
             (C17346 + C17345 + C17344) * C1723 -
             (C17349 + C17348 + C17347) * C51262) *
                C51438 +
            ((C15830 + C15831 + C15832) * C1722 +
             (C15833 + C15834 + C15835) * C1720 -
             (C15598 * C3676 + C15595 * C3681 + C15597 * C1148 +
              C15594 * C1154 + C15596 * C858 + C15593 * C868) *
                 C1723 -
             (C15598 * C3682 + C15595 * C3685 + C15597 * C1155 +
              C15594 * C1160 + C15596 * C869 + C15593 * C882) *
                 C51262) *
                C51169) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C51438 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51169) *
               C8166 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51438 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51169) *
               C8167 +
           ((C2910 * C1989 + C2909 * C51499 - C3223 * C1990 - C3224 * C51489 +
             C9246 * C1991 + C9247 * C1988) *
                C51438 +
            (C10341 + C10342 - C10343 - C10344 + C10345 + C10346) * C51169) *
               C8168) *
              C51220 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51438 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51169) *
               C8166 +
           ((C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51438 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C51169) *
               C8167 +
           ((C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51438 +
            (C3227 * C1990 - (C663 * C51499 + C662 * C1989) + C3228 * C51489 -
             (C117 * C3554 + C51349 * C3559) * C1991 -
             (C117 * C3560 + C51349 * C3563) * C1988) *
                C51169) *
               C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51323 * C51220 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C107 +
           (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C108 +
           (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C109 +
           (C511 * C1990 - (C174 * C51499 + C175 * C1989) + C512 * C51489 -
            (C117 * C996 + C51349 * C1005) * C1991 -
            (C117 * C1006 + C51349 * C1011) * C1988) *
               C110) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51499 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51489 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C1991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C1988) *
               C51438 +
           ((C15636 + C15637 + C15638) * C1989 +
            (C15639 + C15640 + C15641) * C51499 -
            (C16006 + C16007 + C16008) * C1990 -
            (C16009 + C16010 + C16011) * C51489 +
            (C16584 + C16585 + C16586) * C1991 +
            (C16587 + C16588 + C16589) * C1988) *
               C51169) *
              C51323 * C51220 * C1456 +
          (((C16008 + C16007 + C16006) * C1990 -
            ((C15641 + C15640 + C15639) * C51499 +
             (C15638 + C15637 + C15636) * C1989) +
            (C16011 + C16010 + C16009) * C51489 -
            (C16586 + C16585 + C16584) * C1991 -
            (C16589 + C16588 + C16587) * C1988) *
               C51438 +
           ((C16012 + C16013 + C16014) * C1990 -
            ((C15642 + C15643 + C15644) * C51499 +
             (C15645 + C15646 + C15647) * C1989) +
            (C16015 + C16016 + C16017) * C51489 -
            (C15598 * C6567 + C15595 * C6572 + C15597 * C1238 + C15594 * C1244 +
             C15596 * C994 + C15593 * C1001) *
                C1991 -
            (C15598 * C6573 + C15595 * C6576 + C15597 * C1245 + C15594 * C1250 +
             C15596 * C1002 + C15593 * C1009) *
                C1988) *
               C51169) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C622 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C623 +
           (((C117 * C627 + C51349 * C632) * C118 +
             (C117 * C633 + C51349 * C642) * C51250) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51323 * C624) *
              C51445 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C623 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C622 -
           (((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51323 * C51220 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51323 * C51220 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51323 * C51220 * C115 -
          (((C117 * C138 + C51349 * C146) * C51250 +
            (C117 * C125 + C51349 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
              C51220 * C113 -
          ((C2592 * C51169 + C2894 * C51438) * C8168 +
           (C352 * C51169 + C2593 * C51438) * C8167 +
           ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
              C51220 * C114 +
          ((C188 * C51438 + C189 * C51169) * C8166 +
           (C2440 * C51438 + C2594 * C51169) * C8167 +
           (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
              C51220 * C115 -
          ((((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C51169 +
            (C671 + C670) * C51438) *
               C8168 +
           ((C350 + C349) * C51169 + C351 * C51438) * C8167 +
           (C190 * C51169 + C191 * C51438) * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C622 -
           ((C8610 * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C623 +
           (C8622 * C8166 +
            ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
            (((C117 * C3020 + C51349 * C3026) * C118 +
              (C117 * C3025 + C51349 * C3029) * C51250) *
                 C51438 +
             (C8623 + C8624) * C51169) *
                C8168) *
               C624) *
              C51445 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C623 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C622 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C51438) *
                C8168 +
            ((C2920 + C2919) * C51169 + C8610 * C51438) * C8167 +
            C8621 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51438 +
           ((C15636 + C15637 + C15638) * C118 +
            (C15639 + C15640 + C15641) * C51250) *
               C51169) *
              C51323 * C51220 * C113 -
          (((C15642 + C15643 + C15644) * C51250 +
            (C15645 + C15646 + C15647) * C118) *
               C51169 +
           ((C15641 + C15640 + C15639) * C51250 +
            (C15638 + C15637 + C15636) * C118) *
               C51438) *
              C51323 * C51220 * C114 +
          (((C15647 + C15646 + C15645) * C118 +
            (C15644 + C15643 + C15642) * C51250) *
               C51438 +
           ((C15648 + C15649 + C15650) * C118 +
            (C15651 + C15652 + C15653) * C51250) *
               C51169) *
              C51323 * C51220 * C115 -
          (((C15598 * C1006 + C15595 * C1011 + C15597 * C469 + C15594 * C476 +
             C15596 * C134 + C15593 * C144) *
                C51250 +
            (C15598 * C996 + C15595 * C1005 + C15597 * C458 + C15594 * C468 +
             C15596 * C123 + C15593 * C135) *
                C118) *
               C51169 +
           ((C15653 + C15652 + C15651) * C51250 +
            (C15650 + C15649 + C15648) * C118) *
               C51438) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51438 +
            ((C15636 + C15637 + C15638) * C118 +
             (C15639 + C15640 + C15641) * C51250) *
                C51169) *
               C51323 * C622 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51169 +
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51250 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C118) *
                C51438) *
               C51323 * C623 +
           (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
              C15598 * C3552 + C15595 * C3555) *
                 C118 +
             (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
              C15598 * C3556 + C15595 * C3561) *
                 C51250) *
                C51438 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51169) *
               C51323 * C624) *
              C51445 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51438 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51169) *
               C51323 * C623 -
           (((C15642 + C15643 + C15644) * C51250 +
             (C15645 + C15646 + C15647) * C118) *
                C51169 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51438) *
               C51323 * C622 -
           (((C15598 * C3560 + C15595 * C3563 + C15597 * C877 + C15594 * C886 +
              C15596 * C637 + C15593 * C644) *
                 C51250 +
             (C15598 * C3554 + C15595 * C3559 + C15597 * C862 + C15594 * C876 +
              C15596 * C629 + C15593 * C636) *
                 C118) *
                C51169 +
            ((C16181 + C16180 + C16179) * C51250 +
             (C16178 + C16177 + C16176) * C118) *
                C51438) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51323 * C737 -
          (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
           ((C117 * C306 + C51349 * C315) * C51250 +
            (C117 * C297 + C51349 * C307) * C118) *
               C107) *
              C51323 * C738 +
          (((C117 * C627 + C51349 * C632) * C118 +
            (C117 * C633 + C51349 * C642) * C51250) *
               C107 +
           (C666 + C667) * C108 + (C668 + C669) * C109 + (C670 + C671) * C110) *
              C51323 * C739 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C110 +
           ((C117 * C748 + C51349 * C755) * C51250 +
            (C117 * C743 + C51349 * C749) * C118) *
               C109 +
           ((C117 * C750 + C51349 * C756) * C51250 +
            (C117 * C744 + C51349 * C751) * C118) *
               C108 +
           ((C117 * C752 + C51349 * C757) * C51250 +
            (C117 * C745 + C51349 * C753) * C118) *
               C107) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C51452 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C51236) *
              C291 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C51236 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C51452) *
              C292 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51323 * C51452 -
           (((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
               C51452 -
           (((C2918 + C2917) * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51236) *
              C291 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            ((C2917 + C2918) * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51236 -
           ((C2592 * C51169 + C2894 * C51438) * C8168 +
            (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C51452) *
              C292 +
          (((C188 * C51438 + C189 * C51169) * C8166 +
            (C2440 * C51438 + C2594 * C51169) * C8167 +
            (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
               C51452 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C51438) *
                C8168 +
            ((C671 + C670) * C51169 + C2592 * C51438) * C8167 +
            (C351 * C51169 + C352 * C51438) * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           C8622 * C8168) *
              C737 -
          (C8740 * C8168 + (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
           (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
              C738 +
          (C8622 * C8166 + ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
           ((C8741 + C8742) * C51438 + (C8623 + C8624) * C51169) * C8168) *
              C739 -
          ((((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51169 +
            ((C117 * C8726 + C51349 * C8729) * C51250 +
             (C117 * C8723 + C51349 * C8727) * C118) *
                C51438) *
               C8168 +
           ((C8624 + C8623) * C51169 + (C8742 + C8741) * C51438) * C8167 +
           C8740 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51438 +
            ((C15636 + C15637 + C15638) * C118 +
             (C15639 + C15640 + C15641) * C51250) *
                C51169) *
               C51323 * C51452 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51169 +
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51250 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C118) *
                C51438) *
               C51323 * C51236) *
              C291 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51438 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51169) *
               C51323 * C51236 -
           (((C15642 + C15643 + C15644) * C51250 +
             (C15645 + C15646 + C15647) * C118) *
                C51169 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51438) *
               C51323 * C51452) *
              C292 +
          ((((C15647 + C15646 + C15645) * C118 +
             (C15644 + C15643 + C15642) * C51250) *
                C51438 +
            ((C15648 + C15649 + C15650) * C118 +
             (C15651 + C15652 + C15653) * C51250) *
                C51169) *
               C51323 * C51452 -
           (((C15598 * C1157 + C15595 * C1161 + C15597 * C871 + C15594 * C883 +
              C15596 * C300 + C15593 * C312) *
                 C51250 +
             (C15598 * C1149 + C15595 * C1156 + C15597 * C859 + C15594 * C870 +
              C15596 * C294 + C15593 * C301) *
                 C118) *
                C51169 +
            ((C15835 + C15834 + C15833) * C51250 +
             (C15832 + C15831 + C15830) * C118) *
                C51438) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51438 +
           ((C15636 + C15637 + C15638) * C118 +
            (C15639 + C15640 + C15641) * C51250) *
               C51169) *
              C51323 * C737 -
          (((C15824 + C15825 + C15826) * C51250 +
            (C15827 + C15828 + C15829) * C118) *
               C51169 +
           ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
             C15596 * C306 + C15593 * C315) *
                C51250 +
            (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
             C15596 * C297 + C15593 * C307) *
                C118) *
               C51438) *
              C51323 * C738 +
          (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
             C15598 * C3552 + C15595 * C3555) *
                C118 +
            (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
             C15598 * C3556 + C15595 * C3561) *
                C51250) *
               C51438 +
           ((C16176 + C16177 + C16178) * C118 +
            (C16179 + C16180 + C16181) * C51250) *
               C51169) *
              C51323 * C739 -
          (((C15598 * C9234 + C15595 * C9236 + C15597 * C3190 + C15594 * C3194 +
             C15596 * C750 + C15593 * C756) *
                C51250 +
            (C15598 * C9230 + C15595 * C9233 + C15597 * C3185 + C15594 * C3189 +
             C15596 * C744 + C15593 * C751) *
                C118) *
               C51169 +
           ((C15598 * C9232 + C15595 * C9235 + C15597 * C3188 + C15594 * C3193 +
             C15596 * C752 + C15593 * C757) *
                C51250 +
            (C15598 * C9229 + C15595 * C9231 + C15597 * C3184 + C15594 * C3187 +
             C15596 * C745 + C15593 * C753) *
                C118) *
               C51438) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51323 * C622 +
          (((C117 * C856 + C51349 * C864) * C453 -
            ((C117 * C306 + C51349 * C315) * C51454 +
             (C117 * C297 + C51349 * C307) * C452) +
            (C117 * C865 + C51349 * C880) * C51262) *
               C107 +
           ((C117 * C857 + C51349 * C866) * C453 -
            (C339 * C51454 + C340 * C452) +
            (C117 * C867 + C51349 * C881) * C51262) *
               C108 +
           ((C117 * C858 + C51349 * C868) * C453 -
            (C337 * C51454 + C338 * C452) +
            (C117 * C869 + C51349 * C882) * C51262) *
               C109 +
           ((C117 * C859 + C51349 * C870) * C453 -
            (C335 * C51454 + C336 * C452) +
            (C117 * C871 + C51349 * C883) * C51262) *
               C110) *
              C51323 * C623 +
          (((C117 * C627 + C51349 * C632) * C452 +
            (C117 * C633 + C51349 * C642) * C51454 -
            (C117 * C860 + C51349 * C872) * C453 -
            (C117 * C873 + C51349 * C884) * C51262) *
               C107 +
           (C660 * C452 + C661 * C51454 - (C117 * C861 + C51349 * C874) * C453 -
            (C117 * C875 + C51349 * C885) * C51262) *
               C108 +
           (C662 * C452 + C663 * C51454 - (C117 * C862 + C51349 * C876) * C453 -
            (C117 * C877 + C51349 * C886) * C51262) *
               C109 +
           (C664 * C452 + C665 * C51454 - (C117 * C863 + C51349 * C878) * C453 -
            (C117 * C879 + C51349 * C887) * C51262) *
               C110) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51323 * C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C107 +
           (C515 - (C486 + C485) + C516) * C108 +
           (C517 - (C492 + C491) + C518) * C109 +
           (C519 - (C499 + C500) + C520) * C110) *
              C51323 * C51220 * C292 +
          (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
           (C176 * C452 + C177 * C51454 - (C117 * C459 + C51349 * C470) * C453 -
            (C117 * C471 + C51349 * C477) * C51262) *
               C110) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           ((C3206 + C3205 - C3231 - C3232) * C51438 +
            (C3212 + C3211 - C3233 - C3234) * C51169) *
               C8168) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C51438 +
            (C515 - (C486 + C485) + C516) * C51169) *
               C8166 +
           (C4180 * C51438 + C4181 * C51169) * C8167 +
           ((C3233 - (C3211 + C3212) + C3234) * C51438 +
            (C3235 - (C3217 + C3218) + C3236) * C51169) *
               C8168) *
              C51220 * C292 +
          ((C523 * C51438 + C524 * C51169) * C8166 +
           (C2747 * C51438 + (C1608 + C1607 - C1621 - C1622) * C51169) * C8167 +
           ((C3218 + C3217 - C3235 - C3236) * C51438 +
            (C664 * C452 + C665 * C51454 -
             (C117 * C863 + C51349 * C878) * C453 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           C8925 * C8168) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C51438 + C4180 * C51169) *
               C8166 +
           ((C3231 - (C3205 + C3206) + C3232) * C51438 +
            (C3233 - (C3211 + C3212) + C3234) * C51169) *
               C8167 +
           ((C8919 - (C8901 + C8902) + C8920) * C51438 +
            (C8921 - (C8907 + C8908) + C8922) * C51169) *
               C8168) *
              C623 +
          (C8925 * C8166 +
           ((C8902 + C8901 - C8919 - C8920) * C51438 +
            (C8908 + C8907 - C8921 - C8922) * C51169) *
               C8167 +
           ((C8738 * C452 + C8739 * C51454 -
             (C117 * C8888 + C51349 * C8890) * C453 -
             (C117 * C8891 + C51349 * C8894) * C51262) *
                C51438 +
            (C8619 * C452 + C8620 * C51454 -
             (C117 * C8889 + C51349 * C8892) * C453 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51438 +
           ((C15636 + C15637 + C15638) * C452 +
            (C15639 + C15640 + C15641) * C51454 -
            (C16006 + C16007 + C16008) * C453 -
            (C16009 + C16010 + C16011) * C51262) *
               C51169) *
              C51323 * C51220 * C291 +
          (((C16008 + C16007 + C16006) * C453 -
            ((C15641 + C15640 + C15639) * C51454 +
             (C15638 + C15637 + C15636) * C452) +
            (C16011 + C16010 + C16009) * C51262) *
               C51438 +
           ((C16012 + C16013 + C16014) * C453 -
            ((C15642 + C15643 + C15644) * C51454 +
             (C15645 + C15646 + C15647) * C452) +
            (C16015 + C16016 + C16017) * C51262) *
               C51169) *
              C51323 * C51220 * C292 +
          (((C15647 + C15646 + C15645) * C452 +
            (C15644 + C15643 + C15642) * C51454 -
            (C16014 + C16013 + C16012) * C453 -
            (C16017 + C16016 + C16015) * C51262) *
               C51438 +
           ((C15648 + C15649 + C15650) * C452 +
            (C15651 + C15652 + C15653) * C51454 -
            (C15598 * C1239 + C15595 * C1246 + C15597 * C995 + C15594 * C1003 +
             C15596 * C457 + C15593 * C466) *
                C453 -
            (C15598 * C1247 + C15595 * C1251 + C15597 * C1004 + C15594 * C1010 +
             C15596 * C467 + C15593 * C475) *
                C51262) *
               C51169) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51438 +
           ((C15636 + C15637 + C15638) * C452 +
            (C15639 + C15640 + C15641) * C51454 -
            (C16006 + C16007 + C16008) * C453 -
            (C16009 + C16010 + C16011) * C51262) *
               C51169) *
              C51323 * C622 +
          (((C15596 * C856 + C15593 * C864 + C15597 * C1146 + C15594 * C1150 +
             C15598 * C3674 + C15595 * C3677) *
                C453 -
            ((C15598 * C1151 + C15595 * C1158 + C15597 * C865 + C15594 * C880 +
              C15596 * C306 + C15593 * C315) *
                 C51454 +
             (C15598 * C1146 + C15595 * C1150 + C15597 * C856 + C15594 * C864 +
              C15596 * C297 + C15593 * C307) *
                 C452) +
            (C15596 * C865 + C15593 * C880 + C15597 * C1151 + C15594 * C1158 +
             C15598 * C3678 + C15595 * C3683) *
                C51262) *
               C51438 +
           ((C15596 * C857 + C15593 * C866 + C15597 * C1147 + C15594 * C1152 +
             C15598 * C3675 + C15595 * C3679) *
                C453 -
            ((C15824 + C15825 + C15826) * C51454 +
             (C15827 + C15828 + C15829) * C452) +
            (C15596 * C867 + C15593 * C881 + C15597 * C1153 + C15594 * C1159 +
             C15598 * C3680 + C15595 * C3684) *
                C51262) *
               C51169) *
              C51323 * C623 +
          (((C15596 * C627 + C15593 * C632 + C15597 * C860 + C15594 * C872 +
             C15598 * C3552 + C15595 * C3555) *
                C452 +
            (C15596 * C633 + C15593 * C642 + C15597 * C873 + C15594 * C884 +
             C15598 * C3556 + C15595 * C3561) *
                C51454 -
            (C15598 * C9347 + C15595 * C9349 + C15597 * C3552 + C15594 * C3555 +
             C15596 * C860 + C15593 * C872) *
                C453 -
            (C15598 * C9350 + C15595 * C9353 + C15597 * C3556 + C15594 * C3561 +
             C15596 * C873 + C15593 * C884) *
                C51262) *
               C51438 +
           ((C16176 + C16177 + C16178) * C452 +
            (C16179 + C16180 + C16181) * C51454 -
            (C15598 * C9348 + C15595 * C9351 + C15597 * C3553 + C15594 * C3557 +
             C15596 * C861 + C15593 * C874) *
                C453 -
            (C15598 * C9352 + C15595 * C9354 + C15597 * C3558 + C15594 * C3562 +
             C15596 * C875 + C15593 * C885) *
                C51262) *
               C51169) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C1350 -
           (C11295 * C10918 + C11290 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51236) *
              C51497 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51236 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C1350) *
              C51483 +
          ((C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
            C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
               C1350 -
           (((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C51164 * C10918 +
            (C2920 + C2919) * C51164 * C10917 + C2592 * C51164 * C10916 +
            C352 * C51164 * C10915) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C1350 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51236) *
              C51497 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C51236 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C1350) *
              C51483 +
          (((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
            (C2440 * C2434 + C2594 * C2435 + (C349 + C350) * C2436) * C51337) *
               C1350 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C2436 +
             (C671 + C670) * C2435 + C2592 * C2434) *
                C51337 +
            ((C350 + C349) * C2436 + C351 * C2435 + C352 * C2434) * C51466) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51164 * C51466 +
            ((C18578 + C18579 + C18580) * C118 +
             (C18581 + C18582 + C18583) * C51250) *
                C51164 * C51337) *
               C1350 -
           (((C18888 + C18889 + C18890) * C51250 +
             (C18891 + C18892 + C18893) * C118) *
                C51164 * C51337 +
            ((C18583 + C18582 + C18581) * C51250 +
             (C18580 + C18579 + C18578) * C118) *
                C51164 * C51466) *
               C51236) *
              C51497 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51164 * C51466 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51164 * C51337) *
               C51236 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51164 * C51337 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51164 * C51466) *
               C1350) *
              C51483 +
          ((((C15647 + C15646 + C15645) * C118 +
             (C15644 + C15643 + C15642) * C51250) *
                C51164 * C51466 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51164 * C51337) *
               C1350 -
           (((C15598 * C3560 + C15595 * C3563 + C15597 * C877 + C15594 * C886 +
              C15596 * C637 + C15593 * C644) *
                 C51250 +
             (C15598 * C3554 + C15595 * C3559 + C15597 * C862 + C15594 * C876 +
              C15596 * C629 + C15593 * C636) *
                 C118) *
                C51164 * C51337 +
            ((C15835 + C15834 + C15833) * C51250 +
             (C15832 + C15831 + C15830) * C118) *
                C51164 * C51466) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C51498 -
           (C11295 * C10918 + C11290 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51486 +
           (C11214 * C10915 + C11218 * C10916 +
            (C8741 + C8742) * C51164 * C10917 +
            (C11298 + C11299) * C51164 * C10918) *
               C1455) *
              C1456 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51486 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C51498 -
           (((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51164 * C10918 +
            (C8624 + C8623) * C51164 * C10917 + C11216 * C10916 +
            C11217 * C10915) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C51498 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51486 +
           (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
            ((C3037 + C3038) * C2434 + (C2917 + C2918) * C2435 +
             (C2919 + C2920) * C2436) *
                C51337) *
               C1455) *
              C1456 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C51486 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C51498 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C2436 +
             (C2920 + C2919) * C2435 + (C2918 + C2917) * C2434) *
                C51337 +
            ((C671 + C670) * C2436 + C2592 * C2435 + C2894 * C2434) * C51466) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51164 * C51466 +
            ((C18578 + C18579 + C18580) * C118 +
             (C18581 + C18582 + C18583) * C51250) *
                C51164 * C51337) *
               C51498 -
           (((C18888 + C18889 + C18890) * C51250 +
             (C18891 + C18892 + C18893) * C118) *
                C51164 * C51337 +
            ((C18583 + C18582 + C18581) * C51250 +
             (C18580 + C18579 + C18578) * C118) *
                C51164 * C51466) *
               C51486 +
           (((C18893 + C18892 + C18891) * C118 +
             (C18890 + C18889 + C18888) * C51250) *
                C51164 * C51466 +
            ((C19004 + C19005 + C19006) * C118 +
             (C19007 + C19008 + C19009) * C51250) *
                C51164 * C51337) *
               C1455) *
              C1456 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51164 * C51466 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51164 * C51337) *
               C51486 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51164 * C51337 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51164 * C51466) *
               C51498 -
           (((C15598 * C9234 + C15595 * C9236 + C15597 * C3190 +
              C15594 * C3194 + C15596 * C750 + C15593 * C756) *
                 C51250 +
             (C15598 * C9230 + C15595 * C9233 + C15597 * C3185 +
              C15594 * C3189 + C15596 * C744 + C15593 * C751) *
                 C118) *
                C51164 * C51337 +
            ((C16181 + C16180 + C16179) * C51250 +
             (C16178 + C16177 + C16176) * C118) *
                C51164 * C51466) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C452 +
                      (C117 * C127 + C51349 * C140) * C51454 -
                      (C117 * C454 + C51349 * C460) * C453 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C51164 * C10915 +
                     (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 +
                     C11402 * C10917 + C11416 * C10918) *
                        C1350 +
                    ((C3229 - (C3198 + C3197) + C3230) * C51164 * C10915 +
                     (C3231 - (C3205 + C3206) + C3232) * C51164 * C10916 +
                     (C8919 - (C8901 + C8902) + C8920) * C51164 * C10917 +
                     (C11414 - (C11406 + C11407) + C11415) * C51164 * C10918) *
                        C51236) *
                       C1456 +
                   (((C513 - (C480 + C479) + C514) * C51164 * C10915 +
                     C4180 * C51164 * C10916 + C9844 * C51164 * C10917 +
                     (C8921 - (C8907 + C8908) + C8922) * C51164 * C10918) *
                        C1350 +
                    (C4179 * C51164 * C10915 + C8918 * C51164 * C10916 +
                     (C8908 + C8907 - C8921 - C8922) * C51164 * C10917 +
                     (C8619 * C452 + C8620 * C51454 -
                      (C117 * C8889 + C51349 * C8892) * C453 -
                      (C117 * C8893 + C51349 * C8895) * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C51349 * C126) * C452 +
                       (C117 * C127 + C51349 * C140) * C51454 -
                       (C117 * C454 + C51349 * C460) * C453 -
                       (C117 * C461 + C51349 * C472) * C51262) *
                          C2434 +
                      (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
                         C51466 +
                     ((C3197 + C3198 - C3229 - C3230) * C2434 + C4179 * C2435 +
                      C2747 * C2436) *
                         C51337) *
                        C1350 +
                    (((C3229 - (C3198 + C3197) + C3230) * C2434 +
                      C4180 * C2435 + C4181 * C2436) *
                         C51466 +
                     ((C3231 - (C3205 + C3206) + C3232) * C2434 +
                      (C3233 - (C3211 + C3212) + C3234) * C2435 +
                      (C3235 - (C3217 + C3218) + C3236) * C2436) *
                         C51337) *
                        C51236) *
                       C1456 +
                   ((((C513 - (C480 + C479) + C514) * C2434 +
                      (C515 - (C486 + C485) + C516) * C2435 +
                      (C517 - (C492 + C491) + C518) * C2436) *
                         C51466 +
                     (C4180 * C2434 + C4181 * C2435 +
                      (C1621 - (C1607 + C1608) + C1622) * C2436) *
                         C51337) *
                        C1350 +
                    ((C4179 * C2434 + C2747 * C2435 +
                      (C1608 + C1607 - C1621 - C1622) * C2436) *
                         C51466 +
                     ((C3212 + C3211 - C3233 - C3234) * C2434 +
                      (C3218 + C3217 - C3235 - C3236) * C2435 +
                      (C664 * C452 + C665 * C51454 -
                       (C117 * C863 + C51349 * C878) * C453 -
                       (C117 * C879 + C51349 * C887) * C51262) *
                          C2436) *
                         C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15596 * C119 + C15593 * C126 + C15597 * C454 +
                       C15594 * C460 + C15598 * C992 + C15595 * C997) *
                          C452 +
                      (C15596 * C127 + C15593 * C140 + C15597 * C461 +
                       C15594 * C472 + C15598 * C998 + C15595 * C1007) *
                          C51454 -
                      (C15598 * C1236 + C15595 * C1240 + C15597 * C992 +
                       C15594 * C997 + C15596 * C454 + C15593 * C460) *
                          C453 -
                      (C15598 * C1241 + C15595 * C1248 + C15597 * C998 +
                       C15594 * C1007 + C15596 * C461 + C15593 * C472) *
                          C51262) *
                         C51164 * C51466 +
                     ((C18578 + C18579 + C18580) * C452 +
                      (C18581 + C18582 + C18583) * C51454 -
                      (C19180 + C19181 + C19182) * C453 -
                      (C19183 + C19184 + C19185) * C51262) *
                         C51164 * C51337) *
                        C1350 +
                    (((C19182 + C19181 + C19180) * C453 -
                      ((C18583 + C18582 + C18581) * C51454 +
                       (C18580 + C18579 + C18578) * C452) +
                      (C19185 + C19184 + C19183) * C51262) *
                         C51164 * C51466 +
                     ((C19186 + C19187 + C19188) * C453 -
                      ((C18888 + C18889 + C18890) * C51454 +
                       (C18891 + C18892 + C18893) * C452) +
                      (C19189 + C19190 + C19191) * C51262) *
                         C51164 * C51337) *
                        C51236) *
                       C1456 +
                   ((((C16008 + C16007 + C16006) * C453 -
                      ((C15641 + C15640 + C15639) * C51454 +
                       (C15638 + C15637 + C15636) * C452) +
                      (C16011 + C16010 + C16009) * C51262) *
                         C51164 * C51466 +
                     ((C17344 + C17345 + C17346) * C453 -
                      ((C15824 + C15825 + C15826) * C51454 +
                       (C15827 + C15828 + C15829) * C452) +
                      (C17347 + C17348 + C17349) * C51262) *
                         C51164 * C51337) *
                        C1350 +
                    (((C15829 + C15828 + C15827) * C452 +
                      (C15826 + C15825 + C15824) * C51454 -
                      (C17346 + C17345 + C17344) * C453 -
                      (C17349 + C17348 + C17347) * C51262) *
                         C51164 * C51466 +
                     ((C16176 + C16177 + C16178) * C452 +
                      (C16179 + C16180 + C16181) * C51454 -
                      (C15598 * C9348 + C15595 * C9351 + C15597 * C3553 +
                       C15594 * C3557 + C15596 * C861 + C15593 * C874) *
                          C453 -
                      (C15598 * C9352 + C15595 * C9354 + C15597 * C3558 +
                       C15594 * C3562 + C15596 * C875 + C15593 * C885) *
                          C51262) *
                         C51164 * C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[108] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C1722 +
                      (C117 * C127 + C51349 * C140) * C1720 -
                      (C117 * C454 + C51349 * C460) * C1723 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C51164 * C10915 +
                     (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
                     C10694 * C51164 * C10917 +
                     (C10691 + C10690 - C10689 - C10692) * C51164 * C10918) *
                        C1350 +
                    ((C4527 - (C4526 + C4525) + C4528) * C51164 * C10915 +
                     (C5044 - (C5045 + C5046) + C5047) * C51164 * C10916 +
                     (C10689 - (C10690 + C10691) + C10692) * C51164 * C10917 +
                     (C11411 * C1723 - (C8739 * C1720 + C8738 * C1722) +
                      C11412 * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51445 +
                   (((C1727 - (C1726 + C1725) + C1728) * C51164 * C10915 +
                     C4544 * C51164 * C10916 + C10194 * C51164 * C10917 +
                     (C10187 - (C10188 + C10189) + C10190) * C51164 * C10918) *
                        C1350 +
                    (C4543 * C51164 * C10915 + C10193 * C51164 * C10916 +
                     (C10189 + C10188 - C10187 - C10190) * C51164 * C10917 +
                     (C8619 * C1722 + C8620 * C1720 -
                      (C117 * C8889 + C51349 * C8892) * C1723 -
                      (C117 * C8893 + C51349 * C8895) * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C51349 * C126) * C1722 +
                       (C117 * C127 + C51349 * C140) * C1720 -
                       (C117 * C454 + C51349 * C460) * C1723 -
                       (C117 * C461 + C51349 * C472) * C51262) *
                          C2434 +
                      (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
                         C51466 +
                     ((C4525 + C4526 - C4527 - C4528) * C2434 + C4543 * C2435 +
                      C4330 * C2436) *
                         C51337) *
                        C1350 +
                    (((C4527 - (C4526 + C4525) + C4528) * C2434 +
                      C4544 * C2435 + C4545 * C2436) *
                         C51466 +
                     ((C3223 * C1723 - (C2909 * C1720 + C2910 * C1722) +
                       C3224 * C51262) *
                          C2434 +
                      (C4532 - (C4533 + C4534) + C4535) * C2435 +
                      (C4536 - (C4537 + C4538) + C4539) * C2436) *
                         C51337) *
                        C51236) *
                       C51445 +
                   ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
                      (C1731 - (C1730 + C1729) + C1732) * C2435 +
                      (C1735 - (C1734 + C1733) + C1736) * C2436) *
                         C51466 +
                     (C4544 * C2434 + C4545 * C2435 +
                      (C1885 - (C1886 + C1887) + C1888) * C2436) *
                         C51337) *
                        C1350 +
                    ((C4543 * C2434 + C4330 * C2435 +
                      (C1887 + C1886 - C1885 - C1888) * C2436) *
                         C51466 +
                     ((C4534 + C4533 - C4532 - C4535) * C2434 +
                      (C4538 + C4537 - C4536 - C4539) * C2435 +
                      (C664 * C1722 + C665 * C1720 -
                       (C117 * C863 + C51349 * C878) * C1723 -
                       (C117 * C879 + C51349 * C887) * C51262) *
                          C2436) *
                         C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15596 * C119 + C15593 * C126 + C15597 * C454 +
                       C15594 * C460 + C15598 * C992 + C15595 * C997) *
                          C1722 +
                      (C15596 * C127 + C15593 * C140 + C15597 * C461 +
                       C15594 * C472 + C15598 * C998 + C15595 * C1007) *
                          C1720 -
                      (C15598 * C1236 + C15595 * C1240 + C15597 * C992 +
                       C15594 * C997 + C15596 * C454 + C15593 * C460) *
                          C1723 -
                      (C15598 * C1241 + C15595 * C1248 + C15597 * C998 +
                       C15594 * C1007 + C15596 * C461 + C15593 * C472) *
                          C51262) *
                         C51164 * C51466 +
                     ((C18578 + C18579 + C18580) * C1722 +
                      (C18581 + C18582 + C18583) * C1720 -
                      (C19180 + C19181 + C19182) * C1723 -
                      (C19183 + C19184 + C19185) * C51262) *
                         C51164 * C51337) *
                        C1350 +
                    (((C19182 + C19181 + C19180) * C1723 -
                      ((C18583 + C18582 + C18581) * C1720 +
                       (C18580 + C18579 + C18578) * C1722) +
                      (C19185 + C19184 + C19183) * C51262) *
                         C51164 * C51466 +
                     ((C19186 + C19187 + C19188) * C1723 -
                      ((C18888 + C18889 + C18890) * C1720 +
                       (C18891 + C18892 + C18893) * C1722) +
                      (C19189 + C19190 + C19191) * C51262) *
                         C51164 * C51337) *
                        C51236) *
                       C51445 +
                   ((((C16008 + C16007 + C16006) * C1723 -
                      ((C15641 + C15640 + C15639) * C1720 +
                       (C15638 + C15637 + C15636) * C1722) +
                      (C16011 + C16010 + C16009) * C51262) *
                         C51164 * C51466 +
                     ((C17344 + C17345 + C17346) * C1723 -
                      ((C15824 + C15825 + C15826) * C1720 +
                       (C15827 + C15828 + C15829) * C1722) +
                      (C17347 + C17348 + C17349) * C51262) *
                         C51164 * C51337) *
                        C1350 +
                    (((C15829 + C15828 + C15827) * C1722 +
                      (C15826 + C15825 + C15824) * C1720 -
                      (C17346 + C17345 + C17344) * C1723 -
                      (C17349 + C17348 + C17347) * C51262) *
                         C51164 * C51466 +
                     ((C16176 + C16177 + C16178) * C1722 +
                      (C16179 + C16180 + C16181) * C1720 -
                      (C15598 * C9348 + C15595 * C9351 + C15597 * C3553 +
                       C15594 * C3557 + C15596 * C861 + C15593 * C874) *
                          C1723 -
                      (C15598 * C9352 + C15595 * C9354 + C15597 * C3558 +
                       C15594 * C3562 + C15596 * C875 + C15593 * C885) *
                          C51262) *
                         C51164 * C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[109] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C51349 * C126) * C1722 +
                     (C117 * C127 + C51349 * C140) * C1720 -
                     (C117 * C454 + C51349 * C460) * C1723 -
                     (C117 * C461 + C51349 * C472) * C51262) *
                        C51164 * C10915 +
                    (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
                    C12579 * C10917 + C12587 * C10918) *
                       C51498 +
                   ((C4527 - (C4526 + C4525) + C4528) * C51164 * C10915 +
                    (C5044 - (C5045 + C5046) + C5047) * C51164 * C10916 +
                    (C10689 - (C10690 + C10691) + C10692) * C51164 * C10917 +
                    (C12581 - (C12582 + C12583) + C12584) * C51164 * C10918) *
                       C51486 +
                   (C12579 * C10915 + C12587 * C10916 +
                    (C12583 + C12582 - C12581 - C12584) * C51164 * C10917 +
                    (C11296 * C1722 + C11297 * C1720 -
                     (C117 * C11397 + C51349 * C11398) * C1723 -
                     (C117 * C11399 + C51349 * C11400) * C51262) *
                        C51164 * C10918) *
                       C1455) *
                  C51188) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C1722 +
                      (C117 * C127 + C51349 * C140) * C1720 -
                      (C117 * C454 + C51349 * C460) * C1723 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C2434 +
                     (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
                        C51466 +
                    ((C4525 + C4526 - C4527 - C4528) * C2434 + C4543 * C2435 +
                     C4330 * C2436) *
                        C51337) *
                       C51498 +
                   (((C4527 - (C4526 + C4525) + C4528) * C2434 + C4544 * C2435 +
                     C4545 * C2436) *
                        C51466 +
                    ((C5044 - (C5045 + C5046) + C5047) * C2434 +
                     (C4532 - (C4533 + C4534) + C4535) * C2435 +
                     (C4536 - (C4537 + C4538) + C4539) * C2436) *
                        C51337) *
                       C51486 +
                   (((C5046 + C5045 - C5044 - C5047) * C2434 +
                     (C4534 + C4533 - C4532 - C4535) * C2435 +
                     (C4538 + C4537 - C4536 - C4539) * C2436) *
                        C51466 +
                    ((C3035 * C1722 + C3036 * C1720 -
                      (C117 * C3184 + C51349 * C3187) * C1723 -
                      (C117 * C3188 + C51349 * C3193) * C51262) *
                         C2434 +
                     (C2911 * C1722 + C2912 * C1720 -
                      (C117 * C3185 + C51349 * C3189) * C1723 -
                      (C117 * C3190 + C51349 * C3194) * C51262) *
                         C2435 +
                     (C2913 * C1722 + C2914 * C1720 -
                      (C117 * C3186 + C51349 * C3191) * C1723 -
                      (C117 * C3192 + C51349 * C3195) * C51262) *
                         C2436) *
                        C51337) *
                       C1455) *
                  C51188) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C15596 * C119 + C15593 * C126 + C15597 * C454 +
                      C15594 * C460 + C15598 * C992 + C15595 * C997) *
                         C1722 +
                     (C15596 * C127 + C15593 * C140 + C15597 * C461 +
                      C15594 * C472 + C15598 * C998 + C15595 * C1007) *
                         C1720 -
                     (C15598 * C1236 + C15595 * C1240 + C15597 * C992 +
                      C15594 * C997 + C15596 * C454 + C15593 * C460) *
                         C1723 -
                     (C15598 * C1241 + C15595 * C1248 + C15597 * C998 +
                      C15594 * C1007 + C15596 * C461 + C15593 * C472) *
                         C51262) *
                        C51164 * C51466 +
                    ((C18578 + C18579 + C18580) * C1722 +
                     (C18581 + C18582 + C18583) * C1720 -
                     (C19180 + C19181 + C19182) * C1723 -
                     (C19183 + C19184 + C19185) * C51262) *
                        C51164 * C51337) *
                       C51498 +
                   (((C19182 + C19181 + C19180) * C1723 -
                     ((C18583 + C18582 + C18581) * C1720 +
                      (C18580 + C18579 + C18578) * C1722) +
                     (C19185 + C19184 + C19183) * C51262) *
                        C51164 * C51466 +
                    ((C19186 + C19187 + C19188) * C1723 -
                     ((C18888 + C18889 + C18890) * C1720 +
                      (C18891 + C18892 + C18893) * C1722) +
                     (C19189 + C19190 + C19191) * C51262) *
                        C51164 * C51337) *
                       C51486 +
                   (((C18893 + C18892 + C18891) * C1722 +
                     (C18890 + C18889 + C18888) * C1720 -
                     (C19188 + C19187 + C19186) * C1723 -
                     (C19191 + C19190 + C19189) * C51262) *
                        C51164 * C51466 +
                    ((C19004 + C19005 + C19006) * C1722 +
                     (C19007 + C19008 + C19009) * C1720 -
                     (C15598 * C11694 + C15595 * C11695 + C15597 * C9229 +
                      C15594 * C9231 + C15596 * C3184 + C15593 * C3187) *
                         C1723 -
                     (C15598 * C11696 + C15595 * C11697 + C15597 * C9232 +
                      C15594 * C9235 + C15596 * C3188 + C15593 * C3193) *
                         C51262) *
                        C51164 * C51337) *
                       C1455) *
                  C51188) /
                     (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C51164 * C10915 +
           (C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51164 * C10916 +
           (C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C51164 *
               C10917 +
           (C12686 + C12687 - C12688 - C12689 + C12690 + C12691) * C51164 *
               C10918) *
              C1350 +
          ((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C51164 * C10915 +
           (C10845 - (C10844 + C10843) + C10846 - C10847 - C10848) * C51164 *
               C10916 +
           (C12688 - (C12687 + C12686) + C12689 - C12690 - C12691) * C51164 *
               C10917 +
           (C11411 * C1990 - (C8739 * C51499 + C8738 * C1989) +
            C11412 * C51489 - (C117 * C11612 + C51349 * C11613) * C1991 -
            (C117 * C11614 + C51349 * C11615) * C1988) *
               C51164 * C10918) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C2435 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C2436) *
               C51466 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C2434 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C2435 +
            (C4698 + C4699 - C4700 - C4701 + C4702 + C4703) * C2436) *
               C51337) *
              C1350 +
          (((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C2434 +
            (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C2435 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C2436) *
               C51466 +
           ((C3223 * C1990 - (C2909 * C51499 + C2910 * C1989) + C3224 * C51489 -
             (C117 * C3552 + C51349 * C3555) * C1991 -
             (C117 * C3556 + C51349 * C3561) * C1988) *
                C2434 +
            (C3225 * C1990 - (C661 * C51499 + C660 * C1989) + C3226 * C51489 -
             (C117 * C3553 + C51349 * C3557) * C1991 -
             (C117 * C3558 + C51349 * C3562) * C1988) *
                C2435 +
            (C3227 * C1990 - (C663 * C51499 + C662 * C1989) + C3228 * C51489 -
             (C117 * C3554 + C51349 * C3559) * C1991 -
             (C117 * C3560 + C51349 * C3563) * C1988) *
                C2436) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51499 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51489 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C1991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C1988) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C1989 +
            (C18581 + C18582 + C18583) * C51499 -
            (C19180 + C19181 + C19182) * C1990 -
            (C19183 + C19184 + C19185) * C51489 +
            (C19496 + C19497 + C19498) * C1991 +
            (C19499 + C19500 + C19501) * C1988) *
               C51164 * C51337) *
              C1350 +
          (((C19182 + C19181 + C19180) * C1990 -
            ((C18583 + C18582 + C18581) * C51499 +
             (C18580 + C18579 + C18578) * C1989) +
            (C19185 + C19184 + C19183) * C51489 -
            (C19498 + C19497 + C19496) * C1991 -
            (C19501 + C19500 + C19499) * C1988) *
               C51164 * C51466 +
           ((C19186 + C19187 + C19188) * C1990 -
            ((C18888 + C18889 + C18890) * C51499 +
             (C18891 + C18892 + C18893) * C1989) +
            (C19189 + C19190 + C19191) * C51489 -
            (C15598 * C14010 + C15595 * C14013 + C15597 * C9347 +
             C15594 * C9349 + C15596 * C3552 + C15593 * C3555) *
                C1991 -
            (C15598 * C14014 + C15595 * C14016 + C15597 * C9350 +
             C15594 * C9353 + C15596 * C3556 + C15593 * C3561) *
                C1988) *
               C51164 * C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51349 * C126) * C118 +
                 (C117 * C127 + C51349 * C140) * C51250) *
                    C2434 +
                (C178 + C179) * C2435 + C188 * C2436) *
                   C51466 +
               (((C117 * C297 + C51349 * C307) * C118 +
                 (C117 * C306 + C51349 * C315) * C51250) *
                    C2434 +
                (C348 + C347) * C2435 + C2440 * C2436) *
                   C51337) *
                  C51220 * C113 -
              ((C351 * C2436 + C352 * C2435 + (C347 + C348) * C2434) * C51337 +
               (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                   C51466) *
                  C51220 * C114 +
              ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
               (C2440 * C2434 + (C344 + C343) * C2435 + (C349 + C350) * C2436) *
                   C51337) *
                  C51220 * C115 -
              ((((C117 * C310 + C51349 * C317) * C51250 +
                 (C117 * C299 + C51349 * C311) * C118) *
                    C2436 +
                (C350 + C349) * C2435 + C351 * C2434) *
                   C51337 +
               ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51466) *
                  C51220 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51349 * C126) * C118 +
                  (C117 * C127 + C51349 * C140) * C51250) *
                     C2434 +
                 (C178 + C179) * C2435 + C188 * C2436) *
                    C51466 +
                ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                    C51337) *
                   C622 -
               ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) *
                    C51337 +
                (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) *
                    C51466) *
                   C623 +
               (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) *
                    C51466 +
                (((C117 * C745 + C51349 * C753) * C118 +
                  (C117 * C752 + C51349 * C757) * C51250) *
                     C2434 +
                 (C2917 + C2918) * C2435 + (C2919 + C2920) * C2436) *
                    C51337) *
                   C624) *
                  C51445 +
              (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
                (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) *
                    C51337) *
                   C623 -
               ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
                (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                    C51466) *
                   C622 -
               ((((C117 * C746 + C51349 * C754) * C51250 +
                  (C117 * C742 + C51349 * C747) * C118) *
                     C2436 +
                 (C2920 + C2919) * C2435 + (C2918 + C2917) * C2434) *
                    C51337 +
                ((C671 + C670) * C2436 + C2592 * C2435 + C2894 * C2434) *
                    C51466) *
                   C624) *
                  C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C2435 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C2436) *
               C51466 +
           ((C2595 * C989 + C2596 * C986 - C3221 * C990 - C3222 * C987 +
             (C117 * C1146 + C51349 * C1150) * C991 +
             (C117 * C1151 + C51349 * C1158) * C988) *
                C2434 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C2435 +
            (C3391 + C3392 - C3393 - C3394 + C3405 + C3406) * C2436) *
               C51337) *
              C51220 * C51445 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C2434 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C2435 +
            (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C2436) *
               C51466 +
           ((C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C2434 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C2435 +
            (C1615 * C990 - (C335 * C986 + C336 * C989) + C1616 * C987 -
             (C117 * C1149 + C51349 * C1156) * C991 -
             (C117 * C1157 + C51349 * C1161) * C988) *
                C2436) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
           (C3037 + C3038) * C51164 * C10918) *
              C51220 * C113 -
          (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
           C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
              C51220 * C114 +
          (C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
           C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
              C51220 * C115 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C51164 * C10918 +
           (C671 + C670) * C51164 * C10917 + C351 * C51164 * C10916 +
           C191 * C51164 * C10915) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C622 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C623 +
           (C11214 * C10915 + C11218 * C10916 +
            (C8741 + C8742) * C51164 * C10917 +
            ((C117 * C8723 + C51349 * C8727) * C118 +
             (C117 * C8726 + C51349 * C8729) * C51250) *
                C51164 * C10918) *
               C624) *
              C51445 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C623 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C622 -
           (((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51164 * C10918 +
            (C8624 + C8623) * C51164 * C10917 + C11216 * C10916 +
            C11217 * C10915) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C51164 * C10915 +
           (C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51164 * C10916 +
           (C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C51164 * C10917 +
           (C3035 * C989 + C3036 * C986 - C8913 * C990 - C8914 * C987 +
            (C117 * C9229 + C51349 * C9231) * C991 +
            (C117 * C9232 + C51349 * C9235) * C988) *
               C51164 * C10918) *
              C51220 * C51445 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51164 * C10915 +
           (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51164 * C10916 +
           (C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51164 * C10917 +
           (C8915 * C990 - (C2912 * C986 + C2911 * C989) + C8916 * C987 -
            (C117 * C9230 + C51349 * C9233) * C991 -
            (C117 * C9234 + C51349 * C9236) * C988) *
               C51164 * C10918) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51164 * C51466 +
           ((C15596 * C297 + C15593 * C307 + C15597 * C856 + C15594 * C864 +
             C15598 * C1146 + C15595 * C1150) *
                C118 +
            (C15596 * C306 + C15593 * C315 + C15597 * C865 + C15594 * C880 +
             C15598 * C1151 + C15595 * C1158) *
                C51250) *
               C51164 * C51337) *
              C51220 * C113 -
          (((C15824 + C15825 + C15826) * C51250 +
            (C15827 + C15828 + C15829) * C118) *
               C51164 * C51337 +
           ((C15641 + C15640 + C15639) * C51250 +
            (C15638 + C15637 + C15636) * C118) *
               C51164 * C51466) *
              C51220 * C114 +
          (((C15647 + C15646 + C15645) * C118 +
            (C15644 + C15643 + C15642) * C51250) *
               C51164 * C51466 +
           ((C15830 + C15831 + C15832) * C118 +
            (C15833 + C15834 + C15835) * C51250) *
               C51164 * C51337) *
              C51220 * C115 -
          (((C15598 * C1157 + C15595 * C1161 + C15597 * C871 + C15594 * C883 +
             C15596 * C300 + C15593 * C312) *
                C51250 +
            (C15598 * C1149 + C15595 * C1156 + C15597 * C859 + C15594 * C870 +
             C15596 * C294 + C15593 * C301) *
                C118) *
               C51164 * C51337 +
           ((C15653 + C15652 + C15651) * C51250 +
            (C15650 + C15649 + C15648) * C118) *
               C51164 * C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51164 * C51466 +
            ((C18578 + C18579 + C18580) * C118 +
             (C18581 + C18582 + C18583) * C51250) *
                C51164 * C51337) *
               C622 -
           (((C18888 + C18889 + C18890) * C51250 +
             (C18891 + C18892 + C18893) * C118) *
                C51164 * C51337 +
            ((C18583 + C18582 + C18581) * C51250 +
             (C18580 + C18579 + C18578) * C118) *
                C51164 * C51466) *
               C623 +
           (((C18893 + C18892 + C18891) * C118 +
             (C18890 + C18889 + C18888) * C51250) *
                C51164 * C51466 +
            ((C15596 * C745 + C15593 * C753 + C15597 * C3184 + C15594 * C3187 +
              C15598 * C9229 + C15595 * C9231) *
                 C118 +
             (C15596 * C752 + C15593 * C757 + C15597 * C3188 + C15594 * C3193 +
              C15598 * C9232 + C15595 * C9235) *
                 C51250) *
                C51164 * C51337) *
               C624) *
              C51445 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51164 * C51466 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51164 * C51337) *
               C623 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51164 * C51337 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51164 * C51466) *
               C622 -
           (((C15598 * C9234 + C15595 * C9236 + C15597 * C3190 +
              C15594 * C3194 + C15596 * C750 + C15593 * C756) *
                 C51250 +
             (C15598 * C9230 + C15595 * C9233 + C15597 * C3185 +
              C15594 * C3189 + C15596 * C744 + C15593 * C751) *
                 C118) *
                C51164 * C51337 +
            ((C16181 + C16180 + C16179) * C51250 +
             (C16178 + C16177 + C16176) * C118) *
                C51164 * C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C986 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C987 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C988) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C989 +
            (C18581 + C18582 + C18583) * C986 -
            (C19180 + C19181 + C19182) * C990 -
            (C19183 + C19184 + C19185) * C987 +
            (C15596 * C1146 + C15593 * C1150 + C15597 * C3674 + C15594 * C3677 +
             C15598 * C14009 + C15595 * C14011) *
                C991 +
            (C15596 * C1151 + C15593 * C1158 + C15597 * C3678 + C15594 * C3683 +
             C15598 * C14012 + C15595 * C14015) *
                C988) *
               C51164 * C51337) *
              C51220 * C51445 +
          (((C16008 + C16007 + C16006) * C990 -
            ((C15641 + C15640 + C15639) * C986 +
             (C15638 + C15637 + C15636) * C989) +
            (C16011 + C16010 + C16009) * C987 -
            (C16586 + C16585 + C16584) * C991 -
            (C16589 + C16588 + C16587) * C988) *
               C51164 * C51466 +
           ((C17344 + C17345 + C17346) * C990 -
            ((C15824 + C15825 + C15826) * C986 +
             (C15827 + C15828 + C15829) * C989) +
            (C17347 + C17348 + C17349) * C987 -
            (C15598 * C16735 + C15595 * C16736 + C15597 * C3675 +
             C15594 * C3679 + C15596 * C1147 + C15593 * C1152) *
                C991 -
            (C15598 * C16737 + C15595 * C16738 + C15597 * C3680 +
             C15594 * C3684 + C15596 * C1153 + C15593 * C1159) *
                C988) *
               C51164 * C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51349 * C126) * C118 +
                  (C117 * C127 + C51349 * C140) * C51250) *
                     C2434 +
                 (C178 + C179) * C2435 + C188 * C2436) *
                    C51466 +
                ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                    C51337) *
                   C51452 -
               ((C2592 * C2436 + (C667 + C666) * C2435 +
                 ((C117 * C633 + C51349 * C642) * C51250 +
                  (C117 * C627 + C51349 * C632) * C118) *
                     C2434) *
                    C51337 +
                (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) *
                    C51466) *
                   C51236) *
                  C291 +
              (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
                ((C666 + C667) * C2434 + (C668 + C669) * C2435 +
                 (C670 + C671) * C2436) *
                    C51337) *
                   C51236 -
               ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
                (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                    C51466) *
                   C51452) *
                  C292 +
              (((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
                (C2440 * C2434 + C2594 * C2435 + (C349 + C350) * C2436) *
                    C51337) *
                   C51452 -
               ((((C117 * C640 + C51349 * C646) * C51250 +
                  (C117 * C631 + C51349 * C641) * C118) *
                     C2436 +
                 (C671 + C670) * C2435 + C2592 * C2434) *
                    C51337 +
                ((C350 + C349) * C2436 + C351 * C2435 + C352 * C2434) *
                    C51466) *
                   C51236) *
                  C293) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51349 * C126) * C118 +
                 (C117 * C127 + C51349 * C140) * C51250) *
                    C2434 +
                (C178 + C179) * C2435 + C188 * C2436) *
                   C51466 +
               ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                   C51337) *
                  C737 -
              ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) *
                   C51337 +
               (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) *
                   C51466) *
                  C738 +
              (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) *
                   C51466 +
               ((C3037 + C3038) * C2434 + (C2917 + C2918) * C2435 +
                (C2919 + C2920) * C2436) *
                   C51337) *
                  C739 -
              ((((C117 * C3021 + C51349 * C3027) * C51250 +
                 (C117 * C3018 + C51349 * C3022) * C118) *
                    C2436 +
                ((C117 * C3023 + C51349 * C3028) * C51250 +
                 (C117 * C3019 + C51349 * C3024) * C118) *
                    C2435 +
                ((C117 * C3025 + C51349 * C3029) * C51250 +
                 (C117 * C3020 + C51349 * C3026) * C118) *
                    C2434) *
                   C51337 +
               ((C2920 + C2919) * C2436 + (C2918 + C2917) * C2435 +
                (C3038 + C3037) * C2434) *
                   C51466) *
                  C740) *
             C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C2435 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C2436) *
               C51466 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C2434 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C2435 +
            (C3391 + C3392 - C3393 - C3394 + C3405 + C3406) * C2436) *
               C51337) *
              C51452 +
          (((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C2434 +
            (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C2435 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C2436) *
               C51466 +
           ((C3223 * C990 - (C2909 * C986 + C2910 * C989) + C3224 * C987 -
             (C117 * C3552 + C51349 * C3555) * C991 -
             (C117 * C3556 + C51349 * C3561) * C988) *
                C2434 +
            (C3225 * C990 - (C661 * C986 + C660 * C989) + C3226 * C987 -
             (C117 * C3553 + C51349 * C3557) * C991 -
             (C117 * C3558 + C51349 * C3562) * C988) *
                C2435 +
            (C3227 * C990 - (C663 * C986 + C662 * C989) + C3228 * C987 -
             (C117 * C3554 + C51349 * C3559) * C991 -
             (C117 * C3560 + C51349 * C3563) * C988) *
                C2436) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
            (C3037 + C3038) * C51164 * C10918) *
               C51452 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51236) *
              C291 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51236 -
           (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
            C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
               C51452) *
              C292 +
          ((C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
            C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
               C51452 -
           (((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C51164 * C10918 +
            (C2920 + C2919) * C51164 * C10917 + C2592 * C51164 * C10916 +
            C352 * C51164 * C10915) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
           C11218 * C10918) *
              C737 -
          (C11295 * C10918 + C11290 * C10917 +
           (C2915 + C2916) * C51164 * C10916 +
           (C2598 + C2597) * C51164 * C10915) *
              C738 +
          (C11214 * C10915 + C11218 * C10916 +
           (C8741 + C8742) * C51164 * C10917 +
           (C11298 + C11299) * C51164 * C10918) *
              C739 -
          (((C117 * C11285 + C51349 * C11287) * C51250 +
            (C117 * C11284 + C51349 * C11286) * C118) *
               C51164 * C10918 +
           (C11299 + C11298) * C51164 * C10917 + C11295 * C10916 +
           C11290 * C10915) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C51164 * C10915 +
           (C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51164 * C10916 +
           (C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C51164 * C10917 +
           (C11617 + C11618 - C11619 - C11620 + C11627 + C11628) * C51164 *
               C10918) *
              C51452 +
          ((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C51164 * C10915 +
           (C9240 - (C9239 + C9238) + C9241 - C9248 - C9249) * C51164 * C10916 +
           (C11619 - (C11618 + C11617) + C11620 - C11627 - C11628) * C51164 *
               C10917 +
           (C11411 * C990 - (C8739 * C986 + C8738 * C989) + C11412 * C987 -
            (C117 * C11612 + C51349 * C11613) * C991 -
            (C117 * C11614 + C51349 * C11615) * C988) *
               C51164 * C10918) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51164 * C51466 +
            ((C18578 + C18579 + C18580) * C118 +
             (C18581 + C18582 + C18583) * C51250) *
                C51164 * C51337) *
               C51452 -
           (((C15598 * C3556 + C15595 * C3561 + C15597 * C873 + C15594 * C884 +
              C15596 * C633 + C15593 * C642) *
                 C51250 +
             (C15598 * C3552 + C15595 * C3555 + C15597 * C860 + C15594 * C872 +
              C15596 * C627 + C15593 * C632) *
                 C118) *
                C51164 * C51337 +
            ((C18583 + C18582 + C18581) * C51250 +
             (C18580 + C18579 + C18578) * C118) *
                C51164 * C51466) *
               C51236) *
              C291 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51164 * C51466 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51164 * C51337) *
               C51236 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51164 * C51337 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51164 * C51466) *
               C51452) *
              C292 +
          ((((C15647 + C15646 + C15645) * C118 +
             (C15644 + C15643 + C15642) * C51250) *
                C51164 * C51466 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51164 * C51337) *
               C51452 -
           (((C15598 * C3560 + C15595 * C3563 + C15597 * C877 + C15594 * C886 +
              C15596 * C637 + C15593 * C644) *
                 C51250 +
             (C15598 * C3554 + C15595 * C3559 + C15597 * C862 + C15594 * C876 +
              C15596 * C629 + C15593 * C636) *
                 C118) *
                C51164 * C51337 +
            ((C15835 + C15834 + C15833) * C51250 +
             (C15832 + C15831 + C15830) * C118) *
                C51164 * C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C118 +
            (C18581 + C18582 + C18583) * C51250) *
               C51164 * C51337) *
              C737 -
          (((C18888 + C18889 + C18890) * C51250 +
            (C18891 + C18892 + C18893) * C118) *
               C51164 * C51337 +
           ((C18583 + C18582 + C18581) * C51250 +
            (C18580 + C18579 + C18578) * C118) *
               C51164 * C51466) *
              C738 +
          (((C18893 + C18892 + C18891) * C118 +
            (C18890 + C18889 + C18888) * C51250) *
               C51164 * C51466 +
           ((C19004 + C19005 + C19006) * C118 +
            (C19007 + C19008 + C19009) * C51250) *
               C51164 * C51337) *
              C739 -
          (((C15598 * C11614 + C15595 * C11615 + C15597 * C8891 +
             C15594 * C8894 + C15596 * C3025 + C15593 * C3029) *
                C51250 +
            (C15598 * C11612 + C15595 * C11613 + C15597 * C8888 +
             C15594 * C8890 + C15596 * C3020 + C15593 * C3026) *
                C118) *
               C51164 * C51337 +
           ((C19009 + C19008 + C19007) * C51250 +
            (C19006 + C19005 + C19004) * C118) *
               C51164 * C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C986 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C987 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C988) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C989 +
            (C18581 + C18582 + C18583) * C986 -
            (C19180 + C19181 + C19182) * C990 -
            (C19183 + C19184 + C19185) * C987 +
            (C19496 + C19497 + C19498) * C991 +
            (C19499 + C19500 + C19501) * C988) *
               C51164 * C51337) *
              C51452 +
          (((C19182 + C19181 + C19180) * C990 -
            ((C18583 + C18582 + C18581) * C986 +
             (C18580 + C18579 + C18578) * C989) +
            (C19185 + C19184 + C19183) * C987 -
            (C19498 + C19497 + C19496) * C991 -
            (C19501 + C19500 + C19499) * C988) *
               C51164 * C51466 +
           ((C19186 + C19187 + C19188) * C990 -
            ((C18888 + C18889 + C18890) * C986 +
             (C18891 + C18892 + C18893) * C989) +
            (C19189 + C19190 + C19191) * C987 -
            (C15598 * C14010 + C15595 * C14013 + C15597 * C9347 +
             C15594 * C9349 + C15596 * C3552 + C15593 * C3555) *
                C991 -
            (C15598 * C14014 + C15595 * C14016 + C15597 * C9350 +
             C15594 * C9353 + C15596 * C3556 + C15593 * C3561) *
                C988) *
               C51164 * C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51349 * C126) * C452 +
                 (C117 * C127 + C51349 * C140) * C51454 -
                 (C117 * C454 + C51349 * C460) * C453 -
                 (C117 * C461 + C51349 * C472) * C51262) *
                    C2434 +
                (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
                   C51466 +
               ((C2595 * C452 + C2596 * C51454 -
                 (C117 * C856 + C51349 * C864) * C453 -
                 (C117 * C865 + C51349 * C880) * C51262) *
                    C2434 +
                (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
                   C51337) *
                  C51220 * C291 +
              (((C513 - (C480 + C479) + C514) * C2434 +
                (C515 - (C486 + C485) + C516) * C2435 +
                (C517 - (C492 + C491) + C518) * C2436) *
                   C51466 +
               ((C1617 - (C1595 + C1596) + C1618) * C2434 +
                (C1619 - (C1601 + C1602) + C1620) * C2435 +
                (C1621 - (C1607 + C1608) + C1622) * C2436) *
                   C51337) *
                  C51220 * C292 +
              ((C523 * C2434 + C524 * C2435 +
                (C500 + C499 - C519 - C520) * C2436) *
                   C51466 +
               (C2747 * C2434 + (C1608 + C1607 - C1621 - C1622) * C2435 +
                (C341 * C452 + C342 * C51454 -
                 (C117 * C1588 + C51349 * C1589) * C453 -
                 (C117 * C1590 + C51349 * C1591) * C51262) *
                    C2436) *
                   C51337) *
                  C51220 * C293) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51349 * C126) * C452 +
                 (C117 * C127 + C51349 * C140) * C51454 -
                 (C117 * C454 + C51349 * C460) * C453 -
                 (C117 * C461 + C51349 * C472) * C51262) *
                    C2434 +
                (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
                   C51466 +
               ((C3197 + C3198 - C3229 - C3230) * C2434 +
                (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
                   C51337) *
                  C622 +
              (((C3229 - (C3198 + C3197) + C3230) * C2434 +
                (C1617 - (C1595 + C1596) + C1618) * C2435 +
                (C1619 - (C1601 + C1602) + C1620) * C2436) *
                   C51466 +
               ((C3231 - (C3205 + C3206) + C3232) * C2434 +
                (C3233 - (C3211 + C3212) + C3234) * C2435 +
                (C3235 - (C3217 + C3218) + C3236) * C2436) *
                   C51337) *
                  C623 +
              (((C3206 + C3205 - C3231 - C3232) * C2434 +
                (C3212 + C3211 - C3233 - C3234) * C2435 +
                (C3218 + C3217 - C3235 - C3236) * C2436) *
                   C51466 +
               ((C3035 * C452 + C3036 * C51454 -
                 (C117 * C3184 + C51349 * C3187) * C453 -
                 (C117 * C3188 + C51349 * C3193) * C51262) *
                    C2434 +
                (C2911 * C452 + C2912 * C51454 -
                 (C117 * C3185 + C51349 * C3189) * C453 -
                 (C117 * C3190 + C51349 * C3194) * C51262) *
                    C2435 +
                (C2913 * C452 + C2914 * C51454 -
                 (C117 * C3186 + C51349 * C3191) * C453 -
                 (C117 * C3192 + C51349 * C3195) * C51262) *
                    C2436) *
                   C51337) *
                  C624) *
             C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1232 +
            (C117 * C127 + C51349 * C140) * C1228 -
            (C117 * C454 + C51349 * C460) * C1233 -
            (C117 * C461 + C51349 * C472) * C1229 +
            (C117 * C992 + C51349 * C997) * C1234 +
            (C117 * C998 + C51349 * C1007) * C1230 -
            (C117 * C1236 + C51349 * C1240) * C1235 -
            (C117 * C1241 + C51349 * C1248) * C1231) *
               C2434 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51349 * C1242) * C1235 -
            (C117 * C1243 + C51349 * C1249) * C1231) *
               C2435 +
           (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
            C1039 * C1234 + C1040 * C1230 -
            (C117 * C1238 + C51349 * C1244) * C1235 -
            (C117 * C1245 + C51349 * C1250) * C1231) *
               C2436) *
              C51466 +
          ((C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
            C3573 * C1234 + C3574 * C1230 -
            (C117 * C3674 + C51349 * C3677) * C1235 -
            (C117 * C3678 + C51349 * C3683) * C1231) *
               C2434 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3399 * C1234 + C3400 * C1230 -
            (C117 * C3675 + C51349 * C3679) * C1235 -
            (C117 * C3680 + C51349 * C3684) * C1231) *
               C2435 +
           (C338 * C1232 + C337 * C1228 - C1613 * C1233 - C1614 * C1229 +
            C3401 * C1234 + C3402 * C1230 -
            (C117 * C3676 + C51349 * C3681) * C1235 -
            (C117 * C3682 + C51349 * C3685) * C1231) *
               C2436) *
              C51337) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 +
           C8917 * C51164 * C10917 +
           (C8902 + C8901 - C8919 - C8920) * C51164 * C10918) *
              C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C51164 * C10915 +
           C4180 * C51164 * C10916 + C9844 * C51164 * C10917 +
           (C8921 - (C8907 + C8908) + C8922) * C51164 * C10918) *
              C51220 * C292 +
          (C523 * C51164 * C10915 + C2747 * C51164 * C10916 +
           (C3218 + C3217 - C3235 - C3236) * C51164 * C10917 +
           (C2913 * C452 + C2914 * C51454 -
            (C117 * C3186 + C51349 * C3191) * C453 -
            (C117 * C3192 + C51349 * C3195) * C51262) *
               C51164 * C10918) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 + C11402 * C10917 +
           C11416 * C10918) *
              C622 +
          ((C3229 - (C3198 + C3197) + C3230) * C51164 * C10915 +
           (C3231 - (C3205 + C3206) + C3232) * C51164 * C10916 +
           (C8919 - (C8901 + C8902) + C8920) * C51164 * C10917 +
           (C11414 - (C11406 + C11407) + C11415) * C51164 * C10918) *
              C623 +
          (C11402 * C10915 + C11416 * C10916 +
           (C11407 + C11406 - C11414 - C11415) * C51164 * C10917 +
           (C11296 * C452 + C11297 * C51454 -
            (C117 * C11397 + C51349 * C11398) * C453 -
            (C117 * C11399 + C51349 * C11400) * C51262) *
               C51164 * C10918) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51349 * C126) * C1232 +
           (C117 * C127 + C51349 * C140) * C1228 -
           (C117 * C454 + C51349 * C460) * C1233 -
           (C117 * C461 + C51349 * C472) * C1229 +
           (C117 * C992 + C51349 * C997) * C1234 +
           (C117 * C998 + C51349 * C1007) * C1230 -
           (C117 * C1236 + C51349 * C1240) * C1235 -
           (C117 * C1241 + C51349 * C1248) * C1231) *
              C51164 * C10915 +
          (C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
           C3573 * C1234 + C3574 * C1230 -
           (C117 * C3674 + C51349 * C3677) * C1235 -
           (C117 * C3678 + C51349 * C3683) * C1231) *
              C51164 * C10916 +
          (C2910 * C1232 + C2909 * C1228 - C3223 * C1233 - C3224 * C1229 +
           C9246 * C1234 + C9247 * C1230 -
           (C117 * C9347 + C51349 * C9349) * C1235 -
           (C117 * C9350 + C51349 * C9353) * C1231) *
              C51164 * C10917 +
          (C3035 * C1232 + C3036 * C1228 - C8913 * C1233 - C8914 * C1229 +
           C11625 * C1234 + C11626 * C1230 -
           (C117 * C11694 + C51349 * C11695) * C1235 -
           (C117 * C11696 + C51349 * C11697) * C1231) *
              C51164 * C10918) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C452 +
            (C18581 + C18582 + C18583) * C51454 -
            (C15598 * C3674 + C15595 * C3677 + C15597 * C1146 + C15594 * C1150 +
             C15596 * C856 + C15593 * C864) *
                C453 -
            (C15598 * C3678 + C15595 * C3683 + C15597 * C1151 + C15594 * C1158 +
             C15596 * C865 + C15593 * C880) *
                C51262) *
               C51164 * C51337) *
              C51220 * C291 +
          (((C16008 + C16007 + C16006) * C453 -
            ((C15641 + C15640 + C15639) * C51454 +
             (C15638 + C15637 + C15636) * C452) +
            (C16011 + C16010 + C16009) * C51262) *
               C51164 * C51466 +
           ((C17344 + C17345 + C17346) * C453 -
            ((C15824 + C15825 + C15826) * C51454 +
             (C15827 + C15828 + C15829) * C452) +
            (C17347 + C17348 + C17349) * C51262) *
               C51164 * C51337) *
              C51220 * C292 +
          (((C15647 + C15646 + C15645) * C452 +
            (C15644 + C15643 + C15642) * C51454 -
            (C16014 + C16013 + C16012) * C453 -
            (C16017 + C16016 + C16015) * C51262) *
               C51164 * C51466 +
           ((C15830 + C15831 + C15832) * C452 +
            (C15833 + C15834 + C15835) * C51454 -
            (C15598 * C3676 + C15595 * C3681 + C15597 * C1148 + C15594 * C1154 +
             C15596 * C858 + C15593 * C868) *
                C453 -
            (C15598 * C3682 + C15595 * C3685 + C15597 * C1155 + C15594 * C1160 +
             C15596 * C869 + C15593 * C882) *
                C51262) *
               C51164 * C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C452 +
            (C18581 + C18582 + C18583) * C51454 -
            (C19180 + C19181 + C19182) * C453 -
            (C19183 + C19184 + C19185) * C51262) *
               C51164 * C51337) *
              C622 +
          (((C19182 + C19181 + C19180) * C453 -
            ((C18583 + C18582 + C18581) * C51454 +
             (C18580 + C18579 + C18578) * C452) +
            (C19185 + C19184 + C19183) * C51262) *
               C51164 * C51466 +
           ((C19186 + C19187 + C19188) * C453 -
            ((C18888 + C18889 + C18890) * C51454 +
             (C18891 + C18892 + C18893) * C452) +
            (C19189 + C19190 + C19191) * C51262) *
               C51164 * C51337) *
              C623 +
          (((C18893 + C18892 + C18891) * C452 +
            (C18890 + C18889 + C18888) * C51454 -
            (C19188 + C19187 + C19186) * C453 -
            (C19191 + C19190 + C19189) * C51262) *
               C51164 * C51466 +
           ((C19004 + C19005 + C19006) * C452 +
            (C19007 + C19008 + C19009) * C51454 -
            (C15598 * C11694 + C15595 * C11695 + C15597 * C9229 +
             C15594 * C9231 + C15596 * C3184 + C15593 * C3187) *
                C453 -
            (C15598 * C11696 + C15595 * C11697 + C15597 * C9232 +
             C15594 * C9235 + C15596 * C3188 + C15593 * C3193) *
                C51262) *
               C51164 * C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
            C15598 * C992 + C15595 * C997) *
               C1232 +
           (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
            C15598 * C998 + C15595 * C1007) *
               C1228 -
           (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
            C15596 * C454 + C15593 * C460) *
               C1233 -
           (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
            C15596 * C461 + C15593 * C472) *
               C1229 +
           (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
            C15598 * C6565 + C15595 * C6568) *
               C1234 +
           (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
            C15598 * C6569 + C15595 * C6574) *
               C1230 -
           (C15598 * C16837 + C15595 * C16839 + C15597 * C6565 +
            C15594 * C6568 + C15596 * C1236 + C15593 * C1240) *
               C1235 -
           (C15598 * C16840 + C15595 * C16843 + C15597 * C6569 +
            C15594 * C6574 + C15596 * C1241 + C15593 * C1248) *
               C1231) *
              C51164 * C51466 +
          ((C18578 + C18579 + C18580) * C1232 +
           (C18581 + C18582 + C18583) * C1228 -
           (C19180 + C19181 + C19182) * C1233 -
           (C19183 + C19184 + C19185) * C1229 +
           (C19496 + C19497 + C19498) * C1234 +
           (C19499 + C19500 + C19501) * C1230 -
           (C15598 * C19599 + C15595 * C19600 + C15597 * C14009 +
            C15594 * C14011 + C15596 * C3674 + C15593 * C3677) *
               C1235 -
           (C15598 * C19601 + C15595 * C19602 + C15597 * C14012 +
            C15594 * C14015 + C15596 * C3678 + C15593 * C3683) *
               C1231) *
              C51164 * C51337) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1722 +
            (C117 * C127 + C51349 * C140) * C1720 -
            (C117 * C454 + C51349 * C460) * C1723 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
           C10694 * C51164 * C10917 +
           (C10691 + C10690 - C10689 - C10692) * C51164 * C10918) *
              C51220 * C51497 +
          ((C1727 - (C1726 + C1725) + C1728) * C51164 * C10915 +
           C4544 * C51164 * C10916 + C10194 * C51164 * C10917 +
           (C10187 - (C10188 + C10189) + C10190) * C51164 * C10918) *
              C51220 * C51483 +
          (C1745 * C51164 * C10915 + C4330 * C51164 * C10916 +
           (C4538 + C4537 - C4536 - C4539) * C51164 * C10917 +
           (C2913 * C1722 + C2914 * C1720 -
            (C117 * C3186 + C51349 * C3191) * C1723 -
            (C117 * C3192 + C51349 * C3195) * C51262) *
               C51164 * C10918) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
               C51466 +
           ((C2595 * C1722 + C2596 * C1720 - C3221 * C1723 - C3222 * C51262) *
                C2434 +
            (C1879 + C1878 - C1877 - C1880) * C2435 + C4330 * C2436) *
               C51337) *
              C51220 * C51497 +
          (((C1727 - (C1726 + C1725) + C1728) * C2434 +
            (C1731 - (C1730 + C1729) + C1732) * C2435 +
            (C1735 - (C1734 + C1733) + C1736) * C2436) *
               C51466 +
           ((C1877 - (C1878 + C1879) + C1880) * C2434 +
            (C1881 - (C1882 + C1883) + C1884) * C2435 +
            (C1885 - (C1886 + C1887) + C1888) * C2436) *
               C51337) *
              C51220 * C51483 +
          ((C1745 * C2434 + C1746 * C2435 +
            (C1739 + C1738 - C1737 - C1740) * C2436) *
               C51466 +
           (C4330 * C2434 + (C1887 + C1886 - C1885 - C1888) * C2435 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51349 * C1589) * C1723 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C2436) *
               C51337) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1722 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C1720 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1723 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C1722 +
            (C18581 + C18582 + C18583) * C1720 -
            (C19180 + C19181 + C19182) * C1723 -
            (C19183 + C19184 + C19185) * C51262) *
               C51164 * C51337) *
              C51220 * C51497 +
          (((C16008 + C16007 + C16006) * C1723 -
            ((C15641 + C15640 + C15639) * C1720 +
             (C15638 + C15637 + C15636) * C1722) +
            (C16011 + C16010 + C16009) * C51262) *
               C51164 * C51466 +
           ((C17344 + C17345 + C17346) * C1723 -
            ((C15824 + C15825 + C15826) * C1720 +
             (C15827 + C15828 + C15829) * C1722) +
            (C17347 + C17348 + C17349) * C51262) *
               C51164 * C51337) *
              C51220 * C51483 +
          (((C15647 + C15646 + C15645) * C1722 +
            (C15644 + C15643 + C15642) * C1720 -
            (C16014 + C16013 + C16012) * C1723 -
            (C16017 + C16016 + C16015) * C51262) *
               C51164 * C51466 +
           ((C15830 + C15831 + C15832) * C1722 +
            (C15833 + C15834 + C15835) * C1720 -
            (C15598 * C3676 + C15595 * C3681 + C15597 * C1148 + C15594 * C1154 +
             C15596 * C858 + C15593 * C868) *
                C1723 -
            (C15598 * C3682 + C15595 * C3685 + C15597 * C1155 + C15594 * C1160 +
             C15596 * C869 + C15593 * C882) *
                C51262) *
               C51164 * C51337) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C1722 +
                      (C117 * C127 + C51349 * C140) * C1720 -
                      (C117 * C454 + C51349 * C460) * C1723 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C51164 * C10915 +
                     (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
                     C10694 * C51164 * C10917 +
                     (C10691 + C10690 - C10689 - C10692) * C51164 * C10918) *
                        C51452 +
                    ((C4527 - (C4526 + C4525) + C4528) * C51164 * C10915 +
                     (C5044 - (C5045 + C5046) + C5047) * C51164 * C10916 +
                     (C10689 - (C10690 + C10691) + C10692) * C51164 * C10917 +
                     (C11411 * C1723 - (C8739 * C1720 + C8738 * C1722) +
                      C11412 * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C1456 +
                   (((C1727 - (C1726 + C1725) + C1728) * C51164 * C10915 +
                     C4544 * C51164 * C10916 + C10194 * C51164 * C10917 +
                     (C10187 - (C10188 + C10189) + C10190) * C51164 * C10918) *
                        C51452 +
                    (C4543 * C51164 * C10915 + C10193 * C51164 * C10916 +
                     (C10189 + C10188 - C10187 - C10190) * C51164 * C10917 +
                     (C8619 * C1722 + C8620 * C1720 -
                      (C117 * C8889 + C51349 * C8892) * C1723 -
                      (C117 * C8893 + C51349 * C8895) * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C51349 * C126) * C1722 +
                       (C117 * C127 + C51349 * C140) * C1720 -
                       (C117 * C454 + C51349 * C460) * C1723 -
                       (C117 * C461 + C51349 * C472) * C51262) *
                          C2434 +
                      (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
                         C51466 +
                     ((C4525 + C4526 - C4527 - C4528) * C2434 + C4543 * C2435 +
                      C4330 * C2436) *
                         C51337) *
                        C51452 +
                    (((C4527 - (C4526 + C4525) + C4528) * C2434 +
                      C4544 * C2435 + C4545 * C2436) *
                         C51466 +
                     ((C3223 * C1723 - (C2909 * C1720 + C2910 * C1722) +
                       C3224 * C51262) *
                          C2434 +
                      (C4532 - (C4533 + C4534) + C4535) * C2435 +
                      (C4536 - (C4537 + C4538) + C4539) * C2436) *
                         C51337) *
                        C51236) *
                       C1456 +
                   ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
                      (C1731 - (C1730 + C1729) + C1732) * C2435 +
                      (C1735 - (C1734 + C1733) + C1736) * C2436) *
                         C51466 +
                     (C4544 * C2434 + C4545 * C2435 +
                      (C1885 - (C1886 + C1887) + C1888) * C2436) *
                         C51337) *
                        C51452 +
                    ((C4543 * C2434 + C4330 * C2435 +
                      (C1887 + C1886 - C1885 - C1888) * C2436) *
                         C51466 +
                     ((C4534 + C4533 - C4532 - C4535) * C2434 +
                      (C4538 + C4537 - C4536 - C4539) * C2435 +
                      (C664 * C1722 + C665 * C1720 -
                       (C117 * C863 + C51349 * C878) * C1723 -
                       (C117 * C879 + C51349 * C887) * C51262) *
                          C2436) *
                         C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15596 * C119 + C15593 * C126 + C15597 * C454 +
                       C15594 * C460 + C15598 * C992 + C15595 * C997) *
                          C1722 +
                      (C15596 * C127 + C15593 * C140 + C15597 * C461 +
                       C15594 * C472 + C15598 * C998 + C15595 * C1007) *
                          C1720 -
                      (C15598 * C1236 + C15595 * C1240 + C15597 * C992 +
                       C15594 * C997 + C15596 * C454 + C15593 * C460) *
                          C1723 -
                      (C15598 * C1241 + C15595 * C1248 + C15597 * C998 +
                       C15594 * C1007 + C15596 * C461 + C15593 * C472) *
                          C51262) *
                         C51164 * C51466 +
                     ((C18578 + C18579 + C18580) * C1722 +
                      (C18581 + C18582 + C18583) * C1720 -
                      (C19180 + C19181 + C19182) * C1723 -
                      (C19183 + C19184 + C19185) * C51262) *
                         C51164 * C51337) *
                        C51452 +
                    (((C19182 + C19181 + C19180) * C1723 -
                      ((C18583 + C18582 + C18581) * C1720 +
                       (C18580 + C18579 + C18578) * C1722) +
                      (C19185 + C19184 + C19183) * C51262) *
                         C51164 * C51466 +
                     ((C19186 + C19187 + C19188) * C1723 -
                      ((C18888 + C18889 + C18890) * C1720 +
                       (C18891 + C18892 + C18893) * C1722) +
                      (C19189 + C19190 + C19191) * C51262) *
                         C51164 * C51337) *
                        C51236) *
                       C1456 +
                   ((((C16008 + C16007 + C16006) * C1723 -
                      ((C15641 + C15640 + C15639) * C1720 +
                       (C15638 + C15637 + C15636) * C1722) +
                      (C16011 + C16010 + C16009) * C51262) *
                         C51164 * C51466 +
                     ((C17344 + C17345 + C17346) * C1723 -
                      ((C15824 + C15825 + C15826) * C1720 +
                       (C15827 + C15828 + C15829) * C1722) +
                      (C17347 + C17348 + C17349) * C51262) *
                         C51164 * C51337) *
                        C51452 +
                    (((C15829 + C15828 + C15827) * C1722 +
                      (C15826 + C15825 + C15824) * C1720 -
                      (C17346 + C17345 + C17344) * C1723 -
                      (C17349 + C17348 + C17347) * C51262) *
                         C51164 * C51466 +
                     ((C16176 + C16177 + C16178) * C1722 +
                      (C16179 + C16180 + C16181) * C1720 -
                      (C15598 * C9348 + C15595 * C9351 + C15597 * C3553 +
                       C15594 * C3557 + C15596 * C861 + C15593 * C874) *
                          C1723 -
                      (C15598 * C9352 + C15595 * C9354 + C15597 * C3558 +
                       C15594 * C3562 + C15596 * C875 + C15593 * C885) *
                          C51262) *
                         C51164 * C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C51164 * C10915 +
           (C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51164 * C10916 +
           (C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C51164 *
               C10917 +
           (C3035 * C1989 + C3036 * C51499 - C8913 * C1990 - C8914 * C51489 +
            C11625 * C1991 + C11626 * C1988) *
               C51164 * C10918) *
              C51220 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51164 * C10915 +
           (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51164 * C10916 +
           (C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51164 *
               C10917 +
           (C8915 * C1990 - (C2912 * C51499 + C2911 * C1989) + C8916 * C51489 -
            (C117 * C9230 + C51349 * C9233) * C1991 -
            (C117 * C9234 + C51349 * C9236) * C1988) *
               C51164 * C10918) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C2435 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C2436) *
               C51466 +
           ((C2595 * C1989 + C2596 * C51499 - C3221 * C1990 - C3222 * C51489 +
             C3573 * C1991 + C3574 * C1988) *
                C2434 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C2435 +
            (C4698 + C4699 - C4700 - C4701 + C4702 + C4703) * C2436) *
               C51337) *
              C51220 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C2434 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C2435 +
            (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C2436) *
               C51466 +
           ((C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C2434 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C2435 +
            (C1615 * C1990 - (C335 * C51499 + C336 * C1989) + C1616 * C51489 -
             (C117 * C1149 + C51349 * C1156) * C1991 -
             (C117 * C1157 + C51349 * C1161) * C1988) *
                C2436) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C1989 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51499 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C1990 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51489 +
            (C15596 * C992 + C15593 * C997 + C15597 * C1236 + C15594 * C1240 +
             C15598 * C6565 + C15595 * C6568) *
                C1991 +
            (C15596 * C998 + C15593 * C1007 + C15597 * C1241 + C15594 * C1248 +
             C15598 * C6569 + C15595 * C6574) *
                C1988) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C1989 +
            (C18581 + C18582 + C18583) * C51499 -
            (C19180 + C19181 + C19182) * C1990 -
            (C19183 + C19184 + C19185) * C51489 +
            (C19496 + C19497 + C19498) * C1991 +
            (C19499 + C19500 + C19501) * C1988) *
               C51164 * C51337) *
              C51220 * C1456 +
          (((C16008 + C16007 + C16006) * C1990 -
            ((C15641 + C15640 + C15639) * C51499 +
             (C15638 + C15637 + C15636) * C1989) +
            (C16011 + C16010 + C16009) * C51489 -
            (C16586 + C16585 + C16584) * C1991 -
            (C16589 + C16588 + C16587) * C1988) *
               C51164 * C51466 +
           ((C17344 + C17345 + C17346) * C1990 -
            ((C15824 + C15825 + C15826) * C51499 +
             (C15827 + C15828 + C15829) * C1989) +
            (C17347 + C17348 + C17349) * C51489 -
            (C15598 * C16735 + C15595 * C16736 + C15597 * C3675 +
             C15594 * C3679 + C15596 * C1147 + C15593 * C1152) *
                C1991 -
            (C15598 * C16737 + C15595 * C16738 + C15597 * C3680 +
             C15594 * C3684 + C15596 * C1153 + C15593 * C1159) *
                C1988) *
               C51164 * C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C622 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C623 +
           (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
            (((C117 * C745 + C51349 * C753) * C118 +
              (C117 * C752 + C51349 * C757) * C51250) *
                 C2434 +
             (C2917 + C2918) * C2435 + (C2919 + C2920) * C2436) *
                C51337) *
               C624) *
              C51445 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C623 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C622 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C2436 +
             (C2920 + C2919) * C2435 + (C2918 + C2917) * C2434) *
                C51337 +
            ((C671 + C670) * C2436 + C2592 * C2435 + C2894 * C2434) * C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51466 +
           (((C117 * C297 + C51349 * C307) * C118 +
             (C117 * C306 + C51349 * C315) * C51250) *
                C2434 +
            (C348 + C347) * C2435 + C2440 * C2436) *
               C51337) *
              C51220 * C113 -
          ((C351 * C2436 + C352 * C2435 + (C347 + C348) * C2434) * C51337 +
           (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
               C51466) *
              C51220 * C114 +
          ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
           (C2440 * C2434 + (C344 + C343) * C2435 + (C349 + C350) * C2436) *
               C51337) *
              C51220 * C115 -
          ((((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C2436 +
            (C350 + C349) * C2435 + C351 * C2434) *
               C51337 +
           ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
           (C3037 + C3038) * C51164 * C10918) *
              C51220 * C113 -
          (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
           C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
              C51220 * C114 +
          (C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
           C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
              C51220 * C115 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C51164 * C10918 +
           (C671 + C670) * C51164 * C10917 + C351 * C51164 * C10916 +
           C191 * C51164 * C10915) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C622 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C623 +
           (C11214 * C10915 + C11218 * C10916 +
            (C8741 + C8742) * C51164 * C10917 +
            ((C117 * C8723 + C51349 * C8727) * C118 +
             (C117 * C8726 + C51349 * C8729) * C51250) *
                C51164 * C10918) *
               C624) *
              C51445 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C623 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C622 -
           (((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51164 * C10918 +
            (C8624 + C8623) * C51164 * C10917 + C11216 * C10916 +
            C11217 * C10915) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51164 * C51466 +
           ((C15596 * C297 + C15593 * C307 + C15597 * C856 + C15594 * C864 +
             C15598 * C1146 + C15595 * C1150) *
                C118 +
            (C15596 * C306 + C15593 * C315 + C15597 * C865 + C15594 * C880 +
             C15598 * C1151 + C15595 * C1158) *
                C51250) *
               C51164 * C51337) *
              C51220 * C113 -
          (((C15824 + C15825 + C15826) * C51250 +
            (C15827 + C15828 + C15829) * C118) *
               C51164 * C51337 +
           ((C15641 + C15640 + C15639) * C51250 +
            (C15638 + C15637 + C15636) * C118) *
               C51164 * C51466) *
              C51220 * C114 +
          (((C15647 + C15646 + C15645) * C118 +
            (C15644 + C15643 + C15642) * C51250) *
               C51164 * C51466 +
           ((C15830 + C15831 + C15832) * C118 +
            (C15833 + C15834 + C15835) * C51250) *
               C51164 * C51337) *
              C51220 * C115 -
          (((C15598 * C1157 + C15595 * C1161 + C15597 * C871 + C15594 * C883 +
             C15596 * C300 + C15593 * C312) *
                C51250 +
            (C15598 * C1149 + C15595 * C1156 + C15597 * C859 + C15594 * C870 +
             C15596 * C294 + C15593 * C301) *
                C118) *
               C51164 * C51337 +
           ((C15653 + C15652 + C15651) * C51250 +
            (C15650 + C15649 + C15648) * C118) *
               C51164 * C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51164 * C51466 +
            ((C18578 + C18579 + C18580) * C118 +
             (C18581 + C18582 + C18583) * C51250) *
                C51164 * C51337) *
               C622 -
           (((C18888 + C18889 + C18890) * C51250 +
             (C18891 + C18892 + C18893) * C118) *
                C51164 * C51337 +
            ((C18583 + C18582 + C18581) * C51250 +
             (C18580 + C18579 + C18578) * C118) *
                C51164 * C51466) *
               C623 +
           (((C18893 + C18892 + C18891) * C118 +
             (C18890 + C18889 + C18888) * C51250) *
                C51164 * C51466 +
            ((C15596 * C745 + C15593 * C753 + C15597 * C3184 + C15594 * C3187 +
              C15598 * C9229 + C15595 * C9231) *
                 C118 +
             (C15596 * C752 + C15593 * C757 + C15597 * C3188 + C15594 * C3193 +
              C15598 * C9232 + C15595 * C9235) *
                 C51250) *
                C51164 * C51337) *
               C624) *
              C51445 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51164 * C51466 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51164 * C51337) *
               C623 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51164 * C51337 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51164 * C51466) *
               C622 -
           (((C15598 * C9234 + C15595 * C9236 + C15597 * C3190 +
              C15594 * C3194 + C15596 * C750 + C15593 * C756) *
                 C51250 +
             (C15598 * C9230 + C15595 * C9233 + C15597 * C3185 +
              C15594 * C3189 + C15596 * C744 + C15593 * C751) *
                 C118) *
                C51164 * C51337 +
            ((C16181 + C16180 + C16179) * C51250 +
             (C16178 + C16177 + C16176) * C118) *
                C51164 * C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51466 +
           ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) * C51337) *
              C737 -
          ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
           (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
              C738 +
          (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
           ((C3037 + C3038) * C2434 + (C2917 + C2918) * C2435 +
            (C2919 + C2920) * C2436) *
               C51337) *
              C739 -
          ((((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C2436 +
            ((C117 * C3023 + C51349 * C3028) * C51250 +
             (C117 * C3019 + C51349 * C3024) * C118) *
                C2435 +
            ((C117 * C3025 + C51349 * C3029) * C51250 +
             (C117 * C3020 + C51349 * C3026) * C118) *
                C2434) *
               C51337 +
           ((C2920 + C2919) * C2436 + (C2918 + C2917) * C2435 +
            (C3038 + C3037) * C2434) *
               C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C51452 -
           ((C2592 * C2436 + (C667 + C666) * C2435 +
             ((C117 * C633 + C51349 * C642) * C51250 +
              (C117 * C627 + C51349 * C632) * C118) *
                 C2434) *
                C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51236) *
              C291 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            ((C666 + C667) * C2434 + (C668 + C669) * C2435 +
             (C670 + C671) * C2436) *
                C51337) *
               C51236 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C51452) *
              C292 +
          (((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
            (C2440 * C2434 + C2594 * C2435 + (C349 + C350) * C2436) * C51337) *
               C51452 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C2436 +
             (C671 + C670) * C2435 + C2592 * C2434) *
                C51337 +
            ((C350 + C349) * C2436 + C351 * C2435 + C352 * C2434) * C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
            (C3037 + C3038) * C51164 * C10918) *
               C51452 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51236) *
              C291 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51236 -
           (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
            C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
               C51452) *
              C292 +
          ((C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
            C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
               C51452 -
           (((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C51164 * C10918 +
            (C2920 + C2919) * C51164 * C10917 + C2592 * C51164 * C10916 +
            C352 * C51164 * C10915) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
           C11218 * C10918) *
              C737 -
          (C11295 * C10918 + C11290 * C10917 +
           (C2915 + C2916) * C51164 * C10916 +
           (C2598 + C2597) * C51164 * C10915) *
              C738 +
          (C11214 * C10915 + C11218 * C10916 +
           (C8741 + C8742) * C51164 * C10917 +
           (C11298 + C11299) * C51164 * C10918) *
              C739 -
          (((C117 * C11285 + C51349 * C11287) * C51250 +
            (C117 * C11284 + C51349 * C11286) * C118) *
               C51164 * C10918 +
           (C11299 + C11298) * C51164 * C10917 + C11295 * C10916 +
           C11290 * C10915) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
              C15598 * C992 + C15595 * C997) *
                 C118 +
             (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
              C15598 * C998 + C15595 * C1007) *
                 C51250) *
                C51164 * C51466 +
            ((C18578 + C18579 + C18580) * C118 +
             (C18581 + C18582 + C18583) * C51250) *
                C51164 * C51337) *
               C51452 -
           (((C15598 * C3556 + C15595 * C3561 + C15597 * C873 + C15594 * C884 +
              C15596 * C633 + C15593 * C642) *
                 C51250 +
             (C15598 * C3552 + C15595 * C3555 + C15597 * C860 + C15594 * C872 +
              C15596 * C627 + C15593 * C632) *
                 C118) *
                C51164 * C51337 +
            ((C18583 + C18582 + C18581) * C51250 +
             (C18580 + C18579 + C18578) * C118) *
                C51164 * C51466) *
               C51236) *
              C291 +
          ((((C15829 + C15828 + C15827) * C118 +
             (C15826 + C15825 + C15824) * C51250) *
                C51164 * C51466 +
            ((C16176 + C16177 + C16178) * C118 +
             (C16179 + C16180 + C16181) * C51250) *
                C51164 * C51337) *
               C51236 -
           (((C15824 + C15825 + C15826) * C51250 +
             (C15827 + C15828 + C15829) * C118) *
                C51164 * C51337 +
            ((C15641 + C15640 + C15639) * C51250 +
             (C15638 + C15637 + C15636) * C118) *
                C51164 * C51466) *
               C51452) *
              C292 +
          ((((C15647 + C15646 + C15645) * C118 +
             (C15644 + C15643 + C15642) * C51250) *
                C51164 * C51466 +
            ((C15830 + C15831 + C15832) * C118 +
             (C15833 + C15834 + C15835) * C51250) *
                C51164 * C51337) *
               C51452 -
           (((C15598 * C3560 + C15595 * C3563 + C15597 * C877 + C15594 * C886 +
              C15596 * C637 + C15593 * C644) *
                 C51250 +
             (C15598 * C3554 + C15595 * C3559 + C15597 * C862 + C15594 * C876 +
              C15596 * C629 + C15593 * C636) *
                 C118) *
                C51164 * C51337 +
            ((C15835 + C15834 + C15833) * C51250 +
             (C15832 + C15831 + C15830) * C118) *
                C51164 * C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C118 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51250) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C118 +
            (C18581 + C18582 + C18583) * C51250) *
               C51164 * C51337) *
              C737 -
          (((C18888 + C18889 + C18890) * C51250 +
            (C18891 + C18892 + C18893) * C118) *
               C51164 * C51337 +
           ((C18583 + C18582 + C18581) * C51250 +
            (C18580 + C18579 + C18578) * C118) *
               C51164 * C51466) *
              C738 +
          (((C18893 + C18892 + C18891) * C118 +
            (C18890 + C18889 + C18888) * C51250) *
               C51164 * C51466 +
           ((C19004 + C19005 + C19006) * C118 +
            (C19007 + C19008 + C19009) * C51250) *
               C51164 * C51337) *
              C739 -
          (((C15598 * C11614 + C15595 * C11615 + C15597 * C8891 +
             C15594 * C8894 + C15596 * C3025 + C15593 * C3029) *
                C51250 +
            (C15598 * C11612 + C15595 * C11613 + C15597 * C8888 +
             C15594 * C8890 + C15596 * C3020 + C15593 * C3026) *
                C118) *
               C51164 * C51337 +
           ((C19009 + C19008 + C19007) * C51250 +
            (C19006 + C19005 + C19004) * C118) *
               C51164 * C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
               C51466 +
           ((C3197 + C3198 - C3229 - C3230) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
               C51337) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C2435 +
            (C1619 - (C1601 + C1602) + C1620) * C2436) *
               C51466 +
           ((C3231 - (C3205 + C3206) + C3232) * C2434 +
            (C3233 - (C3211 + C3212) + C3234) * C2435 +
            (C3235 - (C3217 + C3218) + C3236) * C2436) *
               C51337) *
              C623 +
          (((C3206 + C3205 - C3231 - C3232) * C2434 +
            (C3212 + C3211 - C3233 - C3234) * C2435 +
            (C3218 + C3217 - C3235 - C3236) * C2436) *
               C51466 +
           ((C3035 * C452 + C3036 * C51454 -
             (C117 * C3184 + C51349 * C3187) * C453 -
             (C117 * C3188 + C51349 * C3193) * C51262) *
                C2434 +
            (C2911 * C452 + C2912 * C51454 -
             (C117 * C3185 + C51349 * C3189) * C453 -
             (C117 * C3190 + C51349 * C3194) * C51262) *
                C2435 +
            (C2913 * C452 + C2914 * C51454 -
             (C117 * C3186 + C51349 * C3191) * C453 -
             (C117 * C3192 + C51349 * C3195) * C51262) *
                C2436) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
               C51466 +
           ((C2595 * C452 + C2596 * C51454 -
             (C117 * C856 + C51349 * C864) * C453 -
             (C117 * C865 + C51349 * C880) * C51262) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
               C51337) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C2435 +
            (C517 - (C492 + C491) + C518) * C2436) *
               C51466 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C2435 +
            (C1621 - (C1607 + C1608) + C1622) * C2436) *
               C51337) *
              C51220 * C292 +
          ((C523 * C2434 + C524 * C2435 + (C500 + C499 - C519 - C520) * C2436) *
               C51466 +
           (C2747 * C2434 + (C1608 + C1607 - C1621 - C1622) * C2435 +
            (C341 * C452 + C342 * C51454 -
             (C117 * C1588 + C51349 * C1589) * C453 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C2436) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 +
           C8917 * C51164 * C10917 +
           (C8902 + C8901 - C8919 - C8920) * C51164 * C10918) *
              C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C51164 * C10915 +
           C4180 * C51164 * C10916 + C9844 * C51164 * C10917 +
           (C8921 - (C8907 + C8908) + C8922) * C51164 * C10918) *
              C51220 * C292 +
          (C523 * C51164 * C10915 + C2747 * C51164 * C10916 +
           (C3218 + C3217 - C3235 - C3236) * C51164 * C10917 +
           (C2913 * C452 + C2914 * C51454 -
            (C117 * C3186 + C51349 * C3191) * C453 -
            (C117 * C3192 + C51349 * C3195) * C51262) *
               C51164 * C10918) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 + C11402 * C10917 +
           C11416 * C10918) *
              C622 +
          ((C3229 - (C3198 + C3197) + C3230) * C51164 * C10915 +
           (C3231 - (C3205 + C3206) + C3232) * C51164 * C10916 +
           (C8919 - (C8901 + C8902) + C8920) * C51164 * C10917 +
           (C11414 - (C11406 + C11407) + C11415) * C51164 * C10918) *
              C623 +
          (C11402 * C10915 + C11416 * C10916 +
           (C11407 + C11406 - C11414 - C11415) * C51164 * C10917 +
           (C11296 * C452 + C11297 * C51454 -
            (C117 * C11397 + C51349 * C11398) * C453 -
            (C117 * C11399 + C51349 * C11400) * C51262) *
               C51164 * C10918) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C452 +
            (C18581 + C18582 + C18583) * C51454 -
            (C15598 * C3674 + C15595 * C3677 + C15597 * C1146 + C15594 * C1150 +
             C15596 * C856 + C15593 * C864) *
                C453 -
            (C15598 * C3678 + C15595 * C3683 + C15597 * C1151 + C15594 * C1158 +
             C15596 * C865 + C15593 * C880) *
                C51262) *
               C51164 * C51337) *
              C51220 * C291 +
          (((C16008 + C16007 + C16006) * C453 -
            ((C15641 + C15640 + C15639) * C51454 +
             (C15638 + C15637 + C15636) * C452) +
            (C16011 + C16010 + C16009) * C51262) *
               C51164 * C51466 +
           ((C17344 + C17345 + C17346) * C453 -
            ((C15824 + C15825 + C15826) * C51454 +
             (C15827 + C15828 + C15829) * C452) +
            (C17347 + C17348 + C17349) * C51262) *
               C51164 * C51337) *
              C51220 * C292 +
          (((C15647 + C15646 + C15645) * C452 +
            (C15644 + C15643 + C15642) * C51454 -
            (C16014 + C16013 + C16012) * C453 -
            (C16017 + C16016 + C16015) * C51262) *
               C51164 * C51466 +
           ((C15830 + C15831 + C15832) * C452 +
            (C15833 + C15834 + C15835) * C51454 -
            (C15598 * C3676 + C15595 * C3681 + C15597 * C1148 + C15594 * C1154 +
             C15596 * C858 + C15593 * C868) *
                C453 -
            (C15598 * C3682 + C15595 * C3685 + C15597 * C1155 + C15594 * C1160 +
             C15596 * C869 + C15593 * C882) *
                C51262) *
               C51164 * C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15596 * C119 + C15593 * C126 + C15597 * C454 + C15594 * C460 +
             C15598 * C992 + C15595 * C997) *
                C452 +
            (C15596 * C127 + C15593 * C140 + C15597 * C461 + C15594 * C472 +
             C15598 * C998 + C15595 * C1007) *
                C51454 -
            (C15598 * C1236 + C15595 * C1240 + C15597 * C992 + C15594 * C997 +
             C15596 * C454 + C15593 * C460) *
                C453 -
            (C15598 * C1241 + C15595 * C1248 + C15597 * C998 + C15594 * C1007 +
             C15596 * C461 + C15593 * C472) *
                C51262) *
               C51164 * C51466 +
           ((C18578 + C18579 + C18580) * C452 +
            (C18581 + C18582 + C18583) * C51454 -
            (C19180 + C19181 + C19182) * C453 -
            (C19183 + C19184 + C19185) * C51262) *
               C51164 * C51337) *
              C622 +
          (((C19182 + C19181 + C19180) * C453 -
            ((C18583 + C18582 + C18581) * C51454 +
             (C18580 + C18579 + C18578) * C452) +
            (C19185 + C19184 + C19183) * C51262) *
               C51164 * C51466 +
           ((C19186 + C19187 + C19188) * C453 -
            ((C18888 + C18889 + C18890) * C51454 +
             (C18891 + C18892 + C18893) * C452) +
            (C19189 + C19190 + C19191) * C51262) *
               C51164 * C51337) *
              C623 +
          (((C18893 + C18892 + C18891) * C452 +
            (C18890 + C18889 + C18888) * C51454 -
            (C19188 + C19187 + C19186) * C453 -
            (C19191 + C19190 + C19189) * C51262) *
               C51164 * C51466 +
           ((C19004 + C19005 + C19006) * C452 +
            (C19007 + C19008 + C19009) * C51454 -
            (C15598 * C11694 + C15595 * C11695 + C15597 * C9229 +
             C15594 * C9231 + C15596 * C3184 + C15593 * C3187) *
                C453 -
            (C15598 * C11696 + C15595 * C11697 + C15597 * C9232 +
             C15594 * C9235 + C15596 * C3188 + C15593 * C3193) *
                C51262) *
               C51164 * C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C1350 -
           (C13403 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51236) *
              C51497 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C51236 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C1350) *
              C51483 +
          ((C5358 * C51164 * C8166 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
                C8167 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
                C8168) *
               C1350 -
           (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                 C51250 +
             (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                 C118) *
                C51164 * C8168 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51164 *
                C8167 +
            C5546 * C51164 * C8166) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C1350 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51236) *
              C51497 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51236 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C1350) *
              C51483 +
          ((C5358 * C2434 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
            ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
               C51323 * C1350 -
           (((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C2436 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C2435 +
            C5546 * C2434) *
               C51323 * C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C118 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51250) *
               C51164 * C51323 * C1350 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51250 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C118) *
               C51164 * C51323 * C51236) *
              C51497 +
          (((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C118 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51250) *
               C51164 * C51323 * C51236 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51250 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C118) *
               C51164 * C51323 * C1350) *
              C51483 +
          (((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
             C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
                C118 +
            (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
             C21133 * C1002 + C21129 * C1009 + C21134 * C1245 +
             C21130 * C1250) *
                C51250) *
               C51164 * C51323 * C1350 -
           ((C21134 * C3682 + C21130 * C3685 + C21133 * C1155 + C21129 * C1160 +
             C21132 * C869 + C21128 * C882 + C21131 * C302 + C21127 * C313) *
                C51250 +
            (C21134 * C3676 + C21130 * C3681 + C21133 * C1148 + C21129 * C1154 +
             C21132 * C858 + C21128 * C868 + C21131 * C295 + C21127 * C303) *
                C118) *
               C51164 * C51323 * C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C51498 -
           (C13403 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51486 +
           (C13286 * C8166 +
            ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
                C8167 +
            ((C13398 + C13399) * C118 + (C13400 + C13401) * C51250) * C51164 *
                C8168) *
               C1455) *
              C1456 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C51486 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C51498 -
           (((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51164 * C8168 +
            ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51164 *
                C8167 +
            C13287 * C8166) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C51498 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51486 +
           (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                 C118 +
             (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                 C51250) *
                C2434 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
               C51323 * C1455) *
              C1456 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51486 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C51498 -
           (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                 C51250 +
             (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                 C118) *
                C2436 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C2435 +
            ((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C2434) *
               C51323 * C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C118 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51250) *
               C51164 * C51323 * C51498 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51250 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C118) *
               C51164 * C51323 * C51486 +
           ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
             C21133 * C3552 + C21129 * C3555 + C21134 * C9347 +
             C21130 * C9349) *
                C118 +
            (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
             C21133 * C3556 + C21129 * C3561 + C21134 * C9350 +
             C21130 * C9353) *
                C51250) *
               C51164 * C51323 * C1455) *
              C1456 +
          (((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C118 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51250) *
               C51164 * C51323 * C51486 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51250 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C118) *
               C51164 * C51323 * C51498 -
           ((C21134 * C9352 + C21130 * C9354 + C21133 * C3558 + C21129 * C3562 +
             C21132 * C875 + C21128 * C885 + C21131 * C635 + C21127 * C643) *
                C51250 +
            (C21134 * C9348 + C21130 * C9351 + C21133 * C3553 + C21129 * C3557 +
             C21132 * C861 + C21128 * C874 + C21131 * C628 + C21127 * C634) *
                C118) *
               C51164 * C51323 * C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C51164 * C8166 +
            ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
             (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                C51164 * C8167 +
            C13595 * C8168) *
               C1350 +
           (((C13577 + C13576) * C453 -
             ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
             (C13579 + C13578) * C51262) *
                C51164 * C8166 +
            ((C13582 + C13581) * C453 -
             ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
             (C13584 + C13583) * C51262) *
                C51164 * C8167 +
            ((C13585 + C13586) * C453 - (C13386 * C51454 + C13387 * C452) +
             (C13587 + C13588) * C51262) *
                C51164 * C8168) *
               C51236) *
              C1456 +
          ((((C5720 + C5719) * C453 -
             ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
             (C5722 + C5721) * C51262) *
                C51164 * C8166 +
            ((C7080 + C7081) * C453 -
             ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
             (C7082 + C7083) * C51262) *
                C51164 * C8167 +
            ((C14512 + C14513) * C453 - (C13270 * C51454 + C13271 * C452) +
             (C14514 + C14515) * C51262) *
                C51164 * C8168) *
               C1350 +
           (((C5537 + C5536) * C452 + (C5535 + C5534) * C51454 -
             (C7081 + C7080) * C453 - (C7083 + C7082) * C51262) *
                C51164 * C8166 +
            ((C5900 + C5901) * C452 + (C5902 + C5903) * C51454 -
             (C14513 + C14512) * C453 - (C14515 + C14514) * C51262) *
                C51164 * C8167 +
            ((C13278 + C13279) * C452 + (C13280 + C13281) * C51454 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C453 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51164 * C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C2434 +
            ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
             (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                C2435 +
            C5737 * C2436) *
               C51323 * C1350 +
           (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                 C453 -
             ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                  C51454 +
              (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                  C452) +
             (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                 C51262) *
                C2434 +
            ((C7080 + C7081) * C453 -
             ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
             (C7082 + C7083) * C51262) *
                C2435 +
            ((C7084 + C7085) * C453 - (C5542 * C51454 + C5543 * C452) +
             (C7086 + C7087) * C51262) *
                C2436) *
               C51323 * C51236) *
              C1456 +
          ((((C5720 + C5719) * C453 -
             ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
             (C5722 + C5721) * C51262) *
                C2434 +
            ((C5725 + C5724) * C453 -
             ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
             (C5727 + C5726) * C51262) *
                C2435 +
            ((C5728 + C5729) * C453 - (C5352 * C51454 + C5353 * C452) +
             (C5730 + C5731) * C51262) *
                C2436) *
               C51323 * C1350 +
           (((C5537 + C5536) * C452 + (C5535 + C5534) * C51454 -
             (C7081 + C7080) * C453 - (C7083 + C7082) * C51262) *
                C2434 +
            ((C5533 + C5532) * C452 + (C5531 + C5530) * C51454 -
             (C7085 + C7084) * C453 - (C7087 + C7086) * C51262) *
                C2435 +
            ((C5538 + C5539) * C452 + (C5540 + C5541) * C51454 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C453 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C2436) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C452 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51454 -
            (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
             C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
                C453 -
            (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
             C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
                C51262) *
               C51164 * C51323 * C1350 +
           ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
             C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
             C21130 * C14011) *
                C453 -
            ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 +
              C21129 * C1158 + C21132 * C865 + C21128 * C880 + C21131 * C306 +
              C21127 * C315) *
                 C51454 +
             (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 +
              C21129 * C1150 + C21132 * C856 + C21128 * C864 + C21131 * C297 +
              C21127 * C307) *
                 C452) +
            (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
             C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
             C21130 * C14015) *
                C51262) *
               C51164 * C51323 * C51236) *
              C1456 +
          (((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
             C21133 * C1237 + C21129 * C1242 + C21134 * C6566 +
             C21130 * C6570) *
                C453 -
            ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 +
              C21129 * C1008 + C21132 * C463 + C21128 * C473 + C21131 * C129 +
              C21127 * C141) *
                 C51454 +
             (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
              C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                 C452) +
            (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
             C21133 * C1243 + C21129 * C1249 + C21134 * C6571 +
             C21130 * C6575) *
                C51262) *
               C51164 * C51323 * C1350 +
           ((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C452 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51454 -
            (C21134 * C16735 + C21130 * C16736 + C21133 * C3675 +
             C21129 * C3679 + C21132 * C1147 + C21128 * C1152 + C21131 * C857 +
             C21127 * C866) *
                C453 -
            (C21134 * C16737 + C21130 * C16738 + C21133 * C3680 +
             C21129 * C3684 + C21132 * C1153 + C21128 * C1159 + C21131 * C867 +
             C21127 * C881) *
                C51262) *
               C51164 * C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C51164 * C8166 +
            ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
             (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                C51164 * C8167 +
            (C13252 * C1722 + C13253 * C1720 - C13589 * C1723 -
             C13590 * C51262) *
                C51164 * C8168) *
               C1350 +
           (((C13577 + C13576) * C1723 -
             ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
             (C13579 + C13578) * C51262) *
                C51164 * C8166 +
            ((C13582 + C13581) * C1723 -
             ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
             (C13584 + C13583) * C51262) *
                C51164 * C8167 +
            ((C13585 + C13586) * C1723 - (C13386 * C1720 + C13387 * C1722) +
             (C13587 + C13588) * C51262) *
                C51164 * C8168) *
               C51236) *
              C51445 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C51164 * C8166 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C51164 * C8167 +
            ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
             (C14514 + C14515) * C51262) *
                C51164 * C8168) *
               C1350 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C51164 * C8166 +
            ((C5900 + C5901) * C1722 + (C5902 + C5903) * C1720 -
             (C14513 + C14512) * C1723 - (C14515 + C14514) * C51262) *
                C51164 * C8167 +
            ((C13278 + C13279) * C1722 + (C13280 + C13281) * C1720 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C1723 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51164 * C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C2434 +
            ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
             (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                C2435 +
            C7240 * C2436) *
               C51323 * C1350 +
           (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                 C1723 -
             ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                  C1720 +
              (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                  C1722) +
             (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                 C51262) *
                C2434 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C2435 +
            ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
             (C7086 + C7087) * C51262) *
                C2436) *
               C51323 * C51236) *
              C51445 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C2434 +
            ((C5725 + C5724) * C1723 -
             ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
             (C5727 + C5726) * C51262) *
                C2435 +
            ((C5728 + C5729) * C1723 - (C5352 * C1720 + C5353 * C1722) +
             (C5730 + C5731) * C51262) *
                C2436) *
               C51323 * C1350 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C2434 +
            ((C5533 + C5532) * C1722 + (C5531 + C5530) * C1720 -
             (C7085 + C7084) * C1723 - (C7087 + C7086) * C51262) *
                C2435 +
            ((C5538 + C5539) * C1722 + (C5540 + C5541) * C1720 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C1723 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C2436) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C1722 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C1720 -
            (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
             C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
                C1723 -
            (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
             C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
                C51262) *
               C51164 * C51323 * C1350 +
           ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
             C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
             C21130 * C14011) *
                C1723 -
            ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 +
              C21129 * C1158 + C21132 * C865 + C21128 * C880 + C21131 * C306 +
              C21127 * C315) *
                 C1720 +
             (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 +
              C21129 * C1150 + C21132 * C856 + C21128 * C864 + C21131 * C297 +
              C21127 * C307) *
                 C1722) +
            (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
             C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
             C21130 * C14015) *
                C51262) *
               C51164 * C51323 * C51236) *
              C51445 +
          (((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
             C21133 * C1237 + C21129 * C1242 + C21134 * C6566 +
             C21130 * C6570) *
                C1723 -
            ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 +
              C21129 * C1008 + C21132 * C463 + C21128 * C473 + C21131 * C129 +
              C21127 * C141) *
                 C1720 +
             (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
              C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                 C1722) +
            (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
             C21133 * C1243 + C21129 * C1249 + C21134 * C6571 +
             C21130 * C6575) *
                C51262) *
               C51164 * C51323 * C1350 +
           ((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C1722 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C1720 -
            (C21134 * C16735 + C21130 * C16736 + C21133 * C3675 +
             C21129 * C3679 + C21132 * C1147 + C21128 * C1152 + C21131 * C857 +
             C21127 * C866) *
                C1723 -
            (C21134 * C16737 + C21130 * C16738 + C21133 * C3680 +
             C21129 * C3684 + C21132 * C1153 + C21128 * C1159 + C21131 * C867 +
             C21127 * C881) *
                C51262) *
               C51164 * C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
            (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           C15349 * C8168) *
              C51498 +
          (((C13577 + C13576) * C1723 -
            ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
            (C13579 + C13578) * C51262) *
               C51164 * C8166 +
           ((C13582 + C13581) * C1723 -
            ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
            (C13584 + C13583) * C51262) *
               C51164 * C8167 +
           ((C13585 + C13586) * C1723 - (C13386 * C1720 + C13387 * C1722) +
            (C13587 + C13588) * C51262) *
               C51164 * C8168) *
              C51486 +
          (C15349 * C8166 +
           ((C13277 + C13276) * C1722 + (C13275 + C13274) * C1720 -
            (C13586 + C13585) * C1723 - (C13588 + C13587) * C51262) *
               C51164 * C8167 +
           ((C13398 + C13399) * C1722 + (C13400 + C13401) * C1720 -
            (C5300 * C11612 + C51361 * C11613 + C5299 * C8888 +
             C51467 * C8890) *
                C1723 -
            (C5300 * C11614 + C51361 * C11615 + C5299 * C8891 +
             C51467 * C8894) *
                C51262) *
               C51164 * C8168) *
              C1455) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
            (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
               C2435 +
           C7240 * C2436) *
              C51323 * C51498 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C1723 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C1720 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C1722) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51262) *
               C2434 +
           ((C7080 + C7081) * C1723 -
            ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
            (C7082 + C7083) * C51262) *
               C2435 +
           ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
            (C7086 + C7087) * C51262) *
               C2436) *
              C51323 * C51486 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C1722 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C1720 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C1723 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C2434 +
           ((C5900 + C5901) * C1722 + (C5902 + C5903) * C1720 -
            (C5300 * C3553 + C51361 * C3557 + C5299 * C861 + C51467 * C874) *
                C1723 -
            (C5300 * C3558 + C51361 * C3562 + C5299 * C875 + C51467 * C885) *
                C51262) *
               C2435 +
           ((C5904 + C5905) * C1722 + (C5906 + C5907) * C1720 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C1723 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C2436) *
              C51323 * C1455) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C1722 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C1720 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C1723 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51262) *
              C51164 * C51323 * C51498 +
          ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
            C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
            C21130 * C14011) *
               C1723 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C1720 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C1722) +
           (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
            C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
            C21130 * C14015) *
               C51262) *
              C51164 * C51323 * C51486 +
          ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
            C21133 * C3552 + C21129 * C3555 + C21134 * C9347 + C21130 * C9349) *
               C1722 +
           (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
            C21133 * C3556 + C21129 * C3561 + C21134 * C9350 + C21130 * C9353) *
               C1720 -
           (C21134 * C14010 + C21130 * C14013 + C21133 * C9347 +
            C21129 * C9349 + C21132 * C3552 + C21128 * C3555 + C21131 * C860 +
            C21127 * C872) *
               C1723 -
           (C21134 * C14014 + C21130 * C14016 + C21133 * C9350 +
            C21129 * C9353 + C21132 * C3556 + C21128 * C3561 + C21131 * C873 +
            C21127 * C884) *
               C51262) *
              C51164 * C51323 * C1455) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1989 + (C12954 + C12955) * C51499 -
            (C13576 + C13577) * C1990 - (C13578 + C13579) * C51489 +
            (C13904 + C13905) * C1991 + (C13906 + C13907) * C1988) *
               C51164 * C8167 +
           (C13252 * C1989 + C13253 * C51499 - C13589 * C1990 -
            C13590 * C51489 + (C13908 + C13909) * C1991 +
            (C13910 + C13911) * C1988) *
               C51164 * C8168) *
              C1350 +
          (((C13577 + C13576) * C1990 -
            ((C12955 + C12954) * C51499 + (C12953 + C12952) * C1989) +
            (C13579 + C13578) * C51489 - (C13905 + C13904) * C1991 -
            (C13907 + C13906) * C1988) *
               C51164 * C8166 +
           ((C13582 + C13581) * C1990 -
            ((C12959 + C12958) * C51499 + (C12957 + C12956) * C1989) +
            (C13584 + C13583) * C51489 - (C13909 + C13908) * C1991 -
            (C13911 + C13910) * C1988) *
               C51164 * C8167 +
           ((C13585 + C13586) * C1990 - (C13386 * C51499 + C13387 * C1989) +
            (C13587 + C13588) * C51489 -
            (C5300 * C11694 + C51361 * C11695 + C5299 * C9229 +
             C51467 * C9231) *
                C1991 -
            (C5300 * C11696 + C51361 * C11697 + C5299 * C9232 +
             C51467 * C9235) *
                C1988) *
               C51164 * C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C2434 +
           ((C5334 + C5335) * C1989 + (C5336 + C5337) * C51499 -
            (C5719 + C5720) * C1990 - (C5721 + C5722) * C51489 +
            (C6314 + C6315) * C1991 + (C6316 + C6317) * C1988) *
               C2435 +
           (C5350 * C1989 + C5351 * C51499 - C5732 * C1990 - C5733 * C51489 +
            (C6318 + C6319) * C1991 + (C6320 + C6321) * C1988) *
               C2436) *
              C51323 * C1350 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C1990 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51499 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C1989) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51489 -
            (C5300 * C3674 + C51361 * C3677 + C5299 * C1146 + C51467 * C1150) *
                C1991 -
            (C5300 * C3678 + C51361 * C3683 + C5299 * C1151 + C51467 * C1158) *
                C1988) *
               C2434 +
           ((C7080 + C7081) * C1990 -
            ((C5534 + C5535) * C51499 + (C5536 + C5537) * C1989) +
            (C7082 + C7083) * C51489 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C1991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C1988) *
               C2435 +
           ((C7084 + C7085) * C1990 - (C5542 * C51499 + C5543 * C1989) +
            (C7086 + C7087) * C51489 -
            (C5300 * C3676 + C51361 * C3681 + C5299 * C1148 + C51467 * C1154) *
                C1991 -
            (C5300 * C3682 + C51361 * C3685 + C5299 * C1155 + C51467 * C1160) *
                C1988) *
               C2436) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C1989 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51499 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C1990 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51489 +
           (C21131 * C992 + C21127 * C997 + C21132 * C1236 + C21128 * C1240 +
            C21133 * C6565 + C21129 * C6568 + C21134 * C16837 +
            C21130 * C16839) *
               C1991 +
           (C21131 * C998 + C21127 * C1007 + C21132 * C1241 + C21128 * C1248 +
            C21133 * C6569 + C21129 * C6574 + C21134 * C16840 +
            C21130 * C16843) *
               C1988) *
              C51164 * C51323 * C1350 +
          ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
            C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
            C21130 * C14011) *
               C1990 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51499 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C1989) +
           (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
            C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
            C21130 * C14015) *
               C51489 -
           (C21134 * C19599 + C21130 * C19600 + C21133 * C14009 +
            C21129 * C14011 + C21132 * C3674 + C21128 * C3677 + C21131 * C1146 +
            C21127 * C1150) *
               C1991 -
           (C21134 * C19601 + C21130 * C19602 + C21133 * C14012 +
            C21129 * C14015 + C21132 * C3678 + C21128 * C3683 + C21131 * C1151 +
            C21127 * C1158) *
               C1988) *
              C51164 * C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                    C118 +
                (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                    C51250) *
                   C2434 +
               ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
               C5358 * C2436) *
                  C51323 * C51220 * C113 -
              (C5359 * C2436 +
               ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
               ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
                  C51323 * C51220 * C114 +
              (C5358 * C2434 +
               ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
               ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
                  C51323 * C51220 * C115 -
              (((C5300 * C471 + C51361 * C477 + C5299 * C137 + C51467 * C145) *
                    C51250 +
                (C5300 * C459 + C51361 * C470 + C5299 * C124 + C51467 * C136) *
                    C118) *
                   C2436 +
               ((C5349 + C5348) * C51250 + (C5347 + C5346) * C118) * C2435 +
               C5359 * C2434) *
                  C51323 * C51220 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                     C118 +
                 (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                     C51250) *
                    C2434 +
                ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
                C5358 * C2436) *
                   C51323 * C622 -
               (C5546 * C2436 +
                ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
                ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                     C51250 +
                 (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                     C118) *
                    C2434) *
                   C51323 * C623 +
               (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                     C118 +
                 (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                     C51250) *
                    C2434 +
                ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
                ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
                   C51323 * C624) *
                  C51445 +
              ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
                ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
                ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
                   C51323 * C623 -
               (C5359 * C2436 +
                ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
                ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
                   C51323 * C622 -
               (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                     C51250 +
                 (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                     C118) *
                    C2436 +
                ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C2435 +
                ((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C2434) *
                   C51323 * C624) *
                  C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C2434 +
           ((C5334 + C5335) * C989 + (C5336 + C5337) * C986 -
            (C5719 + C5720) * C990 - (C5721 + C5722) * C987 +
            (C6314 + C6315) * C991 + (C6316 + C6317) * C988) *
               C2435 +
           (C5350 * C989 + C5351 * C986 - C5732 * C990 - C5733 * C987 +
            (C6318 + C6319) * C991 + (C6320 + C6321) * C988) *
               C2436) *
              C51323 * C51220 * C51445 +
          (((C5720 + C5719) * C990 -
            ((C5337 + C5336) * C986 + (C5335 + C5334) * C989) +
            (C5722 + C5721) * C987 - (C6315 + C6314) * C991 -
            (C6317 + C6316) * C988) *
               C2434 +
           ((C5725 + C5724) * C990 -
            ((C5341 + C5340) * C986 + (C5339 + C5338) * C989) +
            (C5727 + C5726) * C987 - (C6319 + C6318) * C991 -
            (C6321 + C6320) * C988) *
               C2435 +
           ((C5728 + C5729) * C990 - (C5352 * C986 + C5353 * C989) +
            (C5730 + C5731) * C987 -
            (C5300 * C1239 + C51361 * C1246 + C5299 * C995 + C51467 * C1003) *
                C991 -
            (C5300 * C1247 + C51361 * C1251 + C5299 * C1004 + C51467 * C1010) *
                C988) *
               C2436) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C5299 * C297 + C51467 * C307 + C5300 * C856 + C51361 * C864) *
                C118 +
            (C5299 * C306 + C51467 * C315 + C5300 * C865 + C51361 * C880) *
                C51250) *
               C51164 * C8167 +
           ((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C51164 * C8168) *
              C51220 * C113 -
          (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
               C8168 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
               C8167 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
               C8166) *
              C51220 * C114 +
          (C5358 * C51164 * C8166 +
           ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
               C8167 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
               C8168) *
              C51220 * C115 -
          (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                C51250 +
            (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                C118) *
               C51164 * C8168 +
           ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51164 *
               C8167 +
           C5359 * C51164 * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C622 -
           (((C13274 + C13275) * C51250 + (C13276 + C13277) * C118) * C51164 *
                C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C623 +
           (C13286 * C8166 +
            ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
                C8167 +
            ((C5299 * C3020 + C51467 * C3026 + C5300 * C8888 + C51361 * C8890) *
                 C118 +
             (C5299 * C3025 + C51467 * C3029 + C5300 * C8891 + C51361 * C8894) *
                 C51250) *
                C51164 * C8168) *
               C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C623 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C622 -
           (((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51164 * C8168 +
            ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51164 *
                C8167 +
            C13287 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C989 + (C12954 + C12955) * C986 -
            (C13576 + C13577) * C990 - (C13578 + C13579) * C987 +
            (C5299 * C1146 + C51467 * C1150 + C5300 * C3674 + C51361 * C3677) *
                C991 +
            (C5299 * C1151 + C51467 * C1158 + C5300 * C3678 + C51361 * C3683) *
                C988) *
               C51164 * C8167 +
           (C13252 * C989 + C13253 * C986 - C13589 * C990 - C13590 * C987 +
            (C5299 * C3552 + C51467 * C3555 + C5300 * C9347 + C51361 * C9349) *
                C991 +
            (C5299 * C3556 + C51467 * C3561 + C5300 * C9350 + C51361 * C9353) *
                C988) *
               C51164 * C8168) *
              C51220 * C51445 +
          (((C5720 + C5719) * C990 -
            ((C5337 + C5336) * C986 + (C5335 + C5334) * C989) +
            (C5722 + C5721) * C987 - (C6315 + C6314) * C991 -
            (C6317 + C6316) * C988) *
               C51164 * C8166 +
           ((C7080 + C7081) * C990 -
            ((C5534 + C5535) * C986 + (C5536 + C5537) * C989) +
            (C7082 + C7083) * C987 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C988) *
               C51164 * C8167 +
           ((C5299 * C861 + C51467 * C874 + C5300 * C3553 + C51361 * C3557) *
                C990 -
            (C13270 * C986 + C13271 * C989) +
            (C5299 * C875 + C51467 * C885 + C5300 * C3558 + C51361 * C3562) *
                C987 -
            (C5300 * C9348 + C51361 * C9351 + C5299 * C3553 + C51467 * C3557) *
                C991 -
            (C5300 * C9352 + C51361 * C9354 + C5299 * C3558 + C51467 * C3562) *
                C988) *
               C51164 * C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C118 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51250) *
              C51164 * C51323 * C51220 * C113 -
          ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
            C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
               C51250 +
           (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
            C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
               C118) *
              C51164 * C51323 * C51220 * C114 +
          ((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
            C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
               C118 +
           (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
            C21133 * C1002 + C21129 * C1009 + C21134 * C1245 + C21130 * C1250) *
               C51250) *
              C51164 * C51323 * C51220 * C115 -
          ((C21134 * C1247 + C21130 * C1251 + C21133 * C1004 + C21129 * C1010 +
            C21132 * C467 + C21128 * C475 + C21131 * C133 + C21127 * C143) *
               C51250 +
           (C21134 * C1239 + C21130 * C1246 + C21133 * C995 + C21129 * C1003 +
            C21132 * C457 + C21128 * C466 + C21131 * C122 + C21127 * C132) *
               C118) *
              C51164 * C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C118 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51250) *
               C51164 * C51323 * C622 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51250 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C118) *
               C51164 * C51323 * C623 +
           ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
             C21133 * C3552 + C21129 * C3555 + C21134 * C9347 +
             C21130 * C9349) *
                C118 +
            (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
             C21133 * C3556 + C21129 * C3561 + C21134 * C9350 +
             C21130 * C9353) *
                C51250) *
               C51164 * C51323 * C624) *
              C51445 +
          (((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C118 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51250) *
               C51164 * C51323 * C623 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51250 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C118) *
               C51164 * C51323 * C622 -
           ((C21134 * C9352 + C21130 * C9354 + C21133 * C3558 + C21129 * C3562 +
             C21132 * C875 + C21128 * C885 + C21131 * C635 + C21127 * C643) *
                C51250 +
            (C21134 * C9348 + C21130 * C9351 + C21133 * C3553 + C21129 * C3557 +
             C21132 * C861 + C21128 * C874 + C21131 * C628 + C21127 * C634) *
                C118) *
               C51164 * C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C989 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C986 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C990 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C987 +
           (C21131 * C992 + C21127 * C997 + C21132 * C1236 + C21128 * C1240 +
            C21133 * C6565 + C21129 * C6568 + C21134 * C16837 +
            C21130 * C16839) *
               C991 +
           (C21131 * C998 + C21127 * C1007 + C21132 * C1241 + C21128 * C1248 +
            C21133 * C6569 + C21129 * C6574 + C21134 * C16840 +
            C21130 * C16843) *
               C988) *
              C51164 * C51323 * C51220 * C51445 +
          ((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
            C21133 * C1237 + C21129 * C1242 + C21134 * C6566 + C21130 * C6570) *
               C990 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C986 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C989) +
           (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
            C21133 * C1243 + C21129 * C1249 + C21134 * C6571 + C21130 * C6575) *
               C987 -
           (C21134 * C16838 + C21130 * C16841 + C21133 * C6566 +
            C21129 * C6570 + C21132 * C1237 + C21128 * C1242 + C21131 * C993 +
            C21127 * C999) *
               C991 -
           (C21134 * C16842 + C21130 * C16844 + C21133 * C6571 +
            C21129 * C6575 + C21132 * C1243 + C21128 * C1249 + C21131 * C1000 +
            C21127 * C1008) *
               C988) *
              C51164 * C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                     C118 +
                 (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                     C51250) *
                    C2434 +
                ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
                C5358 * C2436) *
                   C51323 * C51452 -
               (C5546 * C2436 +
                ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
                ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                     C51250 +
                 (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                     C118) *
                    C2434) *
                   C51323 * C51236) *
                  C291 +
              ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
                ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
                ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
                   C51323 * C51236 -
               (C5359 * C2436 +
                ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
                ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
                   C51323 * C51452) *
                  C292 +
              ((C5358 * C2434 +
                ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
                ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
                   C51323 * C51452 -
               (((C5300 * C1590 + C51361 * C1591 + C5299 * C309 +
                  C51467 * C316) *
                     C51250 +
                 (C5300 * C1588 + C51361 * C1589 + C5299 * C298 +
                  C51467 * C308) *
                     C118) *
                    C2436 +
                ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C2435 +
                C5546 * C2434) *
                   C51323 * C51236) *
                  C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                    C118 +
                (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                    C51250) *
                   C2434 +
               ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
               C5358 * C2436) *
                  C51323 * C737 -
              (C5546 * C2436 +
               ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
               ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                    C51250 +
                (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                    C118) *
                   C2434) *
                  C51323 * C738 +
              (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                    C118 +
                (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                    C51250) *
                   C2434 +
               ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
               ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
                  C51323 * C739 -
              (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 +
                 C51467 * C755) *
                    C51250 +
                (C5300 * C3186 + C51361 * C3191 + C5299 * C743 +
                 C51467 * C749) *
                    C118) *
                   C2436 +
               ((C5300 * C3190 + C51361 * C3194 + C5299 * C750 +
                 C51467 * C756) *
                    C51250 +
                (C5300 * C3185 + C51361 * C3189 + C5299 * C744 +
                 C51467 * C751) *
                    C118) *
                   C2435 +
               ((C5300 * C3188 + C51361 * C3193 + C5299 * C752 +
                 C51467 * C757) *
                    C51250 +
                (C5300 * C3184 + C51361 * C3187 + C5299 * C745 +
                 C51467 * C753) *
                    C118) *
                   C2434) *
                  C51323 * C740) *
             C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C2434 +
           ((C5334 + C5335) * C989 + (C5336 + C5337) * C986 -
            (C5719 + C5720) * C990 - (C5721 + C5722) * C987 +
            (C6314 + C6315) * C991 + (C6316 + C6317) * C988) *
               C2435 +
           (C5350 * C989 + C5351 * C986 - C5732 * C990 - C5733 * C987 +
            (C6318 + C6319) * C991 + (C6320 + C6321) * C988) *
               C2436) *
              C51323 * C51452 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C990 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C986 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C989) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C987 -
            (C5300 * C3674 + C51361 * C3677 + C5299 * C1146 + C51467 * C1150) *
                C991 -
            (C5300 * C3678 + C51361 * C3683 + C5299 * C1151 + C51467 * C1158) *
                C988) *
               C2434 +
           ((C5299 * C857 + C51467 * C866 + C5300 * C1147 + C51361 * C1152) *
                C990 -
            ((C5534 + C5535) * C986 + (C5536 + C5537) * C989) +
            (C5299 * C867 + C51467 * C881 + C5300 * C1153 + C51361 * C1159) *
                C987 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C988) *
               C2435 +
           ((C5299 * C858 + C51467 * C868 + C5300 * C1148 + C51361 * C1154) *
                C990 -
            (C5542 * C986 + C5543 * C989) +
            (C5299 * C869 + C51467 * C882 + C5300 * C1155 + C51361 * C1160) *
                C987 -
            (C5300 * C3676 + C51361 * C3681 + C5299 * C1148 + C51467 * C1154) *
                C991 -
            (C5300 * C3682 + C51361 * C3685 + C5299 * C1155 + C51467 * C1160) *
                C988) *
               C2436) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            ((C12956 + C12957) * C118 + (C12958 + C12959) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                 C51250 +
             (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                 C118) *
                C51164 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C5299 * C744 + C51467 * C751 + C5300 * C3185 + C51361 * C3189) *
                 C118 +
             (C5299 * C750 + C51467 * C756 + C5300 * C3190 + C51361 * C3194) *
                 C51250) *
                C51164 * C8168) *
               C51236 -
           (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
                C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C51452) *
              C292 +
          ((C5358 * C51164 * C8166 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
                C8167 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                 C51250 +
             (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                 C118) *
                C51164 * C8168 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51164 *
                C8167 +
            C5546 * C51164 * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
               C8167 +
           C13286 * C8168) *
              C737 -
          (C13403 * C8168 +
           ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
               C8167 +
           ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
               C8166) *
              C738 +
          (C13286 * C8166 +
           ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
               C8167 +
           ((C13398 + C13399) * C118 + (C13400 + C13401) * C51250) * C51164 *
               C8168) *
              C739 -
          (((C5300 * C11399 + C51361 * C11400 + C5299 * C8726 +
             C51467 * C8729) *
                C51250 +
            (C5300 * C11397 + C51361 * C11398 + C5299 * C8723 +
             C51467 * C8727) *
                C118) *
               C51164 * C8168 +
           ((C13401 + C13400) * C51250 + (C13399 + C13398) * C118) * C51164 *
               C8167 +
           C13403 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C989 + (C12954 + C12955) * C986 -
            (C13576 + C13577) * C990 - (C13578 + C13579) * C987 +
            (C13904 + C13905) * C991 + (C13906 + C13907) * C988) *
               C51164 * C8167 +
           (C13252 * C989 + C13253 * C986 - C13589 * C990 - C13590 * C987 +
            (C13908 + C13909) * C991 + (C13910 + C13911) * C988) *
               C51164 * C8168) *
              C51452 +
          (((C13577 + C13576) * C990 -
            ((C12955 + C12954) * C986 + (C12953 + C12952) * C989) +
            (C13579 + C13578) * C987 - (C13905 + C13904) * C991 -
            (C13907 + C13906) * C988) *
               C51164 * C8166 +
           ((C13582 + C13581) * C990 -
            ((C12959 + C12958) * C986 + (C12957 + C12956) * C989) +
            (C13584 + C13583) * C987 - (C13909 + C13908) * C991 -
            (C13911 + C13910) * C988) *
               C51164 * C8167 +
           ((C13585 + C13586) * C990 - (C13386 * C986 + C13387 * C989) +
            (C13587 + C13588) * C987 -
            (C5300 * C11694 + C51361 * C11695 + C5299 * C9229 +
             C51467 * C9231) *
                C991 -
            (C5300 * C11696 + C51361 * C11697 + C5299 * C9232 +
             C51467 * C9235) *
                C988) *
               C51164 * C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C118 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51250) *
               C51164 * C51323 * C51452 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51250 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C118) *
               C51164 * C51323 * C51236) *
              C291 +
          (((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C118 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51250) *
               C51164 * C51323 * C51236 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51250 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C118) *
               C51164 * C51323 * C51452) *
              C292 +
          (((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
             C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
                C118 +
            (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
             C21133 * C1002 + C21129 * C1009 + C21134 * C1245 +
             C21130 * C1250) *
                C51250) *
               C51164 * C51323 * C51452 -
           ((C21134 * C3682 + C21130 * C3685 + C21133 * C1155 + C21129 * C1160 +
             C21132 * C869 + C21128 * C882 + C21131 * C302 + C21127 * C313) *
                C51250 +
            (C21134 * C3676 + C21130 * C3681 + C21133 * C1148 + C21129 * C1154 +
             C21132 * C858 + C21128 * C868 + C21131 * C295 + C21127 * C303) *
                C118) *
               C51164 * C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C118 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51250) *
              C51164 * C51323 * C737 -
          ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
            C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
               C51250 +
           (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
            C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
               C118) *
              C51164 * C51323 * C738 +
          ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
            C21133 * C3552 + C21129 * C3555 + C21134 * C9347 + C21130 * C9349) *
               C118 +
           (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
            C21133 * C3556 + C21129 * C3561 + C21134 * C9350 + C21130 * C9353) *
               C51250) *
              C51164 * C51323 * C739 -
          ((C21134 * C11696 + C21130 * C11697 + C21133 * C9232 +
            C21129 * C9235 + C21132 * C3188 + C21128 * C3193 + C21131 * C752 +
            C21127 * C757) *
               C51250 +
           (C21134 * C11694 + C21130 * C11695 + C21133 * C9229 +
            C21129 * C9231 + C21132 * C3184 + C21128 * C3187 + C21131 * C745 +
            C21127 * C753) *
               C118) *
              C51164 * C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C989 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C986 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C990 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C987 +
           (C21131 * C992 + C21127 * C997 + C21132 * C1236 + C21128 * C1240 +
            C21133 * C6565 + C21129 * C6568 + C21134 * C16837 +
            C21130 * C16839) *
               C991 +
           (C21131 * C998 + C21127 * C1007 + C21132 * C1241 + C21128 * C1248 +
            C21133 * C6569 + C21129 * C6574 + C21134 * C16840 +
            C21130 * C16843) *
               C988) *
              C51164 * C51323 * C51452 +
          ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
            C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
            C21130 * C14011) *
               C990 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C986 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C989) +
           (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
            C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
            C21130 * C14015) *
               C987 -
           (C21134 * C19599 + C21130 * C19600 + C21133 * C14009 +
            C21129 * C14011 + C21132 * C3674 + C21128 * C3677 + C21131 * C1146 +
            C21127 * C1150) *
               C991 -
           (C21134 * C19601 + C21130 * C19602 + C21133 * C14012 +
            C21129 * C14015 + C21132 * C3678 + C21128 * C3683 + C21131 * C1151 +
            C21127 * C1158) *
               C988) *
              C51164 * C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                    C452 +
                (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                    C51454 -
                (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                    C453 -
                (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                    C51262) *
                   C2434 +
               ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
                (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                   C2435 +
               C5737 * C2436) *
                  C51323 * C51220 * C291 +
              (((C5720 + C5719) * C453 -
                ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
                (C5722 + C5721) * C51262) *
                   C2434 +
               ((C5725 + C5724) * C453 -
                ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
                (C5727 + C5726) * C51262) *
                   C2435 +
               ((C5728 + C5729) * C453 - (C5352 * C51454 + C5353 * C452) +
                (C5730 + C5731) * C51262) *
                   C2436) *
                  C51323 * C51220 * C292 +
              (C5737 * C2434 +
               ((C5345 + C5344) * C452 + (C5343 + C5342) * C51454 -
                (C5729 + C5728) * C453 - (C5731 + C5730) * C51262) *
                   C2435 +
               ((C5346 + C5347) * C452 + (C5348 + C5349) * C51454 -
                (C5300 * C996 + C51361 * C1005 + C5299 * C458 + C51467 * C468) *
                    C453 -
                (C5300 * C1006 + C51361 * C1011 + C5299 * C469 +
                 C51467 * C476) *
                    C51262) *
                   C2436) *
                  C51323 * C51220 * C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                    C452 +
                (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                    C51454 -
                (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                    C453 -
                (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                    C51262) *
                   C2434 +
               ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
                (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                   C2435 +
               C5737 * C2436) *
                  C51323 * C622 +
              (((C5299 * C856 + C51467 * C864 + C5300 * C1146 +
                 C51361 * C1150) *
                    C453 -
                ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                     C51454 +
                 (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                     C452) +
                (C5299 * C865 + C51467 * C880 + C5300 * C1151 +
                 C51361 * C1158) *
                    C51262) *
                   C2434 +
               ((C5299 * C857 + C51467 * C866 + C5300 * C1147 +
                 C51361 * C1152) *
                    C453 -
                ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
                (C5299 * C867 + C51467 * C881 + C5300 * C1153 +
                 C51361 * C1159) *
                    C51262) *
                   C2435 +
               ((C5299 * C858 + C51467 * C868 + C5300 * C1148 +
                 C51361 * C1154) *
                    C453 -
                (C5542 * C51454 + C5543 * C452) +
                (C5299 * C869 + C51467 * C882 + C5300 * C1155 +
                 C51361 * C1160) *
                    C51262) *
                   C2436) *
                  C51323 * C623 +
              (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                    C452 +
                (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                    C51454 -
                (C5300 * C3552 + C51361 * C3555 + C5299 * C860 +
                 C51467 * C872) *
                    C453 -
                (C5300 * C3556 + C51361 * C3561 + C5299 * C873 +
                 C51467 * C884) *
                    C51262) *
                   C2434 +
               ((C5900 + C5901) * C452 + (C5902 + C5903) * C51454 -
                (C5300 * C3553 + C51361 * C3557 + C5299 * C861 +
                 C51467 * C874) *
                    C453 -
                (C5300 * C3558 + C51361 * C3562 + C5299 * C875 +
                 C51467 * C885) *
                    C51262) *
                   C2435 +
               ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
                (C5300 * C3554 + C51361 * C3559 + C5299 * C862 +
                 C51467 * C876) *
                    C453 -
                (C5300 * C3560 + C51361 * C3563 + C5299 * C877 +
                 C51467 * C886) *
                    C51262) *
                   C2436) *
                  C51323 * C624) *
             C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
               C1232 +
           (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
               C1228 -
           (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
               C1233 -
           (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
               C1229 +
           (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
               C1234 +
           (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
               C1230 -
           (C5300 * C6565 + C51361 * C6568 + C5299 * C1236 + C51467 * C1240) *
               C1235 -
           (C5300 * C6569 + C51361 * C6574 + C5299 * C1241 + C51467 * C1248) *
               C1231) *
              C2434 +
          ((C5334 + C5335) * C1232 + (C5336 + C5337) * C1228 -
           (C5719 + C5720) * C1233 - (C5721 + C5722) * C1229 +
           (C6314 + C6315) * C1234 + (C6316 + C6317) * C1230 -
           (C5300 * C6566 + C51361 * C6570 + C5299 * C1237 + C51467 * C1242) *
               C1235 -
           (C5300 * C6571 + C51361 * C6575 + C5299 * C1243 + C51467 * C1249) *
               C1231) *
              C2435 +
          (C5350 * C1232 + C5351 * C1228 - C5732 * C1233 - C5733 * C1229 +
           (C6318 + C6319) * C1234 + (C6320 + C6321) * C1230 -
           (C5300 * C6567 + C51361 * C6572 + C5299 * C1238 + C51467 * C1244) *
               C1235 -
           (C5300 * C6573 + C51361 * C6576 + C5299 * C1245 + C51467 * C1250) *
               C1231) *
              C2436) *
         C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C5300 * C1146 + C51361 * C1150 + C5299 * C856 + C51467 * C864) *
                C453 -
            (C5300 * C1151 + C51361 * C1158 + C5299 * C865 + C51467 * C880) *
                C51262) *
               C51164 * C8167 +
           ((C12956 + C12957) * C452 + (C12958 + C12959) * C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C51164 * C8168) *
              C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C51164 * C8166 +
           ((C7080 + C7081) * C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C7082 + C7083) * C51262) *
               C51164 * C8167 +
           ((C5299 * C861 + C51467 * C874 + C5300 * C3553 + C51361 * C3557) *
                C453 -
            ((C5903 + C5902) * C51454 + (C5901 + C5900) * C452) +
            (C5299 * C875 + C51467 * C885 + C5300 * C3558 + C51361 * C3562) *
                C51262) *
               C51164 * C8168) *
              C51220 * C292 +
          (C5737 * C51164 * C8166 +
           ((C5533 + C5532) * C452 + (C5531 + C5530) * C51454 -
            (C7085 + C7084) * C453 - (C7087 + C7086) * C51262) *
               C51164 * C8167 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C51164 * C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           C13595 * C8168) *
              C622 +
          (((C13577 + C13576) * C453 -
            ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
            (C13579 + C13578) * C51262) *
               C51164 * C8166 +
           ((C13582 + C13581) * C453 -
            ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
            (C13584 + C13583) * C51262) *
               C51164 * C8167 +
           ((C13585 + C13586) * C453 - (C13386 * C51454 + C13387 * C452) +
            (C13587 + C13588) * C51262) *
               C51164 * C8168) *
              C623 +
          (C13595 * C8166 +
           ((C13277 + C13276) * C452 + (C13275 + C13274) * C51454 -
            (C13586 + C13585) * C453 - (C13588 + C13587) * C51262) *
               C51164 * C8167 +
           ((C13398 + C13399) * C452 + (C13400 + C13401) * C51454 -
            (C5300 * C11612 + C51361 * C11613 + C5299 * C8888 +
             C51467 * C8890) *
                C453 -
            (C5300 * C11614 + C51361 * C11615 + C5299 * C8891 +
             C51467 * C8894) *
                C51262) *
               C51164 * C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
               C1232 +
           (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
               C1228 -
           (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
               C1233 -
           (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
               C1229 +
           (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
               C1234 +
           (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
               C1230 -
           (C5300 * C6565 + C51361 * C6568 + C5299 * C1236 + C51467 * C1240) *
               C1235 -
           (C5300 * C6569 + C51361 * C6574 + C5299 * C1241 + C51467 * C1248) *
               C1231) *
              C51164 * C8166 +
          ((C12952 + C12953) * C1232 + (C12954 + C12955) * C1228 -
           (C13576 + C13577) * C1233 - (C13578 + C13579) * C1229 +
           (C13904 + C13905) * C1234 + (C13906 + C13907) * C1230 -
           (C5300 * C14009 + C51361 * C14011 + C5299 * C3674 + C51467 * C3677) *
               C1235 -
           (C5300 * C14012 + C51361 * C14015 + C5299 * C3678 + C51467 * C3683) *
               C1231) *
              C51164 * C8167 +
          (C13252 * C1232 + C13253 * C1228 - C13589 * C1233 - C13590 * C1229 +
           (C13908 + C13909) * C1234 + (C13910 + C13911) * C1230 -
           (C5300 * C14010 + C51361 * C14013 + C5299 * C9347 + C51467 * C9349) *
               C1235 -
           (C5300 * C14014 + C51361 * C14016 + C5299 * C9350 + C51467 * C9353) *
               C1231) *
              C51164 * C8168) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C452 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51454 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C453 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51262) *
              C51164 * C51323 * C51220 * C291 +
          ((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
            C21133 * C1237 + C21129 * C1242 + C21134 * C6566 + C21130 * C6570) *
               C453 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51454 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C452) +
           (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
            C21133 * C1243 + C21129 * C1249 + C21134 * C6571 + C21130 * C6575) *
               C51262) *
              C51164 * C51323 * C51220 * C292 +
          ((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
            C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
               C452 +
           (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
            C21133 * C1002 + C21129 * C1009 + C21134 * C1245 + C21130 * C1250) *
               C51454 -
           (C21134 * C6567 + C21130 * C6572 + C21133 * C1238 + C21129 * C1244 +
            C21132 * C994 + C21128 * C1001 + C21131 * C456 + C21127 * C464) *
               C453 -
           (C21134 * C6573 + C21130 * C6576 + C21133 * C1245 + C21129 * C1250 +
            C21132 * C1002 + C21128 * C1009 + C21131 * C465 + C21127 * C474) *
               C51262) *
              C51164 * C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C452 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51454 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C453 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51262) *
              C51164 * C51323 * C622 +
          ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
            C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
            C21130 * C14011) *
               C453 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51454 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C452) +
           (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
            C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
            C21130 * C14015) *
               C51262) *
              C51164 * C51323 * C623 +
          ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
            C21133 * C3552 + C21129 * C3555 + C21134 * C9347 + C21130 * C9349) *
               C452 +
           (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
            C21133 * C3556 + C21129 * C3561 + C21134 * C9350 + C21130 * C9353) *
               C51454 -
           (C21134 * C14010 + C21130 * C14013 + C21133 * C9347 +
            C21129 * C9349 + C21132 * C3552 + C21128 * C3555 + C21131 * C860 +
            C21127 * C872) *
               C453 -
           (C21134 * C14014 + C21130 * C14016 + C21133 * C9350 +
            C21129 * C9353 + C21132 * C3556 + C21128 * C3561 + C21131 * C873 +
            C21127 * C884) *
               C51262) *
              C51164 * C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
           C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
              C1232 +
          (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
           C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
              C1228 -
          (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
           C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
              C1233 -
          (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
           C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
              C1229 +
          (C21131 * C992 + C21127 * C997 + C21132 * C1236 + C21128 * C1240 +
           C21133 * C6565 + C21129 * C6568 + C21134 * C16837 +
           C21130 * C16839) *
              C1234 +
          (C21131 * C998 + C21127 * C1007 + C21132 * C1241 + C21128 * C1248 +
           C21133 * C6569 + C21129 * C6574 + C21134 * C16840 +
           C21130 * C16843) *
              C1230 -
          (C21134 * C21855 + C21130 * C21856 + C21133 * C16837 +
           C21129 * C16839 + C21132 * C6565 + C21128 * C6568 + C21131 * C1236 +
           C21127 * C1240) *
              C1235 -
          (C21134 * C21857 + C21130 * C21858 + C21133 * C16840 +
           C21129 * C16843 + C21132 * C6569 + C21128 * C6574 + C21131 * C1241 +
           C21127 * C1248) *
              C1231) *
         C51164 * C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
            (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           (C13252 * C1722 + C13253 * C1720 - C13589 * C1723 -
            C13590 * C51262) *
               C51164 * C8168) *
              C51220 * C51497 +
          (((C5720 + C5719) * C1723 -
            ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
            (C5722 + C5721) * C51262) *
               C51164 * C8166 +
           ((C7080 + C7081) * C1723 -
            ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
            (C7082 + C7083) * C51262) *
               C51164 * C8167 +
           ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
            (C14514 + C14515) * C51262) *
               C51164 * C8168) *
              C51220 * C51483 +
          (C7240 * C51164 * C8166 +
           ((C5533 + C5532) * C1722 + (C5531 + C5530) * C1720 -
            (C7085 + C7084) * C1723 - (C7087 + C7086) * C51262) *
               C51164 * C8167 +
           ((C5904 + C5905) * C1722 + (C5906 + C5907) * C1720 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C1723 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C51164 * C8168) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
            (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
               C2435 +
           C7240 * C2436) *
              C51323 * C51220 * C51497 +
          (((C5720 + C5719) * C1723 -
            ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
            (C5722 + C5721) * C51262) *
               C2434 +
           ((C5725 + C5724) * C1723 -
            ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
            (C5727 + C5726) * C51262) *
               C2435 +
           ((C5728 + C5729) * C1723 - (C5352 * C1720 + C5353 * C1722) +
            (C5730 + C5731) * C51262) *
               C2436) *
              C51323 * C51220 * C51483 +
          (C7240 * C2434 +
           ((C5345 + C5344) * C1722 + (C5343 + C5342) * C1720 -
            (C5729 + C5728) * C1723 - (C5731 + C5730) * C51262) *
               C2435 +
           ((C5346 + C5347) * C1722 + (C5348 + C5349) * C1720 -
            (C5300 * C996 + C51361 * C1005 + C5299 * C458 + C51467 * C468) *
                C1723 -
            (C5300 * C1006 + C51361 * C1011 + C5299 * C469 + C51467 * C476) *
                C51262) *
               C2436) *
              C51323 * C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C1722 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C1720 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C1723 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51262) *
              C51164 * C51323 * C51220 * C51497 +
          ((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
            C21133 * C1237 + C21129 * C1242 + C21134 * C6566 + C21130 * C6570) *
               C1723 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C1720 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C1722) +
           (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
            C21133 * C1243 + C21129 * C1249 + C21134 * C6571 + C21130 * C6575) *
               C51262) *
              C51164 * C51323 * C51220 * C51483 +
          ((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
            C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
               C1722 +
           (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
            C21133 * C1002 + C21129 * C1009 + C21134 * C1245 + C21130 * C1250) *
               C1720 -
           (C21134 * C6567 + C21130 * C6572 + C21133 * C1238 + C21129 * C1244 +
            C21132 * C994 + C21128 * C1001 + C21131 * C456 + C21127 * C464) *
               C1723 -
           (C21134 * C6573 + C21130 * C6576 + C21133 * C1245 + C21129 * C1250 +
            C21132 * C1002 + C21128 * C1009 + C21131 * C465 + C21127 * C474) *
               C51262) *
              C51164 * C51323 * C51220 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C51164 * C8166 +
            ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
             (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                C51164 * C8167 +
            (C13252 * C1722 + C13253 * C1720 - C13589 * C1723 -
             C13590 * C51262) *
                C51164 * C8168) *
               C51452 +
           (((C13577 + C13576) * C1723 -
             ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
             (C13579 + C13578) * C51262) *
                C51164 * C8166 +
            ((C13582 + C13581) * C1723 -
             ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
             (C13584 + C13583) * C51262) *
                C51164 * C8167 +
            ((C13585 + C13586) * C1723 - (C13386 * C1720 + C13387 * C1722) +
             (C13587 + C13588) * C51262) *
                C51164 * C8168) *
               C51236) *
              C1456 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C51164 * C8166 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C51164 * C8167 +
            ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
             (C14514 + C14515) * C51262) *
                C51164 * C8168) *
               C51452 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C51164 * C8166 +
            ((C5900 + C5901) * C1722 + (C5902 + C5903) * C1720 -
             (C14513 + C14512) * C1723 - (C14515 + C14514) * C51262) *
                C51164 * C8167 +
            ((C13278 + C13279) * C1722 + (C13280 + C13281) * C1720 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C1723 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51164 * C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C2434 +
            ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
             (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                C2435 +
            C7240 * C2436) *
               C51323 * C51452 +
           (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                 C1723 -
             ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                  C1720 +
              (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                  C1722) +
             (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                 C51262) *
                C2434 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C2435 +
            ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
             (C7086 + C7087) * C51262) *
                C2436) *
               C51323 * C51236) *
              C1456 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C2434 +
            ((C5725 + C5724) * C1723 -
             ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
             (C5727 + C5726) * C51262) *
                C2435 +
            ((C5728 + C5729) * C1723 - (C5352 * C1720 + C5353 * C1722) +
             (C5730 + C5731) * C51262) *
                C2436) *
               C51323 * C51452 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C2434 +
            ((C5533 + C5532) * C1722 + (C5531 + C5530) * C1720 -
             (C7085 + C7084) * C1723 - (C7087 + C7086) * C51262) *
                C2435 +
            ((C5538 + C5539) * C1722 + (C5540 + C5541) * C1720 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C1723 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C2436) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C1722 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C1720 -
            (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
             C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
                C1723 -
            (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
             C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
                C51262) *
               C51164 * C51323 * C51452 +
           ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
             C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
             C21130 * C14011) *
                C1723 -
            ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 +
              C21129 * C1158 + C21132 * C865 + C21128 * C880 + C21131 * C306 +
              C21127 * C315) *
                 C1720 +
             (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 +
              C21129 * C1150 + C21132 * C856 + C21128 * C864 + C21131 * C297 +
              C21127 * C307) *
                 C1722) +
            (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
             C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
             C21130 * C14015) *
                C51262) *
               C51164 * C51323 * C51236) *
              C1456 +
          (((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
             C21133 * C1237 + C21129 * C1242 + C21134 * C6566 +
             C21130 * C6570) *
                C1723 -
            ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 +
              C21129 * C1008 + C21132 * C463 + C21128 * C473 + C21131 * C129 +
              C21127 * C141) *
                 C1720 +
             (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
              C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                 C1722) +
            (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
             C21133 * C1243 + C21129 * C1249 + C21134 * C6571 +
             C21130 * C6575) *
                C51262) *
               C51164 * C51323 * C51452 +
           ((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C1722 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C1720 -
            (C21134 * C16735 + C21130 * C16736 + C21133 * C3675 +
             C21129 * C3679 + C21132 * C1147 + C21128 * C1152 + C21131 * C857 +
             C21127 * C866) *
                C1723 -
            (C21134 * C16737 + C21130 * C16738 + C21133 * C3680 +
             C21129 * C3684 + C21132 * C1153 + C21128 * C1159 + C21131 * C867 +
             C21127 * C881) *
                C51262) *
               C51164 * C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1989 + (C12954 + C12955) * C51499 -
            (C13576 + C13577) * C1990 - (C13578 + C13579) * C51489 +
            (C13904 + C13905) * C1991 + (C13906 + C13907) * C1988) *
               C51164 * C8167 +
           (C13252 * C1989 + C13253 * C51499 - C13589 * C1990 -
            C13590 * C51489 + (C13908 + C13909) * C1991 +
            (C13910 + C13911) * C1988) *
               C51164 * C8168) *
              C51220 * C1456 +
          (((C5720 + C5719) * C1990 -
            ((C5337 + C5336) * C51499 + (C5335 + C5334) * C1989) +
            (C5722 + C5721) * C51489 - (C6315 + C6314) * C1991 -
            (C6317 + C6316) * C1988) *
               C51164 * C8166 +
           ((C7080 + C7081) * C1990 -
            ((C5534 + C5535) * C51499 + (C5536 + C5537) * C1989) +
            (C7082 + C7083) * C51489 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C1991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C1988) *
               C51164 * C8167 +
           ((C14512 + C14513) * C1990 - (C13270 * C51499 + C13271 * C1989) +
            (C14514 + C14515) * C51489 -
            (C5300 * C9348 + C51361 * C9351 + C5299 * C3553 + C51467 * C3557) *
                C1991 -
            (C5300 * C9352 + C51361 * C9354 + C5299 * C3558 + C51467 * C3562) *
                C1988) *
               C51164 * C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C2434 +
           ((C5334 + C5335) * C1989 + (C5336 + C5337) * C51499 -
            (C5719 + C5720) * C1990 - (C5721 + C5722) * C51489 +
            (C6314 + C6315) * C1991 + (C6316 + C6317) * C1988) *
               C2435 +
           (C5350 * C1989 + C5351 * C51499 - C5732 * C1990 - C5733 * C51489 +
            (C6318 + C6319) * C1991 + (C6320 + C6321) * C1988) *
               C2436) *
              C51323 * C51220 * C1456 +
          (((C5720 + C5719) * C1990 -
            ((C5337 + C5336) * C51499 + (C5335 + C5334) * C1989) +
            (C5722 + C5721) * C51489 - (C6315 + C6314) * C1991 -
            (C6317 + C6316) * C1988) *
               C2434 +
           ((C5725 + C5724) * C1990 -
            ((C5341 + C5340) * C51499 + (C5339 + C5338) * C1989) +
            (C5727 + C5726) * C51489 - (C6319 + C6318) * C1991 -
            (C6321 + C6320) * C1988) *
               C2435 +
           ((C5728 + C5729) * C1990 - (C5352 * C51499 + C5353 * C1989) +
            (C5730 + C5731) * C51489 -
            (C5300 * C1239 + C51361 * C1246 + C5299 * C995 + C51467 * C1003) *
                C1991 -
            (C5300 * C1247 + C51361 * C1251 + C5299 * C1004 + C51467 * C1010) *
                C1988) *
               C2436) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C1989 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51499 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C1990 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51489 +
           (C21131 * C992 + C21127 * C997 + C21132 * C1236 + C21128 * C1240 +
            C21133 * C6565 + C21129 * C6568 + C21134 * C16837 +
            C21130 * C16839) *
               C1991 +
           (C21131 * C998 + C21127 * C1007 + C21132 * C1241 + C21128 * C1248 +
            C21133 * C6569 + C21129 * C6574 + C21134 * C16840 +
            C21130 * C16843) *
               C1988) *
              C51164 * C51323 * C51220 * C1456 +
          ((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
            C21133 * C1237 + C21129 * C1242 + C21134 * C6566 + C21130 * C6570) *
               C1990 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51499 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C1989) +
           (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
            C21133 * C1243 + C21129 * C1249 + C21134 * C6571 + C21130 * C6575) *
               C51489 -
           (C21134 * C16838 + C21130 * C16841 + C21133 * C6566 +
            C21129 * C6570 + C21132 * C1237 + C21128 * C1242 + C21131 * C993 +
            C21127 * C999) *
               C1991 -
           (C21134 * C16842 + C21130 * C16844 + C21133 * C6571 +
            C21129 * C6575 + C21132 * C1243 + C21128 * C1249 + C21131 * C1000 +
            C21127 * C1008) *
               C1988) *
              C51164 * C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C622 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C623 +
           (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                 C118 +
             (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                 C51250) *
                C2434 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
               C51323 * C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C623 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C622 -
           (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                 C51250 +
             (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                 C118) *
                C2436 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C2435 +
            ((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C2434) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C2434 +
           ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
           C5358 * C2436) *
              C51323 * C51220 * C113 -
          (C5359 * C2436 +
           ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
              C51323 * C51220 * C114 +
          (C5358 * C2434 +
           ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
           ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
              C51323 * C51220 * C115 -
          (((C5300 * C471 + C51361 * C477 + C5299 * C137 + C51467 * C145) *
                C51250 +
            (C5300 * C459 + C51361 * C470 + C5299 * C124 + C51467 * C136) *
                C118) *
               C2436 +
           ((C5349 + C5348) * C51250 + (C5347 + C5346) * C118) * C2435 +
           C5359 * C2434) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C5299 * C297 + C51467 * C307 + C5300 * C856 + C51361 * C864) *
                C118 +
            (C5299 * C306 + C51467 * C315 + C5300 * C865 + C51361 * C880) *
                C51250) *
               C51164 * C8167 +
           ((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C51164 * C8168) *
              C51220 * C113 -
          (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
               C8168 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
               C8167 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
               C8166) *
              C51220 * C114 +
          (C5358 * C51164 * C8166 +
           ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
               C8167 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
               C8168) *
              C51220 * C115 -
          (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                C51250 +
            (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                C118) *
               C51164 * C8168 +
           ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51164 *
               C8167 +
           C5359 * C51164 * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C622 -
           (((C13274 + C13275) * C51250 + (C13276 + C13277) * C118) * C51164 *
                C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C623 +
           (C13286 * C8166 +
            ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
                C8167 +
            ((C5299 * C3020 + C51467 * C3026 + C5300 * C8888 + C51361 * C8890) *
                 C118 +
             (C5299 * C3025 + C51467 * C3029 + C5300 * C8891 + C51361 * C8894) *
                 C51250) *
                C51164 * C8168) *
               C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C623 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C622 -
           (((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51164 * C8168 +
            ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51164 *
                C8167 +
            C13287 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C118 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51250) *
              C51164 * C51323 * C51220 * C113 -
          ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
            C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
               C51250 +
           (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
            C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
               C118) *
              C51164 * C51323 * C51220 * C114 +
          ((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
            C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
               C118 +
           (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
            C21133 * C1002 + C21129 * C1009 + C21134 * C1245 + C21130 * C1250) *
               C51250) *
              C51164 * C51323 * C51220 * C115 -
          ((C21134 * C1247 + C21130 * C1251 + C21133 * C1004 + C21129 * C1010 +
            C21132 * C467 + C21128 * C475 + C21131 * C133 + C21127 * C143) *
               C51250 +
           (C21134 * C1239 + C21130 * C1246 + C21133 * C995 + C21129 * C1003 +
            C21132 * C457 + C21128 * C466 + C21131 * C122 + C21127 * C132) *
               C118) *
              C51164 * C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C118 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51250) *
               C51164 * C51323 * C622 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51250 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C118) *
               C51164 * C51323 * C623 +
           ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
             C21133 * C3552 + C21129 * C3555 + C21134 * C9347 +
             C21130 * C9349) *
                C118 +
            (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
             C21133 * C3556 + C21129 * C3561 + C21134 * C9350 +
             C21130 * C9353) *
                C51250) *
               C51164 * C51323 * C624) *
              C51445 +
          (((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C118 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51250) *
               C51164 * C51323 * C623 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51250 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C118) *
               C51164 * C51323 * C622 -
           ((C21134 * C9352 + C21130 * C9354 + C21133 * C3558 + C21129 * C3562 +
             C21132 * C875 + C21128 * C885 + C21131 * C635 + C21127 * C643) *
                C51250 +
            (C21134 * C9348 + C21130 * C9351 + C21133 * C3553 + C21129 * C3557 +
             C21132 * C861 + C21128 * C874 + C21131 * C628 + C21127 * C634) *
                C118) *
               C51164 * C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C2434 +
           ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
           C5358 * C2436) *
              C51323 * C737 -
          (C5546 * C2436 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
           ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                C51250 +
            (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                C118) *
               C2434) *
              C51323 * C738 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C2434 +
           ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
              C51323 * C739 -
          (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                C51250 +
            (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                C118) *
               C2436 +
           ((C5300 * C3190 + C51361 * C3194 + C5299 * C750 + C51467 * C756) *
                C51250 +
            (C5300 * C3185 + C51361 * C3189 + C5299 * C744 + C51467 * C751) *
                C118) *
               C2435 +
           ((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                C51250 +
            (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                C118) *
               C2434) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C51452 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51236 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C51452) *
              C292 +
          ((C5358 * C2434 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
            ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
               C51323 * C51452 -
           (((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C2436 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C2435 +
            C5546 * C2434) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            ((C12956 + C12957) * C118 + (C12958 + C12959) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                 C51250 +
             (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                 C118) *
                C51164 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C5299 * C744 + C51467 * C751 + C5300 * C3185 + C51361 * C3189) *
                 C118 +
             (C5299 * C750 + C51467 * C756 + C5300 * C3190 + C51361 * C3194) *
                 C51250) *
                C51164 * C8168) *
               C51236 -
           (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
                C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C51452) *
              C292 +
          ((C5358 * C51164 * C8166 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
                C8167 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                 C51250 +
             (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                 C118) *
                C51164 * C8168 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51164 *
                C8167 +
            C5546 * C51164 * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
               C8167 +
           C13286 * C8168) *
              C737 -
          (C13403 * C8168 +
           ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
               C8167 +
           ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
               C8166) *
              C738 +
          (C13286 * C8166 +
           ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
               C8167 +
           ((C13398 + C13399) * C118 + (C13400 + C13401) * C51250) * C51164 *
               C8168) *
              C739 -
          (((C5300 * C11399 + C51361 * C11400 + C5299 * C8726 +
             C51467 * C8729) *
                C51250 +
            (C5300 * C11397 + C51361 * C11398 + C5299 * C8723 +
             C51467 * C8727) *
                C118) *
               C51164 * C8168 +
           ((C13401 + C13400) * C51250 + (C13399 + C13398) * C118) * C51164 *
               C8167 +
           C13403 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
             C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
                C118 +
            (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
             C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
                C51250) *
               C51164 * C51323 * C51452 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51250 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C118) *
               C51164 * C51323 * C51236) *
              C291 +
          (((C21131 * C296 + C21127 * C305 + C21132 * C857 + C21128 * C866 +
             C21133 * C1147 + C21129 * C1152 + C21134 * C3675 +
             C21130 * C3679) *
                C118 +
            (C21131 * C304 + C21127 * C314 + C21132 * C867 + C21128 * C881 +
             C21133 * C1153 + C21129 * C1159 + C21134 * C3680 +
             C21130 * C3684) *
                C51250) *
               C51164 * C51323 * C51236 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51250 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C118) *
               C51164 * C51323 * C51452) *
              C292 +
          (((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
             C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
                C118 +
            (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
             C21133 * C1002 + C21129 * C1009 + C21134 * C1245 +
             C21130 * C1250) *
                C51250) *
               C51164 * C51323 * C51452 -
           ((C21134 * C3682 + C21130 * C3685 + C21133 * C1155 + C21129 * C1160 +
             C21132 * C869 + C21128 * C882 + C21131 * C302 + C21127 * C313) *
                C51250 +
            (C21134 * C3676 + C21130 * C3681 + C21133 * C1148 + C21129 * C1154 +
             C21132 * C858 + C21128 * C868 + C21131 * C295 + C21127 * C303) *
                C118) *
               C51164 * C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C118 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51250) *
              C51164 * C51323 * C737 -
          ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
            C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
               C51250 +
           (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
            C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
               C118) *
              C51164 * C51323 * C738 +
          ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
            C21133 * C3552 + C21129 * C3555 + C21134 * C9347 + C21130 * C9349) *
               C118 +
           (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
            C21133 * C3556 + C21129 * C3561 + C21134 * C9350 + C21130 * C9353) *
               C51250) *
              C51164 * C51323 * C739 -
          ((C21134 * C11696 + C21130 * C11697 + C21133 * C9232 +
            C21129 * C9235 + C21132 * C3188 + C21128 * C3193 + C21131 * C752 +
            C21127 * C757) *
               C51250 +
           (C21134 * C11694 + C21130 * C11695 + C21133 * C9229 +
            C21129 * C9231 + C21132 * C3184 + C21128 * C3187 + C21131 * C745 +
            C21127 * C753) *
               C118) *
              C51164 * C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
            (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
               C2435 +
           C5737 * C2436) *
              C51323 * C622 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C453 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51454 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C452) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51262) *
               C2434 +
           ((C5299 * C857 + C51467 * C866 + C5300 * C1147 + C51361 * C1152) *
                C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C5299 * C867 + C51467 * C881 + C5300 * C1153 + C51361 * C1159) *
                C51262) *
               C2435 +
           ((C5299 * C858 + C51467 * C868 + C5300 * C1148 + C51361 * C1154) *
                C453 -
            (C5542 * C51454 + C5543 * C452) +
            (C5299 * C869 + C51467 * C882 + C5300 * C1155 + C51361 * C1160) *
                C51262) *
               C2436) *
              C51323 * C623 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C452 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C2434 +
           ((C5900 + C5901) * C452 + (C5902 + C5903) * C51454 -
            (C5300 * C3553 + C51361 * C3557 + C5299 * C861 + C51467 * C874) *
                C453 -
            (C5300 * C3558 + C51361 * C3562 + C5299 * C875 + C51467 * C885) *
                C51262) *
               C2435 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C2436) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
            (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
               C2435 +
           C5737 * C2436) *
              C51323 * C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C2434 +
           ((C5725 + C5724) * C453 -
            ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
            (C5727 + C5726) * C51262) *
               C2435 +
           ((C5728 + C5729) * C453 - (C5352 * C51454 + C5353 * C452) +
            (C5730 + C5731) * C51262) *
               C2436) *
              C51323 * C51220 * C292 +
          (C5737 * C2434 +
           ((C5345 + C5344) * C452 + (C5343 + C5342) * C51454 -
            (C5729 + C5728) * C453 - (C5731 + C5730) * C51262) *
               C2435 +
           ((C5346 + C5347) * C452 + (C5348 + C5349) * C51454 -
            (C5300 * C996 + C51361 * C1005 + C5299 * C458 + C51467 * C468) *
                C453 -
            (C5300 * C1006 + C51361 * C1011 + C5299 * C469 + C51467 * C476) *
                C51262) *
               C2436) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C5300 * C1146 + C51361 * C1150 + C5299 * C856 + C51467 * C864) *
                C453 -
            (C5300 * C1151 + C51361 * C1158 + C5299 * C865 + C51467 * C880) *
                C51262) *
               C51164 * C8167 +
           ((C12956 + C12957) * C452 + (C12958 + C12959) * C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C51164 * C8168) *
              C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C51164 * C8166 +
           ((C7080 + C7081) * C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C7082 + C7083) * C51262) *
               C51164 * C8167 +
           ((C5299 * C861 + C51467 * C874 + C5300 * C3553 + C51361 * C3557) *
                C453 -
            ((C5903 + C5902) * C51454 + (C5901 + C5900) * C452) +
            (C5299 * C875 + C51467 * C885 + C5300 * C3558 + C51361 * C3562) *
                C51262) *
               C51164 * C8168) *
              C51220 * C292 +
          (C5737 * C51164 * C8166 +
           ((C5533 + C5532) * C452 + (C5531 + C5530) * C51454 -
            (C7085 + C7084) * C453 - (C7087 + C7086) * C51262) *
               C51164 * C8167 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C51164 * C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           C13595 * C8168) *
              C622 +
          (((C13577 + C13576) * C453 -
            ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
            (C13579 + C13578) * C51262) *
               C51164 * C8166 +
           ((C13582 + C13581) * C453 -
            ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
            (C13584 + C13583) * C51262) *
               C51164 * C8167 +
           ((C13585 + C13586) * C453 - (C13386 * C51454 + C13387 * C452) +
            (C13587 + C13588) * C51262) *
               C51164 * C8168) *
              C623 +
          (C13595 * C8166 +
           ((C13277 + C13276) * C452 + (C13275 + C13274) * C51454 -
            (C13586 + C13585) * C453 - (C13588 + C13587) * C51262) *
               C51164 * C8167 +
           ((C13398 + C13399) * C452 + (C13400 + C13401) * C51454 -
            (C5300 * C11612 + C51361 * C11613 + C5299 * C8888 +
             C51467 * C8890) *
                C453 -
            (C5300 * C11614 + C51361 * C11615 + C5299 * C8891 +
             C51467 * C8894) *
                C51262) *
               C51164 * C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C452 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51454 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C453 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51262) *
              C51164 * C51323 * C51220 * C291 +
          ((C21131 * C455 + C21127 * C462 + C21132 * C993 + C21128 * C999 +
            C21133 * C1237 + C21129 * C1242 + C21134 * C6566 + C21130 * C6570) *
               C453 -
           ((C21134 * C1243 + C21130 * C1249 + C21133 * C1000 + C21129 * C1008 +
             C21132 * C463 + C21128 * C473 + C21131 * C129 + C21127 * C141) *
                C51454 +
            (C21134 * C1237 + C21130 * C1242 + C21133 * C993 + C21129 * C999 +
             C21132 * C455 + C21128 * C462 + C21131 * C120 + C21127 * C128) *
                C452) +
           (C21131 * C463 + C21127 * C473 + C21132 * C1000 + C21128 * C1008 +
            C21133 * C1243 + C21129 * C1249 + C21134 * C6571 + C21130 * C6575) *
               C51262) *
              C51164 * C51323 * C51220 * C292 +
          ((C21131 * C121 + C21127 * C130 + C21132 * C456 + C21128 * C464 +
            C21133 * C994 + C21129 * C1001 + C21134 * C1238 + C21130 * C1244) *
               C452 +
           (C21131 * C131 + C21127 * C142 + C21132 * C465 + C21128 * C474 +
            C21133 * C1002 + C21129 * C1009 + C21134 * C1245 + C21130 * C1250) *
               C51454 -
           (C21134 * C6567 + C21130 * C6572 + C21133 * C1238 + C21129 * C1244 +
            C21132 * C994 + C21128 * C1001 + C21131 * C456 + C21127 * C464) *
               C453 -
           (C21134 * C6573 + C21130 * C6576 + C21133 * C1245 + C21129 * C1250 +
            C21132 * C1002 + C21128 * C1009 + C21131 * C465 + C21127 * C474) *
               C51262) *
              C51164 * C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C21131 * C119 + C21127 * C126 + C21132 * C454 + C21128 * C460 +
            C21133 * C992 + C21129 * C997 + C21134 * C1236 + C21130 * C1240) *
               C452 +
           (C21131 * C127 + C21127 * C140 + C21132 * C461 + C21128 * C472 +
            C21133 * C998 + C21129 * C1007 + C21134 * C1241 + C21130 * C1248) *
               C51454 -
           (C21134 * C6565 + C21130 * C6568 + C21133 * C1236 + C21129 * C1240 +
            C21132 * C992 + C21128 * C997 + C21131 * C454 + C21127 * C460) *
               C453 -
           (C21134 * C6569 + C21130 * C6574 + C21133 * C1241 + C21129 * C1248 +
            C21132 * C998 + C21128 * C1007 + C21131 * C461 + C21127 * C472) *
               C51262) *
              C51164 * C51323 * C622 +
          ((C21131 * C856 + C21127 * C864 + C21132 * C1146 + C21128 * C1150 +
            C21133 * C3674 + C21129 * C3677 + C21134 * C14009 +
            C21130 * C14011) *
               C453 -
           ((C21134 * C3678 + C21130 * C3683 + C21133 * C1151 + C21129 * C1158 +
             C21132 * C865 + C21128 * C880 + C21131 * C306 + C21127 * C315) *
                C51454 +
            (C21134 * C3674 + C21130 * C3677 + C21133 * C1146 + C21129 * C1150 +
             C21132 * C856 + C21128 * C864 + C21131 * C297 + C21127 * C307) *
                C452) +
           (C21131 * C865 + C21127 * C880 + C21132 * C1151 + C21128 * C1158 +
            C21133 * C3678 + C21129 * C3683 + C21134 * C14012 +
            C21130 * C14015) *
               C51262) *
              C51164 * C51323 * C623 +
          ((C21131 * C627 + C21127 * C632 + C21132 * C860 + C21128 * C872 +
            C21133 * C3552 + C21129 * C3555 + C21134 * C9347 + C21130 * C9349) *
               C452 +
           (C21131 * C633 + C21127 * C642 + C21132 * C873 + C21128 * C884 +
            C21133 * C3556 + C21129 * C3561 + C21134 * C9350 + C21130 * C9353) *
               C51454 -
           (C21134 * C14010 + C21130 * C14013 + C21133 * C9347 +
            C21129 * C9349 + C21132 * C3552 + C21128 * C3555 + C21131 * C860 +
            C21127 * C872) *
               C453 -
           (C21134 * C14014 + C21130 * C14016 + C21133 * C9350 +
            C21129 * C9353 + C21132 * C3556 + C21128 * C3561 + C21131 * C873 +
            C21127 * C884) *
               C51262) *
              C51164 * C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51496 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
            C31833 * C22937) *
               C51323 * C1350 -
           (C32021 * C22937 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51250 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C118) *
                C51496) *
               C51323 * C51236) *
              C51497 +
          ((((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51496 +
            ((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C51480 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C22937) *
               C51323 * C51236 -
           (C31834 * C22937 +
            ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
               C51323 * C1350) *
              C51483 +
          ((C31833 * C51496 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51480 +
            ((C31821 + C31822) * C118 + (C31823 + C31824) * C51250) * C22937) *
               C51323 * C1350 -
           (((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C22937 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51480 +
            C32021 * C51496) *
               C51323 * C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51496 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
            C31833 * C22937) *
               C51323 * C51498 -
           (C32021 * C22937 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51250 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C118) *
                C51496) *
               C51323 * C51486 +
           (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                 C118 +
             (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                 C51250) *
                C51496 +
            ((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C51480 +
            ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C22937) *
               C51323 * C1455) *
              C1456 +
          ((((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51496 +
            ((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C51480 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C22937) *
               C51323 * C51486 -
           (C31834 * C22937 +
            ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
               C51323 * C51498 -
           (((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                 C51250 +
             (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                 C118) *
                C22937 +
            ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51480 +
            ((C32378 + C32377) * C51250 + (C32376 + C32375) * C118) * C51496) *
               C51323 * C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51496 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51480 +
            C32212 * C22937) *
               C51323 * C1350 +
           (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                 C453 -
             ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                  C51454 +
              (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                  C452) +
             (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                 C51262) *
                C51496 +
            ((C33543 + C33544) * C453 -
             ((C32009 + C32010) * C51454 + (C32011 + C32012) * C452) +
             (C33545 + C33546) * C51262) *
                C51480 +
            ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
             (C33549 + C33550) * C51262) *
                C22937) *
               C51323 * C51236) *
              C1456 +
          ((((C32195 + C32194) * C453 -
             ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
             (C32197 + C32196) * C51262) *
                C51496 +
            ((C32200 + C32199) * C453 -
             ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
             (C32202 + C32201) * C51262) *
                C51480 +
            ((C32203 + C32204) * C453 - (C31827 * C51454 + C31828 * C452) +
             (C32205 + C32206) * C51262) *
                C22937) *
               C51323 * C1350 +
           (((C32012 + C32011) * C452 + (C32010 + C32009) * C51454 -
             (C33544 + C33543) * C453 - (C33546 + C33545) * C51262) *
                C51496 +
            ((C32008 + C32007) * C452 + (C32006 + C32005) * C51454 -
             (C33548 + C33547) * C453 - (C33550 + C33549) * C51262) *
                C51480 +
            ((C32013 + C32014) * C452 + (C32015 + C32016) * C51454 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C453 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C22937) *
               C51323 * C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51496 +
            ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
             (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                C51480 +
            C33703 * C22937) *
               C51323 * C1350 +
           (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                 C1723 -
             ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                  C1720 +
              (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                  C1722) +
             (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                 C51262) *
                C51496 +
            ((C33543 + C33544) * C1723 -
             ((C32009 + C32010) * C1720 + (C32011 + C32012) * C1722) +
             (C33545 + C33546) * C51262) *
                C51480 +
            ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
             (C33549 + C33550) * C51262) *
                C22937) *
               C51323 * C51236) *
              C51445 +
          ((((C32195 + C32194) * C1723 -
             ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
             (C32197 + C32196) * C51262) *
                C51496 +
            ((C32200 + C32199) * C1723 -
             ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
             (C32202 + C32201) * C51262) *
                C51480 +
            ((C32203 + C32204) * C1723 - (C31827 * C1720 + C31828 * C1722) +
             (C32205 + C32206) * C51262) *
                C22937) *
               C51323 * C1350 +
           (((C32012 + C32011) * C1722 + (C32010 + C32009) * C1720 -
             (C33544 + C33543) * C1723 - (C33546 + C33545) * C51262) *
                C51496 +
            ((C32008 + C32007) * C1722 + (C32006 + C32005) * C1720 -
             (C33548 + C33547) * C1723 - (C33550 + C33549) * C51262) *
                C51480 +
            ((C32013 + C32014) * C1722 + (C32015 + C32016) * C1720 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C1723 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C22937) *
               C51323 * C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1722 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C1720 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1723 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51496 +
           ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
            (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
               C51480 +
           C33703 * C22937) *
              C51323 * C51498 +
          (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                C1723 -
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C1720 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C1722) +
            (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                C51262) *
               C51496 +
           ((C33543 + C33544) * C1723 -
            ((C32009 + C32010) * C1720 + (C32011 + C32012) * C1722) +
            (C33545 + C33546) * C51262) *
               C51480 +
           ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
            (C33549 + C33550) * C51262) *
               C22937) *
              C51323 * C51486 +
          (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                C1722 +
            (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                C1720 -
            (C31775 * C3552 + C51361 * C3555 + C31774 * C860 + C31772 * C872) *
                C1723 -
            (C31775 * C3556 + C51361 * C3561 + C31774 * C873 + C31772 * C884) *
                C51262) *
               C51496 +
           ((C32375 + C32376) * C1722 + (C32377 + C32378) * C1720 -
            (C31775 * C3553 + C51361 * C3557 + C31774 * C861 + C31772 * C874) *
                C1723 -
            (C31775 * C3558 + C51361 * C3562 + C31774 * C875 + C31772 * C885) *
                C51262) *
               C51480 +
           ((C32379 + C32380) * C1722 + (C32381 + C32382) * C1720 -
            (C31775 * C3554 + C51361 * C3559 + C31774 * C862 + C31772 * C876) *
                C1723 -
            (C31775 * C3560 + C51361 * C3563 + C31774 * C877 + C31772 * C886) *
                C51262) *
               C22937) *
              C51323 * C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51499 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51489 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C1991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C1988) *
               C51496 +
           ((C31809 + C31810) * C1989 + (C31811 + C31812) * C51499 -
            (C32194 + C32195) * C1990 - (C32196 + C32197) * C51489 +
            (C32789 + C32790) * C1991 + (C32791 + C32792) * C1988) *
               C51480 +
           (C31825 * C1989 + C31826 * C51499 - C32207 * C1990 -
            C32208 * C51489 + (C32793 + C32794) * C1991 +
            (C32795 + C32796) * C1988) *
               C22937) *
              C51323 * C1350 +
          (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                C1990 -
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51499 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C1989) +
            (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                C51489 -
            (C31775 * C3674 + C51361 * C3677 + C31774 * C1146 +
             C31772 * C1150) *
                C1991 -
            (C31775 * C3678 + C51361 * C3683 + C31774 * C1151 +
             C31772 * C1158) *
                C1988) *
               C51496 +
           ((C33543 + C33544) * C1990 -
            ((C32009 + C32010) * C51499 + (C32011 + C32012) * C1989) +
            (C33545 + C33546) * C51489 -
            (C31775 * C3675 + C51361 * C3679 + C31774 * C1147 +
             C31772 * C1152) *
                C1991 -
            (C31775 * C3680 + C51361 * C3684 + C31774 * C1153 +
             C31772 * C1159) *
                C1988) *
               C51480 +
           ((C33547 + C33548) * C1990 - (C32017 * C51499 + C32018 * C1989) +
            (C33549 + C33550) * C51489 -
            (C31775 * C3676 + C51361 * C3681 + C31774 * C1148 +
             C31772 * C1154) *
                C1991 -
            (C31775 * C3682 + C51361 * C3685 + C31774 * C1155 +
             C31772 * C1160) *
                C1988) *
               C22937) *
              C51323 * C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51496 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
            C31833 * C22937) *
               C51323 * C622 -
           (C32021 * C22937 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51250 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C118) *
                C51496) *
               C51323 * C623 +
           (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                 C118 +
             (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                 C51250) *
                C51496 +
            ((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C51480 +
            ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C22937) *
               C51323 * C624) *
              C51445 +
          ((((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51496 +
            ((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C51480 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C22937) *
               C51323 * C623 -
           (C31834 * C22937 +
            ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
               C51323 * C622 -
           (((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                 C51250 +
             (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                 C118) *
                C22937 +
            ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51480 +
            ((C32378 + C32377) * C51250 + (C32376 + C32375) * C118) * C51496) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51496 +
           ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
           C31833 * C22937) *
              C51323 * C51220 * C113 -
          (C31834 * C22937 +
           ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
           ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
              C51323 * C51220 * C114 +
          (C31833 * C51496 +
           ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51480 +
           ((C31821 + C31822) * C118 + (C31823 + C31824) * C51250) * C22937) *
              C51323 * C51220 * C115 -
          (((C31775 * C471 + C51361 * C477 + C31774 * C137 + C31772 * C145) *
                C51250 +
            (C31775 * C459 + C51361 * C470 + C31774 * C124 + C31772 * C136) *
                C118) *
               C22937 +
           ((C31824 + C31823) * C51250 + (C31822 + C31821) * C118) * C51480 +
           C31834 * C51496) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C986 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C987 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C988) *
               C51496 +
           ((C31809 + C31810) * C989 + (C31811 + C31812) * C986 -
            (C32194 + C32195) * C990 - (C32196 + C32197) * C987 +
            (C32789 + C32790) * C991 + (C32791 + C32792) * C988) *
               C51480 +
           (C31825 * C989 + C31826 * C986 - C32207 * C990 - C32208 * C987 +
            (C32793 + C32794) * C991 + (C32795 + C32796) * C988) *
               C22937) *
              C51323 * C51220 * C51445 +
          (((C32195 + C32194) * C990 -
            ((C31812 + C31811) * C986 + (C31810 + C31809) * C989) +
            (C32197 + C32196) * C987 - (C32790 + C32789) * C991 -
            (C32792 + C32791) * C988) *
               C51496 +
           ((C32200 + C32199) * C990 -
            ((C31816 + C31815) * C986 + (C31814 + C31813) * C989) +
            (C32202 + C32201) * C987 - (C32794 + C32793) * C991 -
            (C32796 + C32795) * C988) *
               C51480 +
           ((C32203 + C32204) * C990 - (C31827 * C986 + C31828 * C989) +
            (C32205 + C32206) * C987 -
            (C31775 * C1239 + C51361 * C1246 + C31774 * C995 + C31772 * C1003) *
                C991 -
            (C31775 * C1247 + C51361 * C1251 + C31774 * C1004 +
             C31772 * C1010) *
                C988) *
               C22937) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51496 +
           ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
           C31833 * C22937) *
              C51323 * C737 -
          (C32021 * C22937 +
           ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
           ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                C51250 +
            (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                C118) *
               C51496) *
              C51323 * C738 +
          (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                C118 +
            (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                C51250) *
               C51496 +
           ((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C51480 +
           ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C22937) *
              C51323 * C739 -
          (((C31775 * C3192 + C51361 * C3195 + C31774 * C748 + C31772 * C755) *
                C51250 +
            (C31775 * C3186 + C51361 * C3191 + C31774 * C743 + C31772 * C749) *
                C118) *
               C22937 +
           ((C31775 * C3190 + C51361 * C3194 + C31774 * C750 + C31772 * C756) *
                C51250 +
            (C31775 * C3185 + C51361 * C3189 + C31774 * C744 + C31772 * C751) *
                C118) *
               C51480 +
           ((C31775 * C3188 + C51361 * C3193 + C31774 * C752 + C31772 * C757) *
                C51250 +
            (C31775 * C3184 + C51361 * C3187 + C31774 * C745 + C31772 * C753) *
                C118) *
               C51496) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51496 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
            C31833 * C22937) *
               C51323 * C51452 -
           (C32021 * C22937 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51250 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C118) *
                C51496) *
               C51323 * C51236) *
              C291 +
          ((((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51496 +
            ((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C51480 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C22937) *
               C51323 * C51236 -
           (C31834 * C22937 +
            ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
               C51323 * C51452) *
              C292 +
          ((C31833 * C51496 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51480 +
            ((C31821 + C31822) * C118 + (C31823 + C31824) * C51250) * C22937) *
               C51323 * C51452 -
           (((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C22937 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51480 +
            C32021 * C51496) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C986 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C987 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C988) *
               C51496 +
           ((C31809 + C31810) * C989 + (C31811 + C31812) * C986 -
            (C32194 + C32195) * C990 - (C32196 + C32197) * C987 +
            (C32789 + C32790) * C991 + (C32791 + C32792) * C988) *
               C51480 +
           (C31825 * C989 + C31826 * C986 - C32207 * C990 - C32208 * C987 +
            (C32793 + C32794) * C991 + (C32795 + C32796) * C988) *
               C22937) *
              C51323 * C51452 +
          (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                C990 -
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C986 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C989) +
            (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                C987 -
            (C31775 * C3674 + C51361 * C3677 + C31774 * C1146 +
             C31772 * C1150) *
                C991 -
            (C31775 * C3678 + C51361 * C3683 + C31774 * C1151 +
             C31772 * C1158) *
                C988) *
               C51496 +
           ((C31774 * C857 + C31772 * C866 + C31775 * C1147 + C51361 * C1152) *
                C990 -
            ((C32009 + C32010) * C986 + (C32011 + C32012) * C989) +
            (C31774 * C867 + C31772 * C881 + C31775 * C1153 + C51361 * C1159) *
                C987 -
            (C31775 * C3675 + C51361 * C3679 + C31774 * C1147 +
             C31772 * C1152) *
                C991 -
            (C31775 * C3680 + C51361 * C3684 + C31774 * C1153 +
             C31772 * C1159) *
                C988) *
               C51480 +
           ((C31774 * C858 + C31772 * C868 + C31775 * C1148 + C51361 * C1154) *
                C990 -
            (C32017 * C986 + C32018 * C989) +
            (C31774 * C869 + C31772 * C882 + C31775 * C1155 + C51361 * C1160) *
                C987 -
            (C31775 * C3676 + C51361 * C3681 + C31774 * C1148 +
             C31772 * C1154) *
                C991 -
            (C31775 * C3682 + C51361 * C3685 + C31774 * C1155 +
             C31772 * C1160) *
                C988) *
               C22937) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51496 +
           ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
            (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
               C51480 +
           C32212 * C22937) *
              C51323 * C622 +
          (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                C453 -
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51454 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C452) +
            (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                C51262) *
               C51496 +
           ((C31774 * C857 + C31772 * C866 + C31775 * C1147 + C51361 * C1152) *
                C453 -
            ((C32009 + C32010) * C51454 + (C32011 + C32012) * C452) +
            (C31774 * C867 + C31772 * C881 + C31775 * C1153 + C51361 * C1159) *
                C51262) *
               C51480 +
           ((C31774 * C858 + C31772 * C868 + C31775 * C1148 + C51361 * C1154) *
                C453 -
            (C32017 * C51454 + C32018 * C452) +
            (C31774 * C869 + C31772 * C882 + C31775 * C1155 + C51361 * C1160) *
                C51262) *
               C22937) *
              C51323 * C623 +
          (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                C452 +
            (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                C51454 -
            (C31775 * C3552 + C51361 * C3555 + C31774 * C860 + C31772 * C872) *
                C453 -
            (C31775 * C3556 + C51361 * C3561 + C31774 * C873 + C31772 * C884) *
                C51262) *
               C51496 +
           ((C32375 + C32376) * C452 + (C32377 + C32378) * C51454 -
            (C31775 * C3553 + C51361 * C3557 + C31774 * C861 + C31772 * C874) *
                C453 -
            (C31775 * C3558 + C51361 * C3562 + C31774 * C875 + C31772 * C885) *
                C51262) *
               C51480 +
           ((C32379 + C32380) * C452 + (C32381 + C32382) * C51454 -
            (C31775 * C3554 + C51361 * C3559 + C31774 * C862 + C31772 * C876) *
                C453 -
            (C31775 * C3560 + C51361 * C3563 + C31774 * C877 + C31772 * C886) *
                C51262) *
               C22937) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51496 +
           ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
            (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
               C51480 +
           C32212 * C22937) *
              C51323 * C51220 * C291 +
          (((C32195 + C32194) * C453 -
            ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
            (C32197 + C32196) * C51262) *
               C51496 +
           ((C32200 + C32199) * C453 -
            ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
            (C32202 + C32201) * C51262) *
               C51480 +
           ((C32203 + C32204) * C453 - (C31827 * C51454 + C31828 * C452) +
            (C32205 + C32206) * C51262) *
               C22937) *
              C51323 * C51220 * C292 +
          (C32212 * C51496 +
           ((C31820 + C31819) * C452 + (C31818 + C31817) * C51454 -
            (C32204 + C32203) * C453 - (C32206 + C32205) * C51262) *
               C51480 +
           ((C31821 + C31822) * C452 + (C31823 + C31824) * C51454 -
            (C31775 * C996 + C51361 * C1005 + C31774 * C458 + C31772 * C468) *
                C453 -
            (C31775 * C1006 + C51361 * C1011 + C31774 * C469 + C31772 * C476) *
                C51262) *
               C22937) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
               C1232 +
           (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
               C1228 -
           (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
               C1233 -
           (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
               C1229 +
           (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
               C1234 +
           (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
               C1230 -
           (C31775 * C6565 + C51361 * C6568 + C31774 * C1236 + C31772 * C1240) *
               C1235 -
           (C31775 * C6569 + C51361 * C6574 + C31774 * C1241 + C31772 * C1248) *
               C1231) *
              C51496 +
          ((C31809 + C31810) * C1232 + (C31811 + C31812) * C1228 -
           (C32194 + C32195) * C1233 - (C32196 + C32197) * C1229 +
           (C32789 + C32790) * C1234 + (C32791 + C32792) * C1230 -
           (C31775 * C6566 + C51361 * C6570 + C31774 * C1237 + C31772 * C1242) *
               C1235 -
           (C31775 * C6571 + C51361 * C6575 + C31774 * C1243 + C31772 * C1249) *
               C1231) *
              C51480 +
          (C31825 * C1232 + C31826 * C1228 - C32207 * C1233 - C32208 * C1229 +
           (C32793 + C32794) * C1234 + (C32795 + C32796) * C1230 -
           (C31775 * C6567 + C51361 * C6572 + C31774 * C1238 + C31772 * C1244) *
               C1235 -
           (C31775 * C6573 + C51361 * C6576 + C31774 * C1245 + C31772 * C1250) *
               C1231) *
              C22937) *
         C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1722 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C1720 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1723 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51496 +
           ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
            (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
               C51480 +
           C33703 * C22937) *
              C51323 * C51220 * C51497 +
          (((C32195 + C32194) * C1723 -
            ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
            (C32197 + C32196) * C51262) *
               C51496 +
           ((C32200 + C32199) * C1723 -
            ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
            (C32202 + C32201) * C51262) *
               C51480 +
           ((C32203 + C32204) * C1723 - (C31827 * C1720 + C31828 * C1722) +
            (C32205 + C32206) * C51262) *
               C22937) *
              C51323 * C51220 * C51483 +
          (C33703 * C51496 +
           ((C31820 + C31819) * C1722 + (C31818 + C31817) * C1720 -
            (C32204 + C32203) * C1723 - (C32206 + C32205) * C51262) *
               C51480 +
           ((C31821 + C31822) * C1722 + (C31823 + C31824) * C1720 -
            (C31775 * C996 + C51361 * C1005 + C31774 * C458 + C31772 * C468) *
                C1723 -
            (C31775 * C1006 + C51361 * C1011 + C31774 * C469 + C31772 * C476) *
                C51262) *
               C22937) *
              C51323 * C51220 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C51496 +
            ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
             (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                C51480 +
            C33703 * C22937) *
               C51323 * C51452 +
           (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                 C1723 -
             ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                  C1720 +
              (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                  C1722) +
             (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                 C51262) *
                C51496 +
            ((C33543 + C33544) * C1723 -
             ((C32009 + C32010) * C1720 + (C32011 + C32012) * C1722) +
             (C33545 + C33546) * C51262) *
                C51480 +
            ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
             (C33549 + C33550) * C51262) *
                C22937) *
               C51323 * C51236) *
              C1456 +
          ((((C32195 + C32194) * C1723 -
             ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
             (C32197 + C32196) * C51262) *
                C51496 +
            ((C32200 + C32199) * C1723 -
             ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
             (C32202 + C32201) * C51262) *
                C51480 +
            ((C32203 + C32204) * C1723 - (C31827 * C1720 + C31828 * C1722) +
             (C32205 + C32206) * C51262) *
                C22937) *
               C51323 * C51452 +
           (((C32012 + C32011) * C1722 + (C32010 + C32009) * C1720 -
             (C33544 + C33543) * C1723 - (C33546 + C33545) * C51262) *
                C51496 +
            ((C32008 + C32007) * C1722 + (C32006 + C32005) * C1720 -
             (C33548 + C33547) * C1723 - (C33550 + C33549) * C51262) *
                C51480 +
            ((C32013 + C32014) * C1722 + (C32015 + C32016) * C1720 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C1723 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C22937) *
               C51323 * C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1989 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51499 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1990 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51489 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C1991 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C1988) *
               C51496 +
           ((C31809 + C31810) * C1989 + (C31811 + C31812) * C51499 -
            (C32194 + C32195) * C1990 - (C32196 + C32197) * C51489 +
            (C32789 + C32790) * C1991 + (C32791 + C32792) * C1988) *
               C51480 +
           (C31825 * C1989 + C31826 * C51499 - C32207 * C1990 -
            C32208 * C51489 + (C32793 + C32794) * C1991 +
            (C32795 + C32796) * C1988) *
               C22937) *
              C51323 * C51220 * C1456 +
          (((C32195 + C32194) * C1990 -
            ((C31812 + C31811) * C51499 + (C31810 + C31809) * C1989) +
            (C32197 + C32196) * C51489 - (C32790 + C32789) * C1991 -
            (C32792 + C32791) * C1988) *
               C51496 +
           ((C32200 + C32199) * C1990 -
            ((C31816 + C31815) * C51499 + (C31814 + C31813) * C1989) +
            (C32202 + C32201) * C51489 - (C32794 + C32793) * C1991 -
            (C32796 + C32795) * C1988) *
               C51480 +
           ((C32203 + C32204) * C1990 - (C31827 * C51499 + C31828 * C1989) +
            (C32205 + C32206) * C51489 -
            (C31775 * C1239 + C51361 * C1246 + C31774 * C995 + C31772 * C1003) *
                C1991 -
            (C31775 * C1247 + C51361 * C1251 + C31774 * C1004 +
             C31772 * C1010) *
                C1988) *
               C22937) *
              C51323 * C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51496 +
           ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
           C31833 * C22937) *
              C51323 * C51220 * C113 -
          (C31834 * C22937 +
           ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
           ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
              C51323 * C51220 * C114 +
          (C31833 * C51496 +
           ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51480 +
           ((C31821 + C31822) * C118 + (C31823 + C31824) * C51250) * C22937) *
              C51323 * C51220 * C115 -
          (((C31775 * C471 + C51361 * C477 + C31774 * C137 + C31772 * C145) *
                C51250 +
            (C31775 * C459 + C51361 * C470 + C31774 * C124 + C31772 * C136) *
                C118) *
               C22937 +
           ((C31824 + C31823) * C51250 + (C31822 + C31821) * C118) * C51480 +
           C31834 * C51496) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51496 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
            C31833 * C22937) *
               C51323 * C622 -
           (C32021 * C22937 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51250 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C118) *
                C51496) *
               C51323 * C623 +
           (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                 C118 +
             (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                 C51250) *
                C51496 +
            ((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C51480 +
            ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C22937) *
               C51323 * C624) *
              C51445 +
          ((((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51496 +
            ((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C51480 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C22937) *
               C51323 * C623 -
           (C31834 * C22937 +
            ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
               C51323 * C622 -
           (((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                 C51250 +
             (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                 C118) *
                C22937 +
            ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51480 +
            ((C32378 + C32377) * C51250 + (C32376 + C32375) * C118) * C51496) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C51496 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
            C31833 * C22937) *
               C51323 * C51452 -
           (C32021 * C22937 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51250 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C118) *
                C51496) *
               C51323 * C51236) *
              C291 +
          ((((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51496 +
            ((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C51480 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C22937) *
               C51323 * C51236 -
           (C31834 * C22937 +
            ((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51480 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C51496) *
               C51323 * C51452) *
              C292 +
          ((C31833 * C51496 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51480 +
            ((C31821 + C31822) * C118 + (C31823 + C31824) * C51250) * C22937) *
               C51323 * C51452 -
           (((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C22937 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51480 +
            C32021 * C51496) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C118 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51250) *
               C51496 +
           ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51480 +
           C31833 * C22937) *
              C51323 * C737 -
          (C32021 * C22937 +
           ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C51480 +
           ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                C51250 +
            (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                C118) *
               C51496) *
              C51323 * C738 +
          (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                C118 +
            (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                C51250) *
               C51496 +
           ((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C51480 +
           ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C22937) *
              C51323 * C739 -
          (((C31775 * C3192 + C51361 * C3195 + C31774 * C748 + C31772 * C755) *
                C51250 +
            (C31775 * C3186 + C51361 * C3191 + C31774 * C743 + C31772 * C749) *
                C118) *
               C22937 +
           ((C31775 * C3190 + C51361 * C3194 + C31774 * C750 + C31772 * C756) *
                C51250 +
            (C31775 * C3185 + C51361 * C3189 + C31774 * C744 + C31772 * C751) *
                C118) *
               C51480 +
           ((C31775 * C3188 + C51361 * C3193 + C31774 * C752 + C31772 * C757) *
                C51250 +
            (C31775 * C3184 + C51361 * C3187 + C31774 * C745 + C31772 * C753) *
                C118) *
               C51496) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51496 +
           ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
            (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
               C51480 +
           C32212 * C22937) *
              C51323 * C51220 * C291 +
          (((C32195 + C32194) * C453 -
            ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
            (C32197 + C32196) * C51262) *
               C51496 +
           ((C32200 + C32199) * C453 -
            ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
            (C32202 + C32201) * C51262) *
               C51480 +
           ((C32203 + C32204) * C453 - (C31827 * C51454 + C31828 * C452) +
            (C32205 + C32206) * C51262) *
               C22937) *
              C51323 * C51220 * C292 +
          (C32212 * C51496 +
           ((C31820 + C31819) * C452 + (C31818 + C31817) * C51454 -
            (C32204 + C32203) * C453 - (C32206 + C32205) * C51262) *
               C51480 +
           ((C31821 + C31822) * C452 + (C31823 + C31824) * C51454 -
            (C31775 * C996 + C51361 * C1005 + C31774 * C458 + C31772 * C468) *
                C453 -
            (C31775 * C1006 + C51361 * C1011 + C31774 * C469 + C31772 * C476) *
                C51262) *
               C22937) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C452 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C51454 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C453 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C51262) *
               C51496 +
           ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
            (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
               C51480 +
           C32212 * C22937) *
              C51323 * C622 +
          (((C31774 * C856 + C31772 * C864 + C31775 * C1146 + C51361 * C1150) *
                C453 -
            ((C31775 * C865 + C51361 * C880 + C31774 * C306 + C31772 * C315) *
                 C51454 +
             (C31775 * C856 + C51361 * C864 + C31774 * C297 + C31772 * C307) *
                 C452) +
            (C31774 * C865 + C31772 * C880 + C31775 * C1151 + C51361 * C1158) *
                C51262) *
               C51496 +
           ((C31774 * C857 + C31772 * C866 + C31775 * C1147 + C51361 * C1152) *
                C453 -
            ((C32009 + C32010) * C51454 + (C32011 + C32012) * C452) +
            (C31774 * C867 + C31772 * C881 + C31775 * C1153 + C51361 * C1159) *
                C51262) *
               C51480 +
           ((C31774 * C858 + C31772 * C868 + C31775 * C1148 + C51361 * C1154) *
                C453 -
            (C32017 * C51454 + C32018 * C452) +
            (C31774 * C869 + C31772 * C882 + C31775 * C1155 + C51361 * C1160) *
                C51262) *
               C22937) *
              C51323 * C623 +
          (((C31774 * C627 + C31772 * C632 + C31775 * C860 + C51361 * C872) *
                C452 +
            (C31774 * C633 + C31772 * C642 + C31775 * C873 + C51361 * C884) *
                C51454 -
            (C31775 * C3552 + C51361 * C3555 + C31774 * C860 + C31772 * C872) *
                C453 -
            (C31775 * C3556 + C51361 * C3561 + C31774 * C873 + C31772 * C884) *
                C51262) *
               C51496 +
           ((C32375 + C32376) * C452 + (C32377 + C32378) * C51454 -
            (C31775 * C3553 + C51361 * C3557 + C31774 * C861 + C31772 * C874) *
                C453 -
            (C31775 * C3558 + C51361 * C3562 + C31774 * C875 + C31772 * C885) *
                C51262) *
               C51480 +
           ((C32379 + C32380) * C452 + (C32381 + C32382) * C51454 -
            (C31775 * C3554 + C51361 * C3559 + C31774 * C862 + C31772 * C876) *
                C453 -
            (C31775 * C3560 + C51361 * C3563 + C31774 * C877 + C31772 * C886) *
                C51262) *
               C22937) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C51466 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
             C34878 * C51169) *
                C51337) *
               C1350 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C25568) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
                C51466) *
               C51236) *
              C51497 +
          (((C34878 * C25568 + C34880 * C51169) * C51466 +
            (C35302 * C25568 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C32021 * C51169 + C34879 * C25568) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
                C51466) *
               C1350) *
              C51483 +
          (((C31833 * C25568 +
             ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
                C51466 +
            (C34880 * C25568 +
             ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
                C51337) *
               C1350 -
           ((((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                  C51250 +
              (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                  C118) *
                 C51169 +
             ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C25568) *
                C51337 +
            (((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51169 +
             C32021 * C25568) *
                C51466) *
               C51236) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C51466 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
             C34878 * C51169) *
                C51337) *
               C51498 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C25568) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
                C51466) *
               C51486 +
           ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C25568 +
             C35302 * C51169) *
                C51466 +
            (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C25568 +
             ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
                C51337) *
               C1455) *
              C1456 +
          (((C34878 * C25568 + C34880 * C51169) * C51466 +
            (C35302 * C25568 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51486 -
           ((C32021 * C51169 + C34879 * C25568) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
                C51466) *
               C51498 -
           ((((C31775 * C3192 + C51361 * C3195 + C31774 * C748 +
               C31772 * C755) *
                  C51250 +
              (C31775 * C3186 + C51361 * C3191 + C31774 * C743 +
               C31772 * C749) *
                  C118) *
                 C51169 +
             ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C25568) *
                C51337 +
            (((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51169 +
             C35301 * C25568) *
                C51466) *
               C1455) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C452 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51454 -
              (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                  C453 -
              (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                  C51262) *
                 C25568 +
             ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
              (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                 C51169) *
                C51466 +
            (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
              (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                 C25568 +
             C36879 * C51169) *
                C51337) *
               C1350 +
           ((((C35664 + C35663) * C453 -
              ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
              (C35666 + C35665) * C51262) *
                 C25568 +
             C36880 * C51169) *
                C51466 +
            (((C35667 + C35668) * C453 -
              ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
              (C35669 + C35670) * C51262) *
                 C25568 +
             ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
              (C35673 + C35674) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C1456 +
          (((((C32195 + C32194) * C453 -
              ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
              (C32197 + C32196) * C51262) *
                 C25568 +
             ((C32200 + C32199) * C453 -
              ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
              (C32202 + C32201) * C51262) *
                 C51169) *
                C51466 +
            (C36880 * C25568 +
             ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
              (C33549 + C33550) * C51262) *
                 C51169) *
                C51337) *
               C1350 +
           ((C36879 * C25568 +
             (C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
              (C33550 + C33549) * C51262) *
                 C51169) *
                C51466 +
            ((C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
              (C35674 + C35673) * C51262) *
                 C25568 +
             ((C32379 + C32380) * C452 + (C32381 + C32382) * C51454 -
              (C31775 * C3554 + C51361 * C3559 + C31774 * C862 +
               C31772 * C876) *
                  C453 -
              (C31775 * C3560 + C51361 * C3563 + C31774 * C877 +
               C31772 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C1722 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C1720 -
              (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                  C1723 -
              (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                  C51262) *
                 C25568 +
             ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
              (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                 C51169) *
                C51466 +
            (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
              (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                 C25568 +
             C37345 * C51169) *
                C51337) *
               C1350 +
           ((((C35664 + C35663) * C1723 -
              ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
              (C35666 + C35665) * C51262) *
                 C25568 +
             C37346 * C51169) *
                C51466 +
            (((C35667 + C35668) * C1723 -
              ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
              (C35669 + C35670) * C51262) *
                 C25568 +
             ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
              (C35673 + C35674) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51445 +
          (((((C32195 + C32194) * C1723 -
              ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
              (C32197 + C32196) * C51262) *
                 C25568 +
             ((C32200 + C32199) * C1723 -
              ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
              (C32202 + C32201) * C51262) *
                 C51169) *
                C51466 +
            (C37346 * C25568 +
             ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
              (C33549 + C33550) * C51262) *
                 C51169) *
                C51337) *
               C1350 +
           ((C37345 * C25568 +
             (C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
              (C33550 + C33549) * C51262) *
                 C51169) *
                C51466 +
            ((C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
              (C35674 + C35673) * C51262) *
                 C25568 +
             ((C32379 + C32380) * C1722 + (C32381 + C32382) * C1720 -
              (C31775 * C3554 + C51361 * C3559 + C31774 * C862 +
               C31772 * C876) *
                  C1723 -
              (C31775 * C3560 + C51361 * C3563 + C31774 * C877 +
               C31772 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C25568 +
            ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
             (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
             (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                C25568 +
            C37345 * C51169) *
               C51337) *
              C51498 +
          ((((C35664 + C35663) * C1723 -
             ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
             (C35666 + C35665) * C51262) *
                C25568 +
            C37346 * C51169) *
               C51466 +
           (((C35667 + C35668) * C1723 -
             ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
             (C35669 + C35670) * C51262) *
                C25568 +
            ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
             (C35673 + C35674) * C51262) *
                C51169) *
               C51337) *
              C51486 +
          ((((C35294 + C35293) * C1722 + (C35292 + C35291) * C1720 -
             (C35668 + C35667) * C1723 - (C35670 + C35669) * C51262) *
                C25568 +
            (C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
             (C35674 + C35673) * C51262) *
                C51169) *
               C51466 +
           (((C35441 + C35442) * C1722 + (C35443 + C35444) * C1720 -
             (C31775 * C9229 + C51361 * C9231 + C31774 * C3184 +
              C31772 * C3187) *
                 C1723 -
             (C31775 * C9232 + C51361 * C9235 + C31774 * C3188 +
              C31772 * C3193) *
                 C51262) *
                C25568 +
            ((C35297 + C35298) * C1722 + (C35299 + C35300) * C1720 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C1723 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C1455) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51499 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51489 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C1991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C1988) *
                C25568 +
            ((C31809 + C31810) * C1989 + (C31811 + C31812) * C51499 -
             (C32194 + C32195) * C1990 - (C32196 + C32197) * C51489 +
             (C32789 + C32790) * C1991 + (C32791 + C32792) * C1988) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C1989 + (C34870 + C34871) * C51499 -
             (C35663 + C35664) * C1990 - (C35665 + C35666) * C51489 +
             (C36083 + C36084) * C1991 + (C36085 + C36086) * C1988) *
                C25568 +
            (C34862 * C1989 + C34863 * C51499 - C36865 * C1990 -
             C36866 * C51489 + (C35877 + C35878) * C1991 +
             (C35879 + C35880) * C1988) *
                C51169) *
               C51337) *
              C1350 +
          ((((C35664 + C35663) * C1990 -
             ((C34871 + C34870) * C51499 + (C34869 + C34868) * C1989) +
             (C35666 + C35665) * C51489 - (C36084 + C36083) * C1991 -
             (C36086 + C36085) * C1988) *
                C25568 +
            (C36867 * C1990 - (C34864 * C51499 + C34865 * C1989) +
             C36870 * C51489 - (C35878 + C35877) * C1991 -
             (C35880 + C35879) * C1988) *
                C51169) *
               C51466 +
           (((C35667 + C35668) * C1990 -
             ((C35291 + C35292) * C51499 + (C35293 + C35294) * C1989) +
             (C35669 + C35670) * C51489 -
             (C31775 * C9347 + C51361 * C9349 + C31774 * C3552 +
              C31772 * C3555) *
                 C1991 -
             (C31775 * C9350 + C51361 * C9353 + C31774 * C3556 +
              C31772 * C3561) *
                 C1988) *
                C25568 +
            ((C35671 + C35672) * C1990 - (C35269 * C51499 + C35270 * C1989) +
             (C35673 + C35674) * C51489 -
             (C31775 * C9348 + C51361 * C9351 + C31774 * C3553 +
              C31772 * C3557) *
                 C1991 -
             (C31775 * C9352 + C51361 * C9354 + C31774 * C3558 +
              C31772 * C3562) *
                 C1988) *
                C51169) *
               C51337) *
              C51236) *
         C51188) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C51466 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
             C34878 * C51169) *
                C51337) *
               C622 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C25568) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
                C51466) *
               C623 +
           ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C25568 +
             C35302 * C51169) *
                C51466 +
            (((C31774 * C745 + C31772 * C753 + C31775 * C3184 +
               C51361 * C3187) *
                  C118 +
              (C31774 * C752 + C31772 * C757 + C31775 * C3188 +
               C51361 * C3193) *
                  C51250) *
                 C25568 +
             ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
                C51337) *
               C624) *
              C51445 +
          (((C34878 * C25568 + C34880 * C51169) * C51466 +
            (C35302 * C25568 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C623 -
           ((C32021 * C51169 + C34879 * C25568) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
                C51466) *
               C622 -
           ((((C31775 * C3192 + C51361 * C3195 + C31774 * C748 +
               C31772 * C755) *
                  C51250 +
              (C31775 * C3186 + C51361 * C3191 + C31774 * C743 +
               C31772 * C749) *
                  C118) *
                 C51169 +
             ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C25568) *
                C51337 +
            (((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51169 +
             C35301 * C25568) *
                C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C51466 +
           (((C31774 * C297 + C31772 * C307 + C31775 * C856 + C51361 * C864) *
                 C118 +
             (C31774 * C306 + C31772 * C315 + C31775 * C865 + C51361 * C880) *
                 C51250) *
                C25568 +
            ((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51169) *
               C51337) *
              C51220 * C113 -
          ((C32021 * C51169 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C25568) *
               C51337 +
           (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
               C51466) *
              C51220 * C114 +
          ((C31833 * C25568 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
               C51466 +
           (((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C25568 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
               C51337) *
              C51220 * C115 -
          ((((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C51169 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C25568) *
               C51337 +
           (((C31824 + C31823) * C51250 + (C31822 + C31821) * C118) * C51169 +
            C31834 * C25568) *
               C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C986 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C987 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C988) *
                C25568 +
            ((C31809 + C31810) * C989 + (C31811 + C31812) * C986 -
             (C32194 + C32195) * C990 - (C32196 + C32197) * C987 +
             (C32789 + C32790) * C991 + (C32791 + C32792) * C988) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C989 + (C34870 + C34871) * C986 -
             (C35663 + C35664) * C990 - (C35665 + C35666) * C987 +
             (C31774 * C1146 + C31772 * C1150 + C31775 * C3674 +
              C51361 * C3677) *
                 C991 +
             (C31774 * C1151 + C31772 * C1158 + C31775 * C3678 +
              C51361 * C3683) *
                 C988) *
                C25568 +
            (C34862 * C989 + C34863 * C986 - (C33544 + C33543) * C990 -
             (C33546 + C33545) * C987 + (C35877 + C35878) * C991 +
             (C35879 + C35880) * C988) *
                C51169) *
               C51337) *
              C51220 * C51445 +
          ((((C32195 + C32194) * C990 -
             ((C31812 + C31811) * C986 + (C31810 + C31809) * C989) +
             (C32197 + C32196) * C987 - (C32790 + C32789) * C991 -
             (C32792 + C32791) * C988) *
                C25568 +
            ((C32200 + C32199) * C990 -
             ((C31816 + C31815) * C986 + (C31814 + C31813) * C989) +
             (C32202 + C32201) * C987 - (C32794 + C32793) * C991 -
             (C32796 + C32795) * C988) *
                C51169) *
               C51466 +
           (((C33543 + C33544) * C990 - (C34864 * C986 + C34865 * C989) +
             (C33545 + C33546) * C987 - (C35878 + C35877) * C991 -
             (C35880 + C35879) * C988) *
                C25568 +
            ((C33547 + C33548) * C990 - (C32017 * C986 + C32018 * C989) +
             (C33549 + C33550) * C987 -
             (C31775 * C3676 + C51361 * C3681 + C31774 * C1148 +
              C31772 * C1154) *
                 C991 -
             (C31775 * C3682 + C51361 * C3685 + C31774 * C1155 +
              C31772 * C1160) *
                 C988) *
                C51169) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C51466 +
           (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
            C34878 * C51169) *
               C51337) *
              C737 -
          ((C35301 * C51169 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C25568) *
               C51337 +
           (C34879 * C51169 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
               C51466) *
              C738 +
          ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C25568 +
            C35302 * C51169) *
               C51466 +
           (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C25568 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
               C51337) *
              C739 -
          ((((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51169 +
            ((C31775 * C8891 + C51361 * C8894 + C31774 * C3025 +
              C31772 * C3029) *
                 C51250 +
             (C31775 * C8888 + C51361 * C8890 + C31774 * C3020 +
              C31772 * C3026) *
                 C118) *
                C25568) *
               C51337 +
           (((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51169 +
            ((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C25568) *
               C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C51466 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
             C34878 * C51169) *
                C51337) *
               C51452 -
           ((((C32378 + C32377) * C51250 + (C32376 + C32375) * C118) * C51169 +
             ((C31775 * C873 + C51361 * C884 + C31774 * C633 + C31772 * C642) *
                  C51250 +
              (C31775 * C860 + C51361 * C872 + C31774 * C627 + C31772 * C632) *
                  C118) *
                 C25568) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
                C51466) *
               C51236) *
              C291 +
          (((C34878 * C25568 + C34880 * C51169) * C51466 +
            (((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C25568 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C32021 * C51169 + C34879 * C25568) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
                C51466) *
               C51452) *
              C292 +
          (((C31833 * C25568 +
             ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
                C51466 +
            (C34880 * C25568 +
             ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
                C51337) *
               C51452 -
           ((((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                  C51250 +
              (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                  C118) *
                 C51169 +
             ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C25568) *
                C51337 +
            (((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51169 +
             C32021 * C25568) *
                C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C986 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C987 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C988) *
                C25568 +
            ((C31809 + C31810) * C989 + (C31811 + C31812) * C986 -
             (C32194 + C32195) * C990 - (C32196 + C32197) * C987 +
             (C32789 + C32790) * C991 + (C32791 + C32792) * C988) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C989 + (C34870 + C34871) * C986 -
             (C35663 + C35664) * C990 - (C35665 + C35666) * C987 +
             (C36083 + C36084) * C991 + (C36085 + C36086) * C988) *
                C25568 +
            (C34862 * C989 + C34863 * C986 - (C33544 + C33543) * C990 -
             (C33546 + C33545) * C987 + (C35877 + C35878) * C991 +
             (C35879 + C35880) * C988) *
                C51169) *
               C51337) *
              C51452 +
          ((((C35664 + C35663) * C990 -
             ((C34871 + C34870) * C986 + (C34869 + C34868) * C989) +
             (C35666 + C35665) * C987 - (C36084 + C36083) * C991 -
             (C36086 + C36085) * C988) *
                C25568 +
            ((C33543 + C33544) * C990 - (C34864 * C986 + C34865 * C989) +
             (C33545 + C33546) * C987 - (C35878 + C35877) * C991 -
             (C35880 + C35879) * C988) *
                C51169) *
               C51466 +
           (((C35667 + C35668) * C990 -
             ((C35291 + C35292) * C986 + (C35293 + C35294) * C989) +
             (C35669 + C35670) * C987 -
             (C31775 * C9347 + C51361 * C9349 + C31774 * C3552 +
              C31772 * C3555) *
                 C991 -
             (C31775 * C9350 + C51361 * C9353 + C31774 * C3556 +
              C31772 * C3561) *
                 C988) *
                C25568 +
            ((C35671 + C35672) * C990 - (C35269 * C986 + C35270 * C989) +
             (C35673 + C35674) * C987 -
             (C31775 * C9348 + C51361 * C9351 + C31774 * C3553 +
              C31772 * C3557) *
                 C991 -
             (C31775 * C9352 + C51361 * C9354 + C31774 * C3558 +
              C31772 * C3562) *
                 C988) *
                C51169) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C25568 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C25568 +
            (C34862 * C452 + C34863 * C51454 - (C33544 + C33543) * C453 -
             (C33546 + C33545) * C51262) *
                C51169) *
               C51337) *
              C622 +
          ((((C35664 + C35663) * C453 -
             ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
             (C35666 + C35665) * C51262) *
                C25568 +
            ((C33543 + C33544) * C453 - (C34864 * C51454 + C34865 * C452) +
             (C33545 + C33546) * C51262) *
                C51169) *
               C51466 +
           (((C35667 + C35668) * C453 -
             ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
             (C35669 + C35670) * C51262) *
                C25568 +
            ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
             (C35673 + C35674) * C51262) *
                C51169) *
               C51337) *
              C623 +
          ((((C35294 + C35293) * C452 + (C35292 + C35291) * C51454 -
             (C35668 + C35667) * C453 - (C35670 + C35669) * C51262) *
                C25568 +
            (C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
             (C35674 + C35673) * C51262) *
                C51169) *
               C51466 +
           (((C35441 + C35442) * C452 + (C35443 + C35444) * C51454 -
             (C31775 * C9229 + C51361 * C9231 + C31774 * C3184 +
              C31772 * C3187) *
                 C453 -
             (C31775 * C9232 + C51361 * C9235 + C31774 * C3188 +
              C31772 * C3193) *
                 C51262) *
                C25568 +
            ((C35297 + C35298) * C452 + (C35299 + C35300) * C51454 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C453 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C25568 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C31775 * C1146 + C51361 * C1150 + C31774 * C856 + C31772 * C864) *
                 C453 -
             (C31775 * C1151 + C51361 * C1158 + C31774 * C865 + C31772 * C880) *
                 C51262) *
                C25568 +
            (C34862 * C452 + C34863 * C51454 - (C33544 + C33543) * C453 -
             (C33546 + C33545) * C51262) *
                C51169) *
               C51337) *
              C51220 * C291 +
          ((((C32195 + C32194) * C453 -
             ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
             (C32197 + C32196) * C51262) *
                C25568 +
            ((C32200 + C32199) * C453 -
             ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
             (C32202 + C32201) * C51262) *
                C51169) *
               C51466 +
           (((C33543 + C33544) * C453 - (C34864 * C51454 + C34865 * C452) +
             (C33545 + C33546) * C51262) *
                C25568 +
            ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
             (C33549 + C33550) * C51262) *
                C51169) *
               C51337) *
              C51220 * C292 +
          ((C32212 * C25568 +
            ((C31820 + C31819) * C452 + (C31818 + C31817) * C51454 -
             (C32204 + C32203) * C453 - (C32206 + C32205) * C51262) *
                C51169) *
               C51466 +
           ((C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
             (C33550 + C33549) * C51262) *
                C25568 +
            ((C32013 + C32014) * C452 + (C32015 + C32016) * C51454 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C453 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                C1232 +
            (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                C1228 -
            (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                C1233 -
            (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                C1229 +
            (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                C1234 +
            (C31774 * C998 + C31772 * C1007 + C31775 * C1241 + C51361 * C1248) *
                C1230 -
            (C31775 * C6565 + C51361 * C6568 + C31774 * C1236 +
             C31772 * C1240) *
                C1235 -
            (C31775 * C6569 + C51361 * C6574 + C31774 * C1241 +
             C31772 * C1248) *
                C1231) *
               C25568 +
           ((C31809 + C31810) * C1232 + (C31811 + C31812) * C1228 -
            (C32194 + C32195) * C1233 - (C32196 + C32197) * C1229 +
            (C32789 + C32790) * C1234 + (C32791 + C32792) * C1230 -
            (C31775 * C6566 + C51361 * C6570 + C31774 * C1237 +
             C31772 * C1242) *
                C1235 -
            (C31775 * C6571 + C51361 * C6575 + C31774 * C1243 +
             C31772 * C1249) *
                C1231) *
               C51169) *
              C51466 +
          (((C34868 + C34869) * C1232 + (C34870 + C34871) * C1228 -
            (C35663 + C35664) * C1233 - (C35665 + C35666) * C1229 +
            (C36083 + C36084) * C1234 + (C36085 + C36086) * C1230 -
            (C31775 * C14009 + C51361 * C14011 + C31774 * C3674 +
             C31772 * C3677) *
                C1235 -
            (C31775 * C14012 + C51361 * C14015 + C31774 * C3678 +
             C31772 * C3683) *
                C1231) *
               C25568 +
           (C34862 * C1232 + C34863 * C1228 - (C33544 + C33543) * C1233 -
            (C33546 + C33545) * C1229 + (C35877 + C35878) * C1234 +
            (C35879 + C35880) * C1230 -
            (C31775 * C16735 + C51361 * C16736 + C31774 * C3675 +
             C31772 * C3679) *
                C1235 -
            (C31775 * C16737 + C51361 * C16738 + C31774 * C3680 +
             C31772 * C3684) *
                C1231) *
               C51169) *
              C51337) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1722 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C1720 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1723 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C25568 +
            ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
             (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
             (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                C25568 +
            (C34862 * C1722 + C34863 * C1720 - C36865 * C1723 -
             C36866 * C51262) *
                C51169) *
               C51337) *
              C51220 * C51497 +
          ((((C32195 + C32194) * C1723 -
             ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
             (C32197 + C32196) * C51262) *
                C25568 +
            ((C32200 + C32199) * C1723 -
             ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
             (C32202 + C32201) * C51262) *
                C51169) *
               C51466 +
           ((C36867 * C1723 - (C34864 * C1720 + C34865 * C1722) +
             C36870 * C51262) *
                C25568 +
            ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
             (C33549 + C33550) * C51262) *
                C51169) *
               C51337) *
              C51220 * C51483 +
          ((C33703 * C25568 +
            ((C31820 + C31819) * C1722 + (C31818 + C31817) * C1720 -
             (C32204 + C32203) * C1723 - (C32206 + C32205) * C51262) *
                C51169) *
               C51466 +
           ((C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
             (C33550 + C33549) * C51262) *
                C25568 +
            ((C32013 + C32014) * C1722 + (C32015 + C32016) * C1720 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C1723 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C1722 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C1720 -
              (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                  C1723 -
              (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                  C51262) *
                 C25568 +
             ((C31809 + C31810) * C1722 + (C31811 + C31812) * C1720 -
              (C32194 + C32195) * C1723 - (C32196 + C32197) * C51262) *
                 C51169) *
                C51466 +
            (((C34868 + C34869) * C1722 + (C34870 + C34871) * C1720 -
              (C35663 + C35664) * C1723 - (C35665 + C35666) * C51262) *
                 C25568 +
             C37345 * C51169) *
                C51337) *
               C51452 +
           ((((C35664 + C35663) * C1723 -
              ((C34871 + C34870) * C1720 + (C34869 + C34868) * C1722) +
              (C35666 + C35665) * C51262) *
                 C25568 +
             C37346 * C51169) *
                C51466 +
            (((C35667 + C35668) * C1723 -
              ((C35291 + C35292) * C1720 + (C35293 + C35294) * C1722) +
              (C35669 + C35670) * C51262) *
                 C25568 +
             ((C35671 + C35672) * C1723 - (C35269 * C1720 + C35270 * C1722) +
              (C35673 + C35674) * C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C1456 +
          (((((C32195 + C32194) * C1723 -
              ((C31812 + C31811) * C1720 + (C31810 + C31809) * C1722) +
              (C32197 + C32196) * C51262) *
                 C25568 +
             ((C32200 + C32199) * C1723 -
              ((C31816 + C31815) * C1720 + (C31814 + C31813) * C1722) +
              (C32202 + C32201) * C51262) *
                 C51169) *
                C51466 +
            (C37346 * C25568 +
             ((C33547 + C33548) * C1723 - (C32017 * C1720 + C32018 * C1722) +
              (C33549 + C33550) * C51262) *
                 C51169) *
                C51337) *
               C51452 +
           ((C37345 * C25568 +
             (C34866 * C1722 + C34867 * C1720 - (C33548 + C33547) * C1723 -
              (C33550 + C33549) * C51262) *
                 C51169) *
                C51466 +
            ((C35279 * C1722 + C35280 * C1720 - (C35672 + C35671) * C1723 -
              (C35674 + C35673) * C51262) *
                 C25568 +
             ((C32379 + C32380) * C1722 + (C32381 + C32382) * C1720 -
              (C31775 * C3554 + C51361 * C3559 + C31774 * C862 +
               C31772 * C876) *
                  C1723 -
              (C31775 * C3560 + C51361 * C3563 + C31774 * C877 +
               C31772 * C886) *
                  C51262) *
                 C51169) *
                C51337) *
               C51236) *
              C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C1989 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51499 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C1990 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51489 +
             (C31774 * C992 + C31772 * C997 + C31775 * C1236 + C51361 * C1240) *
                 C1991 +
             (C31774 * C998 + C31772 * C1007 + C31775 * C1241 +
              C51361 * C1248) *
                 C1988) *
                C25568 +
            ((C31809 + C31810) * C1989 + (C31811 + C31812) * C51499 -
             (C32194 + C32195) * C1990 - (C32196 + C32197) * C51489 +
             (C32789 + C32790) * C1991 + (C32791 + C32792) * C1988) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C1989 + (C34870 + C34871) * C51499 -
             (C35663 + C35664) * C1990 - (C35665 + C35666) * C51489 +
             (C36083 + C36084) * C1991 + (C36085 + C36086) * C1988) *
                C25568 +
            (C34862 * C1989 + C34863 * C51499 - C36865 * C1990 -
             C36866 * C51489 + (C35877 + C35878) * C1991 +
             (C35879 + C35880) * C1988) *
                C51169) *
               C51337) *
              C51220 * C1456 +
          ((((C32195 + C32194) * C1990 -
             ((C31812 + C31811) * C51499 + (C31810 + C31809) * C1989) +
             (C32197 + C32196) * C51489 - (C32790 + C32789) * C1991 -
             (C32792 + C32791) * C1988) *
                C25568 +
            ((C32200 + C32199) * C1990 -
             ((C31816 + C31815) * C51499 + (C31814 + C31813) * C1989) +
             (C32202 + C32201) * C51489 - (C32794 + C32793) * C1991 -
             (C32796 + C32795) * C1988) *
                C51169) *
               C51466 +
           ((C36867 * C1990 - (C34864 * C51499 + C34865 * C1989) +
             C36870 * C51489 - (C35878 + C35877) * C1991 -
             (C35880 + C35879) * C1988) *
                C25568 +
            ((C33547 + C33548) * C1990 - (C32017 * C51499 + C32018 * C1989) +
             (C33549 + C33550) * C51489 -
             (C31775 * C3676 + C51361 * C3681 + C31774 * C1148 +
              C31772 * C1154) *
                 C1991 -
             (C31775 * C3682 + C51361 * C3685 + C31774 * C1155 +
              C31772 * C1160) *
                 C1988) *
                C51169) *
               C51337) *
              C51220 * C51193)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C51466 +
           (((C31774 * C297 + C31772 * C307 + C31775 * C856 + C51361 * C864) *
                 C118 +
             (C31774 * C306 + C31772 * C315 + C31775 * C865 + C51361 * C880) *
                 C51250) *
                C25568 +
            ((C32012 + C32011) * C118 + (C32010 + C32009) * C51250) * C51169) *
               C51337) *
              C51220 * C113 -
          ((C32021 * C51169 +
            ((C32009 + C32010) * C51250 + (C32011 + C32012) * C118) * C25568) *
               C51337 +
           (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
            ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
               C51466) *
              C51220 * C114 +
          ((C31833 * C25568 +
            ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
               C51466 +
           (((C32008 + C32007) * C118 + (C32006 + C32005) * C51250) * C25568 +
            ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
               C51337) *
              C51220 * C115 -
          ((((C31775 * C1590 + C51361 * C1591 + C31774 * C309 + C31772 * C316) *
                 C51250 +
             (C31775 * C1588 + C51361 * C1589 + C31774 * C298 + C31772 * C308) *
                 C118) *
                C51169 +
            ((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C25568) *
               C51337 +
           (((C31824 + C31823) * C51250 + (C31822 + C31821) * C118) * C51169 +
            C31834 * C25568) *
               C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C51466 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
             C34878 * C51169) *
                C51337) *
               C622 -
           ((C35301 * C51169 +
             ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C25568) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
                C51466) *
               C623 +
           ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C25568 +
             C35302 * C51169) *
                C51466 +
            (((C31774 * C745 + C31772 * C753 + C31775 * C3184 +
               C51361 * C3187) *
                  C118 +
              (C31774 * C752 + C31772 * C757 + C31775 * C3188 +
               C51361 * C3193) *
                  C51250) *
                 C25568 +
             ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
                C51337) *
               C624) *
              C51445 +
          (((C34878 * C25568 + C34880 * C51169) * C51466 +
            (C35302 * C25568 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C623 -
           ((C32021 * C51169 + C34879 * C25568) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
                C51466) *
               C622 -
           ((((C31775 * C3192 + C51361 * C3195 + C31774 * C748 +
               C31772 * C755) *
                  C51250 +
              (C31775 * C3186 + C51361 * C3191 + C31774 * C743 +
               C31772 * C749) *
                  C118) *
                 C51169 +
             ((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C25568) *
                C51337 +
            (((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C51169 +
             C35301 * C25568) *
                C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                  C118 +
              (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                  C51250) *
                 C25568 +
             ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
                C51466 +
            (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
             C34878 * C51169) *
                C51337) *
               C51452 -
           ((((C32378 + C32377) * C51250 + (C32376 + C32375) * C118) * C51169 +
             ((C31775 * C873 + C51361 * C884 + C31774 * C633 + C31772 * C642) *
                  C51250 +
              (C31775 * C860 + C51361 * C872 + C31774 * C627 + C31772 * C632) *
                  C118) *
                 C25568) *
                C51337 +
            (C34879 * C51169 +
             ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
                C51466) *
               C51236) *
              C291 +
          (((C34878 * C25568 + C34880 * C51169) * C51466 +
            (((C32375 + C32376) * C118 + (C32377 + C32378) * C51250) * C25568 +
             ((C32379 + C32380) * C118 + (C32381 + C32382) * C51250) * C51169) *
                C51337) *
               C51236 -
           ((C32021 * C51169 + C34879 * C25568) * C51337 +
            (((C31816 + C31815) * C51250 + (C31814 + C31813) * C118) * C51169 +
             ((C31812 + C31811) * C51250 + (C31810 + C31809) * C118) * C25568) *
                C51466) *
               C51452) *
              C292 +
          (((C31833 * C25568 +
             ((C31820 + C31819) * C118 + (C31818 + C31817) * C51250) * C51169) *
                C51466 +
            (C34880 * C25568 +
             ((C32013 + C32014) * C118 + (C32015 + C32016) * C51250) * C51169) *
                C51337) *
               C51452 -
           ((((C31775 * C879 + C51361 * C887 + C31774 * C639 + C31772 * C645) *
                  C51250 +
              (C31775 * C863 + C51361 * C878 + C31774 * C630 + C31772 * C638) *
                  C118) *
                 C51169 +
             ((C32382 + C32381) * C51250 + (C32380 + C32379) * C118) * C25568) *
                C51337 +
            (((C32016 + C32015) * C51250 + (C32014 + C32013) * C118) * C51169 +
             C32021 * C25568) *
                C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C118 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51250) *
                C25568 +
            ((C31809 + C31810) * C118 + (C31811 + C31812) * C51250) * C51169) *
               C51466 +
           (((C34868 + C34869) * C118 + (C34870 + C34871) * C51250) * C25568 +
            C34878 * C51169) *
               C51337) *
              C737 -
          ((C35301 * C51169 +
            ((C35291 + C35292) * C51250 + (C35293 + C35294) * C118) * C25568) *
               C51337 +
           (C34879 * C51169 +
            ((C34871 + C34870) * C51250 + (C34869 + C34868) * C118) * C25568) *
               C51466) *
              C738 +
          ((((C35294 + C35293) * C118 + (C35292 + C35291) * C51250) * C25568 +
            C35302 * C51169) *
               C51466 +
           (((C35441 + C35442) * C118 + (C35443 + C35444) * C51250) * C25568 +
            ((C35297 + C35298) * C118 + (C35299 + C35300) * C51250) * C51169) *
               C51337) *
              C739 -
          ((((C31775 * C8893 + C51361 * C8895 + C31774 * C3023 +
              C31772 * C3028) *
                 C51250 +
             (C31775 * C8889 + C51361 * C8892 + C31774 * C3019 +
              C31772 * C3024) *
                 C118) *
                C51169 +
            ((C31775 * C8891 + C51361 * C8894 + C31774 * C3025 +
              C31772 * C3029) *
                 C51250 +
             (C31775 * C8888 + C51361 * C8890 + C31774 * C3020 +
              C31772 * C3026) *
                 C118) *
                C25568) *
               C51337 +
           (((C35300 + C35299) * C51250 + (C35298 + C35297) * C118) * C51169 +
            ((C35444 + C35443) * C51250 + (C35442 + C35441) * C118) * C25568) *
               C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C25568 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C31775 * C1146 + C51361 * C1150 + C31774 * C856 + C31772 * C864) *
                 C453 -
             (C31775 * C1151 + C51361 * C1158 + C31774 * C865 + C31772 * C880) *
                 C51262) *
                C25568 +
            (C34862 * C452 + C34863 * C51454 - (C33544 + C33543) * C453 -
             (C33546 + C33545) * C51262) *
                C51169) *
               C51337) *
              C51220 * C291 +
          ((((C32195 + C32194) * C453 -
             ((C31812 + C31811) * C51454 + (C31810 + C31809) * C452) +
             (C32197 + C32196) * C51262) *
                C25568 +
            ((C32200 + C32199) * C453 -
             ((C31816 + C31815) * C51454 + (C31814 + C31813) * C452) +
             (C32202 + C32201) * C51262) *
                C51169) *
               C51466 +
           (((C33543 + C33544) * C453 - (C34864 * C51454 + C34865 * C452) +
             (C33545 + C33546) * C51262) *
                C25568 +
            ((C33547 + C33548) * C453 - (C32017 * C51454 + C32018 * C452) +
             (C33549 + C33550) * C51262) *
                C51169) *
               C51337) *
              C51220 * C292 +
          ((C32212 * C25568 +
            ((C31820 + C31819) * C452 + (C31818 + C31817) * C51454 -
             (C32204 + C32203) * C453 - (C32206 + C32205) * C51262) *
                C51169) *
               C51466 +
           ((C34866 * C452 + C34867 * C51454 - (C33548 + C33547) * C453 -
             (C33550 + C33549) * C51262) *
                C25568 +
            ((C32013 + C32014) * C452 + (C32015 + C32016) * C51454 -
             (C31775 * C1149 + C51361 * C1156 + C31774 * C859 + C31772 * C870) *
                 C453 -
             (C31775 * C1157 + C51361 * C1161 + C31774 * C871 + C31772 * C883) *
                 C51262) *
                C51169) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31774 * C119 + C31772 * C126 + C31775 * C454 + C51361 * C460) *
                 C452 +
             (C31774 * C127 + C31772 * C140 + C31775 * C461 + C51361 * C472) *
                 C51454 -
             (C31775 * C992 + C51361 * C997 + C31774 * C454 + C31772 * C460) *
                 C453 -
             (C31775 * C998 + C51361 * C1007 + C31774 * C461 + C31772 * C472) *
                 C51262) *
                C25568 +
            ((C31809 + C31810) * C452 + (C31811 + C31812) * C51454 -
             (C32194 + C32195) * C453 - (C32196 + C32197) * C51262) *
                C51169) *
               C51466 +
           (((C34868 + C34869) * C452 + (C34870 + C34871) * C51454 -
             (C35663 + C35664) * C453 - (C35665 + C35666) * C51262) *
                C25568 +
            (C34862 * C452 + C34863 * C51454 - (C33544 + C33543) * C453 -
             (C33546 + C33545) * C51262) *
                C51169) *
               C51337) *
              C622 +
          ((((C35664 + C35663) * C453 -
             ((C34871 + C34870) * C51454 + (C34869 + C34868) * C452) +
             (C35666 + C35665) * C51262) *
                C25568 +
            ((C33543 + C33544) * C453 - (C34864 * C51454 + C34865 * C452) +
             (C33545 + C33546) * C51262) *
                C51169) *
               C51466 +
           (((C35667 + C35668) * C453 -
             ((C35291 + C35292) * C51454 + (C35293 + C35294) * C452) +
             (C35669 + C35670) * C51262) *
                C25568 +
            ((C35671 + C35672) * C453 - (C35269 * C51454 + C35270 * C452) +
             (C35673 + C35674) * C51262) *
                C51169) *
               C51337) *
              C623 +
          ((((C35294 + C35293) * C452 + (C35292 + C35291) * C51454 -
             (C35668 + C35667) * C453 - (C35670 + C35669) * C51262) *
                C25568 +
            (C35279 * C452 + C35280 * C51454 - (C35672 + C35671) * C453 -
             (C35674 + C35673) * C51262) *
                C51169) *
               C51466 +
           (((C35441 + C35442) * C452 + (C35443 + C35444) * C51454 -
             (C31775 * C9229 + C51361 * C9231 + C31774 * C3184 +
              C31772 * C3187) *
                 C453 -
             (C31775 * C9232 + C51361 * C9235 + C31774 * C3188 +
              C31772 * C3193) *
                 C51262) *
                C25568 +
            ((C35297 + C35298) * C452 + (C35299 + C35300) * C51454 -
             (C31775 * C9230 + C51361 * C9233 + C31774 * C3185 +
              C31772 * C3189) *
                 C453 -
             (C31775 * C9234 + C51361 * C9236 + C31774 * C3190 +
              C31772 * C3194) *
                 C51262) *
                C51169) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C118 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51250) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C118 +
                      (C38330 + C38331 + C38332) * C51250) *
                         C51169) *
                        C51323 * C1350 -
                    (((C38515 + C38516 + C38517) * C51250 +
                      (C38518 + C38519 + C38520) * C118) *
                         C51169 +
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51250 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C118) *
                         C25568) *
                        C51323 * C51236) *
                       C51497 +
                   ((((C38520 + C38519 + C38518) * C118 +
                      (C38517 + C38516 + C38515) * C51250) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C118 +
                      (C38524 + C38525 + C38526) * C51250) *
                         C51169) *
                        C51323 * C51236 -
                    (((C38333 + C38334 + C38335) * C51250 +
                      (C38336 + C38337 + C38338) * C118) *
                         C51169 +
                     ((C38332 + C38331 + C38330) * C51250 +
                      (C38329 + C38328 + C38327) * C118) *
                         C25568) *
                        C51323 * C1350) *
                       C51483 +
                   ((((C38338 + C38337 + C38336) * C118 +
                      (C38335 + C38334 + C38333) * C51250) *
                         C25568 +
                     ((C38339 + C38340 + C38341) * C118 +
                      (C38342 + C38343 + C38344) * C51250) *
                         C51169) *
                        C51323 * C1350 -
                    (((C38289 * C1157 + C38286 * C1161 + C38288 * C871 +
                       C51495 * C883 + C38287 * C300 + C51501 * C312) *
                          C51250 +
                      (C38289 * C1149 + C38286 * C1156 + C38288 * C859 +
                       C51495 * C870 + C38287 * C294 + C51501 * C301) *
                          C118) *
                         C51169 +
                     ((C38526 + C38525 + C38524) * C51250 +
                      (C38523 + C38522 + C38521) * C118) *
                         C25568) *
                        C51323 * C51236) *
                       C1354)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C118 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51250) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C118 +
                      (C38330 + C38331 + C38332) * C51250) *
                         C51169) *
                        C51323 * C51498 -
                    (((C38515 + C38516 + C38517) * C51250 +
                      (C38518 + C38519 + C38520) * C118) *
                         C51169 +
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51250 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C118) *
                         C25568) *
                        C51323 * C51486 +
                    (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                       C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                          C118 +
                      (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                       C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                          C51250) *
                         C25568 +
                     ((C38867 + C38868 + C38869) * C118 +
                      (C38870 + C38871 + C38872) * C51250) *
                         C51169) *
                        C51323 * C1455) *
                       C1456 +
                   ((((C38520 + C38519 + C38518) * C118 +
                      (C38517 + C38516 + C38515) * C51250) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C118 +
                      (C38524 + C38525 + C38526) * C51250) *
                         C51169) *
                        C51323 * C51486 -
                    (((C38333 + C38334 + C38335) * C51250 +
                      (C38336 + C38337 + C38338) * C118) *
                         C51169 +
                     ((C38332 + C38331 + C38330) * C51250 +
                      (C38329 + C38328 + C38327) * C118) *
                         C25568) *
                        C51323 * C51498 -
                    (((C38289 * C3560 + C38286 * C3563 + C38288 * C877 +
                       C51495 * C886 + C38287 * C637 + C51501 * C644) *
                          C51250 +
                      (C38289 * C3554 + C38286 * C3559 + C38288 * C862 +
                       C51495 * C876 + C38287 * C629 + C51501 * C636) *
                          C118) *
                         C51169 +
                     ((C38872 + C38871 + C38870) * C51250 +
                      (C38869 + C38868 + C38867) * C118) *
                         C25568) *
                        C51323 * C1455) *
                       C51193)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C452 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51454 -
                      (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                       C51495 * C997 + C38287 * C454 + C51501 * C460) *
                          C453 -
                      (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                       C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                          C51262) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C452 +
                      (C38330 + C38331 + C38332) * C51454 -
                      (C38697 + C38698 + C38699) * C453 -
                      (C38700 + C38701 + C38702) * C51262) *
                         C51169) *
                        C51323 * C1350 +
                    (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                       C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                          C453 -
                      ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                        C51495 * C880 + C38287 * C306 + C51501 * C315) *
                           C51454 +
                       (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                        C51495 * C864 + C38287 * C297 + C51501 * C307) *
                           C452) +
                      (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                       C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                          C51262) *
                         C25568 +
                     ((C40023 + C40024 + C40025) * C453 -
                      ((C38515 + C38516 + C38517) * C51454 +
                       (C38518 + C38519 + C38520) * C452) +
                      (C40026 + C40027 + C40028) * C51262) *
                         C51169) *
                        C51323 * C51236) *
                       C1456 +
                   ((((C38699 + C38698 + C38697) * C453 -
                      ((C38332 + C38331 + C38330) * C51454 +
                       (C38329 + C38328 + C38327) * C452) +
                      (C38702 + C38701 + C38700) * C51262) *
                         C25568 +
                     ((C38703 + C38704 + C38705) * C453 -
                      ((C38333 + C38334 + C38335) * C51454 +
                       (C38336 + C38337 + C38338) * C452) +
                      (C38706 + C38707 + C38708) * C51262) *
                         C51169) *
                        C51323 * C1350 +
                    (((C38520 + C38519 + C38518) * C452 +
                      (C38517 + C38516 + C38515) * C51454 -
                      (C40025 + C40024 + C40023) * C453 -
                      (C40028 + C40027 + C40026) * C51262) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C452 +
                      (C38524 + C38525 + C38526) * C51454 -
                      (C38289 * C3676 + C38286 * C3681 + C38288 * C1148 +
                       C51495 * C1154 + C38287 * C858 + C51501 * C868) *
                          C453 -
                      (C38289 * C3682 + C38286 * C3685 + C38288 * C1155 +
                       C51495 * C1160 + C38287 * C869 + C51501 * C882) *
                          C51262) *
                         C51169) *
                        C51323 * C51236) *
                       C51193)) /
                 (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C1722 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C1720 -
                      (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                       C51495 * C997 + C38287 * C454 + C51501 * C460) *
                          C1723 -
                      (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                       C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                          C51262) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C1722 +
                      (C38330 + C38331 + C38332) * C1720 -
                      (C38697 + C38698 + C38699) * C1723 -
                      (C38700 + C38701 + C38702) * C51262) *
                         C51169) *
                        C51323 * C1350 +
                    (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                       C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                          C1723 -
                      ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                        C51495 * C880 + C38287 * C306 + C51501 * C315) *
                           C1720 +
                       (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                        C51495 * C864 + C38287 * C297 + C51501 * C307) *
                           C1722) +
                      (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                       C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                          C51262) *
                         C25568 +
                     ((C40023 + C40024 + C40025) * C1723 -
                      ((C38515 + C38516 + C38517) * C1720 +
                       (C38518 + C38519 + C38520) * C1722) +
                      (C40026 + C40027 + C40028) * C51262) *
                         C51169) *
                        C51323 * C51236) *
                       C51445 +
                   ((((C38699 + C38698 + C38697) * C1723 -
                      ((C38332 + C38331 + C38330) * C1720 +
                       (C38329 + C38328 + C38327) * C1722) +
                      (C38702 + C38701 + C38700) * C51262) *
                         C25568 +
                     ((C38703 + C38704 + C38705) * C1723 -
                      ((C38333 + C38334 + C38335) * C1720 +
                       (C38336 + C38337 + C38338) * C1722) +
                      (C38706 + C38707 + C38708) * C51262) *
                         C51169) *
                        C51323 * C1350 +
                    (((C38520 + C38519 + C38518) * C1722 +
                      (C38517 + C38516 + C38515) * C1720 -
                      (C40025 + C40024 + C40023) * C1723 -
                      (C40028 + C40027 + C40026) * C51262) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C1722 +
                      (C38524 + C38525 + C38526) * C1720 -
                      (C38289 * C3676 + C38286 * C3681 + C38288 * C1148 +
                       C51495 * C1154 + C38287 * C858 + C51501 * C868) *
                          C1723 -
                      (C38289 * C3682 + C38286 * C3685 + C38288 * C1155 +
                       C51495 * C1160 + C38287 * C869 + C51501 * C882) *
                          C51262) *
                         C51169) *
                        C51323 * C51236) *
                       C51193)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C1722 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C1720 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C1723 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C1722 +
                     (C38330 + C38331 + C38332) * C1720 -
                     (C38697 + C38698 + C38699) * C1723 -
                     (C38700 + C38701 + C38702) * C51262) *
                        C51169) *
                       C51323 * C51498 +
                   (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                      C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                         C1723 -
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C1720 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C1722) +
                     (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                      C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                         C51262) *
                        C25568 +
                    ((C40023 + C40024 + C40025) * C1723 -
                     ((C38515 + C38516 + C38517) * C1720 +
                      (C38518 + C38519 + C38520) * C1722) +
                     (C40026 + C40027 + C40028) * C51262) *
                        C51169) *
                       C51323 * C51486 +
                   (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                      C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                         C1722 +
                     (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                      C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                         C1720 -
                     (C38289 * C9347 + C38286 * C9349 + C38288 * C3552 +
                      C51495 * C3555 + C38287 * C860 + C51501 * C872) *
                         C1723 -
                     (C38289 * C9350 + C38286 * C9353 + C38288 * C3556 +
                      C51495 * C3561 + C38287 * C873 + C51501 * C884) *
                         C51262) *
                        C25568 +
                    ((C38867 + C38868 + C38869) * C1722 +
                     (C38870 + C38871 + C38872) * C1720 -
                     (C38289 * C9348 + C38286 * C9351 + C38288 * C3553 +
                      C51495 * C3557 + C38287 * C861 + C51501 * C874) *
                         C1723 -
                     (C38289 * C9352 + C38286 * C9354 + C38288 * C3558 +
                      C51495 * C3562 + C38287 * C875 + C51501 * C885) *
                         C51262) *
                        C51169) *
                       C51323 * C1455) *
                  C51188) /
                 (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C1989 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51499 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C1990 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51489 +
                     (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                      C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                         C1991 +
                     (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                      C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                         C1988) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C1989 +
                     (C38330 + C38331 + C38332) * C51499 -
                     (C38697 + C38698 + C38699) * C1990 -
                     (C38700 + C38701 + C38702) * C51489 +
                     (C39275 + C39276 + C39277) * C1991 +
                     (C39278 + C39279 + C39280) * C1988) *
                        C51169) *
                       C51323 * C1350 +
                   (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                      C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                         C1990 -
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51499 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C1989) +
                     (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                      C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                         C51489 -
                     (C38289 * C14009 + C38286 * C14011 + C38288 * C3674 +
                      C51495 * C3677 + C38287 * C1146 + C51501 * C1150) *
                         C1991 -
                     (C38289 * C14012 + C38286 * C14015 + C38288 * C3678 +
                      C51495 * C3683 + C38287 * C1151 + C51501 * C1158) *
                         C1988) *
                        C25568 +
                    ((C40023 + C40024 + C40025) * C1990 -
                     ((C38515 + C38516 + C38517) * C51499 +
                      (C38518 + C38519 + C38520) * C1989) +
                     (C40026 + C40027 + C40028) * C51489 -
                     (C38289 * C16735 + C38286 * C16736 + C38288 * C3675 +
                      C51495 * C3679 + C38287 * C1147 + C51501 * C1152) *
                         C1991 -
                     (C38289 * C16737 + C38286 * C16738 + C38288 * C3680 +
                      C51495 * C3684 + C38287 * C1153 + C51501 * C1159) *
                         C1988) *
                        C51169) *
                       C51323 * C51236) *
                  C51188) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C118 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51250) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C118 +
                      (C38330 + C38331 + C38332) * C51250) *
                         C51169) *
                        C51323 * C622 -
                    (((C38515 + C38516 + C38517) * C51250 +
                      (C38518 + C38519 + C38520) * C118) *
                         C51169 +
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51250 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C118) *
                         C25568) *
                        C51323 * C623 +
                    (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                       C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                          C118 +
                      (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                       C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                          C51250) *
                         C25568 +
                     ((C38867 + C38868 + C38869) * C118 +
                      (C38870 + C38871 + C38872) * C51250) *
                         C51169) *
                        C51323 * C624) *
                       C51445 +
                   ((((C38520 + C38519 + C38518) * C118 +
                      (C38517 + C38516 + C38515) * C51250) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C118 +
                      (C38524 + C38525 + C38526) * C51250) *
                         C51169) *
                        C51323 * C623 -
                    (((C38333 + C38334 + C38335) * C51250 +
                      (C38336 + C38337 + C38338) * C118) *
                         C51169 +
                     ((C38332 + C38331 + C38330) * C51250 +
                      (C38329 + C38328 + C38327) * C118) *
                         C25568) *
                        C51323 * C622 -
                    (((C38289 * C3560 + C38286 * C3563 + C38288 * C877 +
                       C51495 * C886 + C38287 * C637 + C51501 * C644) *
                          C51250 +
                      (C38289 * C3554 + C38286 * C3559 + C38288 * C862 +
                       C51495 * C876 + C38287 * C629 + C51501 * C636) *
                          C118) *
                         C51169 +
                     ((C38872 + C38871 + C38870) * C51250 +
                      (C38869 + C38868 + C38867) * C118) *
                         C25568) *
                        C51323 * C624) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C118 +
                     (C38330 + C38331 + C38332) * C51250) *
                        C51169) *
                       C51323 * C51220 * C113 -
                   (((C38333 + C38334 + C38335) * C51250 +
                     (C38336 + C38337 + C38338) * C118) *
                        C51169 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C25568) *
                       C51323 * C51220 * C114 +
                   (((C38338 + C38337 + C38336) * C118 +
                     (C38335 + C38334 + C38333) * C51250) *
                        C25568 +
                    ((C38339 + C38340 + C38341) * C118 +
                     (C38342 + C38343 + C38344) * C51250) *
                        C51169) *
                       C51323 * C51220 * C115 -
                   (((C38289 * C1006 + C38286 * C1011 + C38288 * C469 +
                      C51495 * C476 + C38287 * C134 + C51501 * C144) *
                         C51250 +
                     (C38289 * C996 + C38286 * C1005 + C38288 * C458 +
                      C51495 * C468 + C38287 * C123 + C51501 * C135) *
                         C118) *
                        C51169 +
                    ((C38344 + C38343 + C38342) * C51250 +
                     (C38341 + C38340 + C38339) * C118) *
                        C25568) *
                       C51323 * C51220 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C989 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C986 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C990 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C987 +
                     (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                      C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                         C991 +
                     (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                      C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                         C988) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C989 +
                     (C38330 + C38331 + C38332) * C986 -
                     (C38697 + C38698 + C38699) * C990 -
                     (C38700 + C38701 + C38702) * C987 +
                     (C39275 + C39276 + C39277) * C991 +
                     (C39278 + C39279 + C39280) * C988) *
                        C51169) *
                       C51323 * C51220 * C51445 +
                   (((C38699 + C38698 + C38697) * C990 -
                     ((C38332 + C38331 + C38330) * C986 +
                      (C38329 + C38328 + C38327) * C989) +
                     (C38702 + C38701 + C38700) * C987 -
                     (C39277 + C39276 + C39275) * C991 -
                     (C39280 + C39279 + C39278) * C988) *
                        C25568 +
                    ((C38703 + C38704 + C38705) * C990 -
                     ((C38333 + C38334 + C38335) * C986 +
                      (C38336 + C38337 + C38338) * C989) +
                     (C38706 + C38707 + C38708) * C987 -
                     (C38289 * C6567 + C38286 * C6572 + C38288 * C1238 +
                      C51495 * C1244 + C38287 * C994 + C51501 * C1001) *
                         C991 -
                     (C38289 * C6573 + C38286 * C6576 + C38288 * C1245 +
                      C51495 * C1250 + C38287 * C1002 + C51501 * C1009) *
                         C988) *
                        C51169) *
                       C51323 * C51220 * C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C118 +
                     (C38330 + C38331 + C38332) * C51250) *
                        C51169) *
                       C51323 * C737 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51169 +
                    ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                      C51495 * C880 + C38287 * C306 + C51501 * C315) *
                         C51250 +
                     (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                      C51495 * C864 + C38287 * C297 + C51501 * C307) *
                         C118) *
                        C25568) *
                       C51323 * C738 +
                   (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                      C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                         C118 +
                     (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                      C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                         C51250) *
                        C25568 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51169) *
                       C51323 * C739 -
                   (((C38289 * C9234 + C38286 * C9236 + C38288 * C3190 +
                      C51495 * C3194 + C38287 * C750 + C51501 * C756) *
                         C51250 +
                     (C38289 * C9230 + C38286 * C9233 + C38288 * C3185 +
                      C51495 * C3189 + C38287 * C744 + C51501 * C751) *
                         C118) *
                        C51169 +
                    ((C38289 * C9232 + C38286 * C9235 + C38288 * C3188 +
                      C51495 * C3193 + C38287 * C752 + C51501 * C757) *
                         C51250 +
                     (C38289 * C9229 + C38286 * C9231 + C38288 * C3184 +
                      C51495 * C3187 + C38287 * C745 + C51501 * C753) *
                         C118) *
                        C25568) *
                       C51323 * C740) *
                  C51188) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C118 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51250) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C118 +
                      (C38330 + C38331 + C38332) * C51250) *
                         C51169) *
                        C51323 * C51452 -
                    (((C38515 + C38516 + C38517) * C51250 +
                      (C38518 + C38519 + C38520) * C118) *
                         C51169 +
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51250 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C118) *
                         C25568) *
                        C51323 * C51236) *
                       C291 +
                   ((((C38520 + C38519 + C38518) * C118 +
                      (C38517 + C38516 + C38515) * C51250) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C118 +
                      (C38524 + C38525 + C38526) * C51250) *
                         C51169) *
                        C51323 * C51236 -
                    (((C38333 + C38334 + C38335) * C51250 +
                      (C38336 + C38337 + C38338) * C118) *
                         C51169 +
                     ((C38332 + C38331 + C38330) * C51250 +
                      (C38329 + C38328 + C38327) * C118) *
                         C25568) *
                        C51323 * C51452) *
                       C292 +
                   ((((C38338 + C38337 + C38336) * C118 +
                      (C38335 + C38334 + C38333) * C51250) *
                         C25568 +
                     ((C38339 + C38340 + C38341) * C118 +
                      (C38342 + C38343 + C38344) * C51250) *
                         C51169) *
                        C51323 * C51452 -
                    (((C38289 * C1157 + C38286 * C1161 + C38288 * C871 +
                       C51495 * C883 + C38287 * C300 + C51501 * C312) *
                          C51250 +
                      (C38289 * C1149 + C38286 * C1156 + C38288 * C859 +
                       C51495 * C870 + C38287 * C294 + C51501 * C301) *
                          C118) *
                         C51169 +
                     ((C38526 + C38525 + C38524) * C51250 +
                      (C38523 + C38522 + C38521) * C118) *
                         C25568) *
                        C51323 * C51236) *
                       C293)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C989 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C986 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C990 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C987 +
                     (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                      C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                         C991 +
                     (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                      C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                         C988) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C989 +
                     (C38330 + C38331 + C38332) * C986 -
                     (C38697 + C38698 + C38699) * C990 -
                     (C38700 + C38701 + C38702) * C987 +
                     (C39275 + C39276 + C39277) * C991 +
                     (C39278 + C39279 + C39280) * C988) *
                        C51169) *
                       C51323 * C51452 +
                   (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                      C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                         C990 -
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C986 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C989) +
                     (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                      C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                         C987 -
                     (C38289 * C14009 + C38286 * C14011 + C38288 * C3674 +
                      C51495 * C3677 + C38287 * C1146 + C51501 * C1150) *
                         C991 -
                     (C38289 * C14012 + C38286 * C14015 + C38288 * C3678 +
                      C51495 * C3683 + C38287 * C1151 + C51501 * C1158) *
                         C988) *
                        C25568 +
                    ((C38287 * C857 + C51501 * C866 + C38288 * C1147 +
                      C51495 * C1152 + C38289 * C3675 + C38286 * C3679) *
                         C990 -
                     ((C38515 + C38516 + C38517) * C986 +
                      (C38518 + C38519 + C38520) * C989) +
                     (C38287 * C867 + C51501 * C881 + C38288 * C1153 +
                      C51495 * C1159 + C38289 * C3680 + C38286 * C3684) *
                         C987 -
                     (C38289 * C16735 + C38286 * C16736 + C38288 * C3675 +
                      C51495 * C3679 + C38287 * C1147 + C51501 * C1152) *
                         C991 -
                     (C38289 * C16737 + C38286 * C16738 + C38288 * C3680 +
                      C51495 * C3684 + C38287 * C1153 + C51501 * C1159) *
                         C988) *
                        C51169) *
                       C51323 * C51236) *
                  C51188) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C452 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51454 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C453 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C452 +
                     (C38330 + C38331 + C38332) * C51454 -
                     (C38697 + C38698 + C38699) * C453 -
                     (C38700 + C38701 + C38702) * C51262) *
                        C51169) *
                       C51323 * C622 +
                   (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                      C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                         C453 -
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51454 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C452) +
                     (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                      C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                         C51262) *
                        C25568 +
                    ((C38287 * C857 + C51501 * C866 + C38288 * C1147 +
                      C51495 * C1152 + C38289 * C3675 + C38286 * C3679) *
                         C453 -
                     ((C38515 + C38516 + C38517) * C51454 +
                      (C38518 + C38519 + C38520) * C452) +
                     (C38287 * C867 + C51501 * C881 + C38288 * C1153 +
                      C51495 * C1159 + C38289 * C3680 + C38286 * C3684) *
                         C51262) *
                        C51169) *
                       C51323 * C623 +
                   (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                      C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                         C452 +
                     (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                      C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                         C51454 -
                     (C38289 * C9347 + C38286 * C9349 + C38288 * C3552 +
                      C51495 * C3555 + C38287 * C860 + C51501 * C872) *
                         C453 -
                     (C38289 * C9350 + C38286 * C9353 + C38288 * C3556 +
                      C51495 * C3561 + C38287 * C873 + C51501 * C884) *
                         C51262) *
                        C25568 +
                    ((C38867 + C38868 + C38869) * C452 +
                     (C38870 + C38871 + C38872) * C51454 -
                     (C38289 * C9348 + C38286 * C9351 + C38288 * C3553 +
                      C51495 * C3557 + C38287 * C861 + C51501 * C874) *
                         C453 -
                     (C38289 * C9352 + C38286 * C9354 + C38288 * C3558 +
                      C51495 * C3562 + C38287 * C875 + C51501 * C885) *
                         C51262) *
                        C51169) *
                       C51323 * C624) *
                  C51188) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C452 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51454 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C453 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C452 +
                     (C38330 + C38331 + C38332) * C51454 -
                     (C38697 + C38698 + C38699) * C453 -
                     (C38700 + C38701 + C38702) * C51262) *
                        C51169) *
                       C51323 * C51220 * C291 +
                   (((C38699 + C38698 + C38697) * C453 -
                     ((C38332 + C38331 + C38330) * C51454 +
                      (C38329 + C38328 + C38327) * C452) +
                     (C38702 + C38701 + C38700) * C51262) *
                        C25568 +
                    ((C38703 + C38704 + C38705) * C453 -
                     ((C38333 + C38334 + C38335) * C51454 +
                      (C38336 + C38337 + C38338) * C452) +
                     (C38706 + C38707 + C38708) * C51262) *
                        C51169) *
                       C51323 * C51220 * C292 +
                   (((C38338 + C38337 + C38336) * C452 +
                     (C38335 + C38334 + C38333) * C51454 -
                     (C38705 + C38704 + C38703) * C453 -
                     (C38708 + C38707 + C38706) * C51262) *
                        C25568 +
                    ((C38339 + C38340 + C38341) * C452 +
                     (C38342 + C38343 + C38344) * C51454 -
                     (C38289 * C1239 + C38286 * C1246 + C38288 * C995 +
                      C51495 * C1003 + C38287 * C457 + C51501 * C466) *
                         C453 -
                     (C38289 * C1247 + C38286 * C1251 + C38288 * C1004 +
                      C51495 * C1010 + C38287 * C467 + C51501 * C475) *
                         C51262) *
                        C51169) *
                       C51323 * C51220 * C293)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                     C51495 * C460 + C38289 * C992 + C38286 * C997) *
                        C1232 +
                    (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                     C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                        C1228 -
                    (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                     C51495 * C997 + C38287 * C454 + C51501 * C460) *
                        C1233 -
                    (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                     C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                        C1229 +
                    (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                     C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                        C1234 +
                    (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                     C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                        C1230 -
                    (C38289 * C16837 + C38286 * C16839 + C38288 * C6565 +
                     C51495 * C6568 + C38287 * C1236 + C51501 * C1240) *
                        C1235 -
                    (C38289 * C16840 + C38286 * C16843 + C38288 * C6569 +
                     C51495 * C6574 + C38287 * C1241 + C51501 * C1248) *
                        C1231) *
                       C25568 +
                   ((C38327 + C38328 + C38329) * C1232 +
                    (C38330 + C38331 + C38332) * C1228 -
                    (C38697 + C38698 + C38699) * C1233 -
                    (C38700 + C38701 + C38702) * C1229 +
                    (C39275 + C39276 + C39277) * C1234 +
                    (C39278 + C39279 + C39280) * C1230 -
                    (C38289 * C16838 + C38286 * C16841 + C38288 * C6566 +
                     C51495 * C6570 + C38287 * C1237 + C51501 * C1242) *
                        C1235 -
                    (C38289 * C16842 + C38286 * C16844 + C38288 * C6571 +
                     C51495 * C6575 + C38287 * C1243 + C51501 * C1249) *
                        C1231) *
                       C51169) *
                  C51323 * C51220 * C51188) /
                     (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C1722 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C1720 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C1723 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C1722 +
                     (C38330 + C38331 + C38332) * C1720 -
                     (C38697 + C38698 + C38699) * C1723 -
                     (C38700 + C38701 + C38702) * C51262) *
                        C51169) *
                       C51323 * C51220 * C51497 +
                   (((C38699 + C38698 + C38697) * C1723 -
                     ((C38332 + C38331 + C38330) * C1720 +
                      (C38329 + C38328 + C38327) * C1722) +
                     (C38702 + C38701 + C38700) * C51262) *
                        C25568 +
                    ((C38703 + C38704 + C38705) * C1723 -
                     ((C38333 + C38334 + C38335) * C1720 +
                      (C38336 + C38337 + C38338) * C1722) +
                     (C38706 + C38707 + C38708) * C51262) *
                        C51169) *
                       C51323 * C51220 * C51483 +
                   (((C38338 + C38337 + C38336) * C1722 +
                     (C38335 + C38334 + C38333) * C1720 -
                     (C38705 + C38704 + C38703) * C1723 -
                     (C38708 + C38707 + C38706) * C51262) *
                        C25568 +
                    ((C38339 + C38340 + C38341) * C1722 +
                     (C38342 + C38343 + C38344) * C1720 -
                     (C38289 * C1239 + C38286 * C1246 + C38288 * C995 +
                      C51495 * C1003 + C38287 * C457 + C51501 * C466) *
                         C1723 -
                     (C38289 * C1247 + C38286 * C1251 + C38288 * C1004 +
                      C51495 * C1010 + C38287 * C467 + C51501 * C475) *
                         C51262) *
                        C51169) *
                       C51323 * C51220 * C1354)) /
                 (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C1722 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C1720 -
                      (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                       C51495 * C997 + C38287 * C454 + C51501 * C460) *
                          C1723 -
                      (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                       C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                          C51262) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C1722 +
                      (C38330 + C38331 + C38332) * C1720 -
                      (C38697 + C38698 + C38699) * C1723 -
                      (C38700 + C38701 + C38702) * C51262) *
                         C51169) *
                        C51323 * C51452 +
                    (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                       C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                          C1723 -
                      ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                        C51495 * C880 + C38287 * C306 + C51501 * C315) *
                           C1720 +
                       (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                        C51495 * C864 + C38287 * C297 + C51501 * C307) *
                           C1722) +
                      (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                       C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                          C51262) *
                         C25568 +
                     ((C40023 + C40024 + C40025) * C1723 -
                      ((C38515 + C38516 + C38517) * C1720 +
                       (C38518 + C38519 + C38520) * C1722) +
                      (C40026 + C40027 + C40028) * C51262) *
                         C51169) *
                        C51323 * C51236) *
                       C1456 +
                   ((((C38699 + C38698 + C38697) * C1723 -
                      ((C38332 + C38331 + C38330) * C1720 +
                       (C38329 + C38328 + C38327) * C1722) +
                      (C38702 + C38701 + C38700) * C51262) *
                         C25568 +
                     ((C38703 + C38704 + C38705) * C1723 -
                      ((C38333 + C38334 + C38335) * C1720 +
                       (C38336 + C38337 + C38338) * C1722) +
                      (C38706 + C38707 + C38708) * C51262) *
                         C51169) *
                        C51323 * C51452 +
                    (((C38520 + C38519 + C38518) * C1722 +
                      (C38517 + C38516 + C38515) * C1720 -
                      (C40025 + C40024 + C40023) * C1723 -
                      (C40028 + C40027 + C40026) * C51262) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C1722 +
                      (C38524 + C38525 + C38526) * C1720 -
                      (C38289 * C3676 + C38286 * C3681 + C38288 * C1148 +
                       C51495 * C1154 + C38287 * C858 + C51501 * C868) *
                          C1723 -
                      (C38289 * C3682 + C38286 * C3685 + C38288 * C1155 +
                       C51495 * C1160 + C38287 * C869 + C51501 * C882) *
                          C51262) *
                         C51169) *
                        C51323 * C51236) *
                       C51193)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C1989 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51499 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C1990 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51489 +
                     (C38287 * C992 + C51501 * C997 + C38288 * C1236 +
                      C51495 * C1240 + C38289 * C6565 + C38286 * C6568) *
                         C1991 +
                     (C38287 * C998 + C51501 * C1007 + C38288 * C1241 +
                      C51495 * C1248 + C38289 * C6569 + C38286 * C6574) *
                         C1988) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C1989 +
                     (C38330 + C38331 + C38332) * C51499 -
                     (C38697 + C38698 + C38699) * C1990 -
                     (C38700 + C38701 + C38702) * C51489 +
                     (C39275 + C39276 + C39277) * C1991 +
                     (C39278 + C39279 + C39280) * C1988) *
                        C51169) *
                       C51323 * C51220 * C1456 +
                   (((C38699 + C38698 + C38697) * C1990 -
                     ((C38332 + C38331 + C38330) * C51499 +
                      (C38329 + C38328 + C38327) * C1989) +
                     (C38702 + C38701 + C38700) * C51489 -
                     (C39277 + C39276 + C39275) * C1991 -
                     (C39280 + C39279 + C39278) * C1988) *
                        C25568 +
                    ((C38703 + C38704 + C38705) * C1990 -
                     ((C38333 + C38334 + C38335) * C51499 +
                      (C38336 + C38337 + C38338) * C1989) +
                     (C38706 + C38707 + C38708) * C51489 -
                     (C38289 * C6567 + C38286 * C6572 + C38288 * C1238 +
                      C51495 * C1244 + C38287 * C994 + C51501 * C1001) *
                         C1991 -
                     (C38289 * C6573 + C38286 * C6576 + C38288 * C1245 +
                      C51495 * C1250 + C38287 * C1002 + C51501 * C1009) *
                         C1988) *
                        C51169) *
                       C51323 * C51220 * C51193)) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C118 +
                     (C38330 + C38331 + C38332) * C51250) *
                        C51169) *
                       C51323 * C51220 * C113 -
                   (((C38333 + C38334 + C38335) * C51250 +
                     (C38336 + C38337 + C38338) * C118) *
                        C51169 +
                    ((C38332 + C38331 + C38330) * C51250 +
                     (C38329 + C38328 + C38327) * C118) *
                        C25568) *
                       C51323 * C51220 * C114 +
                   (((C38338 + C38337 + C38336) * C118 +
                     (C38335 + C38334 + C38333) * C51250) *
                        C25568 +
                    ((C38339 + C38340 + C38341) * C118 +
                     (C38342 + C38343 + C38344) * C51250) *
                        C51169) *
                       C51323 * C51220 * C115 -
                   (((C38289 * C1006 + C38286 * C1011 + C38288 * C469 +
                      C51495 * C476 + C38287 * C134 + C51501 * C144) *
                         C51250 +
                     (C38289 * C996 + C38286 * C1005 + C38288 * C458 +
                      C51495 * C468 + C38287 * C123 + C51501 * C135) *
                         C118) *
                        C51169 +
                    ((C38344 + C38343 + C38342) * C51250 +
                     (C38341 + C38340 + C38339) * C118) *
                        C25568) *
                       C51323 * C51220 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C118 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51250) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C118 +
                      (C38330 + C38331 + C38332) * C51250) *
                         C51169) *
                        C51323 * C622 -
                    (((C38515 + C38516 + C38517) * C51250 +
                      (C38518 + C38519 + C38520) * C118) *
                         C51169 +
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51250 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C118) *
                         C25568) *
                        C51323 * C623 +
                    (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                       C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                          C118 +
                      (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                       C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                          C51250) *
                         C25568 +
                     ((C38867 + C38868 + C38869) * C118 +
                      (C38870 + C38871 + C38872) * C51250) *
                         C51169) *
                        C51323 * C624) *
                       C51445 +
                   ((((C38520 + C38519 + C38518) * C118 +
                      (C38517 + C38516 + C38515) * C51250) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C118 +
                      (C38524 + C38525 + C38526) * C51250) *
                         C51169) *
                        C51323 * C623 -
                    (((C38333 + C38334 + C38335) * C51250 +
                      (C38336 + C38337 + C38338) * C118) *
                         C51169 +
                     ((C38332 + C38331 + C38330) * C51250 +
                      (C38329 + C38328 + C38327) * C118) *
                         C25568) *
                        C51323 * C622 -
                    (((C38289 * C3560 + C38286 * C3563 + C38288 * C877 +
                       C51495 * C886 + C38287 * C637 + C51501 * C644) *
                          C51250 +
                      (C38289 * C3554 + C38286 * C3559 + C38288 * C862 +
                       C51495 * C876 + C38287 * C629 + C51501 * C636) *
                          C118) *
                         C51169 +
                     ((C38872 + C38871 + C38870) * C51250 +
                      (C38869 + C38868 + C38867) * C118) *
                         C25568) *
                        C51323 * C624) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                       C51495 * C460 + C38289 * C992 + C38286 * C997) *
                          C118 +
                      (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                       C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                          C51250) *
                         C25568 +
                     ((C38327 + C38328 + C38329) * C118 +
                      (C38330 + C38331 + C38332) * C51250) *
                         C51169) *
                        C51323 * C51452 -
                    (((C38515 + C38516 + C38517) * C51250 +
                      (C38518 + C38519 + C38520) * C118) *
                         C51169 +
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51250 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C118) *
                         C25568) *
                        C51323 * C51236) *
                       C291 +
                   ((((C38520 + C38519 + C38518) * C118 +
                      (C38517 + C38516 + C38515) * C51250) *
                         C25568 +
                     ((C38521 + C38522 + C38523) * C118 +
                      (C38524 + C38525 + C38526) * C51250) *
                         C51169) *
                        C51323 * C51236 -
                    (((C38333 + C38334 + C38335) * C51250 +
                      (C38336 + C38337 + C38338) * C118) *
                         C51169 +
                     ((C38332 + C38331 + C38330) * C51250 +
                      (C38329 + C38328 + C38327) * C118) *
                         C25568) *
                        C51323 * C51452) *
                       C292 +
                   ((((C38338 + C38337 + C38336) * C118 +
                      (C38335 + C38334 + C38333) * C51250) *
                         C25568 +
                     ((C38339 + C38340 + C38341) * C118 +
                      (C38342 + C38343 + C38344) * C51250) *
                         C51169) *
                        C51323 * C51452 -
                    (((C38289 * C1157 + C38286 * C1161 + C38288 * C871 +
                       C51495 * C883 + C38287 * C300 + C51501 * C312) *
                          C51250 +
                      (C38289 * C1149 + C38286 * C1156 + C38288 * C859 +
                       C51495 * C870 + C38287 * C294 + C51501 * C301) *
                          C118) *
                         C51169 +
                     ((C38526 + C38525 + C38524) * C51250 +
                      (C38523 + C38522 + C38521) * C118) *
                         C25568) *
                        C51323 * C51236) *
                       C293)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C118 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51250) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C118 +
                     (C38330 + C38331 + C38332) * C51250) *
                        C51169) *
                       C51323 * C737 -
                   (((C38515 + C38516 + C38517) * C51250 +
                     (C38518 + C38519 + C38520) * C118) *
                        C51169 +
                    ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                      C51495 * C880 + C38287 * C306 + C51501 * C315) *
                         C51250 +
                     (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                      C51495 * C864 + C38287 * C297 + C51501 * C307) *
                         C118) *
                        C25568) *
                       C51323 * C738 +
                   (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                      C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                         C118 +
                     (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                      C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                         C51250) *
                        C25568 +
                    ((C38867 + C38868 + C38869) * C118 +
                     (C38870 + C38871 + C38872) * C51250) *
                        C51169) *
                       C51323 * C739 -
                   (((C38289 * C9234 + C38286 * C9236 + C38288 * C3190 +
                      C51495 * C3194 + C38287 * C750 + C51501 * C756) *
                         C51250 +
                     (C38289 * C9230 + C38286 * C9233 + C38288 * C3185 +
                      C51495 * C3189 + C38287 * C744 + C51501 * C751) *
                         C118) *
                        C51169 +
                    ((C38289 * C9232 + C38286 * C9235 + C38288 * C3188 +
                      C51495 * C3193 + C38287 * C752 + C51501 * C757) *
                         C51250 +
                     (C38289 * C9229 + C38286 * C9231 + C38288 * C3184 +
                      C51495 * C3187 + C38287 * C745 + C51501 * C753) *
                         C118) *
                        C25568) *
                       C51323 * C740) *
                  C51188) /
                     (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C452 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51454 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C453 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C452 +
                     (C38330 + C38331 + C38332) * C51454 -
                     (C38697 + C38698 + C38699) * C453 -
                     (C38700 + C38701 + C38702) * C51262) *
                        C51169) *
                       C51323 * C51220 * C291 +
                   (((C38699 + C38698 + C38697) * C453 -
                     ((C38332 + C38331 + C38330) * C51454 +
                      (C38329 + C38328 + C38327) * C452) +
                     (C38702 + C38701 + C38700) * C51262) *
                        C25568 +
                    ((C38703 + C38704 + C38705) * C453 -
                     ((C38333 + C38334 + C38335) * C51454 +
                      (C38336 + C38337 + C38338) * C452) +
                     (C38706 + C38707 + C38708) * C51262) *
                        C51169) *
                       C51323 * C51220 * C292 +
                   (((C38338 + C38337 + C38336) * C452 +
                     (C38335 + C38334 + C38333) * C51454 -
                     (C38705 + C38704 + C38703) * C453 -
                     (C38708 + C38707 + C38706) * C51262) *
                        C25568 +
                    ((C38339 + C38340 + C38341) * C452 +
                     (C38342 + C38343 + C38344) * C51454 -
                     (C38289 * C1239 + C38286 * C1246 + C38288 * C995 +
                      C51495 * C1003 + C38287 * C457 + C51501 * C466) *
                         C453 -
                     (C38289 * C1247 + C38286 * C1251 + C38288 * C1004 +
                      C51495 * C1010 + C38287 * C467 + C51501 * C475) *
                         C51262) *
                        C51169) *
                       C51323 * C51220 * C293)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38287 * C119 + C51501 * C126 + C38288 * C454 +
                      C51495 * C460 + C38289 * C992 + C38286 * C997) *
                         C452 +
                     (C38287 * C127 + C51501 * C140 + C38288 * C461 +
                      C51495 * C472 + C38289 * C998 + C38286 * C1007) *
                         C51454 -
                     (C38289 * C1236 + C38286 * C1240 + C38288 * C992 +
                      C51495 * C997 + C38287 * C454 + C51501 * C460) *
                         C453 -
                     (C38289 * C1241 + C38286 * C1248 + C38288 * C998 +
                      C51495 * C1007 + C38287 * C461 + C51501 * C472) *
                         C51262) *
                        C25568 +
                    ((C38327 + C38328 + C38329) * C452 +
                     (C38330 + C38331 + C38332) * C51454 -
                     (C38697 + C38698 + C38699) * C453 -
                     (C38700 + C38701 + C38702) * C51262) *
                        C51169) *
                       C51323 * C622 +
                   (((C38287 * C856 + C51501 * C864 + C38288 * C1146 +
                      C51495 * C1150 + C38289 * C3674 + C38286 * C3677) *
                         C453 -
                     ((C38289 * C1151 + C38286 * C1158 + C38288 * C865 +
                       C51495 * C880 + C38287 * C306 + C51501 * C315) *
                          C51454 +
                      (C38289 * C1146 + C38286 * C1150 + C38288 * C856 +
                       C51495 * C864 + C38287 * C297 + C51501 * C307) *
                          C452) +
                     (C38287 * C865 + C51501 * C880 + C38288 * C1151 +
                      C51495 * C1158 + C38289 * C3678 + C38286 * C3683) *
                         C51262) *
                        C25568 +
                    ((C38287 * C857 + C51501 * C866 + C38288 * C1147 +
                      C51495 * C1152 + C38289 * C3675 + C38286 * C3679) *
                         C453 -
                     ((C38515 + C38516 + C38517) * C51454 +
                      (C38518 + C38519 + C38520) * C452) +
                     (C38287 * C867 + C51501 * C881 + C38288 * C1153 +
                      C51495 * C1159 + C38289 * C3680 + C38286 * C3684) *
                         C51262) *
                        C51169) *
                       C51323 * C623 +
                   (((C38287 * C627 + C51501 * C632 + C38288 * C860 +
                      C51495 * C872 + C38289 * C3552 + C38286 * C3555) *
                         C452 +
                     (C38287 * C633 + C51501 * C642 + C38288 * C873 +
                      C51495 * C884 + C38289 * C3556 + C38286 * C3561) *
                         C51454 -
                     (C38289 * C9347 + C38286 * C9349 + C38288 * C3552 +
                      C51495 * C3555 + C38287 * C860 + C51501 * C872) *
                         C453 -
                     (C38289 * C9350 + C38286 * C9353 + C38288 * C3556 +
                      C51495 * C3561 + C38287 * C873 + C51501 * C884) *
                         C51262) *
                        C25568 +
                    ((C38867 + C38868 + C38869) * C452 +
                     (C38870 + C38871 + C38872) * C51454 -
                     (C38289 * C9348 + C38286 * C9351 + C38288 * C3553 +
                      C51495 * C3557 + C38287 * C861 + C51501 * C874) *
                         C453 -
                     (C38289 * C9352 + C38286 * C9354 + C38288 * C3558 +
                      C51495 * C3562 + C38287 * C875 + C51501 * C885) *
                         C51262) *
                        C51169) *
                       C51323 * C624) *
                  C51188) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C1350 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C51236) *
              C51497 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C51236 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C1350) *
              C51483 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51323 * C1350 -
           (((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51323 * C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C1350 -
           (C8740 * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51236) *
              C51497 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51236 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C1350) *
              C51483 +
          (((C188 * C51438 + C189 * C51169) * C8166 +
            (C2440 * C51438 + C2594 * C51169) * C8167 +
            (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
               C1350 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C51438) *
                C8168 +
            ((C671 + C670) * C51169 + C2592 * C51438) * C8167 +
            (C351 * C51169 + C352 * C51438) * C8166) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C51498 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C51486 +
           (((C117 * C627 + C51349 * C632) * C118 +
             (C117 * C633 + C51349 * C642) * C51250) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51323 * C1455) *
              C1456 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C51486 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C51498 -
           (((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51323 * C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C51498 -
           (C8740 * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51486 +
           (C8622 * C8166 +
            ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
            ((C8741 + C8742) * C51438 + (C8623 + C8624) * C51169) * C8168) *
               C1455) *
              C1456 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51486 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C51498 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C51438) *
                C8168 +
            ((C2920 + C2919) * C51169 + C8610 * C51438) * C8167 +
            C8621 * C8166) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C107 +
            (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
               C51323 * C1350 +
           (((C117 * C856 + C51349 * C864) * C453 -
             ((C117 * C306 + C51349 * C315) * C51454 +
              (C117 * C297 + C51349 * C307) * C452) +
             (C117 * C865 + C51349 * C880) * C51262) *
                C107 +
            (C1617 - (C1595 + C1596) + C1618) * C108 +
            (C1619 - (C1601 + C1602) + C1620) * C109 +
            (C1621 - (C1607 + C1608) + C1622) * C110) *
               C51323 * C51236) *
              C1456 +
          (((C513 - (C480 + C479) + C514) * C107 +
            (C515 - (C486 + C485) + C516) * C108 +
            (C517 - (C492 + C491) + C518) * C109 +
            (C519 - (C499 + C500) + C520) * C110) *
               C51323 * C1350 +
           ((C1596 + C1595 - C1617 - C1618) * C107 +
            (C1602 + C1601 - C1619 - C1620) * C108 +
            (C1608 + C1607 - C1621 - C1622) * C109 +
            (C341 * C452 + C342 * C51454 -
             (C117 * C1588 + C51349 * C1589) * C453 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C110) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C452 +
              (C117 * C127 + C51349 * C140) * C51454 -
              (C117 * C454 + C51349 * C460) * C453 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51438 +
             (C479 + C480 - C513 - C514) * C51169) *
                C8166 +
            ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) *
                C8167 +
            C8925 * C8168) *
               C1350 +
           (((C3229 - (C3198 + C3197) + C3230) * C51438 + C4180 * C51169) *
                C8166 +
            ((C3231 - (C3205 + C3206) + C3232) * C51438 + C9844 * C51169) *
                C8167 +
            ((C8919 - (C8901 + C8902) + C8920) * C51438 +
             (C8921 - (C8907 + C8908) + C8922) * C51169) *
                C8168) *
               C51236) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C51438 +
             (C515 - (C486 + C485) + C516) * C51169) *
                C8166 +
            (C4180 * C51438 + C4181 * C51169) * C8167 +
            (C9844 * C51438 + (C3235 - (C3217 + C3218) + C3236) * C51169) *
                C8168) *
               C1350 +
           ((C4179 * C51438 + C2747 * C51169) * C8166 +
            (C8918 * C51438 + (C3218 + C3217 - C3235 - C3236) * C51169) *
                C8167 +
            ((C8908 + C8907 - C8921 - C8922) * C51438 +
             (C2913 * C452 + C2914 * C51454 -
              (C117 * C3186 + C51349 * C3191) * C453 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51323 * C1350 +
           (((C117 * C856 + C51349 * C864) * C1723 -
             ((C117 * C306 + C51349 * C315) * C1720 +
              (C117 * C297 + C51349 * C307) * C1722) +
             (C117 * C865 + C51349 * C880) * C51262) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51323 * C51236) *
              C51445 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51323 * C1350 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51349 * C1589) * C1723 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C110) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51438 +
             (C1725 + C1726 - C1727 - C1728) * C51169) *
                C8166 +
            ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) *
                C8167 +
            ((C5046 + C5045 - C5044 - C5047) * C51438 + C10193 * C51169) *
                C8168) *
               C1350 +
           (((C4527 - (C4526 + C4525) + C4528) * C51438 + C4544 * C51169) *
                C8166 +
            ((C5044 - (C5045 + C5046) + C5047) * C51438 + C10194 * C51169) *
                C8167 +
            ((C8913 * C1723 - (C3036 * C1720 + C3035 * C1722) +
              C8914 * C51262) *
                 C51438 +
             (C10187 - (C10188 + C10189) + C10190) * C51169) *
                C8168) *
               C51236) *
              C51445 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51438 +
             (C1731 - (C1730 + C1729) + C1732) * C51169) *
                C8166 +
            (C4544 * C51438 + C4545 * C51169) * C8167 +
            (C10194 * C51438 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
                C8168) *
               C1350 +
           ((C4543 * C51438 + C4330 * C51169) * C8166 +
            (C10193 * C51438 + (C4538 + C4537 - C4536 - C4539) * C51169) *
                C8167 +
            ((C10189 + C10188 - C10187 - C10190) * C51438 +
             (C2913 * C1722 + C2914 * C1720 -
              (C117 * C3186 + C51349 * C3191) * C1723 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1722 +
            (C117 * C127 + C51349 * C140) * C1720 -
            (C117 * C454 + C51349 * C460) * C1723 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51323 * C51498 +
          (((C117 * C856 + C51349 * C864) * C1723 -
            ((C117 * C306 + C51349 * C315) * C1720 +
             (C117 * C297 + C51349 * C307) * C1722) +
            (C117 * C865 + C51349 * C880) * C51262) *
               C107 +
           (C1877 - (C1878 + C1879) + C1880) * C108 +
           (C1881 - (C1882 + C1883) + C1884) * C109 +
           (C1885 - (C1886 + C1887) + C1888) * C110) *
              C51323 * C51486 +
          (((C117 * C627 + C51349 * C632) * C1722 +
            (C117 * C633 + C51349 * C642) * C1720 -
            (C117 * C860 + C51349 * C872) * C1723 -
            (C117 * C873 + C51349 * C884) * C51262) *
               C107 +
           (C660 * C1722 + C661 * C1720 -
            (C117 * C861 + C51349 * C874) * C1723 -
            (C117 * C875 + C51349 * C885) * C51262) *
               C108 +
           (C662 * C1722 + C663 * C1720 -
            (C117 * C862 + C51349 * C876) * C1723 -
            (C117 * C877 + C51349 * C886) * C51262) *
               C109 +
           (C664 * C1722 + C665 * C1720 -
            (C117 * C863 + C51349 * C878) * C1723 -
            (C117 * C879 + C51349 * C887) * C51262) *
               C110) *
              C51323 * C1455) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C1725 + C1726 - C1727 - C1728) * C51169) *
               C8166 +
           ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) * C8167 +
           C10696 * C8168) *
              C51498 +
          (((C4527 - (C4526 + C4525) + C4528) * C51438 + C4544 * C51169) *
               C8166 +
           ((C5044 - (C5045 + C5046) + C5047) * C51438 + C10194 * C51169) *
               C8167 +
           ((C10689 - (C10690 + C10691) + C10692) * C51438 +
            (C10187 - (C10188 + C10189) + C10190) * C51169) *
               C8168) *
              C51486 +
          (C10696 * C8166 +
           ((C10691 + C10690 - C10689 - C10692) * C51438 +
            (C10189 + C10188 - C10187 - C10190) * C51169) *
               C8167 +
           ((C8738 * C1722 + C8739 * C1720 -
             (C117 * C8888 + C51349 * C8890) * C1723 -
             (C117 * C8891 + C51349 * C8894) * C51262) *
                C51438 +
            (C8619 * C1722 + C8620 * C1720 -
             (C117 * C8889 + C51349 * C8892) * C1723 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C8168) *
              C1455) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51323 * C1350 +
          (((C117 * C856 + C51349 * C864) * C1990 -
            ((C117 * C306 + C51349 * C315) * C51499 +
             (C117 * C297 + C51349 * C307) * C1989) +
            (C117 * C865 + C51349 * C880) * C51489 -
            (C117 * C1146 + C51349 * C1150) * C1991 -
            (C117 * C1151 + C51349 * C1158) * C1988) *
               C107 +
           (C1611 * C1990 - (C339 * C51499 + C340 * C1989) + C1612 * C51489 -
            (C117 * C1147 + C51349 * C1152) * C1991 -
            (C117 * C1153 + C51349 * C1159) * C1988) *
               C108 +
           (C1613 * C1990 - (C337 * C51499 + C338 * C1989) + C1614 * C51489 -
            (C117 * C1148 + C51349 * C1154) * C1991 -
            (C117 * C1155 + C51349 * C1160) * C1988) *
               C109 +
           (C1615 * C1990 - (C335 * C51499 + C336 * C1989) + C1616 * C51489 -
            (C117 * C1149 + C51349 * C1156) * C1991 -
            (C117 * C1157 + C51349 * C1161) * C1988) *
               C110) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C51438 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51169) *
               C8166 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51438 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51169) *
               C8167 +
           ((C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C51438 +
            (C10341 + C10342 - C10343 - C10344 + C10345 + C10346) * C51169) *
               C8168) *
              C1350 +
          (((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C51438 +
            (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51169) *
               C8166 +
           ((C10845 - (C10844 + C10843) + C10846 - C10847 - C10848) * C51438 +
            (C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51169) *
               C8167 +
           ((C8913 * C1990 - (C3036 * C51499 + C3035 * C1989) + C8914 * C51489 -
             (C117 * C9229 + C51349 * C9231) * C1991 -
             (C117 * C9232 + C51349 * C9235) * C1988) *
                C51438 +
            (C8915 * C1990 - (C2912 * C51499 + C2911 * C1989) + C8916 * C51489 -
             (C117 * C9230 + C51349 * C9233) * C1991 -
             (C117 * C9234 + C51349 * C9236) * C1988) *
                C51169) *
               C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C622 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C623 +
           (((C117 * C627 + C51349 * C632) * C118 +
             (C117 * C633 + C51349 * C642) * C51250) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51323 * C624) *
              C51445 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C623 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C622 -
           (((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51323 * C51220 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51323 * C51220 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51323 * C51220 * C115 -
          (((C117 * C138 + C51349 * C146) * C51250 +
            (C117 * C125 + C51349 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51323 * C51220 * C51445 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C107 +
           (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C109 +
           (C511 * C990 - (C174 * C986 + C175 * C989) + C512 * C987 -
            (C117 * C996 + C51349 * C1005) * C991 -
            (C117 * C1006 + C51349 * C1011) * C988) *
               C110) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
              C51220 * C113 -
          ((C2592 * C51169 + C2894 * C51438) * C8168 +
           (C352 * C51169 + C2593 * C51438) * C8167 +
           ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
              C51220 * C114 +
          ((C188 * C51438 + C189 * C51169) * C8166 +
           (C2440 * C51438 + C2594 * C51169) * C8167 +
           (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
              C51220 * C115 -
          ((((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C51169 +
            (C671 + C670) * C51438) *
               C8168 +
           ((C350 + C349) * C51169 + C351 * C51438) * C8167 +
           (C190 * C51169 + C191 * C51438) * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C622 -
           ((C8610 * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C623 +
           (C8622 * C8166 +
            ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
            (((C117 * C3020 + C51349 * C3026) * C118 +
              (C117 * C3025 + C51349 * C3029) * C51250) *
                 C51438 +
             (C8623 + C8624) * C51169) *
                C8168) *
               C624) *
              C51445 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C623 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C622 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C51438) *
                C8168 +
            ((C2920 + C2919) * C51169 + C8610 * C51438) * C8167 +
            C8621 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C51438 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51169) *
               C8166 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51438 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51169) *
               C8167 +
           ((C2910 * C989 + C2909 * C986 - C3223 * C990 - C3224 * C987 +
             (C117 * C3552 + C51349 * C3555) * C991 +
             (C117 * C3556 + C51349 * C3561) * C988) *
                C51438 +
            (C9072 + C9073 - C9074 - C9075 + C9082 + C9083) * C51169) *
               C8168) *
              C51220 * C51445 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51438 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51169) *
               C8166 +
           ((C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51438 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C51169) *
               C8167 +
           ((C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51438 +
            (C3227 * C990 - (C663 * C986 + C662 * C989) + C3228 * C987 -
             (C117 * C3554 + C51349 * C3559) * C991 -
             (C117 * C3560 + C51349 * C3563) * C988) *
                C51169) *
               C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51323 * C737 -
          (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
           ((C117 * C306 + C51349 * C315) * C51250 +
            (C117 * C297 + C51349 * C307) * C118) *
               C107) *
              C51323 * C738 +
          (((C117 * C627 + C51349 * C632) * C118 +
            (C117 * C633 + C51349 * C642) * C51250) *
               C107 +
           (C666 + C667) * C108 + (C668 + C669) * C109 + (C670 + C671) * C110) *
              C51323 * C739 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C110 +
           ((C117 * C748 + C51349 * C755) * C51250 +
            (C117 * C743 + C51349 * C749) * C118) *
               C109 +
           ((C117 * C750 + C51349 * C756) * C51250 +
            (C117 * C744 + C51349 * C751) * C118) *
               C108 +
           ((C117 * C752 + C51349 * C757) * C51250 +
            (C117 * C745 + C51349 * C753) * C118) *
               C107) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C51452 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C51236) *
              C291 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C51236 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C51452) *
              C292 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51323 * C51452 -
           (((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51323 * C51452 +
          (((C117 * C856 + C51349 * C864) * C990 -
            ((C117 * C306 + C51349 * C315) * C986 +
             (C117 * C297 + C51349 * C307) * C989) +
            (C117 * C865 + C51349 * C880) * C987 -
            (C117 * C1146 + C51349 * C1150) * C991 -
            (C117 * C1151 + C51349 * C1158) * C988) *
               C107 +
           ((C117 * C857 + C51349 * C866) * C990 - (C339 * C986 + C340 * C989) +
            (C117 * C867 + C51349 * C881) * C987 -
            (C117 * C1147 + C51349 * C1152) * C991 -
            (C117 * C1153 + C51349 * C1159) * C988) *
               C108 +
           ((C117 * C858 + C51349 * C868) * C990 - (C337 * C986 + C338 * C989) +
            (C117 * C869 + C51349 * C882) * C987 -
            (C117 * C1148 + C51349 * C1154) * C991 -
            (C117 * C1155 + C51349 * C1160) * C988) *
               C109 +
           ((C117 * C859 + C51349 * C870) * C990 - (C335 * C986 + C336 * C989) +
            (C117 * C871 + C51349 * C883) * C987 -
            (C117 * C1149 + C51349 * C1156) * C991 -
            (C117 * C1157 + C51349 * C1161) * C988) *
               C110) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
               C51452 -
           (((C2918 + C2917) * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51236) *
              C291 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            ((C2917 + C2918) * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51236 -
           ((C2592 * C51169 + C2894 * C51438) * C8168 +
            (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C51452) *
              C292 +
          (((C188 * C51438 + C189 * C51169) * C8166 +
            (C2440 * C51438 + C2594 * C51169) * C8167 +
            (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
               C51452 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C51438) *
                C8168 +
            ((C671 + C670) * C51169 + C2592 * C51438) * C8167 +
            (C351 * C51169 + C352 * C51438) * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           C8622 * C8168) *
              C737 -
          (C8740 * C8168 + (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
           (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
              C738 +
          (C8622 * C8166 + ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
           ((C8741 + C8742) * C51438 + (C8623 + C8624) * C51169) * C8168) *
              C739 -
          ((((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51169 +
            ((C117 * C8726 + C51349 * C8729) * C51250 +
             (C117 * C8723 + C51349 * C8727) * C118) *
                C51438) *
               C8168 +
           ((C8624 + C8623) * C51169 + (C8742 + C8741) * C51438) * C8167 +
           C8740 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C51438 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51169) *
               C8166 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51438 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C51169) *
               C8167 +
           ((C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C51438 +
            (C9072 + C9073 - C9074 - C9075 + C9082 + C9083) * C51169) *
               C8168) *
              C51452 +
          (((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C51438 +
            (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51169) *
               C8166 +
           ((C9240 - (C9239 + C9238) + C9241 - C9248 - C9249) * C51438 +
            (C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51169) *
               C8167 +
           ((C8913 * C990 - (C3036 * C986 + C3035 * C989) + C8914 * C987 -
             (C117 * C9229 + C51349 * C9231) * C991 -
             (C117 * C9232 + C51349 * C9235) * C988) *
                C51438 +
            (C8915 * C990 - (C2912 * C986 + C2911 * C989) + C8916 * C987 -
             (C117 * C9230 + C51349 * C9233) * C991 -
             (C117 * C9234 + C51349 * C9236) * C988) *
                C51169) *
               C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51323 * C622 +
          (((C117 * C856 + C51349 * C864) * C453 -
            ((C117 * C306 + C51349 * C315) * C51454 +
             (C117 * C297 + C51349 * C307) * C452) +
            (C117 * C865 + C51349 * C880) * C51262) *
               C107 +
           ((C117 * C857 + C51349 * C866) * C453 -
            (C339 * C51454 + C340 * C452) +
            (C117 * C867 + C51349 * C881) * C51262) *
               C108 +
           ((C117 * C858 + C51349 * C868) * C453 -
            (C337 * C51454 + C338 * C452) +
            (C117 * C869 + C51349 * C882) * C51262) *
               C109 +
           ((C117 * C859 + C51349 * C870) * C453 -
            (C335 * C51454 + C336 * C452) +
            (C117 * C871 + C51349 * C883) * C51262) *
               C110) *
              C51323 * C623 +
          (((C117 * C627 + C51349 * C632) * C452 +
            (C117 * C633 + C51349 * C642) * C51454 -
            (C117 * C860 + C51349 * C872) * C453 -
            (C117 * C873 + C51349 * C884) * C51262) *
               C107 +
           (C660 * C452 + C661 * C51454 - (C117 * C861 + C51349 * C874) * C453 -
            (C117 * C875 + C51349 * C885) * C51262) *
               C108 +
           (C662 * C452 + C663 * C51454 - (C117 * C862 + C51349 * C876) * C453 -
            (C117 * C877 + C51349 * C886) * C51262) *
               C109 +
           (C664 * C452 + C665 * C51454 - (C117 * C863 + C51349 * C878) * C453 -
            (C117 * C879 + C51349 * C887) * C51262) *
               C110) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51323 * C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C107 +
           (C515 - (C486 + C485) + C516) * C108 +
           (C517 - (C492 + C491) + C518) * C109 +
           (C519 - (C499 + C500) + C520) * C110) *
              C51323 * C51220 * C292 +
          (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
           (C176 * C452 + C177 * C51454 - (C117 * C459 + C51349 * C470) * C453 -
            (C117 * C471 + C51349 * C477) * C51262) *
               C110) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51349 * C126) * C1232 +
           (C117 * C127 + C51349 * C140) * C1228 -
           (C117 * C454 + C51349 * C460) * C1233 -
           (C117 * C461 + C51349 * C472) * C1229 +
           (C117 * C992 + C51349 * C997) * C1234 +
           (C117 * C998 + C51349 * C1007) * C1230 -
           (C117 * C1236 + C51349 * C1240) * C1235 -
           (C117 * C1241 + C51349 * C1248) * C1231) *
              C107 +
          (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
           C1037 * C1234 + C1038 * C1230 -
           (C117 * C1237 + C51349 * C1242) * C1235 -
           (C117 * C1243 + C51349 * C1249) * C1231) *
              C108 +
          (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
           C1039 * C1234 + C1040 * C1230 -
           (C117 * C1238 + C51349 * C1244) * C1235 -
           (C117 * C1245 + C51349 * C1250) * C1231) *
              C109 +
          (C172 * C1232 + C173 * C1228 - C509 * C1233 - C510 * C1229 +
           C1041 * C1234 + C1042 * C1230 -
           (C117 * C1239 + C51349 * C1246) * C1235 -
           (C117 * C1247 + C51349 * C1251) * C1231) *
              C110) *
         C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           ((C3206 + C3205 - C3231 - C3232) * C51438 +
            (C3212 + C3211 - C3233 - C3234) * C51169) *
               C8168) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C51438 +
            (C515 - (C486 + C485) + C516) * C51169) *
               C8166 +
           (C4180 * C51438 + C4181 * C51169) * C8167 +
           ((C3233 - (C3211 + C3212) + C3234) * C51438 +
            (C3235 - (C3217 + C3218) + C3236) * C51169) *
               C8168) *
              C51220 * C292 +
          ((C523 * C51438 + C524 * C51169) * C8166 +
           (C2747 * C51438 + (C1608 + C1607 - C1621 - C1622) * C51169) * C8167 +
           ((C3218 + C3217 - C3235 - C3236) * C51438 +
            (C664 * C452 + C665 * C51454 -
             (C117 * C863 + C51349 * C878) * C453 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           C8925 * C8168) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C51438 + C4180 * C51169) *
               C8166 +
           ((C3231 - (C3205 + C3206) + C3232) * C51438 +
            (C3233 - (C3211 + C3212) + C3234) * C51169) *
               C8167 +
           ((C8919 - (C8901 + C8902) + C8920) * C51438 +
            (C8921 - (C8907 + C8908) + C8922) * C51169) *
               C8168) *
              C623 +
          (C8925 * C8166 +
           ((C8902 + C8901 - C8919 - C8920) * C51438 +
            (C8908 + C8907 - C8921 - C8922) * C51169) *
               C8167 +
           ((C8738 * C452 + C8739 * C51454 -
             (C117 * C8888 + C51349 * C8890) * C453 -
             (C117 * C8891 + C51349 * C8894) * C51262) *
                C51438 +
            (C8619 * C452 + C8620 * C51454 -
             (C117 * C8889 + C51349 * C8892) * C453 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1232 +
            (C117 * C127 + C51349 * C140) * C1228 -
            (C117 * C454 + C51349 * C460) * C1233 -
            (C117 * C461 + C51349 * C472) * C1229 +
            (C117 * C992 + C51349 * C997) * C1234 +
            (C117 * C998 + C51349 * C1007) * C1230 -
            (C117 * C1236 + C51349 * C1240) * C1235 -
            (C117 * C1241 + C51349 * C1248) * C1231) *
               C51438 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51349 * C1242) * C1235 -
            (C117 * C1243 + C51349 * C1249) * C1231) *
               C51169) *
              C8166 +
          ((C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
            C3573 * C1234 + C3574 * C1230 -
            (C117 * C3674 + C51349 * C3677) * C1235 -
            (C117 * C3678 + C51349 * C3683) * C1231) *
               C51438 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3399 * C1234 + C3400 * C1230 -
            (C117 * C3675 + C51349 * C3679) * C1235 -
            (C117 * C3680 + C51349 * C3684) * C1231) *
               C51169) *
              C8167 +
          ((C2910 * C1232 + C2909 * C1228 - C3223 * C1233 - C3224 * C1229 +
            C9246 * C1234 + C9247 * C1230 -
            (C117 * C9347 + C51349 * C9349) * C1235 -
            (C117 * C9350 + C51349 * C9353) * C1231) *
               C51438 +
           (C660 * C1232 + C661 * C1228 - C3225 * C1233 - C3226 * C1229 +
            C9080 * C1234 + C9081 * C1230 -
            (C117 * C9348 + C51349 * C9351) * C1235 -
            (C117 * C9352 + C51349 * C9354) * C1231) *
               C51169) *
              C8168) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1722 +
            (C117 * C127 + C51349 * C140) * C1720 -
            (C117 * C454 + C51349 * C460) * C1723 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51323 * C51220 * C51497 +
          ((C1727 - (C1726 + C1725) + C1728) * C107 +
           (C1731 - (C1730 + C1729) + C1732) * C108 +
           (C1735 - (C1734 + C1733) + C1736) * C109 +
           (C1737 - (C1738 + C1739) + C1740) * C110) *
              C51323 * C51220 * C51483 +
          (C1745 * C107 + C1746 * C108 +
           (C1739 + C1738 - C1737 - C1740) * C109 +
           (C176 * C1722 + C177 * C1720 -
            (C117 * C459 + C51349 * C470) * C1723 -
            (C117 * C471 + C51349 * C477) * C51262) *
               C110) *
              C51323 * C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C1725 + C1726 - C1727 - C1728) * C51169) *
               C8166 +
           ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) * C8167 +
           ((C5046 + C5045 - C5044 - C5047) * C51438 +
            (C4534 + C4533 - C4532 - C4535) * C51169) *
               C8168) *
              C51220 * C51497 +
          (((C1727 - (C1726 + C1725) + C1728) * C51438 +
            (C1731 - (C1730 + C1729) + C1732) * C51169) *
               C8166 +
           (C4544 * C51438 + C4545 * C51169) * C8167 +
           ((C4532 - (C4533 + C4534) + C4535) * C51438 +
            (C4536 - (C4537 + C4538) + C4539) * C51169) *
               C8168) *
              C51220 * C51483 +
          ((C1745 * C51438 + C1746 * C51169) * C8166 +
           (C4330 * C51438 + (C1887 + C1886 - C1885 - C1888) * C51169) * C8167 +
           ((C4538 + C4537 - C4536 - C4539) * C51438 +
            (C664 * C1722 + C665 * C1720 -
             (C117 * C863 + C51349 * C878) * C1723 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C8168) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51323 * C51452 +
           (((C117 * C856 + C51349 * C864) * C1723 -
             ((C117 * C306 + C51349 * C315) * C1720 +
              (C117 * C297 + C51349 * C307) * C1722) +
             (C117 * C865 + C51349 * C880) * C51262) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51323 * C51236) *
              C1456 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51323 * C51452 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51349 * C1589) * C1723 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C110) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C1722 +
              (C117 * C127 + C51349 * C140) * C1720 -
              (C117 * C454 + C51349 * C460) * C1723 -
              (C117 * C461 + C51349 * C472) * C51262) *
                 C51438 +
             (C1725 + C1726 - C1727 - C1728) * C51169) *
                C8166 +
            ((C4525 + C4526 - C4527 - C4528) * C51438 + C4543 * C51169) *
                C8167 +
            ((C5046 + C5045 - C5044 - C5047) * C51438 + C10193 * C51169) *
                C8168) *
               C51452 +
           (((C4527 - (C4526 + C4525) + C4528) * C51438 + C4544 * C51169) *
                C8166 +
            ((C5044 - (C5045 + C5046) + C5047) * C51438 + C10194 * C51169) *
                C8167 +
            ((C8913 * C1723 - (C3036 * C1720 + C3035 * C1722) +
              C8914 * C51262) *
                 C51438 +
             (C10187 - (C10188 + C10189) + C10190) * C51169) *
                C8168) *
               C51236) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51438 +
             (C1731 - (C1730 + C1729) + C1732) * C51169) *
                C8166 +
            (C4544 * C51438 + C4545 * C51169) * C8167 +
            (C10194 * C51438 + (C4536 - (C4537 + C4538) + C4539) * C51169) *
                C8168) *
               C51452 +
           ((C4543 * C51438 + C4330 * C51169) * C8166 +
            (C10193 * C51438 + (C4538 + C4537 - C4536 - C4539) * C51169) *
                C8167 +
            ((C10189 + C10188 - C10187 - C10190) * C51438 +
             (C2913 * C1722 + C2914 * C1720 -
              (C117 * C3186 + C51349 * C3191) * C1723 -
              (C117 * C3192 + C51349 * C3195) * C51262) *
                 C51169) *
                C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51323 * C51220 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C107 +
           (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C108 +
           (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C109 +
           (C511 * C1990 - (C174 * C51499 + C175 * C1989) + C512 * C51489 -
            (C117 * C996 + C51349 * C1005) * C1991 -
            (C117 * C1006 + C51349 * C1011) * C1988) *
               C110) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C51438 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51169) *
               C8166 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51438 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C51169) *
               C8167 +
           ((C2910 * C1989 + C2909 * C51499 - C3223 * C1990 - C3224 * C51489 +
             C9246 * C1991 + C9247 * C1988) *
                C51438 +
            (C10341 + C10342 - C10343 - C10344 + C10345 + C10346) * C51169) *
               C8168) *
              C51220 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51438 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51169) *
               C8166 +
           ((C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51438 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C51169) *
               C8167 +
           ((C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51438 +
            (C3227 * C1990 - (C663 * C51499 + C662 * C1989) + C3228 * C51489 -
             (C117 * C3554 + C51349 * C3559) * C1991 -
             (C117 * C3560 + C51349 * C3563) * C1988) *
                C51169) *
               C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51323 * C51220 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51323 * C51220 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51323 * C51220 * C115 -
          (((C117 * C138 + C51349 * C146) * C51250 +
            (C117 * C125 + C51349 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C622 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C623 +
           (((C117 * C627 + C51349 * C632) * C118 +
             (C117 * C633 + C51349 * C642) * C51250) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51323 * C624) *
              C51445 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C623 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C622 -
           (((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
              C51220 * C113 -
          ((C2592 * C51169 + C2894 * C51438) * C8168 +
           (C352 * C51169 + C2593 * C51438) * C8167 +
           ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
              C51220 * C114 +
          ((C188 * C51438 + C189 * C51169) * C8166 +
           (C2440 * C51438 + C2594 * C51169) * C8167 +
           (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
              C51220 * C115 -
          ((((C117 * C640 + C51349 * C646) * C51250 +
             (C117 * C631 + C51349 * C641) * C118) *
                C51169 +
            (C671 + C670) * C51438) *
               C8168 +
           ((C350 + C349) * C51169 + C351 * C51438) * C8167 +
           (C190 * C51169 + C191 * C51438) * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            C8622 * C8168) *
               C622 -
           ((C8610 * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C623 +
           (C8622 * C8166 +
            ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
            (((C117 * C3020 + C51349 * C3026) * C118 +
              (C117 * C3025 + C51349 * C3029) * C51250) *
                 C51438 +
             (C8623 + C8624) * C51169) *
                C8168) *
               C624) *
              C51445 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            (C8611 * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C623 -
           (C8621 * C8168 + (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C622 -
           ((((C117 * C3021 + C51349 * C3027) * C51250 +
              (C117 * C3018 + C51349 * C3022) * C118) *
                 C51169 +
             (C8624 + C8623) * C51438) *
                C8168 +
            ((C2920 + C2919) * C51169 + C8610 * C51438) * C8167 +
            C8621 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51323 * C51452 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51349 * C315) * C51250 +
             (C117 * C297 + C51349 * C307) * C118) *
                C107) *
               C51323 * C51236) *
              C291 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51323 * C51236 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51323 * C51452) *
              C292 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51323 * C51452 -
           (((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51323 * C737 -
          (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
           ((C117 * C306 + C51349 * C315) * C51250 +
            (C117 * C297 + C51349 * C307) * C118) *
               C107) *
              C51323 * C738 +
          (((C117 * C627 + C51349 * C632) * C118 +
            (C117 * C633 + C51349 * C642) * C51250) *
               C107 +
           (C666 + C667) * C108 + (C668 + C669) * C109 + (C670 + C671) * C110) *
              C51323 * C739 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C110 +
           ((C117 * C748 + C51349 * C755) * C51250 +
            (C117 * C743 + C51349 * C749) * C118) *
               C109 +
           ((C117 * C750 + C51349 * C756) * C51250 +
            (C117 * C744 + C51349 * C751) * C118) *
               C108 +
           ((C117 * C752 + C51349 * C757) * C51250 +
            (C117 * C745 + C51349 * C753) * C118) *
               C107) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C51438 +
             (C178 + C179) * C51169) *
                C8166 +
            ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
            ((C2916 + C2915) * C51438 + C2899 * C51169) * C8168) *
               C51452 -
           (((C2918 + C2917) * C51169 + (C3038 + C3037) * C51438) * C8168 +
            (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
            (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
               C51236) *
              C291 +
          (((C2591 * C51438 + C2440 * C51169) * C8166 +
            (C2899 * C51438 + C2900 * C51169) * C8167 +
            ((C2917 + C2918) * C51438 + (C2919 + C2920) * C51169) * C8168) *
               C51236 -
           ((C2592 * C51169 + C2894 * C51438) * C8168 +
            (C352 * C51169 + C2593 * C51438) * C8167 +
            ((C181 + C180) * C51169 + (C179 + C178) * C51438) * C8166) *
               C51452) *
              C292 +
          (((C188 * C51438 + C189 * C51169) * C8166 +
            (C2440 * C51438 + C2594 * C51169) * C8167 +
            (C2900 * C51438 + (C670 + C671) * C51169) * C8168) *
               C51452 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C51169 +
             (C2920 + C2919) * C51438) *
                C8168 +
            ((C671 + C670) * C51169 + C2592 * C51438) * C8167 +
            (C351 * C51169 + C352 * C51438) * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51438 +
            (C178 + C179) * C51169) *
               C8166 +
           ((C2597 + C2598) * C51438 + C2591 * C51169) * C8167 +
           C8622 * C8168) *
              C737 -
          (C8740 * C8168 + (C2894 * C51169 + (C2915 + C2916) * C51438) * C8167 +
           (C2593 * C51169 + (C2598 + C2597) * C51438) * C8166) *
              C738 +
          (C8622 * C8166 + ((C3037 + C3038) * C51438 + C8611 * C51169) * C8167 +
           ((C8741 + C8742) * C51438 + (C8623 + C8624) * C51169) * C8168) *
              C739 -
          ((((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51169 +
            ((C117 * C8726 + C51349 * C8729) * C51250 +
             (C117 * C8723 + C51349 * C8727) * C118) *
                C51438) *
               C8168 +
           ((C8624 + C8623) * C51169 + (C8742 + C8741) * C51438) * C8167 +
           C8740 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51323 * C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C107 +
           (C515 - (C486 + C485) + C516) * C108 +
           (C517 - (C492 + C491) + C518) * C109 +
           (C519 - (C499 + C500) + C520) * C110) *
              C51323 * C51220 * C292 +
          (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
           (C176 * C452 + C177 * C51454 - (C117 * C459 + C51349 * C470) * C453 -
            (C117 * C471 + C51349 * C477) * C51262) *
               C110) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51323 * C622 +
          (((C117 * C856 + C51349 * C864) * C453 -
            ((C117 * C306 + C51349 * C315) * C51454 +
             (C117 * C297 + C51349 * C307) * C452) +
            (C117 * C865 + C51349 * C880) * C51262) *
               C107 +
           ((C117 * C857 + C51349 * C866) * C453 -
            (C339 * C51454 + C340 * C452) +
            (C117 * C867 + C51349 * C881) * C51262) *
               C108 +
           ((C117 * C858 + C51349 * C868) * C453 -
            (C337 * C51454 + C338 * C452) +
            (C117 * C869 + C51349 * C882) * C51262) *
               C109 +
           ((C117 * C859 + C51349 * C870) * C453 -
            (C335 * C51454 + C336 * C452) +
            (C117 * C871 + C51349 * C883) * C51262) *
               C110) *
              C51323 * C623 +
          (((C117 * C627 + C51349 * C632) * C452 +
            (C117 * C633 + C51349 * C642) * C51454 -
            (C117 * C860 + C51349 * C872) * C453 -
            (C117 * C873 + C51349 * C884) * C51262) *
               C107 +
           (C660 * C452 + C661 * C51454 - (C117 * C861 + C51349 * C874) * C453 -
            (C117 * C875 + C51349 * C885) * C51262) *
               C108 +
           (C662 * C452 + C663 * C51454 - (C117 * C862 + C51349 * C876) * C453 -
            (C117 * C877 + C51349 * C886) * C51262) *
               C109 +
           (C664 * C452 + C665 * C51454 - (C117 * C863 + C51349 * C878) * C453 -
            (C117 * C879 + C51349 * C887) * C51262) *
               C110) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           ((C3206 + C3205 - C3231 - C3232) * C51438 +
            (C3212 + C3211 - C3233 - C3234) * C51169) *
               C8168) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C51438 +
            (C515 - (C486 + C485) + C516) * C51169) *
               C8166 +
           (C4180 * C51438 + C4181 * C51169) * C8167 +
           ((C3233 - (C3211 + C3212) + C3234) * C51438 +
            (C3235 - (C3217 + C3218) + C3236) * C51169) *
               C8168) *
              C51220 * C292 +
          ((C523 * C51438 + C524 * C51169) * C8166 +
           (C2747 * C51438 + (C1608 + C1607 - C1621 - C1622) * C51169) * C8167 +
           ((C3218 + C3217 - C3235 - C3236) * C51438 +
            (C664 * C452 + C665 * C51454 -
             (C117 * C863 + C51349 * C878) * C453 -
             (C117 * C879 + C51349 * C887) * C51262) *
                C51169) *
               C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C51438 +
            (C479 + C480 - C513 - C514) * C51169) *
               C8166 +
           ((C3197 + C3198 - C3229 - C3230) * C51438 + C4179 * C51169) * C8167 +
           C8925 * C8168) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C51438 + C4180 * C51169) *
               C8166 +
           ((C3231 - (C3205 + C3206) + C3232) * C51438 +
            (C3233 - (C3211 + C3212) + C3234) * C51169) *
               C8167 +
           ((C8919 - (C8901 + C8902) + C8920) * C51438 +
            (C8921 - (C8907 + C8908) + C8922) * C51169) *
               C8168) *
              C623 +
          (C8925 * C8166 +
           ((C8902 + C8901 - C8919 - C8920) * C51438 +
            (C8908 + C8907 - C8921 - C8922) * C51169) *
               C8167 +
           ((C8738 * C452 + C8739 * C51454 -
             (C117 * C8888 + C51349 * C8890) * C453 -
             (C117 * C8891 + C51349 * C8894) * C51262) *
                C51438 +
            (C8619 * C452 + C8620 * C51454 -
             (C117 * C8889 + C51349 * C8892) * C453 -
             (C117 * C8893 + C51349 * C8895) * C51262) *
                C51169) *
               C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C1350 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51236) *
              C51497 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C51236 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C1350) *
              C51483 +
          (((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
            (C2440 * C2434 + C2594 * C2435 + (C349 + C350) * C2436) * C51337) *
               C1350 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C2436 +
             (C671 + C670) * C2435 + C2592 * C2434) *
                C51337 +
            ((C350 + C349) * C2436 + C351 * C2435 + C352 * C2434) * C51466) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C1350 -
           (C11295 * C10918 + C11290 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51236) *
              C51497 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51236 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C1350) *
              C51483 +
          ((C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
            C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
               C1350 -
           (((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C51164 * C10918 +
            (C2920 + C2919) * C51164 * C10917 + C2592 * C51164 * C10916 +
            C352 * C51164 * C10915) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C51498 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51486 +
           (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
            ((C3037 + C3038) * C2434 + (C2917 + C2918) * C2435 +
             (C2919 + C2920) * C2436) *
                C51337) *
               C1455) *
              C1456 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C51486 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C51498 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C2436 +
             (C2920 + C2919) * C2435 + (C2918 + C2917) * C2434) *
                C51337 +
            ((C671 + C670) * C2436 + C2592 * C2435 + C2894 * C2434) * C51466) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C51498 -
           (C11295 * C10918 + C11290 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51486 +
           (C11214 * C10915 + C11218 * C10916 +
            (C8741 + C8742) * C51164 * C10917 +
            (C11298 + C11299) * C51164 * C10918) *
               C1455) *
              C1456 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51486 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C51498 -
           (((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51164 * C10918 +
            (C8624 + C8623) * C51164 * C10917 + C11216 * C10916 +
            C11217 * C10915) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C51349 * C126) * C452 +
                       (C117 * C127 + C51349 * C140) * C51454 -
                       (C117 * C454 + C51349 * C460) * C453 -
                       (C117 * C461 + C51349 * C472) * C51262) *
                          C2434 +
                      (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
                         C51466 +
                     ((C3197 + C3198 - C3229 - C3230) * C2434 + C4179 * C2435 +
                      C2747 * C2436) *
                         C51337) *
                        C1350 +
                    (((C3229 - (C3198 + C3197) + C3230) * C2434 +
                      C4180 * C2435 + C4181 * C2436) *
                         C51466 +
                     ((C3231 - (C3205 + C3206) + C3232) * C2434 +
                      (C3233 - (C3211 + C3212) + C3234) * C2435 +
                      (C3235 - (C3217 + C3218) + C3236) * C2436) *
                         C51337) *
                        C51236) *
                       C1456 +
                   ((((C513 - (C480 + C479) + C514) * C2434 +
                      (C515 - (C486 + C485) + C516) * C2435 +
                      (C517 - (C492 + C491) + C518) * C2436) *
                         C51466 +
                     (C4180 * C2434 + C4181 * C2435 +
                      (C1621 - (C1607 + C1608) + C1622) * C2436) *
                         C51337) *
                        C1350 +
                    ((C4179 * C2434 + C2747 * C2435 +
                      (C1608 + C1607 - C1621 - C1622) * C2436) *
                         C51466 +
                     ((C3212 + C3211 - C3233 - C3234) * C2434 +
                      (C3218 + C3217 - C3235 - C3236) * C2435 +
                      (C664 * C452 + C665 * C51454 -
                       (C117 * C863 + C51349 * C878) * C453 -
                       (C117 * C879 + C51349 * C887) * C51262) *
                          C2436) *
                         C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C452 +
                      (C117 * C127 + C51349 * C140) * C51454 -
                      (C117 * C454 + C51349 * C460) * C453 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C51164 * C10915 +
                     (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 +
                     C11402 * C10917 + C11416 * C10918) *
                        C1350 +
                    ((C3229 - (C3198 + C3197) + C3230) * C51164 * C10915 +
                     (C3231 - (C3205 + C3206) + C3232) * C51164 * C10916 +
                     (C8919 - (C8901 + C8902) + C8920) * C51164 * C10917 +
                     (C11414 - (C11406 + C11407) + C11415) * C51164 * C10918) *
                        C51236) *
                       C1456 +
                   (((C513 - (C480 + C479) + C514) * C51164 * C10915 +
                     C4180 * C51164 * C10916 + C9844 * C51164 * C10917 +
                     (C8921 - (C8907 + C8908) + C8922) * C51164 * C10918) *
                        C1350 +
                    (C4179 * C51164 * C10915 + C8918 * C51164 * C10916 +
                     (C8908 + C8907 - C8921 - C8922) * C51164 * C10917 +
                     (C8619 * C452 + C8620 * C51454 -
                      (C117 * C8889 + C51349 * C8892) * C453 -
                      (C117 * C8893 + C51349 * C8895) * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C51349 * C126) * C1722 +
                       (C117 * C127 + C51349 * C140) * C1720 -
                       (C117 * C454 + C51349 * C460) * C1723 -
                       (C117 * C461 + C51349 * C472) * C51262) *
                          C2434 +
                      (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
                         C51466 +
                     ((C4525 + C4526 - C4527 - C4528) * C2434 + C4543 * C2435 +
                      C4330 * C2436) *
                         C51337) *
                        C1350 +
                    (((C4527 - (C4526 + C4525) + C4528) * C2434 +
                      C4544 * C2435 + C4545 * C2436) *
                         C51466 +
                     ((C3223 * C1723 - (C2909 * C1720 + C2910 * C1722) +
                       C3224 * C51262) *
                          C2434 +
                      (C4532 - (C4533 + C4534) + C4535) * C2435 +
                      (C4536 - (C4537 + C4538) + C4539) * C2436) *
                         C51337) *
                        C51236) *
                       C51445 +
                   ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
                      (C1731 - (C1730 + C1729) + C1732) * C2435 +
                      (C1735 - (C1734 + C1733) + C1736) * C2436) *
                         C51466 +
                     (C4544 * C2434 + C4545 * C2435 +
                      (C1885 - (C1886 + C1887) + C1888) * C2436) *
                         C51337) *
                        C1350 +
                    ((C4543 * C2434 + C4330 * C2435 +
                      (C1887 + C1886 - C1885 - C1888) * C2436) *
                         C51466 +
                     ((C4534 + C4533 - C4532 - C4535) * C2434 +
                      (C4538 + C4537 - C4536 - C4539) * C2435 +
                      (C664 * C1722 + C665 * C1720 -
                       (C117 * C863 + C51349 * C878) * C1723 -
                       (C117 * C879 + C51349 * C887) * C51262) *
                          C2436) *
                         C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C1722 +
                      (C117 * C127 + C51349 * C140) * C1720 -
                      (C117 * C454 + C51349 * C460) * C1723 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C51164 * C10915 +
                     (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
                     C10694 * C51164 * C10917 +
                     (C10691 + C10690 - C10689 - C10692) * C51164 * C10918) *
                        C1350 +
                    ((C4527 - (C4526 + C4525) + C4528) * C51164 * C10915 +
                     (C5044 - (C5045 + C5046) + C5047) * C51164 * C10916 +
                     (C10689 - (C10690 + C10691) + C10692) * C51164 * C10917 +
                     (C11411 * C1723 - (C8739 * C1720 + C8738 * C1722) +
                      C11412 * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51445 +
                   (((C1727 - (C1726 + C1725) + C1728) * C51164 * C10915 +
                     C4544 * C51164 * C10916 + C10194 * C51164 * C10917 +
                     (C10187 - (C10188 + C10189) + C10190) * C51164 * C10918) *
                        C1350 +
                    (C4543 * C51164 * C10915 + C10193 * C51164 * C10916 +
                     (C10189 + C10188 - C10187 - C10190) * C51164 * C10917 +
                     (C8619 * C1722 + C8620 * C1720 -
                      (C117 * C8889 + C51349 * C8892) * C1723 -
                      (C117 * C8893 + C51349 * C8895) * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C1722 +
                      (C117 * C127 + C51349 * C140) * C1720 -
                      (C117 * C454 + C51349 * C460) * C1723 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C2434 +
                     (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
                        C51466 +
                    ((C4525 + C4526 - C4527 - C4528) * C2434 + C4543 * C2435 +
                     C4330 * C2436) *
                        C51337) *
                       C51498 +
                   (((C4527 - (C4526 + C4525) + C4528) * C2434 + C4544 * C2435 +
                     C4545 * C2436) *
                        C51466 +
                    ((C5044 - (C5045 + C5046) + C5047) * C2434 +
                     (C4532 - (C4533 + C4534) + C4535) * C2435 +
                     (C4536 - (C4537 + C4538) + C4539) * C2436) *
                        C51337) *
                       C51486 +
                   (((C5046 + C5045 - C5044 - C5047) * C2434 +
                     (C4534 + C4533 - C4532 - C4535) * C2435 +
                     (C4538 + C4537 - C4536 - C4539) * C2436) *
                        C51466 +
                    ((C3035 * C1722 + C3036 * C1720 -
                      (C117 * C3184 + C51349 * C3187) * C1723 -
                      (C117 * C3188 + C51349 * C3193) * C51262) *
                         C2434 +
                     (C2911 * C1722 + C2912 * C1720 -
                      (C117 * C3185 + C51349 * C3189) * C1723 -
                      (C117 * C3190 + C51349 * C3194) * C51262) *
                         C2435 +
                     (C2913 * C1722 + C2914 * C1720 -
                      (C117 * C3186 + C51349 * C3191) * C1723 -
                      (C117 * C3192 + C51349 * C3195) * C51262) *
                         C2436) *
                        C51337) *
                       C1455) *
                  C51188) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C51349 * C126) * C1722 +
                     (C117 * C127 + C51349 * C140) * C1720 -
                     (C117 * C454 + C51349 * C460) * C1723 -
                     (C117 * C461 + C51349 * C472) * C51262) *
                        C51164 * C10915 +
                    (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
                    C12579 * C10917 + C12587 * C10918) *
                       C51498 +
                   ((C4527 - (C4526 + C4525) + C4528) * C51164 * C10915 +
                    (C5044 - (C5045 + C5046) + C5047) * C51164 * C10916 +
                    (C10689 - (C10690 + C10691) + C10692) * C51164 * C10917 +
                    (C12581 - (C12582 + C12583) + C12584) * C51164 * C10918) *
                       C51486 +
                   (C12579 * C10915 + C12587 * C10916 +
                    (C12583 + C12582 - C12581 - C12584) * C51164 * C10917 +
                    (C11296 * C1722 + C11297 * C1720 -
                     (C117 * C11397 + C51349 * C11398) * C1723 -
                     (C117 * C11399 + C51349 * C11400) * C51262) *
                        C51164 * C10918) *
                       C1455) *
                  C51188) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C2435 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C2436) *
               C51466 +
           ((C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C2434 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C2435 +
            (C4698 + C4699 - C4700 - C4701 + C4702 + C4703) * C2436) *
               C51337) *
              C1350 +
          (((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C2434 +
            (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C2435 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C2436) *
               C51466 +
           ((C3223 * C1990 - (C2909 * C51499 + C2910 * C1989) + C3224 * C51489 -
             (C117 * C3552 + C51349 * C3555) * C1991 -
             (C117 * C3556 + C51349 * C3561) * C1988) *
                C2434 +
            (C3225 * C1990 - (C661 * C51499 + C660 * C1989) + C3226 * C51489 -
             (C117 * C3553 + C51349 * C3557) * C1991 -
             (C117 * C3558 + C51349 * C3562) * C1988) *
                C2435 +
            (C3227 * C1990 - (C663 * C51499 + C662 * C1989) + C3228 * C51489 -
             (C117 * C3554 + C51349 * C3559) * C1991 -
             (C117 * C3560 + C51349 * C3563) * C1988) *
                C2436) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C51164 * C10915 +
           (C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51164 * C10916 +
           (C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C51164 *
               C10917 +
           (C12686 + C12687 - C12688 - C12689 + C12690 + C12691) * C51164 *
               C10918) *
              C1350 +
          ((C5196 - (C5195 + C5194) + C5197 - C5198 - C5199) * C51164 * C10915 +
           (C10845 - (C10844 + C10843) + C10846 - C10847 - C10848) * C51164 *
               C10916 +
           (C12688 - (C12687 + C12686) + C12689 - C12690 - C12691) * C51164 *
               C10917 +
           (C11411 * C1990 - (C8739 * C51499 + C8738 * C1989) +
            C11412 * C51489 - (C117 * C11612 + C51349 * C11613) * C1991 -
            (C117 * C11614 + C51349 * C11615) * C1988) *
               C51164 * C10918) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C622 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C623 +
           (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
            (((C117 * C745 + C51349 * C753) * C118 +
              (C117 * C752 + C51349 * C757) * C51250) *
                 C2434 +
             (C2917 + C2918) * C2435 + (C2919 + C2920) * C2436) *
                C51337) *
               C624) *
              C51445 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C623 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C622 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C2436 +
             (C2920 + C2919) * C2435 + (C2918 + C2917) * C2434) *
                C51337 +
            ((C671 + C670) * C2436 + C2592 * C2435 + C2894 * C2434) * C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51466 +
           (((C117 * C297 + C51349 * C307) * C118 +
             (C117 * C306 + C51349 * C315) * C51250) *
                C2434 +
            (C348 + C347) * C2435 + C2440 * C2436) *
               C51337) *
              C51220 * C113 -
          ((C351 * C2436 + C352 * C2435 + (C347 + C348) * C2434) * C51337 +
           (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
               C51466) *
              C51220 * C114 +
          ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
           (C2440 * C2434 + (C344 + C343) * C2435 + (C349 + C350) * C2436) *
               C51337) *
              C51220 * C115 -
          ((((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C2436 +
            (C350 + C349) * C2435 + C351 * C2434) *
               C51337 +
           ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C2435 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C2436) *
               C51466 +
           ((C2595 * C989 + C2596 * C986 - C3221 * C990 - C3222 * C987 +
             (C117 * C1146 + C51349 * C1150) * C991 +
             (C117 * C1151 + C51349 * C1158) * C988) *
                C2434 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C2435 +
            (C3391 + C3392 - C3393 - C3394 + C3405 + C3406) * C2436) *
               C51337) *
              C51220 * C51445 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C2434 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C2435 +
            (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C2436) *
               C51466 +
           ((C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C2434 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C2435 +
            (C1615 * C990 - (C335 * C986 + C336 * C989) + C1616 * C987 -
             (C117 * C1149 + C51349 * C1156) * C991 -
             (C117 * C1157 + C51349 * C1161) * C988) *
                C2436) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
           (C3037 + C3038) * C51164 * C10918) *
              C51220 * C113 -
          (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
           C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
              C51220 * C114 +
          (C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
           C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
              C51220 * C115 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C51164 * C10918 +
           (C671 + C670) * C51164 * C10917 + C351 * C51164 * C10916 +
           C191 * C51164 * C10915) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C622 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C623 +
           (C11214 * C10915 + C11218 * C10916 +
            (C8741 + C8742) * C51164 * C10917 +
            ((C117 * C8723 + C51349 * C8727) * C118 +
             (C117 * C8726 + C51349 * C8729) * C51250) *
                C51164 * C10918) *
               C624) *
              C51445 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C623 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C622 -
           (((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51164 * C10918 +
            (C8624 + C8623) * C51164 * C10917 + C11216 * C10916 +
            C11217 * C10915) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C51164 * C10915 +
           (C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51164 * C10916 +
           (C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C51164 * C10917 +
           (C3035 * C989 + C3036 * C986 - C8913 * C990 - C8914 * C987 +
            (C117 * C9229 + C51349 * C9231) * C991 +
            (C117 * C9232 + C51349 * C9235) * C988) *
               C51164 * C10918) *
              C51220 * C51445 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51164 * C10915 +
           (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C51164 * C10916 +
           (C9074 - (C9073 + C9072) + C9075 - C9082 - C9083) * C51164 * C10917 +
           (C8915 * C990 - (C2912 * C986 + C2911 * C989) + C8916 * C987 -
            (C117 * C9230 + C51349 * C9233) * C991 -
            (C117 * C9234 + C51349 * C9236) * C988) *
               C51164 * C10918) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51466 +
           ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) * C51337) *
              C737 -
          ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
           (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
              C738 +
          (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
           ((C3037 + C3038) * C2434 + (C2917 + C2918) * C2435 +
            (C2919 + C2920) * C2436) *
               C51337) *
              C739 -
          ((((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C2436 +
            ((C117 * C3023 + C51349 * C3028) * C51250 +
             (C117 * C3019 + C51349 * C3024) * C118) *
                C2435 +
            ((C117 * C3025 + C51349 * C3029) * C51250 +
             (C117 * C3020 + C51349 * C3026) * C118) *
                C2434) *
               C51337 +
           ((C2920 + C2919) * C2436 + (C2918 + C2917) * C2435 +
            (C3038 + C3037) * C2434) *
               C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C51452 -
           ((C2592 * C2436 + (C667 + C666) * C2435 +
             ((C117 * C633 + C51349 * C642) * C51250 +
              (C117 * C627 + C51349 * C632) * C118) *
                 C2434) *
                C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51236) *
              C291 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            ((C666 + C667) * C2434 + (C668 + C669) * C2435 +
             (C670 + C671) * C2436) *
                C51337) *
               C51236 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C51452) *
              C292 +
          (((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
            (C2440 * C2434 + C2594 * C2435 + (C349 + C350) * C2436) * C51337) *
               C51452 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C2436 +
             (C671 + C670) * C2435 + C2592 * C2434) *
                C51337 +
            ((C350 + C349) * C2436 + C351 * C2435 + C352 * C2434) * C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C989 +
             (C117 * C127 + C51349 * C140) * C986 -
             (C117 * C454 + C51349 * C460) * C990 -
             (C117 * C461 + C51349 * C472) * C987 +
             (C117 * C992 + C51349 * C997) * C991 +
             (C117 * C998 + C51349 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C2435 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C2436) *
               C51466 +
           ((C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C2434 +
            (C3383 + C3384 - C3385 - C3386 + C3403 + C3404) * C2435 +
            (C3391 + C3392 - C3393 - C3394 + C3405 + C3406) * C2436) *
               C51337) *
              C51452 +
          (((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C2434 +
            (C3385 - (C3384 + C3383) + C3386 - C3403 - C3404) * C2435 +
            (C3393 - (C3392 + C3391) + C3394 - C3405 - C3406) * C2436) *
               C51466 +
           ((C3223 * C990 - (C2909 * C986 + C2910 * C989) + C3224 * C987 -
             (C117 * C3552 + C51349 * C3555) * C991 -
             (C117 * C3556 + C51349 * C3561) * C988) *
                C2434 +
            (C3225 * C990 - (C661 * C986 + C660 * C989) + C3226 * C987 -
             (C117 * C3553 + C51349 * C3557) * C991 -
             (C117 * C3558 + C51349 * C3562) * C988) *
                C2435 +
            (C3227 * C990 - (C663 * C986 + C662 * C989) + C3228 * C987 -
             (C117 * C3554 + C51349 * C3559) * C991 -
             (C117 * C3560 + C51349 * C3563) * C988) *
                C2436) *
               C51337) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
            (C3037 + C3038) * C51164 * C10918) *
               C51452 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51236) *
              C291 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51236 -
           (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
            C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
               C51452) *
              C292 +
          ((C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
            C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
               C51452 -
           (((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C51164 * C10918 +
            (C2920 + C2919) * C51164 * C10917 + C2592 * C51164 * C10916 +
            C352 * C51164 * C10915) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
           C11218 * C10918) *
              C737 -
          (C11295 * C10918 + C11290 * C10917 +
           (C2915 + C2916) * C51164 * C10916 +
           (C2598 + C2597) * C51164 * C10915) *
              C738 +
          (C11214 * C10915 + C11218 * C10916 +
           (C8741 + C8742) * C51164 * C10917 +
           (C11298 + C11299) * C51164 * C10918) *
              C739 -
          (((C117 * C11285 + C51349 * C11287) * C51250 +
            (C117 * C11284 + C51349 * C11286) * C118) *
               C51164 * C10918 +
           (C11299 + C11298) * C51164 * C10917 + C11295 * C10916 +
           C11290 * C10915) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C989 +
            (C117 * C127 + C51349 * C140) * C986 -
            (C117 * C454 + C51349 * C460) * C990 -
            (C117 * C461 + C51349 * C472) * C987 +
            (C117 * C992 + C51349 * C997) * C991 +
            (C117 * C998 + C51349 * C1007) * C988) *
               C51164 * C10915 +
           (C3565 + C3566 - C3567 - C3568 + C3575 + C3576) * C51164 * C10916 +
           (C9238 + C9239 - C9240 - C9241 + C9248 + C9249) * C51164 * C10917 +
           (C11617 + C11618 - C11619 - C11620 + C11627 + C11628) * C51164 *
               C10918) *
              C51452 +
          ((C3567 - (C3566 + C3565) + C3568 - C3575 - C3576) * C51164 * C10915 +
           (C9240 - (C9239 + C9238) + C9241 - C9248 - C9249) * C51164 * C10916 +
           (C11619 - (C11618 + C11617) + C11620 - C11627 - C11628) * C51164 *
               C10917 +
           (C11411 * C990 - (C8739 * C986 + C8738 * C989) + C11412 * C987 -
            (C117 * C11612 + C51349 * C11613) * C991 -
            (C117 * C11614 + C51349 * C11615) * C988) *
               C51164 * C10918) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
               C51466 +
           ((C3197 + C3198 - C3229 - C3230) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
               C51337) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C2435 +
            (C1619 - (C1601 + C1602) + C1620) * C2436) *
               C51466 +
           ((C3231 - (C3205 + C3206) + C3232) * C2434 +
            (C3233 - (C3211 + C3212) + C3234) * C2435 +
            (C3235 - (C3217 + C3218) + C3236) * C2436) *
               C51337) *
              C623 +
          (((C3206 + C3205 - C3231 - C3232) * C2434 +
            (C3212 + C3211 - C3233 - C3234) * C2435 +
            (C3218 + C3217 - C3235 - C3236) * C2436) *
               C51466 +
           ((C3035 * C452 + C3036 * C51454 -
             (C117 * C3184 + C51349 * C3187) * C453 -
             (C117 * C3188 + C51349 * C3193) * C51262) *
                C2434 +
            (C2911 * C452 + C2912 * C51454 -
             (C117 * C3185 + C51349 * C3189) * C453 -
             (C117 * C3190 + C51349 * C3194) * C51262) *
                C2435 +
            (C2913 * C452 + C2914 * C51454 -
             (C117 * C3186 + C51349 * C3191) * C453 -
             (C117 * C3192 + C51349 * C3195) * C51262) *
                C2436) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
               C51466 +
           ((C2595 * C452 + C2596 * C51454 -
             (C117 * C856 + C51349 * C864) * C453 -
             (C117 * C865 + C51349 * C880) * C51262) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
               C51337) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C2435 +
            (C517 - (C492 + C491) + C518) * C2436) *
               C51466 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C2435 +
            (C1621 - (C1607 + C1608) + C1622) * C2436) *
               C51337) *
              C51220 * C292 +
          ((C523 * C2434 + C524 * C2435 + (C500 + C499 - C519 - C520) * C2436) *
               C51466 +
           (C2747 * C2434 + (C1608 + C1607 - C1621 - C1622) * C2435 +
            (C341 * C452 + C342 * C51454 -
             (C117 * C1588 + C51349 * C1589) * C453 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C2436) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1232 +
            (C117 * C127 + C51349 * C140) * C1228 -
            (C117 * C454 + C51349 * C460) * C1233 -
            (C117 * C461 + C51349 * C472) * C1229 +
            (C117 * C992 + C51349 * C997) * C1234 +
            (C117 * C998 + C51349 * C1007) * C1230 -
            (C117 * C1236 + C51349 * C1240) * C1235 -
            (C117 * C1241 + C51349 * C1248) * C1231) *
               C2434 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51349 * C1242) * C1235 -
            (C117 * C1243 + C51349 * C1249) * C1231) *
               C2435 +
           (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
            C1039 * C1234 + C1040 * C1230 -
            (C117 * C1238 + C51349 * C1244) * C1235 -
            (C117 * C1245 + C51349 * C1250) * C1231) *
               C2436) *
              C51466 +
          ((C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
            C3573 * C1234 + C3574 * C1230 -
            (C117 * C3674 + C51349 * C3677) * C1235 -
            (C117 * C3678 + C51349 * C3683) * C1231) *
               C2434 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3399 * C1234 + C3400 * C1230 -
            (C117 * C3675 + C51349 * C3679) * C1235 -
            (C117 * C3680 + C51349 * C3684) * C1231) *
               C2435 +
           (C338 * C1232 + C337 * C1228 - C1613 * C1233 - C1614 * C1229 +
            C3401 * C1234 + C3402 * C1230 -
            (C117 * C3676 + C51349 * C3681) * C1235 -
            (C117 * C3682 + C51349 * C3685) * C1231) *
               C2436) *
              C51337) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 +
           C8917 * C51164 * C10917 +
           (C8902 + C8901 - C8919 - C8920) * C51164 * C10918) *
              C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C51164 * C10915 +
           C4180 * C51164 * C10916 + C9844 * C51164 * C10917 +
           (C8921 - (C8907 + C8908) + C8922) * C51164 * C10918) *
              C51220 * C292 +
          (C523 * C51164 * C10915 + C2747 * C51164 * C10916 +
           (C3218 + C3217 - C3235 - C3236) * C51164 * C10917 +
           (C2913 * C452 + C2914 * C51454 -
            (C117 * C3186 + C51349 * C3191) * C453 -
            (C117 * C3192 + C51349 * C3195) * C51262) *
               C51164 * C10918) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 + C11402 * C10917 +
           C11416 * C10918) *
              C622 +
          ((C3229 - (C3198 + C3197) + C3230) * C51164 * C10915 +
           (C3231 - (C3205 + C3206) + C3232) * C51164 * C10916 +
           (C8919 - (C8901 + C8902) + C8920) * C51164 * C10917 +
           (C11414 - (C11406 + C11407) + C11415) * C51164 * C10918) *
              C623 +
          (C11402 * C10915 + C11416 * C10916 +
           (C11407 + C11406 - C11414 - C11415) * C51164 * C10917 +
           (C11296 * C452 + C11297 * C51454 -
            (C117 * C11397 + C51349 * C11398) * C453 -
            (C117 * C11399 + C51349 * C11400) * C51262) *
               C51164 * C10918) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51349 * C126) * C1232 +
           (C117 * C127 + C51349 * C140) * C1228 -
           (C117 * C454 + C51349 * C460) * C1233 -
           (C117 * C461 + C51349 * C472) * C1229 +
           (C117 * C992 + C51349 * C997) * C1234 +
           (C117 * C998 + C51349 * C1007) * C1230 -
           (C117 * C1236 + C51349 * C1240) * C1235 -
           (C117 * C1241 + C51349 * C1248) * C1231) *
              C51164 * C10915 +
          (C2595 * C1232 + C2596 * C1228 - C3221 * C1233 - C3222 * C1229 +
           C3573 * C1234 + C3574 * C1230 -
           (C117 * C3674 + C51349 * C3677) * C1235 -
           (C117 * C3678 + C51349 * C3683) * C1231) *
              C51164 * C10916 +
          (C2910 * C1232 + C2909 * C1228 - C3223 * C1233 - C3224 * C1229 +
           C9246 * C1234 + C9247 * C1230 -
           (C117 * C9347 + C51349 * C9349) * C1235 -
           (C117 * C9350 + C51349 * C9353) * C1231) *
              C51164 * C10917 +
          (C3035 * C1232 + C3036 * C1228 - C8913 * C1233 - C8914 * C1229 +
           C11625 * C1234 + C11626 * C1230 -
           (C117 * C11694 + C51349 * C11695) * C1235 -
           (C117 * C11696 + C51349 * C11697) * C1231) *
              C51164 * C10918) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1722 +
             (C117 * C127 + C51349 * C140) * C1720 -
             (C117 * C454 + C51349 * C460) * C1723 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
               C51466 +
           ((C2595 * C1722 + C2596 * C1720 - C3221 * C1723 - C3222 * C51262) *
                C2434 +
            (C1879 + C1878 - C1877 - C1880) * C2435 + C4330 * C2436) *
               C51337) *
              C51220 * C51497 +
          (((C1727 - (C1726 + C1725) + C1728) * C2434 +
            (C1731 - (C1730 + C1729) + C1732) * C2435 +
            (C1735 - (C1734 + C1733) + C1736) * C2436) *
               C51466 +
           ((C1877 - (C1878 + C1879) + C1880) * C2434 +
            (C1881 - (C1882 + C1883) + C1884) * C2435 +
            (C1885 - (C1886 + C1887) + C1888) * C2436) *
               C51337) *
              C51220 * C51483 +
          ((C1745 * C2434 + C1746 * C2435 +
            (C1739 + C1738 - C1737 - C1740) * C2436) *
               C51466 +
           (C4330 * C2434 + (C1887 + C1886 - C1885 - C1888) * C2435 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51349 * C1589) * C1723 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C2436) *
               C51337) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1722 +
            (C117 * C127 + C51349 * C140) * C1720 -
            (C117 * C454 + C51349 * C460) * C1723 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
           C10694 * C51164 * C10917 +
           (C10691 + C10690 - C10689 - C10692) * C51164 * C10918) *
              C51220 * C51497 +
          ((C1727 - (C1726 + C1725) + C1728) * C51164 * C10915 +
           C4544 * C51164 * C10916 + C10194 * C51164 * C10917 +
           (C10187 - (C10188 + C10189) + C10190) * C51164 * C10918) *
              C51220 * C51483 +
          (C1745 * C51164 * C10915 + C4330 * C51164 * C10916 +
           (C4538 + C4537 - C4536 - C4539) * C51164 * C10917 +
           (C2913 * C1722 + C2914 * C1720 -
            (C117 * C3186 + C51349 * C3191) * C1723 -
            (C117 * C3192 + C51349 * C3195) * C51262) *
               C51164 * C10918) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C51349 * C126) * C1722 +
                       (C117 * C127 + C51349 * C140) * C1720 -
                       (C117 * C454 + C51349 * C460) * C1723 -
                       (C117 * C461 + C51349 * C472) * C51262) *
                          C2434 +
                      (C1725 + C1726 - C1727 - C1728) * C2435 + C1745 * C2436) *
                         C51466 +
                     ((C4525 + C4526 - C4527 - C4528) * C2434 + C4543 * C2435 +
                      C4330 * C2436) *
                         C51337) *
                        C51452 +
                    (((C4527 - (C4526 + C4525) + C4528) * C2434 +
                      C4544 * C2435 + C4545 * C2436) *
                         C51466 +
                     ((C3223 * C1723 - (C2909 * C1720 + C2910 * C1722) +
                       C3224 * C51262) *
                          C2434 +
                      (C4532 - (C4533 + C4534) + C4535) * C2435 +
                      (C4536 - (C4537 + C4538) + C4539) * C2436) *
                         C51337) *
                        C51236) *
                       C1456 +
                   ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
                      (C1731 - (C1730 + C1729) + C1732) * C2435 +
                      (C1735 - (C1734 + C1733) + C1736) * C2436) *
                         C51466 +
                     (C4544 * C2434 + C4545 * C2435 +
                      (C1885 - (C1886 + C1887) + C1888) * C2436) *
                         C51337) *
                        C51452 +
                    ((C4543 * C2434 + C4330 * C2435 +
                      (C1887 + C1886 - C1885 - C1888) * C2436) *
                         C51466 +
                     ((C4534 + C4533 - C4532 - C4535) * C2434 +
                      (C4538 + C4537 - C4536 - C4539) * C2435 +
                      (C664 * C1722 + C665 * C1720 -
                       (C117 * C863 + C51349 * C878) * C1723 -
                       (C117 * C879 + C51349 * C887) * C51262) *
                          C2436) *
                         C51337) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51349 * C126) * C1722 +
                      (C117 * C127 + C51349 * C140) * C1720 -
                      (C117 * C454 + C51349 * C460) * C1723 -
                      (C117 * C461 + C51349 * C472) * C51262) *
                         C51164 * C10915 +
                     (C4525 + C4526 - C4527 - C4528) * C51164 * C10916 +
                     C10694 * C51164 * C10917 +
                     (C10691 + C10690 - C10689 - C10692) * C51164 * C10918) *
                        C51452 +
                    ((C4527 - (C4526 + C4525) + C4528) * C51164 * C10915 +
                     (C5044 - (C5045 + C5046) + C5047) * C51164 * C10916 +
                     (C10689 - (C10690 + C10691) + C10692) * C51164 * C10917 +
                     (C11411 * C1723 - (C8739 * C1720 + C8738 * C1722) +
                      C11412 * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C1456 +
                   (((C1727 - (C1726 + C1725) + C1728) * C51164 * C10915 +
                     C4544 * C51164 * C10916 + C10194 * C51164 * C10917 +
                     (C10187 - (C10188 + C10189) + C10190) * C51164 * C10918) *
                        C51452 +
                    (C4543 * C51164 * C10915 + C10193 * C51164 * C10916 +
                     (C10189 + C10188 - C10187 - C10190) * C51164 * C10917 +
                     (C8619 * C1722 + C8620 * C1720 -
                      (C117 * C8889 + C51349 * C8892) * C1723 -
                      (C117 * C8893 + C51349 * C8895) * C51262) *
                         C51164 * C10918) *
                        C51236) *
                       C51193)) /
                     (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C1989 +
             (C117 * C127 + C51349 * C140) * C51499 -
             (C117 * C454 + C51349 * C460) * C1990 -
             (C117 * C461 + C51349 * C472) * C51489 +
             (C117 * C992 + C51349 * C997) * C1991 +
             (C117 * C998 + C51349 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C2435 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C2436) *
               C51466 +
           ((C2595 * C1989 + C2596 * C51499 - C3221 * C1990 - C3222 * C51489 +
             C3573 * C1991 + C3574 * C1988) *
                C2434 +
            (C4692 + C4693 - C4694 - C4695 + C4696 + C4697) * C2435 +
            (C4698 + C4699 - C4700 - C4701 + C4702 + C4703) * C2436) *
               C51337) *
              C51220 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C2434 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C2435 +
            (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C2436) *
               C51466 +
           ((C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C2434 +
            (C4700 - (C4699 + C4698) + C4701 - C4702 - C4703) * C2435 +
            (C1615 * C1990 - (C335 * C51499 + C336 * C1989) + C1616 * C51489 -
             (C117 * C1149 + C51349 * C1156) * C1991 -
             (C117 * C1157 + C51349 * C1161) * C1988) *
                C2436) *
               C51337) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C1989 +
            (C117 * C127 + C51349 * C140) * C51499 -
            (C117 * C454 + C51349 * C460) * C1990 -
            (C117 * C461 + C51349 * C472) * C51489 +
            (C117 * C992 + C51349 * C997) * C1991 +
            (C117 * C998 + C51349 * C1007) * C1988) *
               C51164 * C10915 +
           (C5194 + C5195 - C5196 - C5197 + C5198 + C5199) * C51164 * C10916 +
           (C10843 + C10844 - C10845 - C10846 + C10847 + C10848) * C51164 *
               C10917 +
           (C3035 * C1989 + C3036 * C51499 - C8913 * C1990 - C8914 * C51489 +
            C11625 * C1991 + C11626 * C1988) *
               C51164 * C10918) *
              C51220 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51164 * C10915 +
           (C4694 - (C4693 + C4692) + C4695 - C4696 - C4697) * C51164 * C10916 +
           (C10343 - (C10342 + C10341) + C10344 - C10345 - C10346) * C51164 *
               C10917 +
           (C8915 * C1990 - (C2912 * C51499 + C2911 * C1989) + C8916 * C51489 -
            (C117 * C9230 + C51349 * C9233) * C1991 -
            (C117 * C9234 + C51349 * C9236) * C1988) *
               C51164 * C10918) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51466 +
           (((C117 * C297 + C51349 * C307) * C118 +
             (C117 * C306 + C51349 * C315) * C51250) *
                C2434 +
            (C348 + C347) * C2435 + C2440 * C2436) *
               C51337) *
              C51220 * C113 -
          ((C351 * C2436 + C352 * C2435 + (C347 + C348) * C2434) * C51337 +
           (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
               C51466) *
              C51220 * C114 +
          ((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
           (C2440 * C2434 + (C344 + C343) * C2435 + (C349 + C350) * C2436) *
               C51337) *
              C51220 * C115 -
          ((((C117 * C310 + C51349 * C317) * C51250 +
             (C117 * C299 + C51349 * C311) * C118) *
                C2436 +
            (C350 + C349) * C2435 + C351 * C2434) *
               C51337 +
           ((C187 + C186) * C2436 + C190 * C2435 + C191 * C2434) * C51466) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C622 -
           ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C623 +
           (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
            (((C117 * C745 + C51349 * C753) * C118 +
              (C117 * C752 + C51349 * C757) * C51250) *
                 C2434 +
             (C2917 + C2918) * C2435 + (C2919 + C2920) * C2436) *
                C51337) *
               C624) *
              C51445 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            (C2899 * C2434 + C2900 * C2435 + (C670 + C671) * C2436) * C51337) *
               C623 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C622 -
           ((((C117 * C746 + C51349 * C754) * C51250 +
              (C117 * C742 + C51349 * C747) * C118) *
                 C2436 +
             (C2920 + C2919) * C2435 + (C2918 + C2917) * C2434) *
                C51337 +
            ((C671 + C670) * C2436 + C2592 * C2435 + C2894 * C2434) * C51466) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
           (C3037 + C3038) * C51164 * C10918) *
              C51220 * C113 -
          (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
           C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
              C51220 * C114 +
          (C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
           C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
              C51220 * C115 -
          (((C117 * C746 + C51349 * C754) * C51250 +
            (C117 * C742 + C51349 * C747) * C118) *
               C51164 * C10918 +
           (C671 + C670) * C51164 * C10917 + C351 * C51164 * C10916 +
           C191 * C51164 * C10915) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
            C11218 * C10918) *
               C622 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C623 +
           (C11214 * C10915 + C11218 * C10916 +
            (C8741 + C8742) * C51164 * C10917 +
            ((C117 * C8723 + C51349 * C8727) * C118 +
             (C117 * C8726 + C51349 * C8729) * C51250) *
                C51164 * C10918) *
               C624) *
              C51445 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C623 -
           (C11216 * C10918 + C11217 * C10917 + C2593 * C51164 * C10916 +
            (C179 + C178) * C51164 * C10915) *
               C622 -
           (((C117 * C8724 + C51349 * C8728) * C51250 +
             (C117 * C8722 + C51349 * C8725) * C118) *
                C51164 * C10918 +
            (C8624 + C8623) * C51164 * C10917 + C11216 * C10916 +
            C11217 * C10915) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51349 * C126) * C118 +
              (C117 * C127 + C51349 * C140) * C51250) *
                 C2434 +
             (C178 + C179) * C2435 + C188 * C2436) *
                C51466 +
            ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) *
                C51337) *
               C51452 -
           ((C2592 * C2436 + (C667 + C666) * C2435 +
             ((C117 * C633 + C51349 * C642) * C51250 +
              (C117 * C627 + C51349 * C632) * C118) *
                 C2434) *
                C51337 +
            (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
               C51236) *
              C291 +
          (((C2591 * C2434 + C2440 * C2435 + C2594 * C2436) * C51466 +
            ((C666 + C667) * C2434 + (C668 + C669) * C2435 +
             (C670 + C671) * C2436) *
                C51337) *
               C51236 -
           ((C351 * C2436 + C352 * C2435 + C2593 * C2434) * C51337 +
            (C191 * C2436 + (C181 + C180) * C2435 + (C179 + C178) * C2434) *
                C51466) *
               C51452) *
              C292 +
          (((C188 * C2434 + C189 * C2435 + (C185 + C184) * C2436) * C51466 +
            (C2440 * C2434 + C2594 * C2435 + (C349 + C350) * C2436) * C51337) *
               C51452 -
           ((((C117 * C640 + C51349 * C646) * C51250 +
              (C117 * C631 + C51349 * C641) * C118) *
                 C2436 +
             (C671 + C670) * C2435 + C2592 * C2434) *
                C51337 +
            ((C350 + C349) * C2436 + C351 * C2435 + C352 * C2434) * C51466) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C2434 +
            (C178 + C179) * C2435 + C188 * C2436) *
               C51466 +
           ((C2597 + C2598) * C2434 + C2591 * C2435 + C2440 * C2436) * C51337) *
              C737 -
          ((C2592 * C2436 + C2894 * C2435 + (C2915 + C2916) * C2434) * C51337 +
           (C352 * C2436 + C2593 * C2435 + (C2598 + C2597) * C2434) * C51466) *
              C738 +
          (((C2916 + C2915) * C2434 + C2899 * C2435 + C2900 * C2436) * C51466 +
           ((C3037 + C3038) * C2434 + (C2917 + C2918) * C2435 +
            (C2919 + C2920) * C2436) *
               C51337) *
              C739 -
          ((((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C2436 +
            ((C117 * C3023 + C51349 * C3028) * C51250 +
             (C117 * C3019 + C51349 * C3024) * C118) *
                C2435 +
            ((C117 * C3025 + C51349 * C3029) * C51250 +
             (C117 * C3020 + C51349 * C3026) * C118) *
                C2434) *
               C51337 +
           ((C2920 + C2919) * C2436 + (C2918 + C2917) * C2435 +
            (C3038 + C3037) * C2434) *
               C51466) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C118 +
             (C117 * C127 + C51349 * C140) * C51250) *
                C51164 * C10915 +
            (C2597 + C2598) * C51164 * C10916 + C8608 * C51164 * C10917 +
            (C3037 + C3038) * C51164 * C10918) *
               C51452 -
           ((C8742 + C8741) * C51164 * C10918 + C8732 * C51164 * C10917 +
            (C2915 + C2916) * C51164 * C10916 +
            (C2598 + C2597) * C51164 * C10915) *
               C51236) *
              C291 +
          ((C2591 * C51164 * C10915 + C2899 * C51164 * C10916 +
            C8611 * C51164 * C10917 + (C8623 + C8624) * C51164 * C10918) *
               C51236 -
           (C8610 * C51164 * C10918 + C2894 * C51164 * C10917 +
            C2593 * C51164 * C10916 + (C179 + C178) * C51164 * C10915) *
               C51452) *
              C292 +
          ((C188 * C51164 * C10915 + C2440 * C51164 * C10916 +
            C2900 * C51164 * C10917 + (C2919 + C2920) * C51164 * C10918) *
               C51452 -
           (((C117 * C3021 + C51349 * C3027) * C51250 +
             (C117 * C3018 + C51349 * C3022) * C118) *
                C51164 * C10918 +
            (C2920 + C2919) * C51164 * C10917 + C2592 * C51164 * C10916 +
            C352 * C51164 * C10915) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C118 +
            (C117 * C127 + C51349 * C140) * C51250) *
               C51164 * C10915 +
           (C2597 + C2598) * C51164 * C10916 + C11214 * C10917 +
           C11218 * C10918) *
              C737 -
          (C11295 * C10918 + C11290 * C10917 +
           (C2915 + C2916) * C51164 * C10916 +
           (C2598 + C2597) * C51164 * C10915) *
              C738 +
          (C11214 * C10915 + C11218 * C10916 +
           (C8741 + C8742) * C51164 * C10917 +
           (C11298 + C11299) * C51164 * C10918) *
              C739 -
          (((C117 * C11285 + C51349 * C11287) * C51250 +
            (C117 * C11284 + C51349 * C11286) * C118) *
               C51164 * C10918 +
           (C11299 + C11298) * C51164 * C10917 + C11295 * C10916 +
           C11290 * C10915) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
               C51466 +
           ((C2595 * C452 + C2596 * C51454 -
             (C117 * C856 + C51349 * C864) * C453 -
             (C117 * C865 + C51349 * C880) * C51262) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
               C51337) *
              C51220 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C2435 +
            (C517 - (C492 + C491) + C518) * C2436) *
               C51466 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C2435 +
            (C1621 - (C1607 + C1608) + C1622) * C2436) *
               C51337) *
              C51220 * C292 +
          ((C523 * C2434 + C524 * C2435 + (C500 + C499 - C519 - C520) * C2436) *
               C51466 +
           (C2747 * C2434 + (C1608 + C1607 - C1621 - C1622) * C2435 +
            (C341 * C452 + C342 * C51454 -
             (C117 * C1588 + C51349 * C1589) * C453 -
             (C117 * C1590 + C51349 * C1591) * C51262) *
                C2436) *
               C51337) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51349 * C126) * C452 +
             (C117 * C127 + C51349 * C140) * C51454 -
             (C117 * C454 + C51349 * C460) * C453 -
             (C117 * C461 + C51349 * C472) * C51262) *
                C2434 +
            (C479 + C480 - C513 - C514) * C2435 + C523 * C2436) *
               C51466 +
           ((C3197 + C3198 - C3229 - C3230) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C2435 + C2747 * C2436) *
               C51337) *
              C622 +
          (((C3229 - (C3198 + C3197) + C3230) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C2435 +
            (C1619 - (C1601 + C1602) + C1620) * C2436) *
               C51466 +
           ((C3231 - (C3205 + C3206) + C3232) * C2434 +
            (C3233 - (C3211 + C3212) + C3234) * C2435 +
            (C3235 - (C3217 + C3218) + C3236) * C2436) *
               C51337) *
              C623 +
          (((C3206 + C3205 - C3231 - C3232) * C2434 +
            (C3212 + C3211 - C3233 - C3234) * C2435 +
            (C3218 + C3217 - C3235 - C3236) * C2436) *
               C51466 +
           ((C3035 * C452 + C3036 * C51454 -
             (C117 * C3184 + C51349 * C3187) * C453 -
             (C117 * C3188 + C51349 * C3193) * C51262) *
                C2434 +
            (C2911 * C452 + C2912 * C51454 -
             (C117 * C3185 + C51349 * C3189) * C453 -
             (C117 * C3190 + C51349 * C3194) * C51262) *
                C2435 +
            (C2913 * C452 + C2914 * C51454 -
             (C117 * C3186 + C51349 * C3191) * C453 -
             (C117 * C3192 + C51349 * C3195) * C51262) *
                C2436) *
               C51337) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 +
           C8917 * C51164 * C10917 +
           (C8902 + C8901 - C8919 - C8920) * C51164 * C10918) *
              C51220 * C291 +
          ((C513 - (C480 + C479) + C514) * C51164 * C10915 +
           C4180 * C51164 * C10916 + C9844 * C51164 * C10917 +
           (C8921 - (C8907 + C8908) + C8922) * C51164 * C10918) *
              C51220 * C292 +
          (C523 * C51164 * C10915 + C2747 * C51164 * C10916 +
           (C3218 + C3217 - C3235 - C3236) * C51164 * C10917 +
           (C2913 * C452 + C2914 * C51454 -
            (C117 * C3186 + C51349 * C3191) * C453 -
            (C117 * C3192 + C51349 * C3195) * C51262) *
               C51164 * C10918) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51349 * C126) * C452 +
            (C117 * C127 + C51349 * C140) * C51454 -
            (C117 * C454 + C51349 * C460) * C453 -
            (C117 * C461 + C51349 * C472) * C51262) *
               C51164 * C10915 +
           (C3197 + C3198 - C3229 - C3230) * C51164 * C10916 + C11402 * C10917 +
           C11416 * C10918) *
              C622 +
          ((C3229 - (C3198 + C3197) + C3230) * C51164 * C10915 +
           (C3231 - (C3205 + C3206) + C3232) * C51164 * C10916 +
           (C8919 - (C8901 + C8902) + C8920) * C51164 * C10917 +
           (C11414 - (C11406 + C11407) + C11415) * C51164 * C10918) *
              C623 +
          (C11402 * C10915 + C11416 * C10916 +
           (C11407 + C11406 - C11414 - C11415) * C51164 * C10917 +
           (C11296 * C452 + C11297 * C51454 -
            (C117 * C11397 + C51349 * C11398) * C453 -
            (C117 * C11399 + C51349 * C11400) * C51262) *
               C51164 * C10918) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C1350 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51236) *
              C51497 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51236 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C1350) *
              C51483 +
          ((C5358 * C2434 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
            ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
               C51323 * C1350 -
           (((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C2436 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C2435 +
            C5546 * C2434) *
               C51323 * C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C1350 -
           (C13403 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51236) *
              C51497 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C51236 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C1350) *
              C51483 +
          ((C5358 * C51164 * C8166 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
                C8167 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
                C8168) *
               C1350 -
           (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                 C51250 +
             (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                 C118) *
                C51164 * C8168 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51164 *
                C8167 +
            C5546 * C51164 * C8166) *
               C51236) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C51498 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51486 +
           (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                 C118 +
             (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                 C51250) *
                C2434 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
               C51323 * C1455) *
              C1456 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51486 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C51498 -
           (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                 C51250 +
             (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                 C118) *
                C2436 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C2435 +
            ((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C2434) *
               C51323 * C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C51498 -
           (C13403 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51486 +
           (C13286 * C8166 +
            ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
                C8167 +
            ((C13398 + C13399) * C118 + (C13400 + C13401) * C51250) * C51164 *
                C8168) *
               C1455) *
              C1456 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C51486 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C51498 -
           (((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51164 * C8168 +
            ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51164 *
                C8167 +
            C13287 * C8166) *
               C1455) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C2434 +
            ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
             (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
                C2435 +
            C5737 * C2436) *
               C51323 * C1350 +
           (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                 C453 -
             ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                  C51454 +
              (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                  C452) +
             (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                 C51262) *
                C2434 +
            ((C7080 + C7081) * C453 -
             ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
             (C7082 + C7083) * C51262) *
                C2435 +
            ((C7084 + C7085) * C453 - (C5542 * C51454 + C5543 * C452) +
             (C7086 + C7087) * C51262) *
                C2436) *
               C51323 * C51236) *
              C1456 +
          ((((C5720 + C5719) * C453 -
             ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
             (C5722 + C5721) * C51262) *
                C2434 +
            ((C5725 + C5724) * C453 -
             ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
             (C5727 + C5726) * C51262) *
                C2435 +
            ((C5728 + C5729) * C453 - (C5352 * C51454 + C5353 * C452) +
             (C5730 + C5731) * C51262) *
                C2436) *
               C51323 * C1350 +
           (((C5537 + C5536) * C452 + (C5535 + C5534) * C51454 -
             (C7081 + C7080) * C453 - (C7083 + C7082) * C51262) *
                C2434 +
            ((C5533 + C5532) * C452 + (C5531 + C5530) * C51454 -
             (C7085 + C7084) * C453 - (C7087 + C7086) * C51262) *
                C2435 +
            ((C5538 + C5539) * C452 + (C5540 + C5541) * C51454 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C453 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C2436) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C452 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51454 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C453 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C51164 * C8166 +
            ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
             (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
                C51164 * C8167 +
            C13595 * C8168) *
               C1350 +
           (((C13577 + C13576) * C453 -
             ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
             (C13579 + C13578) * C51262) *
                C51164 * C8166 +
            ((C13582 + C13581) * C453 -
             ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
             (C13584 + C13583) * C51262) *
                C51164 * C8167 +
            ((C13585 + C13586) * C453 - (C13386 * C51454 + C13387 * C452) +
             (C13587 + C13588) * C51262) *
                C51164 * C8168) *
               C51236) *
              C1456 +
          ((((C5720 + C5719) * C453 -
             ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
             (C5722 + C5721) * C51262) *
                C51164 * C8166 +
            ((C7080 + C7081) * C453 -
             ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
             (C7082 + C7083) * C51262) *
                C51164 * C8167 +
            ((C14512 + C14513) * C453 - (C13270 * C51454 + C13271 * C452) +
             (C14514 + C14515) * C51262) *
                C51164 * C8168) *
               C1350 +
           (((C5537 + C5536) * C452 + (C5535 + C5534) * C51454 -
             (C7081 + C7080) * C453 - (C7083 + C7082) * C51262) *
                C51164 * C8166 +
            ((C5900 + C5901) * C452 + (C5902 + C5903) * C51454 -
             (C14513 + C14512) * C453 - (C14515 + C14514) * C51262) *
                C51164 * C8167 +
            ((C13278 + C13279) * C452 + (C13280 + C13281) * C51454 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C453 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51164 * C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C2434 +
            ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
             (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                C2435 +
            C7240 * C2436) *
               C51323 * C1350 +
           (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                 C1723 -
             ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                  C1720 +
              (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                  C1722) +
             (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                 C51262) *
                C2434 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C2435 +
            ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
             (C7086 + C7087) * C51262) *
                C2436) *
               C51323 * C51236) *
              C51445 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C2434 +
            ((C5725 + C5724) * C1723 -
             ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
             (C5727 + C5726) * C51262) *
                C2435 +
            ((C5728 + C5729) * C1723 - (C5352 * C1720 + C5353 * C1722) +
             (C5730 + C5731) * C51262) *
                C2436) *
               C51323 * C1350 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C2434 +
            ((C5533 + C5532) * C1722 + (C5531 + C5530) * C1720 -
             (C7085 + C7084) * C1723 - (C7087 + C7086) * C51262) *
                C2435 +
            ((C5538 + C5539) * C1722 + (C5540 + C5541) * C1720 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C1723 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C2436) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C51164 * C8166 +
            ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
             (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                C51164 * C8167 +
            (C13252 * C1722 + C13253 * C1720 - C13589 * C1723 -
             C13590 * C51262) *
                C51164 * C8168) *
               C1350 +
           (((C13577 + C13576) * C1723 -
             ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
             (C13579 + C13578) * C51262) *
                C51164 * C8166 +
            ((C13582 + C13581) * C1723 -
             ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
             (C13584 + C13583) * C51262) *
                C51164 * C8167 +
            ((C13585 + C13586) * C1723 - (C13386 * C1720 + C13387 * C1722) +
             (C13587 + C13588) * C51262) *
                C51164 * C8168) *
               C51236) *
              C51445 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C51164 * C8166 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C51164 * C8167 +
            ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
             (C14514 + C14515) * C51262) *
                C51164 * C8168) *
               C1350 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C51164 * C8166 +
            ((C5900 + C5901) * C1722 + (C5902 + C5903) * C1720 -
             (C14513 + C14512) * C1723 - (C14515 + C14514) * C51262) *
                C51164 * C8167 +
            ((C13278 + C13279) * C1722 + (C13280 + C13281) * C1720 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C1723 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51164 * C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
            (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
               C2435 +
           C7240 * C2436) *
              C51323 * C51498 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C1723 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C1720 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C1722) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51262) *
               C2434 +
           ((C7080 + C7081) * C1723 -
            ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
            (C7082 + C7083) * C51262) *
               C2435 +
           ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
            (C7086 + C7087) * C51262) *
               C2436) *
              C51323 * C51486 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C1722 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C1720 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C1723 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C2434 +
           ((C5900 + C5901) * C1722 + (C5902 + C5903) * C1720 -
            (C5300 * C3553 + C51361 * C3557 + C5299 * C861 + C51467 * C874) *
                C1723 -
            (C5300 * C3558 + C51361 * C3562 + C5299 * C875 + C51467 * C885) *
                C51262) *
               C2435 +
           ((C5904 + C5905) * C1722 + (C5906 + C5907) * C1720 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C1723 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C2436) *
              C51323 * C1455) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
            (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           C15349 * C8168) *
              C51498 +
          (((C13577 + C13576) * C1723 -
            ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
            (C13579 + C13578) * C51262) *
               C51164 * C8166 +
           ((C13582 + C13581) * C1723 -
            ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
            (C13584 + C13583) * C51262) *
               C51164 * C8167 +
           ((C13585 + C13586) * C1723 - (C13386 * C1720 + C13387 * C1722) +
            (C13587 + C13588) * C51262) *
               C51164 * C8168) *
              C51486 +
          (C15349 * C8166 +
           ((C13277 + C13276) * C1722 + (C13275 + C13274) * C1720 -
            (C13586 + C13585) * C1723 - (C13588 + C13587) * C51262) *
               C51164 * C8167 +
           ((C13398 + C13399) * C1722 + (C13400 + C13401) * C1720 -
            (C5300 * C11612 + C51361 * C11613 + C5299 * C8888 +
             C51467 * C8890) *
                C1723 -
            (C5300 * C11614 + C51361 * C11615 + C5299 * C8891 +
             C51467 * C8894) *
                C51262) *
               C51164 * C8168) *
              C1455) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C2434 +
           ((C5334 + C5335) * C1989 + (C5336 + C5337) * C51499 -
            (C5719 + C5720) * C1990 - (C5721 + C5722) * C51489 +
            (C6314 + C6315) * C1991 + (C6316 + C6317) * C1988) *
               C2435 +
           (C5350 * C1989 + C5351 * C51499 - C5732 * C1990 - C5733 * C51489 +
            (C6318 + C6319) * C1991 + (C6320 + C6321) * C1988) *
               C2436) *
              C51323 * C1350 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C1990 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51499 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C1989) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51489 -
            (C5300 * C3674 + C51361 * C3677 + C5299 * C1146 + C51467 * C1150) *
                C1991 -
            (C5300 * C3678 + C51361 * C3683 + C5299 * C1151 + C51467 * C1158) *
                C1988) *
               C2434 +
           ((C7080 + C7081) * C1990 -
            ((C5534 + C5535) * C51499 + (C5536 + C5537) * C1989) +
            (C7082 + C7083) * C51489 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C1991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C1988) *
               C2435 +
           ((C7084 + C7085) * C1990 - (C5542 * C51499 + C5543 * C1989) +
            (C7086 + C7087) * C51489 -
            (C5300 * C3676 + C51361 * C3681 + C5299 * C1148 + C51467 * C1154) *
                C1991 -
            (C5300 * C3682 + C51361 * C3685 + C5299 * C1155 + C51467 * C1160) *
                C1988) *
               C2436) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1989 + (C12954 + C12955) * C51499 -
            (C13576 + C13577) * C1990 - (C13578 + C13579) * C51489 +
            (C13904 + C13905) * C1991 + (C13906 + C13907) * C1988) *
               C51164 * C8167 +
           (C13252 * C1989 + C13253 * C51499 - C13589 * C1990 -
            C13590 * C51489 + (C13908 + C13909) * C1991 +
            (C13910 + C13911) * C1988) *
               C51164 * C8168) *
              C1350 +
          (((C13577 + C13576) * C1990 -
            ((C12955 + C12954) * C51499 + (C12953 + C12952) * C1989) +
            (C13579 + C13578) * C51489 - (C13905 + C13904) * C1991 -
            (C13907 + C13906) * C1988) *
               C51164 * C8166 +
           ((C13582 + C13581) * C1990 -
            ((C12959 + C12958) * C51499 + (C12957 + C12956) * C1989) +
            (C13584 + C13583) * C51489 - (C13909 + C13908) * C1991 -
            (C13911 + C13910) * C1988) *
               C51164 * C8167 +
           ((C13585 + C13586) * C1990 - (C13386 * C51499 + C13387 * C1989) +
            (C13587 + C13588) * C51489 -
            (C5300 * C11694 + C51361 * C11695 + C5299 * C9229 +
             C51467 * C9231) *
                C1991 -
            (C5300 * C11696 + C51361 * C11697 + C5299 * C9232 +
             C51467 * C9235) *
                C1988) *
               C51164 * C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C622 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C623 +
           (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                 C118 +
             (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                 C51250) *
                C2434 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
               C51323 * C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C623 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C622 -
           (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                 C51250 +
             (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                 C118) *
                C2436 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C2435 +
            ((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C2434) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C2434 +
           ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
           C5358 * C2436) *
              C51323 * C51220 * C113 -
          (C5359 * C2436 +
           ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
              C51323 * C51220 * C114 +
          (C5358 * C2434 +
           ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
           ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
              C51323 * C51220 * C115 -
          (((C5300 * C471 + C51361 * C477 + C5299 * C137 + C51467 * C145) *
                C51250 +
            (C5300 * C459 + C51361 * C470 + C5299 * C124 + C51467 * C136) *
                C118) *
               C2436 +
           ((C5349 + C5348) * C51250 + (C5347 + C5346) * C118) * C2435 +
           C5359 * C2434) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C2434 +
           ((C5334 + C5335) * C989 + (C5336 + C5337) * C986 -
            (C5719 + C5720) * C990 - (C5721 + C5722) * C987 +
            (C6314 + C6315) * C991 + (C6316 + C6317) * C988) *
               C2435 +
           (C5350 * C989 + C5351 * C986 - C5732 * C990 - C5733 * C987 +
            (C6318 + C6319) * C991 + (C6320 + C6321) * C988) *
               C2436) *
              C51323 * C51220 * C51445 +
          (((C5720 + C5719) * C990 -
            ((C5337 + C5336) * C986 + (C5335 + C5334) * C989) +
            (C5722 + C5721) * C987 - (C6315 + C6314) * C991 -
            (C6317 + C6316) * C988) *
               C2434 +
           ((C5725 + C5724) * C990 -
            ((C5341 + C5340) * C986 + (C5339 + C5338) * C989) +
            (C5727 + C5726) * C987 - (C6319 + C6318) * C991 -
            (C6321 + C6320) * C988) *
               C2435 +
           ((C5728 + C5729) * C990 - (C5352 * C986 + C5353 * C989) +
            (C5730 + C5731) * C987 -
            (C5300 * C1239 + C51361 * C1246 + C5299 * C995 + C51467 * C1003) *
                C991 -
            (C5300 * C1247 + C51361 * C1251 + C5299 * C1004 + C51467 * C1010) *
                C988) *
               C2436) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C5299 * C297 + C51467 * C307 + C5300 * C856 + C51361 * C864) *
                C118 +
            (C5299 * C306 + C51467 * C315 + C5300 * C865 + C51361 * C880) *
                C51250) *
               C51164 * C8167 +
           ((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C51164 * C8168) *
              C51220 * C113 -
          (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
               C8168 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
               C8167 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
               C8166) *
              C51220 * C114 +
          (C5358 * C51164 * C8166 +
           ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
               C8167 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
               C8168) *
              C51220 * C115 -
          (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                C51250 +
            (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                C118) *
               C51164 * C8168 +
           ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51164 *
               C8167 +
           C5359 * C51164 * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C622 -
           (((C13274 + C13275) * C51250 + (C13276 + C13277) * C118) * C51164 *
                C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C623 +
           (C13286 * C8166 +
            ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
                C8167 +
            ((C5299 * C3020 + C51467 * C3026 + C5300 * C8888 + C51361 * C8890) *
                 C118 +
             (C5299 * C3025 + C51467 * C3029 + C5300 * C8891 + C51361 * C8894) *
                 C51250) *
                C51164 * C8168) *
               C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C623 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C622 -
           (((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51164 * C8168 +
            ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51164 *
                C8167 +
            C13287 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C989 + (C12954 + C12955) * C986 -
            (C13576 + C13577) * C990 - (C13578 + C13579) * C987 +
            (C5299 * C1146 + C51467 * C1150 + C5300 * C3674 + C51361 * C3677) *
                C991 +
            (C5299 * C1151 + C51467 * C1158 + C5300 * C3678 + C51361 * C3683) *
                C988) *
               C51164 * C8167 +
           (C13252 * C989 + C13253 * C986 - C13589 * C990 - C13590 * C987 +
            (C5299 * C3552 + C51467 * C3555 + C5300 * C9347 + C51361 * C9349) *
                C991 +
            (C5299 * C3556 + C51467 * C3561 + C5300 * C9350 + C51361 * C9353) *
                C988) *
               C51164 * C8168) *
              C51220 * C51445 +
          (((C5720 + C5719) * C990 -
            ((C5337 + C5336) * C986 + (C5335 + C5334) * C989) +
            (C5722 + C5721) * C987 - (C6315 + C6314) * C991 -
            (C6317 + C6316) * C988) *
               C51164 * C8166 +
           ((C7080 + C7081) * C990 -
            ((C5534 + C5535) * C986 + (C5536 + C5537) * C989) +
            (C7082 + C7083) * C987 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C988) *
               C51164 * C8167 +
           ((C5299 * C861 + C51467 * C874 + C5300 * C3553 + C51361 * C3557) *
                C990 -
            (C13270 * C986 + C13271 * C989) +
            (C5299 * C875 + C51467 * C885 + C5300 * C3558 + C51361 * C3562) *
                C987 -
            (C5300 * C9348 + C51361 * C9351 + C5299 * C3553 + C51467 * C3557) *
                C991 -
            (C5300 * C9352 + C51361 * C9354 + C5299 * C3558 + C51467 * C3562) *
                C988) *
               C51164 * C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C2434 +
           ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
           C5358 * C2436) *
              C51323 * C737 -
          (C5546 * C2436 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
           ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                C51250 +
            (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                C118) *
               C2434) *
              C51323 * C738 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C2434 +
           ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
              C51323 * C739 -
          (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                C51250 +
            (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                C118) *
               C2436 +
           ((C5300 * C3190 + C51361 * C3194 + C5299 * C750 + C51467 * C756) *
                C51250 +
            (C5300 * C3185 + C51361 * C3189 + C5299 * C744 + C51467 * C751) *
                C118) *
               C2435 +
           ((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                C51250 +
            (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                C118) *
               C2434) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C51452 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51236 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C51452) *
              C292 +
          ((C5358 * C2434 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
            ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
               C51323 * C51452 -
           (((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C2436 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C2435 +
            C5546 * C2434) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C2434 +
           ((C5334 + C5335) * C989 + (C5336 + C5337) * C986 -
            (C5719 + C5720) * C990 - (C5721 + C5722) * C987 +
            (C6314 + C6315) * C991 + (C6316 + C6317) * C988) *
               C2435 +
           (C5350 * C989 + C5351 * C986 - C5732 * C990 - C5733 * C987 +
            (C6318 + C6319) * C991 + (C6320 + C6321) * C988) *
               C2436) *
              C51323 * C51452 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C990 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C986 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C989) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C987 -
            (C5300 * C3674 + C51361 * C3677 + C5299 * C1146 + C51467 * C1150) *
                C991 -
            (C5300 * C3678 + C51361 * C3683 + C5299 * C1151 + C51467 * C1158) *
                C988) *
               C2434 +
           ((C5299 * C857 + C51467 * C866 + C5300 * C1147 + C51361 * C1152) *
                C990 -
            ((C5534 + C5535) * C986 + (C5536 + C5537) * C989) +
            (C5299 * C867 + C51467 * C881 + C5300 * C1153 + C51361 * C1159) *
                C987 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C988) *
               C2435 +
           ((C5299 * C858 + C51467 * C868 + C5300 * C1148 + C51361 * C1154) *
                C990 -
            (C5542 * C986 + C5543 * C989) +
            (C5299 * C869 + C51467 * C882 + C5300 * C1155 + C51361 * C1160) *
                C987 -
            (C5300 * C3676 + C51361 * C3681 + C5299 * C1148 + C51467 * C1154) *
                C991 -
            (C5300 * C3682 + C51361 * C3685 + C5299 * C1155 + C51467 * C1160) *
                C988) *
               C2436) *
              C51323 * C51236) *
         C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            ((C12956 + C12957) * C118 + (C12958 + C12959) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                 C51250 +
             (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                 C118) *
                C51164 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C5299 * C744 + C51467 * C751 + C5300 * C3185 + C51361 * C3189) *
                 C118 +
             (C5299 * C750 + C51467 * C756 + C5300 * C3190 + C51361 * C3194) *
                 C51250) *
                C51164 * C8168) *
               C51236 -
           (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
                C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C51452) *
              C292 +
          ((C5358 * C51164 * C8166 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
                C8167 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                 C51250 +
             (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                 C118) *
                C51164 * C8168 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51164 *
                C8167 +
            C5546 * C51164 * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
               C8167 +
           C13286 * C8168) *
              C737 -
          (C13403 * C8168 +
           ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
               C8167 +
           ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
               C8166) *
              C738 +
          (C13286 * C8166 +
           ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
               C8167 +
           ((C13398 + C13399) * C118 + (C13400 + C13401) * C51250) * C51164 *
               C8168) *
              C739 -
          (((C5300 * C11399 + C51361 * C11400 + C5299 * C8726 +
             C51467 * C8729) *
                C51250 +
            (C5300 * C11397 + C51361 * C11398 + C5299 * C8723 +
             C51467 * C8727) *
                C118) *
               C51164 * C8168 +
           ((C13401 + C13400) * C51250 + (C13399 + C13398) * C118) * C51164 *
               C8167 +
           C13403 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C986 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C987 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C989 + (C12954 + C12955) * C986 -
            (C13576 + C13577) * C990 - (C13578 + C13579) * C987 +
            (C13904 + C13905) * C991 + (C13906 + C13907) * C988) *
               C51164 * C8167 +
           (C13252 * C989 + C13253 * C986 - C13589 * C990 - C13590 * C987 +
            (C13908 + C13909) * C991 + (C13910 + C13911) * C988) *
               C51164 * C8168) *
              C51452 +
          (((C13577 + C13576) * C990 -
            ((C12955 + C12954) * C986 + (C12953 + C12952) * C989) +
            (C13579 + C13578) * C987 - (C13905 + C13904) * C991 -
            (C13907 + C13906) * C988) *
               C51164 * C8166 +
           ((C13582 + C13581) * C990 -
            ((C12959 + C12958) * C986 + (C12957 + C12956) * C989) +
            (C13584 + C13583) * C987 - (C13909 + C13908) * C991 -
            (C13911 + C13910) * C988) *
               C51164 * C8167 +
           ((C13585 + C13586) * C990 - (C13386 * C986 + C13387 * C989) +
            (C13587 + C13588) * C987 -
            (C5300 * C11694 + C51361 * C11695 + C5299 * C9229 +
             C51467 * C9231) *
                C991 -
            (C5300 * C11696 + C51361 * C11697 + C5299 * C9232 +
             C51467 * C9235) *
                C988) *
               C51164 * C8168) *
              C51236) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
            (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
               C2435 +
           C5737 * C2436) *
              C51323 * C622 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C453 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51454 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C452) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51262) *
               C2434 +
           ((C5299 * C857 + C51467 * C866 + C5300 * C1147 + C51361 * C1152) *
                C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C5299 * C867 + C51467 * C881 + C5300 * C1153 + C51361 * C1159) *
                C51262) *
               C2435 +
           ((C5299 * C858 + C51467 * C868 + C5300 * C1148 + C51361 * C1154) *
                C453 -
            (C5542 * C51454 + C5543 * C452) +
            (C5299 * C869 + C51467 * C882 + C5300 * C1155 + C51361 * C1160) *
                C51262) *
               C2436) *
              C51323 * C623 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C452 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C2434 +
           ((C5900 + C5901) * C452 + (C5902 + C5903) * C51454 -
            (C5300 * C3553 + C51361 * C3557 + C5299 * C861 + C51467 * C874) *
                C453 -
            (C5300 * C3558 + C51361 * C3562 + C5299 * C875 + C51467 * C885) *
                C51262) *
               C2435 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C2436) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
            (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
               C2435 +
           C5737 * C2436) *
              C51323 * C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C2434 +
           ((C5725 + C5724) * C453 -
            ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
            (C5727 + C5726) * C51262) *
               C2435 +
           ((C5728 + C5729) * C453 - (C5352 * C51454 + C5353 * C452) +
            (C5730 + C5731) * C51262) *
               C2436) *
              C51323 * C51220 * C292 +
          (C5737 * C2434 +
           ((C5345 + C5344) * C452 + (C5343 + C5342) * C51454 -
            (C5729 + C5728) * C453 - (C5731 + C5730) * C51262) *
               C2435 +
           ((C5346 + C5347) * C452 + (C5348 + C5349) * C51454 -
            (C5300 * C996 + C51361 * C1005 + C5299 * C458 + C51467 * C468) *
                C453 -
            (C5300 * C1006 + C51361 * C1011 + C5299 * C469 + C51467 * C476) *
                C51262) *
               C2436) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
               C1232 +
           (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
               C1228 -
           (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
               C1233 -
           (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
               C1229 +
           (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
               C1234 +
           (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
               C1230 -
           (C5300 * C6565 + C51361 * C6568 + C5299 * C1236 + C51467 * C1240) *
               C1235 -
           (C5300 * C6569 + C51361 * C6574 + C5299 * C1241 + C51467 * C1248) *
               C1231) *
              C2434 +
          ((C5334 + C5335) * C1232 + (C5336 + C5337) * C1228 -
           (C5719 + C5720) * C1233 - (C5721 + C5722) * C1229 +
           (C6314 + C6315) * C1234 + (C6316 + C6317) * C1230 -
           (C5300 * C6566 + C51361 * C6570 + C5299 * C1237 + C51467 * C1242) *
               C1235 -
           (C5300 * C6571 + C51361 * C6575 + C5299 * C1243 + C51467 * C1249) *
               C1231) *
              C2435 +
          (C5350 * C1232 + C5351 * C1228 - C5732 * C1233 - C5733 * C1229 +
           (C6318 + C6319) * C1234 + (C6320 + C6321) * C1230 -
           (C5300 * C6567 + C51361 * C6572 + C5299 * C1238 + C51467 * C1244) *
               C1235 -
           (C5300 * C6573 + C51361 * C6576 + C5299 * C1245 + C51467 * C1250) *
               C1231) *
              C2436) *
         C51323 * C51220 * C51188) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C5300 * C1146 + C51361 * C1150 + C5299 * C856 + C51467 * C864) *
                C453 -
            (C5300 * C1151 + C51361 * C1158 + C5299 * C865 + C51467 * C880) *
                C51262) *
               C51164 * C8167 +
           ((C12956 + C12957) * C452 + (C12958 + C12959) * C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C51164 * C8168) *
              C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C51164 * C8166 +
           ((C7080 + C7081) * C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C7082 + C7083) * C51262) *
               C51164 * C8167 +
           ((C5299 * C861 + C51467 * C874 + C5300 * C3553 + C51361 * C3557) *
                C453 -
            ((C5903 + C5902) * C51454 + (C5901 + C5900) * C452) +
            (C5299 * C875 + C51467 * C885 + C5300 * C3558 + C51361 * C3562) *
                C51262) *
               C51164 * C8168) *
              C51220 * C292 +
          (C5737 * C51164 * C8166 +
           ((C5533 + C5532) * C452 + (C5531 + C5530) * C51454 -
            (C7085 + C7084) * C453 - (C7087 + C7086) * C51262) *
               C51164 * C8167 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C51164 * C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           C13595 * C8168) *
              C622 +
          (((C13577 + C13576) * C453 -
            ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
            (C13579 + C13578) * C51262) *
               C51164 * C8166 +
           ((C13582 + C13581) * C453 -
            ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
            (C13584 + C13583) * C51262) *
               C51164 * C8167 +
           ((C13585 + C13586) * C453 - (C13386 * C51454 + C13387 * C452) +
            (C13587 + C13588) * C51262) *
               C51164 * C8168) *
              C623 +
          (C13595 * C8166 +
           ((C13277 + C13276) * C452 + (C13275 + C13274) * C51454 -
            (C13586 + C13585) * C453 - (C13588 + C13587) * C51262) *
               C51164 * C8167 +
           ((C13398 + C13399) * C452 + (C13400 + C13401) * C51454 -
            (C5300 * C11612 + C51361 * C11613 + C5299 * C8888 +
             C51467 * C8890) *
                C453 -
            (C5300 * C11614 + C51361 * C11615 + C5299 * C8891 +
             C51467 * C8894) *
                C51262) *
               C51164 * C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
               C1232 +
           (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
               C1228 -
           (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
               C1233 -
           (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
               C1229 +
           (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
               C1234 +
           (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
               C1230 -
           (C5300 * C6565 + C51361 * C6568 + C5299 * C1236 + C51467 * C1240) *
               C1235 -
           (C5300 * C6569 + C51361 * C6574 + C5299 * C1241 + C51467 * C1248) *
               C1231) *
              C51164 * C8166 +
          ((C12952 + C12953) * C1232 + (C12954 + C12955) * C1228 -
           (C13576 + C13577) * C1233 - (C13578 + C13579) * C1229 +
           (C13904 + C13905) * C1234 + (C13906 + C13907) * C1230 -
           (C5300 * C14009 + C51361 * C14011 + C5299 * C3674 + C51467 * C3677) *
               C1235 -
           (C5300 * C14012 + C51361 * C14015 + C5299 * C3678 + C51467 * C3683) *
               C1231) *
              C51164 * C8167 +
          (C13252 * C1232 + C13253 * C1228 - C13589 * C1233 - C13590 * C1229 +
           (C13908 + C13909) * C1234 + (C13910 + C13911) * C1230 -
           (C5300 * C14010 + C51361 * C14013 + C5299 * C9347 + C51467 * C9349) *
               C1235 -
           (C5300 * C14014 + C51361 * C14016 + C5299 * C9350 + C51467 * C9353) *
               C1231) *
              C51164 * C8168) *
         C51220 * C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
            (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
               C2435 +
           C7240 * C2436) *
              C51323 * C51220 * C51497 +
          (((C5720 + C5719) * C1723 -
            ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
            (C5722 + C5721) * C51262) *
               C2434 +
           ((C5725 + C5724) * C1723 -
            ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
            (C5727 + C5726) * C51262) *
               C2435 +
           ((C5728 + C5729) * C1723 - (C5352 * C1720 + C5353 * C1722) +
            (C5730 + C5731) * C51262) *
               C2436) *
              C51323 * C51220 * C51483 +
          (C7240 * C2434 +
           ((C5345 + C5344) * C1722 + (C5343 + C5342) * C1720 -
            (C5729 + C5728) * C1723 - (C5731 + C5730) * C51262) *
               C2435 +
           ((C5346 + C5347) * C1722 + (C5348 + C5349) * C1720 -
            (C5300 * C996 + C51361 * C1005 + C5299 * C458 + C51467 * C468) *
                C1723 -
            (C5300 * C1006 + C51361 * C1011 + C5299 * C469 + C51467 * C476) *
                C51262) *
               C2436) *
              C51323 * C51220 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1722 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C1720 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1723 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
            (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           (C13252 * C1722 + C13253 * C1720 - C13589 * C1723 -
            C13590 * C51262) *
               C51164 * C8168) *
              C51220 * C51497 +
          (((C5720 + C5719) * C1723 -
            ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
            (C5722 + C5721) * C51262) *
               C51164 * C8166 +
           ((C7080 + C7081) * C1723 -
            ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
            (C7082 + C7083) * C51262) *
               C51164 * C8167 +
           ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
            (C14514 + C14515) * C51262) *
               C51164 * C8168) *
              C51220 * C51483 +
          (C7240 * C51164 * C8166 +
           ((C5533 + C5532) * C1722 + (C5531 + C5530) * C1720 -
            (C7085 + C7084) * C1723 - (C7087 + C7086) * C51262) *
               C51164 * C8167 +
           ((C5904 + C5905) * C1722 + (C5906 + C5907) * C1720 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C1723 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C51164 * C8168) *
              C51220 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C2434 +
            ((C5334 + C5335) * C1722 + (C5336 + C5337) * C1720 -
             (C5719 + C5720) * C1723 - (C5721 + C5722) * C51262) *
                C2435 +
            C7240 * C2436) *
               C51323 * C51452 +
           (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                 C1723 -
             ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                  C1720 +
              (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                  C1722) +
             (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                 C51262) *
                C2434 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C2435 +
            ((C7084 + C7085) * C1723 - (C5542 * C1720 + C5543 * C1722) +
             (C7086 + C7087) * C51262) *
                C2436) *
               C51323 * C51236) *
              C1456 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C2434 +
            ((C5725 + C5724) * C1723 -
             ((C5341 + C5340) * C1720 + (C5339 + C5338) * C1722) +
             (C5727 + C5726) * C51262) *
                C2435 +
            ((C5728 + C5729) * C1723 - (C5352 * C1720 + C5353 * C1722) +
             (C5730 + C5731) * C51262) *
                C2436) *
               C51323 * C51452 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C2434 +
            ((C5533 + C5532) * C1722 + (C5531 + C5530) * C1720 -
             (C7085 + C7084) * C1723 - (C7087 + C7086) * C51262) *
                C2435 +
            ((C5538 + C5539) * C1722 + (C5540 + C5541) * C1720 -
             (C5300 * C1149 + C51361 * C1156 + C5299 * C859 + C51467 * C870) *
                 C1723 -
             (C5300 * C1157 + C51361 * C1161 + C5299 * C871 + C51467 * C883) *
                 C51262) *
                C2436) *
               C51323 * C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C1722 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C1720 -
             (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                 C1723 -
             (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                 C51262) *
                C51164 * C8166 +
            ((C12952 + C12953) * C1722 + (C12954 + C12955) * C1720 -
             (C13576 + C13577) * C1723 - (C13578 + C13579) * C51262) *
                C51164 * C8167 +
            (C13252 * C1722 + C13253 * C1720 - C13589 * C1723 -
             C13590 * C51262) *
                C51164 * C8168) *
               C51452 +
           (((C13577 + C13576) * C1723 -
             ((C12955 + C12954) * C1720 + (C12953 + C12952) * C1722) +
             (C13579 + C13578) * C51262) *
                C51164 * C8166 +
            ((C13582 + C13581) * C1723 -
             ((C12959 + C12958) * C1720 + (C12957 + C12956) * C1722) +
             (C13584 + C13583) * C51262) *
                C51164 * C8167 +
            ((C13585 + C13586) * C1723 - (C13386 * C1720 + C13387 * C1722) +
             (C13587 + C13588) * C51262) *
                C51164 * C8168) *
               C51236) *
              C1456 +
          ((((C5720 + C5719) * C1723 -
             ((C5337 + C5336) * C1720 + (C5335 + C5334) * C1722) +
             (C5722 + C5721) * C51262) *
                C51164 * C8166 +
            ((C7080 + C7081) * C1723 -
             ((C5534 + C5535) * C1720 + (C5536 + C5537) * C1722) +
             (C7082 + C7083) * C51262) *
                C51164 * C8167 +
            ((C14512 + C14513) * C1723 - (C13270 * C1720 + C13271 * C1722) +
             (C14514 + C14515) * C51262) *
                C51164 * C8168) *
               C51452 +
           (((C5537 + C5536) * C1722 + (C5535 + C5534) * C1720 -
             (C7081 + C7080) * C1723 - (C7083 + C7082) * C51262) *
                C51164 * C8166 +
            ((C5900 + C5901) * C1722 + (C5902 + C5903) * C1720 -
             (C14513 + C14512) * C1723 - (C14515 + C14514) * C51262) *
                C51164 * C8167 +
            ((C13278 + C13279) * C1722 + (C13280 + C13281) * C1720 -
             (C5300 * C9230 + C51361 * C9233 + C5299 * C3185 + C51467 * C3189) *
                 C1723 -
             (C5300 * C9234 + C51361 * C9236 + C5299 * C3190 + C51467 * C3194) *
                 C51262) *
                C51164 * C8168) *
               C51236) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C2434 +
           ((C5334 + C5335) * C1989 + (C5336 + C5337) * C51499 -
            (C5719 + C5720) * C1990 - (C5721 + C5722) * C51489 +
            (C6314 + C6315) * C1991 + (C6316 + C6317) * C1988) *
               C2435 +
           (C5350 * C1989 + C5351 * C51499 - C5732 * C1990 - C5733 * C51489 +
            (C6318 + C6319) * C1991 + (C6320 + C6321) * C1988) *
               C2436) *
              C51323 * C51220 * C1456 +
          (((C5720 + C5719) * C1990 -
            ((C5337 + C5336) * C51499 + (C5335 + C5334) * C1989) +
            (C5722 + C5721) * C51489 - (C6315 + C6314) * C1991 -
            (C6317 + C6316) * C1988) *
               C2434 +
           ((C5725 + C5724) * C1990 -
            ((C5341 + C5340) * C51499 + (C5339 + C5338) * C1989) +
            (C5727 + C5726) * C51489 - (C6319 + C6318) * C1991 -
            (C6321 + C6320) * C1988) *
               C2435 +
           ((C5728 + C5729) * C1990 - (C5352 * C51499 + C5353 * C1989) +
            (C5730 + C5731) * C51489 -
            (C5300 * C1239 + C51361 * C1246 + C5299 * C995 + C51467 * C1003) *
                C1991 -
            (C5300 * C1247 + C51361 * C1251 + C5299 * C1004 + C51467 * C1010) *
                C1988) *
               C2436) *
              C51323 * C51220 * C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C1989 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51499 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C1990 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51489 +
            (C5299 * C992 + C51467 * C997 + C5300 * C1236 + C51361 * C1240) *
                C1991 +
            (C5299 * C998 + C51467 * C1007 + C5300 * C1241 + C51361 * C1248) *
                C1988) *
               C51164 * C8166 +
           ((C12952 + C12953) * C1989 + (C12954 + C12955) * C51499 -
            (C13576 + C13577) * C1990 - (C13578 + C13579) * C51489 +
            (C13904 + C13905) * C1991 + (C13906 + C13907) * C1988) *
               C51164 * C8167 +
           (C13252 * C1989 + C13253 * C51499 - C13589 * C1990 -
            C13590 * C51489 + (C13908 + C13909) * C1991 +
            (C13910 + C13911) * C1988) *
               C51164 * C8168) *
              C51220 * C1456 +
          (((C5720 + C5719) * C1990 -
            ((C5337 + C5336) * C51499 + (C5335 + C5334) * C1989) +
            (C5722 + C5721) * C51489 - (C6315 + C6314) * C1991 -
            (C6317 + C6316) * C1988) *
               C51164 * C8166 +
           ((C7080 + C7081) * C1990 -
            ((C5534 + C5535) * C51499 + (C5536 + C5537) * C1989) +
            (C7082 + C7083) * C51489 -
            (C5300 * C3675 + C51361 * C3679 + C5299 * C1147 + C51467 * C1152) *
                C1991 -
            (C5300 * C3680 + C51361 * C3684 + C5299 * C1153 + C51467 * C1159) *
                C1988) *
               C51164 * C8167 +
           ((C14512 + C14513) * C1990 - (C13270 * C51499 + C13271 * C1989) +
            (C14514 + C14515) * C51489 -
            (C5300 * C9348 + C51361 * C9351 + C5299 * C3553 + C51467 * C3557) *
                C1991 -
            (C5300 * C9352 + C51361 * C9354 + C5299 * C3558 + C51467 * C3562) *
                C1988) *
               C51164 * C8168) *
              C51220 * C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C2434 +
           ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
           C5358 * C2436) *
              C51323 * C51220 * C113 -
          (C5359 * C2436 +
           ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
              C51323 * C51220 * C114 +
          (C5358 * C2434 +
           ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
           ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
              C51323 * C51220 * C115 -
          (((C5300 * C471 + C51361 * C477 + C5299 * C137 + C51467 * C145) *
                C51250 +
            (C5300 * C459 + C51361 * C470 + C5299 * C124 + C51467 * C136) *
                C118) *
               C2436 +
           ((C5349 + C5348) * C51250 + (C5347 + C5346) * C118) * C2435 +
           C5359 * C2434) *
              C51323 * C51220 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C622 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C623 +
           (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                 C118 +
             (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                 C51250) *
                C2434 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
               C51323 * C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C623 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C622 -
           (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                 C51250 +
             (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                 C118) *
                C2436 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C2435 +
            ((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C2434) *
               C51323 * C624) *
              C51193)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C5299 * C297 + C51467 * C307 + C5300 * C856 + C51361 * C864) *
                C118 +
            (C5299 * C306 + C51467 * C315 + C5300 * C865 + C51361 * C880) *
                C51250) *
               C51164 * C8167 +
           ((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C51164 * C8168) *
              C51220 * C113 -
          (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
               C8168 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
               C8167 +
           ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
               C8166) *
              C51220 * C114 +
          (C5358 * C51164 * C8166 +
           ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
               C8167 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
               C8168) *
              C51220 * C115 -
          (((C5300 * C879 + C51361 * C887 + C5299 * C639 + C51467 * C645) *
                C51250 +
            (C5300 * C863 + C51361 * C878 + C5299 * C630 + C51467 * C638) *
                C118) *
               C51164 * C8168 +
           ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C51164 *
               C8167 +
           C5359 * C51164 * C8166) *
              C51220 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            C13286 * C8168) *
               C622 -
           (((C13274 + C13275) * C51250 + (C13276 + C13277) * C118) * C51164 *
                C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C623 +
           (C13286 * C8166 +
            ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
                C8167 +
            ((C5299 * C3020 + C51467 * C3026 + C5300 * C8888 + C51361 * C8890) *
                 C118 +
             (C5299 * C3025 + C51467 * C3029 + C5300 * C8891 + C51361 * C8894) *
                 C51250) *
                C51164 * C8168) *
               C624) *
              C51445 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C13278 + C13279) * C118 + (C13280 + C13281) * C51250) * C51164 *
                C8168) *
               C623 -
           (C13287 * C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C622 -
           (((C5300 * C8893 + C51361 * C8895 + C5299 * C3023 + C51467 * C3028) *
                 C51250 +
             (C5300 * C8889 + C51361 * C8892 + C5299 * C3019 + C51467 * C3024) *
                 C118) *
                C51164 * C8168 +
            ((C13281 + C13280) * C51250 + (C13279 + C13278) * C118) * C51164 *
                C8167 +
            C13287 * C8166) *
               C624) *
              C51193)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C2434 +
            ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
            C5358 * C2436) *
               C51323 * C51452 -
           (C5546 * C2436 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51250 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C118) *
                C2434) *
               C51323 * C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C2434 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C2435 +
            ((C5538 + C5539) * C118 + (C5540 + C5541) * C51250) * C2436) *
               C51323 * C51236 -
           (C5359 * C2436 +
            ((C5341 + C5340) * C51250 + (C5339 + C5338) * C118) * C2435 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C2434) *
               C51323 * C51452) *
              C292 +
          ((C5358 * C2434 +
            ((C5345 + C5344) * C118 + (C5343 + C5342) * C51250) * C2435 +
            ((C5346 + C5347) * C118 + (C5348 + C5349) * C51250) * C2436) *
               C51323 * C51452 -
           (((C5300 * C1590 + C51361 * C1591 + C5299 * C309 + C51467 * C316) *
                 C51250 +
             (C5300 * C1588 + C51361 * C1589 + C5299 * C298 + C51467 * C308) *
                 C118) *
                C2436 +
            ((C5541 + C5540) * C51250 + (C5539 + C5538) * C118) * C2435 +
            C5546 * C2434) *
               C51323 * C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C2434 +
           ((C5334 + C5335) * C118 + (C5336 + C5337) * C51250) * C2435 +
           C5358 * C2436) *
              C51323 * C737 -
          (C5546 * C2436 +
           ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C2435 +
           ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                C51250 +
            (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                C118) *
               C2434) *
              C51323 * C738 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C118 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51250) *
               C2434 +
           ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C2435 +
           ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C2436) *
              C51323 * C739 -
          (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                C51250 +
            (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                C118) *
               C2436 +
           ((C5300 * C3190 + C51361 * C3194 + C5299 * C750 + C51467 * C756) *
                C51250 +
            (C5300 * C3185 + C51361 * C3189 + C5299 * C744 + C51467 * C751) *
                C118) *
               C2435 +
           ((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                C51250 +
            (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                C118) *
               C2434) *
              C51323 * C740) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                 C118 +
             (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                 C51250) *
                C51164 * C8166 +
            ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
                C8167 +
            ((C12956 + C12957) * C118 + (C12958 + C12959) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3188 + C51361 * C3193 + C5299 * C752 + C51467 * C757) *
                 C51250 +
             (C5300 * C3184 + C51361 * C3187 + C5299 * C745 + C51467 * C753) *
                 C118) *
                C51164 * C8168 +
            ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
                C8167 +
            ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
                C8166) *
               C51236) *
              C291 +
          ((((C5537 + C5536) * C118 + (C5535 + C5534) * C51250) * C51164 *
                C8166 +
            ((C5900 + C5901) * C118 + (C5902 + C5903) * C51250) * C51164 *
                C8167 +
            ((C5299 * C744 + C51467 * C751 + C5300 * C3185 + C51361 * C3189) *
                 C118 +
             (C5299 * C750 + C51467 * C756 + C5300 * C3190 + C51361 * C3194) *
                 C51250) *
                C51164 * C8168) *
               C51236 -
           (((C5903 + C5902) * C51250 + (C5901 + C5900) * C118) * C51164 *
                C8168 +
            ((C5534 + C5535) * C51250 + (C5536 + C5537) * C118) * C51164 *
                C8167 +
            ((C5337 + C5336) * C51250 + (C5335 + C5334) * C118) * C51164 *
                C8166) *
               C51452) *
              C292 +
          ((C5358 * C51164 * C8166 +
            ((C5533 + C5532) * C118 + (C5531 + C5530) * C51250) * C51164 *
                C8167 +
            ((C5904 + C5905) * C118 + (C5906 + C5907) * C51250) * C51164 *
                C8168) *
               C51452 -
           (((C5300 * C3192 + C51361 * C3195 + C5299 * C748 + C51467 * C755) *
                 C51250 +
             (C5300 * C3186 + C51361 * C3191 + C5299 * C743 + C51467 * C749) *
                 C118) *
                C51164 * C8168 +
            ((C5907 + C5906) * C51250 + (C5905 + C5904) * C118) * C51164 *
                C8167 +
            C5546 * C51164 * C8166) *
               C51236) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C118 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51250) *
               C51164 * C8166 +
           ((C12952 + C12953) * C118 + (C12954 + C12955) * C51250) * C51164 *
               C8167 +
           C13286 * C8168) *
              C737 -
          (C13403 * C8168 +
           ((C12959 + C12958) * C51250 + (C12957 + C12956) * C118) * C51164 *
               C8167 +
           ((C12955 + C12954) * C51250 + (C12953 + C12952) * C118) * C51164 *
               C8166) *
              C738 +
          (C13286 * C8166 +
           ((C13277 + C13276) * C118 + (C13275 + C13274) * C51250) * C51164 *
               C8167 +
           ((C13398 + C13399) * C118 + (C13400 + C13401) * C51250) * C51164 *
               C8168) *
              C739 -
          (((C5300 * C11399 + C51361 * C11400 + C5299 * C8726 +
             C51467 * C8729) *
                C51250 +
            (C5300 * C11397 + C51361 * C11398 + C5299 * C8723 +
             C51467 * C8727) *
                C118) *
               C51164 * C8168 +
           ((C13401 + C13400) * C51250 + (C13399 + C13398) * C118) * C51164 *
               C8167 +
           C13403 * C8166) *
              C740) *
         C51188) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
            (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
               C2435 +
           C5737 * C2436) *
              C51323 * C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C2434 +
           ((C5725 + C5724) * C453 -
            ((C5341 + C5340) * C51454 + (C5339 + C5338) * C452) +
            (C5727 + C5726) * C51262) *
               C2435 +
           ((C5728 + C5729) * C453 - (C5352 * C51454 + C5353 * C452) +
            (C5730 + C5731) * C51262) *
               C2436) *
              C51323 * C51220 * C292 +
          (C5737 * C2434 +
           ((C5345 + C5344) * C452 + (C5343 + C5342) * C51454 -
            (C5729 + C5728) * C453 - (C5731 + C5730) * C51262) *
               C2435 +
           ((C5346 + C5347) * C452 + (C5348 + C5349) * C51454 -
            (C5300 * C996 + C51361 * C1005 + C5299 * C458 + C51467 * C468) *
                C453 -
            (C5300 * C1006 + C51361 * C1011 + C5299 * C469 + C51467 * C476) *
                C51262) *
               C2436) *
              C51323 * C51220 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C2434 +
           ((C5334 + C5335) * C452 + (C5336 + C5337) * C51454 -
            (C5719 + C5720) * C453 - (C5721 + C5722) * C51262) *
               C2435 +
           C5737 * C2436) *
              C51323 * C622 +
          (((C5299 * C856 + C51467 * C864 + C5300 * C1146 + C51361 * C1150) *
                C453 -
            ((C5300 * C865 + C51361 * C880 + C5299 * C306 + C51467 * C315) *
                 C51454 +
             (C5300 * C856 + C51361 * C864 + C5299 * C297 + C51467 * C307) *
                 C452) +
            (C5299 * C865 + C51467 * C880 + C5300 * C1151 + C51361 * C1158) *
                C51262) *
               C2434 +
           ((C5299 * C857 + C51467 * C866 + C5300 * C1147 + C51361 * C1152) *
                C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C5299 * C867 + C51467 * C881 + C5300 * C1153 + C51361 * C1159) *
                C51262) *
               C2435 +
           ((C5299 * C858 + C51467 * C868 + C5300 * C1148 + C51361 * C1154) *
                C453 -
            (C5542 * C51454 + C5543 * C452) +
            (C5299 * C869 + C51467 * C882 + C5300 * C1155 + C51361 * C1160) *
                C51262) *
               C2436) *
              C51323 * C623 +
          (((C5299 * C627 + C51467 * C632 + C5300 * C860 + C51361 * C872) *
                C452 +
            (C5299 * C633 + C51467 * C642 + C5300 * C873 + C51361 * C884) *
                C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C2434 +
           ((C5900 + C5901) * C452 + (C5902 + C5903) * C51454 -
            (C5300 * C3553 + C51361 * C3557 + C5299 * C861 + C51467 * C874) *
                C453 -
            (C5300 * C3558 + C51361 * C3562 + C5299 * C875 + C51467 * C885) *
                C51262) *
               C2435 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C2436) *
              C51323 * C624) *
         C51188) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C5300 * C1146 + C51361 * C1150 + C5299 * C856 + C51467 * C864) *
                C453 -
            (C5300 * C1151 + C51361 * C1158 + C5299 * C865 + C51467 * C880) *
                C51262) *
               C51164 * C8167 +
           ((C12956 + C12957) * C452 + (C12958 + C12959) * C51454 -
            (C5300 * C3552 + C51361 * C3555 + C5299 * C860 + C51467 * C872) *
                C453 -
            (C5300 * C3556 + C51361 * C3561 + C5299 * C873 + C51467 * C884) *
                C51262) *
               C51164 * C8168) *
              C51220 * C291 +
          (((C5720 + C5719) * C453 -
            ((C5337 + C5336) * C51454 + (C5335 + C5334) * C452) +
            (C5722 + C5721) * C51262) *
               C51164 * C8166 +
           ((C7080 + C7081) * C453 -
            ((C5534 + C5535) * C51454 + (C5536 + C5537) * C452) +
            (C7082 + C7083) * C51262) *
               C51164 * C8167 +
           ((C5299 * C861 + C51467 * C874 + C5300 * C3553 + C51361 * C3557) *
                C453 -
            ((C5903 + C5902) * C51454 + (C5901 + C5900) * C452) +
            (C5299 * C875 + C51467 * C885 + C5300 * C3558 + C51361 * C3562) *
                C51262) *
               C51164 * C8168) *
              C51220 * C292 +
          (C5737 * C51164 * C8166 +
           ((C5533 + C5532) * C452 + (C5531 + C5530) * C51454 -
            (C7085 + C7084) * C453 - (C7087 + C7086) * C51262) *
               C51164 * C8167 +
           ((C5904 + C5905) * C452 + (C5906 + C5907) * C51454 -
            (C5300 * C3554 + C51361 * C3559 + C5299 * C862 + C51467 * C876) *
                C453 -
            (C5300 * C3560 + C51361 * C3563 + C5299 * C877 + C51467 * C886) *
                C51262) *
               C51164 * C8168) *
              C51220 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5299 * C119 + C51467 * C126 + C5300 * C454 + C51361 * C460) *
                C452 +
            (C5299 * C127 + C51467 * C140 + C5300 * C461 + C51361 * C472) *
                C51454 -
            (C5300 * C992 + C51361 * C997 + C5299 * C454 + C51467 * C460) *
                C453 -
            (C5300 * C998 + C51361 * C1007 + C5299 * C461 + C51467 * C472) *
                C51262) *
               C51164 * C8166 +
           ((C12952 + C12953) * C452 + (C12954 + C12955) * C51454 -
            (C13576 + C13577) * C453 - (C13578 + C13579) * C51262) *
               C51164 * C8167 +
           C13595 * C8168) *
              C622 +
          (((C13577 + C13576) * C453 -
            ((C12955 + C12954) * C51454 + (C12953 + C12952) * C452) +
            (C13579 + C13578) * C51262) *
               C51164 * C8166 +
           ((C13582 + C13581) * C453 -
            ((C12959 + C12958) * C51454 + (C12957 + C12956) * C452) +
            (C13584 + C13583) * C51262) *
               C51164 * C8167 +
           ((C13585 + C13586) * C453 - (C13386 * C51454 + C13387 * C452) +
            (C13587 + C13588) * C51262) *
               C51164 * C8168) *
              C623 +
          (C13595 * C8166 +
           ((C13277 + C13276) * C452 + (C13275 + C13274) * C51454 -
            (C13586 + C13585) * C453 - (C13588 + C13587) * C51262) *
               C51164 * C8167 +
           ((C13398 + C13399) * C452 + (C13400 + C13401) * C51454 -
            (C5300 * C11612 + C51361 * C11613 + C5299 * C8888 +
             C51467 * C8890) *
                C453 -
            (C5300 * C11614 + C51361 * C11615 + C5299 * C8891 +
             C51467 * C8894) *
                C51262) *
               C51164 * C8168) *
              C624) *
         C51188) /
            (p * q * std::sqrt(p + q));
}
