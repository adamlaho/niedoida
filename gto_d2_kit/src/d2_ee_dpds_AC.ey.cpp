/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpds_AC.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_2120_13(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C89852 = 0 * ae;
    const double C89851 = ae * be;
    const double C89850 = 0 * be;
    const double C89849 = ae + be;
    const double C89848 = 0 * be;
    const double C89847 = xA - xB;
    const double C89893 = ce * de;
    const double C89892 = 0 * de;
    const double C89891 = xC - xD;
    const double C89890 = ce + de;
    const double C89920 = 0 * de;
    const double C89919 = yC - yD;
    const double C89936 = 0 * de;
    const double C89935 = zC - zD;
    const double C89967 = yA - yB;
    const double C89974 = zA - zB;
    const double C89986 = 0 * be;
    const double C90006 = 0 * ae;
    const double C90002 = 0 * be;
    const double C90033 = 0 * be;
    const double C90051 = 0 * ae;
    const double C90047 = 0 * be;
    const double C90106 = p + q;
    const double C90105 = p * q;
    const double C90111 = xP - xQ;
    const double C90110 = bs[2];
    const double C90120 = ae * ce;
    const double C90116 = bs[3];
    const double C90129 = bs[4];
    const double C90150 = bs[5];
    const double C90192 = bs[6];
    const double C90253 = yP - yQ;
    const double C90311 = zP - zQ;
    const double C107 = bs[0];
    const double C89857 = C89852 / C89849;
    const double C89854 = 2 * C89849;
    const double C89853 = std::pow(C89849, 2);
    const double C89856 = C89851 * C89847;
    const double C89855 = C89847 * C89850;
    const double C92063 = C89847 * be;
    const double C92062 = C89847 * ae;
    const double C92061 = std::pow(C89847, 2);
    const double C89895 = C89893 * C89891;
    const double C92080 = std::pow(C89891, 2);
    const double C92329 = C89891 * de;
    const double C89894 = 2 * C89890;
    const double C90112 = C89890 * C89849;
    const double C92330 = std::pow(C89890, 2);
    const double C89921 = C89893 * C89919;
    const double C92101 = std::pow(C89919, 2);
    const double C92333 = C89919 * de;
    const double C89937 = C89893 * C89935;
    const double C92112 = std::pow(C89935, 2);
    const double C92334 = C89935 * de;
    const double C89987 = C89851 * C89967;
    const double C92153 = std::pow(C89967, 2);
    const double C92167 = C89967 * be;
    const double C92166 = C89967 * ae;
    const double C90034 = C89851 * C89974;
    const double C92179 = std::pow(C89974, 2);
    const double C92191 = C89974 * be;
    const double C92190 = C89974 * ae;
    const double C90003 = C89967 * C89986;
    const double C90011 = C90006 / C89849;
    const double C90048 = C89974 * C90033;
    const double C90056 = C90051 / C89849;
    const double C90107 = 2 * C90105;
    const double C90121 = C90111 * ae;
    const double C90119 = std::pow(C90111, 2);
    const double C90117 = C90111 * ce;
    const double C90256 = C90111 * C90253;
    const double C90255 = C90253 * ce;
    const double C90371 = C90253 * C90111;
    const double C90370 = C90253 * ae;
    const double C90425 = std::pow(C90253, 2);
    const double C90314 = C90111 * C90311;
    const double C90313 = C90311 * ce;
    const double C90450 = C90253 * C90311;
    const double C90472 = C90311 * C90111;
    const double C90471 = C90311 * ae;
    const double C90526 = C90311 * C90253;
    const double C90547 = std::pow(C90311, 2);
    const double C92071 = std::pow(C89854, -1);
    const double C92335 = std::pow(C89854, -2);
    const double C89858 = 2 * C89853;
    const double C92328 = 4 * C89853;
    const double C89859 = C89855 / C89849;
    const double C92064 = C92061 * C89851;
    const double C92081 = C92080 * C89893;
    const double C92332 = std::pow(C89894, -2);
    const double C92331 = std::pow(C89894, -1);
    const double C92102 = C92101 * C89893;
    const double C92113 = C92112 * C89893;
    const double C92154 = C92153 * C89851;
    const double C92180 = C92179 * C89851;
    const double C90008 = C90003 / C89849;
    const double C90053 = C90048 / C89849;
    const double C90109 = C90107 / C90106;
    const double C125 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C90107 / C90106, 2) -
            (bs[1] * C90107) / C90106) *
           ae * ce) /
         C89890) /
        C89849;
    const double C108 = -(C90111 * bs[1] * C90107) / C90106;
    const double C805 = -(C90253 * bs[1] * C90107) / C90106;
    const double C1389 = -(C90311 * bs[1] * C90107) / C90106;
    const double C90124 = C90116 * C90121;
    const double C90135 = C90129 * C90121;
    const double C90159 = C90150 * C90121;
    const double C90207 = C90192 * C90121;
    const double C113 = (-(bs[1] * C90121 * C90107) / C90106) / C89849;
    const double C90131 = C90119 * C90129;
    const double C90154 = C90119 * C90150;
    const double C90201 = C90119 * C90192;
    const double C90123 = C90116 * C90117;
    const double C90132 = C90129 * C90117;
    const double C90155 = C90150 * C90117;
    const double C90203 = C90192 * C90117;
    const double C117 = (bs[1] * C90117 * C90107) / (C90106 * C89890);
    const double C90258 = C90256 * ae;
    const double C90257 = C90116 * C90255;
    const double C90263 = C90129 * C90255;
    const double C90270 = C90150 * C90255;
    const double C90286 = C90192 * C90255;
    const double C182 = (bs[1] * C90255 * C90107) / (C90106 * C89890);
    const double C90373 = C90371 * ae;
    const double C90372 = C90116 * C90370;
    const double C90378 = C90129 * C90370;
    const double C90385 = C90150 * C90370;
    const double C90401 = C90192 * C90370;
    const double C308 = (-(bs[1] * C90370 * C90107) / C90106) / C89849;
    const double C90427 = C90425 * C90129;
    const double C90432 = C90425 * C90150;
    const double C90437 = C90425 * C90192;
    const double C90316 = C90314 * ae;
    const double C90315 = C90116 * C90313;
    const double C90321 = C90129 * C90313;
    const double C90328 = C90150 * C90313;
    const double C90344 = C90192 * C90313;
    const double C245 = (bs[1] * C90313 * C90107) / (C90106 * C89890);
    const double C90451 = C90450 * ae;
    const double C90474 = C90472 * ae;
    const double C90473 = C90116 * C90471;
    const double C90479 = C90129 * C90471;
    const double C90486 = C90150 * C90471;
    const double C90502 = C90192 * C90471;
    const double C555 = (-(bs[1] * C90471 * C90107) / C90106) / C89849;
    const double C90527 = C90526 * ae;
    const double C90549 = C90547 * C90129;
    const double C90554 = C90547 * C90150;
    const double C90559 = C90547 * C90192;
    const double C89864 = C89850 / C89858;
    const double C89862 = C89848 / C89858;
    const double C90005 = C89986 / C89858;
    const double C90009 = C90002 / C89858;
    const double C90050 = C90033 / C89858;
    const double C90054 = C90047 / C89858;
    const double C89861 = 0 - C89859;
    const double C92065 = C92064 / C89849;
    const double C92082 = C92081 / C89890;
    const double C92103 = C92102 / C89890;
    const double C92114 = C92113 / C89890;
    const double C92155 = C92154 / C89849;
    const double C92181 = C92180 / C89849;
    const double C90012 = 0 - C90008;
    const double C90057 = 0 - C90053;
    const double C90113 = std::pow(C90109, 2);
    const double C90115 = -C90109;
    const double C90130 = std::pow(C90109, 4);
    const double C90193 = std::pow(C90109, 6);
    const double C90260 = C90258 * ce;
    const double C90375 = C90373 * ce;
    const double C90318 = C90316 * ce;
    const double C90452 = C90451 * ce;
    const double C90476 = C90474 * ce;
    const double C90528 = C90527 * ce;
    const double C89866 = C89861 * ae;
    const double C92066 = -C92065;
    const double C92083 = -C92082;
    const double C92104 = -C92103;
    const double C92115 = -C92114;
    const double C92156 = -C92155;
    const double C92182 = -C92181;
    const double C90015 = C90012 * ae;
    const double C90060 = C90057 * ae;
    const double C90118 = C90110 * C90113;
    const double C126 =
        (-(C90113 * C90110 * C90111 * ae * ce) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90111 * ce) / C90112 -
        (C90111 *
         (C90110 * C90113 +
          std::pow(C90111, 2) * bs[3] * std::pow(-C90109, 3)) *
         ae * ce) /
            C90112;
    const double C188 =
        (-(C90113 * C90110 * C90111 * (yP - yQ) * ae * ce) / C89890) / C89849;
    const double C251 =
        (-(C90113 * C90110 * C90111 * (zP - zQ) * ae * ce) / C89890) / C89849;
    const double C314 =
        (-(C90113 * C90110 * C90253 * C90111 * ae * ce) / C89890) / C89849;
    const double C394 =
        (-((std::pow(C90253, 2) * C90110 * C90113 - (bs[1] * C90107) / C90106) *
           C90120) /
         C89890) /
        C89849;
    const double C474 =
        (-(C90113 * C90110 * C90253 * C90311 * ae * ce) / C89890) / C89849;
    const double C561 =
        (-(C90113 * C90110 * C90311 * C90111 * ae * ce) / C89890) / C89849;
    const double C641 =
        (-(C90113 * C90110 * C90311 * C90253 * ae * ce) / C89890) / C89849;
    const double C719 =
        (-((std::pow(C90311, 2) * C90110 * C90113 - (bs[1] * C90107) / C90106) *
           C90120) /
         C89890) /
        C89849;
    const double C114 = (C90111 * C90113 * C90110 * C90121) / C89849 -
                        (ae * bs[1] * C90107) / (C90106 * C89849);
    const double C118 = (ce * bs[1] * C90107) / (C90106 * C89890) -
                        (C90111 * C90113 * C90110 * C90117) / C89890;
    const double C183 = -(C90111 * C90113 * C90110 * C90255) / C89890;
    const double C246 = -(C90111 * C90113 * C90110 * C90313) / C89890;
    const double C309 = (C90111 * C90113 * C90110 * C90370) / C89849;
    const double C556 = (C90111 * C90113 * C90110 * C90471) / C89849;
    const double C813 = -(C90253 * C90113 * C90110 * C90117) / C89890;
    const double C817 = (C90253 * C90113 * C90110 * C90121) / C89849;
    const double C890 = (ce * bs[1] * C90107) / (C90106 * C89890) -
                        (C90253 * C90113 * C90110 * C90255) / C89890;
    const double C956 = -(C90253 * C90113 * C90110 * C90313) / C89890;
    const double C1022 = (C90253 * C90113 * C90110 * C90370) / C89849 -
                         (ae * bs[1] * C90107) / (C90106 * C89849);
    const double C1204 = (C90253 * C90113 * C90110 * C90471) / C89849;
    const double C1397 = -(C90311 * C90113 * C90110 * C90117) / C89890;
    const double C1401 = (C90311 * C90113 * C90110 * C90121) / C89849;
    const double C1471 = -(C90311 * C90113 * C90110 * C90255) / C89890;
    const double C1540 = (ce * bs[1] * C90107) / (C90106 * C89890) -
                         (C90311 * C90113 * C90110 * C90313) / C89890;
    const double C1606 = (C90311 * C90113 * C90110 * C90370) / C89849;
    const double C1788 = (C90311 * C90113 * C90110 * C90471) / C89849 -
                         (ae * bs[1] * C90107) / (C90106 * C89849);
    const double C90122 = std::pow(C90115, 3);
    const double C90151 = std::pow(C90115, 5);
    const double C90139 = C90130 * C90135;
    const double C90138 = C90130 * C90132;
    const double C90137 = C90131 * C90130;
    const double C90149 = C90129 * C90130;
    const double C90265 = C90130 * C90263;
    const double C90323 = C90130 * C90321;
    const double C90380 = C90130 * C90378;
    const double C90428 = C90427 * C90130;
    const double C90481 = C90130 * C90479;
    const double C90550 = C90549 * C90130;
    const double C90215 = C90193 * C90207;
    const double C90212 = C90193 * C90203;
    const double C90211 = C90201 * C90193;
    const double C90291 = C90193 * C90286;
    const double C90349 = C90193 * C90344;
    const double C90406 = C90193 * C90401;
    const double C90439 = C90437 * C90193;
    const double C90507 = C90193 * C90502;
    const double C90561 = C90559 * C90193;
    const double C90262 = C90129 * C90260;
    const double C90268 = C90150 * C90260;
    const double C90284 = C90192 * C90260;
    const double C90377 = C90129 * C90375;
    const double C90383 = C90150 * C90375;
    const double C90399 = C90192 * C90375;
    const double C90320 = C90129 * C90318;
    const double C90326 = C90150 * C90318;
    const double C90342 = C90192 * C90318;
    const double C90454 = C90129 * C90452;
    const double C90457 = C90150 * C90452;
    const double C90460 = C90192 * C90452;
    const double C90478 = C90129 * C90476;
    const double C90484 = C90150 * C90476;
    const double C90500 = C90192 * C90476;
    const double C90530 = C90129 * C90528;
    const double C90533 = C90150 * C90528;
    const double C90536 = C90192 * C90528;
    const double C89869 = C89866 / C89849;
    const double C92067 = std::exp(C92066);
    const double C92084 = std::exp(C92083);
    const double C92105 = std::exp(C92104);
    const double C92116 = std::exp(C92115);
    const double C92157 = std::exp(C92156);
    const double C92183 = std::exp(C92182);
    const double C90017 = C90015 / C89849;
    const double C90062 = C90060 / C89849;
    const double C109 = C90118 * C90119 - (bs[1] * C90107) / C90106;
    const double C804 = C90253 * C90111 * C90118;
    const double C806 = C90118 * C90425 - (bs[1] * C90107) / C90106;
    const double C1388 = C90311 * C90111 * C90118;
    const double C1390 = C90118 * C90547 - (bs[1] * C90107) / C90106;
    const double C3431 = C90311 * C90253 * C90118;
    const double C90126 = C90122 * C90124;
    const double C90125 = C90122 * C90123;
    const double C90128 = C90116 * C90122;
    const double C90259 = C90122 * C90257;
    const double C90317 = C90122 * C90315;
    const double C90374 = C90122 * C90372;
    const double C90475 = C90122 * C90473;
    const double C189 =
        (-(C90111 * C90122 * C90116 * C90111 * C90253 * ae * ce) / C89890) /
            C89849 -
        (ae * C90113 * C90110 * C90253 * ce) / C90112;
    const double C252 =
        (-(C90111 * C90122 * C90116 * C90111 * C90311 * ae * ce) / C89890) /
            C89849 -
        (ae * C90113 * C90110 * C90311 * ce) / C90112;
    const double C315 =
        (-(C90111 * C90122 * C90116 * C90253 * C90111 * ae * ce) / C89890) /
            C89849 -
        (C90113 * C90110 * C90253 * ae * ce) / C90112;
    const double C395 =
        (-(C90111 * (C90118 + std::pow(C90253, 2) * C90116 * C90122) * C90120) /
         C89890) /
        C89849;
    const double C475 =
        (-(C90111 * C90122 * C90116 * C90253 * C90311 * ae * ce) / C89890) /
        C89849;
    const double C476 =
        (-(C90130 * C90129 * C90452 * C90119) / C89890) / C89849 -
        (C90122 * C90116 * C90452) / C90112;
    const double C562 =
        (-(C90111 * C90122 * C90116 * C90311 * C90111 * ae * ce) / C89890) /
            C89849 -
        (C90113 * C90110 * C90311 * ae * ce) / C90112;
    const double C642 =
        (-(C90111 * C90122 * C90116 * C90311 * C90253 * ae * ce) / C89890) /
        C89849;
    const double C643 =
        (-(C90130 * C90129 * C90528 * C90119) / C89890) / C89849 -
        (C90122 * C90116 * C90528) / C90112;
    const double C720 =
        (-(C90111 * (C90118 + std::pow(C90311, 2) * C90116 * C90122) * C90120) /
         C89890) /
        C89849;
    const double C829 =
        (-(C90253 * (C90118 + C90119 * C90116 * C90122) * C90120) / C89890) /
        C89849;
    const double C898 =
        (-(C90253 * C90122 * C90116 * C90260) / C89890) / C89849 -
        (C90113 * C90110 * C90121 * ce) / C90112;
    const double C964 =
        (-(C90253 * C90122 * C90116 * C90318) / C89890) / C89849;
    const double C1030 =
        (-(C90253 * C90122 * C90116 * C90375) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90117) / C90112;
    const double C1085 =
        (-(C90113 * C90110 * C90370 * ce) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90255) / C90112 -
        (C90253 * (C90118 + C90425 * C90116 * C90122) * C90120) / C90112;
    const double C1146 =
        (-(C90253 * C90122 * C90116 * C90452) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90313) / C90112;
    const double C1212 =
        (-(C90253 * C90122 * C90116 * C90476) / C89890) / C89849;
    const double C1267 =
        (-(C90253 * C90122 * C90116 * C90528) / C89890) / C89849 -
        (C90113 * C90110 * C90471 * ce) / C90112;
    const double C1328 =
        (-(C90253 * (C90118 + C90547 * C90116 * C90122) * C90120) / C89890) /
        C89849;
    const double C1413 =
        (-(C90311 * (C90118 + C90119 * C90116 * C90122) * C90120) / C89890) /
        C89849;
    const double C1479 =
        (-(C90311 * C90122 * C90116 * C90260) / C89890) / C89849;
    const double C1548 =
        (-(C90311 * C90122 * C90116 * C90318) / C89890) / C89849 -
        (C90113 * C90110 * C90121 * ce) / C90112;
    const double C1614 =
        (-(C90311 * C90122 * C90116 * C90375) / C89890) / C89849;
    const double C1672 =
        (-(C90311 * (C90118 + C90425 * C90116 * C90122) * C90120) / C89890) /
        C89849;
    const double C1727 =
        (-(C90311 * C90122 * C90116 * C90452) / C89890) / C89849 -
        (C90113 * C90110 * C90370 * ce) / C90112;
    const double C1796 =
        (-(C90311 * C90122 * C90116 * C90476) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90117) / C90112;
    const double C1854 =
        (-(C90311 * C90122 * C90116 * C90528) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90255) / C90112;
    const double C1909 =
        (-(C90113 * C90110 * C90471 * ce) / C89890) / C89849 -
        (ae * C90113 * C90110 * C90313) / C90112 -
        (C90311 * (C90118 + C90547 * C90116 * C90122) * C90120) / C90112;
    const double C90166 = C90151 * C90159;
    const double C90163 = C90151 * C90155;
    const double C90162 = C90154 * C90151;
    const double C90191 = C90150 * C90151;
    const double C90273 = C90151 * C90270;
    const double C90331 = C90151 * C90328;
    const double C90388 = C90151 * C90385;
    const double C90433 = C90432 * C90151;
    const double C90489 = C90151 * C90486;
    const double C90555 = C90554 * C90151;
    const double C90142 = C90111 * C90139;
    const double C90147 = C90139 * ce;
    const double C90859 = C90253 * C90139;
    const double C91372 = C90311 * C90139;
    const double C90141 = C90111 * C90138;
    const double C90148 = ae * C90138;
    const double C90874 = C90253 * C90138;
    const double C91399 = C90311 * C90138;
    const double C90160 = C90149 * ae;
    const double C90158 = C90149 * C90119;
    const double C90157 = C90111 * C90149;
    const double C90156 = C90149 * ce;
    const double C90997 = C90149 * C90425;
    const double C90996 = C90253 * C90149;
    const double C91436 = C90149 * C90547;
    const double C91435 = C90311 * C90149;
    const double C90269 = ae * C90265;
    const double C90267 = C90111 * C90265;
    const double C90819 = C90253 * C90265;
    const double C91414 = C90311 * C90265;
    const double C90327 = ae * C90323;
    const double C90325 = C90111 * C90323;
    const double C90883 = C90253 * C90323;
    const double C90943 = C90311 * C90323;
    const double C90384 = C90380 * ce;
    const double C90382 = C90111 * C90380;
    const double C90821 = C90253 * C90380;
    const double C91391 = C90311 * C90380;
    const double C90485 = C90481 * ce;
    const double C90483 = C90111 * C90481;
    const double C90884 = C90253 * C90481;
    const double C90945 = C90311 * C90481;
    const double C90223 = C90111 * C90215;
    const double C91139 = C90215 * C90425;
    const double C91499 = C90253 * C90215;
    const double C91567 = C90215 * C90547;
    const double C90220 = C90111 * C90212;
    const double C91159 = C90212 * C90425;
    const double C91517 = C90253 * C90212;
    const double C91587 = C90212 * C90547;
    const double C90295 = C90291 * C90119;
    const double C91018 = C90111 * C90291;
    const double C91180 = C90253 * C90291;
    const double C91606 = C90291 * C90547;
    const double C90353 = C90349 * C90119;
    const double C91050 = C90111 * C90349;
    const double C91226 = C90349 * C90425;
    const double C91535 = C90253 * C90349;
    const double C91627 = C90311 * C90349;
    const double C90409 = C90406 * C90119;
    const double C91021 = C90111 * C90406;
    const double C91185 = C90253 * C90406;
    const double C91511 = C90406 * C90547;
    const double C90510 = C90507 * C90119;
    const double C91071 = C90111 * C90507;
    const double C91253 = C90507 * C90425;
    const double C91538 = C90253 * C90507;
    const double C91633 = C90311 * C90507;
    const double C90264 = C90130 * C90262;
    const double C90271 = C90151 * C90268;
    const double C90288 = C90193 * C90284;
    const double C90379 = C90130 * C90377;
    const double C90386 = C90151 * C90383;
    const double C90403 = C90193 * C90399;
    const double C90322 = C90130 * C90320;
    const double C90329 = C90151 * C90326;
    const double C90346 = C90193 * C90342;
    const double C90455 = C90130 * C90454;
    const double C90458 = C90151 * C90457;
    const double C90462 = C90193 * C90460;
    const double C90480 = C90130 * C90478;
    const double C90487 = C90151 * C90484;
    const double C90504 = C90193 * C90500;
    const double C90531 = C90130 * C90530;
    const double C90534 = C90151 * C90533;
    const double C90538 = C90193 * C90536;
    const double C89871 = C89869 - C89862;
    const double C20132 = C92067 * C817;
    const double C24534 = C92067 * C1401;
    const double C89860 = C89856 * C92067;
    const double C92068 = C92067 * C92062;
    const double C92072 = C92071 * C92067;
    const double C92324 = C92067 / C89854;
    const double C92323 = C92067 * C92063;
    const double C4099 = C92335 * C92067;
    const double C89896 = C89895 * C92084;
    const double C92351 = C92084 * C92329;
    const double C93 =
        (C92084 * std::pow(C92329, 2)) / C92330 + C92084 / C89894;
    const double C95 = C92332 * C92084;
    const double C1984 = C92331 * C92084;
    const double C89922 = C89921 * C92105;
    const double C181 = -(2 * C89893 * (yC - yD) * C92105) / C89890;
    const double C92352 = C92105 * C92333;
    const double C798 =
        (C92105 * std::pow(C92333, 2)) / C92330 + C92105 / C89894;
    const double C800 = C92332 * C92105;
    const double C1986 = C92331 * C92105;
    const double C89938 = C89937 * C92116;
    const double C244 = -(2 * C89893 * (zC - zD) * C92116) / C89890;
    const double C92353 = C92116 * C92334;
    const double C1383 =
        (C92116 * std::pow(C92334, 2)) / C92330 + C92116 / C89894;
    const double C1385 = C92332 * C92116;
    const double C2710 = C92331 * C92116;
    const double C322 = C92157 * C309;
    const double C11134 = C92157 * C1606;
    const double C89988 = C89987 * C92157;
    const double C307 = -(2 * C89851 * (yA - yB) * C92157) / C89849;
    const double C4327 =
        ((C92157 - (C89967 * 2 * C89851 * C89967 * C92157) / C89849) * ae) /
            C89849 -
        (0 * be) / C89858;
    const double C4328 =
        (0 * ae) / C89849 - (C89851 * C89967 * C92157) / C89853;
    const double C92168 = C92157 * C92166;
    const double C92171 = C92071 * C92157;
    const double C92339 = C92157 * C92167;
    const double C92338 = C92157 / C89854;
    const double C14525 = C92335 * C92157;
    const double C569 = C92183 * C556;
    const double C5425 = C92183 * C1204;
    const double C90035 = C90034 * C92183;
    const double C554 = -(2 * C89851 * (zA - zB) * C92183) / C89849;
    const double C9836 =
        ((C92183 - (C89974 * 2 * C89851 * C89974 * C92183) / C89849) * ae) /
            C89849 -
        (0 * be) / C89858;
    const double C9837 =
        (0 * ae) / C89849 - (C89851 * C89974 * C92183) / C89853;
    const double C92192 = C92183 * C92190;
    const double C92195 = C92071 * C92183;
    const double C92344 = C92183 * C92191;
    const double C92343 = C92183 / C89854;
    const double C28199 = C92335 * C92183;
    const double C90019 = C90017 - C90009;
    const double C90064 = C90062 - C90054;
    const double C115 =
        (C90113 * C90110 * C90121 + C90111 * (C90111 * C90126 + C90118 * ae) +
         C90111 * C90118 * ae) /
        C89849;
    const double C816 = (C90253 * (C90111 * C90126 + C90118 * ae)) / C89849;
    const double C818 = (C90113 * C90110 * C90121 + C90126 * C90425) / C89849;
    const double C1400 = (C90311 * (C90111 * C90126 + C90118 * ae)) / C89849;
    const double C1402 = (C90113 * C90110 * C90121 + C90126 * C90547) / C89849;
    const double C3435 = (C90311 * C90253 * C90126) / C89849;
    const double C4868 =
        (2 * C90253 * C90126 + C90253 * (C90126 + C90139 * C90425)) / C89849;
    const double C8415 = (C90311 * (C90126 + C90139 * C90425)) / C89849;
    const double C10811 =
        (2 * C90311 * C90126 + C90311 * (C90126 + C90139 * C90547)) / C89849;
    const double C127 =
        (-(ae * (C90111 * C90125 + C90118 * ce)) / C89890) / C89849 -
        ((C90118 + C90119 * C90116 * C90122) * C90120) / C90112 -
        ((C90111 * C90126 + C90118 * ae) * ce) / C90112 +
        C90111 * ((-(C90126 * ce) / C89890) / C89849 - (ae * C90125) / C90112 -
                  (C90111 *
                   (C90116 * C90122 + C90119 * bs[4] * std::pow(C90109, 4)) *
                   C90120) /
                      C90112);
    const double C119 = -(C90111 * (C90111 * C90125 + C90118 * ce) +
                          C90113 * C90110 * C90117 + C90111 * C90118 * ce) /
                        C89890;
    const double C812 = -(C90253 * (C90111 * C90125 + C90118 * ce)) / C89890;
    const double C822 = -(C90125 * C90425 + C90113 * C90110 * C90117) / C89890;
    const double C1396 = -(C90311 * (C90111 * C90125 + C90118 * ce)) / C89890;
    const double C1406 = -(C90125 * C90547 + C90113 * C90110 * C90117) / C89890;
    const double C3439 = -(C90311 * C90253 * C90125) / C89890;
    const double C4871 = (-2 * C90253 * C90125) / C89890 -
                         (C90253 * (C90138 * C90425 + C90125)) / C89890;
    const double C8418 = -(C90311 * (C90138 * C90425 + C90125)) / C89890;
    const double C10814 = (-2 * C90311 * C90125) / C89890 -
                          (C90311 * (C90138 * C90547 + C90125)) / C89890;
    const double C90136 = C90128 * ae;
    const double C90134 = C90111 * C90128;
    const double C90133 = C90128 * ce;
    const double C90140 = C90128 + C90137;
    const double C90429 = C90128 + C90428;
    const double C90551 = C90128 + C90550;
    const double C90820 = C90253 * C90128;
    const double C90944 = C90311 * C90128;
    const double C396 =
        (-((C90128 + C90425 * C90129 * C90130) * C90120 * C90119) / C89890) /
            C89849 -
        ((C90118 + C90425 * C90116 * C90122) * C90120) / C90112;
    const double C721 =
        (-((C90128 + C90547 * C90129 * C90130) * C90120 * C90119) / C89890) /
            C89849 -
        ((C90118 + C90547 * C90116 * C90122) * C90120) / C90112;
    const double C110 =
        2 * C90111 * C90118 + C90111 * (C90118 + C90128 * C90119);
    const double C803 = C90253 * (C90118 + C90128 * C90119);
    const double C1387 = C90311 * (C90118 + C90128 * C90119);
    const double C4865 =
        2 * C90253 * C90118 + C90253 * (C90118 + C90128 * C90425);
    const double C8412 = C90311 * (C90118 + C90128 * C90425);
    const double C10808 =
        2 * C90311 * C90118 + C90311 * (C90118 + C90128 * C90547);
    const double C190 =
        (-(ae * C90111 * C90259) / C89890) / C89849 -
        (C90122 * C90116 * C90260) / C90112 +
        C90111 * ((-(C90111 * C90130 * C90129 * C90260) / C89890) / C89849 -
                  (ae * C90259) / C90112);
    const double C184 = -(C90259 * C90119 + C90113 * C90110 * C90255) / C89890;
    const double C185 = (-2 * C90111 * C90259) / C89890 -
                        (C90111 * (C90265 * C90119 + C90259)) / C89890;
    const double C888 = -(C90253 * (C90265 * C90119 + C90259) +
                          (C90118 + C90128 * C90119) * ce) /
                        C89890;
    const double C889 =
        -(C90253 * C90111 * C90259 + C90111 * C90118 * ce) / C89890;
    const double C891 = -(C90253 * (C90253 * C90259 + C90118 * ce) +
                          C90113 * C90110 * C90255 + C90253 * C90118 * ce) /
                        C89890;
    const double C1469 = -(C90311 * (C90265 * C90119 + C90259)) / C89890;
    const double C1470 = -(C90311 * C90111 * C90259) / C89890;
    const double C1472 = -(C90259 * C90547 + C90113 * C90110 * C90255) / C89890;
    const double C3513 = -(C90311 * (C90253 * C90259 + C90118 * ce)) / C89890;
    const double C10930 = (-2 * C90311 * C90259) / C89890 -
                          (C90311 * (C90265 * C90547 + C90259)) / C89890;
    const double C253 =
        (-(ae * C90111 * C90317) / C89890) / C89849 -
        (C90122 * C90116 * C90318) / C90112 +
        C90111 * ((-(C90111 * C90130 * C90129 * C90318) / C89890) / C89849 -
                  (ae * C90317) / C90112);
    const double C247 = -(C90317 * C90119 + C90113 * C90110 * C90313) / C89890;
    const double C248 = (-2 * C90111 * C90317) / C89890 -
                        (C90111 * (C90323 * C90119 + C90317)) / C89890;
    const double C954 = -(C90253 * (C90323 * C90119 + C90317)) / C89890;
    const double C955 = -(C90253 * C90111 * C90317) / C89890;
    const double C957 = -(C90317 * C90425 + C90113 * C90110 * C90313) / C89890;
    const double C1538 = -(C90311 * (C90323 * C90119 + C90317) +
                           (C90118 + C90128 * C90119) * ce) /
                         C89890;
    const double C1539 =
        -(C90311 * C90111 * C90317 + C90111 * C90118 * ce) / C89890;
    const double C1541 = -(C90311 * (C90311 * C90317 + C90118 * ce) +
                           C90113 * C90110 * C90313 + C90311 * C90118 * ce) /
                         C89890;
    const double C3587 =
        -(C90311 * C90253 * C90317 + C90253 * C90118 * ce) / C89890;
    const double C5085 = (-2 * C90253 * C90317) / C89890 -
                         (C90253 * (C90323 * C90425 + C90317)) / C89890;
    const double C8653 = -(C90311 * (C90323 * C90425 + C90317) +
                           (C90118 + C90128 * C90425) * ce) /
                         C89890;
    const double C316 =
        (-(C90111 * C90374 * ce) / C89890) / C89849 -
        (C90122 * C90116 * C90375) / C90112 +
        C90111 * ((-(C90111 * C90130 * C90129 * C90375) / C89890) / C89849 -
                  (C90374 * ce) / C90112);
    const double C310 = (C90113 * C90110 * C90370 + C90374 * C90119) / C89849;
    const double C311 =
        (2 * C90111 * C90374 + C90111 * (C90374 + C90380 * C90119)) / C89849;
    const double C1020 = (C90253 * (C90374 + C90380 * C90119) +
                          (C90118 + C90128 * C90119) * ae) /
                         C89849;
    const double C1021 =
        (C90253 * C90111 * C90374 + C90111 * C90118 * ae) / C89849;
    const double C1023 =
        (C90113 * C90110 * C90370 + C90253 * (C90253 * C90374 + C90118 * ae) +
         C90253 * C90118 * ae) /
        C89849;
    const double C1604 = (C90311 * (C90374 + C90380 * C90119)) / C89849;
    const double C1605 = (C90311 * C90111 * C90374) / C89849;
    const double C1607 = (C90113 * C90110 * C90370 + C90374 * C90547) / C89849;
    const double C3661 = (C90311 * (C90253 * C90374 + C90118 * ae)) / C89849;
    const double C11126 =
        (2 * C90311 * C90374 + C90311 * (C90374 + C90380 * C90547)) / C89849;
    const double C563 =
        (-(C90111 * C90475 * ce) / C89890) / C89849 -
        (C90122 * C90116 * C90476) / C90112 +
        C90111 * ((-(C90111 * C90130 * C90129 * C90476) / C89890) / C89849 -
                  (C90475 * ce) / C90112);
    const double C557 = (C90113 * C90110 * C90471 + C90475 * C90119) / C89849;
    const double C558 =
        (2 * C90111 * C90475 + C90111 * (C90475 + C90481 * C90119)) / C89849;
    const double C1202 = (C90253 * (C90475 + C90481 * C90119)) / C89849;
    const double C1203 = (C90253 * C90111 * C90475) / C89849;
    const double C1205 = (C90113 * C90110 * C90471 + C90475 * C90425) / C89849;
    const double C1786 = (C90311 * (C90475 + C90481 * C90119) +
                          (C90118 + C90128 * C90119) * ae) /
                         C89849;
    const double C1787 =
        (C90311 * C90111 * C90475 + C90111 * C90118 * ae) / C89849;
    const double C1789 =
        (C90113 * C90110 * C90471 + C90311 * (C90311 * C90475 + C90118 * ae) +
         C90311 * C90118 * ae) /
        C89849;
    const double C3875 =
        (C90311 * C90253 * C90475 + C90253 * C90118 * ae) / C89849;
    const double C5417 =
        (2 * C90253 * C90475 + C90253 * (C90475 + C90481 * C90425)) / C89849;
    const double C9072 = (C90311 * (C90475 + C90481 * C90425) +
                          (C90118 + C90128 * C90425) * ae) /
                         C89849;
    const double C324 = C92157 * C315;
    const double C403 = C92157 * C395;
    const double C483 = C92157 * C475;
    const double C486 = C92157 * C476;
    const double C571 = C92183 * C562;
    const double C650 = C92183 * C642;
    const double C653 = C92183 * C643;
    const double C728 = C92183 * C720;
    const double C20134 = C92067 * C829;
    const double C20218 = C92067 * C898;
    const double C20283 = C92067 * C964;
    const double C5427 = C92183 * C1212;
    const double C5538 = C92183 * C1267;
    const double C5628 = C92183 * C1328;
    const double C24536 = C92067 * C1413;
    const double C24645 = C92067 * C1479;
    const double C24746 = C92067 * C1548;
    const double C11136 = C92157 * C1614;
    const double C11248 = C92157 * C1672;
    const double C11344 = C92157 * C1727;
    const double C90171 = C90111 * C90166;
    const double C90189 = C90166 * ce;
    const double C90726 = C90253 * C90166;
    const double C90748 = C90311 * C90166;
    const double C90965 = C90166 * C90425;
    const double C91374 = C90166 * C90547;
    const double C90170 = C90111 * C90163;
    const double C90190 = ae * C90163;
    const double C90727 = C90253 * C90163;
    const double C90749 = C90311 * C90163;
    const double C90980 = C90163 * C90425;
    const double C91401 = C90163 * C90547;
    const double C90169 = C90149 + C90162;
    const double C90208 = C90191 * ae;
    const double C90206 = C90191 * C90119;
    const double C90205 = C90111 * C90191;
    const double C90204 = C90191 * ce;
    const double C90219 = C90191 + C90211;
    const double C90440 = C90191 + C90439;
    const double C90562 = C90191 + C90561;
    const double C91182 = C90191 * C90425;
    const double C91181 = C90253 * C90191;
    const double C91510 = C90191 * C90547;
    const double C91628 = C90311 * C90191;
    const double C90275 = C90273 * C90119;
    const double C90285 = ae * C90273;
    const double C90282 = C90111 * C90273;
    const double C90995 = C90253 * C90273;
    const double C91318 = C90311 * C90273;
    const double C91416 = C90273 * C90547;
    const double C90333 = C90331 * C90119;
    const double C90343 = ae * C90331;
    const double C90340 = C90111 * C90331;
    const double C91041 = C90331 * C90425;
    const double C91224 = C90253 * C90331;
    const double C91328 = C90311 * C90331;
    const double C90390 = C90388 * C90119;
    const double C90400 = C90388 * ce;
    const double C90397 = C90111 * C90388;
    const double C90998 = C90253 * C90388;
    const double C91291 = C90311 * C90388;
    const double C91392 = C90388 * C90547;
    const double C90434 = C90149 + C90433;
    const double C90491 = C90489 * C90119;
    const double C90501 = C90489 * ce;
    const double C90498 = C90111 * C90489;
    const double C91062 = C90489 * C90425;
    const double C91251 = C90253 * C90489;
    const double C91437 = C90311 * C90489;
    const double C90556 = C90149 + C90555;
    const double C90152 = C90147 / C89890;
    const double C90964 = C90147 / C90112;
    const double C5722 = (C90253 * C90126 + C90859 * C90547) / C89849;
    const double C90153 = C90148 / C90112;
    const double C5725 = -(C90874 * C90547 + C90253 * C90125) / C89890;
    const double C90165 = C90128 + C90158;
    const double C90167 = C90157 * ae;
    const double C90164 = C90157 * ce;
    const double C90195 = 2 * C90157;
    const double C90827 = C90253 * C90157;
    const double C90950 = C90311 * C90157;
    const double C91003 = C90128 + C90997;
    const double C91005 = C90996 * ae;
    const double C91002 = C90996 * ce;
    const double C91183 = 2 * C90996;
    const double C91357 = C90311 * C90996;
    const double C91442 = C90128 + C91436;
    const double C91444 = C91435 * ae;
    const double C91441 = C91435 * ce;
    const double C91630 = 2 * C91435;
    const double C90272 = C90269 / C90112;
    const double C1473 = -(C90267 * C90547 + C90111 * C90259) / C89890;
    const double C90330 = C90327 / C90112;
    const double C958 = -(C90325 * C90425 + C90111 * C90317) / C89890;
    const double C90387 = C90384 / C90112;
    const double C90993 = C90384 / C89890;
    const double C1608 = (C90111 * C90374 + C90382 * C90547) / C89849;
    const double C90488 = C90485 / C90112;
    const double C91432 = C90485 / C89890;
    const double C1206 = (C90111 * C90475 + C90483 * C90425) / C89849;
    const double C91141 = C90166 + C91139;
    const double C91501 = C91499 * C90547;
    const double C91569 = C90166 + C91567;
    const double C91163 = C91159 + C90163;
    const double C91519 = C91517 * C90547;
    const double C91591 = C91587 + C90163;
    const double C90298 = C90295 + C90273;
    const double C91024 = C90253 * C91018;
    const double C91425 = C91018 * C90547;
    const double C91610 = C91606 + C90273;
    const double C90356 = C90353 + C90331;
    const double C91052 = C91050 * C90425;
    const double C91455 = C90311 * C91050;
    const double C91486 = C90253 * C91050;
    const double C91230 = C91226 + C90331;
    const double C91541 = C90311 * C91535;
    const double C90412 = C90388 + C90409;
    const double C91027 = C90253 * C91021;
    const double C91396 = C91021 * C90547;
    const double C91513 = C90388 + C91511;
    const double C90513 = C90489 + C90510;
    const double C91073 = C91071 * C90425;
    const double C91458 = C90311 * C91071;
    const double C91488 = C90253 * C91071;
    const double C91257 = C90489 + C91253;
    const double C91544 = C90311 * C91538;
    const double C191 =
        2 * ((-(C90111 * C90264) / C89890) / C89849 - (ae * C90259) / C90112) -
        (ae * (C90265 * C90119 + C90259)) / C90112 +
        C90111 *
            ((-(ae * C90111 * C90265) / C89890) / C89849 - C90264 / C90112 +
             C90111 *
                 ((-(C90111 * C90151 * C90150 * C90260) / C89890) / C89849 -
                  (ae * C90265) / C90112));
    const double C897 = C90253 * ((-(C90111 * C90264) / C89890) / C89849 -
                                  (ae * C90259) / C90112) -
                        ((C90111 * C90126 + C90118 * ae) * ce) / C90112;
    const double C899 = (-(C90253 * C90126 * ce) / C89890) / C89849 -
                        (C90122 * C90116 * C90260) / C90112 +
                        C90253 * ((-(C90253 * C90264) / C89890) / C89849 -
                                  (C90126 * ce) / C90112);
    const double C1478 = C90311 * ((-(C90111 * C90264) / C89890) / C89849 -
                                   (ae * C90259) / C90112);
    const double C1480 = (-(C90264 * C90547) / C89890) / C89849 -
                         (C90122 * C90116 * C90260) / C90112;
    const double C3517 = C90311 * ((-(C90253 * C90264) / C89890) / C89849 -
                                   (C90126 * ce) / C90112);
    const double C90274 = C90111 * C90271;
    const double C90283 = C90271 / C90112;
    const double C90963 = C90253 * C90271;
    const double C4990 =
        2 * ((-(C90253 * C90264) / C89890) / C89849 - (C90126 * ce) / C90112) -
        ((C90126 + C90139 * C90425) * ce) / C90112 +
        C90253 *
            ((-(C90253 * C90139 * ce) / C89890) / C89849 - C90264 / C90112 +
             C90253 *
                 ((-(C90253 * C90271) / C89890) / C89849 - C90147 / C90112));
    const double C5808 =
        (-(C90253 * C90264) / C89890) / C89849 - (C90126 * ce) / C90112 +
        ((-(C90253 * C90271) / C89890) / C89849 - C90147 / C90112) * C90547;
    const double C8543 =
        C90311 *
        ((-(C90859 * ce) / C89890) / C89849 - C90264 / C90112 +
         C90253 * ((-(C90253 * C90271) / C89890) / C89849 - C90147 / C90112));
    const double C10933 =
        (-2 * C90311 * C90264) / C90112 +
        C90311 * ((-(C90271 * C90547) / C89890) / C89849 - C90264 / C90112);
    const double C90293 = C90111 * C90288;
    const double C91136 = C90253 * C90288;
    const double C91558 = C90288 * C90547;
    const double C317 =
        2 * ((-(C90111 * C90379) / C89890) / C89849 - (C90374 * ce) / C90112) -
        ((C90374 + C90380 * C90119) * ce) / C90112 +
        C90111 *
            ((-(C90111 * C90380 * ce) / C89890) / C89849 - C90379 / C90112 +
             C90111 *
                 ((-(C90111 * C90151 * C90150 * C90375) / C89890) / C89849 -
                  (C90380 * ce) / C90112));
    const double C1029 = C90253 * ((-(C90111 * C90379) / C89890) / C89849 -
                                   (C90374 * ce) / C90112) -
                         (ae * (C90111 * C90125 + C90118 * ce)) / C90112;
    const double C1031 = (-(ae * C90253 * C90125) / C89890) / C89849 -
                         (C90122 * C90116 * C90375) / C90112 +
                         C90253 * ((-(C90253 * C90379) / C89890) / C89849 -
                                   (ae * C90125) / C90112);
    const double C1613 = C90311 * ((-(C90111 * C90379) / C89890) / C89849 -
                                   (C90374 * ce) / C90112);
    const double C1615 = (-(C90379 * C90547) / C89890) / C89849 -
                         (C90122 * C90116 * C90375) / C90112;
    const double C3665 = (-(C90253 * C90311 * C90379) / C89890) / C89849 -
                         (ae * C90311 * C90125) / C90112;
    const double C90389 = C90111 * C90386;
    const double C90398 = C90386 / C90112;
    const double C90979 = C90253 * C90386;
    const double C91107 = C90311 * C90386;
    const double C5968 =
        C90253 * ((-(C90386 * C90547) / C89890) / C89849 - C90379 / C90112) -
        (ae * (C90138 * C90547 + C90125)) / C90112;
    const double C8769 =
        (-(ae * C90311 * C90874) / C89890) / C89849 -
        (C90311 * C90379) / C90112 +
        C90253 * ((-(C90253 * C90311 * C90386) / C89890) / C89849 -
                  (ae * C90311 * C90138) / C90112);
    const double C11129 =
        (-2 * C90311 * C90379) / C90112 +
        C90311 * ((-(C90386 * C90547) / C89890) / C89849 - C90379 / C90112);
    const double C90408 = C90111 * C90403;
    const double C91157 = C90253 * C90403;
    const double C91279 = C90403 * C90547;
    const double C91311 = C90311 * C90403;
    const double C254 =
        2 * ((-(C90111 * C90322) / C89890) / C89849 - (ae * C90317) / C90112) -
        (ae * (C90323 * C90119 + C90317)) / C90112 +
        C90111 *
            ((-(ae * C90111 * C90323) / C89890) / C89849 - C90322 / C90112 +
             C90111 *
                 ((-(C90111 * C90151 * C90150 * C90318) / C89890) / C89849 -
                  (ae * C90323) / C90112));
    const double C963 = C90253 * ((-(C90111 * C90322) / C89890) / C89849 -
                                  (ae * C90317) / C90112);
    const double C965 = (-(C90322 * C90425) / C89890) / C89849 -
                        (C90122 * C90116 * C90318) / C90112;
    const double C1547 = C90311 * ((-(C90111 * C90322) / C89890) / C89849 -
                                   (ae * C90317) / C90112) -
                         ((C90111 * C90126 + C90118 * ae) * ce) / C90112;
    const double C1549 = (-(C90311 * C90126 * ce) / C89890) / C89849 -
                         (C90122 * C90116 * C90318) / C90112 +
                         C90311 * ((-(C90311 * C90322) / C89890) / C89849 -
                                   (C90126 * ce) / C90112);
    const double C3591 = (-(C90311 * C90253 * C90322) / C89890) / C89849 -
                         (C90253 * C90126 * ce) / C90112;
    const double C90332 = C90111 * C90329;
    const double C90341 = C90329 / C90112;
    const double C91341 = C90253 * C90329;
    const double C91373 = C90311 * C90329;
    const double C5088 =
        (-2 * C90253 * C90322) / C90112 +
        C90253 * ((-(C90329 * C90425) / C89890) / C89849 - C90322 / C90112);
    const double C5888 =
        (-(C90311 * C90859 * ce) / C89890) / C89849 -
        (C90253 * C90322) / C90112 +
        C90311 * ((-(C90311 * C90253 * C90329) / C89890) / C89849 -
                  (C90859 * ce) / C90112);
    const double C8656 =
        C90311 * ((-(C90329 * C90425) / C89890) / C89849 - C90322 / C90112) -
        ((C90126 + C90139 * C90425) * ce) / C90112;
    const double C11031 =
        2 * ((-(C90311 * C90322) / C89890) / C89849 - (C90126 * ce) / C90112) -
        ((C90126 + C90139 * C90547) * ce) / C90112 +
        C90311 *
            ((-(C90311 * C90139 * ce) / C89890) / C89849 - C90322 / C90112 +
             C90311 *
                 ((-(C90311 * C90329) / C89890) / C89849 - C90147 / C90112));
    const double C90351 = C90111 * C90346;
    const double C91150 = C90346 * C90425;
    const double C91497 = C90253 * C90346;
    const double C91565 = C90311 * C90346;
    const double C477 =
        (-2 * C90111 * C90455) / C90112 +
        C90111 * ((-(C90151 * C90150 * C90452 * C90119) / C89890) / C89849 -
                  C90455 / C90112);
    const double C1145 = (-(C90253 * C90111 * C90455) / C89890) / C89849 -
                         (ae * C90111 * C90317) / C90112;
    const double C1147 = (-(ae * C90253 * C90317) / C89890) / C89849 -
                         (C90122 * C90116 * C90452) / C90112 +
                         C90253 * ((-(C90253 * C90455) / C89890) / C89849 -
                                   (ae * C90317) / C90112);
    const double C1728 = (-(C90311 * C90374 * ce) / C89890) / C89849 -
                         (C90122 * C90116 * C90452) / C90112 +
                         C90311 * ((-(C90311 * C90455) / C89890) / C89849 -
                                   (C90374 * ce) / C90112);
    const double C1729 = (-(C90311 * C90111 * C90455) / C89890) / C89849 -
                         (C90111 * C90374 * ce) / C90112;
    const double C3805 = C90253 * ((-(C90311 * C90455) / C89890) / C89849 -
                                   (C90374 * ce) / C90112) -
                         (ae * (C90311 * C90317 + C90118 * ce)) / C90112;
    const double C90461 = C90458 / C90112;
    const double C90839 = C90111 * C90458;
    const double C91040 = C90253 * C90458;
    const double C91115 = C90311 * C90458;
    const double C478 =
        3 * ((-(C90458 * C90119) / C89890) / C89849 - C90455 / C90112) +
        C90111 * ((-2 * C90111 * C90458) / C90112 +
                  C90111 * ((-(C90193 * C90192 * C90452 * C90119) / C89890) /
                                C89849 -
                            C90458 / C90112));
    const double C1144 =
        C90253 * ((-(C90458 * C90119) / C89890) / C89849 - C90455 / C90112) -
        (ae * (C90323 * C90119 + C90317)) / C90112;
    const double C1148 =
        (-(ae * C90253 * C90325) / C89890) / C89849 -
        (C90111 * C90455) / C90112 +
        C90253 * ((-(C90253 * C90111 * C90458) / C89890) / C89849 -
                  (ae * C90325) / C90112);
    const double C1730 =
        (-(C90311 * C90382 * ce) / C89890) / C89849 -
        (C90111 * C90455) / C90112 +
        C90311 * ((-(C90311 * C90111 * C90458) / C89890) / C89849 -
                  (C90382 * ce) / C90112);
    const double C1731 =
        C90311 * ((-(C90458 * C90119) / C89890) / C89849 - C90455 / C90112) -
        ((C90374 + C90380 * C90119) * ce) / C90112;
    const double C90463 = C90462 * C90119;
    const double C91048 = C90111 * C90462;
    const double C91225 = C90253 * C90462;
    const double C91292 = C90311 * C90462;
    const double C564 =
        2 * ((-(C90111 * C90480) / C89890) / C89849 - (C90475 * ce) / C90112) -
        ((C90475 + C90481 * C90119) * ce) / C90112 +
        C90111 *
            ((-(C90111 * C90481 * ce) / C89890) / C89849 - C90480 / C90112 +
             C90111 *
                 ((-(C90111 * C90151 * C90150 * C90476) / C89890) / C89849 -
                  (C90481 * ce) / C90112));
    const double C1211 = C90253 * ((-(C90111 * C90480) / C89890) / C89849 -
                                   (C90475 * ce) / C90112);
    const double C1213 = (-(C90480 * C90425) / C89890) / C89849 -
                         (C90122 * C90116 * C90476) / C90112;
    const double C1795 = C90311 * ((-(C90111 * C90480) / C89890) / C89849 -
                                   (C90475 * ce) / C90112) -
                         (ae * (C90111 * C90125 + C90118 * ce)) / C90112;
    const double C1797 = (-(ae * C90311 * C90125) / C89890) / C89849 -
                         (C90122 * C90116 * C90476) / C90112 +
                         C90311 * ((-(C90311 * C90480) / C89890) / C89849 -
                                   (ae * C90125) / C90112);
    const double C3879 = (-(C90311 * C90253 * C90480) / C89890) / C89849 -
                         (ae * C90253 * C90125) / C90112;
    const double C90490 = C90111 * C90487;
    const double C90499 = C90487 / C90112;
    const double C91350 = C90253 * C90487;
    const double C91400 = C90311 * C90487;
    const double C5420 =
        (-2 * C90253 * C90480) / C90112 +
        C90253 * ((-(C90487 * C90425) / C89890) / C89849 - C90480 / C90112);
    const double C6202 =
        (-(ae * C90311 * C90874) / C89890) / C89849 -
        (C90253 * C90480) / C90112 +
        C90311 * ((-(C90311 * C90253 * C90487) / C89890) / C89849 -
                  (ae * C90874) / C90112);
    const double C9075 =
        C90311 * ((-(C90487 * C90425) / C89890) / C89849 - C90480 / C90112) -
        (ae * (C90138 * C90425 + C90125)) / C90112;
    const double C90509 = C90111 * C90504;
    const double C91245 = C90504 * C90425;
    const double C91516 = C90253 * C90504;
    const double C91585 = C90311 * C90504;
    const double C644 =
        (-2 * C90111 * C90531) / C90112 +
        C90111 * ((-(C90151 * C90150 * C90528 * C90119) / C89890) / C89849 -
                  C90531 / C90112);
    const double C1268 = (-(C90253 * C90475 * ce) / C89890) / C89849 -
                         (C90122 * C90116 * C90528) / C90112 +
                         C90253 * ((-(C90253 * C90531) / C89890) / C89849 -
                                   (C90475 * ce) / C90112);
    const double C1269 = (-(C90253 * C90111 * C90531) / C89890) / C89849 -
                         (C90111 * C90475 * ce) / C90112;
    const double C1853 = (-(C90311 * C90111 * C90531) / C89890) / C89849 -
                         (ae * C90111 * C90259) / C90112;
    const double C1855 = (-(ae * C90311 * C90259) / C89890) / C89849 -
                         (C90122 * C90116 * C90528) / C90112 +
                         C90311 * ((-(C90311 * C90531) / C89890) / C89849 -
                                   (ae * C90259) / C90112);
    const double C3949 = C90311 * ((-(C90253 * C90531) / C89890) / C89849 -
                                   (C90475 * ce) / C90112) -
                         (ae * (C90253 * C90259 + C90118 * ce)) / C90112;
    const double C90537 = C90534 / C90112;
    const double C90846 = C90111 * C90534;
    const double C91061 = C90253 * C90534;
    const double C91415 = C90311 * C90534;
    const double C645 =
        3 * ((-(C90534 * C90119) / C89890) / C89849 - C90531 / C90112) +
        C90111 * ((-2 * C90111 * C90534) / C90112 +
                  C90111 * ((-(C90193 * C90192 * C90528 * C90119) / C89890) /
                                C89849 -
                            C90534 / C90112));
    const double C1270 =
        (-(C90253 * C90483 * ce) / C89890) / C89849 -
        (C90111 * C90531) / C90112 +
        C90253 * ((-(C90253 * C90111 * C90534) / C89890) / C89849 -
                  (C90483 * ce) / C90112);
    const double C1271 =
        C90253 * ((-(C90534 * C90119) / C89890) / C89849 - C90531 / C90112) -
        ((C90475 + C90481 * C90119) * ce) / C90112;
    const double C1852 =
        C90311 * ((-(C90534 * C90119) / C89890) / C89849 - C90531 / C90112) -
        (ae * (C90265 * C90119 + C90259)) / C90112;
    const double C1856 =
        (-(ae * C90311 * C90267) / C89890) / C89849 -
        (C90111 * C90531) / C90112 +
        C90311 * ((-(C90311 * C90111 * C90534) / C89890) / C89849 -
                  (ae * C90267) / C90112);
    const double C90539 = C90538 * C90119;
    const double C91069 = C90111 * C90538;
    const double C91252 = C90253 * C90538;
    const double C91604 = C90311 * C90538;
    const double C89865 = C89860 / C89853;
    const double C89863 = 2 * C89860;
    const double C92326 = C92068 / C89858;
    const double C92325 = C92068 * C92063;
    const double C92322 = C92068 / C89849;
    const double C92075 = C92072 * C92063;
    const double C92 = C92072 / C92328;
    const double C41547 = C92072 / C89854;
    const double C4097 = (C92067 * std::pow(C92063, 2)) / C89853 + C92324;
    const double C92348 = C92323 / C89849;
    const double C4098 = (-2 * C92071 * C92323) / C89849;
    const double C89897 = 2 * C89896;
    const double C94 = (-2 * C92331 * C92351) / C89890;
    const double C1983 = -C92351 / C89890;
    const double C89923 = 2 * C89922;
    const double C799 = (-2 * C92331 * C92352) / C89890;
    const double C1985 = -C92352 / C89890;
    const double C89939 = 2 * C89938;
    const double C1384 = (-2 * C92331 * C92353) / C89890;
    const double C2709 = -C92353 / C89890;
    const double C89989 = 2 * C89988;
    const double C90007 = C89988 / C89853;
    const double C325 = C307 * C109;
    const double C323 = C307 * C118;
    const double C321 = C307 * C108;
    const double C402 = C307 * C183;
    const double C482 = C307 * C246;
    const double C2200 = C307 * C804;
    const double C2922 = C307 * C1388;
    const double C11151 = C307 * C1390;
    const double C11135 = C307 * C1397;
    const double C11133 = C307 * C1389;
    const double C11247 = C307 * C1471;
    const double C11343 = C307 * C1540;
    const double C13936 = C307 * C3431;
    const double C4338 = C4327 * C109;
    const double C4336 = C4327 * C118;
    const double C4332 = C4327 * C108;
    const double C4442 = C4327 * C183;
    const double C4539 = C4327 * C246;
    const double C6788 = C4327 * C804;
    const double C7741 = C4327 * C1388;
    const double C34977 = C4327 * C1390;
    const double C34973 = C4327 * C1397;
    const double C34969 = C4327 * C1389;
    const double C35085 = C4327 * C1471;
    const double C35184 = C4327 * C1540;
    const double C37658 = C4327 * C3431;
    const double C4330 = C4328 * C804;
    const double C34971 = C4328 * C3431;
    const double C92341 = C92168 / C89858;
    const double C92340 = C92168 * C92167;
    const double C92336 = C92168 / C89849;
    const double C92174 = C92171 * C92167;
    const double C19670 = C92171 / C92328;
    const double C46527 = C92171 / C89854;
    const double C92354 = C92339 / C89849;
    const double C14524 = (-2 * C92071 * C92339) / C89849;
    const double C14523 = (C92157 * std::pow(C92167, 2)) / C89853 + C92338;
    const double C90036 = 2 * C90035;
    const double C90052 = C90035 / C89853;
    const double C572 = C554 * C109;
    const double C570 = C554 * C118;
    const double C568 = C554 * C108;
    const double C649 = C554 * C183;
    const double C727 = C554 * C246;
    const double C2456 = C554 * C804;
    const double C3178 = C554 * C1388;
    const double C5442 = C554 * C806;
    const double C5426 = C554 * C813;
    const double C5424 = C554 * C805;
    const double C5537 = C554 * C890;
    const double C5627 = C554 * C956;
    const double C9085 = C554 * C3431;
    const double C9847 = C9836 * C109;
    const double C9845 = C9836 * C118;
    const double C9841 = C9836 * C108;
    const double C9951 = C9836 * C183;
    const double C10047 = C9836 * C246;
    const double C12311 = C9836 * C804;
    const double C13300 = C9836 * C1388;
    const double C24227 = C9836 * C806;
    const double C24223 = C9836 * C813;
    const double C24219 = C9836 * C805;
    const double C24337 = C9836 * C890;
    const double C24428 = C9836 * C956;
    const double C27894 = C9836 * C3431;
    const double C9839 = C9837 * C1388;
    const double C24221 = C9837 * C3431;
    const double C92346 = C92192 / C89858;
    const double C92345 = C92192 * C92191;
    const double C92337 = C92192 / C89849;
    const double C92198 = C92195 * C92191;
    const double C38284 = C92195 / C92328;
    const double C69237 = C92195 / C89854;
    const double C92357 = C92344 / C89849;
    const double C28198 = (-2 * C92071 * C92344) / C89849;
    const double C28197 = (C92183 * std::pow(C92191, 2)) / C89853 + C92343;
    const double C15285 = C92072 * C816;
    const double C21168 = C92067 * C816;
    const double C47275 = C92072 * C816;
    const double C20136 = C92067 * C818;
    const double C26332 = C92067 * C1400;
    const double C29623 = C92072 * C1400;
    const double C53297 = C92072 * C1400;
    const double C24548 = C92067 * C1402;
    const double C22426 = C92067 * C3435;
    const double C20140 = C92067 * C4868;
    const double C22422 = C92067 * C8415;
    const double C34708 = C92067 * C10811;
    const double C327 = C307 * C119;
    const double C574 = C554 * C119;
    const double C4342 = C4327 * C119;
    const double C9851 = C9836 * C119;
    const double C2202 = C307 * C812;
    const double C2458 = C554 * C812;
    const double C4334 = C4328 * C812;
    const double C6792 = C4327 * C812;
    const double C12315 = C9836 * C812;
    const double C5440 = C554 * C822;
    const double C24231 = C9836 * C822;
    const double C2924 = C307 * C1396;
    const double C3180 = C554 * C1396;
    const double C7745 = C4327 * C1396;
    const double C9843 = C9837 * C1396;
    const double C13304 = C9836 * C1396;
    const double C11149 = C307 * C1406;
    const double C34981 = C4327 * C1406;
    const double C9083 = C554 * C3439;
    const double C13938 = C307 * C3439;
    const double C24225 = C9837 * C3439;
    const double C27890 = C9836 * C3439;
    const double C34975 = C4328 * C3439;
    const double C37662 = C4327 * C3439;
    const double C15834 = C554 * C4871;
    const double C24237 = C9836 * C4871;
    const double C19399 = C554 * C8418;
    const double C24233 = C9837 * C8418;
    const double C27882 = C9836 * C8418;
    const double C37664 = C4328 * C8418;
    const double C29944 = C307 * C10814;
    const double C34987 = C4327 * C10814;
    const double C90145 = C90142 + C90136;
    const double C90823 = C90821 + C90136;
    const double C90947 = C90945 + C90136;
    const double C3806 =
        C90253 * ((-(C90311 * C90111 * C90458) / C89890) / C89849 -
                  (C90382 * ce) / C90112) -
        (ae * (C90311 * C90325 + C90134 * ce)) / C90112;
    const double C3950 =
        C90311 * ((-(C90253 * C90111 * C90534) / C89890) / C89849 -
                  (C90483 * ce) / C90112) -
        (ae * (C90253 * C90267 + C90134 * ce)) / C90112;
    const double C892 = -(C90253 * (C90253 * C90267 + C90134 * ce) +
                          C90111 * C90259 + C90253 * C90134 * ce) /
                        C89890;
    const double C1024 =
        (C90111 * C90374 + C90253 * (C90253 * C90382 + C90134 * ae) +
         C90253 * C90134 * ae) /
        C89849;
    const double C1542 = -(C90311 * (C90311 * C90325 + C90134 * ce) +
                           C90111 * C90317 + C90311 * C90134 * ce) /
                         C89890;
    const double C1790 =
        (C90111 * C90475 + C90311 * (C90311 * C90483 + C90134 * ae) +
         C90311 * C90134 * ae) /
        C89849;
    const double C3514 = -(C90311 * (C90253 * C90267 + C90134 * ce)) / C89890;
    const double C3588 =
        -(C90311 * C90253 * C90325 + C90253 * C90134 * ce) / C89890;
    const double C3662 = (C90311 * (C90253 * C90382 + C90134 * ae)) / C89849;
    const double C3876 =
        (C90311 * C90253 * C90483 + C90253 * C90134 * ae) / C89849;
    const double C807 = C90111 * C90118 + C90134 * C90425;
    const double C1391 = C90111 * C90118 + C90134 * C90547;
    const double C3432 = C90311 * C90253 * C90134;
    const double C4866 =
        2 * C90253 * C90134 + C90253 * (C90134 + C90157 * C90425);
    const double C8413 = C90311 * (C90134 + C90157 * C90425);
    const double C10809 =
        2 * C90311 * C90134 + C90311 * (C90134 + C90157 * C90547);
    const double C90144 = C90141 + C90133;
    const double C90822 = C90819 + C90133;
    const double C90946 = C90943 + C90133;
    const double C90143 = C90140 * C90120;
    const double C90430 = C90429 * C90120;
    const double C90552 = C90551 * C90120;
    const double C5885 = -(C90311 * (C90311 * C90883 + C90820 * ce) +
                           C90253 * C90317 + C90311 * C90820 * ce) /
                         C89890;
    const double C6199 =
        (C90253 * C90475 + C90311 * (C90311 * C90884 + C90820 * ae) +
         C90311 * C90820 * ae) /
        C89849;
    const double C5719 = C90253 * C90118 + C90820 * C90547;
    const double C24524 =
        2 * C90311 * C90820 + C90311 * (C90820 + C90996 * C90547);
    const double C406 = C92157 * C396;
    const double C731 = C92183 * C721;
    const double C329 = C307 * C110;
    const double C576 = C554 * C110;
    const double C4346 = C4327 * C110;
    const double C9855 = C9836 * C110;
    const double C2204 = C307 * C803;
    const double C2460 = C554 * C803;
    const double C4340 = C4328 * C803;
    const double C6796 = C4327 * C803;
    const double C12319 = C9836 * C803;
    const double C2926 = C307 * C1387;
    const double C3182 = C554 * C1387;
    const double C7749 = C4327 * C1387;
    const double C9849 = C9837 * C1387;
    const double C13308 = C9836 * C1387;
    const double C15836 = C554 * C4865;
    const double C24241 = C9836 * C4865;
    const double C19401 = C554 * C8412;
    const double C24229 = C9837 * C8412;
    const double C27886 = C9836 * C8412;
    const double C37660 = C4328 * C8412;
    const double C29946 = C307 * C10808;
    const double C34991 = C4327 * C10808;
    const double C405 = C307 * C184;
    const double C652 = C554 * C184;
    const double C4447 = C4327 * C184;
    const double C9956 = C9836 * C184;
    const double C408 = C307 * C185;
    const double C655 = C554 * C185;
    const double C4453 = C4327 * C185;
    const double C9962 = C9836 * C185;
    const double C2293 = C307 * C888;
    const double C2549 = C554 * C888;
    const double C4449 = C4328 * C888;
    const double C6916 = C4327 * C888;
    const double C12439 = C9836 * C888;
    const double C2288 = C307 * C889;
    const double C2544 = C554 * C889;
    const double C4444 = C4328 * C889;
    const double C6912 = C4327 * C889;
    const double C12435 = C9836 * C889;
    const double C5539 = C554 * C891;
    const double C24339 = C9836 * C891;
    const double C3011 = C307 * C1469;
    const double C3267 = C554 * C1469;
    const double C7867 = C4327 * C1469;
    const double C9958 = C9837 * C1469;
    const double C13426 = C9836 * C1469;
    const double C3008 = C307 * C1470;
    const double C3264 = C554 * C1470;
    const double C7863 = C4327 * C1470;
    const double C9953 = C9837 * C1470;
    const double C13422 = C9836 * C1470;
    const double C11255 = C307 * C1472;
    const double C35090 = C4327 * C1472;
    const double C9192 = C554 * C3513;
    const double C14049 = C307 * C3513;
    const double C24335 = C9837 * C3513;
    const double C28002 = C9836 * C3513;
    const double C35087 = C4328 * C3513;
    const double C37782 = C4327 * C3513;
    const double C30037 = C307 * C10930;
    const double C35096 = C4327 * C10930;
    const double C485 = C307 * C247;
    const double C730 = C554 * C247;
    const double C4544 = C4327 * C247;
    const double C10052 = C9836 * C247;
    const double C488 = C307 * C248;
    const double C733 = C554 * C248;
    const double C4550 = C4327 * C248;
    const double C10058 = C9836 * C248;
    const double C2376 = C307 * C954;
    const double C2632 = C554 * C954;
    const double C4546 = C4328 * C954;
    const double C7022 = C4327 * C954;
    const double C12545 = C9836 * C954;
    const double C2379 = C307 * C955;
    const double C2635 = C554 * C955;
    const double C4541 = C4328 * C955;
    const double C7026 = C4327 * C955;
    const double C12549 = C9836 * C955;
    const double C5635 = C554 * C957;
    const double C24433 = C9836 * C957;
    const double C3097 = C307 * C1538;
    const double C3353 = C554 * C1538;
    const double C7979 = C4327 * C1538;
    const double C10054 = C9837 * C1538;
    const double C13538 = C9836 * C1538;
    const double C3092 = C307 * C1539;
    const double C3348 = C554 * C1539;
    const double C7975 = C4327 * C1539;
    const double C10049 = C9837 * C1539;
    const double C13534 = C9836 * C1539;
    const double C11345 = C307 * C1541;
    const double C35186 = C4327 * C1541;
    const double C9299 = C554 * C3587;
    const double C14151 = C307 * C3587;
    const double C24430 = C9837 * C3587;
    const double C28114 = C9836 * C3587;
    const double C35182 = C4328 * C3587;
    const double C37890 = C4327 * C3587;
    const double C16012 = C554 * C5085;
    const double C24439 = C9836 * C5085;
    const double C19613 = C554 * C8653;
    const double C24435 = C9837 * C8653;
    const double C28118 = C9836 * C8653;
    const double C37892 = C4328 * C8653;
    const double C328 = C92157 * C316;
    const double C326 = C92157 * C310;
    const double C330 = C92157 * C311;
    const double C2205 = C92157 * C1020;
    const double C4341 = C92171 * C1020;
    const double C41789 = C92171 * C1020;
    const double C2201 = C92157 * C1021;
    const double C4331 = C92171 * C1021;
    const double C41779 = C92171 * C1021;
    const double C2927 = C92157 * C1604;
    const double C2923 = C92157 * C1605;
    const double C11152 = C92157 * C1607;
    const double C13937 = C92157 * C3661;
    const double C34972 = C92171 * C3661;
    const double C53663 = C92171 * C3661;
    const double C29947 = C92157 * C11126;
    const double C575 = C92183 * C563;
    const double C573 = C92183 * C557;
    const double C577 = C92183 * C558;
    const double C2461 = C92183 * C1202;
    const double C2457 = C92183 * C1203;
    const double C5443 = C92183 * C1205;
    const double C3183 = C92183 * C1786;
    const double C9850 = C92195 * C1786;
    const double C58433 = C92195 * C1786;
    const double C3179 = C92183 * C1787;
    const double C9840 = C92195 * C1787;
    const double C58423 = C92195 * C1787;
    const double C9086 = C92183 * C3875;
    const double C24222 = C92195 * C3875;
    const double C64405 = C92195 * C3875;
    const double C15837 = C92183 * C5417;
    const double C19402 = C92183 * C9072;
    const double C24230 = C92195 * C9072;
    const double C64423 = C92195 * C9072;
    const double C90175 = C90171 + C90160;
    const double C90199 = C90189 / C89890;
    const double C91137 = C90189 / C90112;
    const double C90729 = C90726 * ce;
    const double C91138 = 2 * C90726;
    const double C91496 = C90311 * C90726;
    const double C24526 =
        (2 * C90311 * C90859 + C90311 * (C90859 + C90726 * C90547)) / C89849;
    const double C90751 = C90748 * ce;
    const double C91566 = 2 * C90748;
    const double C90967 = C90139 + C90965;
    const double C91376 = C90139 + C91374;
    const double C90174 = C90170 + C90156;
    const double C90200 = C90190 / C90112;
    const double C90730 = ae * C90727;
    const double C91158 = -2 * C90727;
    const double C91515 = C90311 * C90727;
    const double C24527 = (-2 * C90311 * C90874) / C89890 -
                          (C90311 * (C90727 * C90547 + C90874)) / C89890;
    const double C90752 = ae * C90749;
    const double C91586 = -2 * C90749;
    const double C90982 = C90980 + C90138;
    const double C91403 = C91401 + C90138;
    const double C90173 = C90169 * C90120;
    const double C90231 = C90223 + C90208;
    const double C91194 = C91185 + C90208;
    const double C91644 = C91633 + C90208;
    const double C90214 = C90149 + C90206;
    const double C90216 = C90205 * ae;
    const double C90213 = C90205 * ce;
    const double C91020 = C90205 * C90425;
    const double C91019 = C90253 * C90205;
    const double C91457 = C90205 * C90547;
    const double C91456 = C90311 * C90205;
    const double C90228 = C90220 + C90204;
    const double C91191 = C91180 + C90204;
    const double C91640 = C91627 + C90204;
    const double C90227 = C90219 * C90120;
    const double C90441 = C90440 * C90120;
    const double C90563 = C90562 * C90120;
    const double C91193 = C90149 + C91182;
    const double C91195 = C91181 * ae;
    const double C91192 = C91181 * ce;
    const double C91537 = C91181 * C90547;
    const double C91536 = C90311 * C91181;
    const double C91512 = C90149 + C91510;
    const double C91645 = C91628 * ae;
    const double C91641 = C91628 * ce;
    const double C90277 = C90275 + C90265;
    const double C90289 = C90285 / C90112;
    const double C90290 = -2 * C90282;
    const double C90287 = ae * C90282;
    const double C90826 = C90253 * C90282;
    const double C91423 = C90311 * C90282;
    const double C10931 = (-2 * C90311 * C90267) / C89890 -
                          (C90311 * (C90282 * C90547 + C90267)) / C89890;
    const double C91001 = C90995 + C90156;
    const double C91320 = ae * C91318;
    const double C91605 = -2 * C91318;
    const double C91418 = C91416 + C90265;
    const double C90335 = C90333 + C90323;
    const double C90347 = C90343 / C90112;
    const double C90348 = -2 * C90340;
    const double C90345 = ae * C90340;
    const double C90886 = C90253 * C90340;
    const double C90949 = C90311 * C90340;
    const double C5086 = (-2 * C90253 * C90325) / C89890 -
                         (C90253 * (C90340 * C90425 + C90325)) / C89890;
    const double C8654 = -(C90311 * (C90340 * C90425 + C90325) +
                           (C90134 + C90157 * C90425) * ce) /
                         C89890;
    const double C91043 = C91041 + C90323;
    const double C91229 = -2 * C91224;
    const double C91227 = ae * C91224;
    const double C91356 = C90311 * C91224;
    const double C91329 = C91328 + C90156;
    const double C90392 = C90380 + C90390;
    const double C90404 = C90400 / C90112;
    const double C91177 = C90400 / C89890;
    const double C90405 = 2 * C90397;
    const double C90402 = C90397 * ce;
    const double C90828 = C90253 * C90397;
    const double C91395 = C90311 * C90397;
    const double C11127 =
        (2 * C90311 * C90382 + C90311 * (C90382 + C90397 * C90547)) / C89849;
    const double C91004 = C90998 + C90160;
    const double C91293 = C91291 * ce;
    const double C91580 = 2 * C91291;
    const double C91393 = C90380 + C91392;
    const double C90435 = C90434 * C90120;
    const double C90493 = C90481 + C90491;
    const double C90505 = C90501 / C90112;
    const double C91624 = C90501 / C89890;
    const double C90506 = 2 * C90498;
    const double C90503 = C90498 * ce;
    const double C90887 = C90253 * C90498;
    const double C90951 = C90311 * C90498;
    const double C5418 =
        (2 * C90253 * C90483 + C90253 * (C90483 + C90498 * C90425)) / C89849;
    const double C9073 = (C90311 * (C90483 + C90498 * C90425) +
                          (C90134 + C90157 * C90425) * ae) /
                         C89849;
    const double C91064 = C90481 + C91062;
    const double C91256 = 2 * C91251;
    const double C91254 = C91251 * ce;
    const double C91358 = C90311 * C91251;
    const double C91443 = C91437 + C90160;
    const double C90557 = C90556 * C90120;
    const double C90161 = -C90152;
    const double C24544 = C92067 * C5722;
    const double C5186 =
        2 * ((-(C90253 * C90379) / C89890) / C89849 - (ae * C90125) / C90112) -
        (ae * (C90138 * C90425 + C90125)) / C90112 +
        C90253 *
            ((-(ae * C90253 * C90138) / C89890) / C89849 - C90379 / C90112 +
             C90253 * ((-(C90253 * C90386) / C89890) / C89849 - C90153));
    const double C11431 =
        2 * ((-(C90311 * C90480) / C89890) / C89849 - (ae * C90125) / C90112) -
        (ae * (C90138 * C90547 + C90125)) / C90112 +
        C90311 *
            ((-(ae * C90311 * C90138) / C89890) / C89849 - C90480 / C90112 +
             C90311 * ((-(C90311 * C90487) / C89890) / C89849 - C90153));
    const double C27888 = C9837 * C5725;
    const double C32699 = C307 * C5725;
    const double C34983 = C4328 * C5725;
    const double C37670 = C4327 * C5725;
    const double C111 = 3 * (C90118 + C90128 * C90119) +
                        C90111 * (2 * C90134 + C90111 * C90165);
    const double C802 = C90253 * (2 * C90134 + C90111 * C90165);
    const double C808 = C90118 + C90128 * C90119 + C90165 * C90425;
    const double C1386 = C90311 * (2 * C90134 + C90111 * C90165);
    const double C1392 = C90118 + C90128 * C90119 + C90165 * C90547;
    const double C3433 = C90311 * C90253 * C90165;
    const double C5720 = C90253 * C90134 + C90827 * C90547;
    const double C15273 = 3 * (C90118 + C90128 * C90425) +
                          C90253 * (2 * C90820 + C90253 * C91003);
    const double C16095 = C90118 + C90128 * C90425 + C91003 * C90547;
    const double C18732 = C90311 * (2 * C90820 + C90253 * C91003);
    const double C29611 = 3 * (C90118 + C90128 * C90547) +
                          C90311 * (2 * C90944 + C90311 * C91442);
    const double C11508 =
        2 * ((-(C90311 * C90531) / C89890) / C89849 - (ae * C90259) / C90112) -
        (ae * (C90265 * C90547 + C90259)) / C90112 +
        C90311 *
            ((-(ae * C90311 * C90265) / C89890) / C89849 - C90531 / C90112 +
             C90311 * ((-(C90311 * C90534) / C89890) / C89849 - C90272));
    const double C11252 = C307 * C1473;
    const double C13424 = C9837 * C1473;
    const double C36851 = C4327 * C1473;
    const double C5340 =
        2 * ((-(C90253 * C90455) / C89890) / C89849 - (ae * C90317) / C90112) -
        (ae * (C90323 * C90425 + C90317)) / C90112 +
        C90253 *
            ((-(ae * C90253 * C90323) / C89890) / C89849 - C90455 / C90112 +
             C90253 * ((-(C90253 * C90458) / C89890) / C89849 - C90330));
    const double C5632 = C554 * C958;
    const double C7024 = C4328 * C958;
    const double C26225 = C9836 * C958;
    const double C6122 =
        C90253 *
            ((-(C90311 * C90380 * ce) / C89890) / C89849 - C90455 / C90112 +
             C90311 * ((-(C90311 * C90458) / C89890) / C89849 - C90387)) -
        (ae * (C90311 * (C90311 * C90323 + C90133) + C90317 +
               C90311 * C90128 * ce)) /
            C90112;
    const double C8971 =
        (-(C90311 * C90455) / C89890) / C89849 - (C90374 * ce) / C90112 -
        (ae * (C90311 * C90883 + C90820 * ce)) / C90112 +
        C90253 * (C90253 * ((-(C90311 * C90458) / C89890) / C89849 - C90387) -
                  (ae * (C90311 * C90323 + C90133)) / C90112);
    const double C11339 =
        2 * ((-(C90311 * C90455) / C89890) / C89849 - (C90374 * ce) / C90112) -
        ((C90374 + C90380 * C90547) * ce) / C90112 +
        C90311 *
            ((-(C90311 * C90380 * ce) / C89890) / C89849 - C90455 / C90112 +
             C90311 * ((-(C90311 * C90458) / C89890) / C89849 - C90387));
    const double C90999 = -C90993;
    const double C11148 = C92157 * C1608;
    const double C5533 =
        2 * ((-(C90253 * C90531) / C89890) / C89849 - (C90475 * ce) / C90112) -
        ((C90475 + C90481 * C90425) * ce) / C90112 +
        C90253 *
            ((-(C90253 * C90481 * ce) / C89890) / C89849 - C90531 / C90112 +
             C90253 * ((-(C90253 * C90534) / C89890) / C89849 - C90488));
    const double C91438 = -C91432;
    const double C5439 = C92183 * C1206;
    const double C91143 = C90253 * C91141;
    const double C91503 = C90726 + C91501;
    const double C91571 = C90311 * C91569;
    const double C91166 = C90253 * C91163;
    const double C91521 = C91519 + C90727;
    const double C91594 = C90311 * C91591;
    const double C90301 = C90111 * C90298;
    const double C90832 = C90253 * C90298;
    const double C91427 = C91425 + C90282;
    const double C91613 = C90311 * C91610;
    const double C90359 = C90111 * C90356;
    const double C90889 = C90253 * C90356;
    const double C90955 = C90311 * C90356;
    const double C91054 = C91052 + C90340;
    const double C91489 = C90311 * C91486;
    const double C91234 = C90253 * C91230;
    const double C91362 = C90311 * C91230;
    const double C90415 = C90111 * C90412;
    const double C90834 = C90253 * C90412;
    const double C91397 = C90397 + C91396;
    const double C91581 = C90311 * C91513;
    const double C90516 = C90111 * C90513;
    const double C90890 = C90253 * C90513;
    const double C90957 = C90311 * C90513;
    const double C91075 = C90498 + C91073;
    const double C91490 = C90311 * C91488;
    const double C91260 = C90253 * C91257;
    const double C91364 = C90311 * C91257;
    const double C15402 = C92072 * C897;
    const double C21262 = C92067 * C897;
    const double C47388 = C92072 * C897;
    const double C20220 = C92067 * C899;
    const double C26442 = C92067 * C1478;
    const double C29743 = C92072 * C1478;
    const double C53431 = C92072 * C1478;
    const double C24657 = C92067 * C1480;
    const double C22508 = C92067 * C3517;
    const double C90276 = C90274 / C89890;
    const double C29737 =
        3 * ((-(C90271 * C90547) / C89890) / C89849 - C90264 / C90112) +
        C90311 * ((-2 * C90311 * C90271) / C90112 +
                  C90311 * ((-(C90288 * C90547) / C89890) / C89849 - C90283));
    const double C90966 = C90963 / C89890;
    const double C20222 = C92067 * C4990;
    const double C24654 = C92067 * C5808;
    const double C22510 = C92067 * C8543;
    const double C34802 = C92067 * C10933;
    const double C90297 = C90293 / C89890;
    const double C91140 = C91136 / C89890;
    const double C91559 = C91558 / C89890;
    const double C332 = C92157 * C317;
    const double C2203 = C92157 * C1029;
    const double C4335 = C92171 * C1029;
    const double C41783 = C92171 * C1029;
    const double C2925 = C92157 * C1613;
    const double C11150 = C92157 * C1615;
    const double C13939 = C92157 * C3665;
    const double C34976 = C92171 * C3665;
    const double C53667 = C92171 * C3665;
    const double C90391 = C90389 / C89890;
    const double C16335 =
        (-(C90386 * C90547) / C89890) / C89849 - C90379 / C90112 -
        (ae * (C90727 * C90547 + C90874)) / C90112 +
        C90253 * (C90253 * ((-(C90403 * C90547) / C89890) / C89849 - C90398) -
                  (ae * (C90163 * C90547 + C90138)) / C90112);
    const double C90981 = C90979 / C89890;
    const double C32700 = C92157 * C5968;
    const double C34984 = C92171 * C5968;
    const double C53677 = C92171 * C5968;
    const double C24846 = C14525 * C8769;
    const double C37665 = C92171 * C8769;
    const double C57227 = C92171 * C8769;
    const double C29945 = C92157 * C11129;
    const double C90411 = C90408 / C89890;
    const double C91161 = C91157 / C89890;
    const double C91280 = C91279 / C89890;
    const double C91312 = C90253 * C91311;
    const double C15501 = C92072 * C963;
    const double C21338 = C92067 * C963;
    const double C47483 = C92072 * C963;
    const double C20286 = C92067 * C965;
    const double C26545 = C92067 * C1547;
    const double C29842 = C92072 * C1547;
    const double C53545 = C92072 * C1547;
    const double C24748 = C92067 * C1549;
    const double C22588 = C92067 * C3591;
    const double C90334 = C90332 / C89890;
    const double C15495 =
        3 * ((-(C90329 * C90425) / C89890) / C89849 - C90322 / C90112) +
        C90253 * ((-2 * C90253 * C90329) / C90112 +
                  C90253 * ((-(C90346 * C90425) / C89890) / C89849 - C90341));
    const double C91375 = C91373 / C89890;
    const double C20289 = C92067 * C5088;
    const double C24750 = C92067 * C5888;
    const double C22593 = C92067 * C8656;
    const double C34888 = C92067 * C11031;
    const double C90355 = C90351 / C89890;
    const double C91151 = C91150 / C89890;
    const double C91500 = C90311 * C91497;
    const double C91568 = C91565 / C89890;
    const double C489 = C92157 * C477;
    const double C2380 = C92157 * C1145;
    const double C4542 = C92171 * C1145;
    const double C41990 = C92171 * C1145;
    const double C11346 = C92157 * C1728;
    const double C3093 = C92157 * C1729;
    const double C14152 = C92157 * C3805;
    const double C35183 = C92171 * C3805;
    const double C53911 = C92171 * C3805;
    const double C91042 = C91040 / C89890;
    const double C91116 = C91115 / C89890;
    const double C491 = C92157 * C478;
    const double C2377 = C92157 * C1144;
    const double C4547 = C92171 * C1144;
    const double C41995 = C92171 * C1144;
    const double C7025 = C92171 * C1148;
    const double C14961 = C14525 * C1148;
    const double C44301 = C92171 * C1148;
    const double C11348 = C92157 * C1730;
    const double C3098 = C92157 * C1731;
    const double C90464 = C90463 / C89890;
    const double C91051 = C90253 * C91048;
    const double C91121 = C90311 * C91048;
    const double C91228 = C91225 / C89890;
    const double C91294 = C91292 / C89890;
    const double C579 = C92183 * C564;
    const double C2459 = C92183 * C1211;
    const double C5441 = C92183 * C1213;
    const double C3181 = C92183 * C1795;
    const double C9844 = C92195 * C1795;
    const double C58427 = C92195 * C1795;
    const double C9084 = C92183 * C3879;
    const double C24226 = C92195 * C3879;
    const double C64409 = C92195 * C3879;
    const double C90492 = C90490 / C89890;
    const double C15825 =
        3 * ((-(C90487 * C90425) / C89890) / C89849 - C90480 / C90112) +
        C90253 * ((-2 * C90253 * C90487) / C90112 +
                  C90253 * ((-(C90504 * C90425) / C89890) / C89849 - C90499));
    const double C91402 = C91400 / C89890;
    const double C15835 = C92183 * C5420;
    const double C27889 = C92195 * C6202;
    const double C34412 = C28199 * C6202;
    const double C68879 = C92195 * C6202;
    const double C19400 = C92183 * C9075;
    const double C24234 = C92195 * C9075;
    const double C64419 = C92195 * C9075;
    const double C90512 = C90509 / C89890;
    const double C91246 = C91245 / C89890;
    const double C91518 = C90311 * C91516;
    const double C91589 = C91585 / C89890;
    const double C656 = C92183 * C644;
    const double C5540 = C92183 * C1268;
    const double C2545 = C92183 * C1269;
    const double C3265 = C92183 * C1853;
    const double C9954 = C92195 * C1853;
    const double C58537 = C92195 * C1853;
    const double C9193 = C92183 * C3949;
    const double C24336 = C92195 * C3949;
    const double C64537 = C92195 * C3949;
    const double C91063 = C91061 / C89890;
    const double C91417 = C91415 / C89890;
    const double C658 = C92183 * C645;
    const double C5542 = C92183 * C1270;
    const double C2550 = C92183 * C1271;
    const double C3268 = C92183 * C1852;
    const double C9959 = C92195 * C1852;
    const double C58542 = C92195 * C1852;
    const double C13425 = C92195 * C1856;
    const double C28767 = C28199 * C1856;
    const double C61833 = C92195 * C1856;
    const double C90540 = C90539 / C89890;
    const double C91072 = C90253 * C91069;
    const double C91424 = C90311 * C91069;
    const double C91255 = C91252 / C89890;
    const double C91608 = C91604 / C89890;
    const double C89868 = C89857 - C89865;
    const double C89867 = C89847 * C89863;
    const double C4104 =
        ((-C89863 / C89849) / C89854 - (0 * be) / C89849) / C89854 -
        (0 * be) / C89849;
    const double C19671 = -C89863 / C89849;
    const double C46529 = (-C89863 / C89849) / C89854 - (0 * be) / C89849;
    const double C92349 = C92325 / C89853;
    const double C15305 = C92322 * C4868;
    const double C15291 = C92322 * C818;
    const double C15287 = C92322 * C829;
    const double C15283 = C92322 * C817;
    const double C15410 = C92322 * C4990;
    const double C15406 = C92322 * C899;
    const double C15404 = C92322 * C898;
    const double C15510 = C92322 * C5088;
    const double C15504 = C92322 * C965;
    const double C15499 = C92322 * C964;
    const double C16821 = C92322 * C816;
    const double C16941 = C92322 * C897;
    const double C17051 = C92322 * C963;
    const double C18756 = C92322 * C3435;
    const double C18748 = C92322 * C8415;
    const double C18872 = C92322 * C8543;
    const double C18868 = C92322 * C3517;
    const double C18988 = C92322 * C8656;
    const double C18984 = C92322 * C3591;
    const double C29643 = C92322 * C10811;
    const double C29629 = C92322 * C1402;
    const double C29625 = C92322 * C1413;
    const double C29621 = C92322 * C1401;
    const double C29752 = C92322 * C10933;
    const double C29746 = C92322 * C1480;
    const double C29741 = C92322 * C1479;
    const double C29850 = C92322 * C11031;
    const double C29846 = C92322 * C1549;
    const double C29844 = C92322 * C1548;
    const double C31393 = C92322 * C1400;
    const double C31519 = C92322 * C1478;
    const double C31623 = C92322 * C1547;
    const double C32374 = C92322 * C5722;
    const double C32488 = C92322 * C5808;
    const double C32592 = C92322 * C5888;
    const double C92327 = C92075 / C89849;
    const double C4901 = C4097 * C818;
    const double C4885 = C4097 * C829;
    const double C4879 = C4097 * C817;
    const double C5001 = C4097 * C899;
    const double C4999 = C4097 * C898;
    const double C5103 = C4097 * C965;
    const double C5093 = C4097 * C964;
    const double C6463 = C4097 * C816;
    const double C6575 = C4097 * C897;
    const double C6682 = C4097 * C963;
    const double C8436 = C4097 * C3435;
    const double C8548 = C4097 * C3517;
    const double C8665 = C4097 * C3591;
    const double C10844 = C4097 * C1402;
    const double C10828 = C4097 * C1413;
    const double C10822 = C4097 * C1401;
    const double C10948 = C4097 * C1480;
    const double C10938 = C4097 * C1479;
    const double C11042 = C4097 * C1549;
    const double C11040 = C4097 * C1548;
    const double C12658 = C4097 * C1400;
    const double C12774 = C4097 * C1478;
    const double C12877 = C4097 * C1547;
    const double C46523 = -C92348;
    const double C4881 = C4098 * C816;
    const double C4997 = C4098 * C897;
    const double C5095 = C4098 * C963;
    const double C10824 = C4098 * C1400;
    const double C10940 = C4098 * C1478;
    const double C11038 = C4098 * C1547;
    const double C105 =
        ((-C89892 / C89890) / C89894 -
         ((C92084 - (C89891 * C89897) / C89890) * de) / C89890) /
            C89894 -
        ((C89891 * ((-C89897 / C89890) / C89894 - (0 * de) / C89890) + C1984) *
         de) /
            C89890;
    const double C106 =
        ((-C89897 / C89890) / C89894 - (0 * de) / C89890) / C89894 -
        (0 * de) / C89890;
    const double C801 = -C89897 / C89890;
    const double C1987 = (-C89892 / C89890) / C89894 -
                         ((C92084 - (C89891 * C89897) / C89890) * de) / C89890;
    const double C1988 = (-C89897 / C89890) / C89894 - (0 * de) / C89890;
    const double C104 =
        ((-(0 * de) / C89890) / C89894 -
         ((0 - (C89891 * C89892) / C89890) * de) / C89890) /
            C89894 -
        ((C89891 * ((-C89892 / C89890) / C89894 -
                    ((C92084 - (C89891 * C89897) / C89890) * de) / C89890) +
          C1983) *
         de) /
            C89890 +
        (-C89897 / C89890) / C89894 - (0 * de) / C89890;
    const double C885 =
        ((-C89920 / C89890) / C89894 -
         ((C92105 - (C89919 * C89923) / C89890) * de) / C89890) /
            C89894 -
        ((C89919 * ((-C89923 / C89890) / C89894 - (0 * de) / C89890) + C1986) *
         de) /
            C89890;
    const double C886 =
        ((-C89923 / C89890) / C89894 - (0 * de) / C89890) / C89894 -
        (0 * de) / C89890;
    const double C2059 = (-C89920 / C89890) / C89894 -
                         ((C92105 - (C89919 * C89923) / C89890) * de) / C89890;
    const double C2060 = (-C89923 / C89890) / C89894 - (0 * de) / C89890;
    const double C884 =
        ((-(0 * de) / C89890) / C89894 -
         ((0 - (C89919 * C89920) / C89890) * de) / C89890) /
            C89894 -
        ((C89919 * ((-C89920 / C89890) / C89894 -
                    ((C92105 - (C89919 * C89923) / C89890) * de) / C89890) +
          C1985) *
         de) /
            C89890 +
        (-C89923 / C89890) / C89894 - (0 * de) / C89890;
    const double C1535 =
        ((-C89936 / C89890) / C89894 -
         ((C92116 - (C89935 * C89939) / C89890) * de) / C89890) /
            C89894 -
        ((C89935 * ((-C89939 / C89890) / C89894 - (0 * de) / C89890) + C2710) *
         de) /
            C89890;
    const double C1536 =
        ((-C89939 / C89890) / C89894 - (0 * de) / C89890) / C89894 -
        (0 * de) / C89890;
    const double C2849 = (-C89936 / C89890) / C89894 -
                         ((C92116 - (C89935 * C89939) / C89890) * de) / C89890;
    const double C2850 = (-C89939 / C89890) / C89894 - (0 * de) / C89890;
    const double C1534 =
        ((-(0 * de) / C89890) / C89894 -
         ((0 - (C89935 * C89936) / C89890) * de) / C89890) /
            C89894 -
        ((C89935 * ((-C89936 / C89890) / C89894 -
                    ((C92116 - (C89935 * C89939) / C89890) * de) / C89890) +
          C2709) *
         de) /
            C89890 +
        (-C89939 / C89890) / C89894 - (0 * de) / C89890;
    const double C90004 = C89967 * C89989;
    const double C14751 =
        ((-C89986 / C89849) / C89854 -
         ((C92157 - (C89967 * C89989) / C89849) * be) / C89849) /
            C89854 -
        ((C89967 * ((-C89989 / C89849) / C89854 - (0 * be) / C89849) + C92171) *
         be) /
            C89849;
    const double C14752 =
        ((-C89989 / C89849) / C89854 - (0 * be) / C89849) / C89854 -
        (0 * be) / C89849;
    const double C41776 = (-C89989 / C89849) / C89854 - (0 * be) / C89849;
    const double C90014 = C90011 - C90007;
    const double C338 = C323 + C324;
    const double C337 = C321 + C322;
    const double C413 = C402 + C403;
    const double C493 = C482 + C483;
    const double C11154 = C11135 + C11136;
    const double C11153 = C11133 + C11134;
    const double C11258 = C11247 + C11248;
    const double C11351 = C11343 + C11344;
    const double C92355 = C92340 / C89853;
    const double C4351 = C92336 * C317;
    const double C4347 = C92336 * C311;
    const double C4343 = C92336 * C316;
    const double C4339 = C92336 * C310;
    const double C4337 = C92336 * C315;
    const double C4333 = C92336 * C309;
    const double C4448 = C92336 * C396;
    const double C4443 = C92336 * C395;
    const double C4551 = C92336 * C477;
    const double C4545 = C92336 * C476;
    const double C4540 = C92336 * C475;
    const double C6797 = C92336 * C1020;
    const double C6793 = C92336 * C1029;
    const double C6789 = C92336 * C1021;
    const double C7027 = C92336 * C1145;
    const double C7023 = C92336 * C1144;
    const double C7750 = C92336 * C1604;
    const double C7746 = C92336 * C1613;
    const double C7742 = C92336 * C1605;
    const double C7980 = C92336 * C1731;
    const double C7976 = C92336 * C1729;
    const double C34992 = C92336 * C11126;
    const double C34988 = C92336 * C11129;
    const double C34982 = C92336 * C1615;
    const double C34978 = C92336 * C1607;
    const double C34974 = C92336 * C1614;
    const double C34970 = C92336 * C1606;
    const double C35086 = C92336 * C1672;
    const double C35187 = C92336 * C1728;
    const double C35185 = C92336 * C1727;
    const double C36742 = C92336 * C1608;
    const double C36954 = C92336 * C1730;
    const double C37671 = C92336 * C5968;
    const double C37663 = C92336 * C3665;
    const double C37659 = C92336 * C3661;
    const double C37891 = C92336 * C3805;
    const double C92342 = C92174 / C89849;
    const double C46963 = C46527 * C1148;
    const double C81885 = C46527 * C8769;
    const double C41548 = -C92354;
    const double C14769 = C14524 * C1020;
    const double C14763 = C14524 * C1029;
    const double C14757 = C14524 * C1021;
    const double C14965 = C14524 * C1144;
    const double C14959 = C14524 * C1145;
    const double C17386 = C14524 * C1148;
    const double C24850 = C14524 * C5968;
    const double C24844 = C14524 * C3665;
    const double C24838 = C14524 * C3661;
    const double C25044 = C14524 * C3805;
    const double C27559 = C14524 * C8769;
    const double C14773 = C14523 * C316;
    const double C14767 = C14523 * C310;
    const double C14765 = C14523 * C315;
    const double C14759 = C14523 * C309;
    const double C14875 = C14523 * C396;
    const double C14865 = C14523 * C395;
    const double C14967 = C14523 * C476;
    const double C14957 = C14523 * C475;
    const double C17167 = C14523 * C1029;
    const double C17161 = C14523 * C1021;
    const double C17388 = C14523 * C1145;
    const double C18098 = C14523 * C1613;
    const double C18092 = C14523 * C1605;
    const double C18319 = C14523 * C1729;
    const double C24858 = C14523 * C1607;
    const double C24852 = C14523 * C1615;
    const double C24842 = C14523 * C1614;
    const double C24836 = C14523 * C1606;
    const double C24948 = C14523 * C1672;
    const double C25048 = C14523 * C1728;
    const double C25046 = C14523 * C1727;
    const double C27557 = C14523 * C3665;
    const double C27551 = C14523 * C3661;
    const double C27774 = C14523 * C3805;
    const double C90049 = C89974 * C90036;
    const double C28649 =
        ((-C90033 / C89849) / C89854 -
         ((C92183 - (C89974 * C90036) / C89849) * be) / C89849) /
            C89854 -
        ((C89974 * ((-C90036 / C89849) / C89854 - (0 * be) / C89849) + C92195) *
         be) /
            C89849;
    const double C28650 =
        ((-C90036 / C89849) / C89854 - (0 * be) / C89849) / C89854 -
        (0 * be) / C89849;
    const double C58420 = (-C90036 / C89849) / C89854 - (0 * be) / C89849;
    const double C90059 = C90056 - C90052;
    const double C585 = C570 + C571;
    const double C584 = C568 + C569;
    const double C660 = C649 + C650;
    const double C738 = C727 + C728;
    const double C5445 = C5426 + C5427;
    const double C5444 = C5424 + C5425;
    const double C5545 = C5537 + C5538;
    const double C5638 = C5627 + C5628;
    const double C92358 = C92345 / C89853;
    const double C9860 = C92337 * C564;
    const double C9856 = C92337 * C558;
    const double C9852 = C92337 * C563;
    const double C9848 = C92337 * C557;
    const double C9846 = C92337 * C562;
    const double C9842 = C92337 * C556;
    const double C9963 = C92337 * C644;
    const double C9957 = C92337 * C643;
    const double C9952 = C92337 * C642;
    const double C10053 = C92337 * C721;
    const double C10048 = C92337 * C720;
    const double C12320 = C92337 * C1202;
    const double C12316 = C92337 * C1211;
    const double C12312 = C92337 * C1203;
    const double C12440 = C92337 * C1271;
    const double C12436 = C92337 * C1269;
    const double C13309 = C92337 * C1786;
    const double C13305 = C92337 * C1795;
    const double C13301 = C92337 * C1787;
    const double C13427 = C92337 * C1852;
    const double C13423 = C92337 * C1853;
    const double C24242 = C92337 * C5417;
    const double C24238 = C92337 * C5420;
    const double C24232 = C92337 * C1213;
    const double C24228 = C92337 * C1205;
    const double C24224 = C92337 * C1212;
    const double C24220 = C92337 * C1204;
    const double C24340 = C92337 * C1268;
    const double C24338 = C92337 * C1267;
    const double C24429 = C92337 * C1328;
    const double C26014 = C92337 * C1206;
    const double C26122 = C92337 * C1270;
    const double C27895 = C92337 * C3875;
    const double C27891 = C92337 * C3879;
    const double C27887 = C92337 * C9072;
    const double C27883 = C92337 * C9075;
    const double C28003 = C92337 * C3949;
    const double C92347 = C92198 / C89849;
    const double C69801 = C69237 * C1856;
    const double C86217 = C69237 * C6202;
    const double C57967 = -C92357;
    const double C28667 = C28198 * C1786;
    const double C28661 = C28198 * C1795;
    const double C28655 = C28198 * C1787;
    const double C28771 = C28198 * C1852;
    const double C28765 = C28198 * C1853;
    const double C32158 = C28198 * C1856;
    const double C34422 = C28198 * C9072;
    const double C34416 = C28198 * C9075;
    const double C34410 = C28198 * C3879;
    const double C34404 = C28198 * C3875;
    const double C34514 = C28198 * C3949;
    const double C38003 = C28198 * C6202;
    const double C28671 = C28197 * C563;
    const double C28665 = C28197 * C557;
    const double C28663 = C28197 * C562;
    const double C28657 = C28197 * C556;
    const double C28773 = C28197 * C643;
    const double C28763 = C28197 * C642;
    const double C28865 = C28197 * C721;
    const double C28855 = C28197 * C720;
    const double C31067 = C28197 * C1211;
    const double C31061 = C28197 * C1203;
    const double C31181 = C28197 * C1269;
    const double C32046 = C28197 * C1795;
    const double C32040 = C28197 * C1787;
    const double C32156 = C28197 * C1853;
    const double C34424 = C28197 * C1205;
    const double C34418 = C28197 * C1213;
    const double C34408 = C28197 * C1212;
    const double C34402 = C28197 * C1204;
    const double C34518 = C28197 * C1268;
    const double C34516 = C28197 * C1267;
    const double C34604 = C28197 * C1328;
    const double C38011 = C28197 * C3875;
    const double C38005 = C28197 * C3879;
    const double C38117 = C28197 * C3949;
    const double C116 = (2 * (C90111 * C90126 + C90118 * ae) +
                         C90111 * (C90126 + C90111 * C90145 + C90134 * ae) +
                         (C90118 + C90128 * C90119) * ae) /
                        C89849;
    const double C815 =
        (C90253 * (C90126 + C90111 * C90145 + C90134 * ae)) / C89849;
    const double C819 =
        (C90111 * C90126 + C90118 * ae + C90145 * C90425) / C89849;
    const double C1399 =
        (C90311 * (C90126 + C90111 * C90145 + C90134 * ae)) / C89849;
    const double C1403 =
        (C90111 * C90126 + C90118 * ae + C90145 * C90547) / C89849;
    const double C3436 = (C90311 * C90253 * C90145) / C89849;
    const double C5183 = (2 * (C90253 * C90374 + C90118 * ae) +
                          C90253 * (C90374 + C90253 * C90823 + C90820 * ae) +
                          (C90118 + C90128 * C90425) * ae) /
                         C89849;
    const double C5965 =
        (C90253 * C90374 + C90118 * ae + C90823 * C90547) / C89849;
    const double C8766 =
        (C90311 * (C90374 + C90253 * C90823 + C90820 * ae)) / C89849;
    const double C11428 = (2 * (C90311 * C90475 + C90118 * ae) +
                           C90311 * (C90475 + C90311 * C90947 + C90944 * ae) +
                           (C90118 + C90128 * C90547) * ae) /
                          C89849;
    const double C7974 = C92171 * C3806;
    const double C12207 = C92157 * C3806;
    const double C18317 = C14524 * C3806;
    const double C45227 = C92171 * C3806;
    const double C66353 = C92336 * C3806;
    const double C8195 = C92183 * C3950;
    const double C12434 = C92195 * C3950;
    const double C31179 = C28198 * C3950;
    const double C56545 = C92337 * C3950;
    const double C60865 = C92195 * C3950;
    const double C5541 = C554 * C892;
    const double C6910 = C4328 * C892;
    const double C26121 = C9836 * C892;
    const double C6791 = C92171 * C1024;
    const double C14755 = C14525 * C1024;
    const double C17163 = C14524 * C1024;
    const double C44067 = C92171 * C1024;
    const double C46757 = C46527 * C1024;
    const double C11347 = C307 * C1542;
    const double C13532 = C9837 * C1542;
    const double C36953 = C4327 * C1542;
    const double C13303 = C92195 * C1790;
    const double C28653 = C28199 * C1790;
    const double C32042 = C28198 * C1790;
    const double C61711 = C92195 * C1790;
    const double C69687 = C69237 * C1790;
    const double C7865 = C4328 * C3514;
    const double C8194 = C554 * C3514;
    const double C12094 = C307 * C3514;
    const double C12433 = C9837 * C3514;
    const double C56544 = C9836 * C3514;
    const double C66216 = C4327 * C3514;
    const double C7973 = C4328 * C3588;
    const double C8304 = C554 * C3588;
    const double C12206 = C307 * C3588;
    const double C12547 = C9837 * C3588;
    const double C56682 = C9836 * C3588;
    const double C66352 = C4327 * C3588;
    const double C7744 = C92171 * C3662;
    const double C11982 = C92157 * C3662;
    const double C18094 = C14524 * C3662;
    const double C44997 = C92171 * C3662;
    const double C66073 = C92336 * C3662;
    const double C8084 = C92183 * C3876;
    const double C12314 = C92195 * C3876;
    const double C31063 = C28198 * C3876;
    const double C56403 = C92337 * C3876;
    const double C60745 = C92195 * C3876;
    const double C5438 = C554 * C807;
    const double C6790 = C4328 * C807;
    const double C26013 = C9836 * C807;
    const double C11147 = C307 * C1391;
    const double C13302 = C9837 * C1391;
    const double C36741 = C4327 * C1391;
    const double C7743 = C4328 * C3432;
    const double C8083 = C554 * C3432;
    const double C11981 = C307 * C3432;
    const double C12313 = C9837 * C3432;
    const double C56402 = C9836 * C3432;
    const double C66072 = C4327 * C3432;
    const double C15832 = C554 * C4866;
    const double C18421 = C554 * C8413;
    const double C26011 = C9837 * C8413;
    const double C66074 = C4328 * C8413;
    const double C29942 = C307 * C10809;
    const double C120 =
        (-2 * (C90111 * C90125 + C90118 * ce)) / C89890 -
        (C90111 * (C90111 * C90144 + C90125 + C90134 * ce)) / C89890 -
        ((C90118 + C90128 * C90119) * ce) / C89890;
    const double C811 =
        -(C90253 * (C90111 * C90144 + C90125 + C90134 * ce)) / C89890;
    const double C823 =
        -(C90144 * C90425 + C90111 * C90125 + C90118 * ce) / C89890;
    const double C1395 =
        -(C90311 * (C90111 * C90144 + C90125 + C90134 * ce)) / C89890;
    const double C1407 =
        -(C90144 * C90547 + C90111 * C90125 + C90118 * ce) / C89890;
    const double C3440 = -(C90311 * C90253 * C90144) / C89890;
    const double C6279 =
        (-(C90253 * C90531) / C89890) / C89849 - (C90475 * ce) / C90112 -
        (ae * C90311 * C90822) / C90112 +
        C90311 * (C90311 * ((-(C90253 * C90534) / C89890) / C89849 - C90488) -
                  (ae * C90822) / C90112);
    const double C9188 =
        C90311 * ((-(C90884 * ce) / C89890) / C89849 - C90531 / C90112 +
                  C90253 * ((-(C90253 * C90534) / C89890) / C89849 - C90488)) -
        (ae * (C90253 * C90822 + C90259 + C90820 * ce)) / C90112;
    const double C4987 =
        (-2 * (C90253 * C90259 + C90118 * ce)) / C89890 -
        (C90253 * (C90253 * C90822 + C90259 + C90820 * ce)) / C89890 -
        ((C90118 + C90128 * C90425) * ce) / C89890;
    const double C5805 =
        -(C90822 * C90547 + C90253 * C90259 + C90118 * ce) / C89890;
    const double C8540 =
        -(C90311 * (C90253 * C90822 + C90259 + C90820 * ce)) / C89890;
    const double C11028 =
        (-2 * (C90311 * C90317 + C90118 * ce)) / C89890 -
        (C90311 * (C90311 * C90946 + C90317 + C90944 * ce)) / C89890 -
        ((C90118 + C90128 * C90547) * ce) / C89890;
    const double C128 =
        2 * ((-(C90126 * ce) / C89890) / C89849 - (ae * C90125) / C90112 -
             (C90111 * C90143) / C90112) -
        (ae * (C90111 * C90144 + C90125 + C90134 * ce)) / C90112 -
        ((C90126 + C90111 * C90145 + C90134 * ae) * ce) / C90112 +
        C90111 *
            ((-(ae * C90144) / C89890) / C89849 - C90143 / C90112 -
             (C90145 * ce) / C90112 +
             C90111 *
                 ((-(C90139 * ce) / C89890) / C89849 - (ae * C90138) / C90112 -
                  (C90111 *
                   (C90129 * C90130 + C90119 * bs[5] * std::pow(C90115, 5)) *
                   C90120) /
                      C90112));
    const double C828 = (-(C90253 * C90126 * ce) / C89890) / C89849 -
                        (ae * C90253 * C90125) / C90112 -
                        (C90111 * C90253 * C90143) / C90112;
    const double C830 = (-(C90143 * C90425) / C89890) / C89849 -
                        ((C90118 + C90119 * C90116 * C90122) * C90120) / C90112;
    const double C1412 = (-(C90311 * C90126 * ce) / C89890) / C89849 -
                         (ae * C90311 * C90125) / C90112 -
                         (C90111 * C90311 * C90143) / C90112;
    const double C1414 =
        (-(C90143 * C90547) / C89890) / C89849 -
        ((C90118 + C90119 * C90116 * C90122) * C90120) / C90112;
    const double C3443 = (-(C90311 * C90253 * C90143) / C89890) / C89849;
    const double C397 =
        (-2 * C90111 * C90430) / C90112 +
        C90111 * ((-((C90149 + C90425 * C90150 * C90151) * C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90430 / C90112);
    const double C1086 =
        (-(ae * (C90253 * C90259 + C90118 * ce)) / C89890) / C89849 -
        ((C90118 + C90425 * C90116 * C90122) * C90120) / C90112 -
        ((C90253 * C90374 + C90118 * ae) * ce) / C90112 +
        C90253 * ((-(C90374 * ce) / C89890) / C89849 - (ae * C90259) / C90112 -
                  (C90253 * C90430) / C90112);
    const double C1087 = (-(C90111 * C90374 * ce) / C89890) / C89849 -
                         (ae * C90111 * C90259) / C90112 -
                         (C90253 * C90111 * C90430) / C90112;
    const double C1671 = (-(C90311 * C90111 * C90430) / C89890) / C89849;
    const double C1673 =
        (-(C90430 * C90547) / C89890) / C89849 -
        ((C90118 + C90425 * C90116 * C90122) * C90120) / C90112;
    const double C3735 = (-(C90311 * C90374 * ce) / C89890) / C89849 -
                         (ae * C90311 * C90259) / C90112 -
                         (C90253 * C90311 * C90430) / C90112;
    const double C722 =
        (-2 * C90111 * C90552) / C90112 +
        C90111 * ((-((C90149 + C90547 * C90150 * C90151) * C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90552 / C90112);
    const double C1327 = (-(C90253 * C90111 * C90552) / C89890) / C89849;
    const double C1329 =
        (-(C90552 * C90425) / C89890) / C89849 -
        ((C90118 + C90547 * C90116 * C90122) * C90120) / C90112;
    const double C1910 =
        (-(ae * (C90311 * C90317 + C90118 * ce)) / C89890) / C89849 -
        ((C90118 + C90547 * C90116 * C90122) * C90120) / C90112 -
        ((C90311 * C90475 + C90118 * ae) * ce) / C90112 +
        C90311 * ((-(C90475 * ce) / C89890) / C89849 - (ae * C90317) / C90112 -
                  (C90311 * C90552) / C90112);
    const double C1911 = (-(C90111 * C90475 * ce) / C89890) / C89849 -
                         (ae * C90111 * C90317) / C90112 -
                         (C90311 * C90111 * C90552) / C90112;
    const double C4019 = (-(C90253 * C90475 * ce) / C89890) / C89849 -
                         (ae * C90253 * C90317) / C90112 -
                         (C90311 * C90253 * C90552) / C90112;
    const double C28112 = C9837 * C5885;
    const double C32912 = C307 * C5885;
    const double C35188 = C4328 * C5885;
    const double C37894 = C4327 * C5885;
    const double C27893 = C92195 * C6199;
    const double C34406 = C28199 * C6199;
    const double C38009 = C28198 * C6199;
    const double C68883 = C92195 * C6199;
    const double C86211 = C69237 * C6199;
    const double C27892 = C9837 * C5719;
    const double C32697 = C307 * C5719;
    const double C34979 = C4328 * C5719;
    const double C37666 = C4327 * C5719;
    const double C34989 = C4328 * C24524;
    const double C41124 = C307 * C24524;
    const double C414 = C405 + C406;
    const double C661 = C652 + C653;
    const double C494 = C485 + C486;
    const double C739 = C730 + C731;
    const double C340 = C327 + C328;
    const double C339 = C325 + C326;
    const double C341 = C329 + C330;
    const double C2214 = C2204 + C2205;
    const double C4359 = C4340 + C4341;
    const double C2212 = C2200 + C2201;
    const double C4354 = C4330 + C4331;
    const double C2936 = C2926 + C2927;
    const double C2934 = C2922 + C2923;
    const double C11160 = C11151 + C11152;
    const double C13944 = C13936 + C13937;
    const double C34994 = C34971 + C34972;
    const double C29951 = C29946 + C29947;
    const double C587 = C574 + C575;
    const double C586 = C572 + C573;
    const double C588 = C576 + C577;
    const double C2470 = C2460 + C2461;
    const double C2468 = C2456 + C2457;
    const double C5451 = C5442 + C5443;
    const double C3192 = C3182 + C3183;
    const double C9868 = C9849 + C9850;
    const double C3190 = C3178 + C3179;
    const double C9863 = C9839 + C9840;
    const double C9088 = C9085 + C9086;
    const double C24244 = C24221 + C24222;
    const double C15843 = C15836 + C15837;
    const double C19404 = C19401 + C19402;
    const double C24248 = C24229 + C24230;
    const double C90178 = C90111 * C90175;
    const double C90196 = 2 * C90175;
    const double C90188 = C90175 * ce;
    const double C90861 = C90253 * C90175;
    const double C91381 = C90311 * C90175;
    const double C4869 =
        (2 * C90253 * C90145 + C90253 * (C90145 + C90175 * C90425)) / C89849;
    const double C8416 = (C90311 * (C90145 + C90175 * C90425)) / C89849;
    const double C10812 =
        (2 * C90311 * C90145 + C90311 * (C90145 + C90175 * C90547)) / C89849;
    const double C90210 = -C90199;
    const double C90732 = C90729 / C89890;
    const double C91498 = C90729 / C90112;
    const double C24742 =
        2 * ((-(C90311 * C91341) / C89890) / C89849 - (C90859 * ce) / C90112) -
        ((C90859 + C90726 * C90547) * ce) / C90112 +
        C90311 *
            ((-(C90311 * C90726 * ce) / C89890) / C89849 - C91341 / C90112 +
             C90311 * ((-(C90311 * C90253 * C90346) / C89890) / C89849 -
                       C90729 / C90112));
    const double C34704 = C92067 * C24526;
    const double C90754 = C90751 / C89890;
    const double C16257 =
        (-(C90329 * C90425) / C89890) / C89849 - C90322 / C90112 -
        (C90311 * C90967 * ce) / C90112 +
        C90311 * (C90311 * ((-(C90346 * C90425) / C89890) / C89849 - C90341) -
                  (C90967 * ce) / C90112);
    const double C18978 =
        C90311 * ((-2 * C90253 * C90329) / C90112 +
                  C90253 * ((-(C90346 * C90425) / C89890) / C89849 - C90341)) -
        ((2 * C90859 + C90253 * C90967) * ce) / C90112;
    const double C15275 = (3 * (C90126 + C90139 * C90425) +
                           C90253 * (2 * C90859 + C90253 * C90967)) /
                          C89849;
    const double C16097 = (C90126 + C90139 * C90425 + C90967 * C90547) / C89849;
    const double C18734 = (C90311 * (2 * C90859 + C90253 * C90967)) / C89849;
    const double C24528 =
        (2 * C90311 * C90967 + C90311 * (C90967 + C91141 * C90547)) / C89849;
    const double C29613 = (3 * (C90126 + C90139 * C90547) +
                           C90311 * (2 * C91372 + C90311 * C91376)) /
                          C89849;
    const double C90177 = C90111 * C90174;
    const double C90194 = -2 * C90174;
    const double C90186 = ae * C90174;
    const double C90876 = C90253 * C90174;
    const double C91408 = C90311 * C90174;
    const double C4872 = (-2 * C90253 * C90144) / C89890 -
                         (C90253 * (C90174 * C90425 + C90144)) / C89890;
    const double C8419 = -(C90311 * (C90174 * C90425 + C90144)) / C89890;
    const double C10815 = (-2 * C90311 * C90144) / C89890 -
                          (C90311 * (C90174 * C90547 + C90144)) / C89890;
    const double C90733 = C90730 / C90112;
    const double C91156 = C90730 / C89890;
    const double C91162 = C91158 / C89890;
    const double C34985 = C4328 * C24527;
    const double C41126 = C307 * C24527;
    const double C90755 = C90752 / C90112;
    const double C91584 = C90752 / C89890;
    const double C91590 = C91586 / C89890;
    const double C16565 =
        (-(C90487 * C90425) / C89890) / C89849 - C90480 / C90112 -
        (ae * C90311 * C90982) / C90112 +
        C90311 * (C90311 * ((-(C90504 * C90425) / C89890) / C89849 - C90499) -
                  (ae * C90982) / C90112);
    const double C19394 =
        (((-2 * C90874) / C89890 - (C90253 * C90982) / C89890) * ae) / C89849 +
        C90311 * ((-2 * C90253 * C90487) / C90112 +
                  C90253 * ((-(C90504 * C90425) / C89890) / C89849 - C90499));
    const double C15277 =
        (-3 * (C90138 * C90425 + C90125)) / C89890 +
        C90253 * ((-2 * C90874) / C89890 - (C90253 * C90982) / C89890);
    const double C16099 =
        -(C90982 * C90547 + C90138 * C90425 + C90125) / C89890;
    const double C18736 =
        C90311 * ((-2 * C90874) / C89890 - (C90253 * C90982) / C89890);
    const double C24529 = (-2 * C90311 * C90982) / C89890 -
                          (C90311 * (C91163 * C90547 + C90982)) / C89890;
    const double C29615 =
        (-3 * (C90138 * C90547 + C90125)) / C89890 +
        C90311 * ((-2 * C91399) / C89890 - (C90311 * C91403) / C89890);
    const double C90176 = C90111 * C90173;
    const double C90187 = C90173 / C90112;
    const double C90570 = C90253 * C90173;
    const double C90648 = C90311 * C90173;
    const double C831 =
        (-((C90126 + C90139 * C90425) * ce) / C89890) / C89849 -
        (ae * (C90138 * C90425 + C90125)) / C90112 +
        C90111 * ((-(C90173 * C90425) / C89890) / C89849 - C90143 / C90112);
    const double C1415 =
        (-((C90126 + C90139 * C90547) * ce) / C89890) / C89849 -
        (ae * (C90138 * C90547 + C90125)) / C90112 +
        C90111 * ((-(C90173 * C90547) / C89890) / C89849 - C90143 / C90112);
    const double C4874 =
        (-2 * C90253 * C90143) / C90112 +
        C90253 * ((-(C90173 * C90425) / C89890) / C89849 - C90143 / C90112);
    const double C8421 =
        C90311 * ((-(C90173 * C90425) / C89890) / C89849 - C90143 / C90112);
    const double C10817 =
        (-2 * C90311 * C90143) / C90112 +
        C90311 * ((-(C90173 * C90547) / C89890) / C89849 - C90143 / C90112);
    const double C90235 = C90111 * C90231;
    const double C90973 = C90231 * C90425;
    const double C91383 = C90231 * C90547;
    const double C91476 = C90253 * C90231;
    const double C91201 = C90253 * C91194;
    const double C91649 = C90311 * C91644;
    const double C90224 = C90214 * ae;
    const double C90222 = C90111 * C90214;
    const double C90221 = C90214 * ce;
    const double C90833 = C90253 * C90214;
    const double C90956 = C90311 * C90214;
    const double C4867 =
        2 * C90253 * C90165 + C90253 * (C90165 + C90214 * C90425);
    const double C8414 = C90311 * (C90165 + C90214 * C90425);
    const double C10810 =
        2 * C90311 * C90165 + C90311 * (C90165 + C90214 * C90547);
    const double C91031 = C91027 + C90216;
    const double C91463 = C91458 + C90216;
    const double C91030 = C91024 + C90213;
    const double C91460 = C91455 + C90213;
    const double C91026 = C90157 + C91020;
    const double C91028 = C91019 * ae;
    const double C91025 = C91019 * ce;
    const double C91487 = C90311 * C91019;
    const double C32368 =
        2 * C90311 * C90827 + C90311 * (C90827 + C91019 * C90547);
    const double C91462 = C90157 + C91457;
    const double C91464 = C91456 * ae;
    const double C91461 = C91456 * ce;
    const double C90234 = C90111 * C90228;
    const double C90989 = C90228 * C90425;
    const double C91410 = C90228 * C90547;
    const double C91482 = C90253 * C90228;
    const double C91198 = C90253 * C91191;
    const double C91529 = C91191 * C90547;
    const double C91648 = C90311 * C91640;
    const double C90233 = C90111 * C90227;
    const double C90578 = C90227 * C90425;
    const double C90656 = C90227 * C90547;
    const double C90728 = C90253 * C90227;
    const double C90750 = C90311 * C90227;
    const double C90442 = C90441 * C90119;
    const double C91017 = C90111 * C90441;
    const double C91178 = C90253 * C90441;
    const double C91285 = C90441 * C90547;
    const double C91319 = C90311 * C90441;
    const double C90564 = C90563 * C90119;
    const double C91081 = C90111 * C90563;
    const double C91270 = C90563 * C90425;
    const double C91534 = C90253 * C90563;
    const double C91625 = C90311 * C90563;
    const double C91202 = C91193 * ae;
    const double C91200 = C90253 * C91193;
    const double C91199 = C91193 * ce;
    const double C91363 = C90311 * C91193;
    const double C24525 =
        2 * C90311 * C91003 + C90311 * (C91003 + C91193 * C90547);
    const double C91548 = C91544 + C91195;
    const double C91547 = C91541 + C91192;
    const double C91543 = C90996 + C91537;
    const double C91545 = C91536 * ae;
    const double C91542 = C91536 * ce;
    const double C91634 = C91512 * ae;
    const double C91631 = C90311 * C91512;
    const double C91629 = C91512 * ce;
    const double C186 =
        (-3 * (C90265 * C90119 + C90259)) / C89890 +
        C90111 * ((-2 * C90267) / C89890 - (C90111 * C90277) / C89890);
    const double C887 =
        C90253 * ((-2 * C90267) / C89890 - (C90111 * C90277) / C89890) -
        ((2 * C90134 + C90111 * C90165) * ce) / C89890;
    const double C893 = -(C90253 * (C90253 * C90277 + C90165 * ce) +
                          C90265 * C90119 + C90259 + C90253 * C90165 * ce) /
                        C89890;
    const double C1468 =
        C90311 * ((-2 * C90267) / C89890 - (C90111 * C90277) / C89890);
    const double C1474 = -(C90277 * C90547 + C90265 * C90119 + C90259) / C89890;
    const double C3515 = -(C90311 * (C90253 * C90277 + C90165 * ce)) / C89890;
    const double C10932 = (-2 * C90311 * C90277) / C89890 -
                          (C90311 * (C90298 * C90547 + C90277)) / C89890;
    const double C90294 = C90290 / C89890;
    const double C90292 = C90287 / C89890;
    const double C91016 = C90287 / C90112;
    const double C11509 =
        2 * ((-(C90311 * C90846) / C89890) / C89849 - (ae * C90267) / C90112) -
        (ae * (C90282 * C90547 + C90267)) / C90112 +
        C90311 *
            ((-(ae * C90311 * C90282) / C89890) / C89849 - C90846 / C90112 +
             C90311 * ((-(C90311 * C90111 * C90538) / C89890) / C89849 -
                       C90287 / C90112));
    const double C90829 = C90826 + C90164;
    const double C30034 = C307 * C10931;
    const double C91007 = C90253 * C91001;
    const double C91179 = -2 * C91001;
    const double C91175 = ae * C91001;
    const double C91526 = C90311 * C91001;
    const double C24638 = (-2 * C90311 * C90822) / C89890 -
                          (C90311 * (C91001 * C90547 + C90822)) / C89890;
    const double C91322 = C91320 / C90112;
    const double C91603 = C91320 / C89890;
    const double C91609 = C91605 / C89890;
    const double C29735 =
        (-3 * (C90265 * C90547 + C90259)) / C89890 +
        C90311 * ((-2 * C91414) / C89890 - (C90311 * C91418) / C89890);
    const double C249 =
        (-3 * (C90323 * C90119 + C90317)) / C89890 +
        C90111 * ((-2 * C90325) / C89890 - (C90111 * C90335) / C89890);
    const double C953 =
        C90253 * ((-2 * C90325) / C89890 - (C90111 * C90335) / C89890);
    const double C959 = -(C90335 * C90425 + C90323 * C90119 + C90317) / C89890;
    const double C1537 =
        C90311 * ((-2 * C90325) / C89890 - (C90111 * C90335) / C89890) -
        ((2 * C90134 + C90111 * C90165) * ce) / C89890;
    const double C1543 = -(C90311 * (C90311 * C90335 + C90165 * ce) +
                           C90323 * C90119 + C90317 + C90311 * C90165 * ce) /
                         C89890;
    const double C3589 =
        -(C90311 * C90253 * C90335 + C90253 * C90165 * ce) / C89890;
    const double C5087 = (-2 * C90253 * C90335) / C89890 -
                         (C90253 * (C90356 * C90425 + C90335)) / C89890;
    const double C8655 = -(C90311 * (C90356 * C90425 + C90335) +
                           (C90165 + C90214 * C90425) * ce) /
                         C89890;
    const double C90352 = C90348 / C89890;
    const double C90350 = C90345 / C89890;
    const double C91049 = C90345 / C90112;
    const double C5341 =
        2 * ((-(C90253 * C90839) / C89890) / C89849 - (ae * C90325) / C90112) -
        (ae * (C90340 * C90425 + C90325)) / C90112 +
        C90253 *
            ((-(ae * C90253 * C90340) / C89890) / C89849 - C90839 / C90112 +
             C90253 * ((-(C90253 * C90111 * C90462) / C89890) / C89849 -
                       C90345 / C90112));
    const double C5886 = -(C90311 * (C90311 * C90886 + C90827 * ce) +
                           C90253 * C90325 + C90311 * C90827 * ce) /
                         C89890;
    const double C90952 = C90949 + C90164;
    const double C16009 = C554 * C5086;
    const double C18631 = C554 * C8654;
    const double C26227 = C9837 * C8654;
    const double C66350 = C4328 * C8654;
    const double C15493 =
        (-3 * (C90323 * C90425 + C90317)) / C89890 +
        C90253 * ((-2 * C90883) / C89890 - (C90253 * C91043) / C89890);
    const double C16255 = -(C90311 * (C90311 * C91043 + C91003 * ce) +
                            C90323 * C90425 + C90317 + C90311 * C91003 * ce) /
                          C89890;
    const double C18976 =
        C90311 * ((-2 * C90883) / C89890 - (C90253 * C91043) / C89890) -
        ((2 * C90820 + C90253 * C91003) * ce) / C89890;
    const double C91233 = C91229 / C89890;
    const double C91231 = C91227 / C89890;
    const double C91533 = C91227 / C90112;
    const double C91359 = C91356 + C91002;
    const double C91330 = ae * C91329;
    const double C91434 = C90311 * C91329;
    const double C91626 = -2 * C91329;
    const double C312 = (3 * (C90374 + C90380 * C90119) +
                         C90111 * (2 * C90382 + C90111 * C90392)) /
                        C89849;
    const double C1019 = (C90253 * (2 * C90382 + C90111 * C90392) +
                          (2 * C90134 + C90111 * C90165) * ae) /
                         C89849;
    const double C1025 =
        (C90374 + C90380 * C90119 + C90253 * (C90253 * C90392 + C90165 * ae) +
         C90253 * C90165 * ae) /
        C89849;
    const double C1603 = (C90311 * (2 * C90382 + C90111 * C90392)) / C89849;
    const double C1609 = (C90374 + C90380 * C90119 + C90392 * C90547) / C89849;
    const double C3663 = (C90311 * (C90253 * C90392 + C90165 * ae)) / C89849;
    const double C11128 =
        (2 * C90311 * C90392 + C90311 * (C90392 + C90412 * C90547)) / C89849;
    const double C16487 =
        (-(C90311 * C90380 * ce) / C89890) / C89849 - C90455 / C90112 +
        C90311 * ((-(C90311 * C90458) / C89890) / C89849 - C90387) -
        (ae * (C90311 * (C90311 * C90253 * C90331 + C91002) + C90883 +
               C90311 * C90996 * ce)) /
            C90112 +
        C90253 *
            (C90253 *
                 ((-(C90311 * C90388 * ce) / C89890) / C89849 - C90461 +
                  C90311 * ((-(C90311 * C90462) / C89890) / C89849 - C90404)) -
             (ae * (C90311 * (C90311 * C90331 + C90156) + C90323 +
                    C90311 * C90149 * ce)) /
                 C90112);
    const double C91188 = -C91177;
    const double C90407 = C90402 / C89890;
    const double C91122 = C90402 / C90112;
    const double C6123 =
        C90253 *
            ((-(C90311 * C90397 * ce) / C89890) / C89849 - C90839 / C90112 +
             C90311 * ((-(C90311 * C90111 * C90462) / C89890) / C89849 -
                       C90402 / C90112)) -
        (ae * (C90311 * (C90311 * C90340 + C90164) + C90325 +
               C90311 * C90157 * ce)) /
            C90112;
    const double C8972 =
        (-(C90311 * C90839) / C89890) / C89849 - (C90382 * ce) / C90112 -
        (ae * (C90311 * C90886 + C90827 * ce)) / C90112 +
        C90253 * (C90253 * ((-(C90311 * C90111 * C90462) / C89890) / C89849 -
                            C90402 / C90112) -
                  (ae * (C90311 * C90340 + C90164)) / C90112);
    const double C11340 =
        2 * ((-(C90311 * C90839) / C89890) / C89849 - (C90382 * ce) / C90112) -
        ((C90382 + C90397 * C90547) * ce) / C90112 +
        C90311 *
            ((-(C90311 * C90397 * ce) / C89890) / C89849 - C90839 / C90112 +
             C90311 * ((-(C90311 * C90111 * C90462) / C89890) / C89849 -
                       C90402 / C90112));
    const double C90830 = C90828 + C90167;
    const double C29943 = C92157 * C11127;
    const double C91008 = C90253 * C91004;
    const double C91184 = 2 * C91004;
    const double C91176 = C91004 * ce;
    const double C24830 =
        (2 * C90311 * C90823 + C90311 * (C90823 + C91004 * C90547)) / C89849;
    const double C34966 =
        (3 * (C90823 + C91004 * C90547) +
         C90311 * (2 * C90311 * C91004 + C90311 * (C91004 + C91194 * C90547))) /
        C89849;
    const double C91295 = C91293 / C89890;
    const double C29933 = (3 * (C90374 + C90380 * C90547) +
                           C90311 * (2 * C91391 + C90311 * C91393)) /
                          C89849;
    const double C90438 = C90435 / C90112;
    const double C90825 = C90111 * C90435;
    const double C90994 = C90253 * C90435;
    const double C91111 = C90311 * C90435;
    const double C398 =
        3 * ((-(C90435 * C90119) / C89890) / C89849 - C90430 / C90112) +
        C90111 *
            ((-2 * C90111 * C90435) / C90112 +
             C90111 *
                 ((-((C90191 + C90425 * C90192 * C90193) * C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90435 / C90112));
    const double C1088 =
        (-(ae * (C90253 * C90267 + C90134 * ce)) / C89890) / C89849 -
        (C90111 * C90430) / C90112 -
        ((C90253 * C90382 + C90134 * ae) * ce) / C90112 +
        C90253 * ((-(C90382 * ce) / C89890) / C89849 - (ae * C90267) / C90112 -
                  (C90253 * C90111 * C90435) / C90112);
    const double C1089 =
        (-((C90374 + C90380 * C90119) * ce) / C89890) / C89849 -
        (ae * (C90265 * C90119 + C90259)) / C90112 +
        C90253 * ((-(C90435 * C90119) / C89890) / C89849 - C90430 / C90112);
    const double C1670 =
        C90311 * ((-(C90435 * C90119) / C89890) / C89849 - C90430 / C90112);
    const double C1674 = (-(C90111 * C90435 * C90547) / C89890) / C89849 -
                         (C90111 * C90430) / C90112;
    const double C3736 = (-(C90311 * C90382 * ce) / C89890) / C89849 -
                         (ae * C90311 * C90267) / C90112 -
                         (C90253 * C90311 * C90111 * C90435) / C90112;
    const double C5263 =
        2 * ((-(C90374 * ce) / C89890) / C89849 - (ae * C90259) / C90112 -
             (C90253 * C90430) / C90112) -
        (ae * (C90253 * C90822 + C90259 + C90820 * ce)) / C90112 -
        ((C90374 + C90253 * C90823 + C90820 * ae) * ce) / C90112 +
        C90253 * ((-(ae * C90822) / C89890) / C89849 - C90430 / C90112 -
                  (C90823 * ce) / C90112 +
                  C90253 * ((-C90384 / C89890) / C89849 - C90272 -
                            (C90253 * C90435) / C90112));
    const double C6045 =
        (-((C90374 + C90380 * C90547) * ce) / C89890) / C89849 -
        (ae * (C90265 * C90547 + C90259)) / C90112 +
        C90253 * ((-(C90435 * C90547) / C89890) / C89849 - C90430 / C90112);
    const double C8870 = (-(ae * C90311 * C90822) / C89890) / C89849 -
                         (C90311 * C90430) / C90112 -
                         (C90311 * C90823 * ce) / C90112 +
                         C90253 * ((-(C90311 * C90380 * ce) / C89890) / C89849 -
                                   (ae * C90311 * C90265) / C90112 -
                                   (C90253 * C90311 * C90435) / C90112);
    const double C11242 =
        (-2 * C90311 * C90430) / C90112 +
        C90311 * ((-(C90435 * C90547) / C89890) / C89849 - C90430 / C90112);
    const double C559 = (3 * (C90475 + C90481 * C90119) +
                         C90111 * (2 * C90483 + C90111 * C90493)) /
                        C89849;
    const double C1201 = (C90253 * (2 * C90483 + C90111 * C90493)) / C89849;
    const double C1207 = (C90475 + C90481 * C90119 + C90493 * C90425) / C89849;
    const double C1785 = (C90311 * (2 * C90483 + C90111 * C90493) +
                          (2 * C90134 + C90111 * C90165) * ae) /
                         C89849;
    const double C1791 =
        (C90475 + C90481 * C90119 + C90311 * (C90311 * C90493 + C90165 * ae) +
         C90311 * C90165 * ae) /
        C89849;
    const double C3877 =
        (C90311 * C90253 * C90493 + C90253 * C90165 * ae) / C89849;
    const double C5419 =
        (2 * C90253 * C90493 + C90253 * (C90493 + C90513 * C90425)) / C89849;
    const double C9074 = (C90311 * (C90493 + C90513 * C90425) +
                          (C90165 + C90214 * C90425) * ae) /
                         C89849;
    const double C91637 = -C91624;
    const double C90508 = C90503 / C89890;
    const double C91070 = C90503 / C90112;
    const double C5534 =
        2 * ((-(C90253 * C90846) / C89890) / C89849 - (C90483 * ce) / C90112) -
        ((C90483 + C90498 * C90425) * ce) / C90112 +
        C90253 *
            ((-(C90253 * C90498 * ce) / C89890) / C89849 - C90846 / C90112 +
             C90253 * ((-(C90253 * C90111 * C90538) / C89890) / C89849 -
                       C90503 / C90112));
    const double C6200 =
        (C90253 * C90483 + C90311 * (C90311 * C90887 + C90827 * ae) +
         C90311 * C90827 * ae) /
        C89849;
    const double C90953 = C90951 + C90167;
    const double C15833 = C92183 * C5418;
    const double C18422 = C92183 * C9073;
    const double C26012 = C92195 * C9073;
    const double C64415 = C92195 * C9073;
    const double C15823 = (3 * (C90475 + C90481 * C90425) +
                           C90253 * (2 * C90884 + C90253 * C91064)) /
                          C89849;
    const double C16563 =
        (C90475 + C90481 * C90425 + C90311 * (C90311 * C91064 + C91003 * ae) +
         C90311 * C91003 * ae) /
        C89849;
    const double C19392 = (C90311 * (2 * C90884 + C90253 * C91064) +
                           (2 * C90820 + C90253 * C91003) * ae) /
                          C89849;
    const double C91258 = C91254 / C89890;
    const double C91360 = C91358 + C91005;
    const double C91447 = C90311 * C91443;
    const double C91632 = 2 * C91443;
    const double C91623 = C91443 * ce;
    const double C90560 = C90557 / C90112;
    const double C90850 = C90111 * C90557;
    const double C91355 = C90253 * C90557;
    const double C91433 = C90311 * C90557;
    const double C723 =
        3 * ((-(C90557 * C90119) / C89890) / C89849 - C90552 / C90112) +
        C90111 *
            ((-2 * C90111 * C90557) / C90112 +
             C90111 *
                 ((-((C90191 + C90547 * C90192 * C90193) * C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90557 / C90112));
    const double C1326 =
        C90253 * ((-(C90557 * C90119) / C89890) / C89849 - C90552 / C90112);
    const double C1330 = (-(C90111 * C90557 * C90425) / C89890) / C89849 -
                         (C90111 * C90552) / C90112;
    const double C1912 =
        (-(ae * (C90311 * C90325 + C90134 * ce)) / C89890) / C89849 -
        (C90111 * C90552) / C90112 -
        ((C90311 * C90483 + C90134 * ae) * ce) / C90112 +
        C90311 * ((-(C90483 * ce) / C89890) / C89849 - (ae * C90325) / C90112 -
                  (C90311 * C90111 * C90557) / C90112);
    const double C1913 =
        (-((C90475 + C90481 * C90119) * ce) / C89890) / C89849 -
        (ae * (C90323 * C90119 + C90317)) / C90112 +
        C90311 * ((-(C90557 * C90119) / C89890) / C89849 - C90552 / C90112);
    const double C4020 = (-(C90253 * C90483 * ce) / C89890) / C89849 -
                         (ae * C90253 * C90325) / C90112 -
                         (C90311 * C90253 * C90111 * C90557) / C90112;
    const double C5622 =
        (-2 * C90253 * C90552) / C90112 +
        C90253 * ((-(C90557 * C90425) / C89890) / C89849 - C90552 / C90112);
    const double C6356 =
        (-(ae * (C90311 * C90883 + C90820 * ce)) / C89890) / C89849 -
        (C90253 * C90552) / C90112 -
        ((C90311 * C90884 + C90820 * ae) * ce) / C90112 +
        C90311 * ((-(C90884 * ce) / C89890) / C89849 - (ae * C90883) / C90112 -
                  (C90311 * C90253 * C90557) / C90112);
    const double C9292 =
        (-((C90475 + C90481 * C90425) * ce) / C89890) / C89849 -
        (ae * (C90323 * C90425 + C90317)) / C90112 +
        C90311 * ((-(C90557 * C90425) / C89890) / C89849 - C90552 / C90112);
    const double C11585 =
        2 * ((-(C90475 * ce) / C89890) / C89849 - (ae * C90317) / C90112 -
             (C90311 * C90552) / C90112) -
        (ae * (C90311 * C90946 + C90317 + C90944 * ce)) / C90112 -
        ((C90475 + C90311 * C90947 + C90944 * ae) * ce) / C90112 +
        C90311 * ((-(ae * C90946) / C89890) / C89849 - C90552 / C90112 -
                  (C90947 * ce) / C90112 +
                  C90311 * ((-C90485 / C89890) / C89849 - C90330 -
                            (C90311 * C90557) / C90112));
    const double C90168 = C90161 / C89849;
    const double C333 = C307 * C111;
    const double C580 = C554 * C111;
    const double C2208 = C307 * C802;
    const double C2464 = C554 * C802;
    const double C4348 = C4328 * C802;
    const double C5434 = C554 * C808;
    const double C6798 = C4328 * C808;
    const double C2930 = C307 * C1386;
    const double C3186 = C554 * C1386;
    const double C9857 = C9837 * C1386;
    const double C11143 = C307 * C1392;
    const double C13310 = C9837 * C1392;
    const double C7751 = C4328 * C3433;
    const double C8087 = C554 * C3433;
    const double C11985 = C307 * C3433;
    const double C12321 = C9837 * C3433;
    const double C30748 = C307 * C5720;
    const double C36739 = C4328 * C5720;
    const double C56404 = C9837 * C5720;
    const double C20513 = C554 * C15273;
    const double C27884 = C9837 * C16095;
    const double C37668 = C4328 * C16095;
    const double C22877 = C554 * C18732;
    const double C24239 = C9837 * C18732;
    const double C39375 = C307 * C29611;
    const double C25050 = C14524 * C6122;
    const double C32913 = C92157 * C6122;
    const double C35189 = C92171 * C6122;
    const double C37895 = C92336 * C6122;
    const double C53917 = C92171 * C6122;
    const double C25042 = C14525 * C8971;
    const double C27776 = C14524 * C8971;
    const double C37893 = C92171 * C8971;
    const double C57501 = C92171 * C8971;
    const double C82077 = C46527 * C8971;
    const double C30121 = C92157 * C11339;
    const double C35191 = C92336 * C11339;
    const double C91006 = C90999 / C89849;
    const double C15926 = C92183 * C5533;
    const double C24344 = C92337 * C5533;
    const double C91445 = C91438 / C89849;
    const double C91145 = C91138 + C91143;
    const double C34695 = (3 * (C90859 + C90726 * C90547) +
                           C90311 * (2 * C91496 + C90311 * C91503)) /
                          C89849;
    const double C91573 = C91566 + C91571;
    const double C91169 = C91166 / C89890;
    const double C34696 =
        (-3 * (C90727 * C90547 + C90874)) / C89890 +
        C90311 * ((-2 * C91515) / C89890 - (C90311 * C91521) / C89890);
    const double C91597 = C91594 / C89890;
    const double C90304 = C90301 / C89890;
    const double C29736 =
        (-3 * (C90282 * C90547 + C90267)) / C89890 +
        C90311 * ((-2 * C91423) / C89890 - (C90311 * C91427) / C89890);
    const double C91616 = C91613 / C89890;
    const double C90362 = C90359 / C89890;
    const double C15494 =
        (-3 * (C90340 * C90425 + C90325)) / C89890 +
        C90253 * ((-2 * C90886) / C89890 - (C90253 * C91054) / C89890);
    const double C91237 = C91234 / C89890;
    const double C90418 = C90405 + C90415;
    const double C29934 = (3 * (C90382 + C90397 * C90547) +
                           C90311 * (2 * C91395 + C90311 * C91397)) /
                          C89849;
    const double C91582 = C91580 + C91581;
    const double C90519 = C90506 + C90516;
    const double C15824 = (3 * (C90483 + C90498 * C90425) +
                           C90253 * (2 * C90887 + C90253 * C91075)) /
                          C89849;
    const double C91263 = C91256 + C91260;
    const double C90278 = -C90276;
    const double C39260 = C92067 * C29737;
    const double C90968 = -C90966;
    const double C90300 = -C90297;
    const double C91142 = -C91140;
    const double C91560 = -C91559;
    const double C2213 = C2202 + C2203;
    const double C4356 = C4334 + C4335;
    const double C2935 = C2924 + C2925;
    const double C11159 = C11149 + C11150;
    const double C13945 = C13938 + C13939;
    const double C34996 = C34975 + C34976;
    const double C90393 = -C90391;
    const double C24848 = C14525 * C16335;
    const double C37673 = C92171 * C16335;
    const double C81887 = C46527 * C16335;
    const double C89295 = C92171 * C16335;
    const double C90983 = -C90981;
    const double C32704 = C32699 + C32700;
    const double C35000 = C34983 + C34984;
    const double C37677 = C37664 + C37665;
    const double C29950 = C29944 + C29945;
    const double C90414 = -C90411;
    const double C91165 = -C91161;
    const double C91281 = -C91280;
    const double C91313 = C91312 / C89890;
    const double C90336 = -C90334;
    const double C20291 = C92067 * C15495;
    const double C91377 = -C91375;
    const double C90358 = -C90355;
    const double C91152 = -C91151;
    const double C91502 = C91500 / C89890;
    const double C91570 = -C91568;
    const double C495 = C488 + C489;
    const double C2384 = C2379 + C2380;
    const double C4553 = C4541 + C4542;
    const double C11352 = C11345 + C11346;
    const double C3104 = C3092 + C3093;
    const double C14153 = C14151 + C14152;
    const double C35194 = C35182 + C35183;
    const double C91044 = -C91042;
    const double C91117 = -C91116;
    const double C2383 = C2376 + C2377;
    const double C4555 = C4546 + C4547;
    const double C7030 = C7024 + C7025;
    const double C3105 = C3097 + C3098;
    const double C90465 = -C90464;
    const double C91053 = C91051 / C89890;
    const double C91123 = C91121 / C89890;
    const double C91232 = -C91228;
    const double C91296 = -C91294;
    const double C2469 = C2458 + C2459;
    const double C5450 = C5440 + C5441;
    const double C3191 = C3180 + C3181;
    const double C9865 = C9843 + C9844;
    const double C9087 = C9083 + C9084;
    const double C24246 = C24225 + C24226;
    const double C90494 = -C90492;
    const double C20512 = C92183 * C15825;
    const double C91404 = -C91402;
    const double C15842 = C15834 + C15835;
    const double C27900 = C27888 + C27889;
    const double C19403 = C19399 + C19400;
    const double C24250 = C24233 + C24234;
    const double C90515 = -C90512;
    const double C91247 = -C91246;
    const double C91520 = C91518 / C89890;
    const double C91593 = -C91589;
    const double C662 = C655 + C656;
    const double C5546 = C5539 + C5540;
    const double C2556 = C2544 + C2545;
    const double C3272 = C3264 + C3265;
    const double C9965 = C9953 + C9954;
    const double C9194 = C9192 + C9193;
    const double C24347 = C24335 + C24336;
    const double C91065 = -C91063;
    const double C91419 = -C91417;
    const double C2557 = C2549 + C2550;
    const double C3273 = C3267 + C3268;
    const double C9967 = C9958 + C9959;
    const double C13431 = C13424 + C13425;
    const double C90541 = -C90540;
    const double C91074 = C91072 / C89890;
    const double C91426 = C91424 / C89890;
    const double C91259 = -C91255;
    const double C91612 = -C91608;
    const double C15302 = C89868 * C4866;
    const double C15292 = C89868 * C807;
    const double C15288 = C89868 * C812;
    const double C15284 = C89868 * C804;
    const double C15407 = C89868 * C892;
    const double C15401 = C89868 * C889;
    const double C15507 = C89868 * C5086;
    const double C15505 = C89868 * C958;
    const double C15500 = C89868 * C955;
    const double C16826 = C89868 * C808;
    const double C16818 = C89868 * C803;
    const double C16942 = C89868 * C888;
    const double C17052 = C89868 * C954;
    const double C18753 = C89868 * C3432;
    const double C18745 = C89868 * C8413;
    const double C18869 = C89868 * C3514;
    const double C18985 = C89868 * C8654;
    const double C18981 = C89868 * C3588;
    const double C29640 = C89868 * C10809;
    const double C29630 = C89868 * C1391;
    const double C29626 = C89868 * C1396;
    const double C29622 = C89868 * C1388;
    const double C29749 = C89868 * C10931;
    const double C29747 = C89868 * C1473;
    const double C29742 = C89868 * C1470;
    const double C29847 = C89868 * C1542;
    const double C29841 = C89868 * C1539;
    const double C31398 = C89868 * C1392;
    const double C31390 = C89868 * C1387;
    const double C31516 = C89868 * C1469;
    const double C31624 = C89868 * C1538;
    const double C32375 = C89868 * C5720;
    const double C76792 = C89868 * C3433;
    const double C103 =
        (C89868 / C89854 - (0 * be) / C89849) / C89854 - (0 * be) / C89849;
    const double C41552 = C89868 / C89854 - (0 * be) / C89849;
    const double C89870 = C89867 / C89849;
    const double C4896 = C4104 * C808;
    const double C4882 = C4104 * C803;
    const double C4994 = C4104 * C888;
    const double C5096 = C4104 * C954;
    const double C6458 = C4104 * C802;
    const double C8431 = C4104 * C3433;
    const double C10839 = C4104 * C1392;
    const double C10825 = C4104 * C1387;
    const double C10941 = C4104 * C1469;
    const double C11035 = C4104 * C1538;
    const double C12653 = C4104 * C1386;
    const double C20145 = C19671 * C15273;
    const double C20141 = C19671 * C4871;
    const double C20139 = C19671 * C4865;
    const double C20137 = C19671 * C822;
    const double C20135 = C19671 * C806;
    const double C20133 = C19671 * C813;
    const double C20131 = C19671 * C805;
    const double C20219 = C19671 * C891;
    const double C20217 = C19671 * C890;
    const double C20288 = C19671 * C5085;
    const double C20285 = C19671 * C957;
    const double C20282 = C19671 * C956;
    const double C21179 = C19671 * C4866;
    const double C21173 = C19671 * C807;
    const double C21169 = C19671 * C812;
    const double C21167 = C19671 * C804;
    const double C21263 = C19671 * C892;
    const double C21261 = C19671 * C889;
    const double C21343 = C19671 * C5086;
    const double C21340 = C19671 * C958;
    const double C21337 = C19671 * C955;
    const double C22425 = C19671 * C3431;
    const double C22423 = C19671 * C3439;
    const double C22421 = C19671 * C8412;
    const double C22419 = C19671 * C8418;
    const double C22417 = C19671 * C18732;
    const double C22507 = C19671 * C3513;
    const double C22592 = C19671 * C8653;
    const double C22587 = C19671 * C3587;
    const double C24547 = C19671 * C1390;
    const double C24545 = C19671 * C1406;
    const double C24543 = C19671 * C5719;
    const double C24541 = C19671 * C5725;
    const double C24539 = C19671 * C16095;
    const double C24535 = C19671 * C1397;
    const double C24533 = C19671 * C1389;
    const double C24656 = C19671 * C1472;
    const double C24644 = C19671 * C1471;
    const double C24749 = C19671 * C5885;
    const double C24747 = C19671 * C1541;
    const double C24745 = C19671 * C1540;
    const double C25395 = C19671 * C8413;
    const double C25389 = C19671 * C3432;
    const double C25505 = C19671 * C3514;
    const double C25613 = C19671 * C8654;
    const double C25610 = C19671 * C3588;
    const double C26333 = C19671 * C1396;
    const double C26331 = C19671 * C1388;
    const double C26441 = C19671 * C1470;
    const double C26544 = C19671 * C1539;
    const double C34707 = C19671 * C10808;
    const double C34705 = C19671 * C10814;
    const double C34703 = C19671 * C24524;
    const double C34701 = C19671 * C24527;
    const double C34801 = C19671 * C10930;
    const double C35527 = C19671 * C5720;
    const double C36427 = C19671 * C1391;
    const double C36535 = C19671 * C1473;
    const double C36638 = C19671 * C1542;
    const double C39198 = C19671 * C29611;
    const double C40308 = C19671 * C10809;
    const double C40382 = C19671 * C10931;
    const double C47292 = C46529 * C4866;
    const double C47282 = C46529 * C807;
    const double C47278 = C46529 * C812;
    const double C47274 = C46529 * C804;
    const double C47393 = C46529 * C892;
    const double C47387 = C46529 * C889;
    const double C47489 = C46529 * C5086;
    const double C47487 = C46529 * C958;
    const double C47482 = C46529 * C955;
    const double C48724 = C46529 * C808;
    const double C48716 = C46529 * C803;
    const double C48840 = C46529 * C888;
    const double C48950 = C46529 * C954;
    const double C50612 = C46529 * C3432;
    const double C50604 = C46529 * C8413;
    const double C50724 = C46529 * C3514;
    const double C50836 = C46529 * C8654;
    const double C50832 = C46529 * C3588;
    const double C53314 = C46529 * C1391;
    const double C53306 = C46529 * C5720;
    const double C53300 = C46529 * C1396;
    const double C53296 = C46529 * C1388;
    const double C53436 = C46529 * C1473;
    const double C53430 = C46529 * C1470;
    const double C53550 = C46529 * C1542;
    const double C53544 = C46529 * C1539;
    const double C54352 = C46529 * C3433;
    const double C55584 = C46529 * C1387;
    const double C55726 = C46529 * C1469;
    const double C55864 = C46529 * C1538;
    const double C70652 = C46529 * C10809;
    const double C70740 = C46529 * C10931;
    const double C72290 = C46529 * C1392;
    const double C92360 = C92324 - C92349;
    const double C92350 = C92326 - C92327;
    const double C47295 = C46523 * C4868;
    const double C47281 = C46523 * C818;
    const double C47277 = C46523 * C829;
    const double C47273 = C46523 * C817;
    const double C47396 = C46523 * C4990;
    const double C47392 = C46523 * C899;
    const double C47390 = C46523 * C898;
    const double C47492 = C46523 * C5088;
    const double C47486 = C46523 * C965;
    const double C47481 = C46523 * C964;
    const double C48719 = C46523 * C816;
    const double C48839 = C46523 * C897;
    const double C48949 = C46523 * C963;
    const double C50615 = C46523 * C3435;
    const double C50607 = C46523 * C8415;
    const double C50727 = C46523 * C8543;
    const double C50723 = C46523 * C3517;
    const double C50839 = C46523 * C8656;
    const double C50835 = C46523 * C3591;
    const double C53317 = C46523 * C1402;
    const double C53309 = C46523 * C5722;
    const double C53299 = C46523 * C1413;
    const double C53295 = C46523 * C1401;
    const double C53439 = C46523 * C1480;
    const double C53435 = C46523 * C5808;
    const double C53429 = C46523 * C1479;
    const double C53553 = C46523 * C5888;
    const double C53549 = C46523 * C1549;
    const double C53547 = C46523 * C1548;
    const double C55587 = C46523 * C1400;
    const double C55729 = C46523 * C1478;
    const double C55863 = C46523 * C1547;
    const double C70655 = C46523 * C10811;
    const double C70743 = C46523 * C10933;
    const double C70825 = C46523 * C11031;
    const double C90010 = C90004 / C89849;
    const double C14768 = C14751 * C803;
    const double C14762 = C14751 * C812;
    const double C14756 = C14751 * C804;
    const double C14872 = C14751 * C888;
    const double C14866 = C14751 * C889;
    const double C14964 = C14751 * C954;
    const double C14958 = C14751 * C955;
    const double C17162 = C14751 * C807;
    const double C17278 = C14751 * C892;
    const double C17385 = C14751 * C958;
    const double C18093 = C14751 * C3432;
    const double C18209 = C14751 * C3514;
    const double C18316 = C14751 * C3588;
    const double C24855 = C14751 * C5719;
    const double C24849 = C14751 * C5725;
    const double C24843 = C14751 * C3439;
    const double C24837 = C14751 * C3431;
    const double C24949 = C14751 * C3513;
    const double C25049 = C14751 * C5885;
    const double C25043 = C14751 * C3587;
    const double C27558 = C14751 * C8418;
    const double C27552 = C14751 * C8412;
    const double C27775 = C14751 * C8653;
    const double C14770 = C14752 * C808;
    const double C14754 = C14752 * C807;
    const double C14868 = C14752 * C892;
    const double C14960 = C14752 * C958;
    const double C17164 = C14752 * C4866;
    const double C17383 = C14752 * C5086;
    const double C18095 = C14752 * C8413;
    const double C18314 = C14752 * C8654;
    const double C24853 = C14752 * C16095;
    const double C24845 = C14752 * C8418;
    const double C24839 = C14752 * C8412;
    const double C25041 = C14752 * C8653;
    const double C27554 = C14752 * C18732;
    const double C41796 = C41776 * C802;
    const double C41788 = C41776 * C803;
    const double C41782 = C41776 * C812;
    const double C41778 = C41776 * C804;
    const double C41897 = C41776 * C888;
    const double C41892 = C41776 * C889;
    const double C41994 = C41776 * C954;
    const double C41989 = C41776 * C955;
    const double C44074 = C41776 * C808;
    const double C44066 = C41776 * C807;
    const double C44186 = C41776 * C892;
    const double C44300 = C41776 * C958;
    const double C45004 = C41776 * C3433;
    const double C44996 = C41776 * C3432;
    const double C45118 = C41776 * C3514;
    const double C45226 = C41776 * C3588;
    const double C53680 = C41776 * C5719;
    const double C53676 = C41776 * C5725;
    const double C53672 = C41776 * C5720;
    const double C53666 = C41776 * C3439;
    const double C53662 = C41776 * C3431;
    const double C53796 = C41776 * C3513;
    const double C53916 = C41776 * C5885;
    const double C53910 = C41776 * C3587;
    const double C54768 = C41776 * C8413;
    const double C55044 = C41776 * C8654;
    const double C57226 = C41776 * C8418;
    const double C57222 = C41776 * C8412;
    const double C57500 = C41776 * C8653;
    const double C86734 = C41776 * C24524;
    const double C86730 = C41776 * C24527;
    const double C89290 = C41776 * C16095;
    const double C19825 =
        (C90014 / C89854 - (0 * be) / C89849) / C89854 - (0 * be) / C89849;
    const double C46754 = C90014 / C89854 - (0 * be) / C89849;
    const double C401 = C337 * C181;
    const double C481 = C337 * C244;
    const double C2285 = C337 * C2059;
    const double C3089 = C337 * C2849;
    const double C417 = C413 * C92105;
    const double C2286 = C413 * C1985;
    const double C497 = C493 * C92116;
    const double C3090 = C493 * C2709;
    const double C11162 = C11154 * C92084;
    const double C12984 = C11154 * C1983;
    const double C11161 = C11153 * C801;
    const double C11246 = C11153 * C181;
    const double C12983 = C11153 * C1987;
    const double C14046 = C11153 * C2059;
    const double C11262 = C11258 * C92105;
    const double C14047 = C11258 * C1985;
    const double C92361 = C92338 - C92355;
    const double C4362 = C4346 + C4347;
    const double C4360 = C4342 + C4343;
    const double C4358 = C4338 + C4339;
    const double C4357 = C4336 + C4337;
    const double C4355 = C4332 + C4333;
    const double C4457 = C4447 + C4448;
    const double C4455 = C4442 + C4443;
    const double C4557 = C4550 + C4551;
    const double C4554 = C4544 + C4545;
    const double C4552 = C4539 + C4540;
    const double C6808 = C6796 + C6797;
    const double C6806 = C6792 + C6793;
    const double C6804 = C6788 + C6789;
    const double C7031 = C7026 + C7027;
    const double C7029 = C7022 + C7023;
    const double C7761 = C7749 + C7750;
    const double C7759 = C7745 + C7746;
    const double C7757 = C7741 + C7742;
    const double C7984 = C7979 + C7980;
    const double C7982 = C7975 + C7976;
    const double C35004 = C34991 + C34992;
    const double C35002 = C34987 + C34988;
    const double C34999 = C34981 + C34982;
    const double C34997 = C34977 + C34978;
    const double C34995 = C34973 + C34974;
    const double C34993 = C34969 + C34970;
    const double C35098 = C35085 + C35086;
    const double C35196 = C35186 + C35187;
    const double C35195 = C35184 + C35185;
    const double C37680 = C37670 + C37671;
    const double C37676 = C37662 + C37663;
    const double C37674 = C37658 + C37659;
    const double C37898 = C37890 + C37891;
    const double C92356 = C92341 - C92342;
    const double C41799 = C41548 * C317;
    const double C41795 = C41548 * C311;
    const double C41791 = C41548 * C316;
    const double C41787 = C41548 * C310;
    const double C41785 = C41548 * C315;
    const double C41781 = C41548 * C309;
    const double C41896 = C41548 * C396;
    const double C41891 = C41548 * C395;
    const double C41999 = C41548 * C477;
    const double C41993 = C41548 * C476;
    const double C41988 = C41548 * C475;
    const double C44073 = C41548 * C1020;
    const double C44069 = C41548 * C1029;
    const double C44065 = C41548 * C1021;
    const double C44303 = C41548 * C1145;
    const double C44299 = C41548 * C1144;
    const double C45003 = C41548 * C1604;
    const double C44999 = C41548 * C1613;
    const double C44995 = C41548 * C1605;
    const double C45233 = C41548 * C1731;
    const double C45229 = C41548 * C1729;
    const double C53683 = C41548 * C1607;
    const double C53679 = C41548 * C1615;
    const double C53675 = C41548 * C1608;
    const double C53665 = C41548 * C1614;
    const double C53661 = C41548 * C1606;
    const double C53795 = C41548 * C1672;
    const double C53919 = C41548 * C1730;
    const double C53915 = C41548 * C1728;
    const double C53913 = C41548 * C1727;
    const double C54767 = C41548 * C3662;
    const double C55047 = C41548 * C3806;
    const double C57225 = C41548 * C3665;
    const double C57221 = C41548 * C3661;
    const double C57499 = C41548 * C3805;
    const double C86737 = C41548 * C11126;
    const double C86733 = C41548 * C11129;
    const double C86905 = C41548 * C11339;
    const double C89293 = C41548 * C5968;
    const double C89503 = C41548 * C6122;
    const double C14750 =
        ((-(0 * be) / C89849) / C89854 -
         ((0 - (C89967 * C89986) / C89849) * be) / C89849) /
            C89854 -
        ((C89967 * ((-C89986 / C89849) / C89854 -
                    ((C92157 - (C89967 * C89989) / C89849) * be) / C89849) +
          C41548) *
         be) /
            C89849 +
        (-C89989 / C89849) / C89854 - (0 * be) / C89849;
    const double C90055 = C90049 / C89849;
    const double C28666 = C28649 * C1387;
    const double C28660 = C28649 * C1396;
    const double C28654 = C28649 * C1388;
    const double C28770 = C28649 * C1469;
    const double C28764 = C28649 * C1470;
    const double C28862 = C28649 * C1538;
    const double C28856 = C28649 * C1539;
    const double C31062 = C28649 * C3432;
    const double C31178 = C28649 * C3514;
    const double C31285 = C28649 * C3588;
    const double C32041 = C28649 * C1391;
    const double C32157 = C28649 * C1473;
    const double C32264 = C28649 * C1542;
    const double C34421 = C28649 * C8412;
    const double C34415 = C28649 * C8418;
    const double C34409 = C28649 * C3439;
    const double C34403 = C28649 * C3431;
    const double C34513 = C28649 * C3513;
    const double C34611 = C28649 * C8653;
    const double C34605 = C28649 * C3587;
    const double C38008 = C28649 * C5719;
    const double C38002 = C28649 * C5725;
    const double C38225 = C28649 * C5885;
    const double C28668 = C28650 * C1392;
    const double C28652 = C28650 * C1391;
    const double C28766 = C28650 * C1473;
    const double C28858 = C28650 * C1542;
    const double C31064 = C28650 * C5720;
    const double C32043 = C28650 * C10809;
    const double C32159 = C28650 * C10931;
    const double C34419 = C28650 * C16095;
    const double C34411 = C28650 * C5725;
    const double C34405 = C28650 * C5719;
    const double C34607 = C28650 * C5885;
    const double C38006 = C28650 * C24524;
    const double C38000 = C28650 * C24527;
    const double C58440 = C58420 * C1386;
    const double C58432 = C58420 * C1387;
    const double C58426 = C58420 * C1396;
    const double C58422 = C58420 * C1388;
    const double C58541 = C58420 * C1469;
    const double C58536 = C58420 * C1470;
    const double C58637 = C58420 * C1538;
    const double C58632 = C58420 * C1539;
    const double C60752 = C58420 * C3433;
    const double C60744 = C58420 * C3432;
    const double C60864 = C58420 * C3514;
    const double C60978 = C58420 * C3588;
    const double C61718 = C58420 * C1392;
    const double C61710 = C58420 * C1391;
    const double C61832 = C58420 * C1473;
    const double C61940 = C58420 * C1542;
    const double C64422 = C58420 * C8412;
    const double C64418 = C58420 * C8418;
    const double C64414 = C58420 * C8413;
    const double C64408 = C58420 * C3439;
    const double C64404 = C58420 * C3431;
    const double C64536 = C58420 * C3513;
    const double C64660 = C58420 * C8653;
    const double C64656 = C58420 * C8654;
    const double C64654 = C58420 * C3587;
    const double C67686 = C58420 * C5720;
    const double C68882 = C58420 * C5719;
    const double C68878 = C58420 * C5725;
    const double C69156 = C58420 * C5885;
    const double C81400 = C58420 * C18732;
    const double C84806 = C58420 * C16095;
    const double C38588 =
        (C90059 / C89854 - (0 * be) / C89849) / C89854 - (0 * be) / C89849;
    const double C69684 = C90059 / C89854 - (0 * be) / C89849;
    const double C648 = C584 * C181;
    const double C726 = C584 * C244;
    const double C2541 = C584 * C2059;
    const double C3345 = C584 * C2849;
    const double C664 = C660 * C92105;
    const double C2542 = C660 * C1985;
    const double C742 = C738 * C92116;
    const double C3346 = C738 * C2709;
    const double C5453 = C5445 * C92084;
    const double C7131 = C5445 * C1983;
    const double C5452 = C5444 * C801;
    const double C5626 = C5444 * C244;
    const double C7130 = C5444 * C1987;
    const double C9296 = C5444 * C2849;
    const double C5642 = C5638 * C92116;
    const double C9297 = C5638 * C2709;
    const double C92362 = C92343 - C92358;
    const double C9871 = C9855 + C9856;
    const double C9869 = C9851 + C9852;
    const double C9867 = C9847 + C9848;
    const double C9866 = C9845 + C9846;
    const double C9864 = C9841 + C9842;
    const double C9969 = C9962 + C9963;
    const double C9966 = C9956 + C9957;
    const double C9964 = C9951 + C9952;
    const double C10062 = C10052 + C10053;
    const double C10060 = C10047 + C10048;
    const double C12331 = C12319 + C12320;
    const double C12329 = C12315 + C12316;
    const double C12327 = C12311 + C12312;
    const double C12444 = C12439 + C12440;
    const double C12442 = C12435 + C12436;
    const double C13320 = C13308 + C13309;
    const double C13318 = C13304 + C13305;
    const double C13316 = C13300 + C13301;
    const double C13432 = C13426 + C13427;
    const double C13430 = C13422 + C13423;
    const double C24254 = C24241 + C24242;
    const double C24252 = C24237 + C24238;
    const double C24249 = C24231 + C24232;
    const double C24247 = C24227 + C24228;
    const double C24245 = C24223 + C24224;
    const double C24243 = C24219 + C24220;
    const double C24349 = C24339 + C24340;
    const double C24348 = C24337 + C24338;
    const double C24441 = C24428 + C24429;
    const double C27903 = C27894 + C27895;
    const double C27901 = C27890 + C27891;
    const double C27899 = C27886 + C27887;
    const double C27897 = C27882 + C27883;
    const double C28010 = C28002 + C28003;
    const double C92359 = C92346 - C92347;
    const double C58443 = C57967 * C564;
    const double C58439 = C57967 * C558;
    const double C58435 = C57967 * C563;
    const double C58431 = C57967 * C557;
    const double C58429 = C57967 * C562;
    const double C58425 = C57967 * C556;
    const double C58546 = C57967 * C644;
    const double C58540 = C57967 * C643;
    const double C58535 = C57967 * C642;
    const double C58636 = C57967 * C721;
    const double C58631 = C57967 * C720;
    const double C60751 = C57967 * C1202;
    const double C60747 = C57967 * C1211;
    const double C60743 = C57967 * C1203;
    const double C60871 = C57967 * C1271;
    const double C60867 = C57967 * C1269;
    const double C61717 = C57967 * C1786;
    const double C61713 = C57967 * C1795;
    const double C61709 = C57967 * C1787;
    const double C61835 = C57967 * C1852;
    const double C61831 = C57967 * C1853;
    const double C64425 = C57967 * C1205;
    const double C64421 = C57967 * C1213;
    const double C64417 = C57967 * C1206;
    const double C64407 = C57967 * C1212;
    const double C64403 = C57967 * C1204;
    const double C64545 = C57967 * C1270;
    const double C64541 = C57967 * C1268;
    const double C64539 = C57967 * C1267;
    const double C64653 = C57967 * C1328;
    const double C67685 = C57967 * C3876;
    const double C67827 = C57967 * C3950;
    const double C68885 = C57967 * C3875;
    const double C68881 = C57967 * C3879;
    const double C69021 = C57967 * C3949;
    const double C81403 = C57967 * C5417;
    const double C81399 = C57967 * C5420;
    const double C81488 = C57967 * C5533;
    const double C84809 = C57967 * C9072;
    const double C84805 = C57967 * C9075;
    const double C28648 =
        ((-(0 * be) / C89849) / C89854 -
         ((0 - (C89974 * C90033) / C89849) * be) / C89849) /
            C89854 -
        ((C89974 * ((-C90033 / C89849) / C89854 -
                    ((C92183 - (C89974 * C90036) / C89849) * be) / C89849) +
          C57967) *
         be) /
            C89849 +
        (-C90036 / C89849) / C89854 - (0 * be) / C89849;
    const double C4883 = C4099 * C815;
    const double C6461 = C4098 * C815;
    const double C16819 = C92072 * C815;
    const double C42311 = C41547 * C815;
    const double C48717 = C92072 * C815;
    const double C4899 = C4098 * C819;
    const double C15293 = C92072 * C819;
    const double C16829 = C92322 * C819;
    const double C21174 = C92067 * C819;
    const double C47283 = C92072 * C819;
    const double C48727 = C46523 * C819;
    const double C10826 = C4099 * C1399;
    const double C12656 = C4098 * C1399;
    const double C31391 = C92072 * C1399;
    const double C55585 = C92072 * C1399;
    const double C59397 = C41547 * C1399;
    const double C10842 = C4098 * C1403;
    const double C29631 = C92072 * C1403;
    const double C31401 = C92322 * C1403;
    const double C36428 = C92067 * C1403;
    const double C53315 = C92072 * C1403;
    const double C72293 = C46523 * C1403;
    const double C8434 = C4098 * C3436;
    const double C18754 = C92072 * C3436;
    const double C25390 = C92067 * C3436;
    const double C50613 = C92072 * C3436;
    const double C54355 = C46523 * C3436;
    const double C76795 = C92322 * C3436;
    const double C24856 = C14524 * C5965;
    const double C32698 = C92157 * C5965;
    const double C34980 = C92171 * C5965;
    const double C37667 = C92336 * C5965;
    const double C53681 = C92171 * C5965;
    const double C89289 = C41548 * C5965;
    const double C24840 = C14525 * C8766;
    const double C27553 = C14524 * C8766;
    const double C37661 = C92171 * C8766;
    const double C57223 = C92171 * C8766;
    const double C81879 = C46527 * C8766;
    const double C5547 = C5541 + C5542;
    const double C26125 = C26121 + C26122;
    const double C11353 = C11347 + C11348;
    const double C36957 = C36953 + C36954;
    const double C8199 = C8194 + C8195;
    const double C12441 = C12433 + C12434;
    const double C56548 = C56544 + C56545;
    const double C7981 = C7973 + C7974;
    const double C12210 = C12206 + C12207;
    const double C66355 = C66352 + C66353;
    const double C5449 = C5438 + C5439;
    const double C6805 = C6790 + C6791;
    const double C26020 = C26013 + C26014;
    const double C11158 = C11147 + C11148;
    const double C13317 = C13302 + C13303;
    const double C36748 = C36741 + C36742;
    const double C7758 = C7743 + C7744;
    const double C8091 = C8083 + C8084;
    const double C11989 = C11981 + C11982;
    const double C12328 = C12313 + C12314;
    const double C56410 = C56402 + C56403;
    const double C66080 = C66072 + C66073;
    const double C331 = C307 * C120;
    const double C578 = C554 * C120;
    const double C4350 = C4327 * C120;
    const double C9859 = C9836 * C120;
    const double C2206 = C307 * C811;
    const double C2462 = C554 * C811;
    const double C4344 = C4328 * C811;
    const double C4888 = C4104 * C811;
    const double C6800 = C4327 * C811;
    const double C12323 = C9836 * C811;
    const double C14774 = C14751 * C811;
    const double C16822 = C89868 * C811;
    const double C41792 = C41776 * C811;
    const double C48720 = C46529 * C811;
    const double C5436 = C554 * C823;
    const double C6794 = C4328 * C823;
    const double C14760 = C14752 * C823;
    const double C15296 = C89868 * C823;
    const double C17168 = C14751 * C823;
    const double C21175 = C19671 * C823;
    const double C26017 = C9836 * C823;
    const double C44070 = C41776 * C823;
    const double C47286 = C46529 * C823;
    const double C2928 = C307 * C1395;
    const double C3184 = C554 * C1395;
    const double C7753 = C4327 * C1395;
    const double C9853 = C9837 * C1395;
    const double C10831 = C4104 * C1395;
    const double C13312 = C9836 * C1395;
    const double C28672 = C28649 * C1395;
    const double C31394 = C89868 * C1395;
    const double C55588 = C46529 * C1395;
    const double C58436 = C58420 * C1395;
    const double C11145 = C307 * C1407;
    const double C13306 = C9837 * C1407;
    const double C28658 = C28650 * C1407;
    const double C29634 = C89868 * C1407;
    const double C32047 = C28649 * C1407;
    const double C36429 = C19671 * C1407;
    const double C36745 = C4327 * C1407;
    const double C53310 = C46529 * C1407;
    const double C61714 = C58420 * C1407;
    const double C7747 = C4328 * C3440;
    const double C8085 = C554 * C3440;
    const double C11983 = C307 * C3440;
    const double C12317 = C9837 * C3440;
    const double C18099 = C14751 * C3440;
    const double C18749 = C89868 * C3440;
    const double C25391 = C19671 * C3440;
    const double C31068 = C28649 * C3440;
    const double C45000 = C41776 * C3440;
    const double C50608 = C46529 * C3440;
    const double C56406 = C9836 * C3440;
    const double C60748 = C58420 * C3440;
    const double C66076 = C4327 * C3440;
    const double C28005 = C92195 * C6279;
    const double C34512 = C28199 * C6279;
    const double C38119 = C28198 * C6279;
    const double C69023 = C92195 * C6279;
    const double C86317 = C69237 * C6279;
    const double C19508 = C92183 * C9188;
    const double C24342 = C92195 * C9188;
    const double C28007 = C92337 * C9188;
    const double C34520 = C28198 * C9188;
    const double C64543 = C92195 * C9188;
    const double C84913 = C57967 * C9188;
    const double C15925 = C554 * C4987;
    const double C20221 = C19671 * C4987;
    const double C24343 = C9836 * C4987;
    const double C24653 = C19671 * C5805;
    const double C24955 = C14751 * C5805;
    const double C28004 = C9837 * C5805;
    const double C32809 = C307 * C5805;
    const double C34511 = C28650 * C5805;
    const double C35092 = C4328 * C5805;
    const double C37786 = C4327 * C5805;
    const double C38118 = C28649 * C5805;
    const double C53802 = C41776 * C5805;
    const double C69022 = C58420 * C5805;
    const double C19507 = C554 * C8540;
    const double C22509 = C19671 * C8540;
    const double C24341 = C9837 * C8540;
    const double C24951 = C14752 * C8540;
    const double C27668 = C14751 * C8540;
    const double C28006 = C9836 * C8540;
    const double C34519 = C28649 * C8540;
    const double C37780 = C4328 * C8540;
    const double C57362 = C41776 * C8540;
    const double C64542 = C58420 * C8540;
    const double C30120 = C307 * C11028;
    const double C34887 = C19671 * C11028;
    const double C35190 = C4327 * C11028;
    const double C4887 = C4098 * C828;
    const double C6469 = C4097 * C828;
    const double C15289 = C92072 * C828;
    const double C16825 = C92322 * C828;
    const double C21170 = C92067 * C828;
    const double C47279 = C92072 * C828;
    const double C48723 = C46523 * C828;
    const double C4895 = C4097 * C830;
    const double C15295 = C92322 * C830;
    const double C20138 = C92067 * C830;
    const double C47285 = C46523 * C830;
    const double C10830 = C4098 * C1412;
    const double C12664 = C4097 * C1412;
    const double C26334 = C92067 * C1412;
    const double C29627 = C92072 * C1412;
    const double C31397 = C92322 * C1412;
    const double C53301 = C92072 * C1412;
    const double C55591 = C46523 * C1412;
    const double C10838 = C4097 * C1414;
    const double C24546 = C92067 * C1414;
    const double C29633 = C92322 * C1414;
    const double C53313 = C46523 * C1414;
    const double C8430 = C4097 * C3443;
    const double C18752 = C92322 * C3443;
    const double C22424 = C92067 * C3443;
    const double C50611 = C46523 * C3443;
    const double C409 = C92157 * C397;
    const double C4454 = C92336 * C397;
    const double C41902 = C41548 * C397;
    const double C2289 = C92157 * C1087;
    const double C4445 = C92171 * C1087;
    const double C6913 = C92336 * C1087;
    const double C14867 = C14524 * C1087;
    const double C17281 = C14523 * C1087;
    const double C41893 = C92171 * C1087;
    const double C44189 = C41548 * C1087;
    const double C3009 = C92157 * C1671;
    const double C7864 = C92336 * C1671;
    const double C18208 = C14523 * C1671;
    const double C45117 = C41548 * C1671;
    const double C11256 = C92157 * C1673;
    const double C24958 = C14523 * C1673;
    const double C35091 = C92336 * C1673;
    const double C53805 = C41548 * C1673;
    const double C14050 = C92157 * C3735;
    const double C24950 = C14524 * C3735;
    const double C27671 = C14523 * C3735;
    const double C35088 = C92171 * C3735;
    const double C37783 = C92336 * C3735;
    const double C53797 = C92171 * C3735;
    const double C57365 = C41548 * C3735;
    const double C734 = C92183 * C722;
    const double C10059 = C92337 * C722;
    const double C58642 = C57967 * C722;
    const double C2636 = C92183 * C1327;
    const double C12550 = C92337 * C1327;
    const double C31288 = C28197 * C1327;
    const double C60981 = C57967 * C1327;
    const double C5636 = C92183 * C1329;
    const double C24434 = C92337 * C1329;
    const double C34614 = C28197 * C1329;
    const double C64663 = C57967 * C1329;
    const double C3349 = C92183 * C1911;
    const double C10050 = C92195 * C1911;
    const double C13535 = C92337 * C1911;
    const double C28857 = C28198 * C1911;
    const double C32267 = C28197 * C1911;
    const double C58633 = C92195 * C1911;
    const double C61943 = C57967 * C1911;
    const double C9300 = C92183 * C4019;
    const double C24431 = C92195 * C4019;
    const double C28115 = C92337 * C4019;
    const double C34606 = C28198 * C4019;
    const double C38228 = C28197 * C4019;
    const double C64655 = C92195 * C4019;
    const double C69159 = C57967 * C4019;
    const double C27902 = C27892 + C27893;
    const double C418 = C414 * C92105;
    const double C2291 = C414 * C1985;
    const double C665 = C661 * C92105;
    const double C2547 = C661 * C1985;
    const double C498 = C494 * C92116;
    const double C3095 = C494 * C2709;
    const double C743 = C739 * C92116;
    const double C3351 = C739 * C2709;
    const double C404 = C339 * C181;
    const double C484 = C339 * C244;
    const double C2290 = C339 * C2059;
    const double C3094 = C339 * C2849;
    const double C407 = C341 * C181;
    const double C487 = C341 * C244;
    const double C2295 = C341 * C2059;
    const double C3099 = C341 * C2849;
    const double C2292 = C2214 * C2060;
    const double C2378 = C2214 * C244;
    const double C2287 = C2212 * C2060;
    const double C2381 = C2212 * C244;
    const double C3010 = C2936 * C181;
    const double C3096 = C2936 * C2850;
    const double C9756 = C2936 * C244;
    const double C11139 = C2936 * C801;
    const double C12096 = C2936 * C2059;
    const double C12991 = C2936 * C1987;
    const double C12989 = C2936 * C1988;
    const double C13198 = C2936 * C2849;
    const double C3007 = C2934 * C181;
    const double C3091 = C2934 * C2850;
    const double C9753 = C2934 * C244;
    const double C11137 = C2934 * C801;
    const double C12091 = C2934 * C2059;
    const double C12987 = C2934 * C1987;
    const double C12985 = C2934 * C1988;
    const double C13194 = C2934 * C2849;
    const double C11168 = C11160 * C801;
    const double C11257 = C11160 * C181;
    const double C31732 = C11160 * C1987;
    const double C32806 = C11160 * C2059;
    const double C13946 = C13944 * C801;
    const double C14048 = C13944 * C2060;
    const double C29955 = C29951 * C801;
    const double C30039 = C29951 * C181;
    const double C40522 = C29951 * C1987;
    const double C41198 = C29951 * C2059;
    const double C651 = C586 * C181;
    const double C729 = C586 * C244;
    const double C2546 = C586 * C2059;
    const double C3350 = C586 * C2849;
    const double C654 = C588 * C181;
    const double C732 = C588 * C244;
    const double C2551 = C588 * C2059;
    const double C3355 = C588 * C2849;
    const double C2548 = C2470 * C2060;
    const double C2634 = C2470 * C244;
    const double C4712 = C2470 * C181;
    const double C5430 = C2470 * C801;
    const double C7138 = C2470 * C1987;
    const double C7136 = C2470 * C1988;
    const double C7244 = C2470 * C2059;
    const double C8306 = C2470 * C2849;
    const double C2543 = C2468 * C2060;
    const double C2637 = C2468 * C244;
    const double C4710 = C2468 * C181;
    const double C5428 = C2468 * C801;
    const double C7134 = C2468 * C1987;
    const double C7132 = C2468 * C1988;
    const double C7240 = C2468 * C2059;
    const double C8301 = C2468 * C2849;
    const double C5459 = C5451 * C801;
    const double C5637 = C5451 * C244;
    const double C17490 = C5451 * C1987;
    const double C19610 = C5451 * C2849;
    const double C3266 = C3192 * C181;
    const double C3352 = C3192 * C2850;
    const double C3263 = C3190 * C181;
    const double C3347 = C3190 * C2850;
    const double C9090 = C9088 * C801;
    const double C9298 = C9088 * C2850;
    const double C15848 = C15843 * C801;
    const double C16014 = C15843 * C244;
    const double C21615 = C15843 * C1987;
    const double C23020 = C15843 * C2849;
    const double C19406 = C19404 * C801;
    const double C19612 = C19404 * C2850;
    const double C90181 = C90139 + C90178;
    const double C90198 = C90188 / C90112;
    const double C5723 = (C90253 * C90145 + C90861 * C90547) / C89849;
    const double C15303 = C92072 * C4869;
    const double C21180 = C92067 * C4869;
    const double C47293 = C92072 * C4869;
    const double C18746 = C92072 * C8416;
    const double C25396 = C92067 * C8416;
    const double C50605 = C92072 * C8416;
    const double C29641 = C92072 * C10812;
    const double C40309 = C92067 * C10812;
    const double C70653 = C92072 * C10812;
    const double C90218 = C90210 / C89849;
    const double C90735 = -C90732;
    const double C34890 = C92067 * C24742;
    const double C90757 = -C90754;
    const double C24752 = C92067 * C16257;
    const double C22598 = C92067 * C18978;
    const double C20146 = C92067 * C15275;
    const double C24540 = C92067 * C16097;
    const double C22418 = C92067 * C18734;
    const double C39199 = C92067 * C29613;
    const double C90180 = C90177 + C90138;
    const double C90202 = C90194 / C89890;
    const double C90197 = C90186 / C89890;
    const double C90988 = C90186 / C90112;
    const double C5726 = -(C90876 * C90547 + C90253 * C90144) / C89890;
    const double C15298 = C89868 * C4872;
    const double C15830 = C554 * C4872;
    const double C17170 = C14752 * C4872;
    const double C21181 = C19671 * C4872;
    const double C47288 = C46529 * C4872;
    const double C18101 = C14752 * C8419;
    const double C18423 = C554 * C8419;
    const double C18741 = C89868 * C8419;
    const double C25397 = C19671 * C8419;
    const double C26015 = C9837 * C8419;
    const double C50600 = C46529 * C8419;
    const double C54772 = C41776 * C8419;
    const double C64410 = C58420 * C8419;
    const double C66078 = C4328 * C8419;
    const double C29636 = C89868 * C10815;
    const double C29940 = C307 * C10815;
    const double C32049 = C28650 * C10815;
    const double C40310 = C19671 * C10815;
    const double C70648 = C46529 * C10815;
    const double C25134 =
        2 * ((-(C90311 * C91350) / C89890) / C89849 - (ae * C90874) / C90112) -
        (ae * (C90727 * C90547 + C90874)) / C90112 +
        C90311 *
            ((-(ae * C90311 * C90727) / C89890) / C89849 - C91350 / C90112 +
             C90311 *
                 ((-(C90311 * C90253 * C90504) / C89890) / C89849 - C90733));
    const double C91160 = -C91156;
    const double C19092 =
        2 * ((-(C90253 * C91107) / C89890) / C89849 -
             (ae * C90311 * C90138) / C90112) -
        (ae * C90311 * C90982) / C90112 +
        C90253 *
            ((-(ae * C90311 * C90727) / C89890) / C89849 - C91107 / C90112 +
             C90253 *
                 ((-(C90253 * C90311 * C90403) / C89890) / C89849 - C90755));
    const double C91588 = -C91584;
    const double C27881 = C92195 * C16565;
    const double C34414 = C28199 * C16565;
    const double C84803 = C92195 * C16565;
    const double C86219 = C69237 * C16565;
    const double C22876 = C92183 * C19394;
    const double C24236 = C92195 * C19394;
    const double C81397 = C92195 * C19394;
    const double C20143 = C19671 * C15277;
    const double C20511 = C554 * C15277;
    const double C24537 = C19671 * C16099;
    const double C24847 = C14752 * C16099;
    const double C27880 = C9837 * C16099;
    const double C34413 = C28650 * C16099;
    const double C37672 = C4328 * C16099;
    const double C84802 = C58420 * C16099;
    const double C89294 = C41776 * C16099;
    const double C22415 = C19671 * C18736;
    const double C22875 = C554 * C18736;
    const double C24235 = C9837 * C18736;
    const double C27560 = C14752 * C18736;
    const double C81396 = C58420 * C18736;
    const double C39196 = C19671 * C29615;
    const double C39373 = C307 * C29615;
    const double C90179 = C90176 / C90112;
    const double C832 =
        (-(C90173 * C90425) / C89890) / C89849 - C90143 / C90112 -
        (ae * (C90174 * C90425 + C90144)) / C90112 -
        ((C90145 + C90175 * C90425) * ce) / C90112 +
        C90111 * ((-((C90139 + C90166 * C90425) * ce) / C89890) / C89849 -
                  (ae * (C90163 * C90425 + C90138)) / C90112 +
                  C90111 * ((-(C90227 * C90425) / C89890) / C89849 - C90187));
    const double C1416 =
        (-(C90173 * C90547) / C89890) / C89849 - C90143 / C90112 -
        (ae * (C90174 * C90547 + C90144)) / C90112 -
        ((C90145 + C90175 * C90547) * ce) / C90112 +
        C90111 * ((-((C90139 + C90166 * C90547) * ce) / C89890) / C89849 -
                  (ae * (C90163 * C90547 + C90138)) / C90112 +
                  C90111 * ((-(C90227 * C90547) / C89890) / C89849 - C90187));
    const double C827 =
        (-(ae * C90253 * C90144) / C89890) / C89849 -
        (C90253 * C90143) / C90112 - (C90253 * C90145 * ce) / C90112 +
        C90111 * ((-(C90253 * C90139 * ce) / C89890) / C89849 -
                  (ae * C90253 * C90138) / C90112 - (C90111 * C90570) / C90112);
    const double C3444 = (-(C90311 * C90253 * C90139 * ce) / C89890) / C89849 -
                         (ae * C90311 * C90253 * C90138) / C90112 -
                         (C90111 * C90311 * C90570) / C90112;
    const double C5728 =
        (-(C90570 * C90547) / C89890) / C89849 - (C90253 * C90143) / C90112;
    const double C1411 =
        (-(ae * C90311 * C90144) / C89890) / C89849 -
        (C90311 * C90143) / C90112 - (C90311 * C90145 * ce) / C90112 +
        C90111 * ((-(C90311 * C90139 * ce) / C89890) / C89849 -
                  (ae * C90311 * C90138) / C90112 - (C90111 * C90648) / C90112);
    const double C4893 = C4098 * C831;
    const double C15297 = C92072 * C831;
    const double C16833 = C92322 * C831;
    const double C21176 = C92067 * C831;
    const double C47287 = C92072 * C831;
    const double C48731 = C46523 * C831;
    const double C10836 = C4098 * C1415;
    const double C29635 = C92072 * C1415;
    const double C31405 = C92322 * C1415;
    const double C36430 = C92067 * C1415;
    const double C53311 = C92072 * C1415;
    const double C72297 = C46523 * C1415;
    const double C15301 = C92322 * C4874;
    const double C20142 = C92067 * C4874;
    const double C47291 = C46523 * C4874;
    const double C18744 = C92322 * C8421;
    const double C22420 = C92067 * C8421;
    const double C50603 = C46523 * C8421;
    const double C29639 = C92322 * C10817;
    const double C34706 = C92067 * C10817;
    const double C70651 = C46523 * C10817;
    const double C90238 = C90166 + C90235;
    const double C90975 = C90175 + C90973;
    const double C91385 = C90175 + C91383;
    const double C32369 =
        (2 * C90311 * C90861 + C90311 * (C90861 + C91476 * C90547)) / C89849;
    const double C91208 = C90388 + C91201;
    const double C91653 = C90489 + C91649;
    const double C90836 = C90834 + C90224;
    const double C90959 = C90957 + C90224;
    const double C90230 = C90195 + C90222;
    const double C90229 = C90221 / C89890;
    const double C90835 = C90832 + C90221;
    const double C90958 = C90955 + C90221;
    const double C5887 = -(C90311 * (C90311 * C90889 + C90833 * ce) +
                           C90253 * C90335 + C90311 * C90833 * ce) /
                         C89890;
    const double C6201 =
        (C90253 * C90493 + C90311 * (C90311 * C90890 + C90833 * ae) +
         C90311 * C90833 * ae) /
        C89849;
    const double C5721 = C90253 * C90165 + C90833 * C90547;
    const double C91034 = C90253 * C91031;
    const double C91467 = C90311 * C91463;
    const double C91033 = C90253 * C91030;
    const double C91466 = C90311 * C91460;
    const double C16256 = -(C90311 * (C90311 * C91054 + C91026 * ce) +
                            C90340 * C90425 + C90325 + C90311 * C91026 * ce) /
                          C89890;
    const double C16564 =
        (C90483 + C90498 * C90425 + C90311 * (C90311 * C91075 + C91026 * ae) +
         C90311 * C91026 * ae) /
        C89849;
    const double C18977 =
        C90311 * ((-2 * C90886) / C89890 - (C90253 * C91054) / C89890) -
        ((2 * C90827 + C90253 * C91026) * ce) / C89890;
    const double C19393 = (C90311 * (2 * C90887 + C90253 * C91075) +
                           (2 * C90827 + C90253 * C91026) * ae) /
                          C89849;
    const double C15274 = 3 * (C90134 + C90157 * C90425) +
                          C90253 * (2 * C90827 + C90253 * C91026);
    const double C16096 = C90134 + C90157 * C90425 + C91026 * C90547;
    const double C18733 = C90311 * (2 * C90827 + C90253 * C91026);
    const double C91492 = C91490 + C91028;
    const double C91491 = C91489 + C91025;
    const double C16488 =
        (-(C90311 * C90397 * ce) / C89890) / C89849 - C90839 / C90112 +
        C90311 * ((-(C90311 * C91048) / C89890) / C89849 - C90402 / C90112) -
        (ae * (C90311 * (C90311 * C90253 * C91050 + C91025) + C90886 +
               C90311 * C91019 * ce)) /
            C90112 +
        C90253 * (C90253 * ((-(C90311 * C91021 * ce) / C89890) / C89849 -
                            C91048 / C90112 +
                            C90311 * ((-(C90311 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90452) /
                                       C89890) /
                                          C89849 -
                                      (C91021 * ce) / C90112)) -
                  (ae * (C90311 * (C90311 * C91050 + C90213) + C90340 +
                         C90311 * C90205 * ce)) /
                      C90112);
    const double C29612 = 3 * (C90134 + C90157 * C90547) +
                          C90311 * (2 * C90950 + C90311 * C91462);
    const double C90237 = C90234 + C90163;
    const double C90991 = C90989 + C90174;
    const double C91412 = C91410 + C90174;
    const double C32370 = (-2 * C90311 * C90876) / C89890 -
                          (C90311 * (C91482 * C90547 + C90876)) / C89890;
    const double C91205 = C91198 + C90273;
    const double C91531 = C91529 + C91001;
    const double C91652 = C91648 + C90331;
    const double C90236 = C90233 / C90112;
    const double C90579 = C90578 / C89890;
    const double C90657 = C90656 / C89890;
    const double C90731 = C90111 * C90728;
    const double C90773 = C90311 * C90728;
    const double C3445 = (-(ae * C90311 * C90253 * C90174) / C89890) / C89849 -
                         (C90311 * C90570) / C90112 -
                         (C90311 * C90253 * C90175 * ce) / C90112 +
                         C90111 * ((-(C90311 * C90726 * ce) / C89890) / C89849 -
                                   (ae * C90311 * C90727) / C90112 -
                                   (C90111 * C90311 * C90728) / C90112);
    const double C5729 =
        (-((C90253 * C90139 + C90726 * C90547) * ce) / C89890) / C89849 -
        (ae * (C90727 * C90547 + C90253 * C90138)) / C90112 +
        C90111 * ((-(C90728 * C90547) / C89890) / C89849 - C90570 / C90112);
    const double C5730 =
        (-(C90728 * C90547) / C89890) / C89849 - C90570 / C90112 -
        (ae * (C90253 * C90228 * C90547 + C90253 * C90174)) / C90112 -
        ((C90253 * C90175 + C90253 * C90231 * C90547) * ce) / C90112 +
        C90111 *
            ((-((C90726 + C90253 * C90215 * C90547) * ce) / C89890) / C89849 -
             (ae * (C90253 * C90212 * C90547 + C90727)) / C90112 +
             C90111 *
                 ((-(C90253 *
                     (C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90547) /
                   C89890) /
                      C89849 -
                  C90728 / C90112));
    const double C18739 =
        (C90311 *
         ((-2 * C90727) / C89890 -
          (C90253 * (C90212 * C90425 + C90163)) / C89890) *
         ae) /
            C89849 -
        (C90311 * (2 * C90726 + C90253 * (C90166 + C90215 * C90425)) * ce) /
            C90112 +
        C90111 * C90311 *
            ((-2 * C90728) / C90112 +
             C90253 *
                 ((-((C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90425) /
                   C89890) /
                      C89849 -
                  C90227 / C90112));
    const double C24530 =
        (-2 * C90311 * C90570) / C90112 +
        C90311 * ((-(C90728 * C90547) / C89890) / C89849 - C90570 / C90112);
    const double C90753 = C90111 * C90750;
    const double C90443 = C90442 / C89890;
    const double C91023 = C90253 * C91017;
    const double C91113 = C90311 * C91017;
    const double C91189 = C91178 / C90112;
    const double C91286 = C91285 / C89890;
    const double C91321 = C90253 * C91319;
    const double C90565 = C90564 / C89890;
    const double C91454 = C90311 * C91081;
    const double C91485 = C90253 * C91081;
    const double C19608 =
        (((-2 * C90886) / C89890 - (C90253 * C91054) / C89890) * ae) / C89849 -
        ((2 * C90887 + C90253 * C91075) * ce) / C90112 +
        C90311 *
            ((-2 * C90253 * C91081) / C90112 +
             C90253 *
                 ((-(C90111 *
                     (C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90425) /
                   C89890) /
                      C89849 -
                  C91081 / C90112));
    const double C91271 = C91270 / C89890;
    const double C91540 = C90311 * C91534;
    const double C91638 = C91625 / C90112;
    const double C91366 = C91364 + C91202;
    const double C91207 = C91183 + C91200;
    const double C91206 = C91199 / C89890;
    const double C91365 = C91362 + C91199;
    const double C91551 = C90311 * C91548;
    const double C91550 = C90311 * C91547;
    const double C34694 = 3 * (C90820 + C90996 * C90547) +
                          C90311 * (2 * C91357 + C90311 * C91543);
    const double C91643 = C91630 + C91631;
    const double C91642 = C91629 / C89890;
    const double C410 = C307 * C186;
    const double C657 = C554 * C186;
    const double C2298 = C307 * C887;
    const double C2554 = C554 * C887;
    const double C4451 = C4328 * C887;
    const double C6578 = C4104 * C887;
    const double C41899 = C41776 * C887;
    const double C5004 = C4104 * C893;
    const double C5543 = C554 * C893;
    const double C6914 = C4328 * C893;
    const double C14870 = C14752 * C893;
    const double C16946 = C89868 * C893;
    const double C44190 = C41776 * C893;
    const double C48844 = C46529 * C893;
    const double C3014 = C307 * C1468;
    const double C3270 = C554 * C1468;
    const double C9960 = C9837 * C1468;
    const double C12769 = C4104 * C1468;
    const double C58543 = C58420 * C1468;
    const double C10943 = C4104 * C1474;
    const double C11249 = C307 * C1474;
    const double C13428 = C9837 * C1474;
    const double C28768 = C28650 * C1474;
    const double C31512 = C89868 * C1474;
    const double C61836 = C58420 * C1474;
    const double C72400 = C46529 * C1474;
    const double C7869 = C4328 * C3515;
    const double C8197 = C554 * C3515;
    const double C8551 = C4104 * C3515;
    const double C12099 = C307 * C3515;
    const double C12437 = C9837 * C3515;
    const double C45122 = C41776 * C3515;
    const double C54496 = C46529 * C3515;
    const double C60868 = C58420 * C3515;
    const double C76936 = C89868 * C3515;
    const double C90296 = -C90292;
    const double C32160 = C28199 * C11509;
    const double C73023 = C69237 * C11509;
    const double C6280 =
        (-(C90253 * C90846) / C89890) / C89849 - (C90483 * ce) / C90112 -
        (ae * C90311 * C90829) / C90112 +
        C90311 * (C90311 * ((-(C90253 * C90111 * C90538) / C89890) / C89849 -
                            C90503 / C90112) -
                  (ae * C90829) / C90112);
    const double C9189 =
        C90311 * ((-(C90887 * ce) / C89890) / C89849 - C90846 / C90112 +
                  C90253 * ((-(C90253 * C90111 * C90538) / C89890) / C89849 -
                            C90503 / C90112)) -
        (ae * (C90253 * C90829 + C90267 + C90827 * ce)) / C90112;
    const double C4988 =
        (-2 * (C90253 * C90267 + C90134 * ce)) / C89890 -
        (C90253 * (C90253 * C90829 + C90267 + C90827 * ce)) / C89890 -
        ((C90134 + C90157 * C90425) * ce) / C89890;
    const double C5806 =
        -(C90829 * C90547 + C90253 * C90267 + C90134 * ce) / C89890;
    const double C8541 =
        -(C90311 * (C90253 * C90829 + C90267 + C90827 * ce)) / C89890;
    const double C32482 = (-2 * C90311 * C90829) / C89890 -
                          (C90311 * (C91030 * C90547 + C90829)) / C89890;
    const double C91010 = C91007 + C90265;
    const double C91190 = C91179 / C89890;
    const double C91186 = C91175 / C89890;
    const double C91528 = C91175 / C90112;
    const double C34798 = C19671 * C24638;
    const double C35094 = C4328 * C24638;
    const double C38120 = C28650 * C24638;
    const double C41201 = C307 * C24638;
    const double C86821 = C41776 * C24638;
    const double C91607 = -C91603;
    const double C39259 = C19671 * C29735;
    const double C39433 = C307 * C29735;
    const double C490 = C307 * C249;
    const double C735 = C554 * C249;
    const double C2373 = C307 * C953;
    const double C2629 = C554 * C953;
    const double C4548 = C4328 * C953;
    const double C6685 = C4104 * C953;
    const double C41996 = C41776 * C953;
    const double C5098 = C4104 * C959;
    const double C5629 = C554 * C959;
    const double C7020 = C4328 * C959;
    const double C14962 = C14752 * C959;
    const double C17056 = C89868 * C959;
    const double C44296 = C41776 * C959;
    const double C48954 = C46529 * C959;
    const double C3102 = C307 * C1537;
    const double C3358 = C554 * C1537;
    const double C10056 = C9837 * C1537;
    const double C12880 = C4104 * C1537;
    const double C58639 = C58420 * C1537;
    const double C11045 = C4104 * C1543;
    const double C11349 = C307 * C1543;
    const double C13536 = C9837 * C1543;
    const double C28860 = C28650 * C1543;
    const double C31628 = C89868 * C1543;
    const double C61944 = C58420 * C1543;
    const double C72506 = C46529 * C1543;
    const double C7977 = C4328 * C3589;
    const double C8309 = C554 * C3589;
    const double C8660 = C4104 * C3589;
    const double C12203 = C307 * C3589;
    const double C12543 = C9837 * C3589;
    const double C45230 = C41776 * C3589;
    const double C54632 = C46529 * C3589;
    const double C60974 = C58420 * C3589;
    const double C77072 = C89868 * C3589;
    const double C90354 = -C90350;
    const double C17384 = C14525 * C5341;
    const double C49282 = C46527 * C5341;
    const double C30957 = C307 * C5886;
    const double C31283 = C28650 * C5886;
    const double C32593 = C89868 * C5886;
    const double C35735 = C19671 * C5886;
    const double C36955 = C4328 * C5886;
    const double C53554 = C46529 * C5886;
    const double C53920 = C41776 * C5886;
    const double C56680 = C9837 * C5886;
    const double C67962 = C58420 * C5886;
    const double C11029 =
        (-2 * (C90311 * C90325 + C90134 * ce)) / C89890 -
        (C90311 * (C90311 * C90952 + C90325 + C90950 * ce)) / C89890 -
        ((C90134 + C90157 * C90547) * ce) / C89890;
    const double C20290 = C19671 * C15493;
    const double C20627 = C554 * C15493;
    const double C24751 = C19671 * C16255;
    const double C25051 = C14752 * C16255;
    const double C28116 = C9837 * C16255;
    const double C34609 = C28650 * C16255;
    const double C37896 = C4328 * C16255;
    const double C85016 = C58420 * C16255;
    const double C89504 = C41776 * C16255;
    const double C22597 = C19671 * C18976;
    const double C23023 = C554 * C18976;
    const double C24437 = C9837 * C18976;
    const double C27777 = C14752 * C18976;
    const double C81569 = C58420 * C18976;
    const double C91235 = -C91231;
    const double C24740 =
        (-2 * (C90311 * C90883 + C90820 * ce)) / C89890 -
        (C90311 * (C90311 * C91359 + C90883 + C91357 * ce)) / C89890 -
        ((C90820 + C90996 * C90547) * ce) / C89890;
    const double C91331 = C91330 / C90112;
    const double C91622 = C91330 / C89890;
    const double C91440 = C91434 + C90323;
    const double C91639 = C91626 / C89890;
    const double C334 = C92157 * C312;
    const double C2209 = C92157 * C1019;
    const double C4349 = C92171 * C1019;
    const double C41797 = C92171 * C1019;
    const double C6799 = C92171 * C1025;
    const double C14771 = C14525 * C1025;
    const double C44075 = C92171 * C1025;
    const double C46773 = C46527 * C1025;
    const double C2931 = C92157 * C1603;
    const double C11144 = C92157 * C1609;
    const double C7752 = C92171 * C3663;
    const double C11986 = C92157 * C3663;
    const double C45005 = C92171 * C3663;
    const double C25052 = C14525 * C16487;
    const double C37897 = C92171 * C16487;
    const double C82087 = C46527 * C16487;
    const double C89505 = C92171 * C16487;
    const double C91197 = C91188 / C89849;
    const double C90410 = -C90407;
    const double C30958 = C92157 * C6123;
    const double C36956 = C92171 * C6123;
    const double C53921 = C92171 * C6123;
    const double C18315 = C14525 * C8972;
    const double C50200 = C46527 * C8972;
    const double C55045 = C92171 * C8972;
    const double C66351 = C92171 * C8972;
    const double C30123 = C92157 * C11340;
    const double C5184 = (2 * (C90253 * C90382 + C90134 * ae) +
                          C90253 * (C90382 + C90253 * C90830 + C90827 * ae) +
                          (C90134 + C90157 * C90425) * ae) /
                         C89849;
    const double C5966 =
        (C90253 * C90382 + C90134 * ae + C90830 * C90547) / C89849;
    const double C8767 =
        (C90311 * (C90382 + C90253 * C90830 + C90827 * ae)) / C89849;
    const double C32694 =
        (2 * C90311 * C90830 + C90311 * (C90830 + C91031 * C90547)) / C89849;
    const double C29949 = C29942 + C29943;
    const double C91011 = C90380 + C91008;
    const double C91187 = C91176 / C90112;
    const double C34990 = C92171 * C24830;
    const double C41125 = C92157 * C24830;
    const double C86735 = C92171 * C24830;
    const double C91297 = -C91295;
    const double C39376 = C92157 * C29933;
    const double C16411 =
        (-(C90435 * C90547) / C89890) / C89849 - C90430 / C90112 -
        (ae * (C91001 * C90547 + C90822)) / C90112 -
        ((C90823 + C91004 * C90547) * ce) / C90112 +
        C90253 * ((-((C90380 + C90388 * C90547) * ce) / C89890) / C89849 -
                  (ae * (C90273 * C90547 + C90265)) / C90112 +
                  C90253 * ((-(C90441 * C90547) / C89890) / C89849 - C90438));
    const double C6046 =
        (-((C90382 + C90397 * C90547) * ce) / C89890) / C89849 -
        (ae * (C90282 * C90547 + C90267)) / C90112 +
        C90253 *
            ((-(C90111 * C90441 * C90547) / C89890) / C89849 - C90825 / C90112);
    const double C8871 =
        (-(ae * C90311 * C90829) / C89890) / C89849 -
        (C90311 * C90825) / C90112 - (C90311 * C90830 * ce) / C90112 +
        C90253 * ((-(C90311 * C90397 * ce) / C89890) / C89849 -
                  (ae * C90311 * C90282) / C90112 -
                  (C90253 * C90311 * C90111 * C90441) / C90112);
    const double C11243 =
        (-2 * C90311 * C90825) / C90112 +
        C90311 *
            ((-(C90111 * C90441 * C90547) / C89890) / C89849 - C90825 / C90112);
    const double C16412 =
        (-(C91017 * C90547) / C89890) / C89849 - C90825 / C90112 -
        (ae * (C91030 * C90547 + C90829)) / C90112 -
        ((C90830 + C91031 * C90547) * ce) / C90112 +
        C90253 *
            ((-((C90397 + C91021 * C90547) * ce) / C89890) / C89849 -
             (ae * (C91018 * C90547 + C90282)) / C90112 +
             C90253 *
                 ((-(C90111 *
                     (C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90547) /
                   C89890) /
                      C89849 -
                  C91017 / C90112));
    const double C91000 = C90994 / C90112;
    const double C411 = C92157 * C398;
    const double C6911 = C92171 * C1088;
    const double C14869 = C14525 * C1088;
    const double C17279 = C14524 * C1088;
    const double C44187 = C92171 * C1088;
    const double C46871 = C46527 * C1088;
    const double C2294 = C92157 * C1089;
    const double C4450 = C92171 * C1089;
    const double C6917 = C92336 * C1089;
    const double C14873 = C14524 * C1089;
    const double C41898 = C92171 * C1089;
    const double C44193 = C41548 * C1089;
    const double C3012 = C92157 * C1670;
    const double C7868 = C92336 * C1670;
    const double C45121 = C41548 * C1670;
    const double C11253 = C92157 * C1674;
    const double C36852 = C92336 * C1674;
    const double C53801 = C41548 * C1674;
    const double C7866 = C92171 * C3736;
    const double C12095 = C92157 * C3736;
    const double C18210 = C14524 * C3736;
    const double C45119 = C92171 * C3736;
    const double C54911 = C41548 * C3736;
    const double C66217 = C92336 * C3736;
    const double C24956 = C14524 * C6045;
    const double C32810 = C92157 * C6045;
    const double C35093 = C92171 * C6045;
    const double C37787 = C92336 * C6045;
    const double C53803 = C92171 * C6045;
    const double C89401 = C41548 * C6045;
    const double C24952 = C14525 * C8870;
    const double C27669 = C14524 * C8870;
    const double C37781 = C92171 * C8870;
    const double C57363 = C92171 * C8870;
    const double C81989 = C46527 * C8870;
    const double C30038 = C92157 * C11242;
    const double C35097 = C92336 * C11242;
    const double C86824 = C41548 * C11242;
    const double C581 = C92183 * C559;
    const double C2465 = C92183 * C1201;
    const double C5435 = C92183 * C1207;
    const double C3187 = C92183 * C1785;
    const double C9858 = C92195 * C1785;
    const double C58441 = C92195 * C1785;
    const double C13311 = C92195 * C1791;
    const double C28669 = C28199 * C1791;
    const double C61719 = C92195 * C1791;
    const double C69703 = C69237 * C1791;
    const double C8088 = C92183 * C3877;
    const double C12322 = C92195 * C3877;
    const double C60753 = C92195 * C3877;
    const double C91647 = C91637 / C89849;
    const double C90511 = -C90508;
    const double C15928 = C92183 * C5534;
    const double C31065 = C28199 * C6200;
    const double C56405 = C92195 * C6200;
    const double C67687 = C92195 * C6200;
    const double C71965 = C69237 * C6200;
    const double C11429 = (2 * (C90311 * C90483 + C90134 * ae) +
                           C90311 * (C90483 + C90311 * C90953 + C90950 * ae) +
                           (C90134 + C90157 * C90547) * ae) /
                          C89849;
    const double C15841 = C15832 + C15833;
    const double C18425 = C18421 + C18422;
    const double C26019 = C26011 + C26012;
    const double C20514 = C92183 * C15823;
    const double C27885 = C92195 * C16563;
    const double C34420 = C28199 * C16563;
    const double C84807 = C92195 * C16563;
    const double C86225 = C69237 * C16563;
    const double C22878 = C92183 * C19392;
    const double C24240 = C92195 * C19392;
    const double C81401 = C92195 * C19392;
    const double C91261 = -C91258;
    const double C25132 = (2 * (C90311 * C90884 + C90820 * ae) +
                           C90311 * (C90884 + C90311 * C91360 + C91357 * ae) +
                           (C90820 + C90996 * C90547) * ae) /
                          C89849;
    const double C91449 = C90481 + C91447;
    const double C91636 = C91623 / C90112;
    const double C16004 =
        3 * ((-(C90557 * C90425) / C89890) / C89849 - C90552 / C90112) +
        C90253 * ((-2 * C90253 * C90557) / C90112 +
                  C90253 * ((-(C90563 * C90425) / C89890) / C89849 - C90560));
    const double C16717 =
        (-(C90557 * C90425) / C89890) / C89849 - C90552 / C90112 -
        (ae * (C90311 * C91043 + C91003 * ce)) / C90112 -
        ((C90311 * C91064 + C91003 * ae) * ce) / C90112 +
        C90311 * ((-(C91064 * ce) / C89890) / C89849 - (ae * C91043) / C90112 +
                  C90311 * ((-(C90563 * C90425) / C89890) / C89849 - C90560));
    const double C19607 =
        (((-2 * C90883) / C89890 - (C90253 * C91043) / C89890) * ae) / C89849 -
        ((2 * C90884 + C90253 * C91064) * ce) / C90112 +
        C90311 * ((-2 * C90253 * C90557) / C90112 +
                  C90253 * ((-(C90563 * C90425) / C89890) / C89849 - C90560));
    const double C5623 =
        (-2 * C90253 * C90850) / C90112 +
        C90253 *
            ((-(C90111 * C90563 * C90425) / C89890) / C89849 - C90850 / C90112);
    const double C6357 =
        (-(ae * (C90311 * C90886 + C90827 * ce)) / C89890) / C89849 -
        (C90253 * C90850) / C90112 -
        ((C90311 * C90887 + C90827 * ae) * ce) / C90112 +
        C90311 * ((-(C90887 * ce) / C89890) / C89849 - (ae * C90886) / C90112 -
                  (C90311 * C90253 * C90111 * C90563) / C90112);
    const double C9293 =
        (-((C90483 + C90498 * C90425) * ce) / C89890) / C89849 -
        (ae * (C90340 * C90425 + C90325)) / C90112 +
        C90311 *
            ((-(C90111 * C90563 * C90425) / C89890) / C89849 - C90850 / C90112);
    const double C16005 =
        3 * ((-(C91081 * C90425) / C89890) / C89849 - C90850 / C90112) +
        C90253 *
            ((-2 * C90253 * C91081) / C90112 +
             C90253 *
                 ((-(C90111 *
                     (C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90425) /
                   C89890) /
                      C89849 -
                  C91081 / C90112));
    const double C16718 =
        (-(C91081 * C90425) / C89890) / C89849 - C90850 / C90112 -
        (ae * (C90311 * C91054 + C91026 * ce)) / C90112 -
        ((C90311 * C91075 + C91026 * ae) * ce) / C90112 +
        C90311 *
            ((-(C91075 * ce) / C89890) / C89849 - (ae * C91054) / C90112 +
             C90311 *
                 ((-(C90111 *
                     (C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90425) /
                   C89890) /
                      C89849 -
                  C91081 / C90112));
    const double C91439 = C91433 / C90112;
    const double C736 = C92183 * C723;
    const double C2633 = C92183 * C1326;
    const double C12546 = C92337 * C1326;
    const double C60977 = C57967 * C1326;
    const double C5633 = C92183 * C1330;
    const double C26226 = C92337 * C1330;
    const double C64659 = C57967 * C1330;
    const double C13533 = C92195 * C1912;
    const double C28859 = C28199 * C1912;
    const double C32265 = C28198 * C1912;
    const double C61941 = C92195 * C1912;
    const double C69893 = C69237 * C1912;
    const double C3354 = C92183 * C1913;
    const double C10055 = C92195 * C1913;
    const double C13539 = C92337 * C1913;
    const double C28863 = C28198 * C1913;
    const double C58638 = C92195 * C1913;
    const double C61947 = C57967 * C1913;
    const double C8305 = C92183 * C4020;
    const double C12548 = C92195 * C4020;
    const double C31286 = C28198 * C4020;
    const double C56683 = C92337 * C4020;
    const double C60979 = C92195 * C4020;
    const double C67965 = C57967 * C4020;
    const double C16013 = C92183 * C5622;
    const double C24440 = C92337 * C5622;
    const double C81572 = C57967 * C5622;
    const double C28113 = C92195 * C6356;
    const double C34608 = C28199 * C6356;
    const double C38226 = C28198 * C6356;
    const double C69157 = C92195 * C6356;
    const double C86413 = C69237 * C6356;
    const double C19614 = C92183 * C9292;
    const double C24436 = C92195 * C9292;
    const double C28119 = C92337 * C9292;
    const double C34612 = C28198 * C9292;
    const double C64661 = C92195 * C9292;
    const double C85019 = C57967 * C9292;
    const double C90172 = C90168 - C90153;
    const double C32914 = C32912 + C32913;
    const double C35197 = C35188 + C35189;
    const double C37900 = C37894 + C37895;
    const double C37899 = C37892 + C37893;
    const double C91009 = C91006 - C90272;
    const double C91448 = C91445 - C90330;
    const double C20127 = (4 * (2 * C90859 + C90253 * C90967) +
                           C90253 * (3 * C90967 + C90253 * C91145)) /
                          C89849;
    const double C20683 =
        (2 * C90859 + C90253 * C90967 + C91145 * C90547) / C89849;
    const double C22411 = (C90311 * (3 * C90967 + C90253 * C91145)) / C89849;
    const double C39190 = (4 * (2 * C91372 + C90311 * C91376) +
                           C90311 * (3 * C91376 + C90311 * C91573)) /
                          C89849;
    const double C91171 = C91162 - C91169;
    const double C91599 = C91590 - C91597;
    const double C90306 = C90294 - C90304;
    const double C91618 = C91609 - C91616;
    const double C90364 = C90352 - C90362;
    const double C91240 = C91233 - C91237;
    const double C313 = (4 * (2 * C90382 + C90111 * C90392) +
                         C90111 * (3 * C90392 + C90111 * C90418)) /
                        C89849;
    const double C1610 =
        (2 * C90382 + C90111 * C90392 + C90418 * C90547) / C89849;
    const double C2919 = (C90311 * (3 * C90392 + C90111 * C90418)) / C89849;
    const double C39369 = (4 * (2 * C91391 + C90311 * C91393) +
                           C90311 * (3 * C91393 + C90311 * C91582)) /
                          C89849;
    const double C560 = (4 * (2 * C90483 + C90111 * C90493) +
                         C90111 * (3 * C90493 + C90111 * C90519)) /
                        C89849;
    const double C1208 =
        (2 * C90483 + C90111 * C90493 + C90519 * C90425) / C89849;
    const double C2453 = (C90253 * (3 * C90493 + C90111 * C90519)) / C89849;
    const double C20506 = (4 * (2 * C90884 + C90253 * C91064) +
                           C90253 * (3 * C91064 + C90253 * C91263)) /
                          C89849;
    const double C90279 = C90278 / C89849;
    const double C90969 = C90968 / C89849;
    const double C90303 = C90300 / C89849;
    const double C91144 = C91142 / C89849;
    const double C91561 = C91560 / C89849;
    const double C11138 = C2935 * C92084;
    const double C12988 = C2935 * C1983;
    const double C12986 = C2935 * C1984;
    const double C11167 = C11159 * C92084;
    const double C31733 = C11159 * C1983;
    const double C13947 = C13945 * C92084;
    const double C90394 = C90393 / C89849;
    const double C90984 = C90983 / C89849;
    const double C32706 = C32704 * C92084;
    const double C29954 = C29950 * C92084;
    const double C40523 = C29950 * C1983;
    const double C90417 = C90414 / C89849;
    const double C91168 = C91165 / C89849;
    const double C91282 = C91281 / C89849;
    const double C91314 = -C91313;
    const double C90337 = C90336 / C89849;
    const double C91378 = C91377 / C89849;
    const double C90361 = C90358 / C89849;
    const double C91153 = C91152 / C89849;
    const double C91504 = -C91502;
    const double C91572 = C91570 / C89849;
    const double C499 = C495 * C92116;
    const double C3100 = C495 * C2709;
    const double C2387 = C2384 * C92116;
    const double C3107 = C3104 * C2710;
    const double C9754 = C3104 * C92116;
    const double C13195 = C3104 * C2709;
    const double C91045 = C91044 / C89849;
    const double C91118 = C91117 / C89849;
    const double C2386 = C2383 * C92116;
    const double C3108 = C3105 * C2710;
    const double C9757 = C3105 * C92116;
    const double C13199 = C3105 * C2709;
    const double C90466 = C90465 / C89849;
    const double C91055 = -C91053;
    const double C91124 = -C91123;
    const double C91236 = C91232 / C89849;
    const double C91298 = C91296 / C89849;
    const double C5429 = C2469 * C92084;
    const double C7135 = C2469 * C1983;
    const double C7133 = C2469 * C1984;
    const double C5458 = C5450 * C92084;
    const double C17491 = C5450 * C1983;
    const double C9089 = C9087 * C92084;
    const double C90495 = C90494 / C89849;
    const double C91405 = C91404 / C89849;
    const double C15847 = C15842 * C92084;
    const double C21616 = C15842 * C1983;
    const double C19405 = C19403 * C92084;
    const double C90518 = C90515 / C89849;
    const double C91248 = C91247 / C89849;
    const double C91522 = -C91520;
    const double C91596 = C91593 / C89849;
    const double C666 = C662 * C92105;
    const double C2552 = C662 * C1985;
    const double C2559 = C2556 * C1986;
    const double C4711 = C2556 * C92105;
    const double C7241 = C2556 * C1985;
    const double C3275 = C3272 * C92105;
    const double C91066 = C91065 / C89849;
    const double C91420 = C91419 / C89849;
    const double C2560 = C2557 * C1986;
    const double C4713 = C2557 * C92105;
    const double C7245 = C2557 * C1985;
    const double C3276 = C3273 * C92105;
    const double C90542 = C90541 / C89849;
    const double C91076 = -C91074;
    const double C91428 = -C91426;
    const double C91262 = C91259 / C89849;
    const double C91615 = C91612 / C89849;
    const double C15307 = C15284 + C15285;
    const double C15413 = C15401 + C15402;
    const double C15512 = C15500 + C15501;
    const double C29645 = C29622 + C29623;
    const double C29754 = C29742 + C29743;
    const double C29853 = C29841 + C29842;
    const double C42324 = C41552 * C808;
    const double C42316 = C41552 * C811;
    const double C42310 = C41552 * C803;
    const double C42426 = C41552 * C893;
    const double C42416 = C41552 * C888;
    const double C42514 = C41552 * C959;
    const double C42512 = C41552 * C954;
    const double C43734 = C41552 * C802;
    const double C43854 = C41552 * C887;
    const double C43961 = C41552 * C953;
    const double C45636 = C41552 * C3433;
    const double C45750 = C41552 * C3515;
    const double C45853 = C41552 * C3589;
    const double C59410 = C41552 * C1392;
    const double C59402 = C41552 * C1395;
    const double C59396 = C41552 * C1387;
    const double C59508 = C41552 * C1474;
    const double C59506 = C41552 * C1469;
    const double C59604 = C41552 * C1543;
    const double C59594 = C41552 * C1538;
    const double C61084 = C41552 * C1386;
    const double C61200 = C41552 * C1468;
    const double C61311 = C41552 * C1537;
    const double C89872 = C92067 - C89870;
    const double C20151 = C20139 + C20140;
    const double C20149 = C20135 + C20136;
    const double C20148 = C20133 + C20134;
    const double C20147 = C20131 + C20132;
    const double C20226 = C20219 + C20220;
    const double C20225 = C20217 + C20218;
    const double C20295 = C20288 + C20289;
    const double C20294 = C20285 + C20286;
    const double C20293 = C20282 + C20283;
    const double C21183 = C21167 + C21168;
    const double C21267 = C21261 + C21262;
    const double C21345 = C21337 + C21338;
    const double C22432 = C22425 + C22426;
    const double C22430 = C22421 + C22422;
    const double C22513 = C22507 + C22508;
    const double C22600 = C22592 + C22593;
    const double C22599 = C22587 + C22588;
    const double C24556 = C24547 + C24548;
    const double C24554 = C24543 + C24544;
    const double C24550 = C24535 + C24536;
    const double C24549 = C24533 + C24534;
    const double C24662 = C24656 + C24657;
    const double C24659 = C24644 + C24645;
    const double C24755 = C24749 + C24750;
    const double C24754 = C24747 + C24748;
    const double C24753 = C24745 + C24746;
    const double C26335 = C26331 + C26332;
    const double C26444 = C26441 + C26442;
    const double C26546 = C26544 + C26545;
    const double C34714 = C34707 + C34708;
    const double C34712 = C34703 + C34704;
    const double C34807 = C34801 + C34802;
    const double C47297 = C47274 + C47275;
    const double C47399 = C47387 + C47388;
    const double C47494 = C47482 + C47483;
    const double C53319 = C53296 + C53297;
    const double C53441 = C53430 + C53431;
    const double C53556 = C53544 + C53545;
    const double C42329 = C92360 * C818;
    const double C42323 = C92360 * C830;
    const double C42313 = C92360 * C829;
    const double C42307 = C92360 * C817;
    const double C42423 = C92360 * C899;
    const double C42421 = C92360 * C898;
    const double C42519 = C92360 * C965;
    const double C42509 = C92360 * C964;
    const double C43745 = C92360 * C828;
    const double C43739 = C92360 * C816;
    const double C43851 = C92360 * C897;
    const double C43958 = C92360 * C963;
    const double C45641 = C92360 * C3435;
    const double C45635 = C92360 * C3443;
    const double C45747 = C92360 * C3517;
    const double C45858 = C92360 * C3591;
    const double C59415 = C92360 * C1402;
    const double C59409 = C92360 * C1414;
    const double C59399 = C92360 * C1413;
    const double C59393 = C92360 * C1401;
    const double C59513 = C92360 * C1480;
    const double C59503 = C92360 * C1479;
    const double C59601 = C92360 * C1549;
    const double C59599 = C92360 * C1548;
    const double C61095 = C92360 * C1412;
    const double C61089 = C92360 * C1400;
    const double C61205 = C92360 * C1478;
    const double C61308 = C92360 * C1547;
    const double C89 = (C92322 - C92348) / C89854 - (C92360 * C92063) / C89849;
    const double C42327 = C92350 * C819;
    const double C42321 = C92350 * C831;
    const double C42315 = C92350 * C828;
    const double C42309 = C92350 * C816;
    const double C42419 = C92350 * C897;
    const double C42511 = C92350 * C963;
    const double C43737 = C92350 * C815;
    const double C45639 = C92350 * C3436;
    const double C59413 = C92350 * C1403;
    const double C59407 = C92350 * C1415;
    const double C59401 = C92350 * C1412;
    const double C59395 = C92350 * C1400;
    const double C59505 = C92350 * C1478;
    const double C59597 = C92350 * C1547;
    const double C61087 = C92350 * C1399;
    const double C90 =
        (2 * C92072 + C92360) / C89854 - (C92350 * C92063) / C89849;
    const double C91 = C92350 / C89854 - C92075 / C89858;
    const double C90013 = C92157 - C90010;
    const double C14785 = C14768 + C14769;
    const double C14782 = C14762 + C14763;
    const double C14779 = C14756 + C14757;
    const double C14972 = C14964 + C14965;
    const double C14969 = C14958 + C14959;
    const double C17173 = C17162 + C17163;
    const double C17390 = C17385 + C17386;
    const double C18104 = C18093 + C18094;
    const double C18321 = C18316 + C18317;
    const double C24866 = C24849 + C24850;
    const double C24863 = C24843 + C24844;
    const double C24860 = C24837 + C24838;
    const double C25057 = C25049 + C25050;
    const double C25054 = C25043 + C25044;
    const double C27566 = C27558 + C27559;
    const double C27780 = C27775 + C27776;
    const double C14778 = C14754 + C14755;
    const double C14970 = C14960 + C14961;
    const double C24864 = C24845 + C24846;
    const double C25053 = C25041 + C25042;
    const double C41807 = C41788 + C41789;
    const double C41804 = C41782 + C41783;
    const double C41802 = C41778 + C41779;
    const double C42003 = C41994 + C41995;
    const double C42001 = C41989 + C41990;
    const double C44081 = C44066 + C44067;
    const double C44306 = C44300 + C44301;
    const double C45011 = C44996 + C44997;
    const double C45234 = C45226 + C45227;
    const double C53692 = C53676 + C53677;
    const double C53687 = C53666 + C53667;
    const double C53685 = C53662 + C53663;
    const double C53925 = C53916 + C53917;
    const double C53922 = C53910 + C53911;
    const double C57231 = C57226 + C57227;
    const double C57503 = C57500 + C57501;
    const double C46772 = C46754 * C808;
    const double C46762 = C46754 * C823;
    const double C46756 = C46754 * C807;
    const double C46872 = C46754 * C893;
    const double C46870 = C46754 * C892;
    const double C46964 = C46754 * C959;
    const double C46962 = C46754 * C958;
    const double C49068 = C46754 * C4872;
    const double C49062 = C46754 * C4866;
    const double C49281 = C46754 * C5086;
    const double C49986 = C46754 * C8419;
    const double C49980 = C46754 * C8413;
    const double C50199 = C46754 * C8654;
    const double C81892 = C46754 * C16095;
    const double C81886 = C46754 * C16099;
    const double C81884 = C46754 * C8418;
    const double C81878 = C46754 * C8412;
    const double C81988 = C46754 * C8540;
    const double C82086 = C46754 * C16255;
    const double C82076 = C46754 * C8653;
    const double C84482 = C46754 * C18736;
    const double C84476 = C46754 * C18732;
    const double C84699 = C46754 * C18976;
    const double C46775 = C92361 * C316;
    const double C46769 = C92361 * C310;
    const double C46767 = C92361 * C315;
    const double C46761 = C92361 * C309;
    const double C46877 = C92361 * C396;
    const double C46867 = C92361 * C395;
    const double C46969 = C92361 * C476;
    const double C46959 = C92361 * C475;
    const double C49065 = C92361 * C1029;
    const double C49059 = C92361 * C1021;
    const double C49179 = C92361 * C1087;
    const double C49286 = C92361 * C1145;
    const double C49983 = C92361 * C1613;
    const double C49977 = C92361 * C1605;
    const double C50093 = C92361 * C1671;
    const double C50204 = C92361 * C1729;
    const double C81897 = C92361 * C1607;
    const double C81891 = C92361 * C1615;
    const double C81881 = C92361 * C1614;
    const double C81875 = C92361 * C1606;
    const double C81995 = C92361 * C1673;
    const double C81985 = C92361 * C1672;
    const double C82083 = C92361 * C1728;
    const double C82081 = C92361 * C1727;
    const double C84479 = C92361 * C3665;
    const double C84473 = C92361 * C3661;
    const double C84593 = C92361 * C3735;
    const double C84696 = C92361 * C3805;
    const double C19667 =
        (C92336 - C92354) / C89854 - (C92361 * C92167) / C89849;
    const double C4366 = C4358 + C4359;
    const double C4558 = C4554 + C4555;
    const double C35006 = C34999 + C35000;
    const double C46771 = C92356 * C1020;
    const double C46765 = C92356 * C1029;
    const double C46759 = C92356 * C1021;
    const double C46875 = C92356 * C1089;
    const double C46869 = C92356 * C1087;
    const double C46967 = C92356 * C1144;
    const double C46961 = C92356 * C1145;
    const double C49061 = C92356 * C1024;
    const double C49177 = C92356 * C1088;
    const double C49284 = C92356 * C1148;
    const double C49979 = C92356 * C3662;
    const double C50095 = C92356 * C3736;
    const double C50202 = C92356 * C3806;
    const double C81895 = C92356 * C5965;
    const double C81889 = C92356 * C5968;
    const double C81883 = C92356 * C3665;
    const double C81877 = C92356 * C3661;
    const double C81993 = C92356 * C6045;
    const double C81987 = C92356 * C3735;
    const double C82085 = C92356 * C6122;
    const double C82079 = C92356 * C3805;
    const double C84481 = C92356 * C8769;
    const double C84475 = C92356 * C8766;
    const double C84591 = C92356 * C8870;
    const double C84698 = C92356 * C8971;
    const double C19668 =
        (2 * C92171 + C92361) / C89854 - (C92356 * C92167) / C89849;
    const double C19669 = C92356 / C89854 - C92174 / C89858;
    const double C14772 = C14750 * C119;
    const double C14766 = C14750 * C109;
    const double C14764 = C14750 * C118;
    const double C14758 = C14750 * C108;
    const double C14874 = C14750 * C184;
    const double C14864 = C14750 * C183;
    const double C14966 = C14750 * C247;
    const double C14956 = C14750 * C246;
    const double C17166 = C14750 * C812;
    const double C17160 = C14750 * C804;
    const double C17280 = C14750 * C889;
    const double C17387 = C14750 * C955;
    const double C18097 = C14750 * C1396;
    const double C18091 = C14750 * C1388;
    const double C18207 = C14750 * C1470;
    const double C18318 = C14750 * C1539;
    const double C24857 = C14750 * C1390;
    const double C24851 = C14750 * C1406;
    const double C24841 = C14750 * C1397;
    const double C24835 = C14750 * C1389;
    const double C24957 = C14750 * C1472;
    const double C24947 = C14750 * C1471;
    const double C25047 = C14750 * C1541;
    const double C25045 = C14750 * C1540;
    const double C27556 = C14750 * C3439;
    const double C27550 = C14750 * C3431;
    const double C27670 = C14750 * C3513;
    const double C27773 = C14750 * C3587;
    const double C90058 = C92183 - C90055;
    const double C28683 = C28666 + C28667;
    const double C28680 = C28660 + C28661;
    const double C28677 = C28654 + C28655;
    const double C28778 = C28770 + C28771;
    const double C28775 = C28764 + C28765;
    const double C31073 = C31062 + C31063;
    const double C31183 = C31178 + C31179;
    const double C32052 = C32041 + C32042;
    const double C32162 = C32157 + C32158;
    const double C34435 = C34421 + C34422;
    const double C34432 = C34415 + C34416;
    const double C34429 = C34409 + C34410;
    const double C34426 = C34403 + C34404;
    const double C34524 = C34513 + C34514;
    const double C38016 = C38008 + C38009;
    const double C38013 = C38002 + C38003;
    const double C28676 = C28652 + C28653;
    const double C28776 = C28766 + C28767;
    const double C34430 = C34411 + C34412;
    const double C34427 = C34405 + C34406;
    const double C58451 = C58432 + C58433;
    const double C58448 = C58426 + C58427;
    const double C58446 = C58422 + C58423;
    const double C58550 = C58541 + C58542;
    const double C58548 = C58536 + C58537;
    const double C60759 = C60744 + C60745;
    const double C60872 = C60864 + C60865;
    const double C61725 = C61710 + C61711;
    const double C61839 = C61832 + C61833;
    const double C64436 = C64422 + C64423;
    const double C64434 = C64418 + C64419;
    const double C64432 = C64414 + C64415;
    const double C64429 = C64408 + C64409;
    const double C64427 = C64404 + C64405;
    const double C64548 = C64536 + C64537;
    const double C68888 = C68882 + C68883;
    const double C68886 = C68878 + C68879;
    const double C69702 = C69684 * C1392;
    const double C69692 = C69684 * C1407;
    const double C69686 = C69684 * C1391;
    const double C69802 = C69684 * C1474;
    const double C69800 = C69684 * C1473;
    const double C69894 = C69684 * C1543;
    const double C69892 = C69684 * C1542;
    const double C71964 = C69684 * C5720;
    const double C72183 = C69684 * C5886;
    const double C72912 = C69684 * C10815;
    const double C72906 = C69684 * C10809;
    const double C73022 = C69684 * C10931;
    const double C86224 = C69684 * C16095;
    const double C86218 = C69684 * C16099;
    const double C86216 = C69684 * C5725;
    const double C86210 = C69684 * C5719;
    const double C86316 = C69684 * C5805;
    const double C86414 = C69684 * C16255;
    const double C86412 = C69684 * C5885;
    const double C89612 = C69684 * C24524;
    const double C89606 = C69684 * C24527;
    const double C89726 = C69684 * C24638;
    const double C69705 = C92362 * C563;
    const double C69699 = C92362 * C557;
    const double C69697 = C92362 * C562;
    const double C69691 = C92362 * C556;
    const double C69807 = C92362 * C643;
    const double C69797 = C92362 * C642;
    const double C69899 = C92362 * C721;
    const double C69889 = C92362 * C720;
    const double C71967 = C92362 * C1211;
    const double C71961 = C92362 * C1203;
    const double C72081 = C92362 * C1269;
    const double C72188 = C92362 * C1327;
    const double C72909 = C92362 * C1795;
    const double C72903 = C92362 * C1787;
    const double C73019 = C92362 * C1853;
    const double C73130 = C92362 * C1911;
    const double C86229 = C92362 * C1205;
    const double C86223 = C92362 * C1213;
    const double C86213 = C92362 * C1212;
    const double C86207 = C92362 * C1204;
    const double C86323 = C92362 * C1268;
    const double C86321 = C92362 * C1267;
    const double C86419 = C92362 * C1329;
    const double C86409 = C92362 * C1328;
    const double C89617 = C92362 * C3875;
    const double C89611 = C92362 * C3879;
    const double C89723 = C92362 * C3949;
    const double C89834 = C92362 * C4019;
    const double C38281 =
        (C92337 - C92357) / C89854 - (C92362 * C92191) / C89849;
    const double C9875 = C9867 + C9868;
    const double C9970 = C9966 + C9967;
    const double C24256 = C24249 + C24250;
    const double C24255 = C24247 + C24248;
    const double C69701 = C92359 * C1786;
    const double C69695 = C92359 * C1795;
    const double C69689 = C92359 * C1787;
    const double C69805 = C92359 * C1852;
    const double C69799 = C92359 * C1853;
    const double C69897 = C92359 * C1913;
    const double C69891 = C92359 * C1911;
    const double C71963 = C92359 * C3876;
    const double C72079 = C92359 * C3950;
    const double C72186 = C92359 * C4020;
    const double C72905 = C92359 * C1790;
    const double C73021 = C92359 * C1856;
    const double C73128 = C92359 * C1912;
    const double C86227 = C92359 * C9072;
    const double C86221 = C92359 * C9075;
    const double C86215 = C92359 * C3879;
    const double C86209 = C92359 * C3875;
    const double C86325 = C92359 * C9188;
    const double C86319 = C92359 * C3949;
    const double C86417 = C92359 * C9292;
    const double C86411 = C92359 * C4019;
    const double C89615 = C92359 * C6199;
    const double C89609 = C92359 * C6202;
    const double C89725 = C92359 * C6279;
    const double C89832 = C92359 * C6356;
    const double C38282 =
        (2 * C92195 + C92362) / C89854 - (C92359 * C92191) / C89849;
    const double C38283 = C92359 / C89854 - C92198 / C89858;
    const double C28670 = C28648 * C119;
    const double C28664 = C28648 * C109;
    const double C28662 = C28648 * C118;
    const double C28656 = C28648 * C108;
    const double C28772 = C28648 * C184;
    const double C28762 = C28648 * C183;
    const double C28864 = C28648 * C247;
    const double C28854 = C28648 * C246;
    const double C31066 = C28648 * C812;
    const double C31060 = C28648 * C804;
    const double C31180 = C28648 * C889;
    const double C31287 = C28648 * C955;
    const double C32045 = C28648 * C1396;
    const double C32039 = C28648 * C1388;
    const double C32155 = C28648 * C1470;
    const double C32266 = C28648 * C1539;
    const double C34423 = C28648 * C806;
    const double C34417 = C28648 * C822;
    const double C34407 = C28648 * C813;
    const double C34401 = C28648 * C805;
    const double C34517 = C28648 * C891;
    const double C34515 = C28648 * C890;
    const double C34613 = C28648 * C957;
    const double C34603 = C28648 * C956;
    const double C38010 = C28648 * C3431;
    const double C38004 = C28648 * C3439;
    const double C38116 = C28648 * C3513;
    const double C38227 = C28648 * C3587;
    const double C4904 = C4882 + C4883;
    const double C16834 = C16818 + C16819;
    const double C48732 = C48716 + C48717;
    const double C15311 = C15292 + C15293;
    const double C21185 = C21173 + C21174;
    const double C47301 = C47282 + C47283;
    const double C10847 = C10825 + C10826;
    const double C31406 = C31390 + C31391;
    const double C55592 = C55584 + C55585;
    const double C29649 = C29630 + C29631;
    const double C36431 = C36427 + C36428;
    const double C53328 = C53314 + C53315;
    const double C18763 = C18753 + C18754;
    const double C25399 = C25389 + C25390;
    const double C50622 = C50612 + C50613;
    const double C24869 = C24855 + C24856;
    const double C32703 = C32697 + C32698;
    const double C34998 = C34979 + C34980;
    const double C37678 = C37666 + C37667;
    const double C53694 = C53680 + C53681;
    const double C24861 = C24839 + C24840;
    const double C27563 = C27552 + C27553;
    const double C37675 = C37660 + C37661;
    const double C57229 = C57222 + C57223;
    const double C7243 = C5547 * C1986;
    const double C15123 = C5547 * C92105;
    const double C17597 = C5547 * C1985;
    const double C13197 = C11353 * C2710;
    const double C28572 = C11353 * C92116;
    const double C31938 = C11353 * C2709;
    const double C8201 = C8199 * C92105;
    const double C55315 = C12442 + C12441;
    const double C55314 = C12441 + C12442;
    const double C67553 = C7982 + C7981;
    const double C67552 = C7981 + C7982;
    const double C12212 = C12210 * C92116;
    const double C5457 = C5449 * C801;
    const double C5634 = C5449 * C244;
    const double C7242 = C5449 * C2060;
    const double C15122 = C5449 * C181;
    const double C17494 = C5449 * C1987;
    const double C17492 = C5449 * C1988;
    const double C17596 = C5449 * C2059;
    const double C18628 = C5449 * C2849;
    const double C11166 = C11158 * C801;
    const double C11254 = C11158 * C181;
    const double C13196 = C11158 * C2850;
    const double C28571 = C11158 * C244;
    const double C30852 = C11158 * C2059;
    const double C31736 = C11158 * C1987;
    const double C31734 = C11158 * C1988;
    const double C31937 = C11158 * C2849;
    const double C67282 = C7757 + C7758;
    const double C67280 = C7758 + C7757;
    const double C8193 = C8091 * C181;
    const double C8303 = C8091 * C2850;
    const double C9082 = C8091 * C801;
    const double C12093 = C11989 * C2060;
    const double C12208 = C11989 * C244;
    const double C13940 = C11989 * C801;
    const double C55182 = C12327 + C12328;
    const double C55180 = C12328 + C12327;
    const double C342 = C331 + C332;
    const double C589 = C578 + C579;
    const double C4364 = C4350 + C4351;
    const double C9873 = C9859 + C9860;
    const double C15929 = C15925 + C15926;
    const double C20227 = C20221 + C20222;
    const double C24351 = C24343 + C24344;
    const double C24661 = C24653 + C24654;
    const double C28011 = C28004 + C28005;
    const double C34523 = C34511 + C34512;
    const double C38123 = C38118 + C38119;
    const double C69025 = C69022 + C69023;
    const double C19509 = C19507 + C19508;
    const double C22514 = C22509 + C22510;
    const double C24350 = C24341 + C24342;
    const double C28012 = C28006 + C28007;
    const double C34527 = C34519 + C34520;
    const double C64551 = C64542 + C64543;
    const double C30124 = C30120 + C30121;
    const double C34891 = C34887 + C34888;
    const double C35198 = C35190 + C35191;
    const double C15309 = C15288 + C15289;
    const double C21184 = C21169 + C21170;
    const double C47299 = C47278 + C47279;
    const double C20150 = C20137 + C20138;
    const double C26336 = C26333 + C26334;
    const double C29647 = C29626 + C29627;
    const double C53321 = C53300 + C53301;
    const double C24555 = C24545 + C24546;
    const double C22431 = C22423 + C22424;
    const double C415 = C408 + C409;
    const double C4460 = C4453 + C4454;
    const double C2300 = C2288 + C2289;
    const double C4456 = C4444 + C4445;
    const double C6919 = C6912 + C6913;
    const double C14877 = C14866 + C14867;
    const double C41904 = C41892 + C41893;
    const double C3016 = C3008 + C3009;
    const double C7871 = C7863 + C7864;
    const double C11261 = C11255 + C11256;
    const double C35100 = C35090 + C35091;
    const double C14051 = C14049 + C14050;
    const double C24960 = C24949 + C24950;
    const double C35099 = C35087 + C35088;
    const double C37789 = C37782 + C37783;
    const double C53807 = C53796 + C53797;
    const double C740 = C733 + C734;
    const double C10065 = C10058 + C10059;
    const double C2640 = C2635 + C2636;
    const double C12554 = C12549 + C12550;
    const double C5641 = C5635 + C5636;
    const double C24443 = C24433 + C24434;
    const double C3360 = C3348 + C3349;
    const double C10061 = C10049 + C10050;
    const double C13541 = C13534 + C13535;
    const double C28867 = C28856 + C28857;
    const double C58644 = C58632 + C58633;
    const double C9301 = C9299 + C9300;
    const double C24442 = C24430 + C24431;
    const double C28121 = C28114 + C28115;
    const double C34616 = C34605 + C34606;
    const double C64665 = C64654 + C64655;
    const double C421 = C404 + C418;
    const double C501 = C484 + C498;
    const double C668 = C651 + C665;
    const double C746 = C729 + C743;
    const double C90184 = C90181 + C90167;
    const double C32376 = C92072 * C5723;
    const double C35528 = C92067 * C5723;
    const double C53307 = C92072 * C5723;
    const double C15316 = C15302 + C15303;
    const double C21187 = C21179 + C21180;
    const double C47306 = C47292 + C47293;
    const double C18759 = C18745 + C18746;
    const double C25401 = C25395 + C25396;
    const double C50618 = C50604 + C50605;
    const double C29654 = C29640 + C29641;
    const double C40312 = C40308 + C40309;
    const double C70660 = C70652 + C70653;
    const double C90226 = C90218 - C90200;
    const double C90736 = C90735 / C89849;
    const double C90758 = C90757 / C89849;
    const double C20154 = C20145 + C20146;
    const double C24552 = C24539 + C24540;
    const double C22428 = C22417 + C22418;
    const double C39202 = C39198 + C39199;
    const double C90183 = C90180 + C90164;
    const double C90209 = -C90197;
    const double C30750 = C307 * C5726;
    const double C31070 = C28650 * C5726;
    const double C32379 = C89868 * C5726;
    const double C35529 = C19671 * C5726;
    const double C36743 = C4328 * C5726;
    const double C53302 = C46529 * C5726;
    const double C53668 = C41776 * C5726;
    const double C56408 = C9837 * C5726;
    const double C67690 = C58420 * C5726;
    const double C71970 = C69684 * C5726;
    const double C38001 = C28199 * C25134;
    const double C89607 = C69237 * C25134;
    const double C91164 = C91160 / C89849;
    const double C27561 = C14525 * C19092;
    const double C84483 = C46527 * C19092;
    const double C91592 = C91588 / C89849;
    const double C20516 = C20511 + C20512;
    const double C24865 = C24847 + C24848;
    const double C27896 = C27880 + C27881;
    const double C34431 = C34413 + C34414;
    const double C37681 = C37672 + C37673;
    const double C84810 = C84802 + C84803;
    const double C89299 = C89294 + C89295;
    const double C22879 = C22875 + C22876;
    const double C24251 = C24235 + C24236;
    const double C81406 = C81396 + C81397;
    const double C4891 = C4099 * C832;
    const double C16831 = C92072 * C832;
    const double C42319 = C41547 * C832;
    const double C48729 = C92072 * C832;
    const double C10834 = C4099 * C1416;
    const double C31403 = C92072 * C1416;
    const double C59405 = C41547 * C1416;
    const double C72295 = C92072 * C1416;
    const double C4889 = C4099 * C827;
    const double C6467 = C4098 * C827;
    const double C16823 = C92072 * C827;
    const double C42317 = C41547 * C827;
    const double C43743 = C92350 * C827;
    const double C48721 = C92072 * C827;
    const double C8428 = C4098 * C3444;
    const double C18750 = C92072 * C3444;
    const double C25392 = C92067 * C3444;
    const double C45633 = C92350 * C3444;
    const double C50609 = C92072 * C3444;
    const double C54359 = C46523 * C3444;
    const double C76799 = C92322 * C3444;
    const double C24542 = C92067 * C5728;
    const double C32378 = C92322 * C5728;
    const double C53305 = C46523 * C5728;
    const double C10832 = C4099 * C1411;
    const double C12662 = C4098 * C1411;
    const double C31395 = C92072 * C1411;
    const double C55589 = C92072 * C1411;
    const double C59403 = C41547 * C1411;
    const double C61093 = C92350 * C1411;
    const double C15313 = C15296 + C15297;
    const double C21186 = C21175 + C21176;
    const double C47303 = C47286 + C47287;
    const double C29651 = C29634 + C29635;
    const double C36432 = C36429 + C36430;
    const double C53326 = C53310 + C53311;
    const double C20152 = C20141 + C20142;
    const double C22429 = C22419 + C22420;
    const double C34713 = C34705 + C34706;
    const double C90241 = C90238 + C90216;
    const double C15276 = (3 * (C90145 + C90175 * C90425) +
                           C90253 * (2 * C90861 + C90253 * C90975)) /
                          C89849;
    const double C16098 = (C90145 + C90175 * C90425 + C90975 * C90547) / C89849;
    const double C18735 = (C90311 * (2 * C90861 + C90253 * C90975)) / C89849;
    const double C29614 = (3 * (C90145 + C90175 * C90547) +
                           C90311 * (2 * C91381 + C90311 * C91385)) /
                          C89849;
    const double C91212 = C91208 + C91195;
    const double C91657 = C91653 + C91645;
    const double C5185 = (2 * (C90253 * C90392 + C90165 * ae) +
                          C90253 * (C90392 + C90253 * C90836 + C90833 * ae) +
                          (C90165 + C90214 * C90425) * ae) /
                         C89849;
    const double C5967 =
        (C90253 * C90392 + C90165 * ae + C90836 * C90547) / C89849;
    const double C8768 =
        (C90311 * (C90392 + C90253 * C90836 + C90833 * ae)) / C89849;
    const double C11430 = (2 * (C90311 * C90493 + C90165 * ae) +
                           C90311 * (C90493 + C90311 * C90959 + C90956 * ae) +
                           (C90165 + C90214 * C90547) * ae) /
                          C89849;
    const double C1026 =
        (2 * C90382 + C90111 * C90392 +
         C90253 * (C90253 * C90418 + C90230 * ae) + C90253 * C90230 * ae) /
        C89849;
    const double C1792 =
        (2 * C90483 + C90111 * C90493 +
         C90311 * (C90311 * C90519 + C90230 * ae) + C90311 * C90230 * ae) /
        C89849;
    const double C2197 = (C90253 * (3 * C90392 + C90111 * C90418) +
                          (3 * C90165 + C90111 * C90230) * ae) /
                         C89849;
    const double C3175 = (C90311 * (3 * C90493 + C90111 * C90519) +
                          (3 * C90165 + C90111 * C90230) * ae) /
                         C89849;
    const double C3664 = (C90311 * (C90253 * C90418 + C90230 * ae)) / C89849;
    const double C3878 =
        (C90311 * C90253 * C90519 + C90253 * C90230 * ae) / C89849;
    const double C112 = 4 * (2 * C90134 + C90111 * C90165) +
                        C90111 * (3 * C90165 + C90111 * C90230);
    const double C809 = 2 * C90134 + C90111 * C90165 + C90230 * C90425;
    const double C1393 = 2 * C90134 + C90111 * C90165 + C90230 * C90547;
    const double C1989 = C90253 * (3 * C90165 + C90111 * C90230);
    const double C2711 = C90311 * (3 * C90165 + C90111 * C90230);
    const double C3434 = C90311 * C90253 * C90230;
    const double C4989 =
        (-2 * (C90253 * C90277 + C90165 * ce)) / C89890 -
        (C90253 * (C90253 * C90835 + C90277 + C90833 * ce)) / C89890 -
        ((C90165 + C90214 * C90425) * ce) / C89890;
    const double C5807 =
        -(C90835 * C90547 + C90253 * C90277 + C90165 * ce) / C89890;
    const double C8542 =
        -(C90311 * (C90253 * C90835 + C90277 + C90833 * ce)) / C89890;
    const double C11030 =
        (-2 * (C90311 * C90335 + C90165 * ce)) / C89890 -
        (C90311 * (C90311 * C90958 + C90335 + C90956 * ce)) / C89890 -
        ((C90165 + C90214 * C90547) * ce) / C89890;
    const double C91036 = C90397 + C91034;
    const double C91469 = C90498 + C91467;
    const double C91035 = C91033 + C90282;
    const double C91468 = C91466 + C90340;
    const double C33012 = (2 * (C90311 * C90887 + C90827 * ae) +
                           C90311 * (C90887 + C90311 * C91492 + C91487 * ae) +
                           (C90827 + C91019 * C90547) * ae) /
                          C89849;
    const double C32588 =
        (-2 * (C90311 * C90886 + C90827 * ce)) / C89890 -
        (C90311 * (C90311 * C91491 + C90886 + C91487 * ce)) / C89890 -
        ((C90827 + C91019 * C90547) * ce) / C89890;
    const double C90240 = C90237 + C90213;
    const double C15278 =
        (-3 * (C90174 * C90425 + C90144)) / C89890 +
        C90253 * ((-2 * C90876) / C89890 - (C90253 * C90991) / C89890);
    const double C16100 =
        -(C90991 * C90547 + C90174 * C90425 + C90144) / C89890;
    const double C18737 =
        C90311 * ((-2 * C90876) / C89890 - (C90253 * C90991) / C89890);
    const double C29616 =
        (-3 * (C90174 * C90547 + C90144)) / C89890 +
        C90311 * ((-2 * C91408) / C89890 - (C90311 * C91412) / C89890);
    const double C91211 = C91205 + C91192;
    const double C34793 =
        (-3 * (C91001 * C90547 + C90822)) / C89890 +
        C90311 * ((-2 * C91526) / C89890 - (C90311 * C91531) / C89890);
    const double C91656 = C91652 + C91641;
    const double C90580 = -C90579;
    const double C90658 = -C90657;
    const double C90734 = C90731 / C90112;
    const double C32371 =
        (((-2 * C90311 * C90727) / C89890 -
          (C90311 * (C90253 * C90212 * C90547 + C90727)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90311 * C90726 + C90311 * (C90726 + C90253 * C90215 * C90547)) *
         ce) /
            C90112 +
        C90111 *
            ((-2 * C90773) / C90112 +
             C90311 *
                 ((-(C90253 *
                     (C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90547) /
                   C89890) /
                      C89849 -
                  C90728 / C90112));
    const double C34697 =
        3 * ((-(C90728 * C90547) / C89890) / C89849 - C90570 / C90112) +
        C90311 *
            ((-2 * C90773) / C90112 +
             C90311 *
                 ((-(C90253 *
                     (C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90547) /
                   C89890) /
                      C89849 -
                  C90728 / C90112));
    const double C8426 = C4099 * C3445;
    const double C45631 = C41547 * C3445;
    const double C54357 = C92072 * C3445;
    const double C76797 = C92072 * C3445;
    const double C32380 = C92072 * C5729;
    const double C35530 = C92067 * C5729;
    const double C53303 = C92072 * C5729;
    const double C34702 = C92067 * C24530;
    const double C90756 = C90753 / C90112;
    const double C90444 = -C90443;
    const double C91029 = C91023 / C90112;
    const double C30030 =
        3 * ((-(C91017 * C90547) / C89890) / C89849 - C90825 / C90112) +
        C90311 *
            ((-2 * C91113) / C90112 +
             C90311 *
                 ((-(C90111 *
                     (C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90547) /
                   C89890) /
                      C89849 -
                  C91017 / C90112));
    const double C32804 =
        (((-2 * C91423) / C89890 - (C90311 * C91427) / C89890) * ae) / C89849 -
        ((2 * C91395 + C90311 * C91397) * ce) / C90112 +
        C90253 *
            ((-2 * C91113) / C90112 +
             C90311 *
                 ((-(C90111 *
                     (C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90547) /
                   C89890) /
                      C89849 -
                  C91017 / C90112));
    const double C91287 = -C91286;
    const double C91323 = C91321 / C90112;
    const double C90566 = -C90565;
    const double C91459 = C91454 / C90112;
    const double C33211 =
        2 * ((-(C90887 * ce) / C89890) / C89849 - (ae * C90886) / C90112 -
             (C90311 * C91485) / C90112) -
        (ae * (C90311 * C91491 + C90886 + C91487 * ce)) / C90112 -
        ((C90887 + C90311 * C91492 + C91487 * ae) * ce) / C90112 +
        C90311 *
            ((-(ae * C91491) / C89890) / C89849 - C91485 / C90112 -
             (C91492 * ce) / C90112 +
             C90311 *
                 ((-(C91488 * ce) / C89890) / C89849 - (ae * C91486) / C90112 -
                  (C90311 * C90253 * C90111 *
                   (C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                   C90120) /
                      C90112));
    const double C91272 = -C91271;
    const double C91546 = C91540 / C90112;
    const double C25133 = (2 * (C90311 * C91064 + C91003 * ae) +
                           C90311 * (C91064 + C90311 * C91366 + C91363 * ae) +
                           (C91003 + C91193 * C90547) * ae) /
                          C89849;
    const double C20994 =
        (2 * C90884 + C90253 * C91064 +
         C90311 * (C90311 * C91263 + C91207 * ae) + C90311 * C91207 * ae) /
        C89849;
    const double C22872 = (C90311 * (3 * C91064 + C90253 * C91263) +
                           (3 * C91003 + C90253 * C91207) * ae) /
                          C89849;
    const double C20126 = 4 * (2 * C90820 + C90253 * C91003) +
                          C90253 * (3 * C91003 + C90253 * C91207);
    const double C20682 = 2 * C90820 + C90253 * C91003 + C91207 * C90547;
    const double C22410 = C90311 * (3 * C91003 + C90253 * C91207);
    const double C24741 =
        (-2 * (C90311 * C91043 + C91003 * ce)) / C89890 -
        (C90311 * (C90311 * C91365 + C91043 + C91363 * ce)) / C89890 -
        ((C91003 + C91193 * C90547) * ce) / C89890;
    const double C91553 = C91251 + C91551;
    const double C91552 = C91550 + C91224;
    const double C39189 = 4 * (2 * C90944 + C90311 * C91442) +
                          C90311 * (3 * C91442 + C90311 * C91643);
    const double C663 = C657 + C658;
    const double C90299 = C90296 / C89849;
    const double C32163 = C32159 + C32160;
    const double C31177 = C28199 * C6280;
    const double C56547 = C92195 * C6280;
    const double C67829 = C92195 * C6280;
    const double C72077 = C69237 * C6280;
    const double C18527 = C92183 * C9189;
    const double C26124 = C92195 * C9189;
    const double C64547 = C92195 * C9189;
    const double C15411 = C89868 * C4988;
    const double C15927 = C554 * C4988;
    const double C17276 = C14752 * C4988;
    const double C21265 = C19671 * C4988;
    const double C47397 = C46529 * C4988;
    const double C49174 = C46754 * C4988;
    const double C30855 = C307 * C5806;
    const double C31176 = C28650 * C5806;
    const double C32485 = C89868 * C5806;
    const double C35633 = C19671 * C5806;
    const double C36849 = C4328 * C5806;
    const double C53432 = C46529 * C5806;
    const double C53798 = C41776 * C5806;
    const double C56546 = C9837 * C5806;
    const double C67828 = C58420 * C5806;
    const double C72076 = C69684 * C5806;
    const double C18211 = C14752 * C8541;
    const double C18526 = C554 * C8541;
    const double C18873 = C89868 * C8541;
    const double C25507 = C19671 * C8541;
    const double C26123 = C9837 * C8541;
    const double C50096 = C46754 * C8541;
    const double C50728 = C46529 * C8541;
    const double C54908 = C41776 * C8541;
    const double C64546 = C58420 * C8541;
    const double C66214 = C4328 * C8541;
    const double C91013 = C91010 + C91002;
    const double C91196 = -C91186;
    const double C91611 = C91607 / C89849;
    const double C39263 = C39259 + C39260;
    const double C496 = C490 + C491;
    const double C90357 = C90354 / C89849;
    const double C17389 = C17383 + C17384;
    const double C29851 = C89868 * C11029;
    const double C30122 = C307 * C11029;
    const double C32262 = C28650 * C11029;
    const double C40453 = C19671 * C11029;
    const double C70826 = C46529 * C11029;
    const double C73125 = C69684 * C11029;
    const double C20296 = C20290 + C20291;
    const double C24756 = C24751 + C24752;
    const double C22601 = C22597 + C22598;
    const double C91238 = C91235 / C89849;
    const double C34889 = C19671 * C24740;
    const double C35192 = C4328 * C24740;
    const double C38223 = C28650 * C24740;
    const double C41271 = C307 * C24740;
    const double C86906 = C41776 * C24740;
    const double C89829 = C69684 * C24740;
    const double C91635 = -C91622;
    const double C91446 = C91440 + C91441;
    const double C343 = C333 + C334;
    const double C2216 = C2208 + C2209;
    const double C4363 = C4348 + C4349;
    const double C41811 = C41796 + C41797;
    const double C6809 = C6798 + C6799;
    const double C14786 = C14770 + C14771;
    const double C44085 = C44074 + C44075;
    const double C2938 = C2930 + C2931;
    const double C11156 = C11143 + C11144;
    const double C7762 = C7751 + C7752;
    const double C11991 = C11985 + C11986;
    const double C45015 = C45004 + C45005;
    const double C25058 = C25051 + C25052;
    const double C37901 = C37896 + C37897;
    const double C89507 = C89504 + C89505;
    const double C91204 = C91197 - C90289;
    const double C90413 = C90410 / C89849;
    const double C30960 = C30957 + C30958;
    const double C36958 = C36955 + C36956;
    const double C53927 = C53920 + C53921;
    const double C18320 = C18314 + C18315;
    const double C55048 = C55044 + C55045;
    const double C66354 = C66350 + C66351;
    const double C17165 = C14525 * C5184;
    const double C49063 = C46527 * C5184;
    const double C30749 = C92157 * C5966;
    const double C36740 = C92171 * C5966;
    const double C53673 = C92171 * C5966;
    const double C18096 = C14525 * C8767;
    const double C49981 = C46527 * C8767;
    const double C54769 = C92171 * C8767;
    const double C66075 = C92171 * C8767;
    const double C29953 = C29949 * C801;
    const double C30036 = C29949 * C181;
    const double C31939 = C29949 * C2850;
    const double C40524 = C29949 * C1988;
    const double C91014 = C91011 + C91005;
    const double C35003 = C34989 + C34990;
    const double C41128 = C41124 + C41125;
    const double C86742 = C86734 + C86735;
    const double C91299 = C91297 / C89849;
    const double C39378 = C39375 + C39376;
    const double C24954 = C14525 * C16411;
    const double C37785 = C92171 * C16411;
    const double C81991 = C46527 * C16411;
    const double C89399 = C92171 * C16411;
    const double C30856 = C92157 * C6046;
    const double C36850 = C92171 * C6046;
    const double C53799 = C92171 * C6046;
    const double C18212 = C14525 * C8871;
    const double C50097 = C46527 * C8871;
    const double C54909 = C92171 * C8871;
    const double C66215 = C92171 * C8871;
    const double C30035 = C92157 * C11243;
    const double C416 = C410 + C411;
    const double C6918 = C6910 + C6911;
    const double C14878 = C14868 + C14869;
    const double C17283 = C17278 + C17279;
    const double C44194 = C44186 + C44187;
    const double C2301 = C2293 + C2294;
    const double C4458 = C4449 + C4450;
    const double C6921 = C6916 + C6917;
    const double C14880 = C14872 + C14873;
    const double C41906 = C41897 + C41898;
    const double C3017 = C3011 + C3012;
    const double C7873 = C7867 + C7868;
    const double C11260 = C11252 + C11253;
    const double C36854 = C36851 + C36852;
    const double C7872 = C7865 + C7866;
    const double C12101 = C12094 + C12095;
    const double C18214 = C18209 + C18210;
    const double C45125 = C45118 + C45119;
    const double C66219 = C66216 + C66217;
    const double C24963 = C24955 + C24956;
    const double C32811 = C32809 + C32810;
    const double C35101 = C35092 + C35093;
    const double C37791 = C37786 + C37787;
    const double C53810 = C53802 + C53803;
    const double C24961 = C24951 + C24952;
    const double C27673 = C27668 + C27669;
    const double C37788 = C37780 + C37781;
    const double C57366 = C57362 + C57363;
    const double C30041 = C30037 + C30038;
    const double C35103 = C35096 + C35097;
    const double C590 = C580 + C581;
    const double C2472 = C2464 + C2465;
    const double C5447 = C5434 + C5435;
    const double C3194 = C3186 + C3187;
    const double C9872 = C9857 + C9858;
    const double C58455 = C58440 + C58441;
    const double C13321 = C13310 + C13311;
    const double C28684 = C28668 + C28669;
    const double C61729 = C61718 + C61719;
    const double C8093 = C8087 + C8088;
    const double C12332 = C12321 + C12322;
    const double C60763 = C60752 + C60753;
    const double C91651 = C91647 - C90347;
    const double C90514 = C90511 / C89849;
    const double C31074 = C31064 + C31065;
    const double C56411 = C56404 + C56405;
    const double C67693 = C67686 + C67687;
    const double C32044 = C28199 * C11429;
    const double C72907 = C69237 * C11429;
    const double C15846 = C15841 * C801;
    const double C16011 = C15841 * C244;
    const double C17598 = C15841 * C2060;
    const double C21617 = C15841 * C1988;
    const double C18525 = C18425 * C181;
    const double C18630 = C18425 * C2850;
    const double C19398 = C18425 * C801;
    const double C20517 = C20513 + C20514;
    const double C27898 = C27884 + C27885;
    const double C34434 = C34419 + C34420;
    const double C84812 = C84806 + C84807;
    const double C22880 = C22877 + C22878;
    const double C24253 = C24239 + C24240;
    const double C81408 = C81400 + C81401;
    const double C91264 = C91261 / C89849;
    const double C38007 = C28199 * C25132;
    const double C89613 = C69237 * C25132;
    const double C91451 = C91449 + C91444;
    const double C20628 = C92183 * C16004;
    const double C28117 = C92195 * C16717;
    const double C34610 = C28199 * C16717;
    const double C85017 = C92195 * C16717;
    const double C86415 = C69237 * C16717;
    const double C23024 = C92183 * C19607;
    const double C24438 = C92195 * C19607;
    const double C81570 = C92195 * C19607;
    const double C16010 = C92183 * C5623;
    const double C31284 = C28199 * C6357;
    const double C56681 = C92195 * C6357;
    const double C67963 = C92195 * C6357;
    const double C72184 = C69237 * C6357;
    const double C18632 = C92183 * C9293;
    const double C26228 = C92195 * C9293;
    const double C64657 = C92195 * C9293;
    const double C741 = C735 + C736;
    const double C2639 = C2632 + C2633;
    const double C12552 = C12545 + C12546;
    const double C5640 = C5632 + C5633;
    const double C26229 = C26225 + C26226;
    const double C13540 = C13532 + C13533;
    const double C28868 = C28858 + C28859;
    const double C32269 = C32264 + C32265;
    const double C61948 = C61940 + C61941;
    const double C3361 = C3353 + C3354;
    const double C10063 = C10054 + C10055;
    const double C13543 = C13538 + C13539;
    const double C28870 = C28862 + C28863;
    const double C58646 = C58637 + C58638;
    const double C8311 = C8304 + C8305;
    const double C12553 = C12547 + C12548;
    const double C31290 = C31285 + C31286;
    const double C56685 = C56682 + C56683;
    const double C60984 = C60978 + C60979;
    const double C16018 = C16012 + C16013;
    const double C24446 = C24439 + C24440;
    const double C28120 = C28112 + C28113;
    const double C34617 = C34607 + C34608;
    const double C38230 = C38225 + C38226;
    const double C69160 = C69156 + C69157;
    const double C19615 = C19613 + C19614;
    const double C24444 = C24435 + C24436;
    const double C28123 = C28118 + C28119;
    const double C34619 = C34611 + C34612;
    const double C64668 = C64660 + C64661;
    const double C90182 = C90172 - C90179;
    const double C35200 = C35196 + C35197;
    const double C91012 = C91009 - C91000;
    const double C91450 = C91448 - C91439;
    const double C20128 =
        4 * ((-2 * C90874) / C89890 - (C90253 * C90982) / C89890) +
        C90253 * ((-3 * C90982) / C89890 + C90253 * C91171);
    const double C20684 =
        (-2 * C90874) / C89890 - (C90253 * C90982) / C89890 + C91171 * C90547;
    const double C22412 = C90311 * ((-3 * C90982) / C89890 + C90253 * C91171);
    const double C39191 =
        4 * ((-2 * C91399) / C89890 - (C90311 * C91403) / C89890) +
        C90311 * ((-3 * C91403) / C89890 + C90311 * C91599);
    const double C3738 =
        (C90311 * C90306 * ae) / C89849 - (C90311 * C90418 * ce) / C90112 +
        C90253 * C90311 *
            ((-2 * C90111 * C90441) / C90112 +
             C90111 *
                 ((-((C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90441 / C90112));
    const double C3952 =
        ((C90253 * C90306 - (C90230 * ce) / C89890) * ae) / C89849 +
        C90311 *
            (C90253 *
                 ((-2 * C90111 * C90538) / C90112 +
                  C90111 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112)) -
             (C90519 * ce) / C90112);
    const double C187 =
        4 * ((-2 * C90267) / C89890 - (C90111 * C90277) / C89890) +
        C90111 * ((-3 * C90277) / C89890 + C90111 * C90306);
    const double C894 = (-2 * C90267) / C89890 - (C90111 * C90277) / C89890 +
                        C90253 * (C90253 * C90306 - (C90230 * ce) / C89890) -
                        (C90253 * C90230 * ce) / C89890;
    const double C1475 =
        (-2 * C90267) / C89890 - (C90111 * C90277) / C89890 + C90306 * C90547;
    const double C2061 = C90253 * ((-3 * C90277) / C89890 + C90111 * C90306) -
                         ((3 * C90165 + C90111 * C90230) * ce) / C89890;
    const double C2781 = C90311 * ((-3 * C90277) / C89890 + C90111 * C90306);
    const double C3516 = C90311 * (C90253 * C90306 - (C90230 * ce) / C89890);
    const double C39254 =
        4 * ((-2 * C91414) / C89890 - (C90311 * C91418) / C89890) +
        C90311 * ((-3 * C91418) / C89890 + C90311 * C91618);
    const double C3808 =
        ((C90311 * C90364 - (C90230 * ce) / C89890) * ae) / C89849 +
        C90253 *
            (C90311 *
                 ((-2 * C90111 * C90462) / C90112 +
                  C90111 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112)) -
             (C90418 * ce) / C90112);
    const double C4022 =
        (C90253 * C90364 * ae) / C89849 - (C90253 * C90519 * ce) / C90112 +
        C90311 * C90253 *
            ((-2 * C90111 * C90563) / C90112 +
             C90111 *
                 ((-((C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90563 / C90112));
    const double C250 =
        4 * ((-2 * C90325) / C89890 - (C90111 * C90335) / C89890) +
        C90111 * ((-3 * C90335) / C89890 + C90111 * C90364);
    const double C960 =
        (-2 * C90325) / C89890 - (C90111 * C90335) / C89890 + C90364 * C90425;
    const double C1544 = (-2 * C90325) / C89890 - (C90111 * C90335) / C89890 +
                         C90311 * (C90311 * C90364 - (C90230 * ce) / C89890) -
                         (C90311 * C90230 * ce) / C89890;
    const double C2129 = C90253 * ((-3 * C90335) / C89890 + C90111 * C90364);
    const double C2851 = C90311 * ((-3 * C90335) / C89890 + C90111 * C90364) -
                         ((3 * C90165 + C90111 * C90230) * ce) / C89890;
    const double C3590 =
        C90311 * C90253 * C90364 - (C90253 * C90230 * ce) / C89890;
    const double C20278 =
        4 * ((-2 * C90883) / C89890 - (C90253 * C91043) / C89890) +
        C90253 * ((-3 * C91043) / C89890 + C90253 * C91240);
    const double C20788 = (-2 * C90883) / C89890 - (C90253 * C91043) / C89890 +
                          C90311 * (C90311 * C91240 - (C91207 * ce) / C89890) -
                          (C90311 * C91207 * ce) / C89890;
    const double C22581 = C90311 * ((-3 * C91043) / C89890 + C90253 * C91240) -
                          ((3 * C91003 + C90253 * C91207) * ce) / C89890;
    const double C90280 = C90279 - C90272;
    const double C90970 = C90969 - C90964;
    const double C90305 = C90303 - C90289;
    const double C91146 = C91144 - C91137;
    const double C91562 = C91561 - C90283;
    const double C29938 = C11168 + C11167;
    const double C90395 = C90394 - C90387;
    const double C90985 = C90984 - C90153;
    const double C39372 = C29955 + C29954;
    const double C90419 = C90417 - C90404;
    const double C91170 = C91168 - C90200;
    const double C91283 = C91282 - C90398;
    const double C91315 = C91314 / C89849;
    const double C90338 = C90337 - C90330;
    const double C91379 = C91378 - C90964;
    const double C90363 = C90361 - C90347;
    const double C91154 = C91153 - C90341;
    const double C91505 = C91504 / C89849;
    const double C91574 = C91572 - C91137;
    const double C502 = C487 + C499;
    const double C91046 = C91045 - C90330;
    const double C91119 = C91118 - C90387;
    const double C9760 = C9756 + C9757;
    const double C90467 = C90466 - C90461;
    const double C91056 = C91055 / C89849;
    const double C91125 = C91124 / C89849;
    const double C91239 = C91236 - C90347;
    const double C91300 = C91298 - C90404;
    const double C15828 = C5459 + C5458;
    const double C90496 = C90495 - C90488;
    const double C91406 = C91405 - C90153;
    const double C20510 = C15848 + C15847;
    const double C90520 = C90518 - C90505;
    const double C91249 = C91248 - C90499;
    const double C91523 = C91522 / C89849;
    const double C91598 = C91596 - C90200;
    const double C669 = C654 + C666;
    const double C91067 = C91066 - C90488;
    const double C91421 = C91420 - C90272;
    const double C4716 = C4712 + C4713;
    const double C90543 = C90542 - C90537;
    const double C91077 = C91076 / C89849;
    const double C91429 = C91428 / C89849;
    const double C91265 = C91262 - C90505;
    const double C91617 = C91615 - C90289;
    const double C42332 = C42310 + C42311;
    const double C59418 = C59396 + C59397;
    const double C89873 = C89872 * ae;
    const double C4102 =
        ((-C89848 / C89849) / C89854 - (C89861 * be) / C89849) / C89854 -
        ((C89847 * ((-C89850 / C89849) / C89854 - (C89872 * be) / C89849) +
          C46523) *
         be) /
            C89849 +
        (-C89863 / C89849) / C89854 - (0 * be) / C89849;
    const double C4103 =
        ((-C89850 / C89849) / C89854 - (C89872 * be) / C89849) / C89854 -
        ((C89847 * ((-C89863 / C89849) / C89854 - (0 * be) / C89849) + C92072) *
         be) /
            C89849;
    const double C46528 = (-C89850 / C89849) / C89854 - (C89872 * be) / C89849;
    const double C20159 = C20151 * C801;
    const double C20287 = C20151 * C244;
    const double C21177 = C20151 * C1987;
    const double C22594 = C20151 * C2849;
    const double C20157 = C20149 * C801;
    const double C20284 = C20149 * C244;
    const double C21171 = C20149 * C1987;
    const double C22589 = C20149 * C2849;
    const double C20156 = C20148 * C92084;
    const double C21166 = C20148 * C1983;
    const double C20155 = C20147 * C801;
    const double C20281 = C20147 * C244;
    const double C21165 = C20147 * C1987;
    const double C22584 = C20147 * C2849;
    const double C20299 = C20295 * C92116;
    const double C22595 = C20295 * C2709;
    const double C20298 = C20294 * C92116;
    const double C22590 = C20294 * C2709;
    const double C20297 = C20293 * C92116;
    const double C22585 = C20293 * C2709;
    const double C21189 = C21183 * C1988;
    const double C21336 = C21183 * C244;
    const double C21348 = C21345 * C92116;
    const double C22438 = C22432 * C801;
    const double C22586 = C22432 * C2850;
    const double C23916 = C22432 * C244;
    const double C24646 = C22432 * C181;
    const double C25387 = C22432 * C1987;
    const double C27338 = C22432 * C2059;
    const double C27336 = C22432 * C2060;
    const double C27444 = C22432 * C2849;
    const double C22436 = C22430 * C801;
    const double C22591 = C22430 * C2850;
    const double C23918 = C22430 * C244;
    const double C24648 = C22430 * C181;
    const double C25393 = C22430 * C1987;
    const double C27342 = C22430 * C2059;
    const double C27340 = C22430 * C2060;
    const double C27448 = C22430 * C2849;
    const double C24647 = C22513 * C92105;
    const double C27339 = C22513 * C1985;
    const double C27337 = C22513 * C1986;
    const double C22603 = C22600 * C2710;
    const double C23919 = C22600 * C92116;
    const double C27449 = C22600 * C2709;
    const double C22602 = C22599 * C2710;
    const double C23917 = C22599 * C92116;
    const double C27445 = C22599 * C2709;
    const double C24564 = C24556 * C801;
    const double C24658 = C24556 * C181;
    const double C36425 = C24556 * C1987;
    const double C37450 = C24556 * C2059;
    const double C24562 = C24554 * C801;
    const double C24655 = C24554 * C181;
    const double C27446 = C24554 * C2850;
    const double C34101 = C24554 * C244;
    const double C35525 = C24554 * C1987;
    const double C37454 = C24554 * C2059;
    const double C37452 = C24554 * C2060;
    const double C37556 = C24554 * C2849;
    const double C24558 = C24550 * C92084;
    const double C26330 = C24550 * C1983;
    const double C24557 = C24549 * C801;
    const double C24643 = C24549 * C181;
    const double C26329 = C24549 * C1987;
    const double C27334 = C24549 * C2059;
    const double C24666 = C24662 * C92105;
    const double C37451 = C24662 * C1985;
    const double C24663 = C24659 * C92105;
    const double C27335 = C24659 * C1985;
    const double C27447 = C24755 * C2710;
    const double C34102 = C24755 * C92116;
    const double C37557 = C24755 * C2709;
    const double C26337 = C26335 * C1988;
    const double C26443 = C26335 * C181;
    const double C26445 = C26444 * C92105;
    const double C34719 = C34714 * C801;
    const double C34803 = C34714 * C181;
    const double C40306 = C34714 * C1987;
    const double C40988 = C34714 * C2059;
    const double C34717 = C34712 * C801;
    const double C34800 = C34712 * C181;
    const double C37558 = C34712 * C2850;
    const double C40990 = C34712 * C2060;
    const double C34810 = C34807 * C92105;
    const double C40989 = C34807 * C1985;
    const double C90016 = C90013 * ae;
    const double C41775 = (-C89986 / C89849) / C89854 - (C90013 * be) / C89849;
    const double C46788 = C46772 + C46773;
    const double C46780 = C46756 + C46757;
    const double C46880 = C46870 + C46871;
    const double C46972 = C46962 + C46963;
    const double C49287 = C49281 + C49282;
    const double C50205 = C50199 + C50200;
    const double C81904 = C81886 + C81887;
    const double C81903 = C81884 + C81885;
    const double C81900 = C81878 + C81879;
    const double C81998 = C81988 + C81989;
    const double C82093 = C82086 + C82087;
    const double C82088 = C82076 + C82077;
    const double C4446 = C4366 * C181;
    const double C4543 = C4366 * C244;
    const double C4559 = C4558 * C92116;
    const double C35008 = C35006 * C92084;
    const double C14787 = C14772 + C14773;
    const double C14784 = C14766 + C14767;
    const double C14783 = C14764 + C14765;
    const double C14780 = C14758 + C14759;
    const double C14881 = C14874 + C14875;
    const double C14876 = C14864 + C14865;
    const double C14973 = C14966 + C14967;
    const double C14968 = C14956 + C14957;
    const double C17175 = C17166 + C17167;
    const double C17172 = C17160 + C17161;
    const double C17284 = C17280 + C17281;
    const double C17391 = C17387 + C17388;
    const double C18106 = C18097 + C18098;
    const double C18103 = C18091 + C18092;
    const double C18213 = C18207 + C18208;
    const double C18322 = C18318 + C18319;
    const double C24870 = C24857 + C24858;
    const double C24867 = C24851 + C24852;
    const double C24862 = C24841 + C24842;
    const double C24859 = C24835 + C24836;
    const double C24964 = C24957 + C24958;
    const double C24959 = C24947 + C24948;
    const double C25056 = C25047 + C25048;
    const double C25055 = C25045 + C25046;
    const double C27565 = C27556 + C27557;
    const double C27562 = C27550 + C27551;
    const double C27674 = C27670 + C27671;
    const double C27779 = C27773 + C27774;
    const double C90061 = C90058 * ae;
    const double C58419 = (-C90033 / C89849) / C89854 - (C90058 * be) / C89849;
    const double C69718 = C69702 + C69703;
    const double C69710 = C69686 + C69687;
    const double C69810 = C69800 + C69801;
    const double C69902 = C69892 + C69893;
    const double C71974 = C71964 + C71965;
    const double C73026 = C73022 + C73023;
    const double C86239 = C86224 + C86225;
    const double C86236 = C86218 + C86219;
    const double C86235 = C86216 + C86217;
    const double C86232 = C86210 + C86211;
    const double C86328 = C86316 + C86317;
    const double C86422 = C86412 + C86413;
    const double C9955 = C9875 * C181;
    const double C10051 = C9875 * C244;
    const double C9971 = C9970 * C92105;
    const double C24258 = C24256 * C92084;
    const double C24257 = C24255 * C801;
    const double C24432 = C24255 * C244;
    const double C28685 = C28670 + C28671;
    const double C28682 = C28664 + C28665;
    const double C28681 = C28662 + C28663;
    const double C28678 = C28656 + C28657;
    const double C28779 = C28772 + C28773;
    const double C28774 = C28762 + C28763;
    const double C28871 = C28864 + C28865;
    const double C28866 = C28854 + C28855;
    const double C31075 = C31066 + C31067;
    const double C31072 = C31060 + C31061;
    const double C31184 = C31180 + C31181;
    const double C31291 = C31287 + C31288;
    const double C32054 = C32045 + C32046;
    const double C32051 = C32039 + C32040;
    const double C32161 = C32155 + C32156;
    const double C32270 = C32266 + C32267;
    const double C34436 = C34423 + C34424;
    const double C34433 = C34417 + C34418;
    const double C34428 = C34407 + C34408;
    const double C34425 = C34401 + C34402;
    const double C34526 = C34517 + C34518;
    const double C34525 = C34515 + C34516;
    const double C34620 = C34613 + C34614;
    const double C34615 = C34603 + C34604;
    const double C38017 = C38010 + C38011;
    const double C38014 = C38004 + C38005;
    const double C38122 = C38116 + C38117;
    const double C38231 = C38227 + C38228;
    const double C21191 = C21185 * C1988;
    const double C21339 = C21185 * C244;
    const double C36433 = C36431 * C1988;
    const double C36537 = C36431 * C181;
    const double C25403 = C25399 * C1988;
    const double C25609 = C25399 * C244;
    const double C26440 = C25399 * C181;
    const double C32705 = C32703 * C801;
    const double C32808 = C32703 * C2060;
    const double C35005 = C34997 + C34998;
    const double C67414 = C67282 * C181;
    const double C67417 = C67280 * C181;
    const double C55446 = C55182 * C244;
    const double C55449 = C55180 * C244;
    const double C24665 = C24661 * C92105;
    const double C37455 = C24661 * C1985;
    const double C37453 = C24661 * C1986;
    const double C24649 = C22514 * C92105;
    const double C27343 = C22514 * C1985;
    const double C27341 = C22514 * C1986;
    const double C24353 = C24349 + C24350;
    const double C21190 = C21184 * C1984;
    const double C20158 = C20150 * C92084;
    const double C21172 = C20150 * C1983;
    const double C26338 = C26336 * C1984;
    const double C24563 = C24555 * C92084;
    const double C36426 = C24555 * C1983;
    const double C22437 = C22431 * C92084;
    const double C25388 = C22431 * C1983;
    const double C419 = C415 * C92105;
    const double C2296 = C415 * C1985;
    const double C2303 = C2300 * C1986;
    const double C3019 = C3016 * C92105;
    const double C12092 = C3016 * C1985;
    const double C11265 = C11261 * C92105;
    const double C32807 = C11261 * C1985;
    const double C14052 = C14051 * C1986;
    const double C744 = C740 * C92116;
    const double C3356 = C740 * C2709;
    const double C2643 = C2640 * C92116;
    const double C8302 = C2640 * C2709;
    const double C5645 = C5641 * C92116;
    const double C19611 = C5641 * C2709;
    const double C3363 = C3360 * C2710;
    const double C9302 = C9301 * C2710;
    const double C423 = C421 * C92183;
    const double C9675 = C421 * C92337;
    const double C58266 = C421 * C57967;
    const double C503 = C501 * C92183;
    const double C9755 = C501 * C92337;
    const double C58343 = C501 * C57967;
    const double C121 = (3 * (C90126 + C90111 * C90145 + C90134 * ae) +
                         C90111 * (2 * C90145 + C90111 * C90184 + C90165 * ae) +
                         (2 * C90134 + C90111 * C90165) * ae) /
                        C89849;
    const double C814 =
        (C90253 * (2 * C90145 + C90111 * C90184 + C90165 * ae)) / C89849;
    const double C820 =
        (C90126 + C90111 * C90145 + C90134 * ae + C90184 * C90425) / C89849;
    const double C1398 =
        (C90311 * (2 * C90145 + C90111 * C90184 + C90165 * ae)) / C89849;
    const double C1404 =
        (C90126 + C90111 * C90145 + C90134 * ae + C90184 * C90547) / C89849;
    const double C3437 = (C90311 * C90253 * C90184) / C89849;
    const double C32382 = C32375 + C32376;
    const double C35531 = C35527 + C35528;
    const double C53324 = C53306 + C53307;
    const double C21193 = C21187 * C1988;
    const double C21342 = C21187 * C244;
    const double C25405 = C25401 * C1988;
    const double C25612 = C25401 * C244;
    const double C26438 = C25401 * C181;
    const double C40314 = C40312 * C1988;
    const double C40384 = C40312 * C181;
    const double C90239 = C90226 - C90236;
    const double C90737 = C90736 - C90733;
    const double C91135 = C90736 - C90283;
    const double C90759 = C90758 - C90755;
    const double C91564 = C90758 - C90341;
    const double C20162 = C20154 * C801;
    const double C20292 = C20154 * C244;
    const double C24560 = C24552 * C801;
    const double C24652 = C24552 * C181;
    const double C27450 = C24552 * C2850;
    const double C34104 = C24552 * C244;
    const double C37456 = C24552 * C2060;
    const double C22434 = C22428 * C801;
    const double C22596 = C22428 * C2850;
    const double C23921 = C22428 * C244;
    const double C27344 = C22428 * C2060;
    const double C39204 = C39202 * C801;
    const double C39261 = C39202 * C181;
    const double C826 =
        2 * ((-(C90253 * C90139 * ce) / C89890) / C89849 -
             (ae * C90253 * C90138) / C90112 - (C90111 * C90570) / C90112) -
        (ae * C90253 * C90183) / C90112 - (C90253 * C90184 * ce) / C90112 +
        C90111 * ((-(ae * C90253 * C90174) / C89890) / C89849 -
                  C90570 / C90112 - (C90253 * C90175 * ce) / C90112 +
                  C90111 * ((-(C90253 * C90166 * ce) / C89890) / C89849 -
                            (ae * C90253 * C90163) / C90112 -
                            (C90111 * C90253 * C90227) / C90112));
    const double C1410 =
        2 * ((-(C90311 * C90139 * ce) / C89890) / C89849 -
             (ae * C90311 * C90138) / C90112 - (C90111 * C90648) / C90112) -
        (ae * C90311 * C90183) / C90112 - (C90311 * C90184 * ce) / C90112 +
        C90111 * ((-(ae * C90311 * C90174) / C89890) / C89849 -
                  C90648 / C90112 - (C90311 * C90175 * ce) / C90112 +
                  C90111 * ((-(C90311 * C90166 * ce) / C89890) / C89849 -
                            (ae * C90311 * C90163) / C90112 -
                            (C90111 * C90311 * C90227) / C90112));
    const double C122 =
        (-3 * (C90111 * C90144 + C90125 + C90134 * ce)) / C89890 +
        C90111 * ((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
                  (C90165 * ce) / C89890) -
        ((2 * C90134 + C90111 * C90165) * ce) / C89890;
    const double C810 =
        C90253 * ((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
                  (C90165 * ce) / C89890);
    const double C824 =
        -(C90183 * C90425 + C90111 * C90144 + C90125 + C90134 * ce) / C89890;
    const double C1394 =
        C90311 * ((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
                  (C90165 * ce) / C89890);
    const double C1408 =
        -(C90183 * C90547 + C90111 * C90144 + C90125 + C90134 * ce) / C89890;
    const double C3441 = -(C90311 * C90253 * C90183) / C89890;
    const double C90217 = C90209 / C89849;
    const double C38012 = C38000 + C38001;
    const double C89618 = C89606 + C89607;
    const double C91167 = C91164 - C90398;
    const double C27567 = C27560 + C27561;
    const double C84489 = C84482 + C84483;
    const double C91595 = C91592 - C90499;
    const double C20518 = C20516 * C92084;
    const double C22881 = C22879 * C92084;
    const double C4907 = C4888 + C4889;
    const double C16836 = C16822 + C16823;
    const double C42335 = C42316 + C42317;
    const double C48734 = C48720 + C48721;
    const double C18761 = C18749 + C18750;
    const double C25400 = C25391 + C25392;
    const double C50620 = C50608 + C50609;
    const double C24553 = C24541 + C24542;
    const double C10850 = C10831 + C10832;
    const double C31408 = C31394 + C31395;
    const double C55594 = C55588 + C55589;
    const double C59421 = C59402 + C59403;
    const double C21192 = C21186 * C1984;
    const double C36434 = C36432 * C1984;
    const double C20160 = C20152 * C92084;
    const double C21178 = C20152 * C1983;
    const double C22435 = C22429 * C92084;
    const double C25394 = C22429 * C1983;
    const double C34718 = C34713 * C92084;
    const double C40307 = C34713 * C1983;
    const double C90244 = C90111 * C90241;
    const double C90863 = C90253 * C90241;
    const double C4870 =
        (2 * C90253 * C90184 + C90253 * (C90184 + C90241 * C90425)) / C89849;
    const double C8417 = (C90311 * (C90184 + C90241 * C90425)) / C89849;
    const double C10813 =
        (2 * C90311 * C90184 + C90311 * (C90184 + C90241 * C90547)) / C89849;
    const double C91216 = C90253 * C91212;
    const double C91660 = C90311 * C91657;
    const double C91038 = C91036 + C91028;
    const double C91471 = C91469 + C91464;
    const double C91037 = C91035 + C91025;
    const double C91470 = C91468 + C91461;
    const double C90243 = C90111 * C90240;
    const double C90878 = C90253 * C90240;
    const double C3446 =
        2 * ((-(C90311 * C90726 * ce) / C89890) / C89849 -
             (ae * C90311 * C90727) / C90112 - (C90111 * C90773) / C90112) -
        (ae * C90311 * C90253 * C90240) / C90112 -
        (C90311 * C90253 * C90241 * ce) / C90112 +
        C90111 *
            ((-(ae * C90311 * C90253 * C90228) / C89890) / C89849 -
             C90773 / C90112 - (C90311 * C90253 * C90231 * ce) / C90112 +
             C90111 *
                 ((-(C90311 * C90253 * C90215 * ce) / C89890) / C89849 -
                  (ae * C90311 * C90253 * C90212) / C90112 -
                  (C90111 * C90311 * C90253 *
                   (C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                   C90120) /
                      C90112));
    const double C4873 = (-2 * C90253 * C90183) / C89890 -
                         (C90253 * (C90240 * C90425 + C90183)) / C89890;
    const double C8420 = -(C90311 * (C90240 * C90425 + C90183)) / C89890;
    const double C10816 = (-2 * C90311 * C90183) / C89890 -
                          (C90311 * (C90240 * C90547 + C90183)) / C89890;
    const double C91215 = C90253 * C91211;
    const double C91659 = C90311 * C91656;
    const double C90581 = C90580 / C89849;
    const double C90659 = C90658 / C89849;
    const double C32384 = C32379 + C32380;
    const double C35532 = C35529 + C35530;
    const double C53322 = C53302 + C53303;
    const double C34711 = C34701 + C34702;
    const double C90445 = C90444 / C89849;
    const double C91288 = C91287 / C89849;
    const double C90567 = C90566 / C89849;
    const double C91273 = C91272 / C89849;
    const double C91555 = C91553 + C91545;
    const double C91554 = C91552 + C91542;
    const double C667 = C663 * C92105;
    const double C90302 = C90299 - C90283;
    const double C15930 = C15927 + C15928;
    const double C31182 = C31176 + C31177;
    const double C56549 = C56546 + C56547;
    const double C67831 = C67828 + C67829;
    const double C72082 = C72076 + C72077;
    const double C18528 = C18526 + C18527;
    const double C26126 = C26123 + C26124;
    const double C64553 = C64546 + C64547;
    const double C15396 =
        (-3 * (C90253 * C90822 + C90259 + C90820 * ce)) / C89890 +
        C90253 * ((-2 * C90822) / C89890 - (C90253 * C91013) / C89890 -
                  (C91003 * ce) / C89890) -
        ((2 * C90820 + C90253 * C91003) * ce) / C89890;
    const double C16177 =
        -(C91013 * C90547 + C90253 * C90822 + C90259 + C90820 * ce) / C89890;
    const double C18862 =
        C90311 * ((-2 * C90822) / C89890 - (C90253 * C91013) / C89890 -
                  (C91003 * ce) / C89890);
    const double C24639 = (-2 * C90311 * C91013) / C89890 -
                          (C90311 * (C91211 * C90547 + C91013)) / C89890;
    const double C91203 = C91196 / C89849;
    const double C91614 = C91611 - C90537;
    const double C39264 = C39263 * C92105;
    const double C500 = C496 * C92116;
    const double C90360 = C90357 - C90341;
    const double C30125 = C30122 + C30123;
    const double C20300 = C20296 * C92116;
    const double C27451 = C24756 * C2710;
    const double C34103 = C24756 * C92116;
    const double C22604 = C22601 * C2710;
    const double C23920 = C22601 * C92116;
    const double C91241 = C91238 - C90461;
    const double C34892 = C34889 + C34890;
    const double C91646 = C91635 / C89849;
    const double C29836 =
        (-3 * (C90311 * C90946 + C90317 + C90944 * ce)) / C89890 +
        C90311 * ((-2 * C90946) / C89890 - (C90311 * C91446) / C89890 -
                  (C91442 * ce) / C89890) -
        ((2 * C90944 + C90311 * C91442) * ce) / C89890;
    const double C412 = C343 * C181;
    const double C492 = C343 * C244;
    const double C2297 = C2216 * C2060;
    const double C2375 = C2216 * C244;
    const double C3013 = C2938 * C181;
    const double C3101 = C2938 * C2850;
    const double C9759 = C2938 * C244;
    const double C12993 = C2938 * C1988;
    const double C11164 = C11156 * C801;
    const double C11251 = C11156 * C181;
    const double C13200 = C11156 * C2850;
    const double C28574 = C11156 * C244;
    const double C31738 = C11156 * C1988;
    const double C12098 = C11991 * C2060;
    const double C12205 = C11991 * C244;
    const double C13942 = C11991 * C801;
    const double C91210 = C91204 - C91189;
    const double C90416 = C90413 - C90398;
    const double C91022 = C90413 - C91016;
    const double C5264 =
        2 * ((-(C90382 * ce) / C89890) / C89849 - (ae * C90267) / C90112 -
             (C90253 * C90825) / C90112) -
        (ae * (C90253 * C90829 + C90267 + C90827 * ce)) / C90112 -
        ((C90382 + C90253 * C90830 + C90827 * ae) * ce) / C90112 +
        C90253 * ((-(ae * C90829) / C89890) / C89849 - C90825 / C90112 -
                  (C90830 * ce) / C90112 +
                  C90253 * (C90413 - C90287 / C90112 -
                            (C90253 * C90111 * C90441) / C90112));
    const double C30961 = C30960 * C92116;
    const double C17174 = C17164 + C17165;
    const double C49072 = C49062 + C49063;
    const double C30752 = C30748 + C30749;
    const double C36747 = C36739 + C36740;
    const double C53690 = C53672 + C53673;
    const double C18105 = C18095 + C18096;
    const double C49990 = C49980 + C49981;
    const double C54775 = C54768 + C54769;
    const double C66081 = C66074 + C66075;
    const double C19192 =
        2 * ((-(C90311 * C90380 * ce) / C89890) / C89849 -
             (ae * C90311 * C90265) / C90112 - (C90253 * C91111) / C90112) -
        (ae * C90311 * C91013) / C90112 - (C90311 * C91014 * ce) / C90112 +
        C90253 * ((-(ae * C90311 * C91001) / C89890) / C89849 -
                  C91111 / C90112 - (C90311 * C91004 * ce) / C90112 +
                  C90253 * ((-(C90311 * C90388 * ce) / C89890) / C89849 -
                            (ae * C90311 * C90273) / C90112 -
                            (C90253 * C90311 * C90441) / C90112));
    const double C15593 =
        (3 * (C90374 + C90253 * C90823 + C90820 * ae) +
         C90253 * (2 * C90823 + C90253 * C91014 + C91003 * ae) +
         (2 * C90820 + C90253 * C91003) * ae) /
        C89849;
    const double C16333 =
        (C90374 + C90253 * C90823 + C90820 * ae + C91014 * C90547) / C89849;
    const double C19090 =
        (C90311 * (2 * C90823 + C90253 * C91014 + C91003 * ae)) / C89849;
    const double C24831 =
        (2 * C90311 * C91014 + C90311 * (C91014 + C91212 * C90547)) / C89849;
    const double C41130 = C41128 * C801;
    const double C41200 = C41128 * C2060;
    const double C91301 = C91299 - C90461;
    const double C91324 = C91299 - C91322;
    const double C39380 = C39378 * C801;
    const double C39435 = C39378 * C181;
    const double C30857 = C30855 + C30856;
    const double C36853 = C36849 + C36850;
    const double C53808 = C53798 + C53799;
    const double C18215 = C18211 + C18212;
    const double C50100 = C50096 + C50097;
    const double C54912 = C54908 + C54909;
    const double C66218 = C66214 + C66215;
    const double C30040 = C30034 + C30035;
    const double C420 = C416 * C92105;
    const double C2304 = C2301 * C1986;
    const double C4461 = C4457 + C4458;
    const double C3020 = C3017 * C92105;
    const double C12097 = C3017 * C1985;
    const double C11264 = C11260 * C92105;
    const double C30853 = C11260 * C1985;
    const double C67416 = C7872 + C7871;
    const double C67415 = C7871 + C7872;
    const double C12103 = C12101 * C1986;
    const double C32812 = C32811 * C1986;
    const double C35104 = C35100 + C35101;
    const double C30043 = C30041 * C92105;
    const double C41199 = C30041 * C1985;
    const double C659 = C590 * C181;
    const double C737 = C590 * C244;
    const double C2553 = C2472 * C2060;
    const double C2631 = C2472 * C244;
    const double C4715 = C2472 * C181;
    const double C7140 = C2472 * C1988;
    const double C5455 = C5447 * C801;
    const double C5631 = C5447 * C244;
    const double C7246 = C5447 * C2060;
    const double C15125 = C5447 * C181;
    const double C17496 = C5447 * C1988;
    const double C3269 = C3194 * C181;
    const double C3357 = C3194 * C2850;
    const double C8196 = C8093 * C181;
    const double C8308 = C8093 * C2850;
    const double C9080 = C8093 * C801;
    const double C91655 = C91651 - C91638;
    const double C90517 = C90514 - C90499;
    const double C91453 = C90514 - C91049;
    const double C11586 =
        2 * ((-(C90483 * ce) / C89890) / C89849 - (ae * C90325) / C90112 -
             (C90311 * C90850) / C90112) -
        (ae * (C90311 * C90952 + C90325 + C90950 * ce)) / C90112 -
        ((C90483 + C90311 * C90953 + C90950 * ae) * ce) / C90112 +
        C90311 * ((-(ae * C90952) / C89890) / C89849 - C90850 / C90112 -
                  (C90953 * ce) / C90112 +
                  C90311 * (C90514 - C90345 / C90112 -
                            (C90311 * C90111 * C90563) / C90112));
    const double C32053 = C32043 + C32044;
    const double C72916 = C72906 + C72907;
    const double C20519 = C20517 * C801;
    const double C20629 = C20517 * C244;
    const double C22882 = C22880 * C801;
    const double C23022 = C22880 * C2850;
    const double C91266 = C91264 - C90537;
    const double C91539 = C91264 - C91533;
    const double C25286 =
        2 * ((-(C90884 * ce) / C89890) / C89849 - (ae * C90883) / C90112 -
             (C90311 * C91355) / C90112) -
        (ae * (C90311 * C91359 + C90883 + C91357 * ce)) / C90112 -
        ((C90884 + C90311 * C91360 + C91357 * ae) * ce) / C90112 +
        C90311 * ((-(ae * C91359) / C89890) / C89849 - C91355 / C90112 -
                  (C91360 * ce) / C90112 +
                  C90311 * (C91264 - C91227 / C90112 -
                            (C90311 * C90253 * C90563) / C90112));
    const double C38015 = C38006 + C38007;
    const double C89621 = C89612 + C89613;
    const double C30199 =
        (3 * (C90475 + C90311 * C90947 + C90944 * ae) +
         C90311 * (2 * C90947 + C90311 * C91451 + C91442 * ae) +
         (2 * C90944 + C90311 * C91442) * ae) /
        C89849;
    const double C20631 = C20627 + C20628;
    const double C28122 = C28116 + C28117;
    const double C34618 = C34609 + C34610;
    const double C85020 = C85016 + C85017;
    const double C86423 = C86414 + C86415;
    const double C23025 = C23023 + C23024;
    const double C24445 = C24437 + C24438;
    const double C81574 = C81569 + C81570;
    const double C16017 = C16009 + C16010;
    const double C31289 = C31283 + C31284;
    const double C56684 = C56680 + C56681;
    const double C67966 = C67962 + C67963;
    const double C72189 = C72183 + C72184;
    const double C18633 = C18631 + C18632;
    const double C26230 = C26227 + C26228;
    const double C64666 = C64656 + C64657;
    const double C745 = C741 * C92116;
    const double C2642 = C2639 * C92116;
    const double C8307 = C2639 * C2709;
    const double C5644 = C5640 * C92116;
    const double C18629 = C5640 * C2709;
    const double C3364 = C3361 * C2710;
    const double C10066 = C10062 + C10063;
    const double C8313 = C8311 * C2710;
    const double C55448 = C12553 + C12554;
    const double C55447 = C12554 + C12553;
    const double C16021 = C16018 * C92116;
    const double C23021 = C16018 * C2709;
    const double C19616 = C19615 * C2710;
    const double C24447 = C24443 + C24444;
    const double C129 =
        3 * ((-(ae * C90144) / C89890) / C89849 - C90143 / C90112 -
             (C90145 * ce) / C90112 + C90111 * C90182) +
        (((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
          (C90165 * ce) / C89890) *
         ae) /
            C89849 -
        ((2 * C90145 + C90111 * C90184 + C90165 * ae) * ce) / C90112 +
        C90111 * (2 * C90182 - (ae * C90183) / C90112 - (C90184 * ce) / C90112 +
                  C90111 * ((-(ae * C90174) / C89890) / C89849 -
                            C90173 / C90112 - (C90175 * ce) / C90112 +
                            C90111 * ((-(C90166 * ce) / C89890) / C89849 -
                                      (ae * C90163) / C90112 -
                                      (C90111 *
                                       (C90150 * C90151 +
                                        C90119 * bs[6] * std::pow(C90109, 6)) *
                                       C90120) /
                                          C90112)));
    const double C15671 =
        3 * ((-(ae * C90822) / C89890) / C89849 - C90430 / C90112 -
             (C90823 * ce) / C90112 + C90253 * C91012) +
        (((-2 * C90822) / C89890 - (C90253 * C91013) / C89890 -
          (C91003 * ce) / C89890) *
         ae) /
            C89849 -
        ((2 * C90823 + C90253 * C91014 + C91003 * ae) * ce) / C90112 +
        C90253 * (2 * C91012 - (ae * C91013) / C90112 - (C91014 * ce) / C90112 +
                  C90253 * ((-(ae * C91001) / C89890) / C89849 - C90438 -
                            (C91004 * ce) / C90112 +
                            C90253 * ((-C90400 / C89890) / C89849 - C90289 -
                                      (C90253 * C90441) / C90112)));
    const double C30353 =
        3 * ((-(ae * C90946) / C89890) / C89849 - C90552 / C90112 -
             (C90947 * ce) / C90112 + C90311 * C91450) +
        (((-2 * C90946) / C89890 - (C90311 * C91446) / C89890 -
          (C91442 * ce) / C89890) *
         ae) /
            C89849 -
        ((2 * C90947 + C90311 * C91451 + C91442 * ae) * ce) / C90112 +
        C90311 * (2 * C91450 - (ae * C91446) / C90112 - (C91451 * ce) / C90112 +
                  C90311 * ((-C91330 / C89890) / C89849 - C90560 -
                            (C91443 * ce) / C90112 +
                            C90311 * ((-C90501 / C89890) / C89849 - C90347 -
                                      (C90311 * C90563) / C90112)));
    const double C192 =
        3 * ((-(ae * C90267) / C89890) / C89849 - C90264 / C90112 +
             C90111 * C90280) +
        (((-2 * C90267) / C89890 - (C90111 * C90277) / C89890) * ae) / C89849 +
        C90111 *
            (2 * C90280 - (ae * C90277) / C90112 +
             C90111 *
                 ((-(ae * C90111 * C90273) / C89890) / C89849 -
                  C90271 / C90112 +
                  C90111 * ((-(C90111 * C90193 * C90192 * C90260) / C89890) /
                                C89849 -
                            (ae * C90273) / C90112)));
    const double C896 =
        C90253 * ((-(ae * C90267) / C89890) / C89849 - C90264 / C90112 +
                  C90111 * C90280) -
        ((C90126 + C90111 * C90145 + C90134 * ae) * ce) / C90112;
    const double C900 = (-(C90111 * C90264) / C89890) / C89849 -
                        (ae * C90259) / C90112 -
                        (C90253 * C90145 * ce) / C90112 +
                        C90253 * (C90253 * C90280 - (C90145 * ce) / C90112);
    const double C1477 = C90311 * ((-(ae * C90267) / C89890) / C89849 -
                                   C90264 / C90112 + C90111 * C90280);
    const double C1481 = (-(C90111 * C90264) / C89890) / C89849 -
                         (ae * C90259) / C90112 + C90280 * C90547;
    const double C3518 = C90311 * (C90253 * C90280 - (C90145 * ce) / C90112);
    const double C15398 =
        3 * ((-(C90859 * ce) / C89890) / C89849 - C90264 / C90112 +
             C90253 * C90970) -
        ((2 * C90859 + C90253 * C90967) * ce) / C90112 +
        C90253 * (2 * C90970 - (C90967 * ce) / C90112 +
                  C90253 * (C90736 - C90283 +
                            C90253 * ((-(C90253 * C90288) / C89890) / C89849 -
                                      C90189 / C90112)));
    const double C16179 =
        (-(C90859 * ce) / C89890) / C89849 - C90264 / C90112 + C90253 * C90970 +
        (C90736 - C90283 +
         C90253 * ((-(C90253 * C90288) / C89890) / C89849 - C90189 / C90112)) *
            C90547;
    const double C18864 =
        C90311 * (2 * C90970 - (C90967 * ce) / C90112 +
                  C90253 * (C90736 - C90283 +
                            C90253 * ((-(C90253 * C90288) / C89890) / C89849 -
                                      C90189 / C90112)));
    const double C90307 = C90111 * C90305;
    const double C90972 = C90253 * C90305;
    const double C4991 = 2 * (C90253 * C90280 - (C90145 * ce) / C90112) -
                         ((C90145 + C90175 * C90425) * ce) / C90112 +
                         C90253 * (C90280 - (C90253 * C90175 * ce) / C90112 +
                                   C90253 * (C90253 * C90305 - C90198));
    const double C5809 = C90253 * C90280 - (C90145 * ce) / C90112 +
                         (C90253 * C90305 - C90198) * C90547;
    const double C8544 = C90311 * (C90280 - (C90861 * ce) / C90112 +
                                   C90253 * (C90253 * C90305 - C90198));
    const double C10934 =
        2 * C90311 * C90280 + C90311 * (C90280 + C90305 * C90547);
    const double C29738 =
        3 * (C90280 + C90305 * C90547) +
        C90311 *
            (2 * C90311 * C90305 +
             C90311 *
                 (C90305 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (ae * C90291) / C90112) *
                      C90547));
    const double C91147 = C90253 * C91146;
    const double C24640 =
        2 * C90311 * C90970 + C90311 * (C90970 + C91146 * C90547);
    const double C34794 =
        3 * (C90970 + C91146 * C90547) +
        C90311 *
            (2 * C90311 * C91146 +
             C90311 *
                 (C91146 +
                  ((-(C90253 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (C90215 * ce) / C90112) *
                      C90547));
    const double C39255 =
        4 * ((-2 * C90311 * C90271) / C90112 + C90311 * C91562) +
        C90311 * (3 * C91562 + C90311 * ((-2 * C90311 * C90288) / C90112 +
                                         C90311 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90260 * C90547) /
                                                    C89890) /
                                                       C89849 -
                                                   C90288 / C90112)));
    const double C318 =
        3 * ((-(C90382 * ce) / C89890) / C89849 - C90379 / C90112 +
             C90111 * C90395) -
        ((2 * C90382 + C90111 * C90392) * ce) / C90112 +
        C90111 *
            (2 * C90395 - (C90392 * ce) / C90112 +
             C90111 *
                 ((-(C90111 * C90388 * ce) / C89890) / C89849 -
                  C90386 / C90112 +
                  C90111 * ((-(C90111 * C90193 * C90192 * C90375) / C89890) /
                                C89849 -
                            (C90388 * ce) / C90112)));
    const double C1028 =
        C90253 * ((-(C90382 * ce) / C89890) / C89849 - C90379 / C90112 +
                  C90111 * C90395) -
        (ae * (C90111 * C90144 + C90125 + C90134 * ce)) / C90112;
    const double C1032 = (-(C90111 * C90379) / C89890) / C89849 -
                         (C90374 * ce) / C90112 -
                         (ae * C90253 * C90144) / C90112 +
                         C90253 * (C90253 * C90395 - (ae * C90144) / C90112);
    const double C1612 = C90311 * ((-(C90382 * ce) / C89890) / C89849 -
                                   C90379 / C90112 + C90111 * C90395);
    const double C1616 = (-(C90111 * C90379) / C89890) / C89849 -
                         (C90374 * ce) / C90112 + C90395 * C90547;
    const double C3666 =
        C90253 * C90311 * C90395 - (ae * C90311 * C90144) / C90112;
    const double C15595 =
        3 * ((-(ae * C90874) / C89890) / C89849 - C90379 / C90112 +
             C90253 * C90985) +
        (((-2 * C90874) / C89890 - (C90253 * C90982) / C89890) * ae) / C89849 +
        C90253 * (2 * C90985 - (ae * C90982) / C90112 +
                  C90253 * ((-C90730 / C89890) / C89849 - C90398 +
                            C90253 * ((-(C90253 * C90403) / C89890) / C89849 -
                                      C90200)));
    const double C90420 = C90111 * C90419;
    const double C90987 = C90253 * C90419;
    const double C91109 = C90311 * C90419;
    const double C5187 =
        2 * (C90253 * C90395 - (ae * C90144) / C90112) -
        (ae * (C90174 * C90425 + C90144)) / C90112 +
        C90253 * (C90395 - (ae * C90253 * C90174) / C90112 +
                  C90253 * (C90253 * C90419 - C90186 / C90112));
    const double C5969 = C90253 * (C90395 + C90419 * C90547) -
                         (ae * (C90174 * C90547 + C90144)) / C90112;
    const double C8770 =
        C90311 * C90395 - (ae * C90311 * C90876) / C90112 +
        C90253 * (C90253 * C90311 * C90419 - (ae * C90311 * C90174) / C90112);
    const double C11130 =
        2 * C90311 * C90395 + C90311 * (C90395 + C90419 * C90547);
    const double C16336 =
        C90395 + C90419 * C90547 -
        (ae * (C90253 * C90228 * C90547 + C90876)) / C90112 +
        C90253 *
            (C90253 *
                 (C90419 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) / C89890) /
                       C89849 -
                   (C90406 * ce) / C90112) *
                      C90547) -
             (ae * (C90228 * C90547 + C90174)) / C90112);
    const double C91172 = C90253 * C91170;
    const double C20841 =
        2 * (C90253 * C91283 - (ae * (C90163 * C90547 + C90138)) / C90112) -
        (ae * (C91163 * C90547 + C90982)) / C90112 +
        C90253 *
            (C91283 - (ae * (C90253 * C90212 * C90547 + C90727)) / C90112 +
             C90253 *
                 (C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90375 * C90547) /
                             C89890) /
                                C89849 -
                            C90403 / C90112) -
                  (ae * (C90212 * C90547 + C90163)) / C90112));
    const double C24832 = (((-2 * C90311 * C90138) / C89890 -
                            (C90311 * (C90163 * C90547 + C90138)) / C89890) *
                           ae) /
                              C89849 +
                          C90253 * ((-2 * C91107) / C90112 + C90311 * C91283);
    const double C24833 =
        (-2 * C91107) / C90112 + C90311 * C91283 +
        (((-2 * C90311 * C90727) / C89890 -
          (C90311 * (C90253 * C90212 * C90547 + C90727)) / C89890) *
         ae) /
            C89849 +
        C90253 *
            ((((-2 * C90749) / C89890 -
               (C90311 * (C90212 * C90547 + C90163)) / C89890) *
              ae) /
                 C89849 +
             C90253 *
                 ((-2 * C91311) / C90112 +
                  C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90375 * C90547) /
                             C89890) /
                                C89849 -
                            C90403 / C90112)));
    const double C29935 =
        3 * ((-(C90386 * C90547) / C89890) / C89849 - C90379 / C90112) +
        C90311 * ((-2 * C91107) / C90112 + C90311 * C91283);
    const double C34967 =
        (((-3 * C91403) / C89890 +
          C90311 * ((-2 * C90749) / C89890 -
                    (C90311 * (C90212 * C90547 + C90163)) / C89890)) *
         ae) /
            C89849 +
        C90253 * (3 * C91283 + C90311 * ((-2 * C91311) / C90112 +
                                         C90311 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90375 * C90547) /
                                                    C89890) /
                                                       C89849 -
                                                   C90403 / C90112)));
    const double C39370 =
        4 * ((-2 * C91107) / C90112 + C90311 * C91283) +
        C90311 * (3 * C91283 + C90311 * ((-2 * C91311) / C90112 +
                                         C90311 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90375 * C90547) /
                                                    C89890) /
                                                       C89849 -
                                                   C90403 / C90112)));
    const double C91316 = C91315 - C90755;
    const double C255 =
        3 * ((-(ae * C90325) / C89890) / C89849 - C90322 / C90112 +
             C90111 * C90338) +
        (((-2 * C90325) / C89890 - (C90111 * C90335) / C89890) * ae) / C89849 +
        C90111 *
            (2 * C90338 - (ae * C90335) / C90112 +
             C90111 *
                 ((-(ae * C90111 * C90331) / C89890) / C89849 -
                  C90329 / C90112 +
                  C90111 * ((-(C90111 * C90193 * C90192 * C90318) / C89890) /
                                C89849 -
                            (ae * C90331) / C90112)));
    const double C962 = C90253 * ((-(ae * C90325) / C89890) / C89849 -
                                  C90322 / C90112 + C90111 * C90338);
    const double C966 = (-(C90111 * C90322) / C89890) / C89849 -
                        (ae * C90317) / C90112 + C90338 * C90425;
    const double C1546 =
        C90311 * ((-(ae * C90325) / C89890) / C89849 - C90322 / C90112 +
                  C90111 * C90338) -
        ((C90126 + C90111 * C90145 + C90134 * ae) * ce) / C90112;
    const double C1550 = (-(C90111 * C90322) / C89890) / C89849 -
                         (ae * C90317) / C90112 -
                         (C90311 * C90145 * ce) / C90112 +
                         C90311 * (C90311 * C90338 - (C90145 * ce) / C90112);
    const double C3592 =
        C90311 * C90253 * C90338 - (C90253 * C90145 * ce) / C90112;
    const double C29838 =
        3 * ((-(C91372 * ce) / C89890) / C89849 - C90322 / C90112 +
             C90311 * C91379) -
        ((2 * C91372 + C90311 * C91376) * ce) / C90112 +
        C90311 * (2 * C91379 - (C91376 * ce) / C90112 +
                  C90311 * (C90758 - C90341 +
                            C90311 * ((-(C90311 * C90346) / C89890) / C89849 -
                                      C91137)));
    const double C90365 = C90111 * C90363;
    const double C91382 = C90311 * C90363;
    const double C91475 = C90253 * C90363;
    const double C5089 =
        2 * C90253 * C90338 + C90253 * (C90338 + C90363 * C90425);
    const double C5889 =
        C90253 * C90338 - (C90311 * C90861 * ce) / C90112 +
        C90311 * (C90311 * C90253 * C90363 - (C90861 * ce) / C90112);
    const double C8657 = C90311 * (C90338 + C90363 * C90425) -
                         ((C90145 + C90175 * C90425) * ce) / C90112;
    const double C11032 = 2 * (C90311 * C90338 - (C90145 * ce) / C90112) -
                          ((C90145 + C90175 * C90547) * ce) / C90112 +
                          C90311 * (C90338 - (C90311 * C90175 * ce) / C90112 +
                                    C90311 * (C90311 * C90363 - C90198));
    const double C15496 =
        3 * (C90338 + C90363 * C90425) +
        C90253 *
            (2 * C90253 * C90363 +
             C90253 *
                 (C90363 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) / C89890) /
                       C89849 -
                   (ae * C90349) / C90112) *
                      C90425));
    const double C16258 =
        C90338 + C90363 * C90425 - (C90311 * C90975 * ce) / C90112 +
        C90311 *
            (C90311 *
                 (C90363 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) / C89890) /
                       C89849 -
                   (ae * C90349) / C90112) *
                      C90425) -
             (C90975 * ce) / C90112);
    const double C18979 =
        C90311 *
            (2 * C90253 * C90363 +
             C90253 *
                 (C90363 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) / C89890) /
                       C89849 -
                   (ae * C90349) / C90112) *
                      C90425)) -
        ((2 * C90861 + C90253 * C90975) * ce) / C90112;
    const double C20279 =
        4 * ((-2 * C90253 * C90329) / C90112 + C90253 * C91154) +
        C90253 * (3 * C91154 + C90253 * ((-2 * C90253 * C90346) / C90112 +
                                         C90253 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90318 * C90425) /
                                                    C89890) /
                                                       C89849 -
                                                   C90346 / C90112)));
    const double C20789 =
        (-2 * C90253 * C90329) / C90112 + C90253 * C91154 -
        (C90311 * C91145 * ce) / C90112 +
        C90311 *
            (C90311 *
                 ((-2 * C90253 * C90346) / C90112 +
                  C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90318 * C90425) /
                             C89890) /
                                C89849 -
                            C90346 / C90112)) -
             (C91145 * ce) / C90112);
    const double C22582 =
        C90311 * (3 * C91154 + C90253 * ((-2 * C90253 * C90346) / C90112 +
                                         C90253 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90318 * C90425) /
                                                    C89890) /
                                                       C89849 -
                                                   C90346 / C90112))) -
        ((3 * C90967 + C90253 * C91145) * ce) / C90112;
    const double C24743 =
        2 * (C90311 * C91154 - (C90967 * ce) / C90112) -
        ((C90967 + C91141 * C90547) * ce) / C90112 +
        C90311 *
            (C91154 - (C90311 * C91141 * ce) / C90112 +
             C90311 *
                 (C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90318 * C90425) /
                             C89890) /
                                C89849 -
                            C90346 / C90112) -
                  (C91141 * ce) / C90112));
    const double C91506 = C91505 - C91498;
    const double C91575 = C90311 * C91574;
    const double C504 = C502 * C92183;
    const double C15747 =
        3 * ((-(ae * C90883) / C89890) / C89849 - C90455 / C90112 +
             C90253 * C91046) +
        (((-2 * C90883) / C89890 - (C90253 * C91043) / C89890) * ae) / C89849 +
        C90253 *
            (2 * C91046 - (ae * C91043) / C90112 +
             C90253 *
                 ((-(ae * C90253 * C90331) / C89890) / C89849 - C90461 +
                  C90253 * ((-(C90253 * C90462) / C89890) / C89849 - C90347)));
    const double C19292 =
        2 * (C90253 * C91119 - (ae * C90946) / C90112) -
        (ae * (C90311 * C91043 + C91003 * ce)) / C90112 +
        C90253 * (C91119 - (ae * (C90311 * C90253 * C90331 + C91002)) / C90112 +
                  C90253 * (C90253 * ((-(C90311 * C90462) / C89890) / C89849 -
                                      C90404) -
                            (ae * (C90311 * C90331 + C90156)) / C90112));
    const double C9761 = C9760 * C92195;
    const double C58344 = C9760 * C92195;
    const double C479 =
        4 * ((-2 * C90111 * C90458) / C90112 + C90111 * C90467) +
        C90111 * (3 * C90467 + C90111 * ((-2 * C90111 * C90462) / C90112 +
                                         C90111 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90452 * C90119) /
                                                    C89890) /
                                                       C89849 -
                                                   C90462 / C90112)));
    const double C1143 =
        (((-2 * C90325) / C89890 - (C90111 * C90335) / C89890) * ae) / C89849 +
        C90253 * ((-2 * C90111 * C90458) / C90112 + C90111 * C90467);
    const double C1149 = (-(C90458 * C90119) / C89890) / C89849 -
                         C90455 / C90112 - (ae * C90253 * C90335) / C90112 +
                         C90253 * (C90253 * C90467 - (ae * C90335) / C90112);
    const double C1150 =
        (-2 * C90111 * C90458) / C90112 + C90111 * C90467 +
        (C90253 * C90364 * ae) / C89849 +
        C90253 *
            ((C90364 * ae) / C89849 +
             C90253 *
                 ((-2 * C90111 * C90462) / C90112 +
                  C90111 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112)));
    const double C1732 = (-(C90458 * C90119) / C89890) / C89849 -
                         C90455 / C90112 - (C90311 * C90392 * ce) / C90112 +
                         C90311 * (C90311 * C90467 - (C90392 * ce) / C90112);
    const double C1733 =
        C90311 * ((-2 * C90111 * C90458) / C90112 + C90111 * C90467) -
        ((2 * C90382 + C90111 * C90392) * ce) / C90112;
    const double C1734 =
        (-2 * C90111 * C90458) / C90112 + C90111 * C90467 -
        (C90311 * C90418 * ce) / C90112 +
        C90311 *
            (C90311 *
                 ((-2 * C90111 * C90462) / C90112 +
                  C90111 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112)) -
             (C90418 * ce) / C90112);
    const double C2371 =
        (((-3 * C90335) / C89890 + C90111 * C90364) * ae) / C89849 +
        C90253 * (3 * C90467 + C90111 * ((-2 * C90111 * C90462) / C90112 +
                                         C90111 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90452 * C90119) /
                                                    C89890) /
                                                       C89849 -
                                                   C90462 / C90112)));
    const double C3087 =
        C90311 * (3 * C90467 + C90111 * ((-2 * C90111 * C90462) / C90112 +
                                         C90111 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90452 * C90119) /
                                                    C89890) /
                                                       C89849 -
                                                   C90462 / C90112))) -
        ((3 * C90392 + C90111 * C90418) * ce) / C90112;
    const double C3807 = C90253 * (C90311 * C90467 - (C90392 * ce) / C90112) -
                         (ae * (C90311 * C90335 + C90165 * ce)) / C90112;
    const double C5342 =
        2 * (C90253 * C90467 - (ae * C90335) / C90112) -
        (ae * (C90356 * C90425 + C90335)) / C90112 +
        C90253 *
            (C90467 - (ae * C90253 * C90356) / C90112 +
             C90253 *
                 (C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112) -
                  (ae * C90356) / C90112));
    const double C6124 =
        C90253 *
            (C90467 - (C90311 * C90412 * ce) / C90112 +
             C90311 *
                 (C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112) -
                  (C90412 * ce) / C90112)) -
        (ae * (C90311 * (C90311 * C90356 + C90221) + C90335 +
               C90311 * C90214 * ce)) /
            C90112;
    const double C8973 =
        C90311 * C90467 - (C90392 * ce) / C90112 -
        (ae * (C90311 * C90889 + C90833 * ce)) / C90112 +
        C90253 *
            (C90253 *
                 (C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112) -
                  (C90412 * ce) / C90112) -
             (ae * (C90311 * C90356 + C90221)) / C90112);
    const double C11341 =
        2 * (C90311 * C90467 - (C90392 * ce) / C90112) -
        ((C90392 + C90412 * C90547) * ce) / C90112 +
        C90311 *
            (C90467 - (C90311 * C90412 * ce) / C90112 +
             C90311 *
                 (C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90452 * C90119) /
                             C89890) /
                                C89849 -
                            C90462 / C90112) -
                  (C90412 * ce) / C90112));
    const double C91057 = C91056 - C91049;
    const double C91126 = C91125 - C91122;
    const double C91242 = C90253 * C91239;
    const double C91302 = C90311 * C91300;
    const double C91327 = C90253 * C91300;
    const double C15838 = C15828 * C92322;
    const double C20509 = C15828 * C92067;
    const double C47798 = C15828 * C46523;
    const double C565 =
        3 * ((-(C90483 * ce) / C89890) / C89849 - C90480 / C90112 +
             C90111 * C90496) -
        ((2 * C90483 + C90111 * C90493) * ce) / C90112 +
        C90111 *
            (2 * C90496 - (C90493 * ce) / C90112 +
             C90111 *
                 ((-(C90111 * C90489 * ce) / C89890) / C89849 -
                  C90487 / C90112 +
                  C90111 * ((-(C90111 * C90193 * C90192 * C90476) / C89890) /
                                C89849 -
                            (C90489 * ce) / C90112)));
    const double C1210 = C90253 * ((-(C90483 * ce) / C89890) / C89849 -
                                   C90480 / C90112 + C90111 * C90496);
    const double C1214 = (-(C90111 * C90480) / C89890) / C89849 -
                         (C90475 * ce) / C90112 + C90496 * C90425;
    const double C1794 =
        C90311 * ((-(C90483 * ce) / C89890) / C89849 - C90480 / C90112 +
                  C90111 * C90496) -
        (ae * (C90111 * C90144 + C90125 + C90134 * ce)) / C90112;
    const double C1798 = (-(C90111 * C90480) / C89890) / C89849 -
                         (C90475 * ce) / C90112 -
                         (ae * C90311 * C90144) / C90112 +
                         C90311 * (C90311 * C90496 - (ae * C90144) / C90112);
    const double C3880 =
        C90311 * C90253 * C90496 - (ae * C90253 * C90144) / C90112;
    const double C30201 =
        3 * ((-(ae * C91399) / C89890) / C89849 - C90480 / C90112 +
             C90311 * C91406) +
        (((-2 * C91399) / C89890 - (C90311 * C91403) / C89890) * ae) / C89849 +
        C90311 * (2 * C91406 - (ae * C91403) / C90112 +
                  C90311 * ((-C90752 / C89890) / C89849 - C90499 +
                            C90311 * ((-(C90311 * C90504) / C89890) / C89849 -
                                      C90200)));
    const double C20515 = C20510 * C92067;
    const double C90521 = C90111 * C90520;
    const double C91409 = C90311 * C90520;
    const double C91481 = C90253 * C90520;
    const double C5421 =
        2 * C90253 * C90496 + C90253 * (C90496 + C90520 * C90425);
    const double C6203 =
        C90253 * C90496 - (ae * C90311 * C90876) / C90112 +
        C90311 * (C90311 * C90253 * C90520 - (ae * C90876) / C90112);
    const double C9076 = C90311 * (C90496 + C90520 * C90425) -
                         (ae * (C90174 * C90425 + C90144)) / C90112;
    const double C11432 =
        2 * (C90311 * C90496 - (ae * C90144) / C90112) -
        (ae * (C90174 * C90547 + C90144)) / C90112 +
        C90311 * (C90496 - (ae * C90311 * C90174) / C90112 +
                  C90311 * (C90311 * C90520 - C90186 / C90112));
    const double C15826 =
        3 * (C90496 + C90520 * C90425) +
        C90253 *
            (2 * C90253 * C90520 +
             C90253 *
                 (C90520 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) / C89890) /
                       C89849 -
                   (C90507 * ce) / C90112) *
                      C90425));
    const double C16566 =
        C90496 + C90520 * C90425 - (ae * C90311 * C90991) / C90112 +
        C90311 *
            (C90311 *
                 (C90520 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) / C89890) /
                       C89849 -
                   (C90507 * ce) / C90112) *
                      C90425) -
             (ae * C90991) / C90112);
    const double C19395 =
        (((-2 * C90876) / C89890 - (C90253 * C90991) / C89890) * ae) / C89849 +
        C90311 *
            (2 * C90253 * C90520 +
             C90253 *
                 (C90520 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) / C89890) /
                       C89849 -
                   (C90507 * ce) / C90112) *
                      C90425));
    const double C20507 =
        4 * ((-2 * C90253 * C90487) / C90112 + C90253 * C91249) +
        C90253 * (3 * C91249 + C90253 * ((-2 * C90253 * C90504) / C90112 +
                                         C90253 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90476 * C90425) /
                                                    C89890) /
                                                       C89849 -
                                                   C90504 / C90112)));
    const double C20995 =
        (-2 * C90253 * C90487) / C90112 + C90253 * C91249 +
        (C90311 * C91171 * ae) / C89849 +
        C90311 *
            ((C91171 * ae) / C89849 +
             C90311 *
                 ((-2 * C90253 * C90504) / C90112 +
                  C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90476 * C90425) /
                             C89890) /
                                C89849 -
                            C90504 / C90112)));
    const double C22873 =
        (((-3 * C90982) / C89890 + C90253 * C91171) * ae) / C89849 +
        C90311 * (3 * C91249 + C90253 * ((-2 * C90253 * C90504) / C90112 +
                                         C90253 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90476 * C90425) /
                                                    C89890) /
                                                       C89849 -
                                                   C90504 / C90112)));
    const double C25135 =
        2 * (C90311 * C91249 - (ae * C90982) / C90112) -
        (ae * (C91163 * C90547 + C90982)) / C90112 +
        C90311 *
            (C91249 - (ae * C90311 * C91163) / C90112 +
             C90311 *
                 (C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90476 * C90425) /
                             C89890) /
                                C89849 -
                            C90504 / C90112) -
                  (ae * C91163) / C90112));
    const double C91524 = C91523 - C90733;
    const double C91600 = C90311 * C91598;
    const double C15922 =
        3 * ((-(C90884 * ce) / C89890) / C89849 - C90531 / C90112 +
             C90253 * C91067) -
        ((2 * C90884 + C90253 * C91064) * ce) / C90112 +
        C90253 *
            (2 * C91067 - (C91064 * ce) / C90112 +
             C90253 *
                 ((-(C90253 * C90489 * ce) / C89890) / C89849 - C90537 +
                  C90253 * ((-(C90253 * C90538) / C89890) / C89849 - C90505)));
    const double C16641 =
        (-(C90884 * ce) / C89890) / C89849 - C90531 / C90112 + C90253 * C91067 -
        (ae * C90311 * C91013) / C90112 +
        C90311 *
            (C90311 *
                 ((-(C90253 * C90489 * ce) / C89890) / C89849 - C90537 +
                  C90253 * ((-(C90253 * C90538) / C89890) / C89849 - C90505)) -
             (ae * C91013) / C90112);
    const double C19504 =
        (((-2 * C90822) / C89890 - (C90253 * C91013) / C89890 -
          (C91003 * ce) / C89890) *
         ae) /
            C89849 +
        C90311 *
            (2 * C91067 - (C91064 * ce) / C90112 +
             C90253 *
                 ((-(C90253 * C90489 * ce) / C89890) / C89849 - C90537 +
                  C90253 * ((-(C90253 * C90538) / C89890) / C89849 - C90505)));
    const double C30277 =
        3 * ((-(ae * C91414) / C89890) / C89849 - C90531 / C90112 +
             C90311 * C91421) +
        (((-2 * C91414) / C89890 - (C90311 * C91418) / C89890) * ae) / C89849 +
        C90311 * (2 * C91421 - (ae * C91418) / C90112 +
                  C90311 * ((-C91320 / C89890) / C89849 - C90537 +
                            C90311 * ((-(C90311 * C90538) / C89890) / C89849 -
                                      C90289)));
    const double C646 =
        4 * ((-2 * C90111 * C90534) / C90112 + C90111 * C90543) +
        C90111 * (3 * C90543 + C90111 * ((-2 * C90111 * C90538) / C90112 +
                                         C90111 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90528 * C90119) /
                                                    C89890) /
                                                       C89849 -
                                                   C90538 / C90112)));
    const double C1272 = (-(C90534 * C90119) / C89890) / C89849 -
                         C90531 / C90112 - (C90253 * C90493 * ce) / C90112 +
                         C90253 * (C90253 * C90543 - (C90493 * ce) / C90112);
    const double C1273 =
        C90253 * ((-2 * C90111 * C90534) / C90112 + C90111 * C90543) -
        ((2 * C90483 + C90111 * C90493) * ce) / C90112;
    const double C1274 =
        (-2 * C90111 * C90534) / C90112 + C90111 * C90543 -
        (C90253 * C90519 * ce) / C90112 +
        C90253 *
            (C90253 *
                 ((-2 * C90111 * C90538) / C90112 +
                  C90111 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112)) -
             (C90519 * ce) / C90112);
    const double C1851 =
        (((-2 * C90267) / C89890 - (C90111 * C90277) / C89890) * ae) / C89849 +
        C90311 * ((-2 * C90111 * C90534) / C90112 + C90111 * C90543);
    const double C1857 = (-(C90534 * C90119) / C89890) / C89849 -
                         C90531 / C90112 - (ae * C90311 * C90277) / C90112 +
                         C90311 * (C90311 * C90543 - (ae * C90277) / C90112);
    const double C1858 =
        (-2 * C90111 * C90534) / C90112 + C90111 * C90543 +
        (C90311 * C90306 * ae) / C89849 +
        C90311 *
            ((C90306 * ae) / C89849 +
             C90311 *
                 ((-2 * C90111 * C90538) / C90112 +
                  C90111 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112)));
    const double C2539 =
        C90253 * (3 * C90543 + C90111 * ((-2 * C90111 * C90538) / C90112 +
                                         C90111 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90528 * C90119) /
                                                    C89890) /
                                                       C89849 -
                                                   C90538 / C90112))) -
        ((3 * C90493 + C90111 * C90519) * ce) / C90112;
    const double C3261 =
        (((-3 * C90277) / C89890 + C90111 * C90306) * ae) / C89849 +
        C90311 * (3 * C90543 + C90111 * ((-2 * C90111 * C90538) / C90112 +
                                         C90111 * ((-(std::pow(C90115, 7) *
                                                      bs[7] * C90528 * C90119) /
                                                    C89890) /
                                                       C89849 -
                                                   C90538 / C90112)));
    const double C3951 = C90311 * (C90253 * C90543 - (C90493 * ce) / C90112) -
                         (ae * (C90253 * C90277 + C90165 * ce)) / C90112;
    const double C5535 =
        2 * (C90253 * C90543 - (C90493 * ce) / C90112) -
        ((C90493 + C90513 * C90425) * ce) / C90112 +
        C90253 *
            (C90543 - (C90253 * C90513 * ce) / C90112 +
             C90253 *
                 (C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112) -
                  (C90513 * ce) / C90112));
    const double C6281 =
        C90253 * C90543 - (C90493 * ce) / C90112 -
        (ae * C90311 * C90835) / C90112 +
        C90311 *
            (C90311 *
                 (C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112) -
                  (C90513 * ce) / C90112) -
             (ae * C90835) / C90112);
    const double C9190 =
        C90311 *
            (C90543 - (C90890 * ce) / C90112 +
             C90253 *
                 (C90253 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112) -
                  (C90513 * ce) / C90112)) -
        (ae * (C90253 * C90835 + C90277 + C90833 * ce)) / C90112;
    const double C11510 =
        2 * (C90311 * C90543 - (ae * C90277) / C90112) -
        (ae * (C90298 * C90547 + C90277)) / C90112 +
        C90311 *
            (C90543 - (ae * C90311 * C90298) / C90112 +
             C90311 *
                 (C90311 * ((-(std::pow(C90115, 7) * bs[7] * C90528 * C90119) /
                             C89890) /
                                C89849 -
                            C90538 / C90112) -
                  (ae * C90298) / C90112));
    const double C91078 = C91077 - C91070;
    const double C91430 = C91429 - C91016;
    const double C91267 = C90253 * C91265;
    const double C91527 = C90311 * C91265;
    const double C25210 =
        2 * (C90311 * C91067 - (ae * C90822) / C90112) -
        (ae * (C91001 * C90547 + C90822)) / C90112 +
        C90311 * (C91067 - (ae * C90311 * C91001) / C90112 +
                  C90311 * (C90311 * C91265 - C91175 / C90112));
    const double C91619 = C90311 * C91617;
    const double C89874 = C89873 / C89849;
    const double C4900 = C4102 * C806;
    const double C4894 = C4102 * C822;
    const double C4884 = C4102 * C813;
    const double C4878 = C4102 * C805;
    const double C5000 = C4102 * C891;
    const double C4998 = C4102 * C890;
    const double C5102 = C4102 * C957;
    const double C5092 = C4102 * C956;
    const double C6468 = C4102 * C812;
    const double C6462 = C4102 * C804;
    const double C6574 = C4102 * C889;
    const double C6681 = C4102 * C955;
    const double C8435 = C4102 * C3431;
    const double C8429 = C4102 * C3439;
    const double C8547 = C4102 * C3513;
    const double C8664 = C4102 * C3587;
    const double C10843 = C4102 * C1390;
    const double C10837 = C4102 * C1406;
    const double C10827 = C4102 * C1397;
    const double C10821 = C4102 * C1389;
    const double C10947 = C4102 * C1472;
    const double C10937 = C4102 * C1471;
    const double C11041 = C4102 * C1541;
    const double C11039 = C4102 * C1540;
    const double C12663 = C4102 * C1396;
    const double C12657 = C4102 * C1388;
    const double C12773 = C4102 * C1470;
    const double C12876 = C4102 * C1539;
    const double C4898 = C4103 * C807;
    const double C4892 = C4103 * C823;
    const double C4886 = C4103 * C812;
    const double C4880 = C4103 * C804;
    const double C5002 = C4103 * C892;
    const double C4996 = C4103 * C889;
    const double C5100 = C4103 * C958;
    const double C5094 = C4103 * C955;
    const double C6466 = C4103 * C811;
    const double C6460 = C4103 * C803;
    const double C6576 = C4103 * C888;
    const double C6683 = C4103 * C954;
    const double C8433 = C4103 * C3432;
    const double C8427 = C4103 * C3440;
    const double C8549 = C4103 * C3514;
    const double C8662 = C4103 * C3588;
    const double C10841 = C4103 * C1391;
    const double C10835 = C4103 * C1407;
    const double C10829 = C4103 * C1396;
    const double C10823 = C4103 * C1388;
    const double C10945 = C4103 * C1473;
    const double C10939 = C4103 * C1470;
    const double C11043 = C4103 * C1542;
    const double C11037 = C4103 * C1539;
    const double C12661 = C4103 * C1395;
    const double C12655 = C4103 * C1387;
    const double C12771 = C4103 * C1469;
    const double C12878 = C4103 * C1538;
    const double C47294 = C46528 * C4865;
    const double C47290 = C46528 * C4871;
    const double C47284 = C46528 * C822;
    const double C47280 = C46528 * C806;
    const double C47276 = C46528 * C813;
    const double C47272 = C46528 * C805;
    const double C47395 = C46528 * C4987;
    const double C47391 = C46528 * C891;
    const double C47389 = C46528 * C890;
    const double C47491 = C46528 * C5085;
    const double C47485 = C46528 * C957;
    const double C47480 = C46528 * C956;
    const double C48730 = C46528 * C823;
    const double C48726 = C46528 * C807;
    const double C48722 = C46528 * C812;
    const double C48718 = C46528 * C804;
    const double C48842 = C46528 * C892;
    const double C48838 = C46528 * C889;
    const double C48952 = C46528 * C958;
    const double C48948 = C46528 * C955;
    const double C50614 = C46528 * C3431;
    const double C50610 = C46528 * C3439;
    const double C50606 = C46528 * C8412;
    const double C50602 = C46528 * C8418;
    const double C50726 = C46528 * C8540;
    const double C50722 = C46528 * C3513;
    const double C50838 = C46528 * C8653;
    const double C50834 = C46528 * C3587;
    const double C53316 = C46528 * C1390;
    const double C53312 = C46528 * C1406;
    const double C53308 = C46528 * C5719;
    const double C53304 = C46528 * C5725;
    const double C53298 = C46528 * C1397;
    const double C53294 = C46528 * C1389;
    const double C53438 = C46528 * C1472;
    const double C53434 = C46528 * C5805;
    const double C53428 = C46528 * C1471;
    const double C53552 = C46528 * C5885;
    const double C53548 = C46528 * C1541;
    const double C53546 = C46528 * C1540;
    const double C54358 = C46528 * C3440;
    const double C54354 = C46528 * C3432;
    const double C54494 = C46528 * C3514;
    const double C54630 = C46528 * C3588;
    const double C55590 = C46528 * C1396;
    const double C55586 = C46528 * C1388;
    const double C55728 = C46528 * C1470;
    const double C55862 = C46528 * C1539;
    const double C70654 = C46528 * C10808;
    const double C70650 = C46528 * C10814;
    const double C70742 = C46528 * C10930;
    const double C70824 = C46528 * C11028;
    const double C72296 = C46528 * C1407;
    const double C72292 = C46528 * C1391;
    const double C72402 = C46528 * C1473;
    const double C72504 = C46528 * C1542;
    const double C20302 = C20287 + C20299;
    const double C20301 = C20284 + C20298;
    const double C23922 = C23918 + C23919;
    const double C34796 = C24658 + C24666;
    const double C39258 = C34803 + C34810;
    const double C90018 = C90016 / C89849;
    const double C41798 = C41775 * C120;
    const double C41794 = C41775 * C110;
    const double C41790 = C41775 * C119;
    const double C41786 = C41775 * C109;
    const double C41784 = C41775 * C118;
    const double C41780 = C41775 * C108;
    const double C41901 = C41775 * C185;
    const double C41895 = C41775 * C184;
    const double C41890 = C41775 * C183;
    const double C41998 = C41775 * C248;
    const double C41992 = C41775 * C247;
    const double C41987 = C41775 * C246;
    const double C44076 = C41775 * C811;
    const double C44072 = C41775 * C803;
    const double C44068 = C41775 * C812;
    const double C44064 = C41775 * C804;
    const double C44192 = C41775 * C888;
    const double C44188 = C41775 * C889;
    const double C44302 = C41775 * C955;
    const double C44298 = C41775 * C954;
    const double C45006 = C41775 * C1395;
    const double C45002 = C41775 * C1387;
    const double C44998 = C41775 * C1396;
    const double C44994 = C41775 * C1388;
    const double C45120 = C41775 * C1469;
    const double C45116 = C41775 * C1470;
    const double C45232 = C41775 * C1538;
    const double C45228 = C41775 * C1539;
    const double C53682 = C41775 * C1390;
    const double C53678 = C41775 * C1406;
    const double C53674 = C41775 * C1391;
    const double C53670 = C41775 * C1407;
    const double C53664 = C41775 * C1397;
    const double C53660 = C41775 * C1389;
    const double C53804 = C41775 * C1472;
    const double C53800 = C41775 * C1473;
    const double C53794 = C41775 * C1471;
    const double C53918 = C41775 * C1542;
    const double C53914 = C41775 * C1541;
    const double C53912 = C41775 * C1540;
    const double C54770 = C41775 * C3440;
    const double C54766 = C41775 * C3432;
    const double C54910 = C41775 * C3514;
    const double C55046 = C41775 * C3588;
    const double C57224 = C41775 * C3439;
    const double C57220 = C41775 * C3431;
    const double C57364 = C41775 * C3513;
    const double C57498 = C41775 * C3587;
    const double C86736 = C41775 * C10808;
    const double C86732 = C41775 * C10814;
    const double C86823 = C41775 * C10930;
    const double C86904 = C41775 * C11028;
    const double C89292 = C41775 * C5725;
    const double C89288 = C41775 * C5719;
    const double C89400 = C41775 * C5805;
    const double C89502 = C41775 * C5885;
    const double C4560 = C4543 + C4559;
    const double C90063 = C90061 / C89849;
    const double C58442 = C58419 * C120;
    const double C58438 = C58419 * C110;
    const double C58434 = C58419 * C119;
    const double C58430 = C58419 * C109;
    const double C58428 = C58419 * C118;
    const double C58424 = C58419 * C108;
    const double C58545 = C58419 * C185;
    const double C58539 = C58419 * C184;
    const double C58534 = C58419 * C183;
    const double C58641 = C58419 * C248;
    const double C58635 = C58419 * C247;
    const double C58630 = C58419 * C246;
    const double C60754 = C58419 * C811;
    const double C60750 = C58419 * C803;
    const double C60746 = C58419 * C812;
    const double C60742 = C58419 * C804;
    const double C60870 = C58419 * C888;
    const double C60866 = C58419 * C889;
    const double C60980 = C58419 * C955;
    const double C60976 = C58419 * C954;
    const double C61720 = C58419 * C1395;
    const double C61716 = C58419 * C1387;
    const double C61712 = C58419 * C1396;
    const double C61708 = C58419 * C1388;
    const double C61834 = C58419 * C1469;
    const double C61830 = C58419 * C1470;
    const double C61946 = C58419 * C1538;
    const double C61942 = C58419 * C1539;
    const double C64424 = C58419 * C806;
    const double C64420 = C58419 * C822;
    const double C64416 = C58419 * C807;
    const double C64412 = C58419 * C823;
    const double C64406 = C58419 * C813;
    const double C64402 = C58419 * C805;
    const double C64544 = C58419 * C892;
    const double C64540 = C58419 * C891;
    const double C64538 = C58419 * C890;
    const double C64662 = C58419 * C957;
    const double C64658 = C58419 * C958;
    const double C64652 = C58419 * C956;
    const double C67688 = C58419 * C3440;
    const double C67684 = C58419 * C3432;
    const double C67826 = C58419 * C3514;
    const double C67964 = C58419 * C3588;
    const double C68884 = C58419 * C3431;
    const double C68880 = C58419 * C3439;
    const double C69020 = C58419 * C3513;
    const double C69158 = C58419 * C3587;
    const double C81402 = C58419 * C4865;
    const double C81398 = C58419 * C4871;
    const double C81487 = C58419 * C4987;
    const double C81571 = C58419 * C5085;
    const double C84808 = C58419 * C8412;
    const double C84804 = C58419 * C8418;
    const double C84912 = C58419 * C8540;
    const double C85018 = C58419 * C8653;
    const double C9972 = C9955 + C9971;
    const double C24259 = C24257 + C24258;
    const double C35007 = C35005 * C801;
    const double C35089 = C35005 * C181;
    const double C34797 = C24655 + C24665;
    const double C20163 = C20157 + C20158;
    const double C34699 = C24564 + C24563;
    const double C27235 = C22437 + C22438;
    const double C27233 = C22438 + C22437;
    const double C422 = C407 + C419;
    const double C13095 = C3019 + C3007;
    const double C13093 = C3007 + C3019;
    const double C30032 = C11257 + C11265;
    const double C747 = C732 + C744;
    const double C7348 = C2643 + C2637;
    const double C7346 = C2637 + C2643;
    const double C16007 = C5637 + C5645;
    const double C6459 = C4099 * C814;
    const double C43735 = C41547 * C814;
    const double C4897 = C4099 * C820;
    const double C16827 = C92072 * C820;
    const double C42325 = C41547 * C820;
    const double C48725 = C92072 * C820;
    const double C12654 = C4099 * C1398;
    const double C61085 = C41547 * C1398;
    const double C10840 = C4099 * C1404;
    const double C31399 = C92072 * C1404;
    const double C59411 = C41547 * C1404;
    const double C72291 = C92072 * C1404;
    const double C8432 = C4099 * C3437;
    const double C45637 = C41547 * C3437;
    const double C54353 = C92072 * C3437;
    const double C76793 = C92072 * C3437;
    const double C35533 = C35531 * C1988;
    const double C35734 = C35531 * C244;
    const double C36534 = C35531 * C181;
    const double C90242 = C90111 * C90239;
    const double C90738 = C90737 - C90734;
    const double C90760 = C90759 - C90756;
    const double C6465 = C4099 * C826;
    const double C43741 = C41547 * C826;
    const double C12660 = C4099 * C1410;
    const double C61091 = C41547 * C1410;
    const double C335 = C307 * C122;
    const double C582 = C554 * C122;
    const double C2210 = C307 * C810;
    const double C2466 = C554 * C810;
    const double C4352 = C4328 * C810;
    const double C6464 = C4104 * C810;
    const double C41800 = C41776 * C810;
    const double C43740 = C41552 * C810;
    const double C4890 = C4104 * C824;
    const double C5432 = C554 * C824;
    const double C6802 = C4328 * C824;
    const double C14776 = C14752 * C824;
    const double C16830 = C89868 * C824;
    const double C42318 = C41552 * C824;
    const double C44078 = C41776 * C824;
    const double C46778 = C46754 * C824;
    const double C48728 = C46529 * C824;
    const double C2932 = C307 * C1394;
    const double C3188 = C554 * C1394;
    const double C9861 = C9837 * C1394;
    const double C12659 = C4104 * C1394;
    const double C58444 = C58420 * C1394;
    const double C61090 = C41552 * C1394;
    const double C10833 = C4104 * C1408;
    const double C11141 = C307 * C1408;
    const double C13314 = C9837 * C1408;
    const double C28674 = C28650 * C1408;
    const double C31402 = C89868 * C1408;
    const double C59404 = C41552 * C1408;
    const double C61722 = C58420 * C1408;
    const double C69708 = C69684 * C1408;
    const double C72294 = C46529 * C1408;
    const double C7755 = C4328 * C3441;
    const double C8089 = C554 * C3441;
    const double C8425 = C4104 * C3441;
    const double C11987 = C307 * C3441;
    const double C12325 = C9837 * C3441;
    const double C45008 = C41776 * C3441;
    const double C45630 = C41552 * C3441;
    const double C54356 = C46529 * C3441;
    const double C60756 = C58420 * C3441;
    const double C76796 = C89868 * C3441;
    const double C90225 = C90217 - C90187;
    const double C25404 = C25400 * C1984;
    const double C24561 = C24553 * C92084;
    const double C35526 = C24553 * C1983;
    const double C20164 = C20159 + C20160;
    const double C23767 = C22436 + C22435;
    const double C27234 = C22435 + C22436;
    const double C39195 = C34719 + C34718;
    const double C90247 = C90196 + C90244;
    const double C5724 = (C90253 * C90184 + C90863 * C90547) / C89849;
    const double C91219 = C91184 + C91216;
    const double C91663 = C91632 + C91660;
    const double C15594 =
        (3 * (C90382 + C90253 * C90830 + C90827 * ae) +
         C90253 * (2 * C90830 + C90253 * C91038 + C91026 * ae) +
         (2 * C90827 + C90253 * C91026) * ae) /
        C89849;
    const double C16334 =
        (C90382 + C90253 * C90830 + C90827 * ae + C91038 * C90547) / C89849;
    const double C19091 =
        (C90311 * (2 * C90830 + C90253 * C91038 + C91026 * ae)) / C89849;
    const double C30200 =
        (3 * (C90483 + C90311 * C90953 + C90950 * ae) +
         C90311 * (2 * C90953 + C90311 * C91471 + C91462 * ae) +
         (2 * C90950 + C90311 * C91462) * ae) /
        C89849;
    const double C19193 =
        2 * ((-(C90311 * C90397 * ce) / C89890) / C89849 -
             (ae * C90311 * C90282) / C90112 - (C90253 * C91113) / C90112) -
        (ae * C90311 * C91037) / C90112 - (C90311 * C91038 * ce) / C90112 +
        C90253 *
            ((-(ae * C90311 * C91030) / C89890) / C89849 - C91113 / C90112 -
             (C90311 * C91031 * ce) / C90112 +
             C90253 *
                 ((-(C90311 * C91021 * ce) / C89890) / C89849 -
                  (ae * C90311 * C91018) / C90112 -
                  (C90253 * C90311 * C90111 *
                   (C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                   C90120) /
                      C90112));
    const double C15397 =
        (-3 * (C90253 * C90829 + C90267 + C90827 * ce)) / C89890 +
        C90253 * ((-2 * C90829) / C89890 - (C90253 * C91037) / C89890 -
                  (C91026 * ce) / C89890) -
        ((2 * C90827 + C90253 * C91026) * ce) / C89890;
    const double C16178 =
        -(C91037 * C90547 + C90253 * C90829 + C90267 + C90827 * ce) / C89890;
    const double C18863 =
        C90311 * ((-2 * C90829) / C89890 - (C90253 * C91037) / C89890 -
                  (C91026 * ce) / C89890);
    const double C29837 =
        (-3 * (C90311 * C90952 + C90325 + C90950 * ce)) / C89890 +
        C90311 * ((-2 * C90952) / C89890 - (C90311 * C91470) / C89890 -
                  (C91462 * ce) / C89890) -
        ((2 * C90950 + C90311 * C91462) * ce) / C89890;
    const double C90246 = C90243 / C89890;
    const double C5727 = -(C90878 * C90547 + C90253 * C90183) / C89890;
    const double C91218 = C91215 / C89890;
    const double C91662 = C91659 / C89890;
    const double C90582 = C90581 - C90187;
    const double C90660 = C90659 - C90187;
    const double C35534 = C35532 * C1984;
    const double C34716 = C34711 * C92084;
    const double C90446 = C90445 - C90438;
    const double C91289 = C91288 - C90438;
    const double C90568 = C90567 - C90560;
    const double C91274 = C91273 - C90560;
    const double C35274 =
        (3 * (C90884 + C90311 * C91360 + C91357 * ae) +
         C90311 * (2 * C91360 + C90311 * C91555 + C91543 * ae) +
         (2 * C91357 + C90311 * C91543) * ae) /
        C89849;
    const double C34884 =
        (-3 * (C90311 * C91359 + C90883 + C91357 * ce)) / C89890 +
        C90311 * ((-2 * C91359) / C89890 - (C90311 * C91554) / C89890 -
                  (C91543 * ce) / C89890) -
        ((2 * C91357 + C90311 * C91543) * ce) / C89890;
    const double C17599 = C15930 * C1986;
    const double C18529 = C18528 * C92105;
    const double C20223 = C19671 * C15396;
    const double C20571 = C554 * C15396;
    const double C24650 = C19671 * C16177;
    const double C24953 = C14752 * C16177;
    const double C28008 = C9837 * C16177;
    const double C34521 = C28650 * C16177;
    const double C37784 = C4328 * C16177;
    const double C81990 = C46754 * C16177;
    const double C84914 = C58420 * C16177;
    const double C86326 = C69684 * C16177;
    const double C89398 = C41776 * C16177;
    const double C22511 = C19671 * C18862;
    const double C22950 = C554 * C18862;
    const double C24345 = C9837 * C18862;
    const double C27666 = C14752 * C18862;
    const double C81489 = C58420 * C18862;
    const double C84588 = C46754 * C18862;
    const double C91209 = C91203 - C90438;
    const double C31940 = C30125 * C2710;
    const double C37559 = C34892 * C2710;
    const double C91650 = C91646 - C90560;
    const double C39317 = C19671 * C29836;
    const double C39489 = C307 * C29836;
    const double C91214 = C90253 * C91210;
    const double C91032 = C91022 - C91029;
    const double C17277 = C14525 * C5264;
    const double C49175 = C46527 * C5264;
    const double C30854 = C30752 * C2060;
    const double C30959 = C30752 * C244;
    const double C32701 = C30752 * C801;
    const double C27667 = C14525 * C19192;
    const double C84589 = C46527 * C19192;
    const double C24854 = C14525 * C16333;
    const double C37669 = C92171 * C16333;
    const double C81893 = C46527 * C16333;
    const double C89291 = C92171 * C16333;
    const double C27555 = C14525 * C19090;
    const double C84477 = C46527 * C19090;
    const double C91325 = C91324 - C91323;
    const double C30858 = C30857 * C1986;
    const double C30042 = C30040 * C92105;
    const double C4462 = C4461 * C92105;
    const double C9676 = C3010 + C3020;
    const double C13094 = C3020 + C3010;
    const double C30033 = C11254 + C11264;
    const double C31838 = C11264 + C11254;
    const double C67419 = C67416 * C92105;
    const double C67418 = C67415 * C92105;
    const double C35105 = C35104 * C92105;
    const double C39432 = C30039 + C30043;
    const double C91658 = C90311 * C91655;
    const double C91465 = C91453 - C91459;
    const double C32263 = C28199 * C11586;
    const double C73126 = C69237 * C11586;
    const double C91549 = C91539 - C91546;
    const double C38224 = C28199 * C25286;
    const double C89830 = C69237 * C25286;
    const double C20632 = C20631 * C92116;
    const double C23026 = C23025 * C2710;
    const double C16020 = C16017 * C92116;
    const double C18634 = C18633 * C2710;
    const double C4791 = C2634 + C2642;
    const double C7347 = C2642 + C2634;
    const double C16008 = C5634 + C5644;
    const double C17698 = C5644 + C5634;
    const double C10067 = C10066 * C92116;
    const double C55451 = C55448 * C92116;
    const double C55450 = C55447 * C92116;
    const double C20626 = C16014 + C16021;
    const double C24448 = C24447 * C92116;
    const double C4995 = C4099 * C896;
    const double C6577 = C4098 * C896;
    const double C16943 = C92072 * C896;
    const double C42417 = C41547 * C896;
    const double C43853 = C92350 * C896;
    const double C48841 = C92072 * C896;
    const double C5003 = C4098 * C900;
    const double C15408 = C92072 * C900;
    const double C16945 = C92322 * C900;
    const double C21264 = C92067 * C900;
    const double C42425 = C92350 * C900;
    const double C47394 = C92072 * C900;
    const double C48843 = C46523 * C900;
    const double C10942 = C4099 * C1477;
    const double C12772 = C4098 * C1477;
    const double C31517 = C92072 * C1477;
    const double C55727 = C92072 * C1477;
    const double C59507 = C41547 * C1477;
    const double C61203 = C92350 * C1477;
    const double C10946 = C4098 * C1481;
    const double C29748 = C92072 * C1481;
    const double C31515 = C92322 * C1481;
    const double C36536 = C92067 * C1481;
    const double C53437 = C92072 * C1481;
    const double C59511 = C92350 * C1481;
    const double C72403 = C46523 * C1481;
    const double C8550 = C4098 * C3518;
    const double C18870 = C92072 * C3518;
    const double C25506 = C92067 * C3518;
    const double C45749 = C92350 * C3518;
    const double C50725 = C92072 * C3518;
    const double C54495 = C46523 * C3518;
    const double C76935 = C92322 * C3518;
    const double C20224 = C92067 * C15398;
    const double C24651 = C92067 * C16179;
    const double C22512 = C92067 * C18864;
    const double C90308 = C90302 + C90307;
    const double C90974 = C90972 - C90198;
    const double C15412 = C92072 * C4991;
    const double C21266 = C92067 * C4991;
    const double C47398 = C92072 * C4991;
    const double C32486 = C92072 * C5809;
    const double C35634 = C92067 * C5809;
    const double C53433 = C92072 * C5809;
    const double C18874 = C92072 * C8544;
    const double C25508 = C92067 * C8544;
    const double C50729 = C92072 * C8544;
    const double C29750 = C92072 * C10934;
    const double C40383 = C92067 * C10934;
    const double C70741 = C92072 * C10934;
    const double C91148 = C91135 + C91147;
    const double C34799 = C92067 * C24640;
    const double C336 = C92157 * C318;
    const double C2207 = C92157 * C1028;
    const double C4345 = C92171 * C1028;
    const double C6801 = C92336 * C1028;
    const double C14775 = C14524 * C1028;
    const double C41793 = C92171 * C1028;
    const double C44077 = C41548 * C1028;
    const double C46777 = C92356 * C1028;
    const double C6795 = C92171 * C1032;
    const double C14761 = C14525 * C1032;
    const double C17169 = C14524 * C1032;
    const double C44071 = C92171 * C1032;
    const double C46763 = C46527 * C1032;
    const double C49067 = C92356 * C1032;
    const double C2929 = C92157 * C1612;
    const double C7754 = C92336 * C1612;
    const double C45007 = C41548 * C1612;
    const double C11146 = C92157 * C1616;
    const double C36746 = C92336 * C1616;
    const double C53671 = C41548 * C1616;
    const double C7748 = C92171 * C3666;
    const double C11984 = C92157 * C3666;
    const double C18100 = C14524 * C3666;
    const double C45001 = C92171 * C3666;
    const double C49985 = C92356 * C3666;
    const double C54771 = C41548 * C3666;
    const double C66077 = C92336 * C3666;
    const double C90421 = C90416 + C90420;
    const double C90990 = C90987 - C90988;
    const double C19093 =
        2 * (C90253 * C91109 - (ae * C90311 * C90174) / C90112) -
        (ae * C90311 * C90991) / C90112 +
        C90253 *
            (C91109 - (ae * C90311 * C90253 * C90228) / C90112 +
             C90253 * (C90253 * C90311 *
                           ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) /
                             C89890) /
                                C89849 -
                            (C90406 * ce) / C90112) -
                       (ae * C90311 * C90228) / C90112));
    const double C29936 =
        3 * (C90395 + C90419 * C90547) +
        C90311 *
            (2 * C91109 +
             C90311 *
                 (C90419 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) / C89890) /
                       C89849 -
                   (C90406 * ce) / C90112) *
                      C90547));
    const double C32695 =
        (((-2 * C91408) / C89890 - (C90311 * C91412) / C89890) * ae) / C89849 +
        C90253 *
            (2 * C91109 +
             C90311 *
                 (C90419 +
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) / C89890) /
                       C89849 -
                   (C90406 * ce) / C90112) *
                      C90547));
    const double C17171 = C14525 * C5187;
    const double C49069 = C46527 * C5187;
    const double C30751 = C92157 * C5969;
    const double C36744 = C92171 * C5969;
    const double C53669 = C92171 * C5969;
    const double C18102 = C14525 * C8770;
    const double C49987 = C46527 * C8770;
    const double C54773 = C92171 * C8770;
    const double C66079 = C92171 * C8770;
    const double C29941 = C92157 * C11130;
    const double C91173 = C91167 + C91172;
    const double C34986 = C92171 * C24832;
    const double C41127 = C92157 * C24832;
    const double C86731 = C92171 * C24832;
    const double C39374 = C92157 * C29935;
    const double C22671 =
        3 * ((-(ae * C90311 * C90727) / C89890) / C89849 - C91107 / C90112 +
             C90253 * C91316) +
        (C90311 * C91171 * ae) / C89849 +
        C90253 *
            (2 * C91316 - (ae * C90311 * C91163) / C90112 +
             C90253 * ((-(ae * C90311 * C90253 * C90212) / C89890) / C89849 -
                       C91311 / C90112 +
                       C90253 * ((-(C90253 * C90311 * std::pow(C90115, 7) *
                                    bs[7] * C90375) /
                                  C89890) /
                                     C89849 -
                                 (ae * C90311 * C90212) / C90112)));
    const double C5097 = C4099 * C962;
    const double C6684 = C4098 * C962;
    const double C17053 = C92072 * C962;
    const double C42513 = C41547 * C962;
    const double C43960 = C92350 * C962;
    const double C48951 = C92072 * C962;
    const double C5101 = C4098 * C966;
    const double C15506 = C92072 * C966;
    const double C17055 = C92322 * C966;
    const double C21341 = C92067 * C966;
    const double C42517 = C92350 * C966;
    const double C47488 = C92072 * C966;
    const double C48953 = C46523 * C966;
    const double C11036 = C4099 * C1546;
    const double C12879 = C4098 * C1546;
    const double C31625 = C92072 * C1546;
    const double C55865 = C92072 * C1546;
    const double C59595 = C41547 * C1546;
    const double C61310 = C92350 * C1546;
    const double C11044 = C4098 * C1550;
    const double C29848 = C92072 * C1550;
    const double C31627 = C92322 * C1550;
    const double C36639 = C92067 * C1550;
    const double C53551 = C92072 * C1550;
    const double C59603 = C92350 * C1550;
    const double C72505 = C46523 * C1550;
    const double C8663 = C4098 * C3592;
    const double C18982 = C92072 * C3592;
    const double C25611 = C92067 * C3592;
    const double C45856 = C92350 * C3592;
    const double C50833 = C92072 * C3592;
    const double C54631 = C46523 * C3592;
    const double C77071 = C92322 * C3592;
    const double C39318 = C92067 * C29838;
    const double C90366 = C90360 + C90365;
    const double C91384 = C91382 - C90198;
    const double C32589 =
        2 * (C90311 * C91475 - (C90861 * ce) / C90112) -
        ((C90861 + C91476 * C90547) * ce) / C90112 +
        C90311 *
            (C91475 - (C90311 * C91476 * ce) / C90112 +
             C90311 * (C90311 * C90253 *
                           ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) /
                             C89890) /
                                C89849 -
                            (ae * C90349) / C90112) -
                       (C91476 * ce) / C90112));
    const double C15508 = C92072 * C5089;
    const double C21344 = C92067 * C5089;
    const double C47490 = C92072 * C5089;
    const double C32594 = C92072 * C5889;
    const double C35736 = C92067 * C5889;
    const double C53555 = C92072 * C5889;
    const double C18986 = C92072 * C8657;
    const double C25614 = C92067 * C8657;
    const double C50837 = C92072 * C8657;
    const double C29852 = C92072 * C11032;
    const double C40454 = C92067 * C11032;
    const double C70827 = C92072 * C11032;
    const double C34885 =
        3 * ((-(C91496 * ce) / C89890) / C89849 - C91341 / C90112 +
             C90311 * C91506) -
        ((2 * C91496 + C90311 * C91503) * ce) / C90112 +
        C90311 * (2 * C91506 - (C91503 * ce) / C90112 +
                  C90311 * ((-(C90311 * C91499 * ce) / C89890) / C89849 -
                            C91497 / C90112 +
                            C90311 * ((-(C90311 * C90253 * std::pow(C90115, 7) *
                                         bs[7] * C90318) /
                                       C89890) /
                                          C89849 -
                                      (C91499 * ce) / C90112)));
    const double C91576 = C91564 + C91575;
    const double C27778 = C14525 * C19292;
    const double C84700 = C46527 * C19292;
    const double C9762 = C9755 + C9761;
    const double C58345 = C58343 + C58344;
    const double C2374 = C92157 * C1143;
    const double C4549 = C92171 * C1143;
    const double C41997 = C92171 * C1143;
    const double C7021 = C92171 * C1149;
    const double C14963 = C14525 * C1149;
    const double C44297 = C92171 * C1149;
    const double C46965 = C46527 * C1149;
    const double C11350 = C92157 * C1732;
    const double C3103 = C92157 * C1733;
    const double C7978 = C92171 * C3807;
    const double C12204 = C92157 * C3807;
    const double C45231 = C92171 * C3807;
    const double C15748 =
        3 * ((-(ae * C90886) / C89890) / C89849 - C90839 / C90112 +
             C90253 * C91057) +
        (((-2 * C90886) / C89890 - (C90253 * C91054) / C89890) * ae) / C89849 +
        C90253 * (2 * C91057 - (ae * C91054) / C90112 +
                  C90253 * ((-(ae * C90253 * C91050) / C89890) / C89849 -
                            C91048 / C90112 +
                            C90253 * ((-(C90253 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90452) /
                                       C89890) /
                                          C89849 -
                                      (ae * C91050) / C90112)));
    const double C19293 =
        2 * (C90253 * C91126 - (ae * C90952) / C90112) -
        (ae * (C90311 * C91054 + C91026 * ce)) / C90112 +
        C90253 * (C91126 - (ae * (C90311 * C90253 * C91050 + C91025)) / C90112 +
                  C90253 * (C90253 * ((-(C90311 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90452) /
                                       C89890) /
                                          C89849 -
                                      (C91021 * ce) / C90112) -
                            (ae * (C90311 * C91050 + C90213)) / C90112));
    const double C30118 =
        3 * ((-(C91395 * ce) / C89890) / C89849 - C90839 / C90112 +
             C90311 * C91126) -
        ((2 * C91395 + C90311 * C91397) * ce) / C90112 +
        C90311 * (2 * C91126 - (C91397 * ce) / C90112 +
                  C90311 * ((-(C90311 * C91021 * ce) / C89890) / C89849 -
                            C91048 / C90112 +
                            C90311 * ((-(C90311 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90452) /
                                       C89890) /
                                          C89849 -
                                      (C91021 * ce) / C90112)));
    const double C32910 =
        (((-2 * C90952) / C89890 - (C90311 * C91470) / C89890 -
          (C91462 * ce) / C89890) *
         ae) /
            C89849 +
        C90253 * (2 * C91126 - (C91397 * ce) / C90112 +
                  C90311 * ((-(C90311 * C91021 * ce) / C89890) / C89849 -
                            C91048 / C90112 +
                            C90311 * ((-(C90311 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90452) /
                                       C89890) /
                                          C89849 -
                                      (C91021 * ce) / C90112)));
    const double C91243 = C91241 + C91242;
    const double C91303 = C91301 + C91302;
    const double C91332 = C91327 - C91331;
    const double C583 = C92183 * C565;
    const double C2463 = C92183 * C1210;
    const double C12324 = C92337 * C1210;
    const double C60755 = C57967 * C1210;
    const double C5437 = C92183 * C1214;
    const double C26018 = C92337 * C1214;
    const double C64413 = C57967 * C1214;
    const double C3185 = C92183 * C1794;
    const double C9854 = C92195 * C1794;
    const double C13313 = C92337 * C1794;
    const double C28673 = C28198 * C1794;
    const double C58437 = C92195 * C1794;
    const double C61721 = C57967 * C1794;
    const double C69707 = C92359 * C1794;
    const double C13307 = C92195 * C1798;
    const double C28659 = C28199 * C1798;
    const double C32048 = C28198 * C1798;
    const double C61715 = C92195 * C1798;
    const double C69693 = C69237 * C1798;
    const double C72911 = C92359 * C1798;
    const double C8086 = C92183 * C3880;
    const double C12318 = C92195 * C3880;
    const double C31069 = C28198 * C3880;
    const double C56407 = C92337 * C3880;
    const double C60749 = C92195 * C3880;
    const double C67689 = C57967 * C3880;
    const double C71969 = C92359 * C3880;
    const double C90522 = C90517 + C90521;
    const double C91411 = C91409 - C90988;
    const double C33013 =
        2 * (C90311 * C91481 - (ae * C90876) / C90112) -
        (ae * (C91482 * C90547 + C90876)) / C90112 +
        C90311 *
            (C91481 - (ae * C90311 * C91482) / C90112 +
             C90311 * (C90311 * C90253 *
                           ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) /
                             C89890) /
                                C89849 -
                            (C90507 * ce) / C90112) -
                       (ae * C91482) / C90112));
    const double C15831 = C92183 * C5421;
    const double C31071 = C28199 * C6203;
    const double C56409 = C92195 * C6203;
    const double C67691 = C92195 * C6203;
    const double C71971 = C69237 * C6203;
    const double C18424 = C92183 * C9076;
    const double C26016 = C92195 * C9076;
    const double C64411 = C92195 * C9076;
    const double C32050 = C28199 * C11432;
    const double C72913 = C69237 * C11432;
    const double C35275 =
        3 * ((-(ae * C91515) / C89890) / C89849 - C91350 / C90112 +
             C90311 * C91524) +
        (((-2 * C91515) / C89890 - (C90311 * C91521) / C89890) * ae) / C89849 +
        C90311 * (2 * C91524 - (ae * C91521) / C90112 +
                  C90311 * ((-(ae * C90311 * C91517) / C89890) / C89849 -
                            C91516 / C90112 +
                            C90311 * ((-(C90311 * C90253 * std::pow(C90115, 7) *
                                         bs[7] * C90476) /
                                       C89890) /
                                          C89849 -
                                      (ae * C91517) / C90112)));
    const double C91601 = C91595 + C91600;
    const double C20572 = C92183 * C15922;
    const double C28009 = C92195 * C16641;
    const double C34522 = C28199 * C16641;
    const double C84915 = C92195 * C16641;
    const double C86327 = C69237 * C16641;
    const double C22951 = C92183 * C19504;
    const double C24346 = C92195 * C19504;
    const double C81490 = C92195 * C19504;
    const double C5544 = C92183 * C1272;
    const double C2555 = C92183 * C1273;
    const double C3271 = C92183 * C1851;
    const double C9961 = C92195 * C1851;
    const double C58544 = C92195 * C1851;
    const double C13429 = C92195 * C1857;
    const double C28769 = C28199 * C1857;
    const double C61837 = C92195 * C1857;
    const double C69803 = C69237 * C1857;
    const double C8198 = C92183 * C3951;
    const double C12438 = C92195 * C3951;
    const double C60869 = C92195 * C3951;
    const double C15923 =
        3 * ((-(C90887 * ce) / C89890) / C89849 - C90846 / C90112 +
             C90253 * C91078) -
        ((2 * C90887 + C90253 * C91075) * ce) / C90112 +
        C90253 * (2 * C91078 - (C91075 * ce) / C90112 +
                  C90253 * ((-(C90253 * C91071 * ce) / C89890) / C89849 -
                            C91069 / C90112 +
                            C90253 * ((-(C90253 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90528) /
                                       C89890) /
                                          C89849 -
                                      (C91071 * ce) / C90112)));
    const double C16642 =
        (-(C90887 * ce) / C89890) / C89849 - C90846 / C90112 + C90253 * C91078 -
        (ae * C90311 * C91037) / C90112 +
        C90311 * (C90311 * ((-(C90253 * C91071 * ce) / C89890) / C89849 -
                            C91069 / C90112 +
                            C90253 * ((-(C90253 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90528) /
                                       C89890) /
                                          C89849 -
                                      (C91071 * ce) / C90112)) -
                  (ae * C91037) / C90112);
    const double C19505 =
        (((-2 * C90829) / C89890 - (C90253 * C91037) / C89890 -
          (C91026 * ce) / C89890) *
         ae) /
            C89849 +
        C90311 * (2 * C91078 - (C91075 * ce) / C90112 +
                  C90253 * ((-(C90253 * C91071 * ce) / C89890) / C89849 -
                            C91069 / C90112 +
                            C90253 * ((-(C90253 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90528) /
                                       C89890) /
                                          C89849 -
                                      (C91071 * ce) / C90112)));
    const double C33112 =
        2 * (C90311 * C91078 - (ae * C90829) / C90112) -
        (ae * (C91030 * C90547 + C90829)) / C90112 +
        C90311 * (C91078 - (ae * C90311 * C91030) / C90112 +
                  C90311 * (C90311 * ((-(C90253 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90528) /
                                       C89890) /
                                          C89849 -
                                      (C91071 * ce) / C90112) -
                            (ae * C91030) / C90112));
    const double C30278 =
        3 * ((-(ae * C91423) / C89890) / C89849 - C90846 / C90112 +
             C90311 * C91430) +
        (((-2 * C91423) / C89890 - (C90311 * C91427) / C89890) * ae) / C89849 +
        C90311 * (2 * C91430 - (ae * C91427) / C90112 +
                  C90311 * ((-(ae * C90311 * C91018) / C89890) / C89849 -
                            C91069 / C90112 +
                            C90311 * ((-(C90311 * C90111 * std::pow(C90115, 7) *
                                         bs[7] * C90528) /
                                       C89890) /
                                          C89849 -
                                      (ae * C91018) / C90112)));
    const double C91268 = C91266 + C91267;
    const double C91530 = C91527 - C91528;
    const double C38121 = C28199 * C25210;
    const double C89727 = C69237 * C25210;
    const double C91620 = C91614 + C91619;
    const double C89875 = C89874 - C89864;
    const double C4913 = C4900 + C4901;
    const double C4910 = C4894 + C4895;
    const double C4905 = C4884 + C4885;
    const double C4902 = C4878 + C4879;
    const double C5009 = C5000 + C5001;
    const double C5008 = C4998 + C4999;
    const double C5109 = C5102 + C5103;
    const double C5104 = C5092 + C5093;
    const double C6475 = C6468 + C6469;
    const double C6472 = C6462 + C6463;
    const double C6580 = C6574 + C6575;
    const double C6687 = C6681 + C6682;
    const double C8442 = C8435 + C8436;
    const double C8439 = C8429 + C8430;
    const double C8553 = C8547 + C8548;
    const double C8668 = C8664 + C8665;
    const double C10856 = C10843 + C10844;
    const double C10853 = C10837 + C10838;
    const double C10848 = C10827 + C10828;
    const double C10845 = C10821 + C10822;
    const double C10954 = C10947 + C10948;
    const double C10949 = C10937 + C10938;
    const double C11050 = C11041 + C11042;
    const double C11049 = C11039 + C11040;
    const double C12670 = C12663 + C12664;
    const double C12667 = C12657 + C12658;
    const double C12777 = C12773 + C12774;
    const double C12882 = C12876 + C12877;
    const double C4912 = C4898 + C4899;
    const double C4909 = C4892 + C4893;
    const double C4906 = C4886 + C4887;
    const double C4903 = C4880 + C4881;
    const double C5007 = C4996 + C4997;
    const double C5105 = C5094 + C5095;
    const double C6474 = C6466 + C6467;
    const double C6471 = C6460 + C6461;
    const double C8441 = C8433 + C8434;
    const double C8438 = C8427 + C8428;
    const double C10855 = C10841 + C10842;
    const double C10852 = C10835 + C10836;
    const double C10849 = C10829 + C10830;
    const double C10846 = C10823 + C10824;
    const double C10950 = C10939 + C10940;
    const double C11048 = C11037 + C11038;
    const double C12669 = C12661 + C12662;
    const double C12666 = C12655 + C12656;
    const double C47307 = C47294 + C47295;
    const double C47305 = C47290 + C47291;
    const double C47302 = C47284 + C47285;
    const double C47300 = C47280 + C47281;
    const double C47298 = C47276 + C47277;
    const double C47296 = C47272 + C47273;
    const double C47403 = C47395 + C47396;
    const double C47401 = C47391 + C47392;
    const double C47400 = C47389 + C47390;
    const double C47498 = C47491 + C47492;
    const double C47495 = C47485 + C47486;
    const double C47493 = C47480 + C47481;
    const double C48739 = C48730 + C48731;
    const double C48737 = C48726 + C48727;
    const double C48735 = C48722 + C48723;
    const double C48733 = C48718 + C48719;
    const double C48846 = C48838 + C48839;
    const double C48956 = C48948 + C48949;
    const double C50623 = C50614 + C50615;
    const double C50621 = C50610 + C50611;
    const double C50619 = C50606 + C50607;
    const double C50617 = C50602 + C50603;
    const double C50732 = C50726 + C50727;
    const double C50730 = C50722 + C50723;
    const double C50843 = C50838 + C50839;
    const double C50841 = C50834 + C50835;
    const double C53329 = C53316 + C53317;
    const double C53327 = C53312 + C53313;
    const double C53325 = C53308 + C53309;
    const double C53323 = C53304 + C53305;
    const double C53320 = C53298 + C53299;
    const double C53318 = C53294 + C53295;
    const double C53445 = C53438 + C53439;
    const double C53443 = C53434 + C53435;
    const double C53440 = C53428 + C53429;
    const double C53560 = C53552 + C53553;
    const double C53558 = C53548 + C53549;
    const double C53557 = C53546 + C53547;
    const double C54363 = C54358 + C54359;
    const double C54361 = C54354 + C54355;
    const double C55595 = C55590 + C55591;
    const double C55593 = C55586 + C55587;
    const double C55731 = C55728 + C55729;
    const double C55866 = C55862 + C55863;
    const double C70661 = C70654 + C70655;
    const double C70659 = C70650 + C70651;
    const double C70746 = C70742 + C70743;
    const double C70828 = C70824 + C70825;
    const double C72301 = C72296 + C72297;
    const double C72299 = C72292 + C72293;
    const double C34804 = C34796 * C92336;
    const double C39257 = C34796 * C92157;
    const double C86577 = C34796 * C41548;
    const double C39262 = C39258 * C92157;
    const double C90020 = C90018 - C90005;
    const double C41812 = C41798 + C41799;
    const double C41810 = C41794 + C41795;
    const double C41808 = C41790 + C41791;
    const double C41806 = C41786 + C41787;
    const double C41805 = C41784 + C41785;
    const double C41803 = C41780 + C41781;
    const double C41908 = C41901 + C41902;
    const double C41905 = C41895 + C41896;
    const double C41903 = C41890 + C41891;
    const double C42005 = C41998 + C41999;
    const double C42002 = C41992 + C41993;
    const double C42000 = C41987 + C41988;
    const double C44084 = C44072 + C44073;
    const double C44082 = C44068 + C44069;
    const double C44080 = C44064 + C44065;
    const double C44197 = C44192 + C44193;
    const double C44195 = C44188 + C44189;
    const double C44307 = C44302 + C44303;
    const double C44305 = C44298 + C44299;
    const double C45014 = C45002 + C45003;
    const double C45012 = C44998 + C44999;
    const double C45010 = C44994 + C44995;
    const double C45126 = C45120 + C45121;
    const double C45124 = C45116 + C45117;
    const double C45237 = C45232 + C45233;
    const double C45235 = C45228 + C45229;
    const double C53695 = C53682 + C53683;
    const double C53693 = C53678 + C53679;
    const double C53691 = C53674 + C53675;
    const double C53686 = C53664 + C53665;
    const double C53684 = C53660 + C53661;
    const double C53811 = C53804 + C53805;
    const double C53809 = C53800 + C53801;
    const double C53806 = C53794 + C53795;
    const double C53926 = C53918 + C53919;
    const double C53924 = C53914 + C53915;
    const double C53923 = C53912 + C53913;
    const double C54774 = C54766 + C54767;
    const double C54913 = C54910 + C54911;
    const double C55049 = C55046 + C55047;
    const double C57230 = C57224 + C57225;
    const double C57228 = C57220 + C57221;
    const double C57367 = C57364 + C57365;
    const double C57502 = C57498 + C57499;
    const double C86743 = C86736 + C86737;
    const double C86741 = C86732 + C86733;
    const double C86827 = C86823 + C86824;
    const double C86908 = C86904 + C86905;
    const double C89298 = C89292 + C89293;
    const double C89296 = C89288 + C89289;
    const double C89403 = C89400 + C89401;
    const double C89506 = C89502 + C89503;
    const double C4561 = C4560 * C92183;
    const double C90065 = C90063 - C90050;
    const double C58456 = C58442 + C58443;
    const double C58454 = C58438 + C58439;
    const double C58452 = C58434 + C58435;
    const double C58450 = C58430 + C58431;
    const double C58449 = C58428 + C58429;
    const double C58447 = C58424 + C58425;
    const double C58552 = C58545 + C58546;
    const double C58549 = C58539 + C58540;
    const double C58547 = C58534 + C58535;
    const double C58648 = C58641 + C58642;
    const double C58645 = C58635 + C58636;
    const double C58643 = C58630 + C58631;
    const double C60762 = C60750 + C60751;
    const double C60760 = C60746 + C60747;
    const double C60758 = C60742 + C60743;
    const double C60875 = C60870 + C60871;
    const double C60873 = C60866 + C60867;
    const double C60985 = C60980 + C60981;
    const double C60983 = C60976 + C60977;
    const double C61728 = C61716 + C61717;
    const double C61726 = C61712 + C61713;
    const double C61724 = C61708 + C61709;
    const double C61840 = C61834 + C61835;
    const double C61838 = C61830 + C61831;
    const double C61951 = C61946 + C61947;
    const double C61949 = C61942 + C61943;
    const double C64437 = C64424 + C64425;
    const double C64435 = C64420 + C64421;
    const double C64433 = C64416 + C64417;
    const double C64428 = C64406 + C64407;
    const double C64426 = C64402 + C64403;
    const double C64552 = C64544 + C64545;
    const double C64550 = C64540 + C64541;
    const double C64549 = C64538 + C64539;
    const double C64669 = C64662 + C64663;
    const double C64667 = C64658 + C64659;
    const double C64664 = C64652 + C64653;
    const double C67692 = C67684 + C67685;
    const double C67830 = C67826 + C67827;
    const double C67967 = C67964 + C67965;
    const double C68889 = C68884 + C68885;
    const double C68887 = C68880 + C68881;
    const double C69024 = C69020 + C69021;
    const double C69161 = C69158 + C69159;
    const double C81409 = C81402 + C81403;
    const double C81407 = C81398 + C81399;
    const double C81491 = C81487 + C81488;
    const double C81575 = C81571 + C81572;
    const double C84813 = C84808 + C84809;
    const double C84811 = C84804 + C84805;
    const double C84916 = C84912 + C84913;
    const double C85021 = C85018 + C85019;
    const double C24260 = C24259 * C92067;
    const double C35009 = C35007 + C35008;
    const double C34805 = C34797 * C92171;
    const double C86578 = C34797 * C92171;
    const double C34709 = C34699 * C92336;
    const double C39194 = C34699 * C92157;
    const double C86500 = C34699 * C41548;
    const double C424 = C422 * C92183;
    const double C16015 = C16007 * C92322;
    const double C20625 = C16007 * C92067;
    const double C47949 = C16007 * C46523;
    const double C6470 = C6458 + C6459;
    const double C43746 = C43734 + C43735;
    const double C4911 = C4896 + C4897;
    const double C16838 = C16826 + C16827;
    const double C42339 = C42324 + C42325;
    const double C48736 = C48724 + C48725;
    const double C12665 = C12653 + C12654;
    const double C61096 = C61084 + C61085;
    const double C10854 = C10839 + C10840;
    const double C31410 = C31398 + C31399;
    const double C59425 = C59410 + C59411;
    const double C72298 = C72290 + C72291;
    const double C8440 = C8431 + C8432;
    const double C45645 = C45636 + C45637;
    const double C54360 = C54352 + C54353;
    const double C76800 = C76792 + C76793;
    const double C6473 = C6464 + C6465;
    const double C43749 = C43740 + C43741;
    const double C4908 = C4890 + C4891;
    const double C16840 = C16830 + C16831;
    const double C42336 = C42318 + C42319;
    const double C48738 = C48728 + C48729;
    const double C12668 = C12659 + C12660;
    const double C61099 = C61090 + C61091;
    const double C10851 = C10833 + C10834;
    const double C31412 = C31402 + C31403;
    const double C59422 = C59404 + C59405;
    const double C72300 = C72294 + C72295;
    const double C8437 = C8425 + C8426;
    const double C45642 = C45630 + C45631;
    const double C54362 = C54356 + C54357;
    const double C76802 = C76796 + C76797;
    const double C90232 = C90225 - C90198;
    const double C34700 = C24562 + C24561;
    const double C37351 = C24561 + C24562;
    const double C39200 = C39195 * C92157;
    const double C90249 = C90247 + C90224;
    const double C91221 = C91219 + C91202;
    const double C91665 = C91663 + C91634;
    const double C90248 = C90202 - C90246;
    const double C91220 = C91190 - C91218;
    const double C91664 = C91639 - C91662;
    const double C833 =
        2 * ((-((C90139 + C90166 * C90425) * ce) / C89890) / C89849 -
             (ae * (C90163 * C90425 + C90138)) / C90112 + C90111 * C90582) -
        (ae * (C90240 * C90425 + C90183)) / C90112 -
        ((C90184 + C90241 * C90425) * ce) / C90112 +
        C90111 *
            (C90582 - (ae * (C90228 * C90425 + C90174)) / C90112 -
             ((C90175 + C90231 * C90425) * ce) / C90112 +
             C90111 * ((-((C90166 + C90215 * C90425) * ce) / C89890) / C89849 -
                       (ae * (C90212 * C90425 + C90163)) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C4875 =
        (((-2 * C90253 * C90138) / C89890 -
          (C90253 * (C90163 * C90425 + C90138)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90253 * C90139 + C90253 * (C90139 + C90166 * C90425)) * ce) /
            C90112 +
        C90111 * ((-2 * C90570) / C90112 + C90253 * C90582);
    const double C4876 =
        (-2 * C90570) / C90112 + C90253 * C90582 +
        (((-2 * C90253 * C90174) / C89890 -
          (C90253 * (C90228 * C90425 + C90174)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90253 * C90175 + C90253 * (C90175 + C90231 * C90425)) * ce) /
            C90112 +
        C90111 *
            ((((-2 * C90727) / C89890 -
               (C90253 * (C90212 * C90425 + C90163)) / C89890) *
              ae) /
                 C89849 -
             ((2 * C90726 + C90253 * (C90166 + C90215 * C90425)) * ce) /
                 C90112 +
             C90111 * ((-2 * C90728) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C8422 =
        (-(C90311 * (C90139 + C90166 * C90425) * ce) / C89890) / C89849 -
        (ae * C90311 * (C90163 * C90425 + C90138)) / C90112 +
        C90111 * C90311 * C90582;
    const double C8423 =
        C90311 * C90582 - (ae * C90311 * (C90228 * C90425 + C90174)) / C90112 -
        (C90311 * (C90175 + C90231 * C90425) * ce) / C90112 +
        C90111 *
            ((-(C90311 * (C90166 + C90215 * C90425) * ce) / C89890) / C89849 -
             (ae * C90311 * (C90212 * C90425 + C90163)) / C90112 +
             C90111 * C90311 *
                 ((-((C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90425) /
                   C89890) /
                      C89849 -
                  C90227 / C90112));
    const double C15279 =
        3 * ((-(C90173 * C90425) / C89890) / C89849 - C90143 / C90112) +
        C90253 * ((-2 * C90570) / C90112 + C90253 * C90582);
    const double C15280 =
        (((-3 * (C90163 * C90425 + C90138)) / C89890 +
          C90253 * ((-2 * C90727) / C89890 -
                    (C90253 * (C90212 * C90425 + C90163)) / C89890)) *
         ae) /
            C89849 -
        ((3 * (C90139 + C90166 * C90425) +
          C90253 * (2 * C90726 + C90253 * (C90166 + C90215 * C90425))) *
         ce) /
            C90112 +
        C90111 *
            (3 * C90582 +
             C90253 * ((-2 * C90728) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C16101 = (-(C90173 * C90425) / C89890) / C89849 -
                          C90143 / C90112 + C90582 * C90547;
    const double C16102 =
        (-((C90967 + (C90166 + C90215 * C90425) * C90547) * ce) / C89890) /
            C89849 -
        (ae * ((C90212 * C90425 + C90163) * C90547 + C90982)) / C90112 +
        C90111 * (C90582 +
                  ((-((C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90425) /
                    C89890) /
                       C89849 -
                   C90227 / C90112) *
                      C90547);
    const double C18738 = C90311 * ((-2 * C90570) / C90112 + C90253 * C90582);
    const double C20129 =
        4 * ((-2 * C90570) / C90112 + C90253 * C90582) +
        C90253 *
            (3 * C90582 +
             C90253 * ((-2 * C90728) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C20685 =
        (-2 * C90570) / C90112 + C90253 * C90582 +
        ((-2 * C90728) / C90112 +
         C90253 * ((-((C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90425) /
                    C89890) /
                       C89849 -
                   C90227 / C90112)) *
            C90547;
    const double C22413 =
        C90311 *
        (3 * C90582 +
         C90253 *
             ((-2 * C90728) / C90112 +
              C90253 *
                  ((-((C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90425) /
                    C89890) /
                       C89849 -
                   C90227 / C90112)));
    const double C24531 =
        2 * C90311 * C90582 +
        C90311 * (C90582 +
                  ((-((C90192 * C90193 + C90119 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90425) /
                    C89890) /
                       C89849 -
                   C90227 / C90112) *
                      C90547);
    const double C1417 =
        2 * ((-((C90139 + C90166 * C90547) * ce) / C89890) / C89849 -
             (ae * (C90163 * C90547 + C90138)) / C90112 + C90111 * C90660) -
        (ae * (C90240 * C90547 + C90183)) / C90112 -
        ((C90184 + C90241 * C90547) * ce) / C90112 +
        C90111 *
            (C90660 - (ae * (C90228 * C90547 + C90174)) / C90112 -
             ((C90175 + C90231 * C90547) * ce) / C90112 +
             C90111 * ((-((C90166 + C90215 * C90547) * ce) / C89890) / C89849 -
                       (ae * (C90212 * C90547 + C90163)) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C10818 =
        (((-2 * C90311 * C90138) / C89890 -
          (C90311 * (C90163 * C90547 + C90138)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90311 * C90139 + C90311 * (C90139 + C90166 * C90547)) * ce) /
            C90112 +
        C90111 * ((-2 * C90648) / C90112 + C90311 * C90660);
    const double C10819 =
        (-2 * C90648) / C90112 + C90311 * C90660 +
        (((-2 * C90311 * C90174) / C89890 -
          (C90311 * (C90228 * C90547 + C90174)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90311 * C90175 + C90311 * (C90175 + C90231 * C90547)) * ce) /
            C90112 +
        C90111 *
            ((((-2 * C90749) / C89890 -
               (C90311 * (C90212 * C90547 + C90163)) / C89890) *
              ae) /
                 C89849 -
             ((2 * C90748 + C90311 * (C90166 + C90215 * C90547)) * ce) /
                 C90112 +
             C90111 * ((-2 * C90750) / C90112 +
                       C90311 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C29617 =
        3 * ((-(C90173 * C90547) / C89890) / C89849 - C90143 / C90112) +
        C90311 * ((-2 * C90648) / C90112 + C90311 * C90660);
    const double C29618 =
        (((-3 * (C90163 * C90547 + C90138)) / C89890 +
          C90311 * ((-2 * C90749) / C89890 -
                    (C90311 * (C90212 * C90547 + C90163)) / C89890)) *
         ae) /
            C89849 -
        ((3 * (C90139 + C90166 * C90547) +
          C90311 * (2 * C90748 + C90311 * (C90166 + C90215 * C90547))) *
         ce) /
            C90112 +
        C90111 *
            (3 * C90660 +
             C90311 * ((-2 * C90750) / C90112 +
                       C90311 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C39192 =
        4 * ((-2 * C90648) / C90112 + C90311 * C90660) +
        C90311 *
            (3 * C90660 +
             C90311 * ((-2 * C90750) / C90112 +
                       C90311 * ((-((C90192 * C90193 +
                                     C90119 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90227 / C90112)));
    const double C399 =
        4 * ((-2 * C90111 * C90435) / C90112 + C90111 * C90446) +
        C90111 *
            (3 * C90446 +
             C90111 * ((-2 * C90111 * C90441) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90119) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C1090 = (-(C90435 * C90119) / C89890) / C89849 -
                         C90430 / C90112 -
                         (ae * (C90253 * C90277 + C90165 * ce)) / C90112 -
                         ((C90253 * C90392 + C90165 * ae) * ce) / C90112 +
                         C90253 * ((-(C90392 * ce) / C89890) / C89849 -
                                   (ae * C90277) / C90112 + C90253 * C90446);
    const double C1091 =
        (((-2 * C90267) / C89890 - (C90111 * C90277) / C89890) * ae) / C89849 -
        ((2 * C90382 + C90111 * C90392) * ce) / C90112 +
        C90253 * ((-2 * C90111 * C90435) / C90112 + C90111 * C90446);
    const double C1092 =
        (-2 * C90111 * C90435) / C90112 + C90111 * C90446 +
        ((C90253 * C90306 - (C90230 * ce) / C89890) * ae) / C89849 -
        ((C90253 * C90418 + C90230 * ae) * ce) / C90112 +
        C90253 *
            ((C90306 * ae) / C89849 - (C90418 * ce) / C90112 +
             C90253 * ((-2 * C90111 * C90441) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90119) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C1669 =
        C90311 * ((-2 * C90111 * C90435) / C90112 + C90111 * C90446);
    const double C1675 = (-(C90435 * C90119) / C89890) / C89849 -
                         C90430 / C90112 + C90446 * C90547;
    const double C1676 =
        (-2 * C90111 * C90435) / C90112 + C90111 * C90446 +
        ((-2 * C90111 * C90441) / C90112 +
         C90111 * ((-((C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90441 / C90112)) *
            C90547;
    const double C2283 =
        (((-3 * C90277) / C89890 + C90111 * C90306) * ae) / C89849 -
        ((3 * C90392 + C90111 * C90418) * ce) / C90112 +
        C90253 *
            (3 * C90446 +
             C90111 * ((-2 * C90111 * C90441) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90119) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C3005 =
        C90311 *
        (3 * C90446 +
         C90111 *
             ((-2 * C90111 * C90441) / C90112 +
              C90111 *
                  ((-((C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90441 / C90112)));
    const double C3737 = (-(C90311 * C90392 * ce) / C89890) / C89849 -
                         (ae * C90311 * C90277) / C90112 +
                         C90253 * C90311 * C90446;
    const double C5265 =
        2 * ((-(C90392 * ce) / C89890) / C89849 - (ae * C90277) / C90112 +
             C90253 * C90446) -
        (ae * (C90253 * C90835 + C90277 + C90833 * ce)) / C90112 -
        ((C90392 + C90253 * C90836 + C90833 * ae) * ce) / C90112 +
        C90253 *
            (C90446 - (ae * C90835) / C90112 - (C90836 * ce) / C90112 +
             C90253 *
                 ((-(C90412 * ce) / C89890) / C89849 - (ae * C90298) / C90112 +
                  C90253 * ((-((C90192 * C90193 +
                                C90425 * bs[7] * std::pow(C90115, 7)) *
                               C90120 * C90119) /
                             C89890) /
                                C89849 -
                            C90441 / C90112)));
    const double C6047 =
        (-((C90392 + C90412 * C90547) * ce) / C89890) / C89849 -
        (ae * (C90298 * C90547 + C90277)) / C90112 +
        C90253 * (C90446 +
                  ((-((C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90441 / C90112) *
                      C90547);
    const double C8872 =
        C90311 * C90446 - (ae * C90311 * C90835) / C90112 -
        (C90311 * C90836 * ce) / C90112 +
        C90253 *
            ((-(C90311 * C90412 * ce) / C89890) / C89849 -
             (ae * C90311 * C90298) / C90112 +
             C90253 * C90311 *
                 ((-((C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90441 / C90112));
    const double C11244 =
        2 * C90311 * C90446 +
        C90311 * (C90446 +
                  ((-((C90192 * C90193 + C90425 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90441 / C90112) *
                      C90547);
    const double C20892 =
        2 * ((-((C90380 + C90388 * C90547) * ce) / C89890) / C89849 -
             (ae * (C90273 * C90547 + C90265)) / C90112 + C90253 * C91289) -
        (ae * (C91211 * C90547 + C91013)) / C90112 -
        ((C91014 + C91212 * C90547) * ce) / C90112 +
        C90253 *
            (C91289 - (ae * (C91191 * C90547 + C91001)) / C90112 -
             ((C91004 + C91194 * C90547) * ce) / C90112 +
             C90253 * ((-((C90388 + C90406 * C90547) * ce) / C89890) / C89849 -
                       (ae * (C90291 * C90547 + C90273)) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C24944 =
        (((-2 * C90311 * C90265) / C89890 -
          (C90311 * (C90273 * C90547 + C90265)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90311 * C90380 + C90311 * (C90380 + C90388 * C90547)) * ce) /
            C90112 +
        C90253 * ((-2 * C91111) / C90112 + C90311 * C91289);
    const double C24945 =
        (-2 * C91111) / C90112 + C90311 * C91289 +
        (((-2 * C90311 * C91001) / C89890 -
          (C90311 * (C91191 * C90547 + C91001)) / C89890) *
         ae) /
            C89849 -
        ((2 * C90311 * C91004 + C90311 * (C91004 + C91194 * C90547)) * ce) /
            C90112 +
        C90253 *
            ((((-2 * C91318) / C89890 -
               (C90311 * (C90291 * C90547 + C90273)) / C89890) *
              ae) /
                 C89849 -
             ((2 * C91291 + C90311 * (C90388 + C90406 * C90547)) * ce) /
                 C90112 +
             C90253 * ((-2 * C91319) / C90112 +
                       C90311 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C30029 =
        3 * ((-(C90435 * C90547) / C89890) / C89849 - C90430 / C90112) +
        C90311 * ((-2 * C91111) / C90112 + C90311 * C91289);
    const double C35083 =
        (((-3 * C91418) / C89890 +
          C90311 * ((-2 * C91318) / C89890 -
                    (C90311 * (C90291 * C90547 + C90273)) / C89890)) *
         ae) /
            C89849 -
        ((3 * C91393 +
          C90311 * (2 * C91291 + C90311 * (C90388 + C90406 * C90547))) *
         ce) /
            C90112 +
        C90253 *
            (3 * C91289 +
             C90311 * ((-2 * C91319) / C90112 +
                       C90311 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C39430 =
        4 * ((-2 * C91111) / C90112 + C90311 * C91289) +
        C90311 *
            (3 * C91289 +
             C90311 * ((-2 * C91319) / C90112 +
                       C90311 * ((-((C90192 * C90193 +
                                     C90425 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90547) /
                                  C89890) /
                                     C89849 -
                                 C90441 / C90112)));
    const double C724 =
        4 * ((-2 * C90111 * C90557) / C90112 + C90111 * C90568) +
        C90111 *
            (3 * C90568 +
             C90111 * ((-2 * C90111 * C90563) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90547 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90119) /
                                  C89890) /
                                     C89849 -
                                 C90563 / C90112)));
    const double C1325 =
        C90253 * ((-2 * C90111 * C90557) / C90112 + C90111 * C90568);
    const double C1331 = (-(C90557 * C90119) / C89890) / C89849 -
                         C90552 / C90112 + C90568 * C90425;
    const double C1332 =
        (-2 * C90111 * C90557) / C90112 + C90111 * C90568 +
        ((-2 * C90111 * C90563) / C90112 +
         C90111 * ((-((C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90563 / C90112)) *
            C90425;
    const double C1914 = (-(C90557 * C90119) / C89890) / C89849 -
                         C90552 / C90112 -
                         (ae * (C90311 * C90335 + C90165 * ce)) / C90112 -
                         ((C90311 * C90493 + C90165 * ae) * ce) / C90112 +
                         C90311 * ((-(C90493 * ce) / C89890) / C89849 -
                                   (ae * C90335) / C90112 + C90311 * C90568);
    const double C1915 =
        (((-2 * C90325) / C89890 - (C90111 * C90335) / C89890) * ae) / C89849 -
        ((2 * C90483 + C90111 * C90493) * ce) / C90112 +
        C90311 * ((-2 * C90111 * C90557) / C90112 + C90111 * C90568);
    const double C1916 =
        (-2 * C90111 * C90557) / C90112 + C90111 * C90568 +
        ((C90311 * C90364 - (C90230 * ce) / C89890) * ae) / C89849 -
        ((C90311 * C90519 + C90230 * ae) * ce) / C90112 +
        C90311 *
            ((C90364 * ae) / C89849 - (C90519 * ce) / C90112 +
             C90311 * ((-2 * C90111 * C90563) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90547 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90119) /
                                  C89890) /
                                     C89849 -
                                 C90563 / C90112)));
    const double C2627 =
        C90253 *
        (3 * C90568 +
         C90111 *
             ((-2 * C90111 * C90563) / C90112 +
              C90111 *
                  ((-((C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90563 / C90112)));
    const double C3343 =
        (((-3 * C90335) / C89890 + C90111 * C90364) * ae) / C89849 -
        ((3 * C90493 + C90111 * C90519) * ce) / C90112 +
        C90311 *
            (3 * C90568 +
             C90111 * ((-2 * C90111 * C90563) / C90112 +
                       C90111 * ((-((C90192 * C90193 +
                                     C90547 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90119) /
                                  C89890) /
                                     C89849 -
                                 C90563 / C90112)));
    const double C4021 = (-(C90253 * C90493 * ce) / C89890) / C89849 -
                         (ae * C90253 * C90335) / C90112 +
                         C90311 * C90253 * C90568;
    const double C5624 =
        2 * C90253 * C90568 +
        C90253 * (C90568 +
                  ((-((C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90563 / C90112) *
                      C90425);
    const double C6358 =
        C90253 * C90568 - (ae * (C90311 * C90889 + C90833 * ce)) / C90112 -
        ((C90311 * C90890 + C90833 * ae) * ce) / C90112 +
        C90311 *
            ((-(C90890 * ce) / C89890) / C89849 - (ae * C90889) / C90112 +
             C90311 * C90253 *
                 ((-((C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                     C90120 * C90119) /
                   C89890) /
                      C89849 -
                  C90563 / C90112));
    const double C9294 =
        (-((C90493 + C90513 * C90425) * ce) / C89890) / C89849 -
        (ae * (C90356 * C90425 + C90335)) / C90112 +
        C90311 * (C90568 +
                  ((-((C90192 * C90193 + C90547 * bs[7] * std::pow(C90115, 7)) *
                      C90120 * C90119) /
                    C89890) /
                       C89849 -
                   C90563 / C90112) *
                      C90425);
    const double C11587 =
        2 * ((-(C90493 * ce) / C89890) / C89849 - (ae * C90335) / C90112 +
             C90311 * C90568) -
        (ae * (C90311 * C90958 + C90335 + C90956 * ce)) / C90112 -
        ((C90493 + C90311 * C90959 + C90956 * ae) * ce) / C90112 +
        C90311 *
            (C90568 - (ae * C90958) / C90112 - (C90959 * ce) / C90112 +
             C90311 *
                 ((-(C90513 * ce) / C89890) / C89849 - (ae * C90356) / C90112 +
                  C90311 * ((-((C90192 * C90193 +
                                C90547 * bs[7] * std::pow(C90115, 7)) *
                               C90120 * C90119) /
                             C89890) /
                                C89849 -
                            C90563 / C90112)));
    const double C20623 =
        4 * ((-2 * C90253 * C90557) / C90112 + C90253 * C91274) +
        C90253 *
            (3 * C91274 +
             C90253 * ((-2 * C90253 * C90563) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90547 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90563 / C90112)));
    const double C21097 =
        (-2 * C90253 * C90557) / C90112 + C90253 * C91274 +
        ((C90311 * C91240 - (C91207 * ce) / C89890) * ae) / C89849 -
        ((C90311 * C91263 + C91207 * ae) * ce) / C90112 +
        C90311 *
            ((C91240 * ae) / C89849 - (C91263 * ce) / C90112 +
             C90311 * ((-2 * C90253 * C90563) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90547 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90563 / C90112)));
    const double C23018 =
        (((-3 * C91043) / C89890 + C90253 * C91240) * ae) / C89849 -
        ((3 * C91064 + C90253 * C91263) * ce) / C90112 +
        C90311 *
            (3 * C91274 +
             C90253 * ((-2 * C90253 * C90563) / C90112 +
                       C90253 * ((-((C90192 * C90193 +
                                     C90547 * bs[7] * std::pow(C90115, 7)) *
                                    C90120 * C90425) /
                                  C89890) /
                                     C89849 -
                                 C90563 / C90112)));
    const double C25287 =
        2 * ((-(C91064 * ce) / C89890) / C89849 - (ae * C91043) / C90112 +
             C90311 * C91274) -
        (ae * (C90311 * C91365 + C91043 + C91363 * ce)) / C90112 -
        ((C91064 + C90311 * C91366 + C91363 * ae) * ce) / C90112 +
        C90311 *
            (C91274 - (ae * C91365) / C90112 - (C91366 * ce) / C90112 +
             C90311 *
                 ((-(C91257 * ce) / C89890) / C89849 - (ae * C91230) / C90112 +
                  C90311 * ((-((C90192 * C90193 +
                                C90547 * bs[7] * std::pow(C90115, 7)) *
                               C90120 * C90425) /
                             C89890) /
                                C89849 -
                            C90563 / C90112)));
    const double C24962 = C24953 + C24954;
    const double C37790 = C37784 + C37785;
    const double C81999 = C81990 + C81991;
    const double C89402 = C89398 + C89399;
    const double C91213 = C91209 - C91187;
    const double C91654 = C91650 - C91636;
    const double C15672 =
        3 * ((-(ae * C90829) / C89890) / C89849 - C90825 / C90112 -
             (C90830 * ce) / C90112 + C90253 * C91032) +
        (((-2 * C90829) / C89890 - (C90253 * C91037) / C89890 -
          (C91026 * ce) / C89890) *
         ae) /
            C89849 -
        ((2 * C90830 + C90253 * C91038 + C91026 * ae) * ce) / C90112 +
        C90253 * (2 * C91032 - (ae * C91037) / C90112 - (C91038 * ce) / C90112 +
                  C90253 * ((-(ae * C91030) / C89890) / C89849 -
                            C91017 / C90112 - (C91031 * ce) / C90112 +
                            C90253 * ((-(C91021 * ce) / C89890) / C89849 -
                                      (ae * C91018) / C90112 -
                                      (C90253 * C90111 *
                                       (C90192 * C90193 +
                                        C90425 * bs[7] * std::pow(C90115, 7)) *
                                       C90120) /
                                          C90112)));
    const double C17282 = C17276 + C17277;
    const double C49180 = C49174 + C49175;
    const double C27672 = C27666 + C27667;
    const double C84594 = C84588 + C84589;
    const double C24868 = C24853 + C24854;
    const double C37679 = C37668 + C37669;
    const double C81907 = C81892 + C81893;
    const double C89297 = C89290 + C89291;
    const double C27564 = C27554 + C27555;
    const double C84486 = C84476 + C84477;
    const double C4463 = C4446 + C4462;
    const double C9677 = C9676 * C92195;
    const double C58267 = C9676 * C92195;
    const double C67421 = C67419 + C67417;
    const double C67420 = C67414 + C67418;
    const double C35106 = C35089 + C35105;
    const double C30354 =
        3 * ((-(ae * C90952) / C89890) / C89849 - C90850 / C90112 -
             (C90953 * ce) / C90112 + C90311 * C91465) +
        (((-2 * C90952) / C89890 - (C90311 * C91470) / C89890 -
          (C91462 * ce) / C89890) *
         ae) /
            C89849 -
        ((2 * C90953 + C90311 * C91471 + C91462 * ae) * ce) / C90112 +
        C90311 * (2 * C91465 - (ae * C91470) / C90112 - (C91471 * ce) / C90112 +
                  C90311 * ((-(ae * C91460) / C89890) / C89849 -
                            C91081 / C90112 - (C91463 * ce) / C90112 +
                            C90311 * ((-(C91071 * ce) / C89890) / C89849 -
                                      (ae * C91050) / C90112 -
                                      (C90311 * C90111 *
                                       (C90192 * C90193 +
                                        C90547 * bs[7] * std::pow(C90115, 7)) *
                                       C90120) /
                                          C90112)));
    const double C32268 = C32262 + C32263;
    const double C73131 = C73125 + C73126;
    const double C35425 =
        3 * ((-(ae * C91359) / C89890) / C89849 - C91355 / C90112 -
             (C91360 * ce) / C90112 + C90311 * C91549) +
        (((-2 * C91359) / C89890 - (C90311 * C91554) / C89890 -
          (C91543 * ce) / C89890) *
         ae) /
            C89849 -
        ((2 * C91360 + C90311 * C91555 + C91543 * ae) * ce) / C90112 +
        C90311 * (2 * C91549 - (ae * C91554) / C90112 - (C91555 * ce) / C90112 +
                  C90311 * ((-(ae * C91547) / C89890) / C89849 -
                            C91534 / C90112 - (C91548 * ce) / C90112 +
                            C90311 * ((-(C91538 * ce) / C89890) / C89849 -
                                      (ae * C91535) / C90112 -
                                      (C90311 * C90253 *
                                       (C90192 * C90193 +
                                        C90547 * bs[7] * std::pow(C90115, 7)) *
                                       C90120) /
                                          C90112)));
    const double C38229 = C38223 + C38224;
    const double C89835 = C89829 + C89830;
    const double C16016 = C16008 * C92072;
    const double C47950 = C16008 * C92072;
    const double C10068 = C10051 + C10067;
    const double C55453 = C55451 + C55449;
    const double C55452 = C55446 + C55450;
    const double C20630 = C20626 * C92067;
    const double C24449 = C24432 + C24448;
    const double C5006 = C4994 + C4995;
    const double C6581 = C6576 + C6577;
    const double C16949 = C16942 + C16943;
    const double C42428 = C42416 + C42417;
    const double C48847 = C48840 + C48841;
    const double C5010 = C5002 + C5003;
    const double C15416 = C15407 + C15408;
    const double C21268 = C21263 + C21264;
    const double C47402 = C47393 + C47394;
    const double C48848 = C48842 + C48843;
    const double C10951 = C10941 + C10942;
    const double C12776 = C12771 + C12772;
    const double C31522 = C31516 + C31517;
    const double C55730 = C55726 + C55727;
    const double C59516 = C59506 + C59507;
    const double C10953 = C10945 + C10946;
    const double C29756 = C29747 + C29748;
    const double C36538 = C36535 + C36536;
    const double C53444 = C53436 + C53437;
    const double C72405 = C72402 + C72403;
    const double C8554 = C8549 + C8550;
    const double C18876 = C18869 + C18870;
    const double C25509 = C25505 + C25506;
    const double C50731 = C50724 + C50725;
    const double C54498 = C54494 + C54495;
    const double C20228 = C20223 + C20224;
    const double C24660 = C24650 + C24651;
    const double C22515 = C22511 + C22512;
    const double C193 =
        4 * (2 * C90280 - (ae * C90277) / C90112 + C90111 * C90308) +
        (((-3 * C90277) / C89890 + C90111 * C90306) * ae) / C89849 +
        C90111 *
            (3 * C90308 + (C90306 * ae) / C89849 +
             C90111 * (2 * C90305 - (ae * C90298) / C90112 +
                       C90111 * ((-(ae * C90111 * C90291) / C89890) / C89849 -
                                 C90288 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90260) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90291) / C90112))));
    const double C895 =
        C90253 * (2 * C90280 - (ae * C90277) / C90112 + C90111 * C90308) -
        ((2 * C90145 + C90111 * C90184 + C90165 * ae) * ce) / C90112;
    const double C901 = (-(ae * C90267) / C89890) / C89849 - C90264 / C90112 +
                        C90111 * C90280 - (C90253 * C90184 * ce) / C90112 +
                        C90253 * (C90253 * C90308 - (C90184 * ce) / C90112);
    const double C1476 =
        C90311 * (2 * C90280 - (ae * C90277) / C90112 + C90111 * C90308);
    const double C1482 = (-(ae * C90267) / C89890) / C89849 - C90264 / C90112 +
                         C90111 * C90280 + C90308 * C90547;
    const double C1483 =
        2 * C90280 - (ae * C90277) / C90112 + C90111 * C90308 +
        (2 * C90305 - (ae * C90298) / C90112 +
         C90111 *
             ((-(ae * C90111 * C90291) / C89890) / C89849 - C90288 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (ae * C90291) / C90112))) *
            C90547;
    const double C2782 =
        C90311 *
        (3 * C90308 + (C90306 * ae) / C89849 +
         C90111 *
             (2 * C90305 - (ae * C90298) / C90112 +
              C90111 *
                  ((-(ae * C90111 * C90291) / C89890) / C89849 -
                   C90288 / C90112 +
                   C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (ae * C90291) / C90112))));
    const double C3519 = C90311 * (C90253 * C90308 - (C90184 * ce) / C90112);
    const double C4992 =
        2 * (C90253 * C90308 - (C90184 * ce) / C90112) -
        ((C90184 + C90241 * C90425) * ce) / C90112 +
        C90253 *
            (C90308 - (C90253 * C90241 * ce) / C90112 +
             C90253 * (C90253 * ((-(ae * C90111 * C90291) / C89890) / C89849 -
                                 C90288 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90260) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90291) / C90112)) -
                       (C90241 * ce) / C90112));
    const double C5810 =
        C90253 * C90308 - (C90184 * ce) / C90112 +
        (C90253 *
             ((-(ae * C90111 * C90291) / C89890) / C89849 - C90288 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (ae * C90291) / C90112)) -
         (C90241 * ce) / C90112) *
            C90547;
    const double C8545 =
        C90311 *
        (C90308 - (C90863 * ce) / C90112 +
         C90253 *
             (C90253 *
                  ((-(ae * C90111 * C90291) / C89890) / C89849 -
                   C90288 / C90112 +
                   C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (ae * C90291) / C90112)) -
              (C90241 * ce) / C90112));
    const double C10935 =
        2 * C90311 * C90308 +
        C90311 *
            (C90308 +
             ((-(ae * C90111 * C90291) / C89890) / C89849 - C90288 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (ae * C90291) / C90112)) *
                 C90547);
    const double C15399 =
        3 * (C90280 - (C90861 * ce) / C90112 + C90253 * C90974) -
        ((2 * C90861 + C90253 * C90975) * ce) / C90112 +
        C90253 *
            (2 * C90974 - (C90975 * ce) / C90112 +
             C90253 * (C90305 - (C90253 * C90231 * ce) / C90112 +
                       C90253 * (C90253 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90260) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90291) / C90112) -
                                 (C90231 * ce) / C90112)));
    const double C16180 =
        C90280 - (C90861 * ce) / C90112 + C90253 * C90974 +
        (C90305 - (C90253 * C90231 * ce) / C90112 +
         C90253 * (C90253 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (ae * C90291) / C90112) -
                   (C90231 * ce) / C90112)) *
            C90547;
    const double C18865 =
        C90311 *
        (2 * C90974 - (C90975 * ce) / C90112 +
         C90253 *
             (C90305 - (C90253 * C90231 * ce) / C90112 +
              C90253 *
                  (C90253 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (ae * C90291) / C90112) -
                   (C90231 * ce) / C90112)));
    const double C32483 =
        2 * C90311 * C90974 +
        C90311 * (C90974 +
                  (C90253 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (ae * C90291) / C90112) -
                   (C90231 * ce) / C90112) *
                      C90547);
    const double C15418 = C15411 + C15412;
    const double C21269 = C21265 + C21266;
    const double C47404 = C47397 + C47398;
    const double C32489 = C32485 + C32486;
    const double C35635 = C35633 + C35634;
    const double C53442 = C53432 + C53433;
    const double C18878 = C18873 + C18874;
    const double C25510 = C25507 + C25508;
    const double C50733 = C50728 + C50729;
    const double C29757 = C29749 + C29750;
    const double C40385 = C40382 + C40383;
    const double C70745 = C70740 + C70741;
    const double C20215 =
        4 * (2 * C90970 - (C90967 * ce) / C90112 + C90253 * C91148) -
        ((3 * C90967 + C90253 * C91145) * ce) / C90112 +
        C90253 *
            (3 * C91148 - (C91145 * ce) / C90112 +
             C90253 * (2 * C91146 - (C91141 * ce) / C90112 +
                       C90253 * ((-(C90253 * C90215 * ce) / C89890) / C89849 -
                                 C90288 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90260) /
                                            C89890) /
                                               C89849 -
                                           (C90215 * ce) / C90112))));
    const double C20737 =
        2 * C90970 - (C90967 * ce) / C90112 + C90253 * C91148 +
        (2 * C91146 - (C91141 * ce) / C90112 +
         C90253 *
             ((-(C90253 * C90215 * ce) / C89890) / C89849 - C90288 / C90112 +
              C90253 *
                  ((-(C90253 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (C90215 * ce) / C90112))) *
            C90547;
    const double C22505 =
        C90311 *
        (3 * C91148 - (C91145 * ce) / C90112 +
         C90253 *
             (2 * C91146 - (C91141 * ce) / C90112 +
              C90253 *
                  ((-(C90253 * C90215 * ce) / C89890) / C89849 -
                   C90288 / C90112 +
                   C90253 * ((-(C90253 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (C90215 * ce) / C90112))));
    const double C24641 =
        2 * C90311 * C91148 +
        C90311 *
            (C91148 +
             ((-(C90253 * C90215 * ce) / C89890) / C89849 - C90288 / C90112 +
              C90253 *
                  ((-(C90253 * std::pow(C90115, 7) * bs[7] * C90260) / C89890) /
                       C89849 -
                   (C90215 * ce) / C90112)) *
                 C90547);
    const double C34806 = C34798 + C34799;
    const double C344 = C335 + C336;
    const double C2215 = C2206 + C2207;
    const double C4361 = C4344 + C4345;
    const double C6810 = C6800 + C6801;
    const double C14788 = C14774 + C14775;
    const double C41809 = C41792 + C41793;
    const double C44086 = C44076 + C44077;
    const double C6807 = C6794 + C6795;
    const double C14781 = C14760 + C14761;
    const double C17176 = C17168 + C17169;
    const double C44083 = C44070 + C44071;
    const double C46783 = C46762 + C46763;
    const double C2937 = C2928 + C2929;
    const double C7763 = C7753 + C7754;
    const double C45016 = C45006 + C45007;
    const double C11157 = C11145 + C11146;
    const double C36750 = C36745 + C36746;
    const double C53689 = C53670 + C53671;
    const double C7760 = C7747 + C7748;
    const double C11990 = C11983 + C11984;
    const double C18107 = C18099 + C18100;
    const double C45013 = C45000 + C45001;
    const double C54776 = C54770 + C54771;
    const double C66082 = C66076 + C66077;
    const double C319 =
        4 * (2 * C90395 - (C90392 * ce) / C90112 + C90111 * C90421) -
        ((3 * C90392 + C90111 * C90418) * ce) / C90112 +
        C90111 *
            (3 * C90421 - (C90418 * ce) / C90112 +
             C90111 * (2 * C90419 - (C90412 * ce) / C90112 +
                       C90111 * ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                                 C90403 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90375) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112))));
    const double C1027 =
        (((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
          (C90165 * ce) / C89890) *
         ae) /
            C89849 +
        C90253 * (2 * C90395 - (C90392 * ce) / C90112 + C90111 * C90421);
    const double C1033 = (-(C90382 * ce) / C89890) / C89849 - C90379 / C90112 +
                         C90111 * C90395 - (ae * C90253 * C90183) / C90112 +
                         C90253 * (C90253 * C90421 - (ae * C90183) / C90112);
    const double C1611 =
        C90311 * (2 * C90395 - (C90392 * ce) / C90112 + C90111 * C90421);
    const double C1617 = (-(C90382 * ce) / C89890) / C89849 - C90379 / C90112 +
                         C90111 * C90395 + C90421 * C90547;
    const double C1618 =
        2 * C90395 - (C90392 * ce) / C90112 + C90111 * C90421 +
        (2 * C90419 - (C90412 * ce) / C90112 +
         C90111 *
             ((-(C90111 * C90406 * ce) / C89890) / C89849 - C90403 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) / C89890) /
                       C89849 -
                   (C90406 * ce) / C90112))) *
            C90547;
    const double C2920 =
        C90311 *
        (3 * C90421 - (C90418 * ce) / C90112 +
         C90111 *
             (2 * C90419 - (C90412 * ce) / C90112 +
              C90111 *
                  ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                   C90403 / C90112 +
                   C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) /
                              C89890) /
                                 C89849 -
                             (C90406 * ce) / C90112))));
    const double C3667 =
        C90253 * C90311 * C90421 - (ae * C90311 * C90183) / C90112;
    const double C5188 =
        2 * (C90253 * C90421 - (ae * C90183) / C90112) -
        (ae * (C90240 * C90425 + C90183)) / C90112 +
        C90253 *
            (C90421 - (ae * C90253 * C90240) / C90112 +
             C90253 * (C90253 * ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                                 C90403 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90375) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112)) -
                       (ae * C90240) / C90112));
    const double C5970 =
        C90253 *
            (C90421 +
             ((-(C90111 * C90406 * ce) / C89890) / C89849 - C90403 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) / C89890) /
                       C89849 -
                   (C90406 * ce) / C90112)) *
                 C90547) -
        (ae * (C90240 * C90547 + C90183)) / C90112;
    const double C8771 =
        C90311 * C90421 - (ae * C90311 * C90878) / C90112 +
        C90253 *
            (C90253 * C90311 *
                 ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                  C90403 / C90112 +
                  C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) /
                             C89890) /
                                C89849 -
                            (C90406 * ce) / C90112)) -
             (ae * C90311 * C90240) / C90112);
    const double C11131 =
        2 * C90311 * C90421 +
        C90311 *
            (C90421 +
             ((-(C90111 * C90406 * ce) / C89890) / C89849 - C90403 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) / C89890) /
                       C89849 -
                   (C90406 * ce) / C90112)) *
                 C90547);
    const double C15596 =
        3 * (C90395 - (ae * C90876) / C90112 + C90253 * C90990) +
        (((-2 * C90876) / C89890 - (C90253 * C90991) / C89890) * ae) / C89849 +
        C90253 *
            (2 * C90990 - (ae * C90991) / C90112 +
             C90253 * (C90419 - (ae * C90253 * C90228) / C90112 +
                       C90253 * (C90253 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90375) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112) -
                                 (ae * C90228) / C90112)));
    const double C17177 = C17170 + C17171;
    const double C49075 = C49068 + C49069;
    const double C30753 = C30750 + C30751;
    const double C36749 = C36743 + C36744;
    const double C53688 = C53668 + C53669;
    const double C18108 = C18101 + C18102;
    const double C49993 = C49986 + C49987;
    const double C54777 = C54772 + C54773;
    const double C66083 = C66078 + C66079;
    const double C29948 = C29940 + C29941;
    const double C20353 =
        4 * (2 * C90985 - (ae * C90982) / C90112 + C90253 * C91173) +
        (((-3 * C90982) / C89890 + C90253 * C91171) * ae) / C89849 +
        C90253 *
            (3 * C91173 + (C91171 * ae) / C89849 +
             C90253 * (2 * C91170 - (ae * C91163) / C90112 +
                       C90253 * ((-(ae * C90253 * C90212) / C89890) / C89849 -
                                 C90403 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90375) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90212) / C90112))));
    const double C35001 = C34985 + C34986;
    const double C41129 = C41126 + C41127;
    const double C86740 = C86730 + C86731;
    const double C39377 = C39373 + C39374;
    const double C5106 = C5096 + C5097;
    const double C6688 = C6683 + C6684;
    const double C17059 = C17052 + C17053;
    const double C42522 = C42512 + C42513;
    const double C48957 = C48950 + C48951;
    const double C5108 = C5100 + C5101;
    const double C15514 = C15505 + C15506;
    const double C21346 = C21340 + C21341;
    const double C47496 = C47487 + C47488;
    const double C48958 = C48952 + C48953;
    const double C11047 = C11035 + C11036;
    const double C12883 = C12878 + C12879;
    const double C31631 = C31624 + C31625;
    const double C55867 = C55864 + C55865;
    const double C59606 = C59594 + C59595;
    const double C11051 = C11043 + C11044;
    const double C29856 = C29847 + C29848;
    const double C36640 = C36638 + C36639;
    const double C53559 = C53550 + C53551;
    const double C72508 = C72504 + C72505;
    const double C8667 = C8662 + C8663;
    const double C18989 = C18981 + C18982;
    const double C25615 = C25610 + C25611;
    const double C50840 = C50832 + C50833;
    const double C54634 = C54630 + C54631;
    const double C39319 = C39317 + C39318;
    const double C256 =
        4 * (2 * C90338 - (ae * C90335) / C90112 + C90111 * C90366) +
        (((-3 * C90335) / C89890 + C90111 * C90364) * ae) / C89849 +
        C90111 *
            (3 * C90366 + (C90364 * ae) / C89849 +
             C90111 * (2 * C90363 - (ae * C90356) / C90112 +
                       C90111 * ((-(ae * C90111 * C90349) / C89890) / C89849 -
                                 C90346 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90318) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90349) / C90112))));
    const double C961 =
        C90253 * (2 * C90338 - (ae * C90335) / C90112 + C90111 * C90366);
    const double C967 = (-(ae * C90325) / C89890) / C89849 - C90322 / C90112 +
                        C90111 * C90338 + C90366 * C90425;
    const double C968 =
        2 * C90338 - (ae * C90335) / C90112 + C90111 * C90366 +
        (2 * C90363 - (ae * C90356) / C90112 +
         C90111 *
             ((-(ae * C90111 * C90349) / C89890) / C89849 - C90346 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) / C89890) /
                       C89849 -
                   (ae * C90349) / C90112))) *
            C90425;
    const double C1545 =
        C90311 * (2 * C90338 - (ae * C90335) / C90112 + C90111 * C90366) -
        ((2 * C90145 + C90111 * C90184 + C90165 * ae) * ce) / C90112;
    const double C1551 = (-(ae * C90325) / C89890) / C89849 - C90322 / C90112 +
                         C90111 * C90338 - (C90311 * C90184 * ce) / C90112 +
                         C90311 * (C90311 * C90366 - (C90184 * ce) / C90112);
    const double C2130 =
        C90253 *
        (3 * C90366 + (C90364 * ae) / C89849 +
         C90111 *
             (2 * C90363 - (ae * C90356) / C90112 +
              C90111 *
                  ((-(ae * C90111 * C90349) / C89890) / C89849 -
                   C90346 / C90112 +
                   C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) /
                              C89890) /
                                 C89849 -
                             (ae * C90349) / C90112))));
    const double C3593 =
        C90311 * C90253 * C90366 - (C90253 * C90184 * ce) / C90112;
    const double C5090 =
        2 * C90253 * C90366 +
        C90253 *
            (C90366 +
             ((-(ae * C90111 * C90349) / C89890) / C89849 - C90346 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) / C89890) /
                       C89849 -
                   (ae * C90349) / C90112)) *
                 C90425);
    const double C5890 =
        C90253 * C90366 - (C90311 * C90863 * ce) / C90112 +
        C90311 *
            (C90311 * C90253 *
                 ((-(ae * C90111 * C90349) / C89890) / C89849 -
                  C90346 / C90112 +
                  C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) /
                             C89890) /
                                C89849 -
                            (ae * C90349) / C90112)) -
             (C90863 * ce) / C90112);
    const double C8658 =
        C90311 *
            (C90366 +
             ((-(ae * C90111 * C90349) / C89890) / C89849 - C90346 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) / C89890) /
                       C89849 -
                   (ae * C90349) / C90112)) *
                 C90425) -
        ((C90184 + C90241 * C90425) * ce) / C90112;
    const double C11033 =
        2 * (C90311 * C90366 - (C90184 * ce) / C90112) -
        ((C90184 + C90241 * C90547) * ce) / C90112 +
        C90311 *
            (C90366 - (C90311 * C90241 * ce) / C90112 +
             C90311 * (C90311 * ((-(ae * C90111 * C90349) / C89890) / C89849 -
                                 C90346 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90318) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90349) / C90112)) -
                       (C90241 * ce) / C90112));
    const double C29839 =
        3 * (C90338 - (C91381 * ce) / C90112 + C90311 * C91384) -
        ((2 * C91381 + C90311 * C91385) * ce) / C90112 +
        C90311 *
            (2 * C91384 - (C91385 * ce) / C90112 +
             C90311 * (C90363 - (C90311 * C90231 * ce) / C90112 +
                       C90311 * (C90311 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90318) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90349) / C90112) -
                                 (C90231 * ce) / C90112)));
    const double C15515 = C15507 + C15508;
    const double C21347 = C21343 + C21344;
    const double C47497 = C47489 + C47490;
    const double C32596 = C32593 + C32594;
    const double C35737 = C35735 + C35736;
    const double C53561 = C53554 + C53555;
    const double C18991 = C18985 + C18986;
    const double C25616 = C25613 + C25614;
    const double C50842 = C50836 + C50837;
    const double C29858 = C29851 + C29852;
    const double C40455 = C40453 + C40454;
    const double C70829 = C70826 + C70827;
    const double C39315 =
        4 * (2 * C91379 - (C91376 * ce) / C90112 + C90311 * C91576) -
        ((3 * C91376 + C90311 * C91573) * ce) / C90112 +
        C90311 *
            (3 * C91576 - (C91573 * ce) / C90112 +
             C90311 * (2 * C91574 - (C91569 * ce) / C90112 +
                       C90311 * ((-(C90311 * C90215 * ce) / C89890) / C89849 -
                                 C90346 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90318) /
                                            C89890) /
                                               C89849 -
                                           (C90215 * ce) / C90112))));
    const double C27781 = C27777 + C27778;
    const double C84703 = C84699 + C84700;
    const double C2382 = C2373 + C2374;
    const double C4556 = C4548 + C4549;
    const double C42004 = C41996 + C41997;
    const double C7028 = C7020 + C7021;
    const double C14971 = C14962 + C14963;
    const double C44304 = C44296 + C44297;
    const double C46973 = C46964 + C46965;
    const double C11354 = C11349 + C11350;
    const double C3106 = C3102 + C3103;
    const double C7983 = C7977 + C7978;
    const double C12209 = C12203 + C12204;
    const double C45236 = C45230 + C45231;
    const double C20455 =
        4 * (2 * C91046 - (ae * C91043) / C90112 + C90253 * C91243) +
        (((-3 * C91043) / C89890 + C90253 * C91240) * ae) / C89849 +
        C90253 *
            (3 * C91243 + (C91240 * ae) / C89849 +
             C90253 * (2 * C91239 - (ae * C91230) / C90112 +
                       C90253 * ((-(ae * C90253 * C90349) / C89890) / C89849 -
                                 C90462 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90452) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90349) / C90112))));
    const double C20943 =
        2 * (C90253 * C91303 - (ae * (C90311 * (C90311 * C90331 + C90156) +
                                      C90323 + C90311 * C90149 * ce)) /
                                   C90112) -
        (ae * (C90311 * (C90311 * C91230 + C91199) + C91043 +
               C90311 * C91193 * ce)) /
            C90112 +
        C90253 *
            (C91303 -
             (ae * (C90311 * (C90311 * C90253 * C90349 + C91192) + C91224 +
                    C90311 * C91181 * ce)) /
                 C90112 +
             C90253 * (C90253 * ((-(C90311 * C90406 * ce) / C89890) / C89849 -
                                 C90462 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90452) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112)) -
                       (ae * (C90311 * (C90311 * C90349 + C90204) + C90331 +
                              C90311 * C90191 * ce)) /
                           C90112));
    const double C25038 =
        (((-2 * C90946) / C89890 -
          (C90311 * (C90311 * C91329 + C90323 + C90311 * C90149 * ce)) /
              C89890 -
          ((C90128 + C90149 * C90547) * ce) / C89890) *
         ae) /
            C89849 +
        C90253 * (2 * C91119 - ((C90380 + C90388 * C90547) * ce) / C90112 +
                  C90311 * C91303);
    const double C25039 =
        2 * C91119 - ((C90380 + C90388 * C90547) * ce) / C90112 +
        C90311 * C91303 +
        (((-2 * (C90311 * C91224 + C91002)) / C89890 -
          (C90311 * (C90311 * (C90311 * C90253 * C90349 + C91192) + C91224 +
                     C90311 * C91181 * ce)) /
              C89890 -
          ((C90996 + C91181 * C90547) * ce) / C89890) *
         ae) /
            C89849 +
        C90253 *
            ((((-2 * C91329) / C89890 -
               (C90311 * (C90311 * (C90311 * C90349 + C90204) + C90331 +
                          C90311 * C90191 * ce)) /
                   C89890 -
               ((C90149 + C90191 * C90547) * ce) / C89890) *
              ae) /
                 C89849 +
             C90253 * (2 * C91300 - ((C90388 + C90406 * C90547) * ce) / C90112 +
                       C90311 * ((-(C90311 * C90406 * ce) / C89890) / C89849 -
                                 C90462 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90452) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112))));
    const double C30117 =
        3 * ((-(C91391 * ce) / C89890) / C89849 - C90455 / C90112 +
             C90311 * C91119) -
        ((2 * C91391 + C90311 * C91393) * ce) / C90112 +
        C90311 * (2 * C91119 - (C91393 * ce) / C90112 + C90311 * C91303);
    const double C35180 =
        (((-3 * C91446) / C89890 +
          C90311 * ((-2 * C91329) / C89890 -
                    (C90311 * (C90311 * (C90311 * C90349 + C90204) + C90331 +
                               C90311 * C90191 * ce)) /
                        C89890 -
                    (C91512 * ce) / C89890) -
          ((2 * C91435 + C90311 * C91512) * ce) / C89890) *
         ae) /
            C89849 +
        C90253 *
            (3 * C91303 - ((2 * C91291 + C90311 * C91513) * ce) / C90112 +
             C90311 * (2 * C91300 - (C91513 * ce) / C90112 +
                       C90311 * ((-(C90311 * C90406 * ce) / C89890) / C89849 -
                                 C90462 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90452) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112))));
    const double C39487 =
        4 * (2 * C91119 - (C91393 * ce) / C90112 + C90311 * C91303) -
        ((3 * C91393 + C90311 * C91582) * ce) / C90112 +
        C90311 *
            (3 * C91303 - (C91582 * ce) / C90112 +
             C90311 * (2 * C91300 - (C91513 * ce) / C90112 +
                       C90311 * ((-(C90311 * C90406 * ce) / C89890) / C89849 -
                                 C90462 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90452) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112))));
    const double C22805 =
        3 * (C91119 - (ae * (C90311 * C91224 + C91002)) / C90112 +
             C90253 * C91332) +
        ((C90311 * C91240 - (C91207 * ce) / C89890) * ae) / C89849 +
        C90253 *
            (2 * C91332 - (ae * (C90311 * C91230 + C91199)) / C90112 +
             C90253 *
                 (C91300 - (ae * (C90311 * C90253 * C90349 + C91192)) / C90112 +
                  C90253 * (C90253 * ((-(C90311 * std::pow(C90115, 7) * bs[7] *
                                         C90452) /
                                       C89890) /
                                          C89849 -
                                      (C90406 * ce) / C90112) -
                            (ae * (C90311 * C90349 + C90204)) / C90112)));
    const double C591 = C582 + C583;
    const double C2471 = C2462 + C2463;
    const double C12333 = C12323 + C12324;
    const double C60764 = C60754 + C60755;
    const double C5448 = C5436 + C5437;
    const double C26022 = C26017 + C26018;
    const double C64431 = C64412 + C64413;
    const double C3193 = C3184 + C3185;
    const double C9870 = C9853 + C9854;
    const double C13322 = C13312 + C13313;
    const double C28686 = C28672 + C28673;
    const double C58453 = C58436 + C58437;
    const double C61730 = C61720 + C61721;
    const double C13319 = C13306 + C13307;
    const double C28679 = C28658 + C28659;
    const double C32055 = C32047 + C32048;
    const double C61727 = C61714 + C61715;
    const double C69713 = C69692 + C69693;
    const double C8092 = C8085 + C8086;
    const double C12330 = C12317 + C12318;
    const double C31076 = C31068 + C31069;
    const double C56412 = C56406 + C56407;
    const double C60761 = C60748 + C60749;
    const double C67694 = C67688 + C67689;
    const double C566 =
        4 * (2 * C90496 - (C90493 * ce) / C90112 + C90111 * C90522) -
        ((3 * C90493 + C90111 * C90519) * ce) / C90112 +
        C90111 *
            (3 * C90522 - (C90519 * ce) / C90112 +
             C90111 * (2 * C90520 - (C90513 * ce) / C90112 +
                       C90111 * ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                                 C90504 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90476) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112))));
    const double C1209 =
        C90253 * (2 * C90496 - (C90493 * ce) / C90112 + C90111 * C90522);
    const double C1215 = (-(C90483 * ce) / C89890) / C89849 - C90480 / C90112 +
                         C90111 * C90496 + C90522 * C90425;
    const double C1216 =
        2 * C90496 - (C90493 * ce) / C90112 + C90111 * C90522 +
        (2 * C90520 - (C90513 * ce) / C90112 +
         C90111 *
             ((-(C90111 * C90507 * ce) / C89890) / C89849 - C90504 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) / C89890) /
                       C89849 -
                   (C90507 * ce) / C90112))) *
            C90425;
    const double C1793 =
        (((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
          (C90165 * ce) / C89890) *
         ae) /
            C89849 +
        C90311 * (2 * C90496 - (C90493 * ce) / C90112 + C90111 * C90522);
    const double C1799 = (-(C90483 * ce) / C89890) / C89849 - C90480 / C90112 +
                         C90111 * C90496 - (ae * C90311 * C90183) / C90112 +
                         C90311 * (C90311 * C90522 - (ae * C90183) / C90112);
    const double C2454 =
        C90253 *
        (3 * C90522 - (C90519 * ce) / C90112 +
         C90111 *
             (2 * C90520 - (C90513 * ce) / C90112 +
              C90111 *
                  ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                   C90504 / C90112 +
                   C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) /
                              C89890) /
                                 C89849 -
                             (C90507 * ce) / C90112))));
    const double C3881 =
        C90311 * C90253 * C90522 - (ae * C90253 * C90183) / C90112;
    const double C5422 =
        2 * C90253 * C90522 +
        C90253 *
            (C90522 +
             ((-(C90111 * C90507 * ce) / C89890) / C89849 - C90504 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) / C89890) /
                       C89849 -
                   (C90507 * ce) / C90112)) *
                 C90425);
    const double C6204 =
        C90253 * C90522 - (ae * C90311 * C90878) / C90112 +
        C90311 *
            (C90311 * C90253 *
                 ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                  C90504 / C90112 +
                  C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) /
                             C89890) /
                                C89849 -
                            (C90507 * ce) / C90112)) -
             (ae * C90878) / C90112);
    const double C9077 =
        C90311 *
            (C90522 +
             ((-(C90111 * C90507 * ce) / C89890) / C89849 - C90504 / C90112 +
              C90111 *
                  ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) / C89890) /
                       C89849 -
                   (C90507 * ce) / C90112)) *
                 C90425) -
        (ae * (C90240 * C90425 + C90183)) / C90112;
    const double C11433 =
        2 * (C90311 * C90522 - (ae * C90183) / C90112) -
        (ae * (C90240 * C90547 + C90183)) / C90112 +
        C90311 *
            (C90522 - (ae * C90311 * C90240) / C90112 +
             C90311 * (C90311 * ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                                 C90504 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90476) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112)) -
                       (ae * C90240) / C90112));
    const double C30202 =
        3 * (C90496 - (ae * C91408) / C90112 + C90311 * C91411) +
        (((-2 * C91408) / C89890 - (C90311 * C91412) / C89890) * ae) / C89849 +
        C90311 *
            (2 * C91411 - (ae * C91412) / C90112 +
             C90311 * (C90520 - (ae * C90311 * C90228) / C90112 +
                       C90311 * (C90311 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90476) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112) -
                                 (ae * C90228) / C90112)));
    const double C15840 = C15830 + C15831;
    const double C31077 = C31070 + C31071;
    const double C56413 = C56408 + C56409;
    const double C67695 = C67690 + C67691;
    const double C71977 = C71970 + C71971;
    const double C18426 = C18423 + C18424;
    const double C26021 = C26015 + C26016;
    const double C64430 = C64410 + C64411;
    const double C32056 = C32049 + C32050;
    const double C72919 = C72912 + C72913;
    const double C39542 =
        4 * (2 * C91406 - (ae * C91403) / C90112 + C90311 * C91601) +
        (((-3 * C91403) / C89890 + C90311 * C91599) * ae) / C89849 +
        C90311 *
            (3 * C91601 + (C91599 * ae) / C89849 +
             C90311 * (2 * C91598 - (ae * C91591) / C90112 +
                       C90311 * ((-(ae * C90311 * C90212) / C89890) / C89849 -
                                 C90504 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90476) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90212) / C90112))));
    const double C20573 = C20571 + C20572;
    const double C28013 = C28008 + C28009;
    const double C34528 = C34521 + C34522;
    const double C84917 = C84914 + C84915;
    const double C86333 = C86326 + C86327;
    const double C22952 = C22950 + C22951;
    const double C24352 = C24345 + C24346;
    const double C81492 = C81489 + C81490;
    const double C5548 = C5543 + C5544;
    const double C2558 = C2554 + C2555;
    const double C3274 = C3270 + C3271;
    const double C9968 = C9960 + C9961;
    const double C58551 = C58543 + C58544;
    const double C13433 = C13428 + C13429;
    const double C28777 = C28768 + C28769;
    const double C61841 = C61836 + C61837;
    const double C69811 = C69802 + C69803;
    const double C8200 = C8197 + C8198;
    const double C12443 = C12437 + C12438;
    const double C60874 = C60868 + C60869;
    const double C20569 =
        4 * (2 * C91067 - (C91064 * ce) / C90112 + C90253 * C91268) -
        ((3 * C91064 + C90253 * C91263) * ce) / C90112 +
        C90253 *
            (3 * C91268 - (C91263 * ce) / C90112 +
             C90253 * (2 * C91265 - (C91257 * ce) / C90112 +
                       C90253 * ((-(C90253 * C90507 * ce) / C89890) / C89849 -
                                 C90538 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90528) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112))));
    const double C25211 =
        2 * (C90311 * C91268 - (ae * C91013) / C90112) -
        (ae * (C91211 * C90547 + C91013)) / C90112 +
        C90311 *
            (C91268 - (ae * C90311 * C91211) / C90112 +
             C90311 * (C90311 * ((-(C90253 * C90507 * ce) / C89890) / C89849 -
                                 C90538 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90528) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112)) -
                       (ae * C91211) / C90112));
    const double C35350 =
        3 * (C91067 - (ae * C91526) / C90112 + C90311 * C91530) +
        (((-2 * C91526) / C89890 - (C90311 * C91531) / C89890) * ae) / C89849 +
        C90311 *
            (2 * C91530 - (ae * C91531) / C90112 +
             C90311 * (C91265 - (ae * C90311 * C91191) / C90112 +
                       C90311 * (C90311 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90528) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112) -
                                 (ae * C91191) / C90112)));
    const double C38124 = C38120 + C38121;
    const double C89730 = C89726 + C89727;
    const double C39593 =
        4 * (2 * C91421 - (ae * C91418) / C90112 + C90311 * C91620) +
        (((-3 * C91418) / C89890 + C90311 * C91618) * ae) / C89849 +
        C90311 *
            (3 * C91620 + (C91618 * ae) / C89849 +
             C90311 * (2 * C91617 - (ae * C91610) / C90112 +
                       C90311 * ((-(ae * C90311 * C90291) / C89890) / C89849 -
                                 C90538 / C90112 +
                                 C90311 * ((-(C90311 * std::pow(C90115, 7) *
                                              bs[7] * C90528) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90291) / C90112))));
    const double C15304 = C89875 * C4865;
    const double C15300 = C89875 * C4871;
    const double C15294 = C89875 * C822;
    const double C15290 = C89875 * C806;
    const double C15286 = C89875 * C813;
    const double C15282 = C89875 * C805;
    const double C15409 = C89875 * C4987;
    const double C15405 = C89875 * C891;
    const double C15403 = C89875 * C890;
    const double C15509 = C89875 * C5085;
    const double C15503 = C89875 * C957;
    const double C15498 = C89875 * C956;
    const double C16832 = C89875 * C823;
    const double C16828 = C89875 * C807;
    const double C16824 = C89875 * C812;
    const double C16820 = C89875 * C804;
    const double C16944 = C89875 * C892;
    const double C16940 = C89875 * C889;
    const double C17054 = C89875 * C958;
    const double C17050 = C89875 * C955;
    const double C18755 = C89875 * C3431;
    const double C18751 = C89875 * C3439;
    const double C18747 = C89875 * C8412;
    const double C18743 = C89875 * C8418;
    const double C18871 = C89875 * C8540;
    const double C18867 = C89875 * C3513;
    const double C18987 = C89875 * C8653;
    const double C18983 = C89875 * C3587;
    const double C29642 = C89875 * C10808;
    const double C29638 = C89875 * C10814;
    const double C29632 = C89875 * C1406;
    const double C29628 = C89875 * C1390;
    const double C29624 = C89875 * C1397;
    const double C29620 = C89875 * C1389;
    const double C29751 = C89875 * C10930;
    const double C29745 = C89875 * C1472;
    const double C29740 = C89875 * C1471;
    const double C29849 = C89875 * C11028;
    const double C29845 = C89875 * C1541;
    const double C29843 = C89875 * C1540;
    const double C31404 = C89875 * C1407;
    const double C31400 = C89875 * C1391;
    const double C31396 = C89875 * C1396;
    const double C31392 = C89875 * C1388;
    const double C31518 = C89875 * C1470;
    const double C31514 = C89875 * C1473;
    const double C31626 = C89875 * C1542;
    const double C31622 = C89875 * C1539;
    const double C32377 = C89875 * C5725;
    const double C32373 = C89875 * C5719;
    const double C32487 = C89875 * C5805;
    const double C32591 = C89875 * C5885;
    const double C76798 = C89875 * C3440;
    const double C76794 = C89875 * C3432;
    const double C76934 = C89875 * C3514;
    const double C77070 = C89875 * C3588;
    const double C100 =
        ((((0 - (C89847 * C89848) / C89849) * ae) / C89849 - (0 * be) / C89858 +
          C89850 / C89849) /
             C89854 -
         ((C89847 * C89871 + 0) * be) / C89849) /
            C89854 -
        ((C89847 * (C89871 / C89854 -
                    ((C89847 * C89875 + C92322) * be) / C89849 + C89868) +
          C92360) *
         be) /
            C89849 +
        C89875 / C89854 - ((C89847 * C89868 + C92072) * be) / C89849;
    const double C101 =
        (C89871 / C89854 - ((C89847 * C89875 + C92322) * be) / C89849 +
         C89868) /
            C89854 -
        ((C89847 *
              (C89875 / C89854 - ((C89847 * C89868 + C92072) * be) / C89849) +
          C92350) *
         be) /
            C89849 +
        2 * (C89868 / C89854 - (0 * be) / C89849);
    const double C102 =
        (C89875 / C89854 - ((C89847 * C89868 + C92072) * be) / C89849) /
            C89854 -
        ((C89847 * (C89868 / C89854 - (0 * be) / C89849) + C41547) * be) /
            C89849;
    const double C41550 =
        C89871 / C89854 - ((C89847 * C89875 + C92322) * be) / C89849 + C89868;
    const double C41551 =
        C89875 / C89854 - ((C89847 * C89868 + C92072) * be) / C89849;
    const double C47309 = C47302 + C47303;
    const double C47308 = C47300 + C47301;
    const double C56819 = C50622 + C50623;
    const double C56816 = C50623 + C50622;
    const double C56818 = C50620 + C50621;
    const double C56817 = C50621 + C50620;
    const double C70646 = C53329 + C53328;
    const double C70647 = C53327 + C53326;
    const double C19822 =
        ((((0 - (C89967 * C90002) / C89849) * ae) / C89849 - (0 * be) / C89858 +
          C89986 / C89849) /
             C89854 -
         ((C89967 * C90019 + 0) * be) / C89849) /
            C89854 -
        ((C89967 * (C90019 / C89854 -
                    ((C89967 * C90020 + C92336) * be) / C89849 + C90014) +
          C92361) *
         be) /
            C89849 +
        C90020 / C89854 - ((C89967 * C90014 + C92171) * be) / C89849;
    const double C19823 =
        (C90019 / C89854 - ((C89967 * C90020 + C92336) * be) / C89849 +
         C90014) /
            C89854 -
        ((C89967 *
              (C90020 / C89854 - ((C89967 * C90014 + C92171) * be) / C89849) +
          C92356) *
         be) /
            C89849 +
        2 * (C90014 / C89854 - (0 * be) / C89849);
    const double C19824 =
        (C90020 / C89854 - ((C89967 * C90014 + C92171) * be) / C89849) /
            C89854 -
        ((C89967 * (C90014 / C89854 - (0 * be) / C89849) + C46527) * be) /
            C89849;
    const double C46752 =
        C90019 / C89854 - ((C89967 * C90020 + C92336) * be) / C89849 + C90014;
    const double C46753 =
        C90020 / C89854 - ((C89967 * C90014 + C92171) * be) / C89849;
    const double C41814 = C41806 + C41807;
    const double C41909 = C41905 + C41906;
    const double C42006 = C42002 + C42003;
    const double C56000 = C45010 + C45011;
    const double C55998 = C45011 + C45010;
    const double C56134 = C45125 + C45124;
    const double C56133 = C45124 + C45125;
    const double C56271 = C45235 + C45234;
    const double C56270 = C45234 + C45235;
    const double C86728 = C53695 + C53694;
    const double C86729 = C53693 + C53692;
    const double C86820 = C53811 + C53810;
    const double C86903 = C53924 + C53925;
    const double C38585 =
        ((((0 - (C89974 * C90047) / C89849) * ae) / C89849 - (0 * be) / C89858 +
          C90033 / C89849) /
             C89854 -
         ((C89974 * C90064 + 0) * be) / C89849) /
            C89854 -
        ((C89974 * (C90064 / C89854 -
                    ((C89974 * C90065 + C92337) * be) / C89849 + C90059) +
          C92362) *
         be) /
            C89849 +
        C90065 / C89854 - ((C89974 * C90059 + C92195) * be) / C89849;
    const double C38586 =
        (C90064 / C89854 - ((C89974 * C90065 + C92337) * be) / C89849 +
         C90059) /
            C89854 -
        ((C89974 *
              (C90065 / C89854 - ((C89974 * C90059 + C92195) * be) / C89849) +
          C92359) *
         be) /
            C89849 +
        2 * (C90059 / C89854 - (0 * be) / C89849);
    const double C38587 =
        (C90065 / C89854 - ((C89974 * C90059 + C92195) * be) / C89849) /
            C89854 -
        ((C89974 * (C90059 / C89854 - (0 * be) / C89849) + C69237) * be) /
            C89849;
    const double C69682 =
        C90064 / C89854 - ((C89974 * C90065 + C92337) * be) / C89849 + C90059;
    const double C69683 =
        C90065 / C89854 - ((C89974 * C90059 + C92195) * be) / C89849;
    const double C58458 = C58450 + C58451;
    const double C58553 = C58549 + C58550;
    const double C58649 = C58645 + C58646;
    const double C66488 = C60758 + C60759;
    const double C66486 = C60759 + C60758;
    const double C66621 = C60873 + C60872;
    const double C66620 = C60872 + C60873;
    const double C66754 = C60984 + C60985;
    const double C66753 = C60985 + C60984;
    const double C81394 = C64437 + C64436;
    const double C81395 = C64435 + C64434;
    const double C81486 = C64550 + C64551;
    const double C81568 = C64669 + C64668;
    const double C34808 = C34804 + C34805;
    const double C86579 = C86577 + C86578;
    const double C90245 = C90232 + C90242;
    const double C34710 = C34700 * C92171;
    const double C86501 = C34700 * C92171;
    const double C902 =
        2 * C90280 - (ae * C90277) / C90112 + C90111 * C90308 -
        (C90253 * C90249 * ce) / C90112 +
        C90253 *
            (C90253 * (2 * C90305 - (ae * C90298) / C90112 +
                       C90111 * ((-(ae * C90111 * C90291) / C89890) / C89849 -
                                 C90288 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90260) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90291) / C90112))) -
             (C90249 * ce) / C90112);
    const double C1552 =
        2 * C90338 - (ae * C90335) / C90112 + C90111 * C90366 -
        (C90311 * C90249 * ce) / C90112 +
        C90311 *
            (C90311 * (2 * C90363 - (ae * C90356) / C90112 +
                       C90111 * ((-(ae * C90111 * C90349) / C89890) / C89849 -
                                 C90346 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90318) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90349) / C90112))) -
             (C90249 * ce) / C90112);
    const double C2062 =
        C90253 *
            (3 * C90308 + (C90306 * ae) / C89849 +
             C90111 * (2 * C90305 - (ae * C90298) / C90112 +
                       C90111 * ((-(ae * C90111 * C90291) / C89890) / C89849 -
                                 C90288 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90260) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90291) / C90112)))) -
        ((3 * C90184 + C90111 * C90249 + C90230 * ae) * ce) / C90112;
    const double C2852 =
        C90311 *
            (3 * C90366 + (C90364 * ae) / C89849 +
             C90111 * (2 * C90363 - (ae * C90356) / C90112 +
                       C90111 * ((-(ae * C90111 * C90349) / C89890) / C89849 -
                                 C90346 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90318) /
                                            C89890) /
                                               C89849 -
                                           (ae * C90349) / C90112)))) -
        ((3 * C90184 + C90111 * C90249 + C90230 * ae) * ce) / C90112;
    const double C3520 =
        C90311 *
        (C90253 *
             (2 * C90305 - (ae * C90298) / C90112 +
              C90111 *
                  ((-(ae * C90111 * C90291) / C89890) / C89849 -
                   C90288 / C90112 +
                   C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90260) /
                              C89890) /
                                 C89849 -
                             (ae * C90291) / C90112))) -
         (C90249 * ce) / C90112);
    const double C3594 =
        C90311 * C90253 *
            (2 * C90363 - (ae * C90356) / C90112 +
             C90111 *
                 ((-(ae * C90111 * C90349) / C89890) / C89849 -
                  C90346 / C90112 +
                  C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90318) /
                             C89890) /
                                C89849 -
                            (ae * C90349) / C90112))) -
        (C90253 * C90249 * ce) / C90112;
    const double C123 = (4 * (2 * C90145 + C90111 * C90184 + C90165 * ae) +
                         C90111 * (3 * C90184 + C90111 * C90249 + C90230 * ae) +
                         (3 * C90165 + C90111 * C90230) * ae) /
                        C89849;
    const double C821 =
        (2 * C90145 + C90111 * C90184 + C90165 * ae + C90249 * C90425) / C89849;
    const double C1405 =
        (2 * C90145 + C90111 * C90184 + C90165 * ae + C90249 * C90547) / C89849;
    const double C1990 =
        (C90253 * (3 * C90184 + C90111 * C90249 + C90230 * ae)) / C89849;
    const double C2712 =
        (C90311 * (3 * C90184 + C90111 * C90249 + C90230 * ae)) / C89849;
    const double C3438 = (C90311 * C90253 * C90249) / C89849;
    const double C20352 =
        (4 * (2 * C90823 + C90253 * C91014 + C91003 * ae) +
         C90253 * (3 * C91014 + C90253 * C91221 + C91207 * ae) +
         (3 * C91003 + C90253 * C91207) * ae) /
        C89849;
    const double C20840 =
        (2 * C90823 + C90253 * C91014 + C91003 * ae + C91221 * C90547) / C89849;
    const double C22670 =
        (C90311 * (3 * C91014 + C90253 * C91221 + C91207 * ae)) / C89849;
    const double C39541 =
        (4 * (2 * C90947 + C90311 * C91451 + C91442 * ae) +
         C90311 * (3 * C91451 + C90311 * C91665 + C91643 * ae) +
         (3 * C91442 + C90311 * C91643) * ae) /
        C89849;
    const double C90250 = C90248 - C90229;
    const double C91222 = C91220 - C91206;
    const double C91666 = C91664 - C91642;
    const double C15299 = C92072 * C4875;
    const double C21182 = C92067 * C4875;
    const double C47289 = C92072 * C4875;
    const double C18742 = C92072 * C8422;
    const double C25398 = C92067 * C8422;
    const double C50601 = C92072 * C8422;
    const double C20144 = C92067 * C15279;
    const double C24538 = C92067 * C16101;
    const double C22416 = C92067 * C18738;
    const double C29637 = C92072 * C10818;
    const double C40311 = C92067 * C10818;
    const double C70649 = C92072 * C10818;
    const double C39197 = C92067 * C29617;
    const double C6915 = C92171 * C1090;
    const double C14871 = C14525 * C1090;
    const double C44191 = C92171 * C1090;
    const double C46873 = C46527 * C1090;
    const double C2299 = C92157 * C1091;
    const double C4452 = C92171 * C1091;
    const double C41900 = C92171 * C1091;
    const double C3015 = C92157 * C1669;
    const double C11250 = C92157 * C1675;
    const double C7870 = C92171 * C3737;
    const double C12100 = C92157 * C3737;
    const double C45123 = C92171 * C3737;
    const double C35095 = C92171 * C24944;
    const double C41202 = C92157 * C24944;
    const double C86822 = C92171 * C24944;
    const double C39434 = C92157 * C30029;
    const double C2630 = C92183 * C1325;
    const double C5630 = C92183 * C1331;
    const double C13537 = C92195 * C1914;
    const double C28861 = C28199 * C1914;
    const double C61945 = C92195 * C1914;
    const double C69895 = C69237 * C1914;
    const double C3359 = C92183 * C1915;
    const double C10057 = C92195 * C1915;
    const double C58640 = C92195 * C1915;
    const double C8310 = C92183 * C4021;
    const double C12544 = C92195 * C4021;
    const double C60975 = C92195 * C4021;
    const double C91217 = C91213 + C91214;
    const double C91661 = C91654 + C91658;
    const double C4464 = C4463 * C92183;
    const double C9678 = C9675 + C9677;
    const double C58268 = C58266 + C58267;
    const double C16019 = C16015 + C16016;
    const double C47951 = C47949 + C47950;
    const double C24450 = C24449 * C92067;
    const double C47405 = C47401 + C47402;
    const double C36539 = C36538 * C92105;
    const double C70739 = C53445 + C53444;
    const double C26439 = C25509 * C92105;
    const double C56957 = C50730 + C50731;
    const double C56956 = C50731 + C50730;
    const double C24664 = C24660 * C92105;
    const double C37457 = C24660 * C1986;
    const double C27345 = C22515 * C1986;
    const double C6579 = C4099 * C895;
    const double C43855 = C41547 * C895;
    const double C5005 = C4099 * C901;
    const double C16947 = C92072 * C901;
    const double C42427 = C41547 * C901;
    const double C48845 = C92072 * C901;
    const double C12770 = C4099 * C1476;
    const double C61201 = C41547 * C1476;
    const double C10944 = C4099 * C1482;
    const double C31513 = C92072 * C1482;
    const double C59509 = C41547 * C1482;
    const double C72401 = C92072 * C1482;
    const double C8552 = C4099 * C3519;
    const double C45751 = C41547 * C3519;
    const double C54497 = C92072 * C3519;
    const double C76937 = C92072 * C3519;
    const double C36533 = C35635 * C92105;
    const double C26437 = C25510 * C92105;
    const double C40386 = C40385 * C92105;
    const double C34809 = C34806 * C92105;
    const double C40991 = C34806 * C1986;
    const double C4367 = C4360 + C4361;
    const double C41815 = C41808 + C41809;
    const double C11140 = C2937 * C92084;
    const double C12992 = C2937 * C1983;
    const double C12990 = C2937 * C1984;
    const double C11165 = C11157 * C92084;
    const double C31737 = C11157 * C1983;
    const double C31735 = C11157 * C1984;
    const double C67283 = C7759 + C7760;
    const double C67281 = C7760 + C7759;
    const double C13941 = C11990 * C92084;
    const double C56001 = C45012 + C45013;
    const double C55999 = C45013 + C45012;
    const double C2211 = C92157 * C1027;
    const double C4353 = C92171 * C1027;
    const double C41801 = C92171 * C1027;
    const double C6803 = C92171 * C1033;
    const double C14777 = C14525 * C1033;
    const double C44079 = C92171 * C1033;
    const double C46779 = C46527 * C1033;
    const double C2933 = C92157 * C1611;
    const double C11142 = C92157 * C1617;
    const double C7756 = C92171 * C3667;
    const double C11988 = C92157 * C3667;
    const double C45009 = C92171 * C3667;
    const double C32702 = C30753 * C92084;
    const double C29952 = C29948 * C92084;
    const double C40525 = C29948 * C1984;
    const double C41131 = C41129 * C92084;
    const double C39379 = C39377 * C92084;
    const double C21349 = C21346 * C92116;
    const double C47499 = C47495 + C47496;
    const double C70823 = C53558 + C53559;
    const double C25617 = C25615 * C92116;
    const double C57089 = C50841 + C50840;
    const double C57088 = C50840 + C50841;
    const double C6686 = C4099 * C961;
    const double C43962 = C41547 * C961;
    const double C5099 = C4099 * C967;
    const double C17057 = C92072 * C967;
    const double C42515 = C41547 * C967;
    const double C48955 = C92072 * C967;
    const double C12881 = C4099 * C1545;
    const double C61312 = C41547 * C1545;
    const double C11046 = C4099 * C1551;
    const double C31629 = C92072 * C1551;
    const double C59605 = C41547 * C1551;
    const double C72507 = C92072 * C1551;
    const double C8661 = C4099 * C3593;
    const double C45854 = C41547 * C3593;
    const double C54633 = C92072 * C3593;
    const double C77073 = C92072 * C3593;
    const double C21350 = C21347 * C92116;
    const double C35738 = C35737 * C92116;
    const double C25618 = C25616 * C92116;
    const double C2385 = C2382 * C92116;
    const double C13201 = C11354 * C2710;
    const double C28573 = C11354 * C92116;
    const double C3109 = C3106 * C2710;
    const double C9758 = C3106 * C92116;
    const double C12211 = C12209 * C92116;
    const double C35193 = C92171 * C25038;
    const double C41272 = C92157 * C25038;
    const double C86907 = C92171 * C25038;
    const double C39490 = C92157 * C30117;
    const double C5431 = C2471 * C92084;
    const double C7139 = C2471 * C1983;
    const double C7137 = C2471 * C1984;
    const double C5456 = C5448 * C92084;
    const double C17495 = C5448 * C1983;
    const double C17493 = C5448 * C1984;
    const double C9876 = C9869 + C9870;
    const double C58459 = C58452 + C58453;
    const double C9081 = C8092 * C92084;
    const double C55183 = C12329 + C12330;
    const double C55181 = C12330 + C12329;
    const double C66489 = C60760 + C60761;
    const double C66487 = C60761 + C60760;
    const double C2467 = C92183 * C1209;
    const double C5433 = C92183 * C1215;
    const double C3189 = C92183 * C1793;
    const double C9862 = C92195 * C1793;
    const double C58445 = C92195 * C1793;
    const double C13315 = C92195 * C1799;
    const double C28675 = C28199 * C1799;
    const double C61723 = C92195 * C1799;
    const double C69709 = C69237 * C1799;
    const double C8090 = C92183 * C3881;
    const double C12326 = C92195 * C3881;
    const double C60757 = C92195 * C3881;
    const double C15845 = C15840 * C92084;
    const double C21618 = C15840 * C1984;
    const double C19397 = C18426 * C92084;
    const double C7247 = C5548 * C1986;
    const double C15124 = C5548 * C92105;
    const double C2561 = C2558 * C1986;
    const double C4714 = C2558 * C92105;
    const double C3277 = C3274 * C92105;
    const double C8202 = C8200 * C92105;
    const double C15317 = C15304 + C15305;
    const double C15315 = C15300 + C15301;
    const double C15312 = C15294 + C15295;
    const double C15310 = C15290 + C15291;
    const double C15308 = C15286 + C15287;
    const double C15306 = C15282 + C15283;
    const double C15417 = C15409 + C15410;
    const double C15415 = C15405 + C15406;
    const double C15414 = C15403 + C15404;
    const double C15516 = C15509 + C15510;
    const double C15513 = C15503 + C15504;
    const double C15511 = C15498 + C15499;
    const double C16841 = C16832 + C16833;
    const double C16839 = C16828 + C16829;
    const double C16837 = C16824 + C16825;
    const double C16835 = C16820 + C16821;
    const double C16950 = C16944 + C16945;
    const double C16948 = C16940 + C16941;
    const double C17060 = C17054 + C17055;
    const double C17058 = C17050 + C17051;
    const double C18764 = C18755 + C18756;
    const double C18762 = C18751 + C18752;
    const double C18760 = C18747 + C18748;
    const double C18758 = C18743 + C18744;
    const double C18877 = C18871 + C18872;
    const double C18875 = C18867 + C18868;
    const double C18992 = C18987 + C18988;
    const double C18990 = C18983 + C18984;
    const double C29655 = C29642 + C29643;
    const double C29653 = C29638 + C29639;
    const double C29650 = C29632 + C29633;
    const double C29648 = C29628 + C29629;
    const double C29646 = C29624 + C29625;
    const double C29644 = C29620 + C29621;
    const double C29758 = C29751 + C29752;
    const double C29755 = C29745 + C29746;
    const double C29753 = C29740 + C29741;
    const double C29857 = C29849 + C29850;
    const double C29855 = C29845 + C29846;
    const double C29854 = C29843 + C29844;
    const double C31413 = C31404 + C31405;
    const double C31411 = C31400 + C31401;
    const double C31409 = C31396 + C31397;
    const double C31407 = C31392 + C31393;
    const double C31523 = C31518 + C31519;
    const double C31521 = C31514 + C31515;
    const double C31632 = C31626 + C31627;
    const double C31630 = C31622 + C31623;
    const double C32383 = C32377 + C32378;
    const double C32381 = C32373 + C32374;
    const double C32490 = C32487 + C32488;
    const double C32595 = C32591 + C32592;
    const double C76803 = C76798 + C76799;
    const double C76801 = C76794 + C76795;
    const double C76938 = C76934 + C76935;
    const double C77074 = C77070 + C77071;
    const double C42328 = C41550 * C806;
    const double C42322 = C41550 * C822;
    const double C42312 = C41550 * C813;
    const double C42306 = C41550 * C805;
    const double C42422 = C41550 * C891;
    const double C42420 = C41550 * C890;
    const double C42518 = C41550 * C957;
    const double C42508 = C41550 * C956;
    const double C43744 = C41550 * C812;
    const double C43738 = C41550 * C804;
    const double C43850 = C41550 * C889;
    const double C43957 = C41550 * C955;
    const double C45640 = C41550 * C3431;
    const double C45634 = C41550 * C3439;
    const double C45746 = C41550 * C3513;
    const double C45857 = C41550 * C3587;
    const double C59414 = C41550 * C1390;
    const double C59408 = C41550 * C1406;
    const double C59398 = C41550 * C1397;
    const double C59392 = C41550 * C1389;
    const double C59512 = C41550 * C1472;
    const double C59502 = C41550 * C1471;
    const double C59600 = C41550 * C1541;
    const double C59598 = C41550 * C1540;
    const double C61094 = C41550 * C1396;
    const double C61088 = C41550 * C1388;
    const double C61204 = C41550 * C1470;
    const double C61307 = C41550 * C1539;
    const double C42326 = C41551 * C807;
    const double C42320 = C41551 * C823;
    const double C42314 = C41551 * C812;
    const double C42308 = C41551 * C804;
    const double C42424 = C41551 * C892;
    const double C42418 = C41551 * C889;
    const double C42516 = C41551 * C958;
    const double C42510 = C41551 * C955;
    const double C43742 = C41551 * C811;
    const double C43736 = C41551 * C803;
    const double C43852 = C41551 * C888;
    const double C43959 = C41551 * C954;
    const double C45638 = C41551 * C3432;
    const double C45632 = C41551 * C3440;
    const double C45748 = C41551 * C3514;
    const double C45855 = C41551 * C3588;
    const double C59412 = C41551 * C1391;
    const double C59406 = C41551 * C1407;
    const double C59400 = C41551 * C1396;
    const double C59394 = C41551 * C1388;
    const double C59510 = C41551 * C1473;
    const double C59504 = C41551 * C1470;
    const double C59602 = C41551 * C1542;
    const double C59596 = C41551 * C1539;
    const double C61092 = C41551 * C1395;
    const double C61086 = C41551 * C1387;
    const double C61202 = C41551 * C1469;
    const double C61309 = C41551 * C1538;
    const double C47311 = C47309 * C92084;
    const double C47310 = C47308 * C801;
    const double C47484 = C47308 * C244;
    const double C56823 = C56819 * C801;
    const double C56820 = C56816 * C801;
    const double C56822 = C56818 * C92084;
    const double C56821 = C56817 * C92084;
    const double C70656 = C70646 * C801;
    const double C70738 = C70646 * C181;
    const double C70657 = C70647 * C92084;
    const double C46774 = C46752 * C119;
    const double C46768 = C46752 * C109;
    const double C46766 = C46752 * C118;
    const double C46760 = C46752 * C108;
    const double C46876 = C46752 * C184;
    const double C46866 = C46752 * C183;
    const double C46968 = C46752 * C247;
    const double C46958 = C46752 * C246;
    const double C49064 = C46752 * C812;
    const double C49058 = C46752 * C804;
    const double C49178 = C46752 * C889;
    const double C49285 = C46752 * C955;
    const double C49982 = C46752 * C1396;
    const double C49976 = C46752 * C1388;
    const double C50092 = C46752 * C1470;
    const double C50203 = C46752 * C1539;
    const double C81896 = C46752 * C1390;
    const double C81890 = C46752 * C1406;
    const double C81880 = C46752 * C1397;
    const double C81874 = C46752 * C1389;
    const double C81994 = C46752 * C1472;
    const double C81984 = C46752 * C1471;
    const double C82082 = C46752 * C1541;
    const double C82080 = C46752 * C1540;
    const double C84478 = C46752 * C3439;
    const double C84472 = C46752 * C3431;
    const double C84592 = C46752 * C3513;
    const double C84695 = C46752 * C3587;
    const double C46776 = C46753 * C811;
    const double C46770 = C46753 * C803;
    const double C46764 = C46753 * C812;
    const double C46758 = C46753 * C804;
    const double C46874 = C46753 * C888;
    const double C46868 = C46753 * C889;
    const double C46966 = C46753 * C954;
    const double C46960 = C46753 * C955;
    const double C49066 = C46753 * C823;
    const double C49060 = C46753 * C807;
    const double C49176 = C46753 * C892;
    const double C49283 = C46753 * C958;
    const double C49984 = C46753 * C3440;
    const double C49978 = C46753 * C3432;
    const double C50094 = C46753 * C3514;
    const double C50201 = C46753 * C3588;
    const double C81894 = C46753 * C5719;
    const double C81888 = C46753 * C5725;
    const double C81882 = C46753 * C3439;
    const double C81876 = C46753 * C3431;
    const double C81992 = C46753 * C5805;
    const double C81986 = C46753 * C3513;
    const double C82084 = C46753 * C5885;
    const double C82078 = C46753 * C3587;
    const double C84480 = C46753 * C8418;
    const double C84474 = C46753 * C8412;
    const double C84590 = C46753 * C8540;
    const double C84697 = C46753 * C8653;
    const double C41894 = C41814 * C181;
    const double C41991 = C41814 * C244;
    const double C41910 = C41909 * C92105;
    const double C42007 = C42006 * C92116;
    const double C56132 = C56000 * C181;
    const double C56135 = C55998 * C181;
    const double C56137 = C56134 * C92105;
    const double C56136 = C56133 * C92105;
    const double C86738 = C86728 * C801;
    const double C86819 = C86728 * C181;
    const double C86739 = C86729 * C92084;
    const double C86825 = C86820 * C92105;
    const double C69704 = C69682 * C119;
    const double C69698 = C69682 * C109;
    const double C69696 = C69682 * C118;
    const double C69690 = C69682 * C108;
    const double C69806 = C69682 * C184;
    const double C69796 = C69682 * C183;
    const double C69898 = C69682 * C247;
    const double C69888 = C69682 * C246;
    const double C71966 = C69682 * C812;
    const double C71960 = C69682 * C804;
    const double C72080 = C69682 * C889;
    const double C72187 = C69682 * C955;
    const double C72908 = C69682 * C1396;
    const double C72902 = C69682 * C1388;
    const double C73018 = C69682 * C1470;
    const double C73129 = C69682 * C1539;
    const double C86228 = C69682 * C806;
    const double C86222 = C69682 * C822;
    const double C86212 = C69682 * C813;
    const double C86206 = C69682 * C805;
    const double C86322 = C69682 * C891;
    const double C86320 = C69682 * C890;
    const double C86418 = C69682 * C957;
    const double C86408 = C69682 * C956;
    const double C89616 = C69682 * C3431;
    const double C89610 = C69682 * C3439;
    const double C89722 = C69682 * C3513;
    const double C89833 = C69682 * C3587;
    const double C69706 = C69683 * C1395;
    const double C69700 = C69683 * C1387;
    const double C69694 = C69683 * C1396;
    const double C69688 = C69683 * C1388;
    const double C69804 = C69683 * C1469;
    const double C69798 = C69683 * C1470;
    const double C69896 = C69683 * C1538;
    const double C69890 = C69683 * C1539;
    const double C71968 = C69683 * C3440;
    const double C71962 = C69683 * C3432;
    const double C72078 = C69683 * C3514;
    const double C72185 = C69683 * C3588;
    const double C72910 = C69683 * C1407;
    const double C72904 = C69683 * C1391;
    const double C73020 = C69683 * C1473;
    const double C73127 = C69683 * C1542;
    const double C86226 = C69683 * C8412;
    const double C86220 = C69683 * C8418;
    const double C86214 = C69683 * C3439;
    const double C86208 = C69683 * C3431;
    const double C86324 = C69683 * C8540;
    const double C86318 = C69683 * C3513;
    const double C86416 = C69683 * C8653;
    const double C86410 = C69683 * C3587;
    const double C89614 = C69683 * C5719;
    const double C89608 = C69683 * C5725;
    const double C89724 = C69683 * C5805;
    const double C89831 = C69683 * C5885;
    const double C58538 = C58458 * C181;
    const double C58634 = C58458 * C244;
    const double C58554 = C58553 * C92105;
    const double C58650 = C58649 * C92116;
    const double C66752 = C66488 * C244;
    const double C66755 = C66486 * C244;
    const double C66757 = C66754 * C92116;
    const double C66756 = C66753 * C92116;
    const double C81404 = C81394 * C801;
    const double C81567 = C81394 * C244;
    const double C81405 = C81395 * C92084;
    const double C81573 = C81568 * C92116;
    const double C34715 = C34709 + C34710;
    const double C86502 = C86500 + C86501;
    const double C130 =
        4 * (2 * C90182 - (ae * C90183) / C90112 - (C90184 * ce) / C90112 +
             C90111 * C90245) +
        (((-3 * C90183) / C89890 + C90111 * C90250 - (C90230 * ce) / C89890) *
         ae) /
            C89849 -
        ((3 * C90184 + C90111 * C90249 + C90230 * ae) * ce) / C90112 +
        C90111 *
            (3 * C90245 + (C90250 * ae) / C89849 - (C90249 * ce) / C90112 +
             C90111 *
                 (2 * C90239 - (ae * C90240) / C90112 - (C90241 * ce) / C90112 +
                  C90111 * ((-(ae * C90228) / C89890) / C89849 -
                            C90227 / C90112 - (C90231 * ce) / C90112 +
                            C90111 * ((-(C90215 * ce) / C89890) / C89849 -
                                      (ae * C90212) / C90112 -
                                      (C90111 *
                                       (C90192 * C90193 +
                                        C90119 * bs[7] * std::pow(C90115, 7)) *
                                       C90120) /
                                          C90112))));
    const double C1034 =
        2 * C90395 - (C90392 * ce) / C90112 + C90111 * C90421 +
        (C90253 * C90250 * ae) / C89849 +
        C90253 *
            ((C90250 * ae) / C89849 +
             C90253 * (2 * C90419 - (C90412 * ce) / C90112 +
                       C90111 * ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                                 C90403 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90375) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112))));
    const double C1800 =
        2 * C90496 - (C90493 * ce) / C90112 + C90111 * C90522 +
        (C90311 * C90250 * ae) / C89849 +
        C90311 *
            ((C90250 * ae) / C89849 +
             C90311 * (2 * C90520 - (C90513 * ce) / C90112 +
                       C90111 * ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                                 C90504 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90476) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112))));
    const double C1992 =
        3 * ((-(ae * C90253 * C90174) / C89890) / C89849 - C90570 / C90112 -
             (C90253 * C90175 * ce) / C90112 + C90111 * C90738) +
        (C90253 * C90250 * ae) / C89849 - (C90253 * C90249 * ce) / C90112 +
        C90111 *
            (2 * C90738 - (ae * C90253 * C90240) / C90112 -
             (C90253 * C90241 * ce) / C90112 +
             C90111 * ((-(ae * C90253 * C90228) / C89890) / C89849 -
                       C90728 / C90112 - (C90253 * C90231 * ce) / C90112 +
                       C90111 * ((-(C90253 * C90215 * ce) / C89890) / C89849 -
                                 (ae * C90253 * C90212) / C90112 -
                                 (C90111 * C90253 *
                                  (C90192 * C90193 +
                                   C90119 * bs[7] * std::pow(C90115, 7)) *
                                  C90120) /
                                     C90112)));
    const double C2198 =
        (((-3 * C90183) / C89890 + C90111 * C90250 - (C90230 * ce) / C89890) *
         ae) /
            C89849 +
        C90253 *
            (3 * C90421 - (C90418 * ce) / C90112 +
             C90111 * (2 * C90419 - (C90412 * ce) / C90112 +
                       C90111 * ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                                 C90403 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90375) /
                                            C89890) /
                                               C89849 -
                                           (C90406 * ce) / C90112))));
    const double C2714 =
        3 * ((-(ae * C90311 * C90174) / C89890) / C89849 - C90648 / C90112 -
             (C90311 * C90175 * ce) / C90112 + C90111 * C90760) +
        (C90311 * C90250 * ae) / C89849 - (C90311 * C90249 * ce) / C90112 +
        C90111 *
            (2 * C90760 - (ae * C90311 * C90240) / C90112 -
             (C90311 * C90241 * ce) / C90112 +
             C90111 * ((-(ae * C90311 * C90228) / C89890) / C89849 -
                       C90750 / C90112 - (C90311 * C90231 * ce) / C90112 +
                       C90111 * ((-(C90311 * C90215 * ce) / C89890) / C89849 -
                                 (ae * C90311 * C90212) / C90112 -
                                 (C90111 * C90311 *
                                  (C90192 * C90193 +
                                   C90119 * bs[7] * std::pow(C90115, 7)) *
                                  C90120) /
                                     C90112)));
    const double C3176 =
        (((-3 * C90183) / C89890 + C90111 * C90250 - (C90230 * ce) / C89890) *
         ae) /
            C89849 +
        C90311 *
            (3 * C90522 - (C90519 * ce) / C90112 +
             C90111 * (2 * C90520 - (C90513 * ce) / C90112 +
                       C90111 * ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                                 C90504 / C90112 +
                                 C90111 * ((-(C90111 * std::pow(C90115, 7) *
                                              bs[7] * C90476) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112))));
    const double C3668 =
        (C90311 * C90250 * ae) / C89849 +
        C90253 * C90311 *
            (2 * C90419 - (C90412 * ce) / C90112 +
             C90111 *
                 ((-(C90111 * C90406 * ce) / C89890) / C89849 -
                  C90403 / C90112 +
                  C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90375) /
                             C89890) /
                                C89849 -
                            (C90406 * ce) / C90112)));
    const double C3882 =
        (C90253 * C90250 * ae) / C89849 +
        C90311 * C90253 *
            (2 * C90520 - (C90513 * ce) / C90112 +
             C90111 *
                 ((-(C90111 * C90507 * ce) / C89890) / C89849 -
                  C90504 / C90112 +
                  C90111 * ((-(C90111 * std::pow(C90115, 7) * bs[7] * C90476) /
                             C89890) /
                                C89849 -
                            (C90507 * ce) / C90112)));
    const double C124 =
        4 * ((-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
             (C90165 * ce) / C89890) +
        C90111 * ((-3 * C90183) / C89890 + C90111 * C90250 -
                  (C90230 * ce) / C89890) -
        ((3 * C90165 + C90111 * C90230) * ce) / C89890;
    const double C825 = (-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
                        (C90165 * ce) / C89890 + C90250 * C90425;
    const double C1409 = (-2 * C90144) / C89890 - (C90111 * C90183) / C89890 -
                         (C90165 * ce) / C89890 + C90250 * C90547;
    const double C1991 = C90253 * ((-3 * C90183) / C89890 + C90111 * C90250 -
                                   (C90230 * ce) / C89890);
    const double C2713 = C90311 * ((-3 * C90183) / C89890 + C90111 * C90250 -
                                   (C90230 * ce) / C89890);
    const double C3442 = C90311 * C90253 * C90250;
    const double C21046 =
        2 * C91067 - (C91064 * ce) / C90112 + C90253 * C91268 +
        (C90311 * C91222 * ae) / C89849 +
        C90311 *
            ((C91222 * ae) / C89849 +
             C90311 * (2 * C91265 - (C91257 * ce) / C90112 +
                       C90253 * ((-(C90253 * C90507 * ce) / C89890) / C89849 -
                                 C90538 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90528) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112))));
    const double C22738 =
        3 * ((-(ae * C90311 * C91001) / C89890) / C89849 - C91111 / C90112 -
             (C90311 * C91004 * ce) / C90112 + C90253 * C91325) +
        (C90311 * C91222 * ae) / C89849 - (C90311 * C91221 * ce) / C90112 +
        C90253 *
            (2 * C91325 - (ae * C90311 * C91211) / C90112 -
             (C90311 * C91212 * ce) / C90112 +
             C90253 * ((-(ae * C90311 * C91191) / C89890) / C89849 -
                       C91319 / C90112 - (C90311 * C91194 * ce) / C90112 +
                       C90253 * ((-(C90311 * C90406 * ce) / C89890) / C89849 -
                                 (ae * C90311 * C90291) / C90112 -
                                 (C90253 * C90311 *
                                  (C90192 * C90193 +
                                   C90425 * bs[7] * std::pow(C90115, 7)) *
                                  C90120) /
                                     C90112)));
    const double C22948 =
        (((-3 * C91013) / C89890 + C90253 * C91222 - (C91207 * ce) / C89890) *
         ae) /
            C89849 +
        C90311 *
            (3 * C91268 - (C91263 * ce) / C90112 +
             C90253 * (2 * C91265 - (C91257 * ce) / C90112 +
                       C90253 * ((-(C90253 * C90507 * ce) / C89890) / C89849 -
                                 C90538 / C90112 +
                                 C90253 * ((-(C90253 * std::pow(C90115, 7) *
                                              bs[7] * C90528) /
                                            C89890) /
                                               C89849 -
                                           (C90507 * ce) / C90112))));
    const double C20214 =
        4 * ((-2 * C90822) / C89890 - (C90253 * C91013) / C89890 -
             (C91003 * ce) / C89890) +
        C90253 * ((-3 * C91013) / C89890 + C90253 * C91222 -
                  (C91207 * ce) / C89890) -
        ((3 * C91003 + C90253 * C91207) * ce) / C89890;
    const double C20736 = (-2 * C90822) / C89890 - (C90253 * C91013) / C89890 -
                          (C91003 * ce) / C89890 + C91222 * C90547;
    const double C22504 = C90311 * ((-3 * C91013) / C89890 + C90253 * C91222 -
                                    (C91207 * ce) / C89890);
    const double C39314 =
        4 * ((-2 * C90946) / C89890 - (C90311 * C91446) / C89890 -
             (C91442 * ce) / C89890) +
        C90311 * ((-3 * C91446) / C89890 + C90311 * C91666 -
                  (C91643 * ce) / C89890) -
        ((3 * C91442 + C90311 * C91643) * ce) / C89890;
    const double C15314 = C15298 + C15299;
    const double C21188 = C21181 + C21182;
    const double C47304 = C47288 + C47289;
    const double C18757 = C18741 + C18742;
    const double C25402 = C25397 + C25398;
    const double C50616 = C50600 + C50601;
    const double C20153 = C20143 + C20144;
    const double C24551 = C24537 + C24538;
    const double C22427 = C22415 + C22416;
    const double C29652 = C29636 + C29637;
    const double C40313 = C40310 + C40311;
    const double C70658 = C70648 + C70649;
    const double C39201 = C39196 + C39197;
    const double C6920 = C6914 + C6915;
    const double C14879 = C14870 + C14871;
    const double C44196 = C44190 + C44191;
    const double C46881 = C46872 + C46873;
    const double C2302 = C2298 + C2299;
    const double C4459 = C4451 + C4452;
    const double C41907 = C41899 + C41900;
    const double C3018 = C3014 + C3015;
    const double C11259 = C11249 + C11250;
    const double C7874 = C7869 + C7870;
    const double C12102 = C12099 + C12100;
    const double C45127 = C45122 + C45123;
    const double C35102 = C35094 + C35095;
    const double C41203 = C41201 + C41202;
    const double C86826 = C86821 + C86822;
    const double C39436 = C39433 + C39434;
    const double C2638 = C2629 + C2630;
    const double C5639 = C5629 + C5630;
    const double C13542 = C13536 + C13537;
    const double C28869 = C28860 + C28861;
    const double C61950 = C61944 + C61945;
    const double C69903 = C69894 + C69895;
    const double C3362 = C3358 + C3359;
    const double C10064 = C10056 + C10057;
    const double C58647 = C58639 + C58640;
    const double C8312 = C8309 + C8310;
    const double C12551 = C12543 + C12544;
    const double C60982 = C60974 + C60975;
    const double C20404 =
        4 * (2 * C91012 - (ae * C91013) / C90112 - (C91014 * ce) / C90112 +
             C90253 * C91217) +
        (((-3 * C91013) / C89890 + C90253 * C91222 - (C91207 * ce) / C89890) *
         ae) /
            C89849 -
        ((3 * C91014 + C90253 * C91221 + C91207 * ae) * ce) / C90112 +
        C90253 *
            (3 * C91217 + (C91222 * ae) / C89849 - (C91221 * ce) / C90112 +
             C90253 *
                 (2 * C91210 - (ae * C91211) / C90112 - (C91212 * ce) / C90112 +
                  C90253 * ((-(ae * C91191) / C89890) / C89849 -
                            C90441 / C90112 - (C91194 * ce) / C90112 +
                            C90253 * ((-(C90406 * ce) / C89890) / C89849 -
                                      (ae * C90291) / C90112 -
                                      (C90253 *
                                       (C90192 * C90193 +
                                        C90425 * bs[7] * std::pow(C90115, 7)) *
                                       C90120) /
                                          C90112))));
    const double C39644 =
        4 * (2 * C91450 - (ae * C91446) / C90112 - (C91451 * ce) / C90112 +
             C90311 * C91661) +
        (((-3 * C91446) / C89890 + C90311 * C91666 - (C91643 * ce) / C89890) *
         ae) /
            C89849 -
        ((3 * C91451 + C90311 * C91665 + C91643 * ae) * ce) / C90112 +
        C90311 *
            (3 * C91661 + (C91666 * ae) / C89849 - (C91665 * ce) / C90112 +
             C90311 *
                 (2 * C91655 - (ae * C91656) / C90112 - (C91657 * ce) / C90112 +
                  C90311 * ((-(ae * C91640) / C89890) / C89849 -
                            C90563 / C90112 - (C91644 * ce) / C90112 +
                            C90311 * ((-(C90507 * ce) / C89890) / C89849 -
                                      (ae * C90349) / C90112 -
                                      (C90311 *
                                       (C90192 * C90193 +
                                        C90547 * bs[7] * std::pow(C90115, 7)) *
                                       C90120) /
                                          C90112))));
    const double C70744 = C70739 * C92105;
    const double C6582 = C6578 + C6579;
    const double C43858 = C43854 + C43855;
    const double C5011 = C5004 + C5005;
    const double C16951 = C16946 + C16947;
    const double C42433 = C42426 + C42427;
    const double C48849 = C48844 + C48845;
    const double C12775 = C12769 + C12770;
    const double C61206 = C61200 + C61201;
    const double C10952 = C10943 + C10944;
    const double C31520 = C31512 + C31513;
    const double C59517 = C59508 + C59509;
    const double C72404 = C72400 + C72401;
    const double C8555 = C8551 + C8552;
    const double C45754 = C45750 + C45751;
    const double C54499 = C54496 + C54497;
    const double C76939 = C76936 + C76937;
    const double C29939 = C11166 + C11165;
    const double C2217 = C2210 + C2211;
    const double C4365 = C4352 + C4353;
    const double C41813 = C41800 + C41801;
    const double C6811 = C6802 + C6803;
    const double C14789 = C14776 + C14777;
    const double C44087 = C44078 + C44079;
    const double C46791 = C46778 + C46779;
    const double C2939 = C2932 + C2933;
    const double C11155 = C11141 + C11142;
    const double C7764 = C7755 + C7756;
    const double C11992 = C11987 + C11988;
    const double C45017 = C45008 + C45009;
    const double C47500 = C47499 * C92116;
    const double C6689 = C6685 + C6686;
    const double C43965 = C43961 + C43962;
    const double C5107 = C5098 + C5099;
    const double C17061 = C17056 + C17057;
    const double C42523 = C42514 + C42515;
    const double C48959 = C48954 + C48955;
    const double C12884 = C12880 + C12881;
    const double C61315 = C61311 + C61312;
    const double C11052 = C11045 + C11046;
    const double C31633 = C31628 + C31629;
    const double C59611 = C59604 + C59605;
    const double C72509 = C72506 + C72507;
    const double C8666 = C8660 + C8661;
    const double C45859 = C45853 + C45854;
    const double C54635 = C54632 + C54633;
    const double C77075 = C77072 + C77073;
    const double C35199 = C35192 + C35193;
    const double C41273 = C41271 + C41272;
    const double C86909 = C86906 + C86907;
    const double C39491 = C39489 + C39490;
    const double C15829 = C5457 + C5456;
    const double C2473 = C2466 + C2467;
    const double C5446 = C5432 + C5433;
    const double C3195 = C3188 + C3189;
    const double C9874 = C9861 + C9862;
    const double C58457 = C58444 + C58445;
    const double C13323 = C13314 + C13315;
    const double C28687 = C28674 + C28675;
    const double C61731 = C61722 + C61723;
    const double C69721 = C69708 + C69709;
    const double C8094 = C8089 + C8090;
    const double C12334 = C12325 + C12326;
    const double C60765 = C60756 + C60757;
    const double C15319 = C15312 + C15313;
    const double C15318 = C15310 + C15311;
    const double C15419 = C15415 + C15416;
    const double C15517 = C15513 + C15514;
    const double C79159 = C18763 + C18764;
    const double C79156 = C18764 + C18763;
    const double C79158 = C18761 + C18762;
    const double C79157 = C18762 + C18761;
    const double C79297 = C18875 + C18876;
    const double C79296 = C18876 + C18875;
    const double C79429 = C18990 + C18989;
    const double C79428 = C18989 + C18990;
    const double C29657 = C29650 + C29651;
    const double C29656 = C29648 + C29649;
    const double C29759 = C29755 + C29756;
    const double C29859 = C29855 + C29856;
    const double C42341 = C42328 + C42329;
    const double C42338 = C42322 + C42323;
    const double C42333 = C42312 + C42313;
    const double C42330 = C42306 + C42307;
    const double C42431 = C42422 + C42423;
    const double C42430 = C42420 + C42421;
    const double C42525 = C42518 + C42519;
    const double C42520 = C42508 + C42509;
    const double C43751 = C43744 + C43745;
    const double C43748 = C43738 + C43739;
    const double C43856 = C43850 + C43851;
    const double C43963 = C43957 + C43958;
    const double C45647 = C45640 + C45641;
    const double C45644 = C45634 + C45635;
    const double C45752 = C45746 + C45747;
    const double C45861 = C45857 + C45858;
    const double C59427 = C59414 + C59415;
    const double C59424 = C59408 + C59409;
    const double C59419 = C59398 + C59399;
    const double C59416 = C59392 + C59393;
    const double C59519 = C59512 + C59513;
    const double C59514 = C59502 + C59503;
    const double C59609 = C59600 + C59601;
    const double C59608 = C59598 + C59599;
    const double C61101 = C61094 + C61095;
    const double C61098 = C61088 + C61089;
    const double C61208 = C61204 + C61205;
    const double C61313 = C61307 + C61308;
    const double C42340 = C42326 + C42327;
    const double C42337 = C42320 + C42321;
    const double C42334 = C42314 + C42315;
    const double C42331 = C42308 + C42309;
    const double C42432 = C42424 + C42425;
    const double C42429 = C42418 + C42419;
    const double C42524 = C42516 + C42517;
    const double C42521 = C42510 + C42511;
    const double C43750 = C43742 + C43743;
    const double C43747 = C43736 + C43737;
    const double C43857 = C43852 + C43853;
    const double C43964 = C43959 + C43960;
    const double C45646 = C45638 + C45639;
    const double C45643 = C45632 + C45633;
    const double C45753 = C45748 + C45749;
    const double C45860 = C45855 + C45856;
    const double C59426 = C59412 + C59413;
    const double C59423 = C59406 + C59407;
    const double C59420 = C59400 + C59401;
    const double C59417 = C59394 + C59395;
    const double C59518 = C59510 + C59511;
    const double C59515 = C59504 + C59505;
    const double C59610 = C59602 + C59603;
    const double C59607 = C59596 + C59597;
    const double C61100 = C61092 + C61093;
    const double C61097 = C61086 + C61087;
    const double C61207 = C61202 + C61203;
    const double C61314 = C61309 + C61310;
    const double C47312 = C47310 + C47311;
    const double C56825 = C56822 + C56823;
    const double C56824 = C56820 + C56821;
    const double C70662 = C70656 + C70657;
    const double C46789 = C46774 + C46775;
    const double C46786 = C46768 + C46769;
    const double C46785 = C46766 + C46767;
    const double C46782 = C46760 + C46761;
    const double C46883 = C46876 + C46877;
    const double C46878 = C46866 + C46867;
    const double C46975 = C46968 + C46969;
    const double C46970 = C46958 + C46959;
    const double C49073 = C49064 + C49065;
    const double C49070 = C49058 + C49059;
    const double C49182 = C49178 + C49179;
    const double C49289 = C49285 + C49286;
    const double C49991 = C49982 + C49983;
    const double C49988 = C49976 + C49977;
    const double C50098 = C50092 + C50093;
    const double C50207 = C50203 + C50204;
    const double C81909 = C81896 + C81897;
    const double C81906 = C81890 + C81891;
    const double C81901 = C81880 + C81881;
    const double C81898 = C81874 + C81875;
    const double C82001 = C81994 + C81995;
    const double C81996 = C81984 + C81985;
    const double C82091 = C82082 + C82083;
    const double C82090 = C82080 + C82081;
    const double C84487 = C84478 + C84479;
    const double C84484 = C84472 + C84473;
    const double C84596 = C84592 + C84593;
    const double C84701 = C84695 + C84696;
    const double C46790 = C46776 + C46777;
    const double C46787 = C46770 + C46771;
    const double C46784 = C46764 + C46765;
    const double C46781 = C46758 + C46759;
    const double C46882 = C46874 + C46875;
    const double C46879 = C46868 + C46869;
    const double C46974 = C46966 + C46967;
    const double C46971 = C46960 + C46961;
    const double C49074 = C49066 + C49067;
    const double C49071 = C49060 + C49061;
    const double C49181 = C49176 + C49177;
    const double C49288 = C49283 + C49284;
    const double C49992 = C49984 + C49985;
    const double C49989 = C49978 + C49979;
    const double C50099 = C50094 + C50095;
    const double C50206 = C50201 + C50202;
    const double C81908 = C81894 + C81895;
    const double C81905 = C81888 + C81889;
    const double C81902 = C81882 + C81883;
    const double C81899 = C81876 + C81877;
    const double C82000 = C81992 + C81993;
    const double C81997 = C81986 + C81987;
    const double C82092 = C82084 + C82085;
    const double C82089 = C82078 + C82079;
    const double C84488 = C84480 + C84481;
    const double C84485 = C84474 + C84475;
    const double C84595 = C84590 + C84591;
    const double C84702 = C84697 + C84698;
    const double C41911 = C41894 + C41910;
    const double C42008 = C41991 + C42007;
    const double C56139 = C56137 + C56135;
    const double C56138 = C56132 + C56136;
    const double C86744 = C86738 + C86739;
    const double C86828 = C86819 + C86825;
    const double C69719 = C69704 + C69705;
    const double C69716 = C69698 + C69699;
    const double C69715 = C69696 + C69697;
    const double C69712 = C69690 + C69691;
    const double C69813 = C69806 + C69807;
    const double C69808 = C69796 + C69797;
    const double C69905 = C69898 + C69899;
    const double C69900 = C69888 + C69889;
    const double C71975 = C71966 + C71967;
    const double C71972 = C71960 + C71961;
    const double C72084 = C72080 + C72081;
    const double C72191 = C72187 + C72188;
    const double C72917 = C72908 + C72909;
    const double C72914 = C72902 + C72903;
    const double C73024 = C73018 + C73019;
    const double C73133 = C73129 + C73130;
    const double C86241 = C86228 + C86229;
    const double C86238 = C86222 + C86223;
    const double C86233 = C86212 + C86213;
    const double C86230 = C86206 + C86207;
    const double C86331 = C86322 + C86323;
    const double C86330 = C86320 + C86321;
    const double C86425 = C86418 + C86419;
    const double C86420 = C86408 + C86409;
    const double C89623 = C89616 + C89617;
    const double C89620 = C89610 + C89611;
    const double C89728 = C89722 + C89723;
    const double C89837 = C89833 + C89834;
    const double C69720 = C69706 + C69707;
    const double C69717 = C69700 + C69701;
    const double C69714 = C69694 + C69695;
    const double C69711 = C69688 + C69689;
    const double C69812 = C69804 + C69805;
    const double C69809 = C69798 + C69799;
    const double C69904 = C69896 + C69897;
    const double C69901 = C69890 + C69891;
    const double C71976 = C71968 + C71969;
    const double C71973 = C71962 + C71963;
    const double C72083 = C72078 + C72079;
    const double C72190 = C72185 + C72186;
    const double C72918 = C72910 + C72911;
    const double C72915 = C72904 + C72905;
    const double C73025 = C73020 + C73021;
    const double C73132 = C73127 + C73128;
    const double C86240 = C86226 + C86227;
    const double C86237 = C86220 + C86221;
    const double C86234 = C86214 + C86215;
    const double C86231 = C86208 + C86209;
    const double C86332 = C86324 + C86325;
    const double C86329 = C86318 + C86319;
    const double C86424 = C86416 + C86417;
    const double C86421 = C86410 + C86411;
    const double C89622 = C89614 + C89615;
    const double C89619 = C89608 + C89609;
    const double C89729 = C89724 + C89725;
    const double C89836 = C89831 + C89832;
    const double C58555 = C58538 + C58554;
    const double C58651 = C58634 + C58650;
    const double C66759 = C66757 + C66755;
    const double C66758 = C66752 + C66756;
    const double C81410 = C81404 + C81405;
    const double C81576 = C81567 + C81573;
    const double C21194 = C21188 * C1984;
    const double C25406 = C25402 * C1984;
    const double C20161 = C20153 * C92084;
    const double C24559 = C24551 * C92084;
    const double C22433 = C22427 * C92084;
    const double C40315 = C40313 * C1984;
    const double C39203 = C39201 * C92084;
    const double C2305 = C2302 * C1986;
    const double C3021 = C3018 * C92105;
    const double C11263 = C11259 * C92105;
    const double C12104 = C12102 * C1986;
    const double C41204 = C41203 * C1986;
    const double C39437 = C39436 * C92105;
    const double C2641 = C2638 * C92116;
    const double C5643 = C5639 * C92116;
    const double C3365 = C3362 * C2710;
    const double C8314 = C8312 * C2710;
    const double C70747 = C70738 + C70744;
    const double C12994 = C2939 * C1984;
    const double C11163 = C11155 * C92084;
    const double C31739 = C11155 * C1984;
    const double C13943 = C11992 * C92084;
    const double C47501 = C47484 + C47500;
    const double C15839 = C15829 * C92072;
    const double C47799 = C15829 * C92072;
    const double C7141 = C2473 * C1984;
    const double C5454 = C5446 * C92084;
    const double C17497 = C5446 * C1984;
    const double C9079 = C8094 * C92084;
    const double C15321 = C15319 * C92084;
    const double C15320 = C15318 * C801;
    const double C15502 = C15318 * C244;
    const double C15518 = C15517 * C92116;
    const double C79163 = C79159 * C801;
    const double C79160 = C79156 * C801;
    const double C79162 = C79158 * C92084;
    const double C79161 = C79157 * C92084;
    const double C29659 = C29657 * C92084;
    const double C29658 = C29656 * C801;
    const double C29744 = C29656 * C181;
    const double C29760 = C29759 * C92105;
    const double C70663 = C70662 * C92157;
    const double C41912 = C41911 * C92183;
    const double C42009 = C42008 * C92183;
    const double C81411 = C81410 * C92067;
    const double C81577 = C81576 * C92067;
    const double C70748 = C70747 * C92157;
    const double C15844 = C15838 + C15839;
    const double C47800 = C47798 + C47799;
    const double C15322 = C15320 + C15321;
    const double C15519 = C15502 + C15518;
    const double C79165 = C79162 + C79163;
    const double C79164 = C79160 + C79161;
    const double C29660 = C29658 + C29659;
    const double C29761 = C29744 + C29760;
    const double C29661 = C29660 * C92157;
    const double C29762 = C29761 * C92157;
    d2eexx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C1987 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C1983 -
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C1988 -
                     (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                      C92350 * C127 + C41550 * C118 + C92360 * C126) *
                         C1984) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C1987 +
                     (C42333 + C42334 + C42335) * C1983 -
                     (C43746 + C43747 + C43748) * C1988 -
                     (C43749 + C43750 + C43751) * C1984) *
                        C92171) *
                       C92183 * C92116 * C1985 +
                   (((C43748 + C43747 + C43746) * C1988 -
                     ((C42335 + C42334 + C42333) * C1983 +
                      (C42332 + C42331 + C42330) * C1987) +
                     (C43751 + C43750 + C43749) * C1984) *
                        C41548 +
                    ((C41550 * C807 + C92360 * C819 + C41551 * C808 +
                      C92350 * C820 + C41552 * C809 + C41547 * C821) *
                         C1988 -
                     ((C42336 + C42337 + C42338) * C1983 +
                      (C42339 + C42340 + C42341) * C1987) +
                     (C41550 * C823 + C92360 * C831 + C41551 * C824 +
                      C92350 * C832 + C41552 * C825 + C41547 * C833) *
                         C1984) *
                        C92171) *
                       C92183 * C92116 * C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C2059 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C1985 -
                     (C42332 + C42331 + C42330) * C2060 -
                     (C42428 + C42429 + C42430) * C1986) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C2059 +
                     (C42430 + C42429 + C42428) * C1985 -
                     (C42339 + C42340 + C42341) * C2060 -
                     (C42433 + C42432 + C42431) * C1986) *
                        C92171) *
                       C92183 * C1983 +
                   (((C43748 + C43747 + C43746) * C2060 -
                     ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                       C92350 * C190 + C41550 * C183 + C92360 * C189) *
                          C1985 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C2059) +
                     (C43856 + C43857 + C43858) * C1986) *
                        C41548 +
                    ((C41550 * C807 + C92360 * C819 + C41551 * C808 +
                      C92350 * C820 + C41552 * C809 + C41547 * C821) *
                         C2060 -
                     ((C43858 + C43857 + C43856) * C1985 +
                      (C43746 + C43747 + C43748) * C2059) +
                     (C41550 * C892 + C92360 * C900 + C41551 * C893 +
                      C92350 * C901 + C41552 * C894 + C41547 * C902) *
                         C1986) *
                        C92171) *
                       C92183 * C1984) *
                  C92116) /
                 (p * q * std::sqrt(p + q));
    d2eexz[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C244 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C92116) *
                         C41548 +
                     ((C42330 + C42331 + C42332) * C244 +
                      (C42520 + C42521 + C42522) * C92116) *
                         C92171) *
                        C92183 * C1985 -
                    (((C42523 + C42524 + C42525) * C92116 +
                      (C42339 + C42340 + C42341) * C244) *
                         C92171 +
                     ((C42522 + C42521 + C42520) * C92116 +
                      (C42332 + C42331 + C42330) * C244) *
                         C41548) *
                        C92183 * C1986) *
                       C1983 +
                   ((((C43748 + C43747 + C43746) * C244 +
                      (C43963 + C43964 + C43965) * C92116) *
                         C41548 +
                     ((C41550 * C807 + C92360 * C819 + C41551 * C808 +
                       C92350 * C820 + C41552 * C809 + C41547 * C821) *
                          C244 +
                      (C41550 * C958 + C92360 * C966 + C41551 * C959 +
                       C92350 * C967 + C41552 * C960 + C41547 * C968) *
                          C92116) *
                         C92171) *
                        C92183 * C1986 -
                    (((C43965 + C43964 + C43963) * C92116 +
                      (C43746 + C43747 + C43748) * C244) *
                         C92171 +
                     ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                       C92350 * C253 + C41550 * C246 + C92360 * C252) *
                          C92116 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C244) *
                         C41548) *
                        C92183 * C1985) *
                       C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C1987 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C1983 -
            (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
               C92183 * C92360 +
           ((C41803 + C41802) * C1987 + (C41805 + C41804) * C1983 -
            (C41807 + C41806) * C1988 - (C41809 + C41808) * C1984) *
               C92183 * C92350 +
           (C41814 * C1987 + C41815 * C1983 - (C41811 + C41810) * C1988 -
            (C41813 + C41812) * C1984) *
               C92183 * C41547) *
              C92116 * C1985 +
          (((C44080 + C44081) * C1988 -
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C1983 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C1987) +
            (C44082 + C44083) * C1984) *
               C92183 * C92360 +
           ((C44084 + C44085) * C1988 -
            ((C44083 + C44082) * C1983 + (C44081 + C44080) * C1987) +
            (C44086 + C44087) * C1984) *
               C92183 * C92350 +
           ((C41775 * C802 + C41548 * C1019 + C41776 * C809 + C92171 * C1026) *
                C1988 -
            ((C44087 + C44086) * C1983 + (C44085 + C44084) * C1987) +
            (C41775 * C810 + C41548 * C1027 + C41776 * C825 + C92171 * C1034) *
                C1984) *
               C92183 * C41547) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2059 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C1985 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C2060 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C1986) *
               C92183 * C92360 +
           ((C41803 + C41802) * C2059 + (C41903 + C41904) * C1985 -
            (C44081 + C44080) * C2060 - (C44194 + C44195) * C1986) *
               C92183 * C92350 +
           (C41814 * C2059 + C41909 * C1985 - (C44085 + C44084) * C2060 -
            (C44196 + C44197) * C1986) *
               C92183 * C41547) *
              C1983 +
          (((C44080 + C44081) * C2060 -
            ((C41904 + C41903) * C1985 + (C41802 + C41803) * C2059) +
            (C44195 + C44194) * C1986) *
               C92183 * C92360 +
           ((C44084 + C44085) * C2060 -
            ((C41906 + C41905) * C1985 + (C41807 + C41806) * C2059) +
            (C44197 + C44196) * C1986) *
               C92183 * C92350 +
           ((C41775 * C802 + C41548 * C1019 + C41776 * C809 + C92171 * C1026) *
                C2060 -
            ((C41907 + C41908) * C1985 + (C41811 + C41810) * C2059) +
            (C41775 * C887 + C41548 * C1091 + C41776 * C894 + C92171 * C1092) *
                C1986) *
               C92183 * C41547) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C92183 * C92360 +
            ((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92183 *
                C92350 +
            C42009 * C41547) *
               C1985 -
           (((C44304 + C44305) * C92116 + (C44085 + C44084) * C244) * C92183 *
                C41547 +
            ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C92183 *
                C92350 +
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C92116 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C244) *
                C92183 * C92360) *
               C1986) *
              C1983 +
          ((((C44080 + C44081) * C244 + (C44307 + C44306) * C92116) * C92183 *
                C92360 +
            ((C44084 + C44085) * C244 + (C44305 + C44304) * C92116) * C92183 *
                C92350 +
            ((C41775 * C802 + C41548 * C1019 + C41776 * C809 + C92171 * C1026) *
                 C244 +
             (C41775 * C953 + C41548 * C1143 + C41776 * C960 + C92171 * C1150) *
                 C92116) *
                C92183 * C41547) *
               C1986 -
           (((C42004 + C42005) * C92116 + (C41811 + C41810) * C244) * C92183 *
                C41547 +
            ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C92183 *
                C92350 +
            ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92183 *
                C92360) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92360 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92350 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C41547) *
               C41548 +
           ((C7130 + C7131 - C7132 - C7133) * C92360 +
            (C7134 + C7135 - C7136 - C7137) * C92350 +
            (C7138 + C7139 - C7140 - C7141) * C41547) *
               C92171) *
              C92116 * C1985 +
          (((C7132 - (C7131 + C7130) + C7133) * C92360 +
            (C7136 - (C7135 + C7134) + C7137) * C92350 +
            (C7140 - (C7139 + C7138) + C7141) * C41547) *
               C41548 +
           ((C17492 - (C17491 + C17490) + C17493) * C92360 +
            (C17496 - (C17495 + C17494) + C17497) * C92350 +
            ((C554 * C809 + C92183 * C1208) * C1988 -
             (C5446 * C1983 + C5447 * C1987) +
             (C554 * C825 + C92183 * C1216) * C1984) *
                C41547) *
               C92171) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C92360 +
            (C2541 + C2542 - C2543 - C2559) * C92350 +
            (C2546 + C2547 - C2548 - C2560) * C41547) *
               C41548 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C92360 +
            (C7240 + C7241 - C7242 - C7243) * C92350 +
            (C7244 + C7245 - C7246 - C7247) * C41547) *
               C92171) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C92360 +
            (C2548 - (C2547 + C2546) + C2560) * C92350 +
            (C2553 - (C2552 + C2551) + C2561) * C41547) *
               C41548 +
           ((C7242 - (C7241 + C7240) + C7243) * C92360 +
            (C7246 - (C7245 + C7244) + C7247) * C92350 +
            ((C554 * C809 + C92183 * C1208) * C2060 -
             (C2558 * C1985 + C2472 * C2059) +
             (C554 * C894 + C92183 * C1274) * C1986) *
                C41547) *
               C92171) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C244 +
              (C554 * C245 + C92183 * C719) * C92116) *
                 C92360 +
             (C726 + C742) * C92350 + C746 * C41547) *
                C41548 +
            ((C5626 + C5642) * C92360 + C7346 * C92350 + C4791 * C41547) *
                C92171) *
               C1985 -
           (((C5643 + C5631) * C41547 + C17698 * C92350 +
             (C5645 + C5637) * C92360) *
                C92171 +
            (C7347 * C41547 + C7348 * C92350 + (C5642 + C5626) * C92360) *
                C41548) *
               C1986) *
              C1983 +
          (((C7346 * C92360 + C4791 * C92350 + (C2631 + C2641) * C41547) *
                C41548 +
            (C16008 * C92360 + (C5631 + C5643) * C92350 +
             ((C554 * C809 + C92183 * C1208) * C244 +
              (C554 * C960 + C92183 * C1332) * C92116) *
                 C41547) *
                C92171) *
               C1986 -
           (((C2641 + C2631) * C41547 + C7347 * C92350 + C7348 * C92360) *
                C92171 +
            ((C744 + C732) * C41547 + (C743 + C729) * C92350 +
             (C742 + C726) * C92360) *
                C41548) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C801 +
                      (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                       C92350 * C126 + C41552 * C119 + C41547 * C127) *
                          C92084) *
                         C41548 +
                     ((C42330 + C42331 + C42332) * C801 +
                      (C42333 + C42334 + C42335) * C92084) *
                         C92171) *
                        C92183 * C2709 -
                    (((C45642 + C45643 + C45644) * C92084 +
                      (C45645 + C45646 + C45647) * C801) *
                         C92171 +
                     ((C41552 * C1395 + C41547 * C1411 + C41551 * C1396 +
                       C92350 * C1412 + C41550 * C1397 + C92360 * C1413) *
                          C92084 +
                      (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                       C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                          C801) *
                         C41548) *
                        C92183 * C2710) *
                       C1985 +
                   ((((C45647 + C45646 + C45645) * C801 +
                      (C45644 + C45643 + C45642) * C92084) *
                         C41548 +
                     ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                       C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                          C801 +
                      (C41550 * C8418 + C92360 * C8421 + C41551 * C8419 +
                       C92350 * C8422 + C41552 * C8420 + C41547 * C8423) *
                          C92084) *
                         C92171) *
                        C92183 * C2710 -
                    (((C42336 + C42337 + C42338) * C92084 +
                      (C42339 + C42340 + C42341) * C801) *
                         C92171 +
                     ((C42335 + C42334 + C42333) * C92084 +
                      (C42332 + C42331 + C42330) * C801) *
                         C41548) *
                        C92183 * C2709) *
                       C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C2059 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C1985 -
                     (C42332 + C42331 + C42330) * C2060 -
                     (C42428 + C42429 + C42430) * C1986) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C2059 +
                     (C42430 + C42429 + C42428) * C1985 -
                     (C42339 + C42340 + C42341) * C2060 -
                     (C42433 + C42432 + C42431) * C1986) *
                        C92171) *
                       C92183 * C92084 * C2709 +
                   (((C45647 + C45646 + C45645) * C2060 -
                     ((C41552 * C1469 + C41547 * C1477 + C41551 * C1470 +
                       C92350 * C1478 + C41550 * C1471 + C92360 * C1479) *
                          C1985 +
                      (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                       C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                          C2059) +
                     (C45752 + C45753 + C45754) * C1986) *
                        C41548 +
                    ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                      C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                         C2060 -
                     ((C45754 + C45753 + C45752) * C1985 +
                      (C45645 + C45646 + C45647) * C2059) +
                     (C41550 * C8540 + C92360 * C8543 + C41551 * C8541 +
                      C92350 * C8544 + C41552 * C8542 + C41547 * C8545) *
                         C1986) *
                        C92171) *
                       C92183 * C92084 * C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eexz[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C2849 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C2709 -
                     (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                      C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                         C2850 -
                     (C41552 * C1538 + C41547 * C1546 + C41551 * C1539 +
                      C92350 * C1547 + C41550 * C1540 + C92360 * C1548) *
                         C2710) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C2849 +
                     (C42520 + C42521 + C42522) * C2709 -
                     (C45645 + C45646 + C45647) * C2850 -
                     (C45859 + C45860 + C45861) * C2710) *
                        C92171) *
                       C92183 * C1985 +
                   (((C45647 + C45646 + C45645) * C2850 -
                     ((C42522 + C42521 + C42520) * C2709 +
                      (C42332 + C42331 + C42330) * C2849) +
                     (C45861 + C45860 + C45859) * C2710) *
                        C41548 +
                    ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                      C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                         C2850 -
                     ((C42523 + C42524 + C42525) * C2709 +
                      (C42339 + C42340 + C42341) * C2849) +
                     (C41550 * C8653 + C92360 * C8656 + C41551 * C8654 +
                      C92350 * C8657 + C41552 * C8655 + C41547 * C8658) *
                         C2710) *
                        C92171) *
                       C92183 * C1986) *
                  C92084) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C92183 * C92360 +
            ((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92183 *
                C92350 +
            (C41814 * C801 + C41815 * C92084) * C92183 * C41547) *
               C2709 -
           (((C45017 + C45016) * C92084 + (C45015 + C45014) * C801) * C92183 *
                C41547 +
            ((C45013 + C45012) * C92084 + (C45011 + C45010) * C801) * C92183 *
                C92350 +
            ((C41776 * C3439 + C92171 * C3665 + C41775 * C1397 +
              C41548 * C1614) *
                 C92084 +
             (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
              C41548 * C1606) *
                 C801) *
                C92183 * C92360) *
               C2710) *
              C1985 +
          ((((C41775 * C3431 + C41548 * C3661 + C41776 * C8412 +
              C92171 * C8766) *
                 C801 +
             (C41775 * C3439 + C41548 * C3665 + C41776 * C8418 +
              C92171 * C8769) *
                 C92084) *
                C92183 * C92360 +
            ((C41775 * C3432 + C41548 * C3662 + C41776 * C8413 +
              C92171 * C8767) *
                 C801 +
             (C41775 * C3440 + C41548 * C3666 + C41776 * C8419 +
              C92171 * C8770) *
                 C92084) *
                C92183 * C92350 +
            ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
              C92171 * C8768) *
                 C801 +
             (C41775 * C3441 + C41548 * C3667 + C41776 * C8420 +
              C92171 * C8771) *
                 C92084) *
                C92183 * C41547) *
               C2710 -
           (((C44087 + C44086) * C92084 + (C44085 + C44084) * C801) * C92183 *
                C41547 +
            ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C92183 *
                C92350 +
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C92084 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C801) *
                C92183 * C92360) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2059 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C1985 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C2060 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C1986) *
               C92183 * C92360 +
           ((C41803 + C41802) * C2059 + (C41903 + C41904) * C1985 -
            (C44081 + C44080) * C2060 - (C44194 + C44195) * C1986) *
               C92183 * C92350 +
           (C41814 * C2059 + C41909 * C1985 - (C44085 + C44084) * C2060 -
            (C44196 + C44197) * C1986) *
               C92183 * C41547) *
              C92084 * C2709 +
          (((C41775 * C3431 + C41548 * C3661 + C41776 * C8412 +
             C92171 * C8766) *
                C2060 -
            ((C41776 * C3513 + C92171 * C3735 + C41775 * C1471 +
              C41548 * C1672) *
                 C1985 +
             (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
              C41548 * C1606) *
                 C2059) +
            (C41775 * C3513 + C41548 * C3735 + C41776 * C8540 +
             C92171 * C8870) *
                C1986) *
               C92183 * C92360 +
           ((C41775 * C3432 + C41548 * C3662 + C41776 * C8413 +
             C92171 * C8767) *
                C2060 -
            ((C45125 + C45124) * C1985 + (C45011 + C45010) * C2059) +
            (C41775 * C3514 + C41548 * C3736 + C41776 * C8541 +
             C92171 * C8871) *
                C1986) *
               C92183 * C92350 +
           ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
             C92171 * C8768) *
                C2060 -
            ((C45127 + C45126) * C1985 + (C45015 + C45014) * C2059) +
            (C41775 * C3515 + C41548 * C3737 + C41776 * C8542 +
             C92171 * C8872) *
                C1986) *
               C92183 * C41547) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2849 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C2709 -
            (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
             C41548 * C1606) *
                C2850 -
            (C41776 * C3587 + C92171 * C3805 + C41775 * C1540 +
             C41548 * C1727) *
                C2710) *
               C92183 * C92360 +
           ((C41803 + C41802) * C2849 + (C42000 + C42001) * C2709 -
            (C45011 + C45010) * C2850 - (C45234 + C45235) * C2710) *
               C92183 * C92350 +
           (C41814 * C2849 + C42006 * C2709 - (C45015 + C45014) * C2850 -
            (C45236 + C45237) * C2710) *
               C92183 * C41547) *
              C1985 +
          (((C41775 * C3431 + C41548 * C3661 + C41776 * C8412 +
             C92171 * C8766) *
                C2850 -
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C2709 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C2849) +
            (C41775 * C3587 + C41548 * C3805 + C41776 * C8653 +
             C92171 * C8971) *
                C2710) *
               C92183 * C92360 +
           ((C41775 * C3432 + C41548 * C3662 + C41776 * C8413 +
             C92171 * C8767) *
                C2850 -
            ((C44306 + C44307) * C2709 + (C44081 + C44080) * C2849) +
            (C41775 * C3588 + C41548 * C3806 + C41776 * C8654 +
             C92171 * C8972) *
                C2710) *
               C92183 * C92350 +
           ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
             C92171 * C8768) *
                C2850 -
            ((C44304 + C44305) * C2709 + (C44085 + C44084) * C2849) +
            (C41775 * C3589 + C41548 * C3807 + C41776 * C8655 +
             C92171 * C8973) *
                C2710) *
               C92183 * C41547) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eezx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C92360 +
                      (C584 * C801 + C585 * C92084) * C92350 +
                      (C586 * C801 + C587 * C92084) * C41547) *
                         C41548 +
                     ((C5452 + C5453) * C92360 + (C5428 + C5429) * C92350 +
                      (C5430 + C5431) * C41547) *
                         C92171) *
                        C2709 -
                    (((C9079 + C9080) * C41547 + (C9081 + C9082) * C92350 +
                      (C9089 + C9090) * C92360) *
                         C92171 +
                     ((C3193 * C92084 + C3192 * C801) * C41547 +
                      (C3191 * C92084 + C3190 * C801) * C92350 +
                      ((C554 * C1397 + C92183 * C1796) * C92084 +
                       (C554 * C1389 + C92183 * C1788) * C801) *
                          C92360) *
                         C41548) *
                        C2710) *
                       C1985 +
                   ((((C9090 + C9089) * C92360 + (C9082 + C9081) * C92350 +
                      (C9080 + C9079) * C41547) *
                         C41548 +
                     ((C19406 + C19405) * C92360 + (C19398 + C19397) * C92350 +
                      ((C554 * C8414 + C92183 * C9074) * C801 +
                       (C554 * C8420 + C92183 * C9077) * C92084) *
                          C41547) *
                         C92171) *
                        C2710 -
                    (((C5454 + C5455) * C41547 + (C5456 + C5457) * C92350 +
                      (C5458 + C5459) * C92360) *
                         C92171 +
                     ((C5431 + C5430) * C41547 + (C5429 + C5428) * C92350 +
                      (C5453 + C5452) * C92360) *
                         C41548) *
                        C2709) *
                       C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C92360 +
            (C2541 + C2542 - C2543 - C2559) * C92350 +
            (C2546 + C2547 - C2548 - C2560) * C41547) *
               C41548 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C92360 +
            (C7240 + C7241 - C7242 - C7243) * C92350 +
            (C7244 + C7245 - C7246 - C7247) * C41547) *
               C92171) *
              C92084 * C2709 +
          (((C9088 * C2060 -
             ((C554 * C1471 + C92183 * C1854) * C1985 +
              (C554 * C1389 + C92183 * C1788) * C2059) +
             C9194 * C1986) *
                C92360 +
            (C8091 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8199 * C1986) *
                C92350 +
            (C8093 * C2060 - (C3273 * C1985 + C3192 * C2059) + C8200 * C1986) *
                C41547) *
               C41548 +
           ((C19404 * C2060 - (C9194 * C1985 + C9088 * C2059) +
             C19509 * C1986) *
                C92360 +
            (C18425 * C2060 - (C8199 * C1985 + C8091 * C2059) +
             C18528 * C1986) *
                C92350 +
            ((C554 * C8414 + C92183 * C9074) * C2060 -
             (C8200 * C1985 + C8093 * C2059) +
             (C554 * C8542 + C92183 * C9190) * C1986) *
                C41547) *
               C92171) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C92360 +
                     (C3345 + C3346 - C3347 - C3363) * C92350 +
                     (C3350 + C3351 - C3352 - C3364) * C41547) *
                        C41548 +
                    ((C9296 + C9297 - C9298 - C9302) * C92360 +
                     (C8301 + C8302 - C8303 - C8313) * C92350 +
                     (C8306 + C8307 - C8308 - C8314) * C41547) *
                        C92171) *
                       C1985 +
                   (((C9298 - (C9297 + C9296) + C9302) * C92360 +
                     (C8303 - (C8302 + C8301) + C8313) * C92350 +
                     (C8308 - (C8307 + C8306) + C8314) * C41547) *
                        C41548 +
                    ((C19612 - (C19611 + C19610) + C19616) * C92360 +
                     (C18630 - (C18629 + C18628) + C18634) * C92350 +
                     ((C554 * C8414 + C92183 * C9074) * C2850 -
                      (C5639 * C2709 + C5447 * C2849) +
                      (C554 * C8655 + C92183 * C9294) * C2710) *
                         C41547) *
                        C92171) *
                       C1986) *
                  C92084) /
                 (p * q * std::sqrt(p + q));
    d2eexx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C801 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C92084) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C801 +
                     (C42333 + C42334 + C42335) * C92084) *
                        C92171) *
                       C92183 * C92116 * C798 -
                   (((C42336 + C42337 + C42338) * C92084 +
                     (C42339 + C42340 + C42341) * C801) *
                        C92171 +
                    ((C42335 + C42334 + C42333) * C92084 +
                     (C42332 + C42331 + C42330) * C801) *
                        C41548) *
                       C92183 * C92116 * C799 +
                   (((C42341 + C42340 + C42339) * C801 +
                     (C42338 + C42337 + C42336) * C92084) *
                        C41548 +
                    ((C41550 * C4865 + C92360 * C4868 + C41551 * C4866 +
                      C92350 * C4869 + C41552 * C4867 + C41547 * C4870) *
                         C801 +
                     (C41550 * C4871 + C92360 * C4874 + C41551 * C4872 +
                      C92350 * C4875 + C41552 * C4873 + C41547 * C4876) *
                         C92084) *
                        C92171) *
                       C92183 * C92116 * C800)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                     C92350 * C114 + C41552 * C109 + C41547 * C115) *
                        C104 +
                    (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                     C92350 * C126 + C41552 * C119 + C41547 * C127) *
                        C93 -
                    (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                     C92350 * C115 + C41550 * C108 + C92360 * C114) *
                        C105 -
                    (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                     C92350 * C127 + C41550 * C118 + C92360 * C126) *
                        C94 +
                    (C41550 * C109 + C92360 * C115 + C41551 * C110 +
                     C92350 * C116 + C41552 * C111 + C41547 * C121) *
                        C106 +
                    (C41550 * C119 + C92360 * C127 + C41551 * C120 +
                     C92350 * C128 + C41552 * C122 + C41547 * C129) *
                        C95) *
                       C41548 +
                   ((C41550 * C805 + C92360 * C817 + C41551 * C804 +
                     C92350 * C816 + C41552 * C803 + C41547 * C815) *
                        C104 +
                    (C41550 * C813 + C92360 * C829 + C41551 * C812 +
                     C92350 * C828 + C41552 * C811 + C41547 * C827) *
                        C93 -
                    (C41552 * C802 + C41547 * C814 + C41551 * C803 +
                     C92350 * C815 + C41550 * C804 + C92360 * C816) *
                        C105 -
                    (C41552 * C810 + C41547 * C826 + C41551 * C811 +
                     C92350 * C827 + C41550 * C812 + C92360 * C828) *
                        C94 +
                    (C41550 * C803 + C92360 * C815 + C41551 * C802 +
                     C92350 * C814 + C41552 * C1989 + C41547 * C1990) *
                        C106 +
                    (C41550 * C811 + C92360 * C827 + C41551 * C810 +
                     C92350 * C826 + C41552 * C1991 + C41547 * C1992) *
                        C95) *
                       C92171) *
                  C92183 * C92116 * C92105) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C801 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C92084) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C801 +
                     (C42333 + C42334 + C42335) * C92084) *
                        C92171) *
                       C92183 * C1383 -
                   (((C41552 * C3441 + C41547 * C3445 + C41551 * C3440 +
                      C92350 * C3444 + C41550 * C3439 + C92360 * C3443) *
                         C92084 +
                     (C41552 * C3433 + C41547 * C3437 + C41551 * C3432 +
                      C92350 * C3436 + C41550 * C3431 + C92360 * C3435) *
                         C801) *
                        C92171 +
                    ((C41552 * C1395 + C41547 * C1411 + C41551 * C1396 +
                      C92350 * C1412 + C41550 * C1397 + C92360 * C1413) *
                         C92084 +
                     (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                      C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                         C801) *
                        C41548) *
                       C92183 * C1384 +
                   (((C41550 * C1390 + C92360 * C1402 + C41551 * C1391 +
                      C92350 * C1403 + C41552 * C1392 + C41547 * C1404) *
                         C801 +
                     (C41550 * C1406 + C92360 * C1414 + C41551 * C1407 +
                      C92350 * C1415 + C41552 * C1408 + C41547 * C1416) *
                         C92084) *
                        C41548 +
                    ((C41550 * C5719 + C92360 * C5722 + C41551 * C5720 +
                      C92350 * C5723 + C41552 * C5721 + C41547 * C5724) *
                         C801 +
                     (C41550 * C5725 + C92360 * C5728 + C41551 * C5726 +
                      C92350 * C5729 + C41552 * C5727 + C41547 * C5730) *
                         C92084) *
                        C92171) *
                       C92183 * C1385) *
                  C92105) /
                     (p * q * std::sqrt(p + q));
    d2eexy[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                     C92350 * C114 + C41552 * C109 + C41547 * C115) *
                        C884 +
                    (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                     C92350 * C189 + C41552 * C184 + C41547 * C190) *
                        C798 -
                    (C42332 + C42331 + C42330) * C885 -
                    (C42428 + C42429 + C42430) * C799 +
                    (C42341 + C42340 + C42339) * C886 +
                    (C42431 + C42432 + C42433) * C800) *
                       C41548 +
                   ((C42330 + C42331 + C42332) * C884 +
                    (C42430 + C42429 + C42428) * C798 -
                    (C42339 + C42340 + C42341) * C885 -
                    (C42433 + C42432 + C42431) * C799 +
                    (C41550 * C4865 + C92360 * C4868 + C41551 * C4866 +
                     C92350 * C4869 + C41552 * C4867 + C41547 * C4870) *
                        C886 +
                    (C41550 * C4987 + C92360 * C4990 + C41551 * C4988 +
                     C92350 * C4991 + C41552 * C4989 + C41547 * C4992) *
                        C800) *
                       C92171) *
                  C92183 * C92084 * C92116) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C181 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C92105) *
                        C41548 +
                    ((C41550 * C805 + C92360 * C817 + C41551 * C804 +
                      C92350 * C816 + C41552 * C803 + C41547 * C815) *
                         C181 +
                     (C41550 * C890 + C92360 * C898 + C41551 * C889 +
                      C92350 * C897 + C41552 * C888 + C41547 * C896) *
                         C92105) *
                        C92171) *
                       C92183 * C93 -
                   (((C41552 * C887 + C41547 * C895 + C41551 * C888 +
                      C92350 * C896 + C41550 * C889 + C92360 * C897) *
                         C92105 +
                     (C41552 * C802 + C41547 * C814 + C41551 * C803 +
                      C92350 * C815 + C41550 * C804 + C92360 * C816) *
                         C181) *
                        C92171 +
                    ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                      C92350 * C190 + C41550 * C183 + C92360 * C189) *
                         C92105 +
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C181) *
                        C41548) *
                       C92183 * C94 +
                   (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                      C92350 * C116 + C41552 * C111 + C41547 * C121) *
                         C181 +
                     (C41550 * C184 + C92360 * C190 + C41551 * C185 +
                      C92350 * C191 + C41552 * C186 + C41547 * C192) *
                         C92105) *
                        C41548 +
                    ((C41550 * C803 + C92360 * C815 + C41551 * C802 +
                      C92350 * C814 + C41552 * C1989 + C41547 * C1990) *
                         C181 +
                     (C41550 * C888 + C92360 * C896 + C41551 * C887 +
                      C92350 * C895 + C41552 * C2061 + C41547 * C2062) *
                         C92105) *
                        C92171) *
                       C92183 * C95) *
                  C92116) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C181 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C92105) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C181 +
                     (C42430 + C42429 + C42428) * C92105) *
                        C92171) *
                       C92183 * C92084 * C1383 -
                   (((C41552 * C3515 + C41547 * C3519 + C41551 * C3514 +
                      C92350 * C3518 + C41550 * C3513 + C92360 * C3517) *
                         C92105 +
                     (C41552 * C3433 + C41547 * C3437 + C41551 * C3432 +
                      C92350 * C3436 + C41550 * C3431 + C92360 * C3435) *
                         C181) *
                        C92171 +
                    ((C41552 * C1469 + C41547 * C1477 + C41551 * C1470 +
                      C92350 * C1478 + C41550 * C1471 + C92360 * C1479) *
                         C92105 +
                     (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                      C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                         C181) *
                        C41548) *
                       C92183 * C92084 * C1384 +
                   (((C41550 * C1390 + C92360 * C1402 + C41551 * C1391 +
                      C92350 * C1403 + C41552 * C1392 + C41547 * C1404) *
                         C181 +
                     (C41550 * C1472 + C92360 * C1480 + C41551 * C1473 +
                      C92350 * C1481 + C41552 * C1474 + C41547 * C1482) *
                         C92105) *
                        C41548 +
                    ((C41550 * C5719 + C92360 * C5722 + C41551 * C5720 +
                      C92350 * C5723 + C41552 * C5721 + C41547 * C5724) *
                         C181 +
                     (C41550 * C5805 + C92360 * C5808 + C41551 * C5806 +
                      C92350 * C5809 + C41552 * C5807 + C41547 * C5810) *
                         C92105) *
                        C92171) *
                       C92183 * C92084 * C1385)) /
                     (p * q * std::sqrt(p + q));
    d2eexz[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C244 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C92116) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C244 +
                     (C42520 + C42521 + C42522) * C92116) *
                        C92171) *
                       C92183 * C798 -
                   (((C42523 + C42524 + C42525) * C92116 +
                     (C42339 + C42340 + C42341) * C244) *
                        C92171 +
                    ((C42522 + C42521 + C42520) * C92116 +
                     (C42332 + C42331 + C42330) * C244) *
                        C41548) *
                       C92183 * C799 +
                   (((C42341 + C42340 + C42339) * C244 +
                     (C42525 + C42524 + C42523) * C92116) *
                        C41548 +
                    ((C41550 * C4865 + C92360 * C4868 + C41551 * C4866 +
                      C92350 * C4869 + C41552 * C4867 + C41547 * C4870) *
                         C244 +
                     (C41550 * C5085 + C92360 * C5088 + C41551 * C5086 +
                      C92350 * C5089 + C41552 * C5087 + C41547 * C5090) *
                         C92116) *
                        C92171) *
                       C92183 * C800) *
                  C92084) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C244 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C92116) *
                        C41548 +
                    ((C41550 * C805 + C92360 * C817 + C41551 * C804 +
                      C92350 * C816 + C41552 * C803 + C41547 * C815) *
                         C244 +
                     (C41550 * C956 + C92360 * C964 + C41551 * C955 +
                      C92350 * C963 + C41552 * C954 + C41547 * C962) *
                         C92116) *
                        C92171) *
                       C92183 * C92105 * C93 -
                   (((C41552 * C953 + C41547 * C961 + C41551 * C954 +
                      C92350 * C962 + C41550 * C955 + C92360 * C963) *
                         C92116 +
                     (C41552 * C802 + C41547 * C814 + C41551 * C803 +
                      C92350 * C815 + C41550 * C804 + C92360 * C816) *
                         C244) *
                        C92171 +
                    ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                      C92350 * C253 + C41550 * C246 + C92360 * C252) *
                         C92116 +
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C244) *
                        C41548) *
                       C92183 * C92105 * C94 +
                   (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                      C92350 * C116 + C41552 * C111 + C41547 * C121) *
                         C244 +
                     (C41550 * C247 + C92360 * C253 + C41551 * C248 +
                      C92350 * C254 + C41552 * C249 + C41547 * C255) *
                         C92116) *
                        C41548 +
                    ((C41550 * C803 + C92360 * C815 + C41551 * C802 +
                      C92350 * C814 + C41552 * C1989 + C41547 * C1990) *
                         C244 +
                     (C41550 * C954 + C92360 * C962 + C41551 * C953 +
                      C92350 * C961 + C41552 * C2129 + C41547 * C2130) *
                         C92116) *
                        C92171) *
                       C92183 * C92105 * C95)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                     C92350 * C114 + C41552 * C109 + C41547 * C115) *
                        C1534 +
                    (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                     C92350 * C252 + C41552 * C247 + C41547 * C253) *
                        C1383 -
                    (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                     C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                        C1535 -
                    (C41552 * C1538 + C41547 * C1546 + C41551 * C1539 +
                     C92350 * C1547 + C41550 * C1540 + C92360 * C1548) *
                        C1384 +
                    (C41550 * C1390 + C92360 * C1402 + C41551 * C1391 +
                     C92350 * C1403 + C41552 * C1392 + C41547 * C1404) *
                        C1536 +
                    (C41550 * C1541 + C92360 * C1549 + C41551 * C1542 +
                     C92350 * C1550 + C41552 * C1543 + C41547 * C1551) *
                        C1385) *
                       C41548 +
                   ((C42330 + C42331 + C42332) * C1534 +
                    (C42520 + C42521 + C42522) * C1383 -
                    (C41552 * C3433 + C41547 * C3437 + C41551 * C3432 +
                     C92350 * C3436 + C41550 * C3431 + C92360 * C3435) *
                        C1535 -
                    (C41552 * C3589 + C41547 * C3593 + C41551 * C3588 +
                     C92350 * C3592 + C41550 * C3587 + C92360 * C3591) *
                        C1384 +
                    (C41550 * C5719 + C92360 * C5722 + C41551 * C5720 +
                     C92350 * C5723 + C41552 * C5721 + C41547 * C5724) *
                        C1536 +
                    (C41550 * C5885 + C92360 * C5888 + C41551 * C5886 +
                     C92350 * C5889 + C41552 * C5887 + C41547 * C5890) *
                        C1385) *
                       C92171) *
                  C92183 * C92105 * C92084) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C801 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C92360 +
           ((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92183 *
               C92350 +
           (C41814 * C801 + C41815 * C92084) * C92183 * C41547) *
              C92116 * C798 -
          (((C41776 * C824 + C92171 * C1033 + C41775 * C811 + C41548 * C1028) *
                C92084 +
            (C41776 * C808 + C92171 * C1025 + C41775 * C803 + C41548 * C1020) *
                C801) *
               C92183 * C41547 +
           ((C41776 * C823 + C92171 * C1032 + C41775 * C812 + C41548 * C1029) *
                C92084 +
            (C41776 * C807 + C92171 * C1024 + C41775 * C804 + C41548 * C1021) *
                C801) *
               C92183 * C92350 +
           ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                C92084 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C801) *
               C92183 * C92360) *
              C92116 * C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C801 +
            (C41775 * C822 + C41548 * C1031 + C41776 * C4871 + C92171 * C5186) *
                C92084) *
               C92183 * C92360 +
           ((C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C801 +
            (C41775 * C823 + C41548 * C1032 + C41776 * C4872 + C92171 * C5187) *
                C92084) *
               C92183 * C92350 +
           ((C41775 * C808 + C41548 * C1025 + C41776 * C4867 + C92171 * C5185) *
                C801 +
            (C41775 * C824 + C41548 * C1033 + C41776 * C4873 + C92171 * C5188) *
                C92084) *
               C92183 * C41547) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C104 +
           (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
               C93 -
           (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
           C41815 * C95) *
              C92183 * C92360 +
          ((C41803 + C41802) * C104 + (C41805 + C41804) * C93 -
           (C41807 + C41806) * C105 - (C41809 + C41808) * C94 +
           (C41810 + C41811) * C106 + (C41812 + C41813) * C95) *
              C92183 * C92350 +
          (C41814 * C104 + C41815 * C93 - (C41811 + C41810) * C105 -
           (C41813 + C41812) * C94 +
           (C41775 * C111 + C41548 * C312 + C41776 * C1989 + C92171 * C2197) *
               C106 +
           (C41775 * C122 + C41548 * C318 + C41776 * C1991 + C92171 * C2198) *
               C95) *
              C92183 * C41547) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C801 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C92360 +
           ((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92183 *
               C92350 +
           (C41814 * C801 + C41815 * C92084) * C92183 * C41547) *
              C1383 -
          (((C41776 * C3441 + C92171 * C3667 + C41775 * C1395 +
             C41548 * C1612) *
                C92084 +
            (C41776 * C3433 + C92171 * C3663 + C41775 * C1387 +
             C41548 * C1604) *
                C801) *
               C92183 * C41547 +
           ((C41776 * C3440 + C92171 * C3666 + C41775 * C1396 +
             C41548 * C1613) *
                C92084 +
            (C41776 * C3432 + C92171 * C3662 + C41775 * C1388 +
             C41548 * C1605) *
                C801) *
               C92183 * C92350 +
           ((C41776 * C3439 + C92171 * C3665 + C41775 * C1397 +
             C41548 * C1614) *
                C92084 +
            (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
             C41548 * C1606) *
                C801) *
               C92183 * C92360) *
              C1384 +
          (((C41775 * C1390 + C41548 * C1607 + C41776 * C5719 +
             C92171 * C5965) *
                C801 +
            (C41775 * C1406 + C41548 * C1615 + C41776 * C5725 +
             C92171 * C5968) *
                C92084) *
               C92183 * C92360 +
           ((C41775 * C1391 + C41548 * C1608 + C41776 * C5720 +
             C92171 * C5966) *
                C801 +
            (C41775 * C1407 + C41548 * C1616 + C41776 * C5726 +
             C92171 * C5969) *
                C92084) *
               C92183 * C92350 +
           ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
             C92171 * C5967) *
                C801 +
            (C41775 * C1408 + C41548 * C1617 + C41776 * C5727 +
             C92171 * C5970) *
                C92084) *
               C92183 * C41547) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C884 +
           (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
               C798 -
           (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
               C885 -
           (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
               C799 +
           (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
               C886 +
           (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
               C800) *
              C92183 * C92360 +
          ((C41803 + C41802) * C884 + (C41903 + C41904) * C798 -
           (C41776 * C807 + C92171 * C1024 + C41775 * C804 + C41548 * C1021) *
               C885 -
           (C41776 * C892 + C92171 * C1088 + C41775 * C889 + C41548 * C1087) *
               C799 +
           (C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
               C886 +
           (C41775 * C892 + C41548 * C1088 + C41776 * C4988 + C92171 * C5264) *
               C800) *
              C92183 * C92350 +
          (C41814 * C884 + C41909 * C798 -
           (C41776 * C808 + C92171 * C1025 + C41775 * C803 + C41548 * C1020) *
               C885 -
           (C41776 * C893 + C92171 * C1090 + C41775 * C888 + C41548 * C1089) *
               C799 +
           (C41775 * C808 + C41548 * C1025 + C41776 * C4867 + C92171 * C5185) *
               C886 +
           (C41775 * C893 + C41548 * C1090 + C41776 * C4989 + C92171 * C5265) *
               C800) *
              C92183 * C41547) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C181 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C92360 +
           ((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92183 *
               C92350 +
           C41912 * C41547) *
              C93 -
          (((C41907 + C41908) * C92105 + (C41811 + C41810) * C181) * C92183 *
               C41547 +
           ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C92183 *
               C92350 +
           ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92183 *
               C92360) *
              C94 +
          (C41912 * C92360 +
           ((C41810 + C41811) * C181 + (C41908 + C41907) * C92105) * C92183 *
               C92350 +
           ((C41775 * C111 + C41548 * C312 + C41776 * C1989 + C92171 * C2197) *
                C181 +
            (C41775 * C186 + C41548 * C398 + C41776 * C2061 + C92171 * C2283) *
                C92105) *
               C92183 * C41547) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C181 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C92360 +
           ((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92183 *
               C92350 +
           C41912 * C41547) *
              C92084 * C1383 -
          (((C41776 * C3515 + C92171 * C3737 + C41775 * C1469 +
             C41548 * C1670) *
                C92105 +
            (C41776 * C3433 + C92171 * C3663 + C41775 * C1387 +
             C41548 * C1604) *
                C181) *
               C92183 * C41547 +
           ((C41776 * C3514 + C92171 * C3736 + C41775 * C1470 +
             C41548 * C1671) *
                C92105 +
            (C41776 * C3432 + C92171 * C3662 + C41775 * C1388 +
             C41548 * C1605) *
                C181) *
               C92183 * C92350 +
           ((C41776 * C3513 + C92171 * C3735 + C41775 * C1471 +
             C41548 * C1672) *
                C92105 +
            (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
             C41548 * C1606) *
                C181) *
               C92183 * C92360) *
              C92084 * C1384 +
          (((C41775 * C1390 + C41548 * C1607 + C41776 * C5719 +
             C92171 * C5965) *
                C181 +
            (C41775 * C1472 + C41548 * C1673 + C41776 * C5805 +
             C92171 * C6045) *
                C92105) *
               C92183 * C92360 +
           ((C41775 * C1391 + C41548 * C1608 + C41776 * C5720 +
             C92171 * C5966) *
                C181 +
            (C41775 * C1473 + C41548 * C1674 + C41776 * C5806 +
             C92171 * C6046) *
                C92105) *
               C92183 * C92350 +
           ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
             C92171 * C5967) *
                C181 +
            (C41775 * C1474 + C41548 * C1675 + C41776 * C5807 +
             C92171 * C6047) *
                C92105) *
               C92183 * C41547) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C92360 +
           ((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92183 *
               C92350 +
           C42009 * C41547) *
              C798 -
          (((C41776 * C959 + C92171 * C1149 + C41775 * C954 + C41548 * C1144) *
                C92116 +
            (C41776 * C808 + C92171 * C1025 + C41775 * C803 + C41548 * C1020) *
                C244) *
               C92183 * C41547 +
           ((C41776 * C958 + C92171 * C1148 + C41775 * C955 + C41548 * C1145) *
                C92116 +
            (C41776 * C807 + C92171 * C1024 + C41775 * C804 + C41548 * C1021) *
                C244) *
               C92183 * C92350 +
           ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                C92116 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C244) *
               C92183 * C92360) *
              C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C244 +
            (C41775 * C957 + C41548 * C1147 + C41776 * C5085 + C92171 * C5340) *
                C92116) *
               C92183 * C92360 +
           ((C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C244 +
            (C41775 * C958 + C41548 * C1148 + C41776 * C5086 + C92171 * C5341) *
                C92116) *
               C92183 * C92350 +
           ((C41775 * C808 + C41548 * C1025 + C41776 * C4867 + C92171 * C5185) *
                C244 +
            (C41775 * C959 + C41548 * C1149 + C41776 * C5087 + C92171 * C5342) *
                C92116) *
               C92183 * C41547) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C92360 +
           ((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92183 *
               C92350 +
           C42009 * C41547) *
              C92105 * C93 -
          (((C42004 + C42005) * C92116 + (C41811 + C41810) * C244) * C92183 *
               C41547 +
           ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C92183 *
               C92350 +
           ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92183 *
               C92360) *
              C92105 * C94 +
          (C42009 * C92360 +
           ((C41810 + C41811) * C244 + (C42005 + C42004) * C92116) * C92183 *
               C92350 +
           ((C41775 * C111 + C41548 * C312 + C41776 * C1989 + C92171 * C2197) *
                C244 +
            (C41775 * C249 + C41548 * C478 + C41776 * C2129 + C92171 * C2371) *
                C92116) *
               C92183 * C41547) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C1534 +
           (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
               C1383 -
           (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 + C41548 * C1606) *
               C1535 -
           (C41776 * C3587 + C92171 * C3805 + C41775 * C1540 + C41548 * C1727) *
               C1384 +
           (C41775 * C1390 + C41548 * C1607 + C41776 * C5719 + C92171 * C5965) *
               C1536 +
           (C41775 * C1541 + C41548 * C1728 + C41776 * C5885 + C92171 * C6122) *
               C1385) *
              C92183 * C92360 +
          ((C41803 + C41802) * C1534 + (C42000 + C42001) * C1383 -
           (C41776 * C3432 + C92171 * C3662 + C41775 * C1388 + C41548 * C1605) *
               C1535 -
           (C41776 * C3588 + C92171 * C3806 + C41775 * C1539 + C41548 * C1729) *
               C1384 +
           (C41775 * C1391 + C41548 * C1608 + C41776 * C5720 + C92171 * C5966) *
               C1536 +
           (C41775 * C1542 + C41548 * C1730 + C41776 * C5886 + C92171 * C6123) *
               C1385) *
              C92183 * C92350 +
          (C41814 * C1534 + C42006 * C1383 -
           (C41776 * C3433 + C92171 * C3663 + C41775 * C1387 + C41548 * C1604) *
               C1535 -
           (C41776 * C3589 + C92171 * C3807 + C41775 * C1538 + C41548 * C1731) *
               C1384 +
           (C41775 * C1392 + C41548 * C1609 + C41776 * C5721 + C92171 * C5967) *
               C1536 +
           (C41775 * C1543 + C41548 * C1732 + C41776 * C5887 + C92171 * C6124) *
               C1385) *
              C92183 * C41547) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92360 +
            (C584 * C801 + C585 * C92084) * C92350 +
            (C586 * C801 + C587 * C92084) * C41547) *
               C41548 +
           ((C5452 + C5453) * C92360 + (C5428 + C5429) * C92350 +
            (C5430 + C5431) * C41547) *
               C92171) *
              C92116 * C798 -
          (((C5454 + C5455) * C41547 + (C5456 + C5457) * C92350 +
            (C5458 + C5459) * C92360) *
               C92171 +
           ((C5431 + C5430) * C41547 + (C5429 + C5428) * C92350 +
            (C5453 + C5452) * C92360) *
               C41548) *
              C92116 * C799 +
          ((C15828 * C92360 + C15829 * C92350 + (C5455 + C5454) * C41547) *
               C41548 +
           (C20510 * C92360 + (C15846 + C15845) * C92350 +
            ((C554 * C4867 + C92183 * C5419) * C801 +
             (C554 * C4873 + C92183 * C5422) * C92084) *
                C41547) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92360 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92350 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C41547) *
              C41548 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92360 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92350 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92183 * C2453) * C106 +
            (C554 * C1991 + C92183 * C2454) * C95) *
               C41547) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92360 +
            (C584 * C801 + C585 * C92084) * C92350 +
            (C586 * C801 + C587 * C92084) * C41547) *
               C41548 +
           ((C5452 + C5453) * C92360 + (C5428 + C5429) * C92350 +
            (C5430 + C5431) * C41547) *
               C92171) *
              C1383 -
          (((C9079 + C9080) * C41547 + (C9081 + C9082) * C92350 +
            (C9089 + C9090) * C92360) *
               C92171 +
           ((C3193 * C92084 + C3192 * C801) * C41547 +
            (C3191 * C92084 + C3190 * C801) * C92350 +
            ((C554 * C1397 + C92183 * C1796) * C92084 +
             (C554 * C1389 + C92183 * C1788) * C801) *
                C92360) *
               C41548) *
              C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C801 +
             (C554 * C1406 + C92183 * C1797) * C92084) *
                C92360 +
            ((C554 * C1391 + C92183 * C1790) * C801 +
             (C554 * C1407 + C92183 * C1798) * C92084) *
                C92350 +
            ((C554 * C1392 + C92183 * C1791) * C801 +
             (C554 * C1408 + C92183 * C1799) * C92084) *
                C41547) *
               C41548 +
           (((C554 * C5719 + C92183 * C6199) * C801 +
             (C554 * C5725 + C92183 * C6202) * C92084) *
                C92360 +
            ((C554 * C5720 + C92183 * C6200) * C801 +
             (C554 * C5726 + C92183 * C6203) * C92084) *
                C92350 +
            ((C554 * C5721 + C92183 * C6201) * C801 +
             (C554 * C5727 + C92183 * C6204) * C92084) *
                C41547) *
               C92171) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C92360 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92350 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C5447 * C886 + C5548 * C800) *
               C41547) *
              C41548 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C92360 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92350 +
           (C2470 * C884 + C2557 * C798 - C5447 * C885 - C5548 * C799 +
            (C554 * C4867 + C92183 * C5419) * C886 +
            (C554 * C4989 + C92183 * C5535) * C800) *
               C41547) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92360 +
            (C648 + C664) * C92350 + C668 * C41547) *
               C41548 +
           ((C5444 * C181 + C5545 * C92105) * C92360 +
            (C4710 + C4711) * C92350 + C4716 * C41547) *
               C92171) *
              C93 -
          (((C4714 + C4715) * C41547 + (C4713 + C4712) * C92350 +
            (C4711 + C4710) * C92360) *
               C92171 +
           ((C666 + C654) * C41547 + (C665 + C651) * C92350 +
            (C664 + C648) * C92360) *
               C41548) *
              C94 +
          ((C668 * C92360 + C669 * C92350 + (C659 + C667) * C41547) * C41548 +
           (C4716 * C92360 + (C4715 + C4714) * C92350 +
            ((C554 * C1989 + C92183 * C2453) * C181 +
             (C554 * C2061 + C92183 * C2539) * C92105) *
                C41547) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92360 +
            (C648 + C664) * C92350 + C668 * C41547) *
               C41548 +
           ((C5444 * C181 + C5545 * C92105) * C92360 +
            (C4710 + C4711) * C92350 + C4716 * C41547) *
               C92171) *
              C92084 * C1383 -
          (((C8202 + C8196) * C41547 + (C8201 + C8193) * C92350 +
            (C9194 * C92105 + C9088 * C181) * C92360) *
               C92171 +
           ((C3276 + C3266) * C41547 + (C3275 + C3263) * C92350 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C92360) *
               C41548) *
              C92084 * C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C181 +
             (C554 * C1472 + C92183 * C1855) * C92105) *
                C92360 +
            ((C554 * C1391 + C92183 * C1790) * C181 +
             (C554 * C1473 + C92183 * C1856) * C92105) *
                C92350 +
            ((C554 * C1392 + C92183 * C1791) * C181 +
             (C554 * C1474 + C92183 * C1857) * C92105) *
                C41547) *
               C41548 +
           (((C554 * C5719 + C92183 * C6199) * C181 +
             (C554 * C5805 + C92183 * C6279) * C92105) *
                C92360 +
            ((C554 * C5720 + C92183 * C6200) * C181 +
             (C554 * C5806 + C92183 * C6280) * C92105) *
                C92350 +
            ((C554 * C5721 + C92183 * C6201) * C181 +
             (C554 * C5807 + C92183 * C6281) * C92105) *
                C41547) *
               C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92360 +
            (C726 + C742) * C92350 + C746 * C41547) *
               C41548 +
           ((C5626 + C5642) * C92360 + C7346 * C92350 + C4791 * C41547) *
               C92171) *
              C798 -
          (((C5643 + C5631) * C41547 + C17698 * C92350 +
            (C5645 + C5637) * C92360) *
               C92171 +
           (C7347 * C41547 + C7348 * C92350 + (C5642 + C5626) * C92360) *
               C41548) *
              C799 +
          ((C16007 * C92360 + C16008 * C92350 + (C5631 + C5643) * C41547) *
               C41548 +
           (C20626 * C92360 + (C16011 + C16020) * C92350 +
            ((C554 * C4867 + C92183 * C5419) * C244 +
             (C554 * C5087 + C92183 * C5624) * C92116) *
                C41547) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92360 +
            (C726 + C742) * C92350 + C746 * C41547) *
               C41548 +
           ((C5626 + C5642) * C92360 + C7346 * C92350 + C4791 * C41547) *
               C92171) *
              C92105 * C93 -
          (((C2641 + C2631) * C41547 + C7347 * C92350 + C7348 * C92360) *
               C92171 +
           ((C744 + C732) * C41547 + (C743 + C729) * C92350 +
            (C742 + C726) * C92360) *
               C41548) *
              C92105 * C94 +
          ((C746 * C92360 + C747 * C92350 + (C737 + C745) * C41547) * C41548 +
           (C4791 * C92360 + (C2631 + C2641) * C92350 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C41547) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1534 +
            (C554 * C245 + C92183 * C719) * C1383 -
            (C554 * C1389 + C92183 * C1788) * C1535 -
            (C554 * C1540 + C92183 * C1909) * C1384 +
            (C554 * C1390 + C92183 * C1789) * C1536 +
            (C554 * C1541 + C92183 * C1910) * C1385) *
               C92360 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92183 * C1790) * C1536 +
            (C554 * C1542 + C92183 * C1912) * C1385) *
               C92350 +
           (C586 * C1534 + C739 * C1383 - C3192 * C1535 - C3361 * C1384 +
            (C554 * C1392 + C92183 * C1791) * C1536 +
            (C554 * C1543 + C92183 * C1914) * C1385) *
               C41547) *
              C41548 +
          ((C5444 * C1534 + C5638 * C1383 - C9088 * C1535 - C9301 * C1384 +
            (C554 * C5719 + C92183 * C6199) * C1536 +
            (C554 * C5885 + C92183 * C6356) * C1385) *
               C92360 +
           (C2468 * C1534 + C2640 * C1383 - C8091 * C1535 - C8311 * C1384 +
            (C554 * C5720 + C92183 * C6200) * C1536 +
            (C554 * C5886 + C92183 * C6357) * C1385) *
               C92350 +
           (C2470 * C1534 + C2639 * C1383 - C8093 * C1535 - C8312 * C1384 +
            (C554 * C5721 + C92183 * C6201) * C1536 +
            (C554 * C5887 + C92183 * C6358) * C1385) *
               C41547) *
              C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C1987 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C1983 -
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C1988 -
                     (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                      C92350 * C127 + C41550 * C118 + C92360 * C126) *
                         C1984) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C1987 +
                     (C42333 + C42334 + C42335) * C1983 -
                     (C43746 + C43747 + C43748) * C1988 -
                     (C43749 + C43750 + C43751) * C1984) *
                        C92171) *
                       C92183 * C2709 +
                   (((C41550 * C1388 + C92360 * C1400 + C41551 * C1387 +
                      C92350 * C1399 + C41552 * C1386 + C41547 * C1398) *
                         C1988 -
                     ((C41552 * C1395 + C41547 * C1411 + C41551 * C1396 +
                       C92350 * C1412 + C41550 * C1397 + C92360 * C1413) *
                          C1983 +
                      (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                       C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                          C1987) +
                     (C41550 * C1396 + C92360 * C1412 + C41551 * C1395 +
                      C92350 * C1411 + C41552 * C1394 + C41547 * C1410) *
                         C1984) *
                        C41548 +
                    ((C41550 * C3432 + C92360 * C3436 + C41551 * C3433 +
                      C92350 * C3437 + C41552 * C3434 + C41547 * C3438) *
                         C1988 -
                     ((C41552 * C3441 + C41547 * C3445 + C41551 * C3440 +
                       C92350 * C3444 + C41550 * C3439 + C92360 * C3443) *
                          C1983 +
                      (C41552 * C3433 + C41547 * C3437 + C41551 * C3432 +
                       C92350 * C3436 + C41550 * C3431 + C92360 * C3435) *
                          C1987) +
                     (C41550 * C3440 + C92360 * C3444 + C41551 * C3441 +
                      C92350 * C3445 + C41552 * C3442 + C41547 * C3446) *
                         C1984) *
                        C92171) *
                       C92183 * C2710) *
                  C92105) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C181 +
                      (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                       C92350 * C189 + C41552 * C184 + C41547 * C190) *
                          C92105) *
                         C41548 +
                     ((C42330 + C42331 + C42332) * C181 +
                      (C42430 + C42429 + C42428) * C92105) *
                         C92171) *
                        C92183 * C1983 -
                    (((C43858 + C43857 + C43856) * C92105 +
                      (C43746 + C43747 + C43748) * C181) *
                         C92171 +
                     ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                       C92350 * C190 + C41550 * C183 + C92360 * C189) *
                          C92105 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C181) *
                         C41548) *
                        C92183 * C1984) *
                       C2709 +
                   ((((C41550 * C1388 + C92360 * C1400 + C41551 * C1387 +
                       C92350 * C1399 + C41552 * C1386 + C41547 * C1398) *
                          C181 +
                      (C41550 * C1470 + C92360 * C1478 + C41551 * C1469 +
                       C92350 * C1477 + C41552 * C1468 + C41547 * C1476) *
                          C92105) *
                         C41548 +
                     ((C41550 * C3432 + C92360 * C3436 + C41551 * C3433 +
                       C92350 * C3437 + C41552 * C3434 + C41547 * C3438) *
                          C181 +
                      (C41550 * C3514 + C92360 * C3518 + C41551 * C3515 +
                       C92350 * C3519 + C41552 * C3516 + C41547 * C3520) *
                          C92105) *
                         C92171) *
                        C92183 * C1984 -
                    (((C41552 * C3515 + C41547 * C3519 + C41551 * C3514 +
                       C92350 * C3518 + C41550 * C3513 + C92360 * C3517) *
                          C92105 +
                      (C41552 * C3433 + C41547 * C3437 + C41551 * C3432 +
                       C92350 * C3436 + C41550 * C3431 + C92360 * C3435) *
                          C181) *
                         C92171 +
                     ((C41552 * C1469 + C41547 * C1477 + C41551 * C1470 +
                       C92350 * C1478 + C41550 * C1471 + C92360 * C1479) *
                          C92105 +
                      (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                       C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                          C181) *
                         C41548) *
                        C92183 * C1983) *
                       C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eexz[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C2849 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C2709 -
                     (C41552 * C1387 + C41547 * C1399 + C41551 * C1388 +
                      C92350 * C1400 + C41550 * C1389 + C92360 * C1401) *
                         C2850 -
                     (C41552 * C1538 + C41547 * C1546 + C41551 * C1539 +
                      C92350 * C1547 + C41550 * C1540 + C92360 * C1548) *
                         C2710) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C2849 +
                     (C42520 + C42521 + C42522) * C2709 -
                     (C41552 * C3433 + C41547 * C3437 + C41551 * C3432 +
                      C92350 * C3436 + C41550 * C3431 + C92360 * C3435) *
                         C2850 -
                     (C41552 * C3589 + C41547 * C3593 + C41551 * C3588 +
                      C92350 * C3592 + C41550 * C3587 + C92360 * C3591) *
                         C2710) *
                        C92171) *
                       C92183 * C92105 * C1983 +
                   (((C41550 * C1388 + C92360 * C1400 + C41551 * C1387 +
                      C92350 * C1399 + C41552 * C1386 + C41547 * C1398) *
                         C2850 -
                     ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                       C92350 * C253 + C41550 * C246 + C92360 * C252) *
                          C2709 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C2849) +
                     (C41550 * C1539 + C92360 * C1547 + C41551 * C1538 +
                      C92350 * C1546 + C41552 * C1537 + C41547 * C1545) *
                         C2710) *
                        C41548 +
                    ((C41550 * C3432 + C92360 * C3436 + C41551 * C3433 +
                      C92350 * C3437 + C41552 * C3434 + C41547 * C3438) *
                         C2850 -
                     ((C43965 + C43964 + C43963) * C2709 +
                      (C43746 + C43747 + C43748) * C2849) +
                     (C41550 * C3588 + C92360 * C3592 + C41551 * C3589 +
                      C92350 * C3593 + C41552 * C3590 + C41547 * C3594) *
                         C2710) *
                        C92171) *
                       C92183 * C92105 * C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C1987 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C1983 -
            (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
               C92183 * C92360 +
           ((C41803 + C41802) * C1987 + (C41805 + C41804) * C1983 -
            (C41807 + C41806) * C1988 - (C41809 + C41808) * C1984) *
               C92183 * C92350 +
           (C41814 * C1987 + C41815 * C1983 - (C41811 + C41810) * C1988 -
            (C41813 + C41812) * C1984) *
               C92183 * C41547) *
              C2709 +
          (((C45010 + C45011) * C1988 -
            ((C41776 * C3439 + C92171 * C3665 + C41775 * C1397 +
              C41548 * C1614) *
                 C1983 +
             (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
              C41548 * C1606) *
                 C1987) +
            (C45012 + C45013) * C1984) *
               C92183 * C92360 +
           ((C45014 + C45015) * C1988 -
            ((C45013 + C45012) * C1983 + (C45011 + C45010) * C1987) +
            (C45016 + C45017) * C1984) *
               C92183 * C92350 +
           ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
             C92171 * C3664) *
                C1988 -
            ((C45017 + C45016) * C1983 + (C45015 + C45014) * C1987) +
            (C41775 * C1394 + C41548 * C1611 + C41776 * C3442 +
             C92171 * C3668) *
                C1984) *
               C92183 * C41547) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C92183 * C92360 +
            ((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92183 *
                C92350 +
            C41912 * C41547) *
               C1983 -
           (((C41907 + C41908) * C92105 + (C41811 + C41810) * C181) * C92183 *
                C41547 +
            ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C92183 *
                C92350 +
            ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92183 *
                C92360) *
               C1984) *
              C2709 +
          ((((C45010 + C45011) * C181 + (C45124 + C45125) * C92105) * C92183 *
                C92360 +
            ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92183 *
                C92350 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C181 +
             (C41775 * C1468 + C41548 * C1669 + C41776 * C3516 +
              C92171 * C3738) *
                 C92105) *
                C92183 * C41547) *
               C1984 -
           (((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92183 *
                C41547 +
            ((C45125 + C45124) * C92105 + (C45011 + C45010) * C181) * C92183 *
                C92350 +
            ((C41776 * C3513 + C92171 * C3735 + C41775 * C1471 +
              C41548 * C1672) *
                 C92105 +
             (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
              C41548 * C1606) *
                 C181) *
                C92183 * C92360) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2849 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C2709 -
            (C41776 * C3431 + C92171 * C3661 + C41775 * C1389 +
             C41548 * C1606) *
                C2850 -
            (C41776 * C3587 + C92171 * C3805 + C41775 * C1540 +
             C41548 * C1727) *
                C2710) *
               C92183 * C92360 +
           ((C41803 + C41802) * C2849 + (C42000 + C42001) * C2709 -
            (C45011 + C45010) * C2850 - (C45234 + C45235) * C2710) *
               C92183 * C92350 +
           (C41814 * C2849 + C42006 * C2709 - (C45015 + C45014) * C2850 -
            (C45236 + C45237) * C2710) *
               C92183 * C41547) *
              C92105 * C1983 +
          (((C45010 + C45011) * C2850 -
            ((C42001 + C42000) * C2709 + (C41802 + C41803) * C2849) +
            (C45235 + C45234) * C2710) *
               C92183 * C92360 +
           ((C45014 + C45015) * C2850 -
            ((C42003 + C42002) * C2709 + (C41807 + C41806) * C2849) +
            (C45237 + C45236) * C2710) *
               C92183 * C92350 +
           ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
             C92171 * C3664) *
                C2850 -
            ((C42004 + C42005) * C2709 + (C41811 + C41810) * C2849) +
            (C41775 * C1537 + C41548 * C1733 + C41776 * C3590 +
             C92171 * C3808) *
                C2710) *
               C92183 * C41547) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92360 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92350 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C41547) *
               C41548 +
           ((C7130 + C7131 - C7132 - C7133) * C92360 +
            (C7134 + C7135 - C7136 - C7137) * C92350 +
            (C7138 + C7139 - C7140 - C7141) * C41547) *
               C92171) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92183 * C1796) * C1983 +
              (C554 * C1389 + C92183 * C1788) * C1987) +
             C3191 * C1984) *
                C92360 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92350 +
            (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
                C41547) *
               C41548 +
           ((C8091 * C1988 - (C9087 * C1983 + C9088 * C1987) + C8092 * C1984) *
                C92360 +
            (C8093 * C1988 - (C8092 * C1983 + C8091 * C1987) + C8094 * C1984) *
                C92350 +
            ((C554 * C3434 + C92183 * C3878) * C1988 -
             (C8094 * C1983 + C8093 * C1987) +
             (C554 * C3442 + C92183 * C3882) * C1984) *
                C41547) *
               C92171) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C554 * C107 + C92183 * C555) * C181 +
                       (C554 * C182 + C92183 * C641) * C92105) *
                          C92360 +
                      (C648 + C664) * C92350 + C668 * C41547) *
                         C41548 +
                     ((C5444 * C181 + C5545 * C92105) * C92360 +
                      (C4710 + C4711) * C92350 + C4716 * C41547) *
                         C92171) *
                        C1983 -
                    (((C4714 + C4715) * C41547 + (C4713 + C4712) * C92350 +
                      (C4711 + C4710) * C92360) *
                         C92171 +
                     ((C666 + C654) * C41547 + (C665 + C651) * C92350 +
                      (C664 + C648) * C92360) *
                         C41548) *
                        C1984) *
                       C2709 +
                   ((((C3263 + C3275) * C92360 + (C3266 + C3276) * C92350 +
                      (C3269 + C3277) * C41547) *
                         C41548 +
                     ((C8193 + C8201) * C92360 + (C8196 + C8202) * C92350 +
                      ((C554 * C3434 + C92183 * C3878) * C181 +
                       (C554 * C3516 + C92183 * C3952) * C92105) *
                          C41547) *
                         C92171) *
                        C1984 -
                    (((C8202 + C8196) * C41547 + (C8201 + C8193) * C92350 +
                      (C9194 * C92105 + C9088 * C181) * C92360) *
                         C92171 +
                     ((C3276 + C3266) * C41547 + (C3275 + C3263) * C92350 +
                      ((C554 * C1471 + C92183 * C1854) * C92105 +
                       (C554 * C1389 + C92183 * C1788) * C181) *
                          C92360) *
                         C41548) *
                        C1983) *
                       C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C92360 +
                     (C3345 + C3346 - C3347 - C3363) * C92350 +
                     (C3350 + C3351 - C3352 - C3364) * C41547) *
                        C41548 +
                    ((C9296 + C9297 - C9298 - C9302) * C92360 +
                     (C8301 + C8302 - C8303 - C8313) * C92350 +
                     (C8306 + C8307 - C8308 - C8314) * C41547) *
                        C92171) *
                       C92105 * C1983 +
                   (((C3347 - (C3346 + C3345) + C3363) * C92360 +
                     (C3352 - (C3351 + C3350) + C3364) * C92350 +
                     (C3357 - (C3356 + C3355) + C3365) * C41547) *
                        C41548 +
                    ((C8303 - (C8302 + C8301) + C8313) * C92360 +
                     (C8308 - (C8307 + C8306) + C8314) * C92350 +
                     ((C554 * C3434 + C92183 * C3878) * C2850 -
                      (C2638 * C2709 + C2472 * C2849) +
                      (C554 * C3590 + C92183 * C4022) * C2710) *
                         C41547) *
                        C92171) *
                       C92105 * C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                     C92350 * C114 + C41552 * C109 + C41547 * C115) *
                        C104 +
                    (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                     C92350 * C126 + C41552 * C119 + C41547 * C127) *
                        C93 -
                    (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                     C92350 * C115 + C41550 * C108 + C92360 * C114) *
                        C105 -
                    (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                     C92350 * C127 + C41550 * C118 + C92360 * C126) *
                        C94 +
                    (C41550 * C109 + C92360 * C115 + C41551 * C110 +
                     C92350 * C116 + C41552 * C111 + C41547 * C121) *
                        C106 +
                    (C41550 * C119 + C92360 * C127 + C41551 * C120 +
                     C92350 * C128 + C41552 * C122 + C41547 * C129) *
                        C95) *
                       C41548 +
                   ((C41550 * C805 + C92360 * C817 + C41551 * C804 +
                     C92350 * C816 + C41552 * C803 + C41547 * C815) *
                        C104 +
                    (C41550 * C813 + C92360 * C829 + C41551 * C812 +
                     C92350 * C828 + C41552 * C811 + C41547 * C827) *
                        C93 -
                    (C41552 * C802 + C41547 * C814 + C41551 * C803 +
                     C92350 * C815 + C41550 * C804 + C92360 * C816) *
                        C105 -
                    (C41552 * C810 + C41547 * C826 + C41551 * C811 +
                     C92350 * C827 + C41550 * C812 + C92360 * C828) *
                        C94 +
                    (C41550 * C803 + C92360 * C815 + C41551 * C802 +
                     C92350 * C814 + C41552 * C1989 + C41547 * C1990) *
                        C106 +
                    (C41550 * C811 + C92360 * C827 + C41551 * C810 +
                     C92350 * C826 + C41552 * C1991 + C41547 * C1992) *
                        C95) *
                       C92171) *
                  C92183 * C92116 * C92105) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C801 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C92084) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C801 +
                     (C42333 + C42334 + C42335) * C92084) *
                        C92171) *
                       C92183 * C92116 * C798 -
                   (((C42336 + C42337 + C42338) * C92084 +
                     (C42339 + C42340 + C42341) * C801) *
                        C92171 +
                    ((C42335 + C42334 + C42333) * C92084 +
                     (C42332 + C42331 + C42330) * C801) *
                        C41548) *
                       C92183 * C92116 * C799 +
                   (((C42341 + C42340 + C42339) * C801 +
                     (C42338 + C42337 + C42336) * C92084) *
                        C41548 +
                    ((C41550 * C4865 + C92360 * C4868 + C41551 * C4866 +
                      C92350 * C4869 + C41552 * C4867 + C41547 * C4870) *
                         C801 +
                     (C41550 * C4871 + C92360 * C4874 + C41551 * C4872 +
                      C92350 * C4875 + C41552 * C4873 + C41547 * C4876) *
                         C92084) *
                        C92171) *
                       C92183 * C92116 * C800)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C181 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C92105) *
                        C41548 +
                    ((C41550 * C805 + C92360 * C817 + C41551 * C804 +
                      C92350 * C816 + C41552 * C803 + C41547 * C815) *
                         C181 +
                     (C41550 * C890 + C92360 * C898 + C41551 * C889 +
                      C92350 * C897 + C41552 * C888 + C41547 * C896) *
                         C92105) *
                        C92171) *
                       C92183 * C93 -
                   (((C41552 * C887 + C41547 * C895 + C41551 * C888 +
                      C92350 * C896 + C41550 * C889 + C92360 * C897) *
                         C92105 +
                     (C41552 * C802 + C41547 * C814 + C41551 * C803 +
                      C92350 * C815 + C41550 * C804 + C92360 * C816) *
                         C181) *
                        C92171 +
                    ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                      C92350 * C190 + C41550 * C183 + C92360 * C189) *
                         C92105 +
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C181) *
                        C41548) *
                       C92183 * C94 +
                   (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                      C92350 * C116 + C41552 * C111 + C41547 * C121) *
                         C181 +
                     (C41550 * C184 + C92360 * C190 + C41551 * C185 +
                      C92350 * C191 + C41552 * C186 + C41547 * C192) *
                         C92105) *
                        C41548 +
                    ((C41550 * C803 + C92360 * C815 + C41551 * C802 +
                      C92350 * C814 + C41552 * C1989 + C41547 * C1990) *
                         C181 +
                     (C41550 * C888 + C92360 * C896 + C41551 * C887 +
                      C92350 * C895 + C41552 * C2061 + C41547 * C2062) *
                         C92105) *
                        C92171) *
                       C92183 * C95) *
                  C92116) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                     C92350 * C114 + C41552 * C109 + C41547 * C115) *
                        C884 +
                    (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                     C92350 * C189 + C41552 * C184 + C41547 * C190) *
                        C798 -
                    (C42332 + C42331 + C42330) * C885 -
                    (C42428 + C42429 + C42430) * C799 +
                    (C42341 + C42340 + C42339) * C886 +
                    (C42431 + C42432 + C42433) * C800) *
                       C41548 +
                   ((C42330 + C42331 + C42332) * C884 +
                    (C42430 + C42429 + C42428) * C798 -
                    (C42339 + C42340 + C42341) * C885 -
                    (C42433 + C42432 + C42431) * C799 +
                    (C41550 * C4865 + C92360 * C4868 + C41551 * C4866 +
                     C92350 * C4869 + C41552 * C4867 + C41547 * C4870) *
                        C886 +
                    (C41550 * C4987 + C92360 * C4990 + C41551 * C4988 +
                     C92350 * C4991 + C41552 * C4989 + C41547 * C4992) *
                        C800) *
                       C92171) *
                  C92183 * C92084 * C92116) /
                     (p * q * std::sqrt(p + q));
    d2eexz[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C244 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C92116) *
                        C41548 +
                    ((C41550 * C805 + C92360 * C817 + C41551 * C804 +
                      C92350 * C816 + C41552 * C803 + C41547 * C815) *
                         C244 +
                     (C41550 * C956 + C92360 * C964 + C41551 * C955 +
                      C92350 * C963 + C41552 * C954 + C41547 * C962) *
                         C92116) *
                        C92171) *
                       C92183 * C92105 * C93 -
                   (((C41552 * C953 + C41547 * C961 + C41551 * C954 +
                      C92350 * C962 + C41550 * C955 + C92360 * C963) *
                         C92116 +
                     (C41552 * C802 + C41547 * C814 + C41551 * C803 +
                      C92350 * C815 + C41550 * C804 + C92360 * C816) *
                         C244) *
                        C92171 +
                    ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                      C92350 * C253 + C41550 * C246 + C92360 * C252) *
                         C92116 +
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C244) *
                        C41548) *
                       C92183 * C92105 * C94 +
                   (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                      C92350 * C116 + C41552 * C111 + C41547 * C121) *
                         C244 +
                     (C41550 * C247 + C92360 * C253 + C41551 * C248 +
                      C92350 * C254 + C41552 * C249 + C41547 * C255) *
                         C92116) *
                        C41548 +
                    ((C41550 * C803 + C92360 * C815 + C41551 * C802 +
                      C92350 * C814 + C41552 * C1989 + C41547 * C1990) *
                         C244 +
                     (C41550 * C954 + C92360 * C962 + C41551 * C953 +
                      C92350 * C961 + C41552 * C2129 + C41547 * C2130) *
                         C92116) *
                        C92171) *
                       C92183 * C92105 * C95)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C244 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C92116) *
                        C41548 +
                    ((C42330 + C42331 + C42332) * C244 +
                     (C42520 + C42521 + C42522) * C92116) *
                        C92171) *
                       C92183 * C798 -
                   (((C42523 + C42524 + C42525) * C92116 +
                     (C42339 + C42340 + C42341) * C244) *
                        C92171 +
                    ((C42522 + C42521 + C42520) * C92116 +
                     (C42332 + C42331 + C42330) * C244) *
                        C41548) *
                       C92183 * C799 +
                   (((C42341 + C42340 + C42339) * C244 +
                     (C42525 + C42524 + C42523) * C92116) *
                        C41548 +
                    ((C41550 * C4865 + C92360 * C4868 + C41551 * C4866 +
                      C92350 * C4869 + C41552 * C4867 + C41547 * C4870) *
                         C244 +
                     (C41550 * C5085 + C92360 * C5088 + C41551 * C5086 +
                      C92350 * C5089 + C41552 * C5087 + C41547 * C5090) *
                         C92116) *
                        C92171) *
                       C92183 * C800) *
                  C92084) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C104 +
           (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
               C93 -
           (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
           C41815 * C95) *
              C92183 * C92360 +
          ((C41803 + C41802) * C104 + (C41805 + C41804) * C93 -
           (C41807 + C41806) * C105 - (C41809 + C41808) * C94 +
           (C41810 + C41811) * C106 + (C41812 + C41813) * C95) *
              C92183 * C92350 +
          (C41814 * C104 + C41815 * C93 - (C41811 + C41810) * C105 -
           (C41813 + C41812) * C94 +
           (C41775 * C111 + C41548 * C312 + C41776 * C1989 + C92171 * C2197) *
               C106 +
           (C41775 * C122 + C41548 * C318 + C41776 * C1991 + C92171 * C2198) *
               C95) *
              C92183 * C41547) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C801 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C92360 +
           ((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92183 *
               C92350 +
           (C41814 * C801 + C41815 * C92084) * C92183 * C41547) *
              C92116 * C798 -
          (((C41776 * C824 + C92171 * C1033 + C41775 * C811 + C41548 * C1028) *
                C92084 +
            (C41776 * C808 + C92171 * C1025 + C41775 * C803 + C41548 * C1020) *
                C801) *
               C92183 * C41547 +
           ((C41776 * C823 + C92171 * C1032 + C41775 * C812 + C41548 * C1029) *
                C92084 +
            (C41776 * C807 + C92171 * C1024 + C41775 * C804 + C41548 * C1021) *
                C801) *
               C92183 * C92350 +
           ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                C92084 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C801) *
               C92183 * C92360) *
              C92116 * C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C801 +
            (C41775 * C822 + C41548 * C1031 + C41776 * C4871 + C92171 * C5186) *
                C92084) *
               C92183 * C92360 +
           ((C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C801 +
            (C41775 * C823 + C41548 * C1032 + C41776 * C4872 + C92171 * C5187) *
                C92084) *
               C92183 * C92350 +
           ((C41775 * C808 + C41548 * C1025 + C41776 * C4867 + C92171 * C5185) *
                C801 +
            (C41775 * C824 + C41548 * C1033 + C41776 * C4873 + C92171 * C5188) *
                C92084) *
               C92183 * C41547) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C181 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C92360 +
           ((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92183 *
               C92350 +
           C41912 * C41547) *
              C93 -
          (((C41907 + C41908) * C92105 + (C41811 + C41810) * C181) * C92183 *
               C41547 +
           ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C92183 *
               C92350 +
           ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92183 *
               C92360) *
              C94 +
          (C41912 * C92360 +
           ((C41810 + C41811) * C181 + (C41908 + C41907) * C92105) * C92183 *
               C92350 +
           ((C41775 * C111 + C41548 * C312 + C41776 * C1989 + C92171 * C2197) *
                C181 +
            (C41775 * C186 + C41548 * C398 + C41776 * C2061 + C92171 * C2283) *
                C92105) *
               C92183 * C41547) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C884 +
           (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
               C798 -
           (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
               C885 -
           (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
               C799 +
           (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
               C886 +
           (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
               C800) *
              C92183 * C92360 +
          ((C41803 + C41802) * C884 + (C41903 + C41904) * C798 -
           (C41776 * C807 + C92171 * C1024 + C41775 * C804 + C41548 * C1021) *
               C885 -
           (C41776 * C892 + C92171 * C1088 + C41775 * C889 + C41548 * C1087) *
               C799 +
           (C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
               C886 +
           (C41775 * C892 + C41548 * C1088 + C41776 * C4988 + C92171 * C5264) *
               C800) *
              C92183 * C92350 +
          (C41814 * C884 + C41909 * C798 -
           (C41776 * C808 + C92171 * C1025 + C41775 * C803 + C41548 * C1020) *
               C885 -
           (C41776 * C893 + C92171 * C1090 + C41775 * C888 + C41548 * C1089) *
               C799 +
           (C41775 * C808 + C41548 * C1025 + C41776 * C4867 + C92171 * C5185) *
               C886 +
           (C41775 * C893 + C41548 * C1090 + C41776 * C4989 + C92171 * C5265) *
               C800) *
              C92183 * C41547) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C92360 +
           ((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92183 *
               C92350 +
           C42009 * C41547) *
              C92105 * C93 -
          (((C42004 + C42005) * C92116 + (C41811 + C41810) * C244) * C92183 *
               C41547 +
           ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C92183 *
               C92350 +
           ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92183 *
               C92360) *
              C92105 * C94 +
          (C42009 * C92360 +
           ((C41810 + C41811) * C244 + (C42005 + C42004) * C92116) * C92183 *
               C92350 +
           ((C41775 * C111 + C41548 * C312 + C41776 * C1989 + C92171 * C2197) *
                C244 +
            (C41775 * C249 + C41548 * C478 + C41776 * C2129 + C92171 * C2371) *
                C92116) *
               C92183 * C41547) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C92360 +
           ((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92183 *
               C92350 +
           C42009 * C41547) *
              C798 -
          (((C41776 * C959 + C92171 * C1149 + C41775 * C954 + C41548 * C1144) *
                C92116 +
            (C41776 * C808 + C92171 * C1025 + C41775 * C803 + C41548 * C1020) *
                C244) *
               C92183 * C41547 +
           ((C41776 * C958 + C92171 * C1148 + C41775 * C955 + C41548 * C1145) *
                C92116 +
            (C41776 * C807 + C92171 * C1024 + C41775 * C804 + C41548 * C1021) *
                C244) *
               C92183 * C92350 +
           ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                C92116 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C244) *
               C92183 * C92360) *
              C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C244 +
            (C41775 * C957 + C41548 * C1147 + C41776 * C5085 + C92171 * C5340) *
                C92116) *
               C92183 * C92360 +
           ((C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C244 +
            (C41775 * C958 + C41548 * C1148 + C41776 * C5086 + C92171 * C5341) *
                C92116) *
               C92183 * C92350 +
           ((C41775 * C808 + C41548 * C1025 + C41776 * C4867 + C92171 * C5185) *
                C244 +
            (C41775 * C959 + C41548 * C1149 + C41776 * C5087 + C92171 * C5342) *
                C92116) *
               C92183 * C41547) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92360 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92350 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C41547) *
              C41548 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92360 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92350 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92183 * C2453) * C106 +
            (C554 * C1991 + C92183 * C2454) * C95) *
               C41547) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92360 +
            (C584 * C801 + C585 * C92084) * C92350 +
            (C586 * C801 + C587 * C92084) * C41547) *
               C41548 +
           ((C5452 + C5453) * C92360 + (C5428 + C5429) * C92350 +
            (C5430 + C5431) * C41547) *
               C92171) *
              C92116 * C798 -
          (((C5454 + C5455) * C41547 + (C5456 + C5457) * C92350 +
            (C5458 + C5459) * C92360) *
               C92171 +
           ((C5431 + C5430) * C41547 + (C5429 + C5428) * C92350 +
            (C5453 + C5452) * C92360) *
               C41548) *
              C92116 * C799 +
          ((C15828 * C92360 + C15829 * C92350 + (C5455 + C5454) * C41547) *
               C41548 +
           (C20510 * C92360 + (C15846 + C15845) * C92350 +
            ((C554 * C4867 + C92183 * C5419) * C801 +
             (C554 * C4873 + C92183 * C5422) * C92084) *
                C41547) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92360 +
            (C648 + C664) * C92350 + C668 * C41547) *
               C41548 +
           ((C5444 * C181 + C5545 * C92105) * C92360 +
            (C4710 + C4711) * C92350 + C4716 * C41547) *
               C92171) *
              C93 -
          (((C4714 + C4715) * C41547 + (C4713 + C4712) * C92350 +
            (C4711 + C4710) * C92360) *
               C92171 +
           ((C666 + C654) * C41547 + (C665 + C651) * C92350 +
            (C664 + C648) * C92360) *
               C41548) *
              C94 +
          ((C668 * C92360 + C669 * C92350 + (C659 + C667) * C41547) * C41548 +
           (C4716 * C92360 + (C4715 + C4714) * C92350 +
            ((C554 * C1989 + C92183 * C2453) * C181 +
             (C554 * C2061 + C92183 * C2539) * C92105) *
                C41547) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C92360 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92350 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C5447 * C886 + C5548 * C800) *
               C41547) *
              C41548 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C92360 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92350 +
           (C2470 * C884 + C2557 * C798 - C5447 * C885 - C5548 * C799 +
            (C554 * C4867 + C92183 * C5419) * C886 +
            (C554 * C4989 + C92183 * C5535) * C800) *
               C41547) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92360 +
            (C726 + C742) * C92350 + C746 * C41547) *
               C41548 +
           ((C5626 + C5642) * C92360 + C7346 * C92350 + C4791 * C41547) *
               C92171) *
              C92105 * C93 -
          (((C2641 + C2631) * C41547 + C7347 * C92350 + C7348 * C92360) *
               C92171 +
           ((C744 + C732) * C41547 + (C743 + C729) * C92350 +
            (C742 + C726) * C92360) *
               C41548) *
              C92105 * C94 +
          ((C746 * C92360 + C747 * C92350 + (C737 + C745) * C41547) * C41548 +
           (C4791 * C92360 + (C2631 + C2641) * C92350 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C41547) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92360 +
            (C726 + C742) * C92350 + C746 * C41547) *
               C41548 +
           ((C5626 + C5642) * C92360 + C7346 * C92350 + C4791 * C41547) *
               C92171) *
              C798 -
          (((C5643 + C5631) * C41547 + C17698 * C92350 +
            (C5645 + C5637) * C92360) *
               C92171 +
           (C7347 * C41547 + C7348 * C92350 + (C5642 + C5626) * C92360) *
               C41548) *
              C799 +
          ((C16007 * C92360 + C16008 * C92350 + (C5631 + C5643) * C41547) *
               C41548 +
           (C20626 * C92360 + (C16011 + C16020) * C92350 +
            ((C554 * C4867 + C92183 * C5419) * C244 +
             (C554 * C5087 + C92183 * C5624) * C92116) *
                C41547) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C1987 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C1983 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C1988 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C1984) *
               C92361 +
           ((C47296 + C47297) * C1987 + (C47298 + C47299) * C1983 -
            (C48732 + C48733) * C1988 - (C48734 + C48735) * C1984) *
               C92356 +
           (C47308 * C1987 + C47309 * C1983 - (C48736 + C48737) * C1988 -
            (C48738 + C48739) * C1984) *
               C46527) *
              C92183 * C92116 * C1985 +
          (((C48733 + C48732) * C1988 -
            ((C47299 + C47298) * C1983 + (C47297 + C47296) * C1987) +
            (C48735 + C48734) * C1984) *
               C92361 +
           ((C48737 + C48736) * C1988 -
            ((C47303 + C47302) * C1983 + (C47301 + C47300) * C1987) +
            (C48739 + C48738) * C1984) *
               C92356 +
           ((C46528 * C4866 + C46523 * C4869 + C46529 * C4867 +
             C92072 * C4870) *
                C1988 -
            ((C47304 + C47305) * C1983 + (C47306 + C47307) * C1987) +
            (C46528 * C4872 + C46523 * C4875 + C46529 * C4873 +
             C92072 * C4876) *
                C1984) *
               C46527) *
              C92183 * C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2059 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C1985 -
            (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
               C92361 +
           ((C47296 + C47297) * C2059 + (C47400 + C47399) * C1985 -
            (C47301 + C47300) * C2060 - (C47402 + C47401) * C1986) *
               C92356 +
           (C47308 * C2059 + C47405 * C1985 - (C47306 + C47307) * C2060 -
            (C47404 + C47403) * C1986) *
               C46527) *
              C92183 * C1983 +
          (((C48733 + C48732) * C2060 -
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C1985 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C2059) +
            (C48846 + C48847) * C1986) *
               C92361 +
           ((C48737 + C48736) * C2060 -
            ((C48847 + C48846) * C1985 + (C48732 + C48733) * C2059) +
            (C48848 + C48849) * C1986) *
               C92356 +
           ((C46528 * C4866 + C46523 * C4869 + C46529 * C4867 +
             C92072 * C4870) *
                C2060 -
            ((C48849 + C48848) * C1985 + (C48736 + C48737) * C2059) +
            (C46528 * C4988 + C46523 * C4991 + C46529 * C4989 +
             C92072 * C4992) *
                C1986) *
               C46527) *
              C92183 * C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C92361 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92356 +
            C47501 * C46527) *
               C92183 * C1985 -
           (((C47497 + C47498) * C92116 + (C47306 + C47307) * C244) * C46527 +
            ((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92356 +
            ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92361) *
               C92183 * C1986) *
              C1983 +
          ((((C48733 + C48732) * C244 + (C48956 + C48957) * C92116) * C92361 +
            ((C48737 + C48736) * C244 + (C48958 + C48959) * C92116) * C92356 +
            ((C46528 * C4866 + C46523 * C4869 + C46529 * C4867 +
              C92072 * C4870) *
                 C244 +
             (C46528 * C5086 + C46523 * C5089 + C46529 * C5087 +
              C92072 * C5090) *
                 C92116) *
                C46527) *
               C92183 * C1986 -
           (((C48959 + C48958) * C92116 + (C48736 + C48737) * C244) * C46527 +
            ((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92356 +
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C92116 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C244) *
                C92361) *
               C92183 * C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C1987 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C1983 -
                     (C46780 + C46781 + C46782) * C1988 -
                     (C46783 + C46784 + C46785) * C1984) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C1987 +
                     (C46785 + C46784 + C46783) * C1983 -
                     (C46788 + C46787 + C46786) * C1988 -
                     (C46791 + C46790 + C46789) * C1984) *
                        C92183 * C92072) *
                       C92116 * C1985 +
                   (((C49070 + C49071 + C49072) * C1988 -
                     ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                       C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                          C1983 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C1987) +
                     (C49073 + C49074 + C49075) * C1984) *
                        C92183 * C46523 +
                    ((C46752 * C803 + C92361 * C1020 + C46753 * C808 +
                      C92356 * C1025 + C46754 * C4867 + C46527 * C5185) *
                         C1988 -
                     ((C49075 + C49074 + C49073) * C1983 +
                      (C49072 + C49071 + C49070) * C1987) +
                     (C46752 * C811 + C92361 * C1028 + C46753 * C824 +
                      C92356 * C1033 + C46754 * C4873 + C46527 * C5188) *
                         C1984) *
                        C92183 * C92072) *
                       C92116 * C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C2059 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C1985 -
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C2060 -
                     (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                      C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                         C1986) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C2059 +
                     (C46878 + C46879 + C46880) * C1985 -
                     (C49072 + C49071 + C49070) * C2060 -
                     (C49180 + C49181 + C49182) * C1986) *
                        C92183 * C92072) *
                       C1983 +
                   (((C49070 + C49071 + C49072) * C2060 -
                     ((C46880 + C46879 + C46878) * C1985 +
                      (C46780 + C46781 + C46782) * C2059) +
                     (C49182 + C49181 + C49180) * C1986) *
                        C92183 * C46523 +
                    ((C46752 * C803 + C92361 * C1020 + C46753 * C808 +
                      C92356 * C1025 + C46754 * C4867 + C46527 * C5185) *
                         C2060 -
                     ((C46881 + C46882 + C46883) * C1985 +
                      (C46788 + C46787 + C46786) * C2059) +
                     (C46752 * C888 + C92361 * C1089 + C46753 * C893 +
                      C92356 * C1090 + C46754 * C4989 + C46527 * C5265) *
                         C1986) *
                        C92183 * C92072) *
                       C1984) *
                  C92116) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C244 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C92116) *
                         C92183 * C46523 +
                     ((C46782 + C46781 + C46780) * C244 +
                      (C46970 + C46971 + C46972) * C92116) *
                         C92183 * C92072) *
                        C1985 -
                    (((C49287 + C49288 + C49289) * C92116 +
                      (C49072 + C49071 + C49070) * C244) *
                         C92183 * C92072 +
                     ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                       C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                          C92116 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C244) *
                         C92183 * C46523) *
                        C1986) *
                       C1983 +
                   ((((C49070 + C49071 + C49072) * C244 +
                      (C49289 + C49288 + C49287) * C92116) *
                         C92183 * C46523 +
                     ((C46752 * C803 + C92361 * C1020 + C46753 * C808 +
                       C92356 * C1025 + C46754 * C4867 + C46527 * C5185) *
                          C244 +
                      (C46752 * C954 + C92361 * C1144 + C46753 * C959 +
                       C92356 * C1149 + C46754 * C5087 + C46527 * C5342) *
                          C92116) *
                         C92183 * C92072) *
                        C1986 -
                    (((C46973 + C46974 + C46975) * C92116 +
                      (C46788 + C46787 + C46786) * C244) *
                         C92183 * C92072 +
                     ((C46972 + C46971 + C46970) * C92116 +
                      (C46780 + C46781 + C46782) * C244) *
                         C92183 * C46523) *
                        C1985) *
                       C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C46523 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92072) *
               C92361 +
           ((C7130 + C7131 - C7132 - C7133) * C46523 +
            (C7134 + C7135 - C7136 - C7137) * C92072) *
               C92356 +
           ((C17490 + C17491 - C17492 - C17493) * C46523 +
            (C17494 + C17495 - C17496 - C17497) * C92072) *
               C46527) *
              C92116 * C1985 +
          (((C7132 - (C7131 + C7130) + C7133) * C46523 +
            (C7136 - (C7135 + C7134) + C7137) * C92072) *
               C92361 +
           ((C17492 - (C17491 + C17490) + C17493) * C46523 +
            (C17496 - (C17495 + C17494) + C17497) * C92072) *
               C92356 +
           ((C21617 - (C21616 + C21615) + C21618) * C46523 +
            ((C554 * C4867 + C92183 * C5419) * C1988 -
             (C15840 * C1983 + C15841 * C1987) +
             (C554 * C4873 + C92183 * C5422) * C1984) *
                C92072) *
               C46527) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C46523 +
            (C2541 + C2542 - C2543 - C2559) * C92072) *
               C92361 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C46523 +
            (C7240 + C7241 - C7242 - C7243) * C92072) *
               C92356 +
           ((C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
                C46523 +
            (C17596 + C17597 - C17598 - C17599) * C92072) *
               C46527) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C46523 +
            (C2548 - (C2547 + C2546) + C2560) * C92072) *
               C92361 +
           ((C7242 - (C7241 + C7240) + C7243) * C46523 +
            (C7246 - (C7245 + C7244) + C7247) * C92072) *
               C92356 +
           ((C17598 - (C17597 + C17596) + C17599) * C46523 +
            ((C554 * C4867 + C92183 * C5419) * C2060 -
             (C5548 * C1985 + C5447 * C2059) +
             (C554 * C4989 + C92183 * C5535) * C1986) *
                C92072) *
               C46527) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C244 +
              (C554 * C245 + C92183 * C719) * C92116) *
                 C46523 +
             (C726 + C742) * C92072) *
                C92361 +
            ((C5626 + C5642) * C46523 + C7346 * C92072) * C92356 +
            C47951 * C46527) *
               C1985 -
           (((C16020 + C16011) * C92072 + (C16021 + C16014) * C46523) * C46527 +
            (C17698 * C92072 + (C5645 + C5637) * C46523) * C92356 +
            (C7348 * C92072 + (C5642 + C5626) * C46523) * C92361) *
               C1986) *
              C1983 +
          (((C7346 * C46523 + C4791 * C92072) * C92361 +
            (C16008 * C46523 + (C5631 + C5643) * C92072) * C92356 +
            ((C16011 + C16020) * C46523 +
             ((C554 * C4867 + C92183 * C5419) * C244 +
              (C554 * C5087 + C92183 * C5624) * C92116) *
                 C92072) *
                C46527) *
               C1986 -
           (((C5643 + C5631) * C92072 + C17698 * C46523) * C46527 +
            (C7347 * C92072 + C7348 * C46523) * C92356 +
            ((C743 + C729) * C92072 + (C742 + C726) * C46523) * C92361) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C92361 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92356 +
            C47312 * C46527) *
               C92183 * C2709 -
           (((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C46527 +
            ((C50620 + C50621) * C92084 + (C50622 + C50623) * C801) * C92356 +
            ((C46529 * C1396 + C92072 * C1412 + C46528 * C1397 +
              C46523 * C1413) *
                 C92084 +
             (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
              C46523 * C1401) *
                 C801) *
                C92361) *
               C92183 * C2710) *
              C1985 +
          ((((C50623 + C50622) * C801 + (C50621 + C50620) * C92084) * C92361 +
            ((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92356 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C46528 * C18736 + C46523 * C18738 + C46529 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C46527) *
               C92183 * C2710 -
           (((C47304 + C47305) * C92084 + (C47306 + C47307) * C801) * C46527 +
            ((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92356 +
            ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92361) *
               C92183 * C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2059 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C1985 -
            (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
               C92361 +
           ((C47296 + C47297) * C2059 + (C47400 + C47399) * C1985 -
            (C47301 + C47300) * C2060 - (C47402 + C47401) * C1986) *
               C92356 +
           (C47308 * C2059 + C47405 * C1985 - (C47306 + C47307) * C2060 -
            (C47404 + C47403) * C1986) *
               C46527) *
              C92183 * C92084 * C2709 +
          (((C50623 + C50622) * C2060 -
            ((C46529 * C1470 + C92072 * C1478 + C46528 * C1471 +
              C46523 * C1479) *
                 C1985 +
             (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
              C46523 * C1401) *
                 C2059) +
            (C50730 + C50731) * C1986) *
               C92361 +
           ((C50619 + C50618) * C2060 -
            ((C50731 + C50730) * C1985 + (C50622 + C50623) * C2059) +
            (C50732 + C50733) * C1986) *
               C92356 +
           ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
             C92072 * C18735) *
                C2060 -
            ((C50733 + C50732) * C1985 + (C50618 + C50619) * C2059) +
            (C46528 * C18862 + C46523 * C18864 + C46529 * C18863 +
             C92072 * C18865) *
                C1986) *
               C46527) *
              C92183 * C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2849 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C2709 -
            (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
             C46523 * C1401) *
                C2850 -
            (C46529 * C1539 + C92072 * C1547 + C46528 * C1540 +
             C46523 * C1548) *
                C2710) *
               C92361 +
           ((C47296 + C47297) * C2849 + (C47493 + C47494) * C2709 -
            (C50622 + C50623) * C2850 - (C50840 + C50841) * C2710) *
               C92356 +
           (C47308 * C2849 + C47499 * C2709 - (C50618 + C50619) * C2850 -
            (C50842 + C50843) * C2710) *
               C46527) *
              C92183 * C1985 +
          (((C50623 + C50622) * C2850 -
            ((C47494 + C47493) * C2709 + (C47297 + C47296) * C2849) +
            (C50841 + C50840) * C2710) *
               C92361 +
           ((C50619 + C50618) * C2850 -
            ((C47496 + C47495) * C2709 + (C47301 + C47300) * C2849) +
            (C50843 + C50842) * C2710) *
               C92356 +
           ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
             C92072 * C18735) *
                C2850 -
            ((C47497 + C47498) * C2709 + (C47306 + C47307) * C2849) +
            (C46528 * C18976 + C46523 * C18978 + C46529 * C18977 +
             C92072 * C18979) *
                C2710) *
               C46527) *
              C92183 * C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eeyx[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C801 +
                      (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                       C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                          C92084) *
                         C92183 * C46523 +
                     ((C46782 + C46781 + C46780) * C801 +
                      (C46785 + C46784 + C46783) * C92084) *
                         C92183 * C92072) *
                        C2709 -
                    (((C49993 + C49992 + C49991) * C92084 +
                      (C49990 + C49989 + C49988) * C801) *
                         C92183 * C92072 +
                     ((C46754 * C8418 + C46527 * C8769 + C46753 * C3439 +
                       C92356 * C3665 + C46752 * C1397 + C92361 * C1614) *
                          C92084 +
                      (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                       C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                          C801) *
                         C92183 * C46523) *
                        C2710) *
                       C1985 +
                   ((((C46752 * C3431 + C92361 * C3661 + C46753 * C8412 +
                       C92356 * C8766 + C46754 * C18732 + C46527 * C19090) *
                          C801 +
                      (C46752 * C3439 + C92361 * C3665 + C46753 * C8418 +
                       C92356 * C8769 + C46754 * C18736 + C46527 * C19092) *
                          C92084) *
                         C92183 * C46523 +
                     ((C46752 * C3432 + C92361 * C3662 + C46753 * C8413 +
                       C92356 * C8767 + C46754 * C18733 + C46527 * C19091) *
                          C801 +
                      (C46752 * C3440 + C92361 * C3666 + C46753 * C8419 +
                       C92356 * C8770 + C46754 * C18737 + C46527 * C19093) *
                          C92084) *
                         C92183 * C92072) *
                        C2710 -
                    (((C49075 + C49074 + C49073) * C92084 +
                      (C49072 + C49071 + C49070) * C801) *
                         C92183 * C92072 +
                     ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                       C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                          C92084 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C801) *
                         C92183 * C46523) *
                        C2709) *
                       C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C2059 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C1985 -
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C2060 -
                     (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                      C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                         C1986) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C2059 +
                     (C46878 + C46879 + C46880) * C1985 -
                     (C49072 + C49071 + C49070) * C2060 -
                     (C49180 + C49181 + C49182) * C1986) *
                        C92183 * C92072) *
                       C92084 * C2709 +
                   (((C46752 * C3431 + C92361 * C3661 + C46753 * C8412 +
                      C92356 * C8766 + C46754 * C18732 + C46527 * C19090) *
                         C2060 -
                     ((C46754 * C8540 + C46527 * C8870 + C46753 * C3513 +
                       C92356 * C3735 + C46752 * C1471 + C92361 * C1672) *
                          C1985 +
                      (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                       C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                          C2059) +
                     (C46752 * C3513 + C92361 * C3735 + C46753 * C8540 +
                      C92356 * C8870 + C46754 * C18862 + C46527 * C19192) *
                         C1986) *
                        C92183 * C46523 +
                    ((C46752 * C3432 + C92361 * C3662 + C46753 * C8413 +
                      C92356 * C8767 + C46754 * C18733 + C46527 * C19091) *
                         C2060 -
                     ((C50100 + C50099 + C50098) * C1985 +
                      (C49990 + C49989 + C49988) * C2059) +
                     (C46752 * C3514 + C92361 * C3736 + C46753 * C8541 +
                      C92356 * C8871 + C46754 * C18863 + C46527 * C19193) *
                         C1986) *
                        C92183 * C92072) *
                       C92084 * C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C2849 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C2709 -
                     (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                      C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                         C2850 -
                     (C46754 * C8653 + C46527 * C8971 + C46753 * C3587 +
                      C92356 * C3805 + C46752 * C1540 + C92361 * C1727) *
                         C2710) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C2849 +
                     (C46970 + C46971 + C46972) * C2709 -
                     (C49990 + C49989 + C49988) * C2850 -
                     (C50205 + C50206 + C50207) * C2710) *
                        C92183 * C92072) *
                       C1985 +
                   (((C46752 * C3431 + C92361 * C3661 + C46753 * C8412 +
                      C92356 * C8766 + C46754 * C18732 + C46527 * C19090) *
                         C2850 -
                     ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                       C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                          C2709 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C2849) +
                     (C46752 * C3587 + C92361 * C3805 + C46753 * C8653 +
                      C92356 * C8971 + C46754 * C18976 + C46527 * C19292) *
                         C2710) *
                        C92183 * C46523 +
                    ((C46752 * C3432 + C92361 * C3662 + C46753 * C8413 +
                      C92356 * C8767 + C46754 * C18733 + C46527 * C19091) *
                         C2850 -
                     ((C49287 + C49288 + C49289) * C2709 +
                      (C49072 + C49071 + C49070) * C2849) +
                     (C46752 * C3588 + C92361 * C3806 + C46753 * C8654 +
                      C92356 * C8972 + C46754 * C18977 + C46527 * C19293) *
                         C2710) *
                        C92183 * C92072) *
                       C1986) *
                  C92084) /
                 (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C801 +
              (C554 * C117 + C92183 * C561) * C92084) *
                 C46523 +
             (C584 * C801 + C585 * C92084) * C92072) *
                C92361 +
            ((C5452 + C5453) * C46523 + (C5428 + C5429) * C92072) * C92356 +
            C47800 * C46527) *
               C2709 -
           (((C19397 + C19398) * C92072 + (C19405 + C19406) * C46523) * C46527 +
            ((C9081 + C9082) * C92072 + (C9089 + C9090) * C46523) * C92356 +
            ((C3191 * C92084 + C3190 * C801) * C92072 +
             ((C554 * C1397 + C92183 * C1796) * C92084 +
              (C554 * C1389 + C92183 * C1788) * C801) *
                 C46523) *
                C92361) *
               C2710) *
              C1985 +
          ((((C9090 + C9089) * C46523 + (C9082 + C9081) * C92072) * C92361 +
            ((C19406 + C19405) * C46523 + (C19398 + C19397) * C92072) * C92356 +
            ((C22882 + C22881) * C46523 +
             ((C554 * C18733 + C92183 * C19393) * C801 +
              (C554 * C18737 + C92183 * C19395) * C92084) *
                 C92072) *
                C46527) *
               C2710 -
           (((C15845 + C15846) * C92072 + (C15847 + C15848) * C46523) * C46527 +
            ((C5456 + C5457) * C92072 + (C5458 + C5459) * C46523) * C92356 +
            ((C5429 + C5428) * C92072 + (C5453 + C5452) * C46523) * C92361) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C46523 +
            (C2541 + C2542 - C2543 - C2559) * C92072) *
               C92361 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C46523 +
            (C7240 + C7241 - C7242 - C7243) * C92072) *
               C92356 +
           ((C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
                C46523 +
            (C17596 + C17597 - C17598 - C17599) * C92072) *
               C46527) *
              C92084 * C2709 +
          (((C9088 * C2060 -
             ((C554 * C1471 + C92183 * C1854) * C1985 +
              (C554 * C1389 + C92183 * C1788) * C2059) +
             C9194 * C1986) *
                C46523 +
            (C8091 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8199 * C1986) *
                C92072) *
               C92361 +
           ((C19404 * C2060 - (C9194 * C1985 + C9088 * C2059) +
             C19509 * C1986) *
                C46523 +
            (C18425 * C2060 - (C8199 * C1985 + C8091 * C2059) +
             C18528 * C1986) *
                C92072) *
               C92356 +
           ((C22880 * C2060 - (C19509 * C1985 + C19404 * C2059) +
             C22952 * C1986) *
                C46523 +
            ((C554 * C18733 + C92183 * C19393) * C2060 -
             (C18528 * C1985 + C18425 * C2059) +
             (C554 * C18863 + C92183 * C19505) * C1986) *
                C92072) *
               C46527) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C46523 +
                     (C3345 + C3346 - C3347 - C3363) * C92072) *
                        C92361 +
                    ((C9296 + C9297 - C9298 - C9302) * C46523 +
                     (C8301 + C8302 - C8303 - C8313) * C92072) *
                        C92356 +
                    ((C19610 + C19611 - C19612 - C19616) * C46523 +
                     (C18628 + C18629 - C18630 - C18634) * C92072) *
                        C46527) *
                       C1985 +
                   (((C9298 - (C9297 + C9296) + C9302) * C46523 +
                     (C8303 - (C8302 + C8301) + C8313) * C92072) *
                        C92361 +
                    ((C19612 - (C19611 + C19610) + C19616) * C46523 +
                     (C18630 - (C18629 + C18628) + C18634) * C92072) *
                        C92356 +
                    ((C23022 - (C23021 + C23020) + C23026) * C46523 +
                     ((C554 * C18733 + C92183 * C19393) * C2850 -
                      (C16017 * C2709 + C15841 * C2849) +
                      (C554 * C18977 + C92183 * C19608) * C2710) *
                         C92072) *
                        C46527) *
                       C1986) *
                  C92084) /
                 (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C801 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C92084) *
               C92361 +
           ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92356 +
           C47312 * C46527) *
              C92183 * C92116 * C798 -
          (((C47304 + C47305) * C92084 + (C47306 + C47307) * C801) * C46527 +
           ((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92356 +
           ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92361) *
              C92183 * C92116 * C799 +
          (C47312 * C92361 +
           ((C47307 + C47306) * C801 + (C47305 + C47304) * C92084) * C92356 +
           ((C46528 * C15273 + C46523 * C15275 + C46529 * C15274 +
             C92072 * C15276) *
                C801 +
            (C46528 * C15277 + C46523 * C15279 + C46529 * C15278 +
             C92072 * C15280) *
                C92084) *
               C46527) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C104 +
           (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
               C93 -
           (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
               C105 -
           (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
               C94 +
           (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
               C106 +
           (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
               C95) *
              C92361 +
          ((C46528 * C805 + C46523 * C817 + C46529 * C804 + C92072 * C816) *
               C104 +
           (C46528 * C813 + C46523 * C829 + C46529 * C812 + C92072 * C828) *
               C93 -
           (C46529 * C803 + C92072 * C815 + C46528 * C804 + C46523 * C816) *
               C105 -
           (C46529 * C811 + C92072 * C827 + C46528 * C812 + C46523 * C828) *
               C94 +
           (C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
               C106 +
           (C46528 * C811 + C46523 * C827 + C46529 * C810 + C92072 * C826) *
               C95) *
              C92356 +
          ((C46528 * C806 + C46523 * C818 + C46529 * C807 + C92072 * C819) *
               C104 +
           (C46528 * C822 + C46523 * C830 + C46529 * C823 + C92072 * C831) *
               C93 -
           (C46529 * C808 + C92072 * C820 + C46528 * C807 + C46523 * C819) *
               C105 -
           (C46529 * C824 + C92072 * C832 + C46528 * C823 + C46523 * C831) *
               C94 +
           (C46528 * C808 + C46523 * C820 + C46529 * C809 + C92072 * C821) *
               C106 +
           (C46528 * C824 + C46523 * C832 + C46529 * C825 + C92072 * C833) *
               C95) *
              C46527) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C801 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C92084) *
               C92361 +
           ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92356 +
           C47312 * C46527) *
              C92183 * C1383 -
          (((C46529 * C8419 + C92072 * C8422 + C46528 * C8418 +
             C46523 * C8421) *
                C92084 +
            (C46529 * C8413 + C92072 * C8416 + C46528 * C8412 +
             C46523 * C8415) *
                C801) *
               C46527 +
           ((C46529 * C3440 + C92072 * C3444 + C46528 * C3439 +
             C46523 * C3443) *
                C92084 +
            (C46529 * C3432 + C92072 * C3436 + C46528 * C3431 +
             C46523 * C3435) *
                C801) *
               C92356 +
           ((C46529 * C1396 + C92072 * C1412 + C46528 * C1397 +
             C46523 * C1413) *
                C92084 +
            (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
             C46523 * C1401) *
                C801) *
               C92361) *
              C92183 * C1384 +
          (((C46528 * C1390 + C46523 * C1402 + C46529 * C1391 +
             C92072 * C1403) *
                C801 +
            (C46528 * C1406 + C46523 * C1414 + C46529 * C1407 +
             C92072 * C1415) *
                C92084) *
               C92361 +
           ((C46528 * C5719 + C46523 * C5722 + C46529 * C5720 +
             C92072 * C5723) *
                C801 +
            (C46528 * C5725 + C46523 * C5728 + C46529 * C5726 +
             C92072 * C5729) *
                C92084) *
               C92356 +
           ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
             C92072 * C16098) *
                C801 +
            (C46528 * C16099 + C46523 * C16101 + C46529 * C16100 +
             C92072 * C16102) *
                C92084) *
               C46527) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C884 +
           (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
               C798 -
           (C47297 + C47296) * C885 - (C47399 + C47400) * C799 + C47308 * C886 +
           C47405 * C800) *
              C92361 +
          ((C47296 + C47297) * C884 + (C47400 + C47399) * C798 -
           (C47301 + C47300) * C885 - (C47402 + C47401) * C799 +
           (C47307 + C47306) * C886 + (C47403 + C47404) * C800) *
              C92356 +
          (C47308 * C884 + C47405 * C798 - (C47306 + C47307) * C885 -
           (C47404 + C47403) * C799 +
           (C46528 * C15273 + C46523 * C15275 + C46529 * C15274 +
            C92072 * C15276) *
               C886 +
           (C46528 * C15396 + C46523 * C15398 + C46529 * C15397 +
            C92072 * C15399) *
               C800) *
              C46527) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C181 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C92105) *
               C92361 +
           ((C46528 * C805 + C46523 * C817 + C46529 * C804 + C92072 * C816) *
                C181 +
            (C46528 * C890 + C46523 * C898 + C46529 * C889 + C92072 * C897) *
                C92105) *
               C92356 +
           ((C46528 * C806 + C46523 * C818 + C46529 * C807 + C92072 * C819) *
                C181 +
            (C46528 * C891 + C46523 * C899 + C46529 * C892 + C92072 * C900) *
                C92105) *
               C46527) *
              C92183 * C93 -
          (((C46529 * C893 + C92072 * C901 + C46528 * C892 + C46523 * C900) *
                C92105 +
            (C46529 * C808 + C92072 * C820 + C46528 * C807 + C46523 * C819) *
                C181) *
               C46527 +
           ((C46529 * C888 + C92072 * C896 + C46528 * C889 + C46523 * C897) *
                C92105 +
            (C46529 * C803 + C92072 * C815 + C46528 * C804 + C46523 * C816) *
                C181) *
               C92356 +
           ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                C92105 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C181) *
               C92361) *
              C92183 * C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C181 +
            (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                C92105) *
               C92361 +
           ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C181 +
            (C46528 * C888 + C46523 * C896 + C46529 * C887 + C92072 * C895) *
                C92105) *
               C92356 +
           ((C46528 * C808 + C46523 * C820 + C46529 * C809 + C92072 * C821) *
                C181 +
            (C46528 * C893 + C46523 * C901 + C46529 * C894 + C92072 * C902) *
                C92105) *
               C46527) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C181 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C92105) *
               C92361 +
           ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92356 +
           (C47308 * C181 + C47405 * C92105) * C46527) *
              C92183 * C92084 * C1383 -
          (((C46529 * C8541 + C92072 * C8544 + C46528 * C8540 +
             C46523 * C8543) *
                C92105 +
            (C46529 * C8413 + C92072 * C8416 + C46528 * C8412 +
             C46523 * C8415) *
                C181) *
               C46527 +
           ((C46529 * C3514 + C92072 * C3518 + C46528 * C3513 +
             C46523 * C3517) *
                C92105 +
            (C46529 * C3432 + C92072 * C3436 + C46528 * C3431 +
             C46523 * C3435) *
                C181) *
               C92356 +
           ((C46529 * C1470 + C92072 * C1478 + C46528 * C1471 +
             C46523 * C1479) *
                C92105 +
            (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
             C46523 * C1401) *
                C181) *
               C92361) *
              C92183 * C92084 * C1384 +
          (((C46528 * C1390 + C46523 * C1402 + C46529 * C1391 +
             C92072 * C1403) *
                C181 +
            (C46528 * C1472 + C46523 * C1480 + C46529 * C1473 +
             C92072 * C1481) *
                C92105) *
               C92361 +
           ((C46528 * C5719 + C46523 * C5722 + C46529 * C5720 +
             C92072 * C5723) *
                C181 +
            (C46528 * C5805 + C46523 * C5808 + C46529 * C5806 +
             C92072 * C5809) *
                C92105) *
               C92356 +
           ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
             C92072 * C16098) *
                C181 +
            (C46528 * C16177 + C46523 * C16179 + C46529 * C16178 +
             C92072 * C16180) *
                C92105) *
               C46527) *
              C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92361 +
           ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92356 +
           C47501 * C46527) *
              C92183 * C798 -
          (((C47497 + C47498) * C92116 + (C47306 + C47307) * C244) * C46527 +
           ((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92356 +
           ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92361) *
              C92183 * C799 +
          (C47501 * C92361 +
           ((C47307 + C47306) * C244 + (C47498 + C47497) * C92116) * C92356 +
           ((C46528 * C15273 + C46523 * C15275 + C46529 * C15274 +
             C92072 * C15276) *
                C244 +
            (C46528 * C15493 + C46523 * C15495 + C46529 * C15494 +
             C92072 * C15496) *
                C92116) *
               C46527) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92361 +
           ((C46528 * C805 + C46523 * C817 + C46529 * C804 + C92072 * C816) *
                C244 +
            (C46528 * C956 + C46523 * C964 + C46529 * C955 + C92072 * C963) *
                C92116) *
               C92356 +
           ((C46528 * C806 + C46523 * C818 + C46529 * C807 + C92072 * C819) *
                C244 +
            (C46528 * C957 + C46523 * C965 + C46529 * C958 + C92072 * C966) *
                C92116) *
               C46527) *
              C92183 * C92105 * C93 -
          (((C46529 * C959 + C92072 * C967 + C46528 * C958 + C46523 * C966) *
                C92116 +
            (C46529 * C808 + C92072 * C820 + C46528 * C807 + C46523 * C819) *
                C244) *
               C46527 +
           ((C46529 * C954 + C92072 * C962 + C46528 * C955 + C46523 * C963) *
                C92116 +
            (C46529 * C803 + C92072 * C815 + C46528 * C804 + C46523 * C816) *
                C244) *
               C92356 +
           ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                C92116 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C244) *
               C92361) *
              C92183 * C92105 * C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C244 +
            (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                C92116) *
               C92361 +
           ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C244 +
            (C46528 * C954 + C46523 * C962 + C46529 * C953 + C92072 * C961) *
                C92116) *
               C92356 +
           ((C46528 * C808 + C46523 * C820 + C46529 * C809 + C92072 * C821) *
                C244 +
            (C46528 * C959 + C46523 * C967 + C46529 * C960 + C92072 * C968) *
                C92116) *
               C46527) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C1534 +
           (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
               C1383 -
           (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 + C46523 * C1401) *
               C1535 -
           (C46529 * C1539 + C92072 * C1547 + C46528 * C1540 + C46523 * C1548) *
               C1384 +
           (C46528 * C1390 + C46523 * C1402 + C46529 * C1391 + C92072 * C1403) *
               C1536 +
           (C46528 * C1541 + C46523 * C1549 + C46529 * C1542 + C92072 * C1550) *
               C1385) *
              C92361 +
          ((C47296 + C47297) * C1534 + (C47493 + C47494) * C1383 -
           (C46529 * C3432 + C92072 * C3436 + C46528 * C3431 + C46523 * C3435) *
               C1535 -
           (C46529 * C3588 + C92072 * C3592 + C46528 * C3587 + C46523 * C3591) *
               C1384 +
           (C46528 * C5719 + C46523 * C5722 + C46529 * C5720 + C92072 * C5723) *
               C1536 +
           (C46528 * C5885 + C46523 * C5888 + C46529 * C5886 + C92072 * C5889) *
               C1385) *
              C92356 +
          (C47308 * C1534 + C47499 * C1383 -
           (C46529 * C8413 + C92072 * C8416 + C46528 * C8412 + C46523 * C8415) *
               C1535 -
           (C46529 * C8654 + C92072 * C8657 + C46528 * C8653 + C46523 * C8656) *
               C1384 +
           (C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
            C92072 * C16098) *
               C1536 +
           (C46528 * C16255 + C46523 * C16257 + C46529 * C16256 +
            C92072 * C16258) *
               C1385) *
              C46527) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C801 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C92084) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C801 +
                     (C46785 + C46784 + C46783) * C92084) *
                        C92183 * C92072) *
                       C92116 * C798 -
                   (((C46754 * C4872 + C46527 * C5187 + C46753 * C823 +
                      C92356 * C1032 + C46752 * C812 + C92361 * C1029) *
                         C92084 +
                     (C46754 * C4866 + C46527 * C5184 + C46753 * C807 +
                      C92356 * C1024 + C46752 * C804 + C92361 * C1021) *
                         C801) *
                        C92183 * C92072 +
                    ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                      C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                         C92084 +
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C801) *
                        C92183 * C46523) *
                       C92116 * C799 +
                   (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                      C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                         C801 +
                     (C46752 * C822 + C92361 * C1031 + C46753 * C4871 +
                      C92356 * C5186 + C46754 * C15277 + C46527 * C15595) *
                         C92084) *
                        C92183 * C46523 +
                    ((C46752 * C807 + C92361 * C1024 + C46753 * C4866 +
                      C92356 * C5184 + C46754 * C15274 + C46527 * C15594) *
                         C801 +
                     (C46752 * C823 + C92361 * C1032 + C46753 * C4872 +
                      C92356 * C5187 + C46754 * C15278 + C46527 * C15596) *
                         C92084) *
                        C92183 * C92072) *
                       C92116 * C800)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                     C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                        C104 +
                    (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                     C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                        C93 -
                    (C46780 + C46781 + C46782) * C105 -
                    (C46783 + C46784 + C46785) * C94 +
                    (C46786 + C46787 + C46788) * C106 +
                    (C46789 + C46790 + C46791) * C95) *
                       C92183 * C46523 +
                   ((C46782 + C46781 + C46780) * C104 +
                    (C46785 + C46784 + C46783) * C93 -
                    (C46788 + C46787 + C46786) * C105 -
                    (C46791 + C46790 + C46789) * C94 +
                    (C46752 * C110 + C92361 * C311 + C46753 * C802 +
                     C92356 * C1019 + C46754 * C809 + C46527 * C1026) *
                        C106 +
                    (C46752 * C120 + C92361 * C317 + C46753 * C810 +
                     C92356 * C1027 + C46754 * C825 + C46527 * C1034) *
                        C95) *
                       C92183 * C92072) *
                  C92116 * C92105) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C801 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C92084) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C801 +
                     (C46785 + C46784 + C46783) * C92084) *
                        C92183 * C92072) *
                       C1383 -
                   (((C46754 * C8419 + C46527 * C8770 + C46753 * C3440 +
                      C92356 * C3666 + C46752 * C1396 + C92361 * C1613) *
                         C92084 +
                     (C46754 * C8413 + C46527 * C8767 + C46753 * C3432 +
                      C92356 * C3662 + C46752 * C1388 + C92361 * C1605) *
                         C801) *
                        C92183 * C92072 +
                    ((C46754 * C8418 + C46527 * C8769 + C46753 * C3439 +
                      C92356 * C3665 + C46752 * C1397 + C92361 * C1614) *
                         C92084 +
                     (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                      C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                         C801) *
                        C92183 * C46523) *
                       C1384 +
                   (((C46752 * C1390 + C92361 * C1607 + C46753 * C5719 +
                      C92356 * C5965 + C46754 * C16095 + C46527 * C16333) *
                         C801 +
                     (C46752 * C1406 + C92361 * C1615 + C46753 * C5725 +
                      C92356 * C5968 + C46754 * C16099 + C46527 * C16335) *
                         C92084) *
                        C92183 * C46523 +
                    ((C46752 * C1391 + C92361 * C1608 + C46753 * C5720 +
                      C92356 * C5966 + C46754 * C16096 + C46527 * C16334) *
                         C801 +
                     (C46752 * C1407 + C92361 * C1616 + C46753 * C5726 +
                      C92356 * C5969 + C46754 * C16100 + C46527 * C16336) *
                         C92084) *
                        C92183 * C92072) *
                       C1385) *
                  C92105) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                     C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                        C884 +
                    (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                     C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                        C798 -
                    (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                     C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                        C885 -
                    (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                     C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                        C799 +
                    (C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                     C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                        C886 +
                    (C46752 * C891 + C92361 * C1086 + C46753 * C4987 +
                     C92356 * C5263 + C46754 * C15396 + C46527 * C15671) *
                        C800) *
                       C92183 * C46523 +
                   ((C46782 + C46781 + C46780) * C884 +
                    (C46878 + C46879 + C46880) * C798 -
                    (C46754 * C4866 + C46527 * C5184 + C46753 * C807 +
                     C92356 * C1024 + C46752 * C804 + C92361 * C1021) *
                        C885 -
                    (C46754 * C4988 + C46527 * C5264 + C46753 * C892 +
                     C92356 * C1088 + C46752 * C889 + C92361 * C1087) *
                        C799 +
                    (C46752 * C807 + C92361 * C1024 + C46753 * C4866 +
                     C92356 * C5184 + C46754 * C15274 + C46527 * C15594) *
                        C886 +
                    (C46752 * C892 + C92361 * C1088 + C46753 * C4988 +
                     C92356 * C5264 + C46754 * C15397 + C46527 * C15672) *
                        C800) *
                       C92183 * C92072) *
                  C92084 * C92116) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C181 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C92105) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C181 +
                     (C46878 + C46879 + C46880) * C92105) *
                        C92183 * C92072) *
                       C93 -
                   (((C46881 + C46882 + C46883) * C92105 +
                     (C46788 + C46787 + C46786) * C181) *
                        C92183 * C92072 +
                    ((C46880 + C46879 + C46878) * C92105 +
                     (C46780 + C46781 + C46782) * C181) *
                        C92183 * C46523) *
                       C94 +
                   (((C46786 + C46787 + C46788) * C181 +
                     (C46883 + C46882 + C46881) * C92105) *
                        C92183 * C46523 +
                    ((C46752 * C110 + C92361 * C311 + C46753 * C802 +
                      C92356 * C1019 + C46754 * C809 + C46527 * C1026) *
                         C181 +
                     (C46752 * C185 + C92361 * C397 + C46753 * C887 +
                      C92356 * C1091 + C46754 * C894 + C46527 * C1092) *
                         C92105) *
                        C92183 * C92072) *
                       C95) *
                  C92116) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C181 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C92105) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C181 +
                     (C46878 + C46879 + C46880) * C92105) *
                        C92183 * C92072) *
                       C92084 * C1383 -
                   (((C46754 * C8541 + C46527 * C8871 + C46753 * C3514 +
                      C92356 * C3736 + C46752 * C1470 + C92361 * C1671) *
                         C92105 +
                     (C46754 * C8413 + C46527 * C8767 + C46753 * C3432 +
                      C92356 * C3662 + C46752 * C1388 + C92361 * C1605) *
                         C181) *
                        C92183 * C92072 +
                    ((C46754 * C8540 + C46527 * C8870 + C46753 * C3513 +
                      C92356 * C3735 + C46752 * C1471 + C92361 * C1672) *
                         C92105 +
                     (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                      C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                         C181) *
                        C92183 * C46523) *
                       C92084 * C1384 +
                   (((C46752 * C1390 + C92361 * C1607 + C46753 * C5719 +
                      C92356 * C5965 + C46754 * C16095 + C46527 * C16333) *
                         C181 +
                     (C46752 * C1472 + C92361 * C1673 + C46753 * C5805 +
                      C92356 * C6045 + C46754 * C16177 + C46527 * C16411) *
                         C92105) *
                        C92183 * C46523 +
                    ((C46752 * C1391 + C92361 * C1608 + C46753 * C5720 +
                      C92356 * C5966 + C46754 * C16096 + C46527 * C16334) *
                         C181 +
                     (C46752 * C1473 + C92361 * C1674 + C46753 * C5806 +
                      C92356 * C6046 + C46754 * C16178 + C46527 * C16412) *
                         C92105) *
                        C92183 * C92072) *
                       C92084 * C1385)) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C244 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C92116) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C244 +
                     (C46970 + C46971 + C46972) * C92116) *
                        C92183 * C92072) *
                       C798 -
                   (((C46754 * C5086 + C46527 * C5341 + C46753 * C958 +
                      C92356 * C1148 + C46752 * C955 + C92361 * C1145) *
                         C92116 +
                     (C46754 * C4866 + C46527 * C5184 + C46753 * C807 +
                      C92356 * C1024 + C46752 * C804 + C92361 * C1021) *
                         C244) *
                        C92183 * C92072 +
                    ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                      C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                         C92116 +
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C244) *
                        C92183 * C46523) *
                       C799 +
                   (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                      C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                         C244 +
                     (C46752 * C957 + C92361 * C1147 + C46753 * C5085 +
                      C92356 * C5340 + C46754 * C15493 + C46527 * C15747) *
                         C92116) *
                        C92183 * C46523 +
                    ((C46752 * C807 + C92361 * C1024 + C46753 * C4866 +
                      C92356 * C5184 + C46754 * C15274 + C46527 * C15594) *
                         C244 +
                     (C46752 * C958 + C92361 * C1148 + C46753 * C5086 +
                      C92356 * C5341 + C46754 * C15494 + C46527 * C15748) *
                         C92116) *
                        C92183 * C92072) *
                       C800) *
                  C92084) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C244 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C92116) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C244 +
                     (C46970 + C46971 + C46972) * C92116) *
                        C92183 * C92072) *
                       C92105 * C93 -
                   (((C46973 + C46974 + C46975) * C92116 +
                     (C46788 + C46787 + C46786) * C244) *
                        C92183 * C92072 +
                    ((C46972 + C46971 + C46970) * C92116 +
                     (C46780 + C46781 + C46782) * C244) *
                        C92183 * C46523) *
                       C92105 * C94 +
                   (((C46786 + C46787 + C46788) * C244 +
                     (C46975 + C46974 + C46973) * C92116) *
                        C92183 * C46523 +
                    ((C46752 * C110 + C92361 * C311 + C46753 * C802 +
                      C92356 * C1019 + C46754 * C809 + C46527 * C1026) *
                         C244 +
                     (C46752 * C248 + C92361 * C477 + C46753 * C953 +
                      C92356 * C1143 + C46754 * C960 + C46527 * C1150) *
                         C92116) *
                        C92183 * C92072) *
                       C92105 * C95)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                     C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                        C1534 +
                    (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                     C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                        C1383 -
                    (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                     C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                        C1535 -
                    (C46754 * C8653 + C46527 * C8971 + C46753 * C3587 +
                     C92356 * C3805 + C46752 * C1540 + C92361 * C1727) *
                        C1384 +
                    (C46752 * C1390 + C92361 * C1607 + C46753 * C5719 +
                     C92356 * C5965 + C46754 * C16095 + C46527 * C16333) *
                        C1536 +
                    (C46752 * C1541 + C92361 * C1728 + C46753 * C5885 +
                     C92356 * C6122 + C46754 * C16255 + C46527 * C16487) *
                        C1385) *
                       C92183 * C46523 +
                   ((C46782 + C46781 + C46780) * C1534 +
                    (C46970 + C46971 + C46972) * C1383 -
                    (C46754 * C8413 + C46527 * C8767 + C46753 * C3432 +
                     C92356 * C3662 + C46752 * C1388 + C92361 * C1605) *
                        C1535 -
                    (C46754 * C8654 + C46527 * C8972 + C46753 * C3588 +
                     C92356 * C3806 + C46752 * C1539 + C92361 * C1729) *
                        C1384 +
                    (C46752 * C1391 + C92361 * C1608 + C46753 * C5720 +
                     C92356 * C5966 + C46754 * C16096 + C46527 * C16334) *
                        C1536 +
                    (C46752 * C1542 + C92361 * C1730 + C46753 * C5886 +
                     C92356 * C6123 + C46754 * C16256 + C46527 * C16488) *
                        C1385) *
                       C92183 * C92072) *
                  C92105 * C92084) /
                     (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C46523 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C92361 +
           ((C5452 + C5453) * C46523 + (C5428 + C5429) * C92072) * C92356 +
           C47800 * C46527) *
              C92116 * C798 -
          (((C15845 + C15846) * C92072 + (C15847 + C15848) * C46523) * C46527 +
           ((C5456 + C5457) * C92072 + (C5458 + C5459) * C46523) * C92356 +
           ((C5429 + C5428) * C92072 + (C5453 + C5452) * C46523) * C92361) *
              C92116 * C799 +
          (C47800 * C92361 +
           (C20510 * C46523 + (C15846 + C15845) * C92072) * C92356 +
           ((C20519 + C20518) * C46523 +
            ((C554 * C15274 + C92183 * C15824) * C801 +
             (C554 * C15278 + C92183 * C15826) * C92084) *
                C92072) *
               C46527) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C46523 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92072) *
              C92361 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C46523 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92072) *
              C92356 +
          ((C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
            C5447 * C106 + C5446 * C95) *
               C46523 +
           (C5449 * C104 + C5448 * C93 - C5447 * C105 - C5446 * C94 +
            (C554 * C809 + C92183 * C1208) * C106 +
            (C554 * C825 + C92183 * C1216) * C95) *
               C92072) *
              C46527) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C46523 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C92361 +
           ((C5452 + C5453) * C46523 + (C5428 + C5429) * C92072) * C92356 +
           C47800 * C46527) *
              C1383 -
          (((C19397 + C19398) * C92072 + (C19405 + C19406) * C46523) * C46527 +
           ((C9081 + C9082) * C92072 + (C9089 + C9090) * C46523) * C92356 +
           ((C3191 * C92084 + C3190 * C801) * C92072 +
            ((C554 * C1397 + C92183 * C1796) * C92084 +
             (C554 * C1389 + C92183 * C1788) * C801) *
                C46523) *
               C92361) *
              C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C801 +
             (C554 * C1406 + C92183 * C1797) * C92084) *
                C46523 +
            ((C554 * C1391 + C92183 * C1790) * C801 +
             (C554 * C1407 + C92183 * C1798) * C92084) *
                C92072) *
               C92361 +
           (((C554 * C5719 + C92183 * C6199) * C801 +
             (C554 * C5725 + C92183 * C6202) * C92084) *
                C46523 +
            ((C554 * C5720 + C92183 * C6200) * C801 +
             (C554 * C5726 + C92183 * C6203) * C92084) *
                C92072) *
               C92356 +
           (((C554 * C16095 + C92183 * C16563) * C801 +
             (C554 * C16099 + C92183 * C16565) * C92084) *
                C46523 +
            ((C554 * C16096 + C92183 * C16564) * C801 +
             (C554 * C16100 + C92183 * C16566) * C92084) *
                C92072) *
               C46527) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C46523 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92072) *
              C92361 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C46523 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92072) *
              C92356 +
          ((C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
            C20517 * C886 + C20573 * C800) *
               C46523 +
           (C5449 * C884 + C5547 * C798 - C15841 * C885 - C15930 * C799 +
            (C554 * C15274 + C92183 * C15824) * C886 +
            (C554 * C15397 + C92183 * C15923) * C800) *
               C92072) *
              C46527) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C46523 +
            (C648 + C664) * C92072) *
               C92361 +
           ((C5444 * C181 + C5545 * C92105) * C46523 +
            (C4710 + C4711) * C92072) *
               C92356 +
           ((C5451 * C181 + C5546 * C92105) * C46523 +
            (C15122 + C15123) * C92072) *
               C46527) *
              C93 -
          (((C15124 + C15125) * C92072 + (C15123 + C15122) * C46523) * C46527 +
           ((C4713 + C4712) * C92072 + (C4711 + C4710) * C46523) * C92356 +
           ((C665 + C651) * C92072 + (C664 + C648) * C46523) * C92361) *
              C94 +
          ((C668 * C46523 + C669 * C92072) * C92361 +
           (C4716 * C46523 + (C4715 + C4714) * C92072) * C92356 +
           ((C15125 + C15124) * C46523 +
            ((C554 * C809 + C92183 * C1208) * C181 +
             (C554 * C894 + C92183 * C1274) * C92105) *
                C92072) *
               C46527) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C46523 +
            (C648 + C664) * C92072) *
               C92361 +
           ((C5444 * C181 + C5545 * C92105) * C46523 +
            (C4710 + C4711) * C92072) *
               C92356 +
           ((C5451 * C181 + C5546 * C92105) * C46523 +
            (C15122 + C15123) * C92072) *
               C46527) *
              C92084 * C1383 -
          (((C18529 + C18525) * C92072 +
            (C19509 * C92105 + C19404 * C181) * C46523) *
               C46527 +
           ((C8201 + C8193) * C92072 +
            (C9194 * C92105 + C9088 * C181) * C46523) *
               C92356 +
           ((C3275 + C3263) * C92072 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C46523) *
               C92361) *
              C92084 * C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C181 +
             (C554 * C1472 + C92183 * C1855) * C92105) *
                C46523 +
            ((C554 * C1391 + C92183 * C1790) * C181 +
             (C554 * C1473 + C92183 * C1856) * C92105) *
                C92072) *
               C92361 +
           (((C554 * C5719 + C92183 * C6199) * C181 +
             (C554 * C5805 + C92183 * C6279) * C92105) *
                C46523 +
            ((C554 * C5720 + C92183 * C6200) * C181 +
             (C554 * C5806 + C92183 * C6280) * C92105) *
                C92072) *
               C92356 +
           (((C554 * C16095 + C92183 * C16563) * C181 +
             (C554 * C16177 + C92183 * C16641) * C92105) *
                C46523 +
            ((C554 * C16096 + C92183 * C16564) * C181 +
             (C554 * C16178 + C92183 * C16642) * C92105) *
                C92072) *
               C46527) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C46523 +
            (C726 + C742) * C92072) *
               C92361 +
           ((C5626 + C5642) * C46523 + C7346 * C92072) * C92356 +
           C47951 * C46527) *
              C798 -
          (((C16020 + C16011) * C92072 + (C16021 + C16014) * C46523) * C46527 +
           (C17698 * C92072 + (C5645 + C5637) * C46523) * C92356 +
           (C7348 * C92072 + (C5642 + C5626) * C46523) * C92361) *
              C799 +
          (C47951 * C92361 +
           (C20626 * C46523 + (C16011 + C16020) * C92072) * C92356 +
           ((C20629 + C20632) * C46523 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92072) *
               C46527) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C46523 +
            (C726 + C742) * C92072) *
               C92361 +
           ((C5626 + C5642) * C46523 + C7346 * C92072) * C92356 +
           (C16007 * C46523 + C16008 * C92072) * C46527) *
              C92105 * C93 -
          (((C5643 + C5631) * C92072 + C17698 * C46523) * C46527 +
           (C7347 * C92072 + C7348 * C46523) * C92356 +
           ((C743 + C729) * C92072 + (C742 + C726) * C46523) * C92361) *
              C92105 * C94 +
          ((C746 * C46523 + C747 * C92072) * C92361 +
           (C4791 * C46523 + (C2631 + C2641) * C92072) * C92356 +
           ((C5631 + C5643) * C46523 +
            ((C554 * C809 + C92183 * C1208) * C244 +
             (C554 * C960 + C92183 * C1332) * C92116) *
                C92072) *
               C46527) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1534 +
            (C554 * C245 + C92183 * C719) * C1383 -
            (C554 * C1389 + C92183 * C1788) * C1535 -
            (C554 * C1540 + C92183 * C1909) * C1384 +
            (C554 * C1390 + C92183 * C1789) * C1536 +
            (C554 * C1541 + C92183 * C1910) * C1385) *
               C46523 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92183 * C1790) * C1536 +
            (C554 * C1542 + C92183 * C1912) * C1385) *
               C92072) *
              C92361 +
          ((C5444 * C1534 + C5638 * C1383 - C9088 * C1535 - C9301 * C1384 +
            (C554 * C5719 + C92183 * C6199) * C1536 +
            (C554 * C5885 + C92183 * C6356) * C1385) *
               C46523 +
           (C2468 * C1534 + C2640 * C1383 - C8091 * C1535 - C8311 * C1384 +
            (C554 * C5720 + C92183 * C6200) * C1536 +
            (C554 * C5886 + C92183 * C6357) * C1385) *
               C92072) *
              C92356 +
          ((C5451 * C1534 + C5641 * C1383 - C19404 * C1535 - C19615 * C1384 +
            (C554 * C16095 + C92183 * C16563) * C1536 +
            (C554 * C16255 + C92183 * C16717) * C1385) *
               C46523 +
           (C5449 * C1534 + C5640 * C1383 - C18425 * C1535 - C18633 * C1384 +
            (C554 * C16096 + C92183 * C16564) * C1536 +
            (C554 * C16256 + C92183 * C16718) * C1385) *
               C92072) *
              C46527) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C1987 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C1983 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C1988 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C1984) *
               C92361 +
           ((C47296 + C47297) * C1987 + (C47298 + C47299) * C1983 -
            (C48732 + C48733) * C1988 - (C48734 + C48735) * C1984) *
               C92356 +
           (C47308 * C1987 + C47309 * C1983 - (C48736 + C48737) * C1988 -
            (C48738 + C48739) * C1984) *
               C46527) *
              C92183 * C2709 +
          (((C46528 * C1388 + C46523 * C1400 + C46529 * C1387 +
             C92072 * C1399) *
                C1988 -
            ((C46529 * C1396 + C92072 * C1412 + C46528 * C1397 +
              C46523 * C1413) *
                 C1983 +
             (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
              C46523 * C1401) *
                 C1987) +
            (C46528 * C1396 + C46523 * C1412 + C46529 * C1395 +
             C92072 * C1411) *
                C1984) *
               C92361 +
           ((C46528 * C3432 + C46523 * C3436 + C46529 * C3433 +
             C92072 * C3437) *
                C1988 -
            ((C46529 * C3440 + C92072 * C3444 + C46528 * C3439 +
              C46523 * C3443) *
                 C1983 +
             (C46529 * C3432 + C92072 * C3436 + C46528 * C3431 +
              C46523 * C3435) *
                 C1987) +
            (C46528 * C3440 + C46523 * C3444 + C46529 * C3441 +
             C92072 * C3445) *
                C1984) *
               C92356 +
           ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
             C92072 * C8417) *
                C1988 -
            ((C46529 * C8419 + C92072 * C8422 + C46528 * C8418 +
              C46523 * C8421) *
                 C1983 +
             (C46529 * C8413 + C92072 * C8416 + C46528 * C8412 +
              C46523 * C8415) *
                 C1987) +
            (C46528 * C8419 + C46523 * C8422 + C46529 * C8420 +
             C92072 * C8423) *
                C1984) *
               C46527) *
              C92183 * C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C92361 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92356 +
            (C47308 * C181 + C47405 * C92105) * C46527) *
               C92183 * C1983 -
           (((C48849 + C48848) * C92105 + (C48736 + C48737) * C181) * C46527 +
            ((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92356 +
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C92105 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C181) *
                C92361) *
               C92183 * C1984) *
              C2709 +
          ((((C46528 * C1388 + C46523 * C1400 + C46529 * C1387 +
              C92072 * C1399) *
                 C181 +
             (C46528 * C1470 + C46523 * C1478 + C46529 * C1469 +
              C92072 * C1477) *
                 C92105) *
                C92361 +
            ((C46528 * C3432 + C46523 * C3436 + C46529 * C3433 +
              C92072 * C3437) *
                 C181 +
             (C46528 * C3514 + C46523 * C3518 + C46529 * C3515 +
              C92072 * C3519) *
                 C92105) *
                C92356 +
            ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
              C92072 * C8417) *
                 C181 +
             (C46528 * C8541 + C46523 * C8544 + C46529 * C8542 +
              C92072 * C8545) *
                 C92105) *
                C46527) *
               C92183 * C1984 -
           (((C46529 * C8541 + C92072 * C8544 + C46528 * C8540 +
              C46523 * C8543) *
                 C92105 +
             (C46529 * C8413 + C92072 * C8416 + C46528 * C8412 +
              C46523 * C8415) *
                 C181) *
                C46527 +
            ((C46529 * C3514 + C92072 * C3518 + C46528 * C3513 +
              C46523 * C3517) *
                 C92105 +
             (C46529 * C3432 + C92072 * C3436 + C46528 * C3431 +
              C46523 * C3435) *
                 C181) *
                C92356 +
            ((C46529 * C1470 + C92072 * C1478 + C46528 * C1471 +
              C46523 * C1479) *
                 C92105 +
             (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
              C46523 * C1401) *
                 C181) *
                C92361) *
               C92183 * C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2849 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C2709 -
            (C46529 * C1388 + C92072 * C1400 + C46528 * C1389 +
             C46523 * C1401) *
                C2850 -
            (C46529 * C1539 + C92072 * C1547 + C46528 * C1540 +
             C46523 * C1548) *
                C2710) *
               C92361 +
           ((C47296 + C47297) * C2849 + (C47493 + C47494) * C2709 -
            (C46529 * C3432 + C92072 * C3436 + C46528 * C3431 +
             C46523 * C3435) *
                C2850 -
            (C46529 * C3588 + C92072 * C3592 + C46528 * C3587 +
             C46523 * C3591) *
                C2710) *
               C92356 +
           (C47308 * C2849 + C47499 * C2709 -
            (C46529 * C8413 + C92072 * C8416 + C46528 * C8412 +
             C46523 * C8415) *
                C2850 -
            (C46529 * C8654 + C92072 * C8657 + C46528 * C8653 +
             C46523 * C8656) *
                C2710) *
               C46527) *
              C92183 * C92105 * C1983 +
          (((C46528 * C1388 + C46523 * C1400 + C46529 * C1387 +
             C92072 * C1399) *
                C2850 -
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C2709 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C2849) +
            (C46528 * C1539 + C46523 * C1547 + C46529 * C1538 +
             C92072 * C1546) *
                C2710) *
               C92361 +
           ((C46528 * C3432 + C46523 * C3436 + C46529 * C3433 +
             C92072 * C3437) *
                C2850 -
            ((C48957 + C48956) * C2709 + (C48732 + C48733) * C2849) +
            (C46528 * C3588 + C46523 * C3592 + C46529 * C3589 +
             C92072 * C3593) *
                C2710) *
               C92356 +
           ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
             C92072 * C8417) *
                C2850 -
            ((C48959 + C48958) * C2709 + (C48736 + C48737) * C2849) +
            (C46528 * C8654 + C46523 * C8657 + C46529 * C8655 +
             C92072 * C8658) *
                C2710) *
               C46527) *
              C92183 * C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C1987 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C1983 -
                     (C46780 + C46781 + C46782) * C1988 -
                     (C46783 + C46784 + C46785) * C1984) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C1987 +
                     (C46785 + C46784 + C46783) * C1983 -
                     (C46788 + C46787 + C46786) * C1988 -
                     (C46791 + C46790 + C46789) * C1984) *
                        C92183 * C92072) *
                       C2709 +
                   (((C49988 + C49989 + C49990) * C1988 -
                     ((C46754 * C8418 + C46527 * C8769 + C46753 * C3439 +
                       C92356 * C3665 + C46752 * C1397 + C92361 * C1614) *
                          C1983 +
                      (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                       C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                          C1987) +
                     (C49991 + C49992 + C49993) * C1984) *
                        C92183 * C46523 +
                    ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                      C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                         C1988 -
                     ((C49993 + C49992 + C49991) * C1983 +
                      (C49990 + C49989 + C49988) * C1987) +
                     (C46752 * C1395 + C92361 * C1612 + C46753 * C3441 +
                      C92356 * C3667 + C46754 * C8420 + C46527 * C8771) *
                         C1984) *
                        C92183 * C92072) *
                       C2710) *
                  C92105) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C181 +
                      (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                       C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                          C92105) *
                         C92183 * C46523 +
                     ((C46782 + C46781 + C46780) * C181 +
                      (C46878 + C46879 + C46880) * C92105) *
                         C92183 * C92072) *
                        C1983 -
                    (((C46881 + C46882 + C46883) * C92105 +
                      (C46788 + C46787 + C46786) * C181) *
                         C92183 * C92072 +
                     ((C46880 + C46879 + C46878) * C92105 +
                      (C46780 + C46781 + C46782) * C181) *
                         C92183 * C46523) *
                        C1984) *
                       C2709 +
                   ((((C49988 + C49989 + C49990) * C181 +
                      (C50098 + C50099 + C50100) * C92105) *
                         C92183 * C46523 +
                     ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                       C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                          C181 +
                      (C46752 * C1469 + C92361 * C1670 + C46753 * C3515 +
                       C92356 * C3737 + C46754 * C8542 + C46527 * C8872) *
                          C92105) *
                         C92183 * C92072) *
                        C1984 -
                    (((C50100 + C50099 + C50098) * C92105 +
                      (C49990 + C49989 + C49988) * C181) *
                         C92183 * C92072 +
                     ((C46754 * C8540 + C46527 * C8870 + C46753 * C3513 +
                       C92356 * C3735 + C46752 * C1471 + C92361 * C1672) *
                          C92105 +
                      (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                       C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                          C181) *
                         C92183 * C46523) *
                        C1983) *
                       C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C2849 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C2709 -
                     (C46754 * C8412 + C46527 * C8766 + C46753 * C3431 +
                      C92356 * C3661 + C46752 * C1389 + C92361 * C1606) *
                         C2850 -
                     (C46754 * C8653 + C46527 * C8971 + C46753 * C3587 +
                      C92356 * C3805 + C46752 * C1540 + C92361 * C1727) *
                         C2710) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C2849 +
                     (C46970 + C46971 + C46972) * C2709 -
                     (C49990 + C49989 + C49988) * C2850 -
                     (C50205 + C50206 + C50207) * C2710) *
                        C92183 * C92072) *
                       C92105 * C1983 +
                   (((C49988 + C49989 + C49990) * C2850 -
                     ((C46972 + C46971 + C46970) * C2709 +
                      (C46780 + C46781 + C46782) * C2849) +
                     (C50207 + C50206 + C50205) * C2710) *
                        C92183 * C46523 +
                    ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                      C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                         C2850 -
                     ((C46973 + C46974 + C46975) * C2709 +
                      (C46788 + C46787 + C46786) * C2849) +
                     (C46752 * C1538 + C92361 * C1731 + C46753 * C3589 +
                      C92356 * C3807 + C46754 * C8655 + C46527 * C8973) *
                         C2710) *
                        C92183 * C92072) *
                       C92105 * C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C46523 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92072) *
               C92361 +
           ((C7130 + C7131 - C7132 - C7133) * C46523 +
            (C7134 + C7135 - C7136 - C7137) * C92072) *
               C92356 +
           ((C17490 + C17491 - C17492 - C17493) * C46523 +
            (C17494 + C17495 - C17496 - C17497) * C92072) *
               C46527) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92183 * C1796) * C1983 +
              (C554 * C1389 + C92183 * C1788) * C1987) +
             C3191 * C1984) *
                C46523 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92072) *
               C92361 +
           ((C8091 * C1988 - (C9087 * C1983 + C9088 * C1987) + C8092 * C1984) *
                C46523 +
            (C8093 * C1988 - (C8092 * C1983 + C8091 * C1987) + C8094 * C1984) *
                C92072) *
               C92356 +
           ((C18425 * C1988 - (C19403 * C1983 + C19404 * C1987) +
             C18426 * C1984) *
                C46523 +
            ((C554 * C8414 + C92183 * C9074) * C1988 -
             (C18426 * C1983 + C18425 * C1987) +
             (C554 * C8420 + C92183 * C9077) * C1984) *
                C92072) *
               C46527) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C181 +
              (C554 * C182 + C92183 * C641) * C92105) *
                 C46523 +
             (C648 + C664) * C92072) *
                C92361 +
            ((C5444 * C181 + C5545 * C92105) * C46523 +
             (C4710 + C4711) * C92072) *
                C92356 +
            ((C5451 * C181 + C5546 * C92105) * C46523 +
             (C15122 + C15123) * C92072) *
                C46527) *
               C1983 -
           (((C15124 + C15125) * C92072 + (C15123 + C15122) * C46523) * C46527 +
            ((C4713 + C4712) * C92072 + (C4711 + C4710) * C46523) * C92356 +
            ((C665 + C651) * C92072 + (C664 + C648) * C46523) * C92361) *
               C1984) *
              C2709 +
          ((((C3263 + C3275) * C46523 + (C3266 + C3276) * C92072) * C92361 +
            ((C8193 + C8201) * C46523 + (C8196 + C8202) * C92072) * C92356 +
            ((C18525 + C18529) * C46523 +
             ((C554 * C8414 + C92183 * C9074) * C181 +
              (C554 * C8542 + C92183 * C9190) * C92105) *
                 C92072) *
                C46527) *
               C1984 -
           (((C18529 + C18525) * C92072 +
             (C19509 * C92105 + C19404 * C181) * C46523) *
                C46527 +
            ((C8201 + C8193) * C92072 +
             (C9194 * C92105 + C9088 * C181) * C46523) *
                C92356 +
            ((C3275 + C3263) * C92072 +
             ((C554 * C1471 + C92183 * C1854) * C92105 +
              (C554 * C1389 + C92183 * C1788) * C181) *
                 C46523) *
                C92361) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C46523 +
                     (C3345 + C3346 - C3347 - C3363) * C92072) *
                        C92361 +
                    ((C9296 + C9297 - C9298 - C9302) * C46523 +
                     (C8301 + C8302 - C8303 - C8313) * C92072) *
                        C92356 +
                    ((C19610 + C19611 - C19612 - C19616) * C46523 +
                     (C18628 + C18629 - C18630 - C18634) * C92072) *
                        C46527) *
                       C92105 * C1983 +
                   (((C3347 - (C3346 + C3345) + C3363) * C46523 +
                     (C3352 - (C3351 + C3350) + C3364) * C92072) *
                        C92361 +
                    ((C8303 - (C8302 + C8301) + C8313) * C46523 +
                     (C8308 - (C8307 + C8306) + C8314) * C92072) *
                        C92356 +
                    ((C18630 - (C18629 + C18628) + C18634) * C46523 +
                     ((C554 * C8414 + C92183 * C9074) * C2850 -
                      (C5639 * C2709 + C5447 * C2849) +
                      (C554 * C8655 + C92183 * C9294) * C2710) *
                         C92072) *
                        C46527) *
                       C92105 * C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C104 +
           (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
               C93 -
           (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
               C105 -
           (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
               C94 +
           (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
               C106 +
           (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
               C95) *
              C92361 +
          ((C46528 * C805 + C46523 * C817 + C46529 * C804 + C92072 * C816) *
               C104 +
           (C46528 * C813 + C46523 * C829 + C46529 * C812 + C92072 * C828) *
               C93 -
           (C46529 * C803 + C92072 * C815 + C46528 * C804 + C46523 * C816) *
               C105 -
           (C46529 * C811 + C92072 * C827 + C46528 * C812 + C46523 * C828) *
               C94 +
           (C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
               C106 +
           (C46528 * C811 + C46523 * C827 + C46529 * C810 + C92072 * C826) *
               C95) *
              C92356 +
          ((C46528 * C806 + C46523 * C818 + C46529 * C807 + C92072 * C819) *
               C104 +
           (C46528 * C822 + C46523 * C830 + C46529 * C823 + C92072 * C831) *
               C93 -
           (C46529 * C808 + C92072 * C820 + C46528 * C807 + C46523 * C819) *
               C105 -
           (C46529 * C824 + C92072 * C832 + C46528 * C823 + C46523 * C831) *
               C94 +
           (C46528 * C808 + C46523 * C820 + C46529 * C809 + C92072 * C821) *
               C106 +
           (C46528 * C824 + C46523 * C832 + C46529 * C825 + C92072 * C833) *
               C95) *
              C46527) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C801 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C92084) *
               C92361 +
           ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92356 +
           C47312 * C46527) *
              C92183 * C92116 * C798 -
          (((C47304 + C47305) * C92084 + (C47306 + C47307) * C801) * C46527 +
           ((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92356 +
           ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92361) *
              C92183 * C92116 * C799 +
          (C47312 * C92361 +
           ((C47307 + C47306) * C801 + (C47305 + C47304) * C92084) * C92356 +
           ((C46528 * C15273 + C46523 * C15275 + C46529 * C15274 +
             C92072 * C15276) *
                C801 +
            (C46528 * C15277 + C46523 * C15279 + C46529 * C15278 +
             C92072 * C15280) *
                C92084) *
               C46527) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C181 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C92105) *
               C92361 +
           ((C46528 * C805 + C46523 * C817 + C46529 * C804 + C92072 * C816) *
                C181 +
            (C46528 * C890 + C46523 * C898 + C46529 * C889 + C92072 * C897) *
                C92105) *
               C92356 +
           ((C46528 * C806 + C46523 * C818 + C46529 * C807 + C92072 * C819) *
                C181 +
            (C46528 * C891 + C46523 * C899 + C46529 * C892 + C92072 * C900) *
                C92105) *
               C46527) *
              C92183 * C93 -
          (((C46529 * C893 + C92072 * C901 + C46528 * C892 + C46523 * C900) *
                C92105 +
            (C46529 * C808 + C92072 * C820 + C46528 * C807 + C46523 * C819) *
                C181) *
               C46527 +
           ((C46529 * C888 + C92072 * C896 + C46528 * C889 + C46523 * C897) *
                C92105 +
            (C46529 * C803 + C92072 * C815 + C46528 * C804 + C46523 * C816) *
                C181) *
               C92356 +
           ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                C92105 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C181) *
               C92361) *
              C92183 * C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C181 +
            (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                C92105) *
               C92361 +
           ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C181 +
            (C46528 * C888 + C46523 * C896 + C46529 * C887 + C92072 * C895) *
                C92105) *
               C92356 +
           ((C46528 * C808 + C46523 * C820 + C46529 * C809 + C92072 * C821) *
                C181 +
            (C46528 * C893 + C46523 * C901 + C46529 * C894 + C92072 * C902) *
                C92105) *
               C46527) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C884 +
           (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
               C798 -
           (C47297 + C47296) * C885 - (C47399 + C47400) * C799 + C47308 * C886 +
           C47405 * C800) *
              C92361 +
          ((C47296 + C47297) * C884 + (C47400 + C47399) * C798 -
           (C47301 + C47300) * C885 - (C47402 + C47401) * C799 +
           (C47307 + C47306) * C886 + (C47403 + C47404) * C800) *
              C92356 +
          (C47308 * C884 + C47405 * C798 - (C47306 + C47307) * C885 -
           (C47404 + C47403) * C799 +
           (C46528 * C15273 + C46523 * C15275 + C46529 * C15274 +
            C92072 * C15276) *
               C886 +
           (C46528 * C15396 + C46523 * C15398 + C46529 * C15397 +
            C92072 * C15399) *
               C800) *
              C46527) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92361 +
           ((C46528 * C805 + C46523 * C817 + C46529 * C804 + C92072 * C816) *
                C244 +
            (C46528 * C956 + C46523 * C964 + C46529 * C955 + C92072 * C963) *
                C92116) *
               C92356 +
           ((C46528 * C806 + C46523 * C818 + C46529 * C807 + C92072 * C819) *
                C244 +
            (C46528 * C957 + C46523 * C965 + C46529 * C958 + C92072 * C966) *
                C92116) *
               C46527) *
              C92183 * C92105 * C93 -
          (((C46529 * C959 + C92072 * C967 + C46528 * C958 + C46523 * C966) *
                C92116 +
            (C46529 * C808 + C92072 * C820 + C46528 * C807 + C46523 * C819) *
                C244) *
               C46527 +
           ((C46529 * C954 + C92072 * C962 + C46528 * C955 + C46523 * C963) *
                C92116 +
            (C46529 * C803 + C92072 * C815 + C46528 * C804 + C46523 * C816) *
                C244) *
               C92356 +
           ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                C92116 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C244) *
               C92361) *
              C92183 * C92105 * C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C244 +
            (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                C92116) *
               C92361 +
           ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C244 +
            (C46528 * C954 + C46523 * C962 + C46529 * C953 + C92072 * C961) *
                C92116) *
               C92356 +
           ((C46528 * C808 + C46523 * C820 + C46529 * C809 + C92072 * C821) *
                C244 +
            (C46528 * C959 + C46523 * C967 + C46529 * C960 + C92072 * C968) *
                C92116) *
               C46527) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92361 +
           ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92356 +
           C47501 * C46527) *
              C92183 * C798 -
          (((C47497 + C47498) * C92116 + (C47306 + C47307) * C244) * C46527 +
           ((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92356 +
           ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92361) *
              C92183 * C799 +
          (C47501 * C92361 +
           ((C47307 + C47306) * C244 + (C47498 + C47497) * C92116) * C92356 +
           ((C46528 * C15273 + C46523 * C15275 + C46529 * C15274 +
             C92072 * C15276) *
                C244 +
            (C46528 * C15493 + C46523 * C15495 + C46529 * C15494 +
             C92072 * C15496) *
                C92116) *
               C46527) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                     C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                        C104 +
                    (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                     C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                        C93 -
                    (C46780 + C46781 + C46782) * C105 -
                    (C46783 + C46784 + C46785) * C94 +
                    (C46786 + C46787 + C46788) * C106 +
                    (C46789 + C46790 + C46791) * C95) *
                       C92183 * C46523 +
                   ((C46782 + C46781 + C46780) * C104 +
                    (C46785 + C46784 + C46783) * C93 -
                    (C46788 + C46787 + C46786) * C105 -
                    (C46791 + C46790 + C46789) * C94 +
                    (C46752 * C110 + C92361 * C311 + C46753 * C802 +
                     C92356 * C1019 + C46754 * C809 + C46527 * C1026) *
                        C106 +
                    (C46752 * C120 + C92361 * C317 + C46753 * C810 +
                     C92356 * C1027 + C46754 * C825 + C46527 * C1034) *
                        C95) *
                       C92183 * C92072) *
                  C92116 * C92105) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C801 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C92084) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C801 +
                     (C46785 + C46784 + C46783) * C92084) *
                        C92183 * C92072) *
                       C92116 * C798 -
                   (((C46754 * C4872 + C46527 * C5187 + C46753 * C823 +
                      C92356 * C1032 + C46752 * C812 + C92361 * C1029) *
                         C92084 +
                     (C46754 * C4866 + C46527 * C5184 + C46753 * C807 +
                      C92356 * C1024 + C46752 * C804 + C92361 * C1021) *
                         C801) *
                        C92183 * C92072 +
                    ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                      C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                         C92084 +
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C801) *
                        C92183 * C46523) *
                       C92116 * C799 +
                   (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                      C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                         C801 +
                     (C46752 * C822 + C92361 * C1031 + C46753 * C4871 +
                      C92356 * C5186 + C46754 * C15277 + C46527 * C15595) *
                         C92084) *
                        C92183 * C46523 +
                    ((C46752 * C807 + C92361 * C1024 + C46753 * C4866 +
                      C92356 * C5184 + C46754 * C15274 + C46527 * C15594) *
                         C801 +
                     (C46752 * C823 + C92361 * C1032 + C46753 * C4872 +
                      C92356 * C5187 + C46754 * C15278 + C46527 * C15596) *
                         C92084) *
                        C92183 * C92072) *
                       C92116 * C800)) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C181 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C92105) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C181 +
                     (C46878 + C46879 + C46880) * C92105) *
                        C92183 * C92072) *
                       C93 -
                   (((C46881 + C46882 + C46883) * C92105 +
                     (C46788 + C46787 + C46786) * C181) *
                        C92183 * C92072 +
                    ((C46880 + C46879 + C46878) * C92105 +
                     (C46780 + C46781 + C46782) * C181) *
                        C92183 * C46523) *
                       C94 +
                   (((C46786 + C46787 + C46788) * C181 +
                     (C46883 + C46882 + C46881) * C92105) *
                        C92183 * C46523 +
                    ((C46752 * C110 + C92361 * C311 + C46753 * C802 +
                      C92356 * C1019 + C46754 * C809 + C46527 * C1026) *
                         C181 +
                     (C46752 * C185 + C92361 * C397 + C46753 * C887 +
                      C92356 * C1091 + C46754 * C894 + C46527 * C1092) *
                         C92105) *
                        C92183 * C92072) *
                       C95) *
                  C92116) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                     C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                        C884 +
                    (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                     C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                        C798 -
                    (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                     C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                        C885 -
                    (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                     C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                        C799 +
                    (C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                     C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                        C886 +
                    (C46752 * C891 + C92361 * C1086 + C46753 * C4987 +
                     C92356 * C5263 + C46754 * C15396 + C46527 * C15671) *
                        C800) *
                       C92183 * C46523 +
                   ((C46782 + C46781 + C46780) * C884 +
                    (C46878 + C46879 + C46880) * C798 -
                    (C46754 * C4866 + C46527 * C5184 + C46753 * C807 +
                     C92356 * C1024 + C46752 * C804 + C92361 * C1021) *
                        C885 -
                    (C46754 * C4988 + C46527 * C5264 + C46753 * C892 +
                     C92356 * C1088 + C46752 * C889 + C92361 * C1087) *
                        C799 +
                    (C46752 * C807 + C92361 * C1024 + C46753 * C4866 +
                     C92356 * C5184 + C46754 * C15274 + C46527 * C15594) *
                        C886 +
                    (C46752 * C892 + C92361 * C1088 + C46753 * C4988 +
                     C92356 * C5264 + C46754 * C15397 + C46527 * C15672) *
                        C800) *
                       C92183 * C92072) *
                  C92084 * C92116) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C244 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C92116) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C244 +
                     (C46970 + C46971 + C46972) * C92116) *
                        C92183 * C92072) *
                       C92105 * C93 -
                   (((C46973 + C46974 + C46975) * C92116 +
                     (C46788 + C46787 + C46786) * C244) *
                        C92183 * C92072 +
                    ((C46972 + C46971 + C46970) * C92116 +
                     (C46780 + C46781 + C46782) * C244) *
                        C92183 * C46523) *
                       C92105 * C94 +
                   (((C46786 + C46787 + C46788) * C244 +
                     (C46975 + C46974 + C46973) * C92116) *
                        C92183 * C46523 +
                    ((C46752 * C110 + C92361 * C311 + C46753 * C802 +
                      C92356 * C1019 + C46754 * C809 + C46527 * C1026) *
                         C244 +
                     (C46752 * C248 + C92361 * C477 + C46753 * C953 +
                      C92356 * C1143 + C46754 * C960 + C46527 * C1150) *
                         C92116) *
                        C92183 * C92072) *
                       C92105 * C95)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C244 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C92116) *
                        C92183 * C46523 +
                    ((C46782 + C46781 + C46780) * C244 +
                     (C46970 + C46971 + C46972) * C92116) *
                        C92183 * C92072) *
                       C798 -
                   (((C46754 * C5086 + C46527 * C5341 + C46753 * C958 +
                      C92356 * C1148 + C46752 * C955 + C92361 * C1145) *
                         C92116 +
                     (C46754 * C4866 + C46527 * C5184 + C46753 * C807 +
                      C92356 * C1024 + C46752 * C804 + C92361 * C1021) *
                         C244) *
                        C92183 * C92072 +
                    ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                      C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                         C92116 +
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C244) *
                        C92183 * C46523) *
                       C799 +
                   (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                      C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                         C244 +
                     (C46752 * C957 + C92361 * C1147 + C46753 * C5085 +
                      C92356 * C5340 + C46754 * C15493 + C46527 * C15747) *
                         C92116) *
                        C92183 * C46523 +
                    ((C46752 * C807 + C92361 * C1024 + C46753 * C4866 +
                      C92356 * C5184 + C46754 * C15274 + C46527 * C15594) *
                         C244 +
                     (C46752 * C958 + C92361 * C1148 + C46753 * C5086 +
                      C92356 * C5341 + C46754 * C15494 + C46527 * C15748) *
                         C92116) *
                        C92183 * C92072) *
                       C800) *
                  C92084) /
                     (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C46523 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92072) *
              C92361 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C46523 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92072) *
              C92356 +
          ((C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
            C5447 * C106 + C5446 * C95) *
               C46523 +
           (C5449 * C104 + C5448 * C93 - C5447 * C105 - C5446 * C94 +
            (C554 * C809 + C92183 * C1208) * C106 +
            (C554 * C825 + C92183 * C1216) * C95) *
               C92072) *
              C46527) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C46523 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C92361 +
           ((C5452 + C5453) * C46523 + (C5428 + C5429) * C92072) * C92356 +
           C47800 * C46527) *
              C92116 * C798 -
          (((C15845 + C15846) * C92072 + (C15847 + C15848) * C46523) * C46527 +
           ((C5456 + C5457) * C92072 + (C5458 + C5459) * C46523) * C92356 +
           ((C5429 + C5428) * C92072 + (C5453 + C5452) * C46523) * C92361) *
              C92116 * C799 +
          (C47800 * C92361 +
           (C20510 * C46523 + (C15846 + C15845) * C92072) * C92356 +
           ((C20519 + C20518) * C46523 +
            ((C554 * C15274 + C92183 * C15824) * C801 +
             (C554 * C15278 + C92183 * C15826) * C92084) *
                C92072) *
               C46527) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C46523 +
            (C648 + C664) * C92072) *
               C92361 +
           ((C5444 * C181 + C5545 * C92105) * C46523 +
            (C4710 + C4711) * C92072) *
               C92356 +
           ((C5451 * C181 + C5546 * C92105) * C46523 +
            (C15122 + C15123) * C92072) *
               C46527) *
              C93 -
          (((C15124 + C15125) * C92072 + (C15123 + C15122) * C46523) * C46527 +
           ((C4713 + C4712) * C92072 + (C4711 + C4710) * C46523) * C92356 +
           ((C665 + C651) * C92072 + (C664 + C648) * C46523) * C92361) *
              C94 +
          ((C668 * C46523 + C669 * C92072) * C92361 +
           (C4716 * C46523 + (C4715 + C4714) * C92072) * C92356 +
           ((C15125 + C15124) * C46523 +
            ((C554 * C809 + C92183 * C1208) * C181 +
             (C554 * C894 + C92183 * C1274) * C92105) *
                C92072) *
               C46527) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C46523 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92072) *
              C92361 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C46523 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92072) *
              C92356 +
          ((C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
            C20517 * C886 + C20573 * C800) *
               C46523 +
           (C5449 * C884 + C5547 * C798 - C15841 * C885 - C15930 * C799 +
            (C554 * C15274 + C92183 * C15824) * C886 +
            (C554 * C15397 + C92183 * C15923) * C800) *
               C92072) *
              C46527) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C46523 +
            (C726 + C742) * C92072) *
               C92361 +
           ((C5626 + C5642) * C46523 + C7346 * C92072) * C92356 +
           (C16007 * C46523 + C16008 * C92072) * C46527) *
              C92105 * C93 -
          (((C5643 + C5631) * C92072 + C17698 * C46523) * C46527 +
           (C7347 * C92072 + C7348 * C46523) * C92356 +
           ((C743 + C729) * C92072 + (C742 + C726) * C46523) * C92361) *
              C92105 * C94 +
          ((C746 * C46523 + C747 * C92072) * C92361 +
           (C4791 * C46523 + (C2631 + C2641) * C92072) * C92356 +
           ((C5631 + C5643) * C46523 +
            ((C554 * C809 + C92183 * C1208) * C244 +
             (C554 * C960 + C92183 * C1332) * C92116) *
                C92072) *
               C46527) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C46523 +
            (C726 + C742) * C92072) *
               C92361 +
           ((C5626 + C5642) * C46523 + C7346 * C92072) * C92356 +
           C47951 * C46527) *
              C798 -
          (((C16020 + C16011) * C92072 + (C16021 + C16014) * C46523) * C46527 +
           (C17698 * C92072 + (C5645 + C5637) * C46523) * C92356 +
           (C7348 * C92072 + (C5642 + C5626) * C46523) * C92361) *
              C799 +
          (C47951 * C92361 +
           (C20626 * C46523 + (C16011 + C16020) * C92072) * C92356 +
           ((C20629 + C20632) * C46523 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92072) *
               C46527) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C1987 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C1983 -
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C1988 -
             (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                 C1984) *
                C41548 +
            ((C47296 + C47297) * C1987 + (C47298 + C47299) * C1983 -
             (C48732 + C48733) * C1988 - (C48734 + C48735) * C1984) *
                C92171) *
               C92337 +
           (((C53318 + C53319) * C1987 + (C53320 + C53321) * C1983 -
             (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
              C46523 * C1400) *
                 C1988 -
             (C46529 * C1395 + C92072 * C1411 + C46528 * C1396 +
              C46523 * C1412) *
                 C1984) *
                C41548 +
            ((C50623 + C50622) * C1987 + (C50621 + C50620) * C1983 -
             (C54360 + C54361) * C1988 - (C54362 + C54363) * C1984) *
                C92171) *
               C92195) *
              C92116 * C1985 +
          ((((C48733 + C48732) * C1988 -
             ((C47299 + C47298) * C1983 + (C47297 + C47296) * C1987) +
             (C48735 + C48734) * C1984) *
                C41548 +
            ((C48737 + C48736) * C1988 -
             ((C47303 + C47302) * C1983 + (C47301 + C47300) * C1987) +
             (C48739 + C48738) * C1984) *
                C92171) *
               C92337 +
           (((C54361 + C54360) * C1988 -
             ((C50620 + C50621) * C1983 + (C50622 + C50623) * C1987) +
             (C54363 + C54362) * C1984) *
                C41548 +
            ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
              C92072 * C8417) *
                 C1988 -
             ((C50616 + C50617) * C1983 + (C50618 + C50619) * C1987) +
             (C46528 * C8419 + C46523 * C8422 + C46529 * C8420 +
              C92072 * C8423) *
                 C1984) *
                C92171) *
               C92195) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2059 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C1985 -
             (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
                C41548 +
            ((C47296 + C47297) * C2059 + (C47400 + C47399) * C1985 -
             (C47301 + C47300) * C2060 - (C47402 + C47401) * C1986) *
                C92171) *
               C92337 +
           (((C53318 + C53319) * C2059 + (C53440 + C53441) * C1985 -
             (C50622 + C50623) * C2060 - (C50731 + C50730) * C1986) *
                C41548 +
            ((C50623 + C50622) * C2059 + (C50730 + C50731) * C1985 -
             (C50618 + C50619) * C2060 - (C50733 + C50732) * C1986) *
                C92171) *
               C92195) *
              C1983 +
          ((((C48733 + C48732) * C2060 -
             ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                  C1985 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C2059) +
             (C48846 + C48847) * C1986) *
                C41548 +
            ((C48737 + C48736) * C2060 -
             ((C48847 + C48846) * C1985 + (C48732 + C48733) * C2059) +
             (C48848 + C48849) * C1986) *
                C92171) *
               C92337 +
           (((C54361 + C54360) * C2060 -
             ((C46529 * C1469 + C92072 * C1477 + C46528 * C1470 +
               C46523 * C1478) *
                  C1985 +
              (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
               C46523 * C1400) *
                  C2059) +
             (C54498 + C54499) * C1986) *
                C41548 +
            ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
              C92072 * C8417) *
                 C2060 -
             ((C54499 + C54498) * C1985 + (C54360 + C54361) * C2059) +
             (C46528 * C8541 + C46523 * C8544 + C46529 * C8542 +
              C92072 * C8545) *
                 C1986) *
                C92171) *
               C92195) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                  C244 +
              (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                  C92116) *
                 C41548 +
             ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
                C92337 +
            (((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C41548 +
             ((C50623 + C50622) * C244 + (C50841 + C50840) * C92116) * C92171) *
                C92195) *
               C1985 -
           ((((C50842 + C50843) * C92116 + (C50618 + C50619) * C244) * C92171 +
             ((C50840 + C50841) * C92116 + (C50622 + C50623) * C244) * C41548) *
                C92195 +
            (((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92171 +
             ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C41548) *
                C92337) *
               C1986) *
              C1983 +
          (((((C48733 + C48732) * C244 + (C48956 + C48957) * C92116) * C41548 +
             ((C48737 + C48736) * C244 + (C48958 + C48959) * C92116) * C92171) *
                C92337 +
            (((C54361 + C54360) * C244 + (C54634 + C54635) * C92116) * C41548 +
             ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
               C92072 * C8417) *
                  C244 +
              (C46528 * C8654 + C46523 * C8657 + C46529 * C8655 +
               C92072 * C8658) *
                  C92116) *
                 C92171) *
                C92195) *
               C1986 -
           ((((C54635 + C54634) * C92116 + (C54360 + C54361) * C244) * C92171 +
             ((C46529 * C1538 + C92072 * C1546 + C46528 * C1539 +
               C46523 * C1547) *
                  C92116 +
              (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
               C46523 * C1400) *
                  C244) *
                 C41548) *
                C92195 +
            (((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92171 +
             ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                  C92116 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C244) *
                 C41548) *
                C92337) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C1987 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C1983 -
             (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
                C92337 +
            ((C53684 + C53685) * C1987 + (C53686 + C53687) * C1983 -
             (C45011 + C45010) * C1988 - (C45013 + C45012) * C1984) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C1987 + (C41805 + C41804) * C1983 -
             (C41807 + C41806) * C1988 - (C41809 + C41808) * C1984) *
                C92337 +
            ((C45010 + C45011) * C1987 + (C45012 + C45013) * C1983 -
             (C45015 + C45014) * C1988 - (C45017 + C45016) * C1984) *
                C92195) *
               C92072) *
              C92116 * C1985 +
          ((((C44080 + C44081) * C1988 -
             ((C41776 * C822 + C92171 * C1031 + C41775 * C813 +
               C41548 * C1030) *
                  C1983 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C1987) +
             (C44082 + C44083) * C1984) *
                C92337 +
            ((C54774 + C54775) * C1988 -
             ((C41776 * C8418 + C92171 * C8769 + C41775 * C3439 +
               C41548 * C3665) *
                  C1983 +
              (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
               C41548 * C3661) *
                  C1987) +
             (C54776 + C54777) * C1984) *
                C92195) *
               C46523 +
           (((C44084 + C44085) * C1988 -
             ((C44083 + C44082) * C1983 + (C44081 + C44080) * C1987) +
             (C44086 + C44087) * C1984) *
                C92337 +
            ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
              C92171 * C8768) *
                 C1988 -
             ((C54777 + C54776) * C1983 + (C54775 + C54774) * C1987) +
             (C41775 * C3441 + C41548 * C3667 + C41776 * C8420 +
              C92171 * C8771) *
                 C1984) *
                C92195) *
               C92072) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2059 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C1985 -
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C2060 -
             (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                 C1986) *
                C92337 +
            ((C53684 + C53685) * C2059 + (C53806 + C53807) * C1985 -
             (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
              C41548 * C3661) *
                 C2060 -
             (C41776 * C8540 + C92171 * C8870 + C41775 * C3513 +
              C41548 * C3735) *
                 C1986) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C2059 + (C41903 + C41904) * C1985 -
             (C44081 + C44080) * C2060 - (C44194 + C44195) * C1986) *
                C92337 +
            ((C45010 + C45011) * C2059 + (C45124 + C45125) * C1985 -
             (C54775 + C54774) * C2060 - (C54912 + C54913) * C1986) *
                C92195) *
               C92072) *
              C1983 +
          ((((C44080 + C44081) * C2060 -
             ((C41904 + C41903) * C1985 + (C41802 + C41803) * C2059) +
             (C44195 + C44194) * C1986) *
                C92337 +
            ((C54774 + C54775) * C2060 -
             ((C45125 + C45124) * C1985 + (C45011 + C45010) * C2059) +
             (C54913 + C54912) * C1986) *
                C92195) *
               C46523 +
           (((C44084 + C44085) * C2060 -
             ((C41906 + C41905) * C1985 + (C41807 + C41806) * C2059) +
             (C44197 + C44196) * C1986) *
                C92337 +
            ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
              C92171 * C8768) *
                 C2060 -
             ((C45127 + C45126) * C1985 + (C45015 + C45014) * C2059) +
             (C41775 * C3515 + C41548 * C3737 + C41776 * C8542 +
              C92171 * C8872) *
                 C1986) *
                C92195) *
               C92072) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eeyz[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                  C244 +
              (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                  C92116) *
                 C92337 +
             ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92195) *
                C46523 +
            (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92337 +
             ((C45010 + C45011) * C244 + (C45235 + C45234) * C92116) * C92195) *
                C92072) *
               C1985 -
           ((((C55048 + C55049) * C92116 + (C54775 + C54774) * C244) * C92195 +
             ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C92337) *
                C92072 +
            (((C41776 * C8653 + C92171 * C8971 + C41775 * C3587 +
               C41548 * C3805) *
                  C92116 +
              (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
               C41548 * C3661) *
                  C244) *
                 C92195 +
             ((C41776 * C957 + C92171 * C1147 + C41775 * C956 +
               C41548 * C1146) *
                  C92116 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C244) *
                 C92337) *
                C46523) *
               C1986) *
              C1983 +
          (((((C44080 + C44081) * C244 + (C44307 + C44306) * C92116) * C92337 +
             ((C54774 + C54775) * C244 + (C55049 + C55048) * C92116) * C92195) *
                C46523 +
            (((C44084 + C44085) * C244 + (C44305 + C44304) * C92116) * C92337 +
             ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
               C92171 * C8768) *
                  C244 +
              (C41775 * C3589 + C41548 * C3807 + C41776 * C8655 +
               C92171 * C8973) *
                  C92116) *
                 C92195) *
                C92072) *
               C1986 -
           ((((C45236 + C45237) * C92116 + (C45015 + C45014) * C244) * C92195 +
             ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C92337) *
                C92072 +
            (((C45234 + C45235) * C92116 + (C45011 + C45010) * C244) * C92195 +
             ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92337) *
                C46523) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C1987 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C1983 -
             (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
                C46523 +
            ((C9864 + C9863) * C1987 + (C9866 + C9865) * C1983 -
             (C9868 + C9867) * C1988 - (C9870 + C9869) * C1984) *
                C92072) *
               C41548 +
           (((C24243 + C24244) * C1987 + (C24245 + C24246) * C1983 -
             C55180 * C1988 - C55181 * C1984) *
                C46523 +
            (C55182 * C1987 + C55183 * C1983 - (C12332 + C12331) * C1988 -
             (C12334 + C12333) * C1984) *
                C92072) *
               C92171) *
              C92116 * C1985 +
          (((C55182 * C1988 -
             ((C24246 + C24245) * C1983 + (C24244 + C24243) * C1987) +
             C55183 * C1984) *
                C46523 +
            ((C12331 + C12332) * C1988 - (C55181 * C1983 + C55180 * C1987) +
             (C12333 + C12334) * C1984) *
                C92072) *
               C41548 +
           (((C26020 + C26019) * C1988 -
             ((C24250 + C24249) * C1983 + (C24248 + C24247) * C1987) +
             (C26022 + C26021) * C1984) *
                C46523 +
            ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                 C1988 -
             ((C26021 + C26022) * C1983 + (C26019 + C26020) * C1987) +
             (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
                 C1984) *
                C92072) *
               C92171) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C2059 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C1985 -
             (C24244 + C24243) * C2060 - (C24347 + C24348) * C1986) *
                C46523 +
            ((C9864 + C9863) * C2059 + (C9964 + C9965) * C1985 -
             C55180 * C2060 - C55314 * C1986) *
                C92072) *
               C41548 +
           (((C24243 + C24244) * C2059 + (C24348 + C24347) * C1985 -
             (C24248 + C24247) * C2060 - (C24350 + C24349) * C1986) *
                C46523 +
            (C55182 * C2059 + C55315 * C1985 - (C26019 + C26020) * C2060 -
             (C26126 + C26125) * C1986) *
                C92072) *
               C92171) *
              C1983 +
          (((C55182 * C2060 -
             ((C9965 + C9964) * C1985 + (C9863 + C9864) * C2059) +
             C55315 * C1986) *
                C46523 +
            ((C12331 + C12332) * C2060 -
             ((C9967 + C9966) * C1985 + (C9868 + C9867) * C2059) +
             (C12444 + C12443) * C1986) *
                C92072) *
               C41548 +
           (((C26020 + C26019) * C2060 - (C55314 * C1985 + C55180 * C2059) +
             (C26125 + C26126) * C1986) *
                C46523 +
            ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                 C2060 -
             ((C12443 + C12444) * C1985 + (C12332 + C12331) * C2059) +
             (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
                 C1986) *
                C92072) *
               C92171) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                  C244 +
              (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                  C92116) *
                 C46523 +
             ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C92072) *
                C41548 +
            (((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C46523 +
             C55452 * C92072) *
                C92171) *
               C1985 -
           ((((C26230 + C26229) * C92116 + (C26019 + C26020) * C244) * C92072 +
             ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C46523) *
                C92171 +
            (C55453 * C92072 +
             ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C46523) *
                C41548) *
               C1986) *
              C1983 +
          (((C55452 * C46523 +
             ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C92072) *
                C41548 +
            (((C26020 + C26019) * C244 + (C26229 + C26230) * C92116) * C46523 +
             ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                  C244 +
              (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                  C92116) *
                 C92072) *
                C92171) *
               C1986 -
           ((((C12551 + C12552) * C92116 + (C12332 + C12331) * C244) * C92072 +
             C55453 * C46523) *
                C92171 +
            (((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C92072 +
             ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C46523) *
                C41548) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                  C801 +
              (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                  C92084) *
                 C41548 +
             ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
                C92337 +
            (((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C41548 +
             C56824 * C92171) *
                C92195) *
               C2709 -
           ((((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92171 +
             ((C53326 + C53327) * C92084 + (C53328 + C53329) * C801) * C41548) *
                C92195 +
            (C56825 * C92171 +
             ((C53321 + C53320) * C92084 + (C53319 + C53318) * C801) * C41548) *
                C92337) *
               C2710) *
              C1985 +
          (((C56824 * C41548 +
             ((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92171) *
                C92337 +
            (((C53325 + C53324) * C801 + (C53323 + C53322) * C92084) * C41548 +
             ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
               C92072 * C16098) *
                  C801 +
              (C46528 * C16099 + C46523 * C16101 + C46529 * C16100 +
               C92072 * C16102) *
                  C92084) *
                 C92171) *
                C92195) *
               C2710 -
           ((((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C92171 +
             C56825 * C41548) *
                C92195 +
            (((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92171 +
             ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C41548) *
                C92337) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2059 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C1985 -
             (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
                C41548 +
            ((C47296 + C47297) * C2059 + (C47400 + C47399) * C1985 -
             (C47301 + C47300) * C2060 - (C47402 + C47401) * C1986) *
                C92171) *
               C92337 +
           (((C53318 + C53319) * C2059 + (C53440 + C53441) * C1985 -
             C56819 * C2060 - C56956 * C1986) *
                C41548 +
            (C56816 * C2059 + C56957 * C1985 - (C50618 + C50619) * C2060 -
             (C50733 + C50732) * C1986) *
                C92171) *
               C92195) *
              C92084 * C2709 +
          (((C56816 * C2060 -
             ((C53441 + C53440) * C1985 + (C53319 + C53318) * C2059) +
             C56957 * C1986) *
                C41548 +
            ((C50619 + C50618) * C2060 - (C56956 * C1985 + C56819 * C2059) +
             (C50732 + C50733) * C1986) *
                C92171) *
               C92337 +
           (((C53325 + C53324) * C2060 -
             ((C53444 + C53445) * C1985 + (C53328 + C53329) * C2059) +
             (C53443 + C53442) * C1986) *
                C41548 +
            ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
              C92072 * C16098) *
                 C2060 -
             ((C53442 + C53443) * C1985 + (C53324 + C53325) * C2059) +
             (C46528 * C16177 + C46523 * C16179 + C46529 * C16178 +
              C92072 * C16180) *
                 C1986) *
                C92171) *
               C92195) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2849 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C2709 -
             (C53319 + C53318) * C2850 - (C53556 + C53557) * C2710) *
                C41548 +
            ((C47296 + C47297) * C2849 + (C47493 + C47494) * C2709 -
             C56819 * C2850 - C57088 * C2710) *
                C92171) *
               C92337 +
           (((C53318 + C53319) * C2849 + (C53557 + C53556) * C2709 -
             (C53328 + C53329) * C2850 - (C53559 + C53558) * C2710) *
                C41548 +
            (C56816 * C2849 + C57089 * C2709 - (C53324 + C53325) * C2850 -
             (C53561 + C53560) * C2710) *
                C92171) *
               C92195) *
              C1985 +
          (((C56816 * C2850 -
             ((C47494 + C47493) * C2709 + (C47297 + C47296) * C2849) +
             C57089 * C2710) *
                C41548 +
            ((C50619 + C50618) * C2850 -
             ((C47496 + C47495) * C2709 + (C47301 + C47300) * C2849) +
             (C50843 + C50842) * C2710) *
                C92171) *
               C92337 +
           (((C53325 + C53324) * C2850 - (C57088 * C2709 + C56819 * C2849) +
             (C53560 + C53561) * C2710) *
                C41548 +
            ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
              C92072 * C16098) *
                 C2850 -
             ((C50842 + C50843) * C2709 + (C50618 + C50619) * C2849) +
             (C46528 * C16255 + C46523 * C16257 + C46529 * C16256 +
              C92072 * C16258) *
                 C2710) *
                C92171) *
               C92195) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                  C801 +
              (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                  C92084) *
                 C92337 +
             ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92195) *
                C46523 +
            (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92337 +
             (C56000 * C801 + C56001 * C92084) * C92195) *
                C92072) *
               C2709 -
           ((((C53688 + C53689) * C92084 + (C53690 + C53691) * C801) * C92195 +
             (C55999 * C92084 + C55998 * C801) * C92337) *
                C92072 +
            (((C53692 + C53693) * C92084 + (C53694 + C53695) * C801) * C92195 +
             ((C53687 + C53686) * C92084 + (C53685 + C53684) * C801) * C92337) *
                C46523) *
               C2710) *
              C1985 +
          (((((C57228 + C57229) * C801 + (C57230 + C57231) * C92084) * C92337 +
             ((C41775 * C5719 + C41548 * C5965 + C41776 * C16095 +
               C92171 * C16333) *
                  C801 +
              (C41775 * C5725 + C41548 * C5968 + C41776 * C16099 +
               C92171 * C16335) *
                  C92084) *
                 C92195) *
                C46523 +
            (((C54774 + C54775) * C801 + (C54776 + C54777) * C92084) * C92337 +
             ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
               C92171 * C16334) *
                  C801 +
              (C41775 * C5726 + C41548 * C5969 + C41776 * C16100 +
               C92171 * C16336) *
                  C92084) *
                 C92195) *
                C92072) *
               C2710 -
           ((((C54777 + C54776) * C92084 + (C54775 + C54774) * C801) * C92195 +
             ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C92337) *
                C92072 +
            (((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92195 +
             ((C41776 * C822 + C92171 * C1031 + C41775 * C813 +
               C41548 * C1030) *
                  C92084 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C801) *
                 C92337) *
                C46523) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2059 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C1985 -
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C2060 -
             (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                 C1986) *
                C92337 +
            ((C53684 + C53685) * C2059 + (C53806 + C53807) * C1985 -
             (C57229 + C57228) * C2060 - (C57366 + C57367) * C1986) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C2059 + (C41903 + C41904) * C1985 -
             (C44081 + C44080) * C2060 - (C44194 + C44195) * C1986) *
                C92337 +
            (C56000 * C2059 + C56133 * C1985 - (C54775 + C54774) * C2060 -
             (C54912 + C54913) * C1986) *
                C92195) *
               C92072) *
              C92084 * C2709 +
          ((((C57228 + C57229) * C2060 -
             ((C53807 + C53806) * C1985 + (C53685 + C53684) * C2059) +
             (C57367 + C57366) * C1986) *
                C92337 +
            ((C41775 * C5719 + C41548 * C5965 + C41776 * C16095 +
              C92171 * C16333) *
                 C2060 -
             ((C53810 + C53811) * C1985 + (C53694 + C53695) * C2059) +
             (C41775 * C5805 + C41548 * C6045 + C41776 * C16177 +
              C92171 * C16411) *
                 C1986) *
                C92195) *
               C46523 +
           (((C54774 + C54775) * C2060 - (C56134 * C1985 + C55998 * C2059) +
             (C54913 + C54912) * C1986) *
                C92337 +
            ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
              C92171 * C16334) *
                 C2060 -
             ((C53808 + C53809) * C1985 + (C53690 + C53691) * C2059) +
             (C41775 * C5806 + C41548 * C6046 + C41776 * C16178 +
              C92171 * C16412) *
                 C1986) *
                C92195) *
               C92072) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2849 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C2709 -
             (C53685 + C53684) * C2850 - (C53922 + C53923) * C2710) *
                C92337 +
            ((C53684 + C53685) * C2849 + (C53923 + C53922) * C2709 -
             (C53694 + C53695) * C2850 - (C53925 + C53924) * C2710) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C2849 + (C42000 + C42001) * C2709 -
             C55998 * C2850 - C56270 * C2710) *
                C92337 +
            (C56000 * C2849 + C56271 * C2709 - (C53690 + C53691) * C2850 -
             (C53927 + C53926) * C2710) *
                C92195) *
               C92072) *
              C1985 +
          ((((C57228 + C57229) * C2850 -
             ((C41776 * C957 + C92171 * C1147 + C41775 * C956 +
               C41548 * C1146) *
                  C2709 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C2849) +
             (C57502 + C57503) * C2710) *
                C92337 +
            ((C41775 * C5719 + C41548 * C5965 + C41776 * C16095 +
              C92171 * C16333) *
                 C2850 -
             ((C57503 + C57502) * C2709 + (C57229 + C57228) * C2849) +
             (C41775 * C5885 + C41548 * C6122 + C41776 * C16255 +
              C92171 * C16487) *
                 C2710) *
                C92195) *
               C46523 +
           (((C54774 + C54775) * C2850 -
             ((C44306 + C44307) * C2709 + (C44081 + C44080) * C2849) +
             (C55049 + C55048) * C2710) *
                C92337 +
            ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
              C92171 * C16334) *
                 C2850 -
             ((C55048 + C55049) * C2709 + (C54775 + C54774) * C2849) +
             (C41775 * C5886 + C41548 * C6123 + C41776 * C16256 +
              C92171 * C16488) *
                 C2710) *
                C92195) *
               C92072) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                  C801 +
              (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                  C92084) *
                 C46523 +
             ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C92072) *
                C41548 +
            (((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C46523 +
             (C55182 * C801 + C55183 * C92084) * C92072) *
                C92171) *
               C2709 -
           ((((C56413 + C56412) * C92084 + (C56411 + C56410) * C801) * C92072 +
             ((C27900 + C27901) * C92084 + (C27902 + C27903) * C801) * C46523) *
                C92171 +
            (((C13319 + C13318) * C92084 + (C13317 + C13316) * C801) * C92072 +
             ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 +
               C92337 * C1796) *
                  C92084 +
              (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 +
               C92337 * C1788) *
                  C801) *
                 C46523) *
                C41548) *
               C2710) *
              C1985 +
          (((((C27903 + C27902) * C801 + (C27901 + C27900) * C92084) * C46523 +
             ((C56410 + C56411) * C801 + (C56412 + C56413) * C92084) * C92072) *
                C41548 +
            (((C27899 + C27898) * C801 + (C27897 + C27896) * C92084) * C46523 +
             ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
               C92195 * C16564) *
                  C801 +
              (C9836 * C8419 + C92337 * C9076 + C9837 * C16100 +
               C92195 * C16566) *
                  C92084) *
                 C92072) *
                C92171) *
               C2710 -
           ((((C26021 + C26022) * C92084 + (C26019 + C26020) * C801) * C92072 +
             ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C46523) *
                C92171 +
            ((C55181 * C92084 + C55180 * C801) * C92072 +
             ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C46523) *
                C41548) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C2059 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C1985 -
             (C24244 + C24243) * C2060 - (C24347 + C24348) * C1986) *
                C46523 +
            ((C9864 + C9863) * C2059 + (C9964 + C9965) * C1985 -
             C55180 * C2060 - C55314 * C1986) *
                C92072) *
               C41548 +
           (((C24243 + C24244) * C2059 + (C24348 + C24347) * C1985 -
             (C24248 + C24247) * C2060 - (C24350 + C24349) * C1986) *
                C46523 +
            (C55182 * C2059 + C55315 * C1985 - (C26019 + C26020) * C2060 -
             (C26126 + C26125) * C1986) *
                C92072) *
               C92171) *
              C92084 * C2709 +
          ((((C27903 + C27902) * C2060 -
             ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 +
               C92337 * C1854) *
                  C1985 +
              (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 +
               C92337 * C1788) *
                  C2059) +
             (C28010 + C28011) * C1986) *
                C46523 +
            ((C56410 + C56411) * C2060 -
             ((C13431 + C13430) * C1985 + (C13317 + C13316) * C2059) +
             (C56548 + C56549) * C1986) *
                C92072) *
               C41548 +
           (((C27899 + C27898) * C2060 -
             ((C28011 + C28010) * C1985 + (C27902 + C27903) * C2059) +
             (C28012 + C28013) * C1986) *
                C46523 +
            ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
              C92195 * C16564) *
                 C2060 -
             ((C56549 + C56548) * C1985 + (C56411 + C56410) * C2059) +
             (C9836 * C8541 + C92337 * C9189 + C9837 * C16178 +
              C92195 * C16642) *
                 C1986) *
                C92072) *
               C92171) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C2849 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C2709 -
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C2850 -
             (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                 C2710) *
                C46523 +
            ((C9864 + C9863) * C2849 + (C10060 + C10061) * C2709 -
             (C13317 + C13316) * C2850 - (C13540 + C13541) * C2710) *
                C92072) *
               C41548 +
           (((C24243 + C24244) * C2849 + (C24441 + C24442) * C2709 -
             (C27902 + C27903) * C2850 - (C28120 + C28121) * C2710) *
                C46523 +
            (C55182 * C2849 + C55447 * C2709 - (C56411 + C56410) * C2850 -
             (C56684 + C56685) * C2710) *
                C92072) *
               C92171) *
              C1985 +
          ((((C27903 + C27902) * C2850 -
             ((C24442 + C24441) * C2709 + (C24244 + C24243) * C2849) +
             (C28121 + C28120) * C2710) *
                C46523 +
            ((C56410 + C56411) * C2850 - (C55448 * C2709 + C55180 * C2849) +
             (C56685 + C56684) * C2710) *
                C92072) *
               C41548 +
           (((C27899 + C27898) * C2850 -
             ((C24444 + C24443) * C2709 + (C24248 + C24247) * C2849) +
             (C28123 + C28122) * C2710) *
                C46523 +
            ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
              C92195 * C16564) *
                 C2850 -
             ((C26230 + C26229) * C2709 + (C26019 + C26020) * C2849) +
             (C9836 * C8654 + C92337 * C9293 + C9837 * C16256 +
              C92195 * C16718) *
                 C2710) *
                C92072) *
               C92171) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C41548 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C801 +
             (C46528 * C1397 + C46523 * C1413 + C46529 * C1396 +
              C92072 * C1412) *
                 C92084) *
                C41548 +
            ((C50623 + C50622) * C801 + (C50621 + C50620) * C92084) * C92171) *
               C92195) *
              C92116 * C798 -
          ((((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C92171 +
            ((C50620 + C50621) * C92084 + (C50622 + C50623) * C801) * C41548) *
               C92195 +
           (((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92171 +
            ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C41548) *
               C92337) *
              C92116 * C799 +
          ((C47312 * C41548 +
            ((C47307 + C47306) * C801 + (C47305 + C47304) * C92084) * C92171) *
               C92337 +
           (((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C41548 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C46528 * C18736 + C46523 * C18738 + C46529 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C92171) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C104 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C93 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C105 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C94 +
            (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C106 +
            (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
                C95) *
               C41548 +
           ((C47296 + C47297) * C104 + (C47298 + C47299) * C93 -
            (C48732 + C48733) * C105 - (C48734 + C48735) * C94 +
            (C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C106 +
            (C46528 * C811 + C46523 * C827 + C46529 * C810 + C92072 * C826) *
                C95) *
               C92171) *
              C92337 +
          (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
             C92072 * C1400) *
                C104 +
            (C46528 * C1397 + C46523 * C1413 + C46529 * C1396 +
             C92072 * C1412) *
                C93 -
            (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
             C46523 * C1400) *
                C105 -
            (C46529 * C1395 + C92072 * C1411 + C46528 * C1396 +
             C46523 * C1412) *
                C94 +
            (C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C106 +
            (C46528 * C1395 + C46523 * C1411 + C46529 * C1394 +
             C92072 * C1410) *
                C95) *
               C41548 +
           ((C50623 + C50622) * C104 + (C50621 + C50620) * C93 -
            (C46529 * C3433 + C92072 * C3437 + C46528 * C3432 +
             C46523 * C3436) *
                C105 -
            (C46529 * C3441 + C92072 * C3445 + C46528 * C3440 +
             C46523 * C3444) *
                C94 +
            (C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
             C92072 * C3438) *
                C106 +
            (C46528 * C3441 + C46523 * C3445 + C46529 * C3442 +
             C92072 * C3446) *
                C95) *
               C92171) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C41548 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
               C92337 +
           (((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C41548 +
            ((C50623 + C50622) * C801 + (C50621 + C50620) * C92084) * C92171) *
               C92195) *
              C1383 -
          ((((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92171 +
            ((C53326 + C53327) * C92084 + (C53328 + C53329) * C801) * C41548) *
               C92195 +
           (((C50620 + C50621) * C92084 + (C50622 + C50623) * C801) * C92171 +
            ((C53321 + C53320) * C92084 + (C53319 + C53318) * C801) * C41548) *
               C92337) *
              C1384 +
          ((((C53329 + C53328) * C801 + (C53327 + C53326) * C92084) * C41548 +
            ((C53325 + C53324) * C801 + (C53323 + C53322) * C92084) * C92171) *
               C92337 +
           (((C46528 * C10808 + C46523 * C10811 + C46529 * C10809 +
              C92072 * C10812) *
                 C801 +
             (C46528 * C10814 + C46523 * C10817 + C46529 * C10815 +
              C92072 * C10818) *
                 C92084) *
                C41548 +
            ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
              C92072 * C32369) *
                 C801 +
             (C46528 * C24527 + C46523 * C24530 + C46529 * C32370 +
              C92072 * C32371) *
                 C92084) *
                C92171) *
               C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C884 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C798 -
            (C47297 + C47296) * C885 - (C47399 + C47400) * C799 +
            C47308 * C886 + C47405 * C800) *
               C41548 +
           ((C47296 + C47297) * C884 + (C47400 + C47399) * C798 -
            (C47301 + C47300) * C885 - (C47402 + C47401) * C799 +
            (C47307 + C47306) * C886 + (C47403 + C47404) * C800) *
               C92171) *
              C92337 +
          (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
             C92072 * C1400) *
                C884 +
            (C46528 * C1471 + C46523 * C1479 + C46529 * C1470 +
             C92072 * C1478) *
                C798 -
            (C50622 + C50623) * C885 - (C50731 + C50730) * C799 +
            (C50619 + C50618) * C886 + (C50732 + C50733) * C800) *
               C41548 +
           ((C50623 + C50622) * C884 + (C50730 + C50731) * C798 -
            (C50618 + C50619) * C885 - (C50733 + C50732) * C799 +
            (C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
             C92072 * C18735) *
                C886 +
            (C46528 * C18862 + C46523 * C18864 + C46529 * C18863 +
             C92072 * C18865) *
                C800) *
               C92171) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C41548 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C181 +
             (C46528 * C1471 + C46523 * C1479 + C46529 * C1470 +
              C92072 * C1478) *
                 C92105) *
                C41548 +
            ((C50623 + C50622) * C181 + (C50730 + C50731) * C92105) * C92171) *
               C92195) *
              C93 -
          ((((C46529 * C3515 + C92072 * C3519 + C46528 * C3514 +
              C46523 * C3518) *
                 C92105 +
             (C46529 * C3433 + C92072 * C3437 + C46528 * C3432 +
              C46523 * C3436) *
                 C181) *
                C92171 +
            ((C46529 * C1469 + C92072 * C1477 + C46528 * C1470 +
              C46523 * C1478) *
                 C92105 +
             (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
              C46523 * C1400) *
                 C181) *
                C41548) *
               C92195 +
           (((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92171 +
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C92105 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C181) *
                C41548) *
               C92337) *
              C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C181 +
             (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                 C92105) *
                C41548 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C181 +
             (C46528 * C888 + C46523 * C896 + C46529 * C887 + C92072 * C895) *
                 C92105) *
                C92171) *
               C92337 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C181 +
             (C46528 * C1469 + C46523 * C1477 + C46529 * C1468 +
              C92072 * C1476) *
                 C92105) *
                C41548 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C181 +
             (C46528 * C3515 + C46523 * C3519 + C46529 * C3516 +
              C92072 * C3520) *
                 C92105) *
                C92171) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C41548 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
               C92337 +
           (((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C41548 +
            ((C50623 + C50622) * C181 + (C50730 + C50731) * C92105) * C92171) *
               C92195) *
              C92084 * C1383 -
          ((((C53442 + C53443) * C92105 + (C53324 + C53325) * C181) * C92171 +
            ((C53444 + C53445) * C92105 + (C53328 + C53329) * C181) * C41548) *
               C92195 +
           (((C50731 + C50730) * C92105 + (C50622 + C50623) * C181) * C92171 +
            ((C53441 + C53440) * C92105 + (C53319 + C53318) * C181) * C41548) *
               C92337) *
              C92084 * C1384 +
          ((((C53329 + C53328) * C181 + (C53445 + C53444) * C92105) * C41548 +
            ((C53325 + C53324) * C181 + (C53443 + C53442) * C92105) * C92171) *
               C92337 +
           (((C46528 * C10808 + C46523 * C10811 + C46529 * C10809 +
              C92072 * C10812) *
                 C181 +
             (C46528 * C10930 + C46523 * C10933 + C46529 * C10931 +
              C92072 * C10934) *
                 C92105) *
                C41548 +
            ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
              C92072 * C32369) *
                 C181 +
             (C46528 * C24638 + C46523 * C24640 + C46529 * C32482 +
              C92072 * C32483) *
                 C92105) *
                C92171) *
               C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C244 +
             (C46528 * C1540 + C46523 * C1548 + C46529 * C1539 +
              C92072 * C1547) *
                 C92116) *
                C41548 +
            ((C50623 + C50622) * C244 + (C50841 + C50840) * C92116) * C92171) *
               C92195) *
              C798 -
          ((((C50842 + C50843) * C92116 + (C50618 + C50619) * C244) * C92171 +
            ((C50840 + C50841) * C92116 + (C50622 + C50623) * C244) * C41548) *
               C92195 +
           (((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92171 +
            ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C41548) *
               C92337) *
              C799 +
          ((C47501 * C41548 +
            ((C47307 + C47306) * C244 + (C47498 + C47497) * C92116) * C92171) *
               C92337 +
           (((C50619 + C50618) * C244 + (C50843 + C50842) * C92116) * C41548 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C244 +
             (C46528 * C18976 + C46523 * C18978 + C46529 * C18977 +
              C92072 * C18979) *
                 C92116) *
                C92171) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C244 +
             (C46528 * C1540 + C46523 * C1548 + C46529 * C1539 +
              C92072 * C1547) *
                 C92116) *
                C41548 +
            ((C50623 + C50622) * C244 + (C50841 + C50840) * C92116) * C92171) *
               C92195) *
              C92105 * C93 -
          ((((C46529 * C3589 + C92072 * C3593 + C46528 * C3588 +
              C46523 * C3592) *
                 C92116 +
             (C46529 * C3433 + C92072 * C3437 + C46528 * C3432 +
              C46523 * C3436) *
                 C244) *
                C92171 +
            ((C46529 * C1538 + C92072 * C1546 + C46528 * C1539 +
              C46523 * C1547) *
                 C92116 +
             (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
              C46523 * C1400) *
                 C244) *
                C41548) *
               C92195 +
           (((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92171 +
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C92116 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C244) *
                C41548) *
               C92337) *
              C92105 * C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C244 +
             (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                 C92116) *
                C41548 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C244 +
             (C46528 * C954 + C46523 * C962 + C46529 * C953 + C92072 * C961) *
                 C92116) *
                C92171) *
               C92337 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C244 +
             (C46528 * C1538 + C46523 * C1546 + C46529 * C1537 +
              C92072 * C1545) *
                 C92116) *
                C41548 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C244 +
             (C46528 * C3589 + C46523 * C3593 + C46529 * C3590 +
              C92072 * C3594) *
                 C92116) *
                C92171) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C1534 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C1383 -
            (C53319 + C53318) * C1535 - (C53556 + C53557) * C1384 +
            (C53329 + C53328) * C1536 + (C53558 + C53559) * C1385) *
               C41548 +
           ((C47296 + C47297) * C1534 + (C47493 + C47494) * C1383 -
            (C50622 + C50623) * C1535 - (C50840 + C50841) * C1384 +
            (C53325 + C53324) * C1536 + (C53560 + C53561) * C1385) *
               C92171) *
              C92337 +
          (((C53318 + C53319) * C1534 + (C53557 + C53556) * C1383 -
            (C53328 + C53329) * C1535 - (C53559 + C53558) * C1384 +
            (C46528 * C10808 + C46523 * C10811 + C46529 * C10809 +
             C92072 * C10812) *
                C1536 +
            (C46528 * C11028 + C46523 * C11031 + C46529 * C11029 +
             C92072 * C11032) *
                C1385) *
               C41548 +
           ((C50623 + C50622) * C1534 + (C50841 + C50840) * C1383 -
            (C53324 + C53325) * C1535 - (C53561 + C53560) * C1384 +
            (C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
             C92072 * C32369) *
                C1536 +
            (C46528 * C24740 + C46523 * C24742 + C46529 * C32588 +
             C92072 * C32589) *
                C1385) *
               C92171) *
              C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C801 +
             (C41775 * C1397 + C41548 * C1614 + C41776 * C3439 +
              C92171 * C3665) *
                 C92084) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92337 +
            ((C45010 + C45011) * C801 + (C45012 + C45013) * C92084) * C92195) *
               C92072) *
              C92116 * C798 -
          ((((C41776 * C8419 + C92171 * C8770 + C41775 * C3440 +
              C41548 * C3666) *
                 C92084 +
             (C41776 * C8413 + C92171 * C8767 + C41775 * C3432 +
              C41548 * C3662) *
                 C801) *
                C92195 +
            ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C92337) *
               C92072 +
           (((C41776 * C8418 + C92171 * C8769 + C41775 * C3439 +
              C41548 * C3665) *
                 C92084 +
             (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
              C41548 * C3661) *
                 C801) *
                C92195 +
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C92084 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C801) *
                C92337) *
               C46523) *
              C92116 * C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C801 +
             (C41775 * C822 + C41548 * C1031 + C41776 * C4871 +
              C92171 * C5186) *
                 C92084) *
                C92337 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C801 +
             (C41775 * C8418 + C41548 * C8769 + C41776 * C18736 +
              C92171 * C19092) *
                 C92084) *
                C92195) *
               C46523 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C801 +
             (C41775 * C823 + C41548 * C1032 + C41776 * C4872 +
              C92171 * C5187) *
                 C92084) *
                C92337 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C801 +
             (C41775 * C8419 + C41548 * C8770 + C41776 * C18737 +
              C92171 * C19093) *
                 C92084) *
                C92195) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C104 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C93 -
            (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
            C41815 * C95) *
               C92337 +
           ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
             C92171 * C3661) *
                C104 +
            (C41775 * C1397 + C41548 * C1614 + C41776 * C3439 +
             C92171 * C3665) *
                C93 -
            (C45011 + C45010) * C105 - (C45013 + C45012) * C94 +
            (C45014 + C45015) * C106 + (C45016 + C45017) * C95) *
               C92195) *
              C46523 +
          (((C41803 + C41802) * C104 + (C41805 + C41804) * C93 -
            (C41807 + C41806) * C105 - (C41809 + C41808) * C94 +
            (C41810 + C41811) * C106 + (C41812 + C41813) * C95) *
               C92337 +
           ((C45010 + C45011) * C104 + (C45012 + C45013) * C93 -
            (C45015 + C45014) * C105 - (C45017 + C45016) * C94 +
            (C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
             C92171 * C3664) *
                C106 +
            (C41775 * C1394 + C41548 * C1611 + C41776 * C3442 +
             C92171 * C3668) *
                C95) *
               C92195) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C92337 +
            ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92195) *
               C46523 +
           (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92337 +
            ((C45010 + C45011) * C801 + (C45012 + C45013) * C92084) * C92195) *
               C92072) *
              C1383 -
          ((((C53688 + C53689) * C92084 + (C53690 + C53691) * C801) * C92195 +
            ((C45013 + C45012) * C92084 + (C45011 + C45010) * C801) * C92337) *
               C92072 +
           (((C53692 + C53693) * C92084 + (C53694 + C53695) * C801) * C92195 +
            ((C53687 + C53686) * C92084 + (C53685 + C53684) * C801) * C92337) *
               C46523) *
              C1384 +
          ((((C53695 + C53694) * C801 + (C53693 + C53692) * C92084) * C92337 +
            ((C41775 * C10808 + C41548 * C11126 + C41776 * C24524 +
              C92171 * C24830) *
                 C801 +
             (C41775 * C10814 + C41548 * C11129 + C41776 * C24527 +
              C92171 * C24832) *
                 C92084) *
                C92195) *
               C46523 +
           (((C53691 + C53690) * C801 + (C53689 + C53688) * C92084) * C92337 +
            ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
              C92171 * C32694) *
                 C801 +
             (C41775 * C10815 + C41548 * C11130 + C41776 * C32370 +
              C92171 * C32695) *
                 C92084) *
                C92195) *
               C92072) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C884 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C798 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C885 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C799 +
            (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C886 +
            (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
                C800) *
               C92337 +
           ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
             C92171 * C3661) *
                C884 +
            (C41775 * C1471 + C41548 * C1672 + C41776 * C3513 +
             C92171 * C3735) *
                C798 -
            (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
             C41548 * C3661) *
                C885 -
            (C41776 * C8540 + C92171 * C8870 + C41775 * C3513 +
             C41548 * C3735) *
                C799 +
            (C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C886 +
            (C41775 * C8540 + C41548 * C8870 + C41776 * C18862 +
             C92171 * C19192) *
                C800) *
               C92195) *
              C46523 +
          (((C41803 + C41802) * C884 + (C41903 + C41904) * C798 -
            (C44081 + C44080) * C885 - (C44194 + C44195) * C799 +
            (C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C886 +
            (C41775 * C892 + C41548 * C1088 + C41776 * C4988 + C92171 * C5264) *
                C800) *
               C92337 +
           ((C45010 + C45011) * C884 + (C45124 + C45125) * C798 -
            (C41776 * C8413 + C92171 * C8767 + C41775 * C3432 +
             C41548 * C3662) *
                C885 -
            (C41776 * C8541 + C92171 * C8871 + C41775 * C3514 +
             C41548 * C3736) *
                C799 +
            (C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
             C92171 * C19091) *
                C886 +
            (C41775 * C8541 + C41548 * C8871 + C41776 * C18863 +
             C92171 * C19193) *
                C800) *
               C92195) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C181 +
             (C41775 * C1471 + C41548 * C1672 + C41776 * C3513 +
              C92171 * C3735) *
                 C92105) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92337 +
            ((C45010 + C45011) * C181 + (C45124 + C45125) * C92105) * C92195) *
               C92072) *
              C93 -
          ((((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92195 +
            ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C92337) *
               C92072 +
           (((C45125 + C45124) * C92105 + (C45011 + C45010) * C181) * C92195 +
            ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92337) *
               C46523) *
              C94 +
          ((C41911 * C92337 +
            ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92195) *
               C46523 +
           (((C41810 + C41811) * C181 + (C41908 + C41907) * C92105) * C92337 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C181 +
             (C41775 * C1468 + C41548 * C1669 + C41776 * C3516 +
              C92171 * C3738) *
                 C92105) *
                C92195) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C92337 +
            ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92195) *
               C46523 +
           (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92337 +
            ((C45010 + C45011) * C181 + (C45124 + C45125) * C92105) * C92195) *
               C92072) *
              C92084 * C1383 -
          ((((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C92195 +
            ((C45125 + C45124) * C92105 + (C45011 + C45010) * C181) * C92337) *
               C92072 +
           (((C53810 + C53811) * C92105 + (C53694 + C53695) * C181) * C92195 +
            ((C53807 + C53806) * C92105 + (C53685 + C53684) * C181) * C92337) *
               C46523) *
              C92084 * C1384 +
          ((((C53695 + C53694) * C181 + (C53811 + C53810) * C92105) * C92337 +
            ((C41775 * C10808 + C41548 * C11126 + C41776 * C24524 +
              C92171 * C24830) *
                 C181 +
             (C41775 * C10930 + C41548 * C11242 + C41776 * C24638 +
              C92171 * C24944) *
                 C92105) *
                C92195) *
               C46523 +
           (((C53691 + C53690) * C181 + (C53809 + C53808) * C92105) * C92337 +
            ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
              C92171 * C32694) *
                 C181 +
             (C41775 * C10931 + C41548 * C11243 + C41776 * C32482 +
              C92171 * C32804) *
                 C92105) *
                C92195) *
               C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C244 +
             (C41775 * C1540 + C41548 * C1727 + C41776 * C3587 +
              C92171 * C3805) *
                 C92116) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92337 +
            ((C45010 + C45011) * C244 + (C45235 + C45234) * C92116) * C92195) *
               C92072) *
              C798 -
          ((((C41776 * C8654 + C92171 * C8972 + C41775 * C3588 +
              C41548 * C3806) *
                 C92116 +
             (C41776 * C8413 + C92171 * C8767 + C41775 * C3432 +
              C41548 * C3662) *
                 C244) *
                C92195 +
            ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C92337) *
               C92072 +
           (((C41776 * C8653 + C92171 * C8971 + C41775 * C3587 +
              C41548 * C3805) *
                 C92116 +
             (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
              C41548 * C3661) *
                 C244) *
                C92195 +
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C92116 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C244) *
                C92337) *
               C46523) *
              C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C244 +
             (C41775 * C957 + C41548 * C1147 + C41776 * C5085 +
              C92171 * C5340) *
                 C92116) *
                C92337 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C244 +
             (C41775 * C8653 + C41548 * C8971 + C41776 * C18976 +
              C92171 * C19292) *
                 C92116) *
                C92195) *
               C46523 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C244 +
             (C41775 * C958 + C41548 * C1148 + C41776 * C5086 +
              C92171 * C5341) *
                 C92116) *
                C92337 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C244 +
             (C41775 * C8654 + C41548 * C8972 + C41776 * C18977 +
              C92171 * C19293) *
                 C92116) *
                C92195) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C244 +
             (C41775 * C1540 + C41548 * C1727 + C41776 * C3587 +
              C92171 * C3805) *
                 C92116) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92337 +
            ((C45010 + C45011) * C244 + (C45235 + C45234) * C92116) * C92195) *
               C92072) *
              C92105 * C93 -
          ((((C45236 + C45237) * C92116 + (C45015 + C45014) * C244) * C92195 +
            ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C92337) *
               C92072 +
           (((C45234 + C45235) * C92116 + (C45011 + C45010) * C244) * C92195 +
            ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92337) *
               C46523) *
              C92105 * C94 +
          ((C42008 * C92337 +
            ((C45014 + C45015) * C244 + (C45237 + C45236) * C92116) * C92195) *
               C46523 +
           (((C41810 + C41811) * C244 + (C42005 + C42004) * C92116) * C92337 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C244 +
             (C41775 * C1537 + C41548 * C1733 + C41776 * C3590 +
              C92171 * C3808) *
                 C92116) *
                C92195) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C1534 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C1383 -
            (C53685 + C53684) * C1535 - (C53922 + C53923) * C1384 +
            (C53695 + C53694) * C1536 + (C53924 + C53925) * C1385) *
               C92337 +
           ((C53684 + C53685) * C1534 + (C53923 + C53922) * C1383 -
            (C53694 + C53695) * C1535 - (C53925 + C53924) * C1384 +
            (C41775 * C10808 + C41548 * C11126 + C41776 * C24524 +
             C92171 * C24830) *
                C1536 +
            (C41775 * C11028 + C41548 * C11339 + C41776 * C24740 +
             C92171 * C25038) *
                C1385) *
               C92195) *
              C46523 +
          (((C41803 + C41802) * C1534 + (C42000 + C42001) * C1383 -
            (C45011 + C45010) * C1535 - (C45234 + C45235) * C1384 +
            (C53691 + C53690) * C1536 + (C53926 + C53927) * C1385) *
               C92337 +
           ((C45010 + C45011) * C1534 + (C45235 + C45234) * C1383 -
            (C53690 + C53691) * C1535 - (C53927 + C53926) * C1384 +
            (C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
             C92171 * C32694) *
                C1536 +
            (C41775 * C11029 + C41548 * C11340 + C41776 * C32588 +
             C92171 * C32910) *
                C1385) *
               C92195) *
              C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C46523 +
            ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C92072) *
               C41548 +
           (((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C46523 +
            ((C12327 + C12328) * C801 + (C12329 + C12330) * C92084) * C92072) *
               C92171) *
              C92116 * C798 -
          ((((C26021 + C26022) * C92084 + (C26019 + C26020) * C801) * C92072 +
            ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C46523) *
               C92171 +
           (((C12330 + C12329) * C92084 + (C12328 + C12327) * C801) * C92072 +
            ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C46523) *
               C41548) *
              C92116 * C799 +
          ((C24259 * C46523 +
            ((C26020 + C26019) * C801 + (C26022 + C26021) * C92084) * C92072) *
               C41548 +
           (((C24254 + C24253) * C801 + (C24252 + C24251) * C92084) * C46523 +
            ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
              C92195 * C19393) *
                 C801 +
             (C9836 * C4872 + C92337 * C5421 + C9837 * C18737 +
              C92195 * C19395) *
                 C92084) *
                C92072) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C104 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C93 -
            (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
            C9876 * C95) *
               C46523 +
           ((C9864 + C9863) * C104 + (C9866 + C9865) * C93 -
            (C9868 + C9867) * C105 - (C9870 + C9869) * C94 +
            (C9871 + C9872) * C106 + (C9873 + C9874) * C95) *
               C92072) *
              C41548 +
          (((C24243 + C24244) * C104 + (C24245 + C24246) * C93 -
            (C12328 + C12327) * C105 - (C12330 + C12329) * C94 +
            (C12331 + C12332) * C106 + (C12333 + C12334) * C95) *
               C46523 +
           ((C12327 + C12328) * C104 + (C12329 + C12330) * C93 -
            (C12332 + C12331) * C105 - (C12334 + C12333) * C94 +
            (C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                C106 +
            (C9836 * C810 + C92337 * C1209 + C9837 * C3442 + C92195 * C3882) *
                C95) *
               C92072) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C46523 +
            ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C92072) *
               C41548 +
           (((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C46523 +
            ((C12327 + C12328) * C801 + (C12329 + C12330) * C92084) * C92072) *
               C92171) *
              C1383 -
          ((((C9837 * C5726 + C92195 * C6203 + C9836 * C3440 + C92337 * C3880) *
                 C92084 +
             (C9837 * C5720 + C92195 * C6200 + C9836 * C3432 + C92337 * C3876) *
                 C801) *
                C92072 +
            ((C27900 + C27901) * C92084 + (C27902 + C27903) * C801) * C46523) *
               C92171 +
           (((C13319 + C13318) * C92084 + (C13317 + C13316) * C801) * C92072 +
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C92084 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C801) *
                C46523) *
               C41548) *
              C1384 +
          ((((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
              C92195 * C11428) *
                 C801 +
             (C9836 * C1406 + C92337 * C1797 + C9837 * C10814 +
              C92195 * C11431) *
                 C92084) *
                C46523 +
            ((C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
              C92195 * C11429) *
                 C801 +
             (C9836 * C1407 + C92337 * C1798 + C9837 * C10815 +
              C92195 * C11432) *
                 C92084) *
                C92072) *
               C41548 +
           (((C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
              C92195 * C25132) *
                 C801 +
             (C9836 * C5725 + C92337 * C6202 + C9837 * C24527 +
              C92195 * C25134) *
                 C92084) *
                C46523 +
            ((C9836 * C5720 + C92337 * C6200 + C9837 * C32368 +
              C92195 * C33012) *
                 C801 +
             (C9836 * C5726 + C92337 * C6203 + C9837 * C32370 +
              C92195 * C33013) *
                 C92084) *
                C92072) *
               C92171) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C884 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C798 -
            (C24244 + C24243) * C885 - (C24347 + C24348) * C799 +
            C24255 * C886 + C24353 * C800) *
               C46523 +
           ((C9864 + C9863) * C884 + (C9964 + C9965) * C798 -
            (C12328 + C12327) * C885 - (C12441 + C12442) * C799 +
            (C26020 + C26019) * C886 + (C26125 + C26126) * C800) *
               C92072) *
              C41548 +
          (((C24243 + C24244) * C884 + (C24348 + C24347) * C798 -
            (C24248 + C24247) * C885 - (C24350 + C24349) * C799 +
            (C24254 + C24253) * C886 + (C24351 + C24352) * C800) *
               C46523 +
           ((C12327 + C12328) * C884 + (C12442 + C12441) * C798 -
            (C26019 + C26020) * C885 - (C26126 + C26125) * C799 +
            (C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
             C92195 * C19393) *
                C886 +
            (C9836 * C4988 + C92337 * C5534 + C9837 * C18863 +
             C92195 * C19505) *
                C800) *
               C92072) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C46523 +
            ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C92072) *
               C41548 +
           (((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C46523 +
            ((C12327 + C12328) * C181 + (C12442 + C12441) * C92105) * C92072) *
               C92171) *
              C93 -
          ((((C12443 + C12444) * C92105 + (C12332 + C12331) * C181) * C92072 +
            ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C46523) *
               C92171 +
           (((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C92072 +
            ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C46523) *
               C41548) *
              C94 +
          ((C9972 * C46523 +
            ((C9871 + C9872) * C181 + (C9969 + C9968) * C92105) * C92072) *
               C41548 +
           (((C12331 + C12332) * C181 + (C12444 + C12443) * C92105) * C46523 +
            ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                 C181 +
             (C9836 * C887 + C92337 * C1273 + C9837 * C3516 + C92195 * C3952) *
                 C92105) *
                C92072) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C46523 +
            ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C92072) *
               C41548 +
           (((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C46523 +
            ((C12327 + C12328) * C181 + (C12442 + C12441) * C92105) * C92072) *
               C92171) *
              C92084 * C1383 -
          ((((C9837 * C5806 + C92195 * C6280 + C9836 * C3514 + C92337 * C3950) *
                 C92105 +
             (C9837 * C5720 + C92195 * C6200 + C9836 * C3432 + C92337 * C3876) *
                 C181) *
                C92072 +
            ((C28011 + C28010) * C92105 + (C27902 + C27903) * C181) * C46523) *
               C92171 +
           (((C13431 + C13430) * C92105 + (C13317 + C13316) * C181) * C92072 +
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C92105 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C181) *
                C46523) *
               C41548) *
              C92084 * C1384 +
          ((((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
              C92195 * C11428) *
                 C181 +
             (C9836 * C1472 + C92337 * C1855 + C9837 * C10930 +
              C92195 * C11508) *
                 C92105) *
                C46523 +
            ((C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
              C92195 * C11429) *
                 C181 +
             (C9836 * C1473 + C92337 * C1856 + C9837 * C10931 +
              C92195 * C11509) *
                 C92105) *
                C92072) *
               C41548 +
           (((C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
              C92195 * C25132) *
                 C181 +
             (C9836 * C5805 + C92337 * C6279 + C9837 * C24638 +
              C92195 * C25210) *
                 C92105) *
                C46523 +
            ((C9836 * C5720 + C92337 * C6200 + C9837 * C32368 +
              C92195 * C33012) *
                 C181 +
             (C9836 * C5806 + C92337 * C6280 + C9837 * C32482 +
              C92195 * C33112) *
                 C92105) *
                C92072) *
               C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C92072) *
               C41548 +
           (((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C46523 +
            ((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C92072) *
               C92171) *
              C798 -
          ((((C26230 + C26229) * C92116 + (C26019 + C26020) * C244) * C92072 +
            ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C46523) *
               C92171 +
           (((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92072 +
            ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C46523) *
               C41548) *
              C799 +
          ((C24449 * C46523 +
            ((C26020 + C26019) * C244 + (C26229 + C26230) * C92116) * C92072) *
               C41548 +
           (((C24254 + C24253) * C244 + (C24446 + C24445) * C92116) * C46523 +
            ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C9836 * C5086 + C92337 * C5623 + C9837 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92072) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C92072) *
               C41548 +
           (((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C46523 +
            ((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C92072) *
               C92171) *
              C92105 * C93 -
          ((((C12551 + C12552) * C92116 + (C12332 + C12331) * C244) * C92072 +
            ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C46523) *
               C92171 +
           (((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C92072 +
            ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C46523) *
               C41548) *
              C92105 * C94 +
          ((C10068 * C46523 +
            ((C9871 + C9872) * C244 + (C10065 + C10064) * C92116) * C92072) *
               C41548 +
           (((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C46523 +
            ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                 C244 +
             (C9836 * C953 + C92337 * C1325 + C9837 * C3590 + C92195 * C4022) *
                 C92116) *
                C92072) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1534 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C1383 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C1535 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C1384 +
            (C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C1536 +
            (C9836 * C1541 + C92337 * C1910 + C9837 * C11028 +
             C92195 * C11585) *
                C1385) *
               C46523 +
           ((C9864 + C9863) * C1534 + (C10060 + C10061) * C1383 -
            (C13317 + C13316) * C1535 - (C13540 + C13541) * C1384 +
            (C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
             C92195 * C11429) *
                C1536 +
            (C9836 * C1542 + C92337 * C1912 + C9837 * C11029 +
             C92195 * C11586) *
                C1385) *
               C92072) *
              C41548 +
          (((C24243 + C24244) * C1534 + (C24441 + C24442) * C1383 -
            (C27902 + C27903) * C1535 - (C28120 + C28121) * C1384 +
            (C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
             C92195 * C25132) *
                C1536 +
            (C9836 * C5885 + C92337 * C6356 + C9837 * C24740 +
             C92195 * C25286) *
                C1385) *
               C46523 +
           ((C12327 + C12328) * C1534 + (C12554 + C12553) * C1383 -
            (C9837 * C5720 + C92195 * C6200 + C9836 * C3432 + C92337 * C3876) *
                C1535 -
            (C9837 * C5886 + C92195 * C6357 + C9836 * C3588 + C92337 * C4020) *
                C1384 +
            (C9836 * C5720 + C92337 * C6200 + C9837 * C32368 +
             C92195 * C33012) *
                C1536 +
            (C9836 * C5886 + C92337 * C6357 + C9837 * C32588 +
             C92195 * C33211) *
                C1385) *
               C92072) *
              C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C1987 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C1983 -
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C1988 -
             (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                 C1984) *
                C41548 +
            ((C47296 + C47297) * C1987 + (C47298 + C47299) * C1983 -
             (C48732 + C48733) * C1988 - (C48734 + C48735) * C1984) *
                C92171) *
               C92337 +
           (((C53318 + C53319) * C1987 + (C53320 + C53321) * C1983 -
             (C55592 + C55593) * C1988 - (C55594 + C55595) * C1984) *
                C41548 +
            ((C50623 + C50622) * C1987 + (C50621 + C50620) * C1983 -
             (C54360 + C54361) * C1988 - (C54362 + C54363) * C1984) *
                C92171) *
               C92195) *
              C2709 +
          ((((C55593 + C55592) * C1988 -
             ((C53321 + C53320) * C1983 + (C53319 + C53318) * C1987) +
             (C55595 + C55594) * C1984) *
                C41548 +
            ((C54361 + C54360) * C1988 -
             ((C50620 + C50621) * C1983 + (C50622 + C50623) * C1987) +
             (C54363 + C54362) * C1984) *
                C92171) *
               C92337 +
           (((C46528 * C1391 + C46523 * C1403 + C46529 * C1392 +
              C92072 * C1404) *
                 C1988 -
             ((C53326 + C53327) * C1983 + (C53328 + C53329) * C1987) +
             (C46528 * C1407 + C46523 * C1415 + C46529 * C1408 +
              C92072 * C1416) *
                 C1984) *
                C41548 +
            ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
              C92072 * C5724) *
                 C1988 -
             ((C53322 + C53323) * C1983 + (C53324 + C53325) * C1987) +
             (C46528 * C5726 + C46523 * C5729 + C46529 * C5727 +
              C92072 * C5730) *
                 C1984) *
                C92171) *
               C92195) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                  C181 +
              (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                  C92105) *
                 C41548 +
             ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
                C92337 +
            (((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C41548 +
             ((C50623 + C50622) * C181 + (C50730 + C50731) * C92105) * C92171) *
                C92195) *
               C1983 -
           ((((C54499 + C54498) * C92105 + (C54360 + C54361) * C181) * C92171 +
             ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C41548) *
                C92195 +
            (((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92171 +
             ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                  C92105 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C181) *
                 C41548) *
                C92337) *
               C1984) *
              C2709 +
          (((((C55593 + C55592) * C181 + (C55731 + C55730) * C92105) * C41548 +
             ((C54361 + C54360) * C181 + (C54498 + C54499) * C92105) * C92171) *
                C92337 +
            (((C46528 * C1391 + C46523 * C1403 + C46529 * C1392 +
               C92072 * C1404) *
                  C181 +
              (C46528 * C1473 + C46523 * C1481 + C46529 * C1474 +
               C92072 * C1482) *
                  C92105) *
                 C41548 +
             ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
               C92072 * C5724) *
                  C181 +
              (C46528 * C5806 + C46523 * C5809 + C46529 * C5807 +
               C92072 * C5810) *
                  C92105) *
                 C92171) *
                C92195) *
               C1984 -
           ((((C53442 + C53443) * C92105 + (C53324 + C53325) * C181) * C92171 +
             ((C53444 + C53445) * C92105 + (C53328 + C53329) * C181) * C41548) *
                C92195 +
            (((C50731 + C50730) * C92105 + (C50622 + C50623) * C181) * C92171 +
             ((C53441 + C53440) * C92105 + (C53319 + C53318) * C181) * C41548) *
                C92337) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2849 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C2709 -
             (C53319 + C53318) * C2850 - (C53556 + C53557) * C2710) *
                C41548 +
            ((C47296 + C47297) * C2849 + (C47493 + C47494) * C2709 -
             (C50622 + C50623) * C2850 - (C50840 + C50841) * C2710) *
                C92171) *
               C92337 +
           (((C53318 + C53319) * C2849 + (C53557 + C53556) * C2709 -
             (C53328 + C53329) * C2850 - (C53559 + C53558) * C2710) *
                C41548 +
            ((C50623 + C50622) * C2849 + (C50841 + C50840) * C2709 -
             (C53324 + C53325) * C2850 - (C53561 + C53560) * C2710) *
                C92171) *
               C92195) *
              C92105 * C1983 +
          ((((C55593 + C55592) * C2850 -
             ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                  C2709 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C2849) +
             (C55866 + C55867) * C2710) *
                C41548 +
            ((C54361 + C54360) * C2850 -
             ((C48957 + C48956) * C2709 + (C48732 + C48733) * C2849) +
             (C54634 + C54635) * C2710) *
                C92171) *
               C92337 +
           (((C46528 * C1391 + C46523 * C1403 + C46529 * C1392 +
              C92072 * C1404) *
                 C2850 -
             ((C55867 + C55866) * C2709 + (C55592 + C55593) * C2849) +
             (C46528 * C1542 + C46523 * C1550 + C46529 * C1543 +
              C92072 * C1551) *
                 C2710) *
                C41548 +
            ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
              C92072 * C5724) *
                 C2850 -
             ((C54635 + C54634) * C2709 + (C54360 + C54361) * C2849) +
             (C46528 * C5886 + C46523 * C5889 + C46529 * C5887 +
              C92072 * C5890) *
                 C2710) *
                C92171) *
               C92195) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C1987 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C1983 -
             (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
                C92337 +
            ((C53684 + C53685) * C1987 + (C53686 + C53687) * C1983 -
             C55998 * C1988 - C55999 * C1984) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C1987 + (C41805 + C41804) * C1983 -
             (C41807 + C41806) * C1988 - (C41809 + C41808) * C1984) *
                C92337 +
            (C56000 * C1987 + C56001 * C1983 - (C45015 + C45014) * C1988 -
             (C45017 + C45016) * C1984) *
                C92195) *
               C92072) *
              C2709 +
          (((C56000 * C1988 -
             ((C53687 + C53686) * C1983 + (C53685 + C53684) * C1987) +
             C56001 * C1984) *
                C92337 +
            ((C53691 + C53690) * C1988 -
             ((C53692 + C53693) * C1983 + (C53694 + C53695) * C1987) +
             (C53689 + C53688) * C1984) *
                C92195) *
               C46523 +
           (((C45014 + C45015) * C1988 - (C55999 * C1983 + C55998 * C1987) +
             (C45016 + C45017) * C1984) *
                C92337 +
            ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
              C92171 * C5967) *
                 C1988 -
             ((C53688 + C53689) * C1983 + (C53690 + C53691) * C1987) +
             (C41775 * C1408 + C41548 * C1617 + C41776 * C5727 +
              C92171 * C5970) *
                 C1984) *
                C92195) *
               C92072) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                  C181 +
              (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                  C92105) *
                 C92337 +
             ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92195) *
                C46523 +
            (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92337 +
             C56138 * C92195) *
                C92072) *
               C1983 -
           ((((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92195 +
             ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C92337) *
                C92072 +
            (C56139 * C92195 +
             ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92337) *
                C46523) *
               C1984) *
              C2709 +
          (((C56138 * C92337 +
             ((C53691 + C53690) * C181 + (C53809 + C53808) * C92105) * C92195) *
                C46523 +
            (((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92337 +
             ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
               C92171 * C5967) *
                  C181 +
              (C41775 * C1474 + C41548 * C1675 + C41776 * C5807 +
               C92171 * C6047) *
                  C92105) *
                 C92195) *
                C92072) *
               C1984 -
           ((((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C92195 +
             C56139 * C92337) *
                C92072 +
            (((C53810 + C53811) * C92105 + (C53694 + C53695) * C181) * C92195 +
             ((C53807 + C53806) * C92105 + (C53685 + C53684) * C181) * C92337) *
                C46523) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2849 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C2709 -
             (C53685 + C53684) * C2850 - (C53922 + C53923) * C2710) *
                C92337 +
            ((C53684 + C53685) * C2849 + (C53923 + C53922) * C2709 -
             (C53694 + C53695) * C2850 - (C53925 + C53924) * C2710) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C2849 + (C42000 + C42001) * C2709 -
             C55998 * C2850 - C56270 * C2710) *
                C92337 +
            (C56000 * C2849 + C56271 * C2709 - (C53690 + C53691) * C2850 -
             (C53927 + C53926) * C2710) *
                C92195) *
               C92072) *
              C92105 * C1983 +
          (((C56000 * C2850 -
             ((C42001 + C42000) * C2709 + (C41802 + C41803) * C2849) +
             C56271 * C2710) *
                C92337 +
            ((C53691 + C53690) * C2850 - (C56270 * C2709 + C55998 * C2849) +
             (C53926 + C53927) * C2710) *
                C92195) *
               C46523 +
           (((C45014 + C45015) * C2850 -
             ((C42003 + C42002) * C2709 + (C41807 + C41806) * C2849) +
             (C45237 + C45236) * C2710) *
                C92337 +
            ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
              C92171 * C5967) *
                 C2850 -
             ((C45236 + C45237) * C2709 + (C45015 + C45014) * C2849) +
             (C41775 * C1543 + C41548 * C1732 + C41776 * C5887 +
              C92171 * C6124) *
                 C2710) *
                C92195) *
               C92072) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C1987 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C1983 -
             (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
                C46523 +
            ((C9864 + C9863) * C1987 + (C9866 + C9865) * C1983 -
             (C9868 + C9867) * C1988 - (C9870 + C9869) * C1984) *
                C92072) *
               C41548 +
           (((C24243 + C24244) * C1987 + (C24245 + C24246) * C1983 -
             C55180 * C1988 - C55181 * C1984) *
                C46523 +
            (C55182 * C1987 + C55183 * C1983 - (C12332 + C12331) * C1988 -
             (C12334 + C12333) * C1984) *
                C92072) *
               C92171) *
              C2709 +
          ((((C13316 + C13317) * C1988 -
             ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 +
               C92337 * C1796) *
                  C1983 +
              (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 +
               C92337 * C1788) *
                  C1987) +
             (C13318 + C13319) * C1984) *
                C46523 +
            ((C13320 + C13321) * C1988 -
             ((C13319 + C13318) * C1983 + (C13317 + C13316) * C1987) +
             (C13322 + C13323) * C1984) *
                C92072) *
               C41548 +
           (((C56410 + C56411) * C1988 -
             ((C27900 + C27901) * C1983 + (C27902 + C27903) * C1987) +
             (C56412 + C56413) * C1984) *
                C46523 +
            ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                 C1988 -
             ((C56413 + C56412) * C1983 + (C56411 + C56410) * C1987) +
             (C9836 * C3441 + C92337 * C3881 + C9837 * C5727 + C92195 * C6204) *
                 C1984) *
                C92072) *
               C92171) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                  C181 +
              (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                  C92105) *
                 C46523 +
             ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C92072) *
                C41548 +
            (((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C46523 +
             (C55182 * C181 + C55315 * C92105) * C92072) *
                C92171) *
               C1983 -
           ((((C12443 + C12444) * C92105 + (C12332 + C12331) * C181) * C92072 +
             (C55314 * C92105 + C55180 * C181) * C46523) *
                C92171 +
            (((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C92072 +
             ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C46523) *
                C41548) *
               C1984) *
              C2709 +
          (((((C13316 + C13317) * C181 + (C13430 + C13431) * C92105) * C46523 +
             ((C13320 + C13321) * C181 + (C13432 + C13433) * C92105) * C92072) *
                C41548 +
            (((C56410 + C56411) * C181 + (C56548 + C56549) * C92105) * C46523 +
             ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 +
               C92195 * C6201) *
                  C181 +
              (C9836 * C3515 + C92337 * C3951 + C9837 * C5807 +
               C92195 * C6281) *
                  C92105) *
                 C92072) *
                C92171) *
               C1984 -
           ((((C56549 + C56548) * C92105 + (C56411 + C56410) * C181) * C92072 +
             ((C28011 + C28010) * C92105 + (C27902 + C27903) * C181) * C46523) *
                C92171 +
            (((C13431 + C13430) * C92105 + (C13317 + C13316) * C181) * C92072 +
             ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 +
               C92337 * C1854) *
                  C92105 +
              (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 +
               C92337 * C1788) *
                  C181) *
                 C46523) *
                C41548) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C2849 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C2709 -
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C2850 -
             (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                 C2710) *
                C46523 +
            ((C9864 + C9863) * C2849 + (C10060 + C10061) * C2709 -
             (C13317 + C13316) * C2850 - (C13540 + C13541) * C2710) *
                C92072) *
               C41548 +
           (((C24243 + C24244) * C2849 + (C24441 + C24442) * C2709 -
             (C27902 + C27903) * C2850 - (C28120 + C28121) * C2710) *
                C46523 +
            (C55182 * C2849 + C55447 * C2709 - (C56411 + C56410) * C2850 -
             (C56684 + C56685) * C2710) *
                C92072) *
               C92171) *
              C92105 * C1983 +
          ((((C13316 + C13317) * C2850 -
             ((C10061 + C10060) * C2709 + (C9863 + C9864) * C2849) +
             (C13541 + C13540) * C2710) *
                C46523 +
            ((C13320 + C13321) * C2850 -
             ((C10063 + C10062) * C2709 + (C9868 + C9867) * C2849) +
             (C13543 + C13542) * C2710) *
                C92072) *
               C41548 +
           (((C56410 + C56411) * C2850 - (C55448 * C2709 + C55180 * C2849) +
             (C56685 + C56684) * C2710) *
                C46523 +
            ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                 C2850 -
             ((C12551 + C12552) * C2709 + (C12332 + C12331) * C2849) +
             (C9836 * C3589 + C92337 * C4021 + C9837 * C5887 + C92195 * C6358) *
                 C2710) *
                C92072) *
               C92171) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C104 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C93 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C105 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C94 +
            (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C106 +
            (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
                C95) *
               C41548 +
           ((C47296 + C47297) * C104 + (C47298 + C47299) * C93 -
            (C48732 + C48733) * C105 - (C48734 + C48735) * C94 +
            (C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C106 +
            (C46528 * C811 + C46523 * C827 + C46529 * C810 + C92072 * C826) *
                C95) *
               C92171) *
              C92337 +
          (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
             C92072 * C1400) *
                C104 +
            (C46528 * C1397 + C46523 * C1413 + C46529 * C1396 +
             C92072 * C1412) *
                C93 -
            (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
             C46523 * C1400) *
                C105 -
            (C46529 * C1395 + C92072 * C1411 + C46528 * C1396 +
             C46523 * C1412) *
                C94 +
            (C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C106 +
            (C46528 * C1395 + C46523 * C1411 + C46529 * C1394 +
             C92072 * C1410) *
                C95) *
               C41548 +
           ((C50623 + C50622) * C104 + (C50621 + C50620) * C93 -
            (C46529 * C3433 + C92072 * C3437 + C46528 * C3432 +
             C46523 * C3436) *
                C105 -
            (C46529 * C3441 + C92072 * C3445 + C46528 * C3440 +
             C46523 * C3444) *
                C94 +
            (C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
             C92072 * C3438) *
                C106 +
            (C46528 * C3441 + C46523 * C3445 + C46529 * C3442 +
             C92072 * C3446) *
                C95) *
               C92171) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C41548 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C801 +
             (C46528 * C1397 + C46523 * C1413 + C46529 * C1396 +
              C92072 * C1412) *
                 C92084) *
                C41548 +
            ((C50623 + C50622) * C801 + (C50621 + C50620) * C92084) * C92171) *
               C92195) *
              C92116 * C798 -
          ((((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C92171 +
            ((C50620 + C50621) * C92084 + (C50622 + C50623) * C801) * C41548) *
               C92195 +
           (((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92171 +
            ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C41548) *
               C92337) *
              C92116 * C799 +
          ((C47312 * C41548 +
            ((C47307 + C47306) * C801 + (C47305 + C47304) * C92084) * C92171) *
               C92337 +
           (((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C41548 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C46528 * C18736 + C46523 * C18738 + C46529 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C92171) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C41548 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C181 +
             (C46528 * C1471 + C46523 * C1479 + C46529 * C1470 +
              C92072 * C1478) *
                 C92105) *
                C41548 +
            ((C50623 + C50622) * C181 + (C50730 + C50731) * C92105) * C92171) *
               C92195) *
              C93 -
          ((((C46529 * C3515 + C92072 * C3519 + C46528 * C3514 +
              C46523 * C3518) *
                 C92105 +
             (C46529 * C3433 + C92072 * C3437 + C46528 * C3432 +
              C46523 * C3436) *
                 C181) *
                C92171 +
            ((C46529 * C1469 + C92072 * C1477 + C46528 * C1470 +
              C46523 * C1478) *
                 C92105 +
             (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
              C46523 * C1400) *
                 C181) *
                C41548) *
               C92195 +
           (((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92171 +
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C92105 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C181) *
                C41548) *
               C92337) *
              C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C181 +
             (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                 C92105) *
                C41548 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C181 +
             (C46528 * C888 + C46523 * C896 + C46529 * C887 + C92072 * C895) *
                 C92105) *
                C92171) *
               C92337 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C181 +
             (C46528 * C1469 + C46523 * C1477 + C46529 * C1468 +
              C92072 * C1476) *
                 C92105) *
                C41548 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C181 +
             (C46528 * C3515 + C46523 * C3519 + C46529 * C3516 +
              C92072 * C3520) *
                 C92105) *
                C92171) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C884 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C798 -
            (C47297 + C47296) * C885 - (C47399 + C47400) * C799 +
            C47308 * C886 + C47405 * C800) *
               C41548 +
           ((C47296 + C47297) * C884 + (C47400 + C47399) * C798 -
            (C47301 + C47300) * C885 - (C47402 + C47401) * C799 +
            (C47307 + C47306) * C886 + (C47403 + C47404) * C800) *
               C92171) *
              C92337 +
          (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
             C92072 * C1400) *
                C884 +
            (C46528 * C1471 + C46523 * C1479 + C46529 * C1470 +
             C92072 * C1478) *
                C798 -
            (C50622 + C50623) * C885 - (C50731 + C50730) * C799 +
            (C50619 + C50618) * C886 + (C50732 + C50733) * C800) *
               C41548 +
           ((C50623 + C50622) * C884 + (C50730 + C50731) * C798 -
            (C50618 + C50619) * C885 - (C50733 + C50732) * C799 +
            (C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
             C92072 * C18735) *
                C886 +
            (C46528 * C18862 + C46523 * C18864 + C46529 * C18863 +
             C92072 * C18865) *
                C800) *
               C92171) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C244 +
             (C46528 * C1540 + C46523 * C1548 + C46529 * C1539 +
              C92072 * C1547) *
                 C92116) *
                C41548 +
            ((C50623 + C50622) * C244 + (C50841 + C50840) * C92116) * C92171) *
               C92195) *
              C92105 * C93 -
          ((((C46529 * C3589 + C92072 * C3593 + C46528 * C3588 +
              C46523 * C3592) *
                 C92116 +
             (C46529 * C3433 + C92072 * C3437 + C46528 * C3432 +
              C46523 * C3436) *
                 C244) *
                C92171 +
            ((C46529 * C1538 + C92072 * C1546 + C46528 * C1539 +
              C46523 * C1547) *
                 C92116 +
             (C46529 * C1387 + C92072 * C1399 + C46528 * C1388 +
              C46523 * C1400) *
                 C244) *
                C41548) *
               C92195 +
           (((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92171 +
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C92116 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C244) *
                C41548) *
               C92337) *
              C92105 * C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C244 +
             (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                 C92116) *
                C41548 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C244 +
             (C46528 * C954 + C46523 * C962 + C46529 * C953 + C92072 * C961) *
                 C92116) *
                C92171) *
               C92337 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C244 +
             (C46528 * C1538 + C46523 * C1546 + C46529 * C1537 +
              C92072 * C1545) *
                 C92116) *
                C41548 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C244 +
             (C46528 * C3589 + C46523 * C3593 + C46529 * C3590 +
              C92072 * C3594) *
                 C92116) *
                C92171) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C92337 +
           (((C46528 * C1389 + C46523 * C1401 + C46529 * C1388 +
              C92072 * C1400) *
                 C244 +
             (C46528 * C1540 + C46523 * C1548 + C46529 * C1539 +
              C92072 * C1547) *
                 C92116) *
                C41548 +
            ((C50623 + C50622) * C244 + (C50841 + C50840) * C92116) * C92171) *
               C92195) *
              C798 -
          ((((C50842 + C50843) * C92116 + (C50618 + C50619) * C244) * C92171 +
            ((C50840 + C50841) * C92116 + (C50622 + C50623) * C244) * C41548) *
               C92195 +
           (((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92171 +
            ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C41548) *
               C92337) *
              C799 +
          ((C47501 * C41548 +
            ((C47307 + C47306) * C244 + (C47498 + C47497) * C92116) * C92171) *
               C92337 +
           (((C50619 + C50618) * C244 + (C50843 + C50842) * C92116) * C41548 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C244 +
             (C46528 * C18976 + C46523 * C18978 + C46529 * C18977 +
              C92072 * C18979) *
                 C92116) *
                C92171) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C104 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C93 -
            (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
            C41815 * C95) *
               C92337 +
           ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
             C92171 * C3661) *
                C104 +
            (C41775 * C1397 + C41548 * C1614 + C41776 * C3439 +
             C92171 * C3665) *
                C93 -
            (C45011 + C45010) * C105 - (C45013 + C45012) * C94 +
            (C45014 + C45015) * C106 + (C45016 + C45017) * C95) *
               C92195) *
              C46523 +
          (((C41803 + C41802) * C104 + (C41805 + C41804) * C93 -
            (C41807 + C41806) * C105 - (C41809 + C41808) * C94 +
            (C41810 + C41811) * C106 + (C41812 + C41813) * C95) *
               C92337 +
           ((C45010 + C45011) * C104 + (C45012 + C45013) * C93 -
            (C45015 + C45014) * C105 - (C45017 + C45016) * C94 +
            (C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
             C92171 * C3664) *
                C106 +
            (C41775 * C1394 + C41548 * C1611 + C41776 * C3442 +
             C92171 * C3668) *
                C95) *
               C92195) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C801 +
             (C41775 * C1397 + C41548 * C1614 + C41776 * C3439 +
              C92171 * C3665) *
                 C92084) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C92337 +
            ((C45010 + C45011) * C801 + (C45012 + C45013) * C92084) * C92195) *
               C92072) *
              C92116 * C798 -
          ((((C41776 * C8419 + C92171 * C8770 + C41775 * C3440 +
              C41548 * C3666) *
                 C92084 +
             (C41776 * C8413 + C92171 * C8767 + C41775 * C3432 +
              C41548 * C3662) *
                 C801) *
                C92195 +
            ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C92337) *
               C92072 +
           (((C41776 * C8418 + C92171 * C8769 + C41775 * C3439 +
              C41548 * C3665) *
                 C92084 +
             (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
              C41548 * C3661) *
                 C801) *
                C92195 +
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C92084 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C801) *
                C92337) *
               C46523) *
              C92116 * C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C801 +
             (C41775 * C822 + C41548 * C1031 + C41776 * C4871 +
              C92171 * C5186) *
                 C92084) *
                C92337 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C801 +
             (C41775 * C8418 + C41548 * C8769 + C41776 * C18736 +
              C92171 * C19092) *
                 C92084) *
                C92195) *
               C46523 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C801 +
             (C41775 * C823 + C41548 * C1032 + C41776 * C4872 +
              C92171 * C5187) *
                 C92084) *
                C92337 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C801 +
             (C41775 * C8419 + C41548 * C8770 + C41776 * C18737 +
              C92171 * C19093) *
                 C92084) *
                C92195) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C181 +
             (C41775 * C1471 + C41548 * C1672 + C41776 * C3513 +
              C92171 * C3735) *
                 C92105) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C92337 +
            ((C45010 + C45011) * C181 + (C45124 + C45125) * C92105) * C92195) *
               C92072) *
              C93 -
          ((((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92195 +
            ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C92337) *
               C92072 +
           (((C45125 + C45124) * C92105 + (C45011 + C45010) * C181) * C92195 +
            ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92337) *
               C46523) *
              C94 +
          ((C41911 * C92337 +
            ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92195) *
               C46523 +
           (((C41810 + C41811) * C181 + (C41908 + C41907) * C92105) * C92337 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C181 +
             (C41775 * C1468 + C41548 * C1669 + C41776 * C3516 +
              C92171 * C3738) *
                 C92105) *
                C92195) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C884 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C798 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C885 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C799 +
            (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C886 +
            (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
                C800) *
               C92337 +
           ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
             C92171 * C3661) *
                C884 +
            (C41775 * C1471 + C41548 * C1672 + C41776 * C3513 +
             C92171 * C3735) *
                C798 -
            (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
             C41548 * C3661) *
                C885 -
            (C41776 * C8540 + C92171 * C8870 + C41775 * C3513 +
             C41548 * C3735) *
                C799 +
            (C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C886 +
            (C41775 * C8540 + C41548 * C8870 + C41776 * C18862 +
             C92171 * C19192) *
                C800) *
               C92195) *
              C46523 +
          (((C41803 + C41802) * C884 + (C41903 + C41904) * C798 -
            (C44081 + C44080) * C885 - (C44194 + C44195) * C799 +
            (C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C886 +
            (C41775 * C892 + C41548 * C1088 + C41776 * C4988 + C92171 * C5264) *
                C800) *
               C92337 +
           ((C45010 + C45011) * C884 + (C45124 + C45125) * C798 -
            (C41776 * C8413 + C92171 * C8767 + C41775 * C3432 +
             C41548 * C3662) *
                C885 -
            (C41776 * C8541 + C92171 * C8871 + C41775 * C3514 +
             C41548 * C3736) *
                C799 +
            (C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
             C92171 * C19091) *
                C886 +
            (C41775 * C8541 + C41548 * C8871 + C41776 * C18863 +
             C92171 * C19193) *
                C800) *
               C92195) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C244 +
             (C41775 * C1540 + C41548 * C1727 + C41776 * C3587 +
              C92171 * C3805) *
                 C92116) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92337 +
            ((C45010 + C45011) * C244 + (C45235 + C45234) * C92116) * C92195) *
               C92072) *
              C92105 * C93 -
          ((((C45236 + C45237) * C92116 + (C45015 + C45014) * C244) * C92195 +
            ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C92337) *
               C92072 +
           (((C45234 + C45235) * C92116 + (C45011 + C45010) * C244) * C92195 +
            ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92337) *
               C46523) *
              C92105 * C94 +
          ((C42008 * C92337 +
            ((C45014 + C45015) * C244 + (C45237 + C45236) * C92116) * C92195) *
               C46523 +
           (((C41810 + C41811) * C244 + (C42005 + C42004) * C92116) * C92337 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C244 +
             (C41775 * C1537 + C41548 * C1733 + C41776 * C3590 +
              C92171 * C3808) *
                 C92116) *
                C92195) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C92337 +
            ((C41775 * C1389 + C41548 * C1606 + C41776 * C3431 +
              C92171 * C3661) *
                 C244 +
             (C41775 * C1540 + C41548 * C1727 + C41776 * C3587 +
              C92171 * C3805) *
                 C92116) *
                C92195) *
               C46523 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C92337 +
            ((C45010 + C45011) * C244 + (C45235 + C45234) * C92116) * C92195) *
               C92072) *
              C798 -
          ((((C41776 * C8654 + C92171 * C8972 + C41775 * C3588 +
              C41548 * C3806) *
                 C92116 +
             (C41776 * C8413 + C92171 * C8767 + C41775 * C3432 +
              C41548 * C3662) *
                 C244) *
                C92195 +
            ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C92337) *
               C92072 +
           (((C41776 * C8653 + C92171 * C8971 + C41775 * C3587 +
              C41548 * C3805) *
                 C92116 +
             (C41776 * C8412 + C92171 * C8766 + C41775 * C3431 +
              C41548 * C3661) *
                 C244) *
                C92195 +
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C92116 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C244) *
                C92337) *
               C46523) *
              C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C244 +
             (C41775 * C957 + C41548 * C1147 + C41776 * C5085 +
              C92171 * C5340) *
                 C92116) *
                C92337 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C244 +
             (C41775 * C8653 + C41548 * C8971 + C41776 * C18976 +
              C92171 * C19292) *
                 C92116) *
                C92195) *
               C46523 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C244 +
             (C41775 * C958 + C41548 * C1148 + C41776 * C5086 +
              C92171 * C5341) *
                 C92116) *
                C92337 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C244 +
             (C41775 * C8654 + C41548 * C8972 + C41776 * C18977 +
              C92171 * C19293) *
                 C92116) *
                C92195) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C104 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C93 -
            (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
            C9876 * C95) *
               C46523 +
           ((C9864 + C9863) * C104 + (C9866 + C9865) * C93 -
            (C9868 + C9867) * C105 - (C9870 + C9869) * C94 +
            (C9871 + C9872) * C106 + (C9873 + C9874) * C95) *
               C92072) *
              C41548 +
          (((C24243 + C24244) * C104 + (C24245 + C24246) * C93 -
            (C12328 + C12327) * C105 - (C12330 + C12329) * C94 +
            (C12331 + C12332) * C106 + (C12333 + C12334) * C95) *
               C46523 +
           ((C12327 + C12328) * C104 + (C12329 + C12330) * C93 -
            (C12332 + C12331) * C105 - (C12334 + C12333) * C94 +
            (C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                C106 +
            (C9836 * C810 + C92337 * C1209 + C9837 * C3442 + C92195 * C3882) *
                C95) *
               C92072) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C46523 +
            ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C92072) *
               C41548 +
           (((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C46523 +
            ((C12327 + C12328) * C801 + (C12329 + C12330) * C92084) * C92072) *
               C92171) *
              C92116 * C798 -
          ((((C26021 + C26022) * C92084 + (C26019 + C26020) * C801) * C92072 +
            ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C46523) *
               C92171 +
           (((C12330 + C12329) * C92084 + (C12328 + C12327) * C801) * C92072 +
            ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C46523) *
               C41548) *
              C92116 * C799 +
          ((C24259 * C46523 +
            ((C26020 + C26019) * C801 + (C26022 + C26021) * C92084) * C92072) *
               C41548 +
           (((C24254 + C24253) * C801 + (C24252 + C24251) * C92084) * C46523 +
            ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
              C92195 * C19393) *
                 C801 +
             (C9836 * C4872 + C92337 * C5421 + C9837 * C18737 +
              C92195 * C19395) *
                 C92084) *
                C92072) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C46523 +
            ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C92072) *
               C41548 +
           (((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C46523 +
            ((C12327 + C12328) * C181 + (C12442 + C12441) * C92105) * C92072) *
               C92171) *
              C93 -
          ((((C12443 + C12444) * C92105 + (C12332 + C12331) * C181) * C92072 +
            ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C46523) *
               C92171 +
           (((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C92072 +
            ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C46523) *
               C41548) *
              C94 +
          ((C9972 * C46523 +
            ((C9871 + C9872) * C181 + (C9969 + C9968) * C92105) * C92072) *
               C41548 +
           (((C12331 + C12332) * C181 + (C12444 + C12443) * C92105) * C46523 +
            ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                 C181 +
             (C9836 * C887 + C92337 * C1273 + C9837 * C3516 + C92195 * C3952) *
                 C92105) *
                C92072) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C884 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C798 -
            (C24244 + C24243) * C885 - (C24347 + C24348) * C799 +
            C24255 * C886 + C24353 * C800) *
               C46523 +
           ((C9864 + C9863) * C884 + (C9964 + C9965) * C798 -
            (C12328 + C12327) * C885 - (C12441 + C12442) * C799 +
            (C26020 + C26019) * C886 + (C26125 + C26126) * C800) *
               C92072) *
              C41548 +
          (((C24243 + C24244) * C884 + (C24348 + C24347) * C798 -
            (C24248 + C24247) * C885 - (C24350 + C24349) * C799 +
            (C24254 + C24253) * C886 + (C24351 + C24352) * C800) *
               C46523 +
           ((C12327 + C12328) * C884 + (C12442 + C12441) * C798 -
            (C26019 + C26020) * C885 - (C26126 + C26125) * C799 +
            (C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
             C92195 * C19393) *
                C886 +
            (C9836 * C4988 + C92337 * C5534 + C9837 * C18863 +
             C92195 * C19505) *
                C800) *
               C92072) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C92072) *
               C41548 +
           (((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C46523 +
            ((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C92072) *
               C92171) *
              C92105 * C93 -
          ((((C12551 + C12552) * C92116 + (C12332 + C12331) * C244) * C92072 +
            ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C46523) *
               C92171 +
           (((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C92072 +
            ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C46523) *
               C41548) *
              C92105 * C94 +
          ((C10068 * C46523 +
            ((C9871 + C9872) * C244 + (C10065 + C10064) * C92116) * C92072) *
               C41548 +
           (((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C46523 +
            ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                 C244 +
             (C9836 * C953 + C92337 * C1325 + C9837 * C3590 + C92195 * C4022) *
                 C92116) *
                C92072) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C92072) *
               C41548 +
           (((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C46523 +
            ((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C92072) *
               C92171) *
              C798 -
          ((((C26230 + C26229) * C92116 + (C26019 + C26020) * C244) * C92072 +
            ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C46523) *
               C92171 +
           (((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92072 +
            ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C46523) *
               C41548) *
              C799 +
          ((C24449 * C46523 +
            ((C26020 + C26019) * C244 + (C26229 + C26230) * C92116) * C92072) *
               C41548 +
           (((C24254 + C24253) * C244 + (C24446 + C24445) * C92116) * C46523 +
            ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C9836 * C5086 + C92337 * C5623 + C9837 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92072) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C1987 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C1983 -
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C1988 -
             (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                 C1984) *
                C41548 +
            ((C15306 + C15307) * C1987 + (C15308 + C15309) * C1983 -
             (C16834 + C16835) * C1988 - (C16836 + C16837) * C1984) *
                C92171) *
               C57967 +
           (((C29644 + C29645) * C1987 + (C29646 + C29647) * C1983 -
             (C31406 + C31407) * C1988 - (C31408 + C31409) * C1984) *
                C41548 +
            ((C18764 + C18763) * C1987 + (C18762 + C18761) * C1983 -
             (C76800 + C76801) * C1988 - (C76802 + C76803) * C1984) *
                C92171) *
               C92195) *
              C92116 * C1985 +
          ((((C16835 + C16834) * C1988 -
             ((C15309 + C15308) * C1983 + (C15307 + C15306) * C1987) +
             (C16837 + C16836) * C1984) *
                C41548 +
            ((C16839 + C16838) * C1988 -
             ((C15313 + C15312) * C1983 + (C15311 + C15310) * C1987) +
             (C16841 + C16840) * C1984) *
                C92171) *
               C57967 +
           (((C76801 + C76800) * C1988 -
             ((C18761 + C18762) * C1983 + (C18763 + C18764) * C1987) +
             (C76803 + C76802) * C1984) *
                C41548 +
            ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
              C92072 * C8417) *
                 C1988 -
             ((C18757 + C18758) * C1983 + (C18759 + C18760) * C1987) +
             (C89875 * C8419 + C92322 * C8422 + C89868 * C8420 +
              C92072 * C8423) *
                 C1984) *
                C92171) *
               C92195) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C2059 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C1985 -
             (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
                C41548 +
            ((C15306 + C15307) * C2059 + (C15414 + C15413) * C1985 -
             (C15311 + C15310) * C2060 - (C15416 + C15415) * C1986) *
                C92171) *
               C57967 +
           (((C29644 + C29645) * C2059 + (C29753 + C29754) * C1985 -
             (C18763 + C18764) * C2060 - (C18876 + C18875) * C1986) *
                C41548 +
            ((C18764 + C18763) * C2059 + (C18875 + C18876) * C1985 -
             (C18759 + C18760) * C2060 - (C18878 + C18877) * C1986) *
                C92171) *
               C92195) *
              C1983 +
          ((((C16835 + C16834) * C2060 -
             ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                  C1985 +
              (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                  C2059) +
             (C16948 + C16949) * C1986) *
                C41548 +
            ((C16839 + C16838) * C2060 -
             ((C16949 + C16948) * C1985 + (C16834 + C16835) * C2059) +
             (C16950 + C16951) * C1986) *
                C92171) *
               C57967 +
           (((C76801 + C76800) * C2060 -
             ((C31522 + C31523) * C1985 + (C31406 + C31407) * C2059) +
             (C76938 + C76939) * C1986) *
                C41548 +
            ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
              C92072 * C8417) *
                 C2060 -
             ((C76939 + C76938) * C1985 + (C76800 + C76801) * C2059) +
             (C89875 * C8541 + C92322 * C8544 + C89868 * C8542 +
              C92072 * C8545) *
                 C1986) *
                C92171) *
               C92195) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                  C244 +
              (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                  C92116) *
                 C41548 +
             ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C92171) *
                C57967 +
            (((C29644 + C29645) * C244 + (C29854 + C29853) * C92116) * C41548 +
             ((C18764 + C18763) * C244 + (C18990 + C18989) * C92116) * C92171) *
                C92195) *
               C1985 -
           ((((C18991 + C18992) * C92116 + (C18759 + C18760) * C244) * C92171 +
             ((C18989 + C18990) * C92116 + (C18763 + C18764) * C244) * C41548) *
                C92195 +
            (((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C92171 +
             ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C41548) *
                C57967) *
               C1986) *
              C1983 +
          (((((C16835 + C16834) * C244 + (C17058 + C17059) * C92116) * C41548 +
             ((C16839 + C16838) * C244 + (C17060 + C17061) * C92116) * C92171) *
                C57967 +
            (((C76801 + C76800) * C244 + (C77074 + C77075) * C92116) * C41548 +
             ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
               C92072 * C8417) *
                  C244 +
              (C89875 * C8654 + C92322 * C8657 + C89868 * C8655 +
               C92072 * C8658) *
                  C92116) *
                 C92171) *
                C92195) *
               C1986 -
           ((((C77075 + C77074) * C92116 + (C76800 + C76801) * C244) * C92171 +
             ((C31631 + C31630) * C92116 + (C31406 + C31407) * C244) * C41548) *
                C92195 +
            (((C17059 + C17058) * C92116 + (C16834 + C16835) * C244) * C92171 +
             ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                  C92116 +
              (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                  C244) *
                 C41548) *
                C57967) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C1987 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C1983 -
             (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
                C57967 +
            ((C53684 + C53685) * C1987 + (C53686 + C53687) * C1983 -
             C55998 * C1988 - C55999 * C1984) *
                C92195) *
               C92322 +
           (((C41803 + C41802) * C1987 + (C41805 + C41804) * C1983 -
             (C41807 + C41806) * C1988 - (C41809 + C41808) * C1984) *
                C57967 +
            (C56000 * C1987 + C56001 * C1983 - (C45015 + C45014) * C1988 -
             (C45017 + C45016) * C1984) *
                C92195) *
               C92072) *
              C92116 * C1985 +
          ((((C44080 + C44081) * C1988 -
             ((C41776 * C822 + C92171 * C1031 + C41775 * C813 +
               C41548 * C1030) *
                  C1983 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C1987) +
             (C44082 + C44083) * C1984) *
                C57967 +
            ((C54774 + C54775) * C1988 -
             ((C57231 + C57230) * C1983 + (C57229 + C57228) * C1987) +
             (C54776 + C54777) * C1984) *
                C92195) *
               C92322 +
           (((C44084 + C44085) * C1988 -
             ((C44083 + C44082) * C1983 + (C44081 + C44080) * C1987) +
             (C44086 + C44087) * C1984) *
                C57967 +
            ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
              C92171 * C8768) *
                 C1988 -
             ((C54777 + C54776) * C1983 + (C54775 + C54774) * C1987) +
             (C41775 * C3441 + C41548 * C3667 + C41776 * C8420 +
              C92171 * C8771) *
                 C1984) *
                C92195) *
               C92072) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2059 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C1985 -
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C2060 -
             (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                 C1986) *
                C57967 +
            ((C53684 + C53685) * C2059 + (C53806 + C53807) * C1985 -
             (C57229 + C57228) * C2060 - (C57366 + C57367) * C1986) *
                C92195) *
               C92322 +
           (((C41803 + C41802) * C2059 + (C41903 + C41904) * C1985 -
             (C44081 + C44080) * C2060 - (C44194 + C44195) * C1986) *
                C57967 +
            (C56000 * C2059 + C56133 * C1985 - (C54775 + C54774) * C2060 -
             (C54912 + C54913) * C1986) *
                C92195) *
               C92072) *
              C1983 +
          ((((C44080 + C44081) * C2060 -
             ((C41904 + C41903) * C1985 + (C41802 + C41803) * C2059) +
             (C44195 + C44194) * C1986) *
                C57967 +
            ((C54774 + C54775) * C2060 - (C56134 * C1985 + C55998 * C2059) +
             (C54913 + C54912) * C1986) *
                C92195) *
               C92322 +
           (((C44084 + C44085) * C2060 -
             ((C41906 + C41905) * C1985 + (C41807 + C41806) * C2059) +
             (C44197 + C44196) * C1986) *
                C57967 +
            ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
              C92171 * C8768) *
                 C2060 -
             ((C45127 + C45126) * C1985 + (C45015 + C45014) * C2059) +
             (C41775 * C3515 + C41548 * C3737 + C41776 * C8542 +
              C92171 * C8872) *
                 C1986) *
                C92195) *
               C92072) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                  C244 +
              (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                  C92116) *
                 C57967 +
             ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92195) *
                C92322 +
            (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C57967 +
             (C56000 * C244 + C56271 * C92116) * C92195) *
                C92072) *
               C1985 -
           ((((C55048 + C55049) * C92116 + (C54775 + C54774) * C244) * C92195 +
             ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C57967) *
                C92072 +
            (((C57503 + C57502) * C92116 + (C57229 + C57228) * C244) * C92195 +
             ((C41776 * C957 + C92171 * C1147 + C41775 * C956 +
               C41548 * C1146) *
                  C92116 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C244) *
                 C57967) *
                C92322) *
               C1986) *
              C1983 +
          (((((C44080 + C44081) * C244 + (C44307 + C44306) * C92116) * C57967 +
             ((C54774 + C54775) * C244 + (C55049 + C55048) * C92116) * C92195) *
                C92322 +
            (((C44084 + C44085) * C244 + (C44305 + C44304) * C92116) * C57967 +
             ((C41775 * C3433 + C41548 * C3663 + C41776 * C8414 +
               C92171 * C8768) *
                  C244 +
              (C41775 * C3589 + C41548 * C3807 + C41776 * C8655 +
               C92171 * C8973) *
                  C92116) *
                 C92195) *
                C92072) *
               C1986 -
           ((((C45236 + C45237) * C92116 + (C45015 + C45014) * C244) * C92195 +
             ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C57967) *
                C92072 +
            ((C56270 * C92116 + C55998 * C244) * C92195 +
             ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C57967) *
                C92322) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C1987 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C1983 -
             (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
                C92322 +
            ((C58447 + C58446) * C1987 + (C58449 + C58448) * C1983 -
             (C58451 + C58450) * C1988 - (C58453 + C58452) * C1984) *
                C92072) *
               C41548 +
           (((C64426 + C64427) * C1987 + (C64428 + C64429) * C1983 -
             C66486 * C1988 - C66487 * C1984) *
                C92322 +
            (C66488 * C1987 + C66489 * C1983 - (C60763 + C60762) * C1988 -
             (C60765 + C60764) * C1984) *
                C92072) *
               C92171) *
              C92116 * C1985 +
          (((C66488 * C1988 -
             ((C64429 + C64428) * C1983 + (C64427 + C64426) * C1987) +
             C66489 * C1984) *
                C92322 +
            ((C60762 + C60763) * C1988 - (C66487 * C1983 + C66486 * C1987) +
             (C60764 + C60765) * C1984) *
                C92072) *
               C41548 +
           (((C64433 + C64432) * C1988 -
             ((C64434 + C64435) * C1983 + (C64436 + C64437) * C1987) +
             (C64431 + C64430) * C1984) *
                C92322 +
            ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 +
              C92195 * C9074) *
                 C1988 -
             ((C64430 + C64431) * C1983 + (C64432 + C64433) * C1987) +
             (C58419 * C824 + C57967 * C1215 + C58420 * C8420 +
              C92195 * C9077) *
                 C1984) *
                C92072) *
               C92171) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2059 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C1985 -
             (C64427 + C64426) * C2060 - (C64548 + C64549) * C1986) *
                C92322 +
            ((C58447 + C58446) * C2059 + (C58547 + C58548) * C1985 -
             C66486 * C2060 - C66620 * C1986) *
                C92072) *
               C41548 +
           (((C64426 + C64427) * C2059 + (C64549 + C64548) * C1985 -
             (C64436 + C64437) * C2060 - (C64551 + C64550) * C1986) *
                C92322 +
            (C66488 * C2059 + C66621 * C1985 - (C64432 + C64433) * C2060 -
             (C64553 + C64552) * C1986) *
                C92072) *
               C92171) *
              C1983 +
          (((C66488 * C2060 -
             ((C58548 + C58547) * C1985 + (C58446 + C58447) * C2059) +
             C66621 * C1986) *
                C92322 +
            ((C60762 + C60763) * C2060 -
             ((C58550 + C58549) * C1985 + (C58451 + C58450) * C2059) +
             (C60875 + C60874) * C1986) *
                C92072) *
               C41548 +
           (((C64433 + C64432) * C2060 - (C66620 * C1985 + C66486 * C2059) +
             (C64552 + C64553) * C1986) *
                C92322 +
            ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 +
              C92195 * C9074) *
                 C2060 -
             ((C60874 + C60875) * C1985 + (C60763 + C60762) * C2059) +
             (C58419 * C893 + C57967 * C1272 + C58420 * C8542 +
              C92195 * C9190) *
                 C1986) *
                C92072) *
               C92171) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C58419 * C107 + C57967 * C555 + C58420 * C1389 +
               C92195 * C1788) *
                  C244 +
              (C58419 * C245 + C57967 * C719 + C58420 * C1540 +
               C92195 * C1909) *
                  C92116) *
                 C92322 +
             ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
                C41548 +
            (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92322 +
             C66758 * C92072) *
                C92171) *
               C1985 -
           ((((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92072 +
             ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C92322) *
                C92171 +
            (C66759 * C92072 +
             ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C92322) *
                C41548) *
               C1986) *
              C1983 +
          (((C66758 * C92322 +
             ((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92072) *
                C41548 +
            (((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C92322 +
             ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 +
               C92195 * C9074) *
                  C244 +
              (C58419 * C959 + C57967 * C1331 + C58420 * C8655 +
               C92195 * C9294) *
                  C92116) *
                 C92072) *
                C92171) *
               C1986 -
           ((((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C92072 +
             C66759 * C92322) *
                C92171 +
            (((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92072 +
             ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92322) *
                C41548) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                  C801 +
              (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                  C92084) *
                 C41548 +
             ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C92171) *
                C57967 +
            (((C29644 + C29645) * C801 + (C29646 + C29647) * C92084) * C41548 +
             C79164 * C92171) *
                C92195) *
               C2709 -
           ((((C32384 + C32383) * C92084 + (C32382 + C32381) * C801) * C92171 +
             ((C29651 + C29650) * C92084 + (C29649 + C29648) * C801) * C41548) *
                C92195 +
            (C79165 * C92171 +
             ((C29647 + C29646) * C92084 + (C29645 + C29644) * C801) * C41548) *
                C57967) *
               C2710) *
              C1985 +
          (((C79164 * C41548 +
             ((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C92171) *
                C57967 +
            (((C32381 + C32382) * C801 + (C32383 + C32384) * C92084) * C41548 +
             ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
               C92072 * C16098) *
                  C801 +
              (C89875 * C16099 + C92322 * C16101 + C89868 * C16100 +
               C92072 * C16102) *
                  C92084) *
                 C92171) *
                C92195) *
               C2710 -
           ((((C18757 + C18758) * C92084 + (C18759 + C18760) * C801) * C92171 +
             C79165 * C41548) *
                C92195 +
            (((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C92171 +
             ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C41548) *
                C57967) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C2059 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C1985 -
             (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
                C41548 +
            ((C15306 + C15307) * C2059 + (C15414 + C15413) * C1985 -
             (C15311 + C15310) * C2060 - (C15416 + C15415) * C1986) *
                C92171) *
               C57967 +
           (((C29644 + C29645) * C2059 + (C29753 + C29754) * C1985 -
             C79159 * C2060 - C79296 * C1986) *
                C41548 +
            (C79156 * C2059 + C79297 * C1985 - (C18759 + C18760) * C2060 -
             (C18878 + C18877) * C1986) *
                C92171) *
               C92195) *
              C92084 * C2709 +
          (((C79156 * C2060 -
             ((C29754 + C29753) * C1985 + (C29645 + C29644) * C2059) +
             C79297 * C1986) *
                C41548 +
            ((C18760 + C18759) * C2060 - (C79296 * C1985 + C79159 * C2059) +
             (C18877 + C18878) * C1986) *
                C92171) *
               C57967 +
           (((C32381 + C32382) * C2060 -
             ((C29756 + C29755) * C1985 + (C29649 + C29648) * C2059) +
             (C32490 + C32489) * C1986) *
                C41548 +
            ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
              C92072 * C16098) *
                 C2060 -
             ((C32489 + C32490) * C1985 + (C32382 + C32381) * C2059) +
             (C89875 * C16177 + C92322 * C16179 + C89868 * C16178 +
              C92072 * C16180) *
                 C1986) *
                C92171) *
               C92195) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C2849 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C2709 -
             (C29645 + C29644) * C2850 - (C29853 + C29854) * C2710) *
                C41548 +
            ((C15306 + C15307) * C2849 + (C15511 + C15512) * C2709 -
             C79159 * C2850 - C79428 * C2710) *
                C92171) *
               C57967 +
           (((C29644 + C29645) * C2849 + (C29854 + C29853) * C2709 -
             (C29649 + C29648) * C2850 - (C29856 + C29855) * C2710) *
                C41548 +
            (C79156 * C2849 + C79429 * C2709 - (C32382 + C32381) * C2850 -
             (C32596 + C32595) * C2710) *
                C92171) *
               C92195) *
              C1985 +
          (((C79156 * C2850 -
             ((C15512 + C15511) * C2709 + (C15307 + C15306) * C2849) +
             C79429 * C2710) *
                C41548 +
            ((C18760 + C18759) * C2850 -
             ((C15514 + C15513) * C2709 + (C15311 + C15310) * C2849) +
             (C18992 + C18991) * C2710) *
                C92171) *
               C57967 +
           (((C32381 + C32382) * C2850 - (C79428 * C2709 + C79159 * C2849) +
             (C32595 + C32596) * C2710) *
                C41548 +
            ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
              C92072 * C16098) *
                 C2850 -
             ((C18991 + C18992) * C2709 + (C18759 + C18760) * C2849) +
             (C89875 * C16255 + C92322 * C16257 + C89868 * C16256 +
              C92072 * C16258) *
                 C2710) *
                C92171) *
               C92195) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                  C801 +
              (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                  C92084) *
                 C57967 +
             ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92195) *
                C92322 +
            (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C57967 +
             (C56000 * C801 + C56001 * C92084) * C92195) *
                C92072) *
               C2709 -
           ((((C53688 + C53689) * C92084 + (C53690 + C53691) * C801) * C92195 +
             (C55999 * C92084 + C55998 * C801) * C57967) *
                C92072 +
            (((C53692 + C53693) * C92084 + (C53694 + C53695) * C801) * C92195 +
             ((C53687 + C53686) * C92084 + (C53685 + C53684) * C801) * C57967) *
                C92322) *
               C2710) *
              C1985 +
          (((((C57228 + C57229) * C801 + (C57230 + C57231) * C92084) * C57967 +
             ((C41775 * C5719 + C41548 * C5965 + C41776 * C16095 +
               C92171 * C16333) *
                  C801 +
              (C41775 * C5725 + C41548 * C5968 + C41776 * C16099 +
               C92171 * C16335) *
                  C92084) *
                 C92195) *
                C92322 +
            (((C54774 + C54775) * C801 + (C54776 + C54777) * C92084) * C57967 +
             ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
               C92171 * C16334) *
                  C801 +
              (C41775 * C5726 + C41548 * C5969 + C41776 * C16100 +
               C92171 * C16336) *
                  C92084) *
                 C92195) *
                C92072) *
               C2710 -
           ((((C54777 + C54776) * C92084 + (C54775 + C54774) * C801) * C92195 +
             ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C57967) *
                C92072 +
            (((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92195 +
             ((C41776 * C822 + C92171 * C1031 + C41775 * C813 +
               C41548 * C1030) *
                  C92084 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C801) *
                 C57967) *
                C92322) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2059 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C1985 -
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C2060 -
             (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                 C1986) *
                C57967 +
            ((C53684 + C53685) * C2059 + (C53806 + C53807) * C1985 -
             (C57229 + C57228) * C2060 - (C57366 + C57367) * C1986) *
                C92195) *
               C92322 +
           (((C41803 + C41802) * C2059 + (C41903 + C41904) * C1985 -
             (C44081 + C44080) * C2060 - (C44194 + C44195) * C1986) *
                C57967 +
            (C56000 * C2059 + C56133 * C1985 - (C54775 + C54774) * C2060 -
             (C54912 + C54913) * C1986) *
                C92195) *
               C92072) *
              C92084 * C2709 +
          ((((C57228 + C57229) * C2060 -
             ((C53807 + C53806) * C1985 + (C53685 + C53684) * C2059) +
             (C57367 + C57366) * C1986) *
                C57967 +
            ((C41775 * C5719 + C41548 * C5965 + C41776 * C16095 +
              C92171 * C16333) *
                 C2060 -
             ((C53810 + C53811) * C1985 + (C53694 + C53695) * C2059) +
             (C41775 * C5805 + C41548 * C6045 + C41776 * C16177 +
              C92171 * C16411) *
                 C1986) *
                C92195) *
               C92322 +
           (((C54774 + C54775) * C2060 - (C56134 * C1985 + C55998 * C2059) +
             (C54913 + C54912) * C1986) *
                C57967 +
            ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
              C92171 * C16334) *
                 C2060 -
             ((C53808 + C53809) * C1985 + (C53690 + C53691) * C2059) +
             (C41775 * C5806 + C41548 * C6046 + C41776 * C16178 +
              C92171 * C16412) *
                 C1986) *
                C92195) *
               C92072) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2849 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C2709 -
             (C53685 + C53684) * C2850 - (C53922 + C53923) * C2710) *
                C57967 +
            ((C53684 + C53685) * C2849 + (C53923 + C53922) * C2709 -
             (C53694 + C53695) * C2850 - (C53925 + C53924) * C2710) *
                C92195) *
               C92322 +
           (((C41803 + C41802) * C2849 + (C42000 + C42001) * C2709 -
             C55998 * C2850 - C56270 * C2710) *
                C57967 +
            (C56000 * C2849 + C56271 * C2709 - (C53690 + C53691) * C2850 -
             (C53927 + C53926) * C2710) *
                C92195) *
               C92072) *
              C1985 +
          ((((C57228 + C57229) * C2850 -
             ((C41776 * C957 + C92171 * C1147 + C41775 * C956 +
               C41548 * C1146) *
                  C2709 +
              (C41776 * C806 + C92171 * C1023 + C41775 * C805 +
               C41548 * C1022) *
                  C2849) +
             (C57502 + C57503) * C2710) *
                C57967 +
            ((C41775 * C5719 + C41548 * C5965 + C41776 * C16095 +
              C92171 * C16333) *
                 C2850 -
             ((C57503 + C57502) * C2709 + (C57229 + C57228) * C2849) +
             (C41775 * C5885 + C41548 * C6122 + C41776 * C16255 +
              C92171 * C16487) *
                 C2710) *
                C92195) *
               C92322 +
           (((C54774 + C54775) * C2850 -
             ((C44306 + C44307) * C2709 + (C44081 + C44080) * C2849) +
             (C55049 + C55048) * C2710) *
                C57967 +
            ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
              C92171 * C16334) *
                 C2850 -
             ((C55048 + C55049) * C2709 + (C54775 + C54774) * C2849) +
             (C41775 * C5886 + C41548 * C6123 + C41776 * C16256 +
              C92171 * C16488) *
                 C2710) *
                C92195) *
               C92072) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C58419 * C107 + C57967 * C555 + C58420 * C1389 +
               C92195 * C1788) *
                  C801 +
              (C58419 * C117 + C57967 * C561 + C58420 * C1397 +
               C92195 * C1796) *
                  C92084) *
                 C92322 +
             ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
                C41548 +
            (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92322 +
             (C66488 * C801 + C66489 * C92084) * C92072) *
                C92171) *
               C2709 -
           ((((C67695 + C67694) * C92084 + (C67693 + C67692) * C801) * C92072 +
             ((C68886 + C68887) * C92084 + (C68888 + C68889) * C801) * C92322) *
                C92171 +
            (((C61727 + C61726) * C92084 + (C61725 + C61724) * C801) * C92072 +
             ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
               C57967 * C1796) *
                  C92084 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C801) *
                 C92322) *
                C41548) *
               C2710) *
              C1985 +
          (((((C68889 + C68888) * C801 + (C68887 + C68886) * C92084) * C92322 +
             ((C67692 + C67693) * C801 + (C67694 + C67695) * C92084) * C92072) *
                C41548 +
            (((C58419 * C8412 + C57967 * C9072 + C58420 * C16095 +
               C92195 * C16563) *
                  C801 +
              (C58419 * C8418 + C57967 * C9075 + C58420 * C16099 +
               C92195 * C16565) *
                  C92084) *
                 C92322 +
             ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
               C92195 * C16564) *
                  C801 +
              (C58419 * C8419 + C57967 * C9076 + C58420 * C16100 +
               C92195 * C16566) *
                  C92084) *
                 C92072) *
                C92171) *
               C2710 -
           ((((C64430 + C64431) * C92084 + (C64432 + C64433) * C801) * C92072 +
             ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C92322) *
                C92171 +
            ((C66487 * C92084 + C66486 * C801) * C92072 +
             ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C92322) *
                C41548) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2059 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C1985 -
             (C64427 + C64426) * C2060 - (C64548 + C64549) * C1986) *
                C92322 +
            ((C58447 + C58446) * C2059 + (C58547 + C58548) * C1985 -
             C66486 * C2060 - C66620 * C1986) *
                C92072) *
               C41548 +
           (((C64426 + C64427) * C2059 + (C64549 + C64548) * C1985 -
             (C64436 + C64437) * C2060 - (C64551 + C64550) * C1986) *
                C92322 +
            (C66488 * C2059 + C66621 * C1985 - (C64432 + C64433) * C2060 -
             (C64553 + C64552) * C1986) *
                C92072) *
               C92171) *
              C92084 * C2709 +
          ((((C68889 + C68888) * C2060 -
             ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
               C57967 * C1854) *
                  C1985 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C2059) +
             (C69024 + C69025) * C1986) *
                C92322 +
            ((C67692 + C67693) * C2060 -
             ((C61839 + C61838) * C1985 + (C61725 + C61724) * C2059) +
             (C67830 + C67831) * C1986) *
                C92072) *
               C41548 +
           (((C58419 * C8412 + C57967 * C9072 + C58420 * C16095 +
              C92195 * C16563) *
                 C2060 -
             ((C69025 + C69024) * C1985 + (C68888 + C68889) * C2059) +
             (C58419 * C8540 + C57967 * C9188 + C58420 * C16177 +
              C92195 * C16641) *
                 C1986) *
                C92322 +
            ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
              C92195 * C16564) *
                 C2060 -
             ((C67831 + C67830) * C1985 + (C67693 + C67692) * C2059) +
             (C58419 * C8541 + C57967 * C9189 + C58420 * C16178 +
              C92195 * C16642) *
                 C1986) *
                C92072) *
               C92171) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2849 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C2709 -
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C2850 -
             (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
              C57967 * C1909) *
                 C2710) *
                C92322 +
            ((C58447 + C58446) * C2849 + (C58643 + C58644) * C2709 -
             (C61725 + C61724) * C2850 - (C61948 + C61949) * C2710) *
                C92072) *
               C41548 +
           (((C64426 + C64427) * C2849 + (C64664 + C64665) * C2709 -
             (C68888 + C68889) * C2850 - (C69160 + C69161) * C2710) *
                C92322 +
            (C66488 * C2849 + C66753 * C2709 - (C67693 + C67692) * C2850 -
             (C67966 + C67967) * C2710) *
                C92072) *
               C92171) *
              C1985 +
          ((((C68889 + C68888) * C2850 -
             ((C64665 + C64664) * C2709 + (C64427 + C64426) * C2849) +
             (C69161 + C69160) * C2710) *
                C92322 +
            ((C67692 + C67693) * C2850 - (C66754 * C2709 + C66486 * C2849) +
             (C67967 + C67966) * C2710) *
                C92072) *
               C41548 +
           (((C58419 * C8412 + C57967 * C9072 + C58420 * C16095 +
              C92195 * C16563) *
                 C2850 -
             ((C64668 + C64669) * C2709 + (C64436 + C64437) * C2849) +
             (C58419 * C8653 + C57967 * C9292 + C58420 * C16255 +
              C92195 * C16717) *
                 C2710) *
                C92322 +
            ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
              C92195 * C16564) *
                 C2850 -
             ((C64666 + C64667) * C2709 + (C64432 + C64433) * C2849) +
             (C58419 * C8654 + C57967 * C9293 + C58420 * C16256 +
              C92195 * C16718) *
                 C2710) *
                C92072) *
               C92171) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eexx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C801 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C92084) *
                C41548 +
            ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C92171) *
               C57967 +
           (((C29644 + C29645) * C801 + (C29646 + C29647) * C92084) * C41548 +
            ((C18764 + C18763) * C801 + (C18762 + C18761) * C92084) * C92171) *
               C92195) *
              C92116 * C798 -
          ((((C18757 + C18758) * C92084 + (C18759 + C18760) * C801) * C92171 +
            ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C41548) *
               C92195 +
           (((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C92171 +
            ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C41548) *
               C57967) *
              C92116 * C799 +
          ((C15322 * C41548 +
            ((C15317 + C15316) * C801 + (C15315 + C15314) * C92084) * C92171) *
               C57967 +
           (((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C41548 +
            ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C89875 * C18736 + C92322 * C18738 + C89868 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C92171) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C104 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C93 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C105 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C94 +
            (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C106 +
            (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
                C95) *
               C41548 +
           ((C15306 + C15307) * C104 + (C15308 + C15309) * C93 -
            (C16834 + C16835) * C105 - (C16836 + C16837) * C94 +
            (C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C106 +
            (C89875 * C811 + C92322 * C827 + C89868 * C810 + C92072 * C826) *
                C95) *
               C92171) *
              C57967 +
          (((C29644 + C29645) * C104 + (C29646 + C29647) * C93 -
            (C31406 + C31407) * C105 - (C31408 + C31409) * C94 +
            (C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
             C92072 * C1398) *
                C106 +
            (C89875 * C1395 + C92322 * C1411 + C89868 * C1394 +
             C92072 * C1410) *
                C95) *
               C41548 +
           ((C18764 + C18763) * C104 + (C18762 + C18761) * C93 -
            (C89868 * C3433 + C92072 * C3437 + C89875 * C3432 +
             C92322 * C3436) *
                C105 -
            (C89868 * C3441 + C92072 * C3445 + C89875 * C3440 +
             C92322 * C3444) *
                C94 +
            (C89875 * C3433 + C92322 * C3437 + C89868 * C3434 +
             C92072 * C3438) *
                C106 +
            (C89875 * C3441 + C92322 * C3445 + C89868 * C3442 +
             C92072 * C3446) *
                C95) *
               C92171) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C801 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C92084) *
                C41548 +
            ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C92171) *
               C57967 +
           (((C29644 + C29645) * C801 + (C29646 + C29647) * C92084) * C41548 +
            ((C18764 + C18763) * C801 + (C18762 + C18761) * C92084) * C92171) *
               C92195) *
              C1383 -
          ((((C32384 + C32383) * C92084 + (C32382 + C32381) * C801) * C92171 +
            ((C29651 + C29650) * C92084 + (C29649 + C29648) * C801) * C41548) *
               C92195 +
           (((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C92171 +
            ((C29647 + C29646) * C92084 + (C29645 + C29644) * C801) * C41548) *
               C57967) *
              C1384 +
          ((C29660 * C41548 +
            ((C32381 + C32382) * C801 + (C32383 + C32384) * C92084) * C92171) *
               C57967 +
           (((C29655 + C29654) * C801 + (C29653 + C29652) * C92084) * C41548 +
            ((C89875 * C24524 + C92322 * C24526 + C89868 * C32368 +
              C92072 * C32369) *
                 C801 +
             (C89875 * C24527 + C92322 * C24530 + C89868 * C32370 +
              C92072 * C32371) *
                 C92084) *
                C92171) *
               C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C884 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C798 -
            (C15307 + C15306) * C885 - (C15413 + C15414) * C799 +
            C15318 * C886 + C15419 * C800) *
               C41548 +
           ((C15306 + C15307) * C884 + (C15414 + C15413) * C798 -
            (C15311 + C15310) * C885 - (C15416 + C15415) * C799 +
            (C15317 + C15316) * C886 + (C15417 + C15418) * C800) *
               C92171) *
              C57967 +
          (((C29644 + C29645) * C884 + (C29753 + C29754) * C798 -
            (C18763 + C18764) * C885 - (C18876 + C18875) * C799 +
            (C18760 + C18759) * C886 + (C18877 + C18878) * C800) *
               C41548 +
           ((C18764 + C18763) * C884 + (C18875 + C18876) * C798 -
            (C18759 + C18760) * C885 - (C18878 + C18877) * C799 +
            (C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
             C92072 * C18735) *
                C886 +
            (C89875 * C18862 + C92322 * C18864 + C89868 * C18863 +
             C92072 * C18865) *
                C800) *
               C92171) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C181 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C92105) *
                C41548 +
            ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C92171) *
               C57967 +
           (((C29644 + C29645) * C181 + (C29753 + C29754) * C92105) * C41548 +
            ((C18764 + C18763) * C181 + (C18875 + C18876) * C92105) * C92171) *
               C92195) *
              C93 -
          ((((C89868 * C3515 + C92072 * C3519 + C89875 * C3514 +
              C92322 * C3518) *
                 C92105 +
             (C89868 * C3433 + C92072 * C3437 + C89875 * C3432 +
              C92322 * C3436) *
                 C181) *
                C92171 +
            ((C31522 + C31523) * C92105 + (C31406 + C31407) * C181) * C41548) *
               C92195 +
           (((C16949 + C16948) * C92105 + (C16834 + C16835) * C181) * C92171 +
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C92105 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C181) *
                C41548) *
               C57967) *
              C94 +
          ((((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                 C181 +
             (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                 C92105) *
                C41548 +
            ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                 C181 +
             (C89875 * C888 + C92322 * C896 + C89868 * C887 + C92072 * C895) *
                 C92105) *
                C92171) *
               C57967 +
           (((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
              C92072 * C1398) *
                 C181 +
             (C89875 * C1469 + C92322 * C1477 + C89868 * C1468 +
              C92072 * C1476) *
                 C92105) *
                C41548 +
            ((C89875 * C3433 + C92322 * C3437 + C89868 * C3434 +
              C92072 * C3438) *
                 C181 +
             (C89875 * C3515 + C92322 * C3519 + C89868 * C3516 +
              C92072 * C3520) *
                 C92105) *
                C92171) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C181 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C92105) *
                C41548 +
            ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C92171) *
               C57967 +
           (((C29644 + C29645) * C181 + (C29753 + C29754) * C92105) * C41548 +
            ((C18764 + C18763) * C181 + (C18875 + C18876) * C92105) * C92171) *
               C92195) *
              C92084 * C1383 -
          ((((C32489 + C32490) * C92105 + (C32382 + C32381) * C181) * C92171 +
            ((C29756 + C29755) * C92105 + (C29649 + C29648) * C181) * C41548) *
               C92195 +
           (((C18876 + C18875) * C92105 + (C18763 + C18764) * C181) * C92171 +
            ((C29754 + C29753) * C92105 + (C29645 + C29644) * C181) * C41548) *
               C57967) *
              C92084 * C1384 +
          ((C29761 * C41548 +
            ((C32381 + C32382) * C181 + (C32490 + C32489) * C92105) * C92171) *
               C57967 +
           (((C29655 + C29654) * C181 + (C29758 + C29757) * C92105) * C41548 +
            ((C89875 * C24524 + C92322 * C24526 + C89868 * C32368 +
              C92072 * C32369) *
                 C181 +
             (C89875 * C24638 + C92322 * C24640 + C89868 * C32482 +
              C92072 * C32483) *
                 C92105) *
                C92171) *
               C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C92171) *
               C57967 +
           (((C29644 + C29645) * C244 + (C29854 + C29853) * C92116) * C41548 +
            ((C18764 + C18763) * C244 + (C18990 + C18989) * C92116) * C92171) *
               C92195) *
              C798 -
          ((((C18991 + C18992) * C92116 + (C18759 + C18760) * C244) * C92171 +
            ((C18989 + C18990) * C92116 + (C18763 + C18764) * C244) * C41548) *
               C92195 +
           (((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C92171 +
            ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C41548) *
               C57967) *
              C799 +
          ((C15519 * C41548 +
            ((C15317 + C15316) * C244 + (C15516 + C15515) * C92116) * C92171) *
               C57967 +
           (((C18760 + C18759) * C244 + (C18992 + C18991) * C92116) * C41548 +
            ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
              C92072 * C18735) *
                 C244 +
             (C89875 * C18976 + C92322 * C18978 + C89868 * C18977 +
              C92072 * C18979) *
                 C92116) *
                C92171) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C92171) *
               C57967 +
           (((C29644 + C29645) * C244 + (C29854 + C29853) * C92116) * C41548 +
            ((C18764 + C18763) * C244 + (C18990 + C18989) * C92116) * C92171) *
               C92195) *
              C92105 * C93 -
          ((((C89868 * C3589 + C92072 * C3593 + C89875 * C3588 +
              C92322 * C3592) *
                 C92116 +
             (C89868 * C3433 + C92072 * C3437 + C89875 * C3432 +
              C92322 * C3436) *
                 C244) *
                C92171 +
            ((C31631 + C31630) * C92116 + (C31406 + C31407) * C244) * C41548) *
               C92195 +
           (((C17059 + C17058) * C92116 + (C16834 + C16835) * C244) * C92171 +
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C92116 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C244) *
                C41548) *
               C57967) *
              C92105 * C94 +
          ((((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                 C244 +
             (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                 C92116) *
                C41548 +
            ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                 C244 +
             (C89875 * C954 + C92322 * C962 + C89868 * C953 + C92072 * C961) *
                 C92116) *
                C92171) *
               C57967 +
           (((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
              C92072 * C1398) *
                 C244 +
             (C89875 * C1538 + C92322 * C1546 + C89868 * C1537 +
              C92072 * C1545) *
                 C92116) *
                C41548 +
            ((C89875 * C3433 + C92322 * C3437 + C89868 * C3434 +
              C92072 * C3438) *
                 C244 +
             (C89875 * C3589 + C92322 * C3593 + C89868 * C3590 +
              C92072 * C3594) *
                 C92116) *
                C92171) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1534 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C1383 -
            (C29645 + C29644) * C1535 - (C29853 + C29854) * C1384 +
            C29656 * C1536 + C29859 * C1385) *
               C41548 +
           ((C15306 + C15307) * C1534 + (C15511 + C15512) * C1383 -
            (C18763 + C18764) * C1535 - (C18989 + C18990) * C1384 +
            (C32381 + C32382) * C1536 + (C32595 + C32596) * C1385) *
               C92171) *
              C57967 +
          (((C29644 + C29645) * C1534 + (C29854 + C29853) * C1383 -
            (C29649 + C29648) * C1535 - (C29856 + C29855) * C1384 +
            (C29655 + C29654) * C1536 + (C29857 + C29858) * C1385) *
               C41548 +
           ((C18764 + C18763) * C1534 + (C18990 + C18989) * C1383 -
            (C32382 + C32381) * C1535 - (C32596 + C32595) * C1384 +
            (C89875 * C24524 + C92322 * C24526 + C89868 * C32368 +
             C92072 * C32369) *
                C1536 +
            (C89875 * C24740 + C92322 * C24742 + C89868 * C32588 +
             C92072 * C32589) *
                C1385) *
               C92171) *
              C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C57967 +
            ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92195) *
               C92322 +
           (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C57967 +
            (C56000 * C801 + C56001 * C92084) * C92195) *
               C92072) *
              C92116 * C798 -
          ((((C54777 + C54776) * C92084 + (C54775 + C54774) * C801) * C92195 +
            ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C57967) *
               C92072 +
           (((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92195 +
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C92084 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C801) *
                C57967) *
               C92322) *
              C92116 * C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C801 +
             (C41775 * C822 + C41548 * C1031 + C41776 * C4871 +
              C92171 * C5186) *
                 C92084) *
                C57967 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C801 +
             (C41775 * C8418 + C41548 * C8769 + C41776 * C18736 +
              C92171 * C19092) *
                 C92084) *
                C92195) *
               C92322 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C801 +
             (C41775 * C823 + C41548 * C1032 + C41776 * C4872 +
              C92171 * C5187) *
                 C92084) *
                C57967 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C801 +
             (C41775 * C8419 + C41548 * C8770 + C41776 * C18737 +
              C92171 * C19093) *
                 C92084) *
                C92195) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C104 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C93 -
            (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
            C41815 * C95) *
               C57967 +
           ((C53684 + C53685) * C104 + (C53686 + C53687) * C93 - C55998 * C105 -
            C55999 * C94 + (C45014 + C45015) * C106 + (C45016 + C45017) * C95) *
               C92195) *
              C92322 +
          (((C41803 + C41802) * C104 + (C41805 + C41804) * C93 -
            (C41807 + C41806) * C105 - (C41809 + C41808) * C94 +
            (C41810 + C41811) * C106 + (C41812 + C41813) * C95) *
               C57967 +
           (C56000 * C104 + C56001 * C93 - (C45015 + C45014) * C105 -
            (C45017 + C45016) * C94 +
            (C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
             C92171 * C3664) *
                C106 +
            (C41775 * C1394 + C41548 * C1611 + C41776 * C3442 +
             C92171 * C3668) *
                C95) *
               C92195) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C57967 +
            ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92195) *
               C92322 +
           (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C57967 +
            (C56000 * C801 + C56001 * C92084) * C92195) *
               C92072) *
              C1383 -
          ((((C53688 + C53689) * C92084 + (C53690 + C53691) * C801) * C92195 +
            (C55999 * C92084 + C55998 * C801) * C57967) *
               C92072 +
           (((C53692 + C53693) * C92084 + (C53694 + C53695) * C801) * C92195 +
            ((C53687 + C53686) * C92084 + (C53685 + C53684) * C801) * C57967) *
               C92322) *
              C1384 +
          ((((C53695 + C53694) * C801 + (C53693 + C53692) * C92084) * C57967 +
            ((C41775 * C10808 + C41548 * C11126 + C41776 * C24524 +
              C92171 * C24830) *
                 C801 +
             (C41775 * C10814 + C41548 * C11129 + C41776 * C24527 +
              C92171 * C24832) *
                 C92084) *
                C92195) *
               C92322 +
           (((C53691 + C53690) * C801 + (C53689 + C53688) * C92084) * C57967 +
            ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
              C92171 * C32694) *
                 C801 +
             (C41775 * C10815 + C41548 * C11130 + C41776 * C32370 +
              C92171 * C32695) *
                 C92084) *
                C92195) *
               C92072) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C884 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C798 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C885 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C799 +
            (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C886 +
            (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
                C800) *
               C57967 +
           ((C53684 + C53685) * C884 + (C53806 + C53807) * C798 -
            (C57229 + C57228) * C885 - (C57366 + C57367) * C799 +
            (C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C886 +
            (C41775 * C8540 + C41548 * C8870 + C41776 * C18862 +
             C92171 * C19192) *
                C800) *
               C92195) *
              C92322 +
          (((C41803 + C41802) * C884 + (C41903 + C41904) * C798 -
            (C44081 + C44080) * C885 - (C44194 + C44195) * C799 +
            (C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C886 +
            (C41775 * C892 + C41548 * C1088 + C41776 * C4988 + C92171 * C5264) *
                C800) *
               C57967 +
           (C56000 * C884 + C56133 * C798 - (C54775 + C54774) * C885 -
            (C54912 + C54913) * C799 +
            (C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
             C92171 * C19091) *
                C886 +
            (C41775 * C8541 + C41548 * C8871 + C41776 * C18863 +
             C92171 * C19193) *
                C800) *
               C92195) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C57967 +
            ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92195) *
               C92322 +
           (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C57967 +
            C56138 * C92195) *
               C92072) *
              C93 -
          ((((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92195 +
            ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C57967) *
               C92072 +
           (C56139 * C92195 +
            ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C57967) *
               C92322) *
              C94 +
          ((C41911 * C57967 +
            ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92195) *
               C92322 +
           (((C41810 + C41811) * C181 + (C41908 + C41907) * C92105) * C57967 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C181 +
             (C41775 * C1468 + C41548 * C1669 + C41776 * C3516 +
              C92171 * C3738) *
                 C92105) *
                C92195) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C57967 +
            ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92195) *
               C92322 +
           (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C57967 +
            C56138 * C92195) *
               C92072) *
              C92084 * C1383 -
          ((((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C92195 +
            C56139 * C57967) *
               C92072 +
           (((C53810 + C53811) * C92105 + (C53694 + C53695) * C181) * C92195 +
            ((C53807 + C53806) * C92105 + (C53685 + C53684) * C181) * C57967) *
               C92322) *
              C92084 * C1384 +
          ((((C53695 + C53694) * C181 + (C53811 + C53810) * C92105) * C57967 +
            ((C41775 * C10808 + C41548 * C11126 + C41776 * C24524 +
              C92171 * C24830) *
                 C181 +
             (C41775 * C10930 + C41548 * C11242 + C41776 * C24638 +
              C92171 * C24944) *
                 C92105) *
                C92195) *
               C92322 +
           (((C53691 + C53690) * C181 + (C53809 + C53808) * C92105) * C57967 +
            ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
              C92171 * C32694) *
                 C181 +
             (C41775 * C10931 + C41548 * C11243 + C41776 * C32482 +
              C92171 * C32804) *
                 C92105) *
                C92195) *
               C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92195) *
               C92322 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C57967 +
            (C56000 * C244 + C56271 * C92116) * C92195) *
               C92072) *
              C798 -
          ((((C55048 + C55049) * C92116 + (C54775 + C54774) * C244) * C92195 +
            ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C57967) *
               C92072 +
           (((C57503 + C57502) * C92116 + (C57229 + C57228) * C244) * C92195 +
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C92116 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C244) *
                C57967) *
               C92322) *
              C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C244 +
             (C41775 * C957 + C41548 * C1147 + C41776 * C5085 +
              C92171 * C5340) *
                 C92116) *
                C57967 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C244 +
             (C41775 * C8653 + C41548 * C8971 + C41776 * C18976 +
              C92171 * C19292) *
                 C92116) *
                C92195) *
               C92322 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C244 +
             (C41775 * C958 + C41548 * C1148 + C41776 * C5086 +
              C92171 * C5341) *
                 C92116) *
                C57967 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C244 +
             (C41775 * C8654 + C41548 * C8972 + C41776 * C18977 +
              C92171 * C19293) *
                 C92116) *
                C92195) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92195) *
               C92322 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C57967 +
            (C56000 * C244 + C56271 * C92116) * C92195) *
               C92072) *
              C92105 * C93 -
          ((((C45236 + C45237) * C92116 + (C45015 + C45014) * C244) * C92195 +
            ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C57967) *
               C92072 +
           ((C56270 * C92116 + C55998 * C244) * C92195 +
            ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C57967) *
               C92322) *
              C92105 * C94 +
          ((C42008 * C57967 +
            ((C45014 + C45015) * C244 + (C45237 + C45236) * C92116) * C92195) *
               C92322 +
           (((C41810 + C41811) * C244 + (C42005 + C42004) * C92116) * C57967 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C244 +
             (C41775 * C1537 + C41548 * C1733 + C41776 * C3590 +
              C92171 * C3808) *
                 C92116) *
                C92195) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C1534 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C1383 -
            (C53685 + C53684) * C1535 - (C53922 + C53923) * C1384 +
            (C53695 + C53694) * C1536 + (C53924 + C53925) * C1385) *
               C57967 +
           ((C53684 + C53685) * C1534 + (C53923 + C53922) * C1383 -
            (C53694 + C53695) * C1535 - (C53925 + C53924) * C1384 +
            (C41775 * C10808 + C41548 * C11126 + C41776 * C24524 +
             C92171 * C24830) *
                C1536 +
            (C41775 * C11028 + C41548 * C11339 + C41776 * C24740 +
             C92171 * C25038) *
                C1385) *
               C92195) *
              C92322 +
          (((C41803 + C41802) * C1534 + (C42000 + C42001) * C1383 -
            C55998 * C1535 - C56270 * C1384 + (C53691 + C53690) * C1536 +
            (C53926 + C53927) * C1385) *
               C57967 +
           (C56000 * C1534 + C56271 * C1383 - (C53690 + C53691) * C1535 -
            (C53927 + C53926) * C1384 +
            (C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
             C92171 * C32694) *
                C1536 +
            (C41775 * C11029 + C41548 * C11340 + C41776 * C32588 +
             C92171 * C32910) *
                C1385) *
               C92195) *
              C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C92322 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
               C41548 +
           (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92322 +
            (C66488 * C801 + C66489 * C92084) * C92072) *
               C92171) *
              C92116 * C798 -
          ((((C64430 + C64431) * C92084 + (C64432 + C64433) * C801) * C92072 +
            ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C92322) *
               C92171 +
           ((C66487 * C92084 + C66486 * C801) * C92072 +
            ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C92322) *
               C41548) *
              C92116 * C799 +
          ((((C64437 + C64436) * C801 + (C64435 + C64434) * C92084) * C92322 +
            ((C64433 + C64432) * C801 + (C64431 + C64430) * C92084) * C92072) *
               C41548 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C801 +
             (C58419 * C4871 + C57967 * C5420 + C58420 * C18736 +
              C92195 * C19394) *
                 C92084) *
                C92322 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C801 +
             (C58419 * C4872 + C57967 * C5421 + C58420 * C18737 +
              C92195 * C19395) *
                 C92084) *
                C92072) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C104 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C93 -
            (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
            C58459 * C95) *
               C92322 +
           ((C58447 + C58446) * C104 + (C58449 + C58448) * C93 -
            (C58451 + C58450) * C105 - (C58453 + C58452) * C94 +
            (C58454 + C58455) * C106 + (C58456 + C58457) * C95) *
               C92072) *
              C41548 +
          (((C64426 + C64427) * C104 + (C64428 + C64429) * C93 - C66486 * C105 -
            C66487 * C94 + (C60762 + C60763) * C106 + (C60764 + C60765) * C95) *
               C92322 +
           (C66488 * C104 + C66489 * C93 - (C60763 + C60762) * C105 -
            (C60765 + C60764) * C94 +
            (C58419 * C802 + C57967 * C1201 + C58420 * C3434 + C92195 * C3878) *
                C106 +
            (C58419 * C810 + C57967 * C1209 + C58420 * C3442 + C92195 * C3882) *
                C95) *
               C92072) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C92322 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
               C41548 +
           (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92322 +
            (C66488 * C801 + C66489 * C92084) * C92072) *
               C92171) *
              C1383 -
          ((((C67695 + C67694) * C92084 + (C67693 + C67692) * C801) * C92072 +
            ((C68886 + C68887) * C92084 + (C68888 + C68889) * C801) * C92322) *
               C92171 +
           (((C61727 + C61726) * C92084 + (C61725 + C61724) * C801) * C92072 +
            ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
              C57967 * C1796) *
                 C92084 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C801) *
                C92322) *
               C41548) *
              C1384 +
          ((((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
              C92195 * C11428) *
                 C801 +
             (C58419 * C1406 + C57967 * C1797 + C58420 * C10814 +
              C92195 * C11431) *
                 C92084) *
                C92322 +
            ((C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
              C92195 * C11429) *
                 C801 +
             (C58419 * C1407 + C57967 * C1798 + C58420 * C10815 +
              C92195 * C11432) *
                 C92084) *
                C92072) *
               C41548 +
           (((C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
              C92195 * C25132) *
                 C801 +
             (C58419 * C5725 + C57967 * C6202 + C58420 * C24527 +
              C92195 * C25134) *
                 C92084) *
                C92322 +
            ((C58419 * C5720 + C57967 * C6200 + C58420 * C32368 +
              C92195 * C33012) *
                 C801 +
             (C58419 * C5726 + C57967 * C6203 + C58420 * C32370 +
              C92195 * C33013) *
                 C92084) *
                C92072) *
               C92171) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C884 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C798 -
            (C64427 + C64426) * C885 - (C64548 + C64549) * C799 +
            (C64437 + C64436) * C886 + (C64550 + C64551) * C800) *
               C92322 +
           ((C58447 + C58446) * C884 + (C58547 + C58548) * C798 -
            C66486 * C885 - C66620 * C799 + (C64433 + C64432) * C886 +
            (C64552 + C64553) * C800) *
               C92072) *
              C41548 +
          (((C64426 + C64427) * C884 + (C64549 + C64548) * C798 -
            (C64436 + C64437) * C885 - (C64551 + C64550) * C799 +
            (C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
             C92195 * C19392) *
                C886 +
            (C58419 * C4987 + C57967 * C5533 + C58420 * C18862 +
             C92195 * C19504) *
                C800) *
               C92322 +
           (C66488 * C884 + C66621 * C798 - (C64432 + C64433) * C885 -
            (C64553 + C64552) * C799 +
            (C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
             C92195 * C19393) *
                C886 +
            (C58419 * C4988 + C57967 * C5534 + C58420 * C18863 +
             C92195 * C19505) *
                C800) *
               C92072) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C92322 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
               C41548 +
           (((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92322 +
            (C66488 * C181 + C66621 * C92105) * C92072) *
               C92171) *
              C93 -
          ((((C60874 + C60875) * C92105 + (C60763 + C60762) * C181) * C92072 +
            (C66620 * C92105 + C66486 * C181) * C92322) *
               C92171 +
           (((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92072 +
            ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92322) *
               C41548) *
              C94 +
          ((C58555 * C92322 +
            ((C58454 + C58455) * C181 + (C58552 + C58551) * C92105) * C92072) *
               C41548 +
           (((C60762 + C60763) * C181 + (C60875 + C60874) * C92105) * C92322 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C181 +
             (C58419 * C887 + C57967 * C1273 + C58420 * C3516 +
              C92195 * C3952) *
                 C92105) *
                C92072) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C92322 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
               C41548 +
           (((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92322 +
            (C66488 * C181 + C66621 * C92105) * C92072) *
               C92171) *
              C92084 * C1383 -
          ((((C67831 + C67830) * C92105 + (C67693 + C67692) * C181) * C92072 +
            ((C69025 + C69024) * C92105 + (C68888 + C68889) * C181) * C92322) *
               C92171 +
           (((C61839 + C61838) * C92105 + (C61725 + C61724) * C181) * C92072 +
            ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
              C57967 * C1854) *
                 C92105 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C181) *
                C92322) *
               C41548) *
              C92084 * C1384 +
          ((((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
              C92195 * C11428) *
                 C181 +
             (C58419 * C1472 + C57967 * C1855 + C58420 * C10930 +
              C92195 * C11508) *
                 C92105) *
                C92322 +
            ((C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
              C92195 * C11429) *
                 C181 +
             (C58419 * C1473 + C57967 * C1856 + C58420 * C10931 +
              C92195 * C11509) *
                 C92105) *
                C92072) *
               C41548 +
           (((C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
              C92195 * C25132) *
                 C181 +
             (C58419 * C5805 + C57967 * C6279 + C58420 * C24638 +
              C92195 * C25210) *
                 C92105) *
                C92322 +
            ((C58419 * C5720 + C57967 * C6200 + C58420 * C32368 +
              C92195 * C33012) *
                 C181 +
             (C58419 * C5806 + C57967 * C6280 + C58420 * C32482 +
              C92195 * C33112) *
                 C92105) *
                C92072) *
               C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C92322 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C41548 +
           (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92322 +
            C66758 * C92072) *
               C92171) *
              C798 -
          ((((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92072 +
            ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C92322) *
               C92171 +
           (C66759 * C92072 +
            ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C92322) *
               C41548) *
              C799 +
          ((((C64437 + C64436) * C244 + (C64669 + C64668) * C92116) * C92322 +
            ((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C92072) *
               C41548 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C244 +
             (C58419 * C5085 + C57967 * C5622 + C58420 * C18976 +
              C92195 * C19607) *
                 C92116) *
                C92322 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C58419 * C5086 + C57967 * C5623 + C58420 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92072) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C92322 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C41548 +
           (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92322 +
            C66758 * C92072) *
               C92171) *
              C92105 * C93 -
          ((((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C92072 +
            C66759 * C92322) *
               C92171 +
           (((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92072 +
            ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92322) *
               C41548) *
              C92105 * C94 +
          ((C58651 * C92322 +
            ((C58454 + C58455) * C244 + (C58648 + C58647) * C92116) * C92072) *
               C41548 +
           (((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92322 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C244 +
             (C58419 * C953 + C57967 * C1325 + C58420 * C3590 +
              C92195 * C4022) *
                 C92116) *
                C92072) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C1534 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C1383 -
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C1535 -
            (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
             C57967 * C1909) *
                C1384 +
            (C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
             C92195 * C11428) *
                C1536 +
            (C58419 * C1541 + C57967 * C1910 + C58420 * C11028 +
             C92195 * C11585) *
                C1385) *
               C92322 +
           ((C58447 + C58446) * C1534 + (C58643 + C58644) * C1383 -
            (C61725 + C61724) * C1535 - (C61948 + C61949) * C1384 +
            (C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
             C92195 * C11429) *
                C1536 +
            (C58419 * C1542 + C57967 * C1912 + C58420 * C11029 +
             C92195 * C11586) *
                C1385) *
               C92072) *
              C41548 +
          (((C64426 + C64427) * C1534 + (C64664 + C64665) * C1383 -
            (C68888 + C68889) * C1535 - (C69160 + C69161) * C1384 +
            (C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
             C92195 * C25132) *
                C1536 +
            (C58419 * C5885 + C57967 * C6356 + C58420 * C24740 +
             C92195 * C25286) *
                C1385) *
               C92322 +
           (C66488 * C1534 + C66753 * C1383 - (C67693 + C67692) * C1535 -
            (C67966 + C67967) * C1384 +
            (C58419 * C5720 + C57967 * C6200 + C58420 * C32368 +
             C92195 * C33012) *
                C1536 +
            (C58419 * C5886 + C57967 * C6357 + C58420 * C32588 +
             C92195 * C33211) *
                C1385) *
               C92072) *
              C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C1987 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C1983 -
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C1988 -
             (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                 C1984) *
                C41548 +
            ((C15306 + C15307) * C1987 + (C15308 + C15309) * C1983 -
             (C16834 + C16835) * C1988 - (C16836 + C16837) * C1984) *
                C92171) *
               C57967 +
           (((C29644 + C29645) * C1987 + (C29646 + C29647) * C1983 -
             (C31406 + C31407) * C1988 - (C31408 + C31409) * C1984) *
                C41548 +
            ((C18764 + C18763) * C1987 + (C18762 + C18761) * C1983 -
             (C76800 + C76801) * C1988 - (C76802 + C76803) * C1984) *
                C92171) *
               C92195) *
              C2709 +
          ((((C31407 + C31406) * C1988 -
             ((C29647 + C29646) * C1983 + (C29645 + C29644) * C1987) +
             (C31409 + C31408) * C1984) *
                C41548 +
            ((C76801 + C76800) * C1988 -
             ((C18761 + C18762) * C1983 + (C18763 + C18764) * C1987) +
             (C76803 + C76802) * C1984) *
                C92171) *
               C57967 +
           (((C31411 + C31410) * C1988 -
             ((C29651 + C29650) * C1983 + (C29649 + C29648) * C1987) +
             (C31413 + C31412) * C1984) *
                C41548 +
            ((C89875 * C5720 + C92322 * C5723 + C89868 * C5721 +
              C92072 * C5724) *
                 C1988 -
             ((C32384 + C32383) * C1983 + (C32382 + C32381) * C1987) +
             (C89875 * C5726 + C92322 * C5729 + C89868 * C5727 +
              C92072 * C5730) *
                 C1984) *
                C92171) *
               C92195) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                  C181 +
              (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                  C92105) *
                 C41548 +
             ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C92171) *
                C57967 +
            (((C29644 + C29645) * C181 + (C29753 + C29754) * C92105) * C41548 +
             ((C18764 + C18763) * C181 + (C18875 + C18876) * C92105) * C92171) *
                C92195) *
               C1983 -
           ((((C76939 + C76938) * C92105 + (C76800 + C76801) * C181) * C92171 +
             ((C31522 + C31523) * C92105 + (C31406 + C31407) * C181) * C41548) *
                C92195 +
            (((C16949 + C16948) * C92105 + (C16834 + C16835) * C181) * C92171 +
             ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                  C92105 +
              (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                  C181) *
                 C41548) *
                C57967) *
               C1984) *
              C2709 +
          (((((C31407 + C31406) * C181 + (C31523 + C31522) * C92105) * C41548 +
             ((C76801 + C76800) * C181 + (C76938 + C76939) * C92105) * C92171) *
                C57967 +
            (((C31411 + C31410) * C181 + (C31521 + C31520) * C92105) * C41548 +
             ((C89875 * C5720 + C92322 * C5723 + C89868 * C5721 +
               C92072 * C5724) *
                  C181 +
              (C89875 * C5806 + C92322 * C5809 + C89868 * C5807 +
               C92072 * C5810) *
                  C92105) *
                 C92171) *
                C92195) *
               C1984 -
           ((((C32489 + C32490) * C92105 + (C32382 + C32381) * C181) * C92171 +
             ((C29756 + C29755) * C92105 + (C29649 + C29648) * C181) * C41548) *
                C92195 +
            (((C18876 + C18875) * C92105 + (C18763 + C18764) * C181) * C92171 +
             ((C29754 + C29753) * C92105 + (C29645 + C29644) * C181) * C41548) *
                C57967) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C2849 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C2709 -
             (C29645 + C29644) * C2850 - (C29853 + C29854) * C2710) *
                C41548 +
            ((C15306 + C15307) * C2849 + (C15511 + C15512) * C2709 -
             (C18763 + C18764) * C2850 - (C18989 + C18990) * C2710) *
                C92171) *
               C57967 +
           (((C29644 + C29645) * C2849 + (C29854 + C29853) * C2709 -
             (C29649 + C29648) * C2850 - (C29856 + C29855) * C2710) *
                C41548 +
            ((C18764 + C18763) * C2849 + (C18990 + C18989) * C2709 -
             (C32382 + C32381) * C2850 - (C32596 + C32595) * C2710) *
                C92171) *
               C92195) *
              C92105 * C1983 +
          ((((C31407 + C31406) * C2850 -
             ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                  C2709 +
              (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                  C2849) +
             (C31630 + C31631) * C2710) *
                C41548 +
            ((C76801 + C76800) * C2850 -
             ((C17059 + C17058) * C2709 + (C16834 + C16835) * C2849) +
             (C77074 + C77075) * C2710) *
                C92171) *
               C57967 +
           (((C31411 + C31410) * C2850 -
             ((C31631 + C31630) * C2709 + (C31406 + C31407) * C2849) +
             (C31632 + C31633) * C2710) *
                C41548 +
            ((C89875 * C5720 + C92322 * C5723 + C89868 * C5721 +
              C92072 * C5724) *
                 C2850 -
             ((C77075 + C77074) * C2709 + (C76800 + C76801) * C2849) +
             (C89875 * C5886 + C92322 * C5889 + C89868 * C5887 +
              C92072 * C5890) *
                 C2710) *
                C92171) *
               C92195) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C1987 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C1983 -
             (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
                C57967 +
            ((C53684 + C53685) * C1987 + (C53686 + C53687) * C1983 -
             C55998 * C1988 - C55999 * C1984) *
                C92195) *
               C92322 +
           (((C41803 + C41802) * C1987 + (C41805 + C41804) * C1983 -
             (C41807 + C41806) * C1988 - (C41809 + C41808) * C1984) *
                C57967 +
            (C56000 * C1987 + C56001 * C1983 - (C45015 + C45014) * C1988 -
             (C45017 + C45016) * C1984) *
                C92195) *
               C92072) *
              C2709 +
          (((C56000 * C1988 -
             ((C53687 + C53686) * C1983 + (C53685 + C53684) * C1987) +
             C56001 * C1984) *
                C57967 +
            ((C53691 + C53690) * C1988 -
             ((C53692 + C53693) * C1983 + (C53694 + C53695) * C1987) +
             (C53689 + C53688) * C1984) *
                C92195) *
               C92322 +
           (((C45014 + C45015) * C1988 - (C55999 * C1983 + C55998 * C1987) +
             (C45016 + C45017) * C1984) *
                C57967 +
            ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
              C92171 * C5967) *
                 C1988 -
             ((C53688 + C53689) * C1983 + (C53690 + C53691) * C1987) +
             (C41775 * C1408 + C41548 * C1617 + C41776 * C5727 +
              C92171 * C5970) *
                 C1984) *
                C92195) *
               C92072) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                  C181 +
              (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                  C92105) *
                 C57967 +
             ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92195) *
                C92322 +
            (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C57967 +
             C56138 * C92195) *
                C92072) *
               C1983 -
           ((((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92195 +
             ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C57967) *
                C92072 +
            (C56139 * C92195 +
             ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C57967) *
                C92322) *
               C1984) *
              C2709 +
          (((C56138 * C57967 +
             ((C53691 + C53690) * C181 + (C53809 + C53808) * C92105) * C92195) *
                C92322 +
            (((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C57967 +
             ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
               C92171 * C5967) *
                  C181 +
              (C41775 * C1474 + C41548 * C1675 + C41776 * C5807 +
               C92171 * C6047) *
                  C92105) *
                 C92195) *
                C92072) *
               C1984 -
           ((((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C92195 +
             C56139 * C57967) *
                C92072 +
            (((C53810 + C53811) * C92105 + (C53694 + C53695) * C181) * C92195 +
             ((C53807 + C53806) * C92105 + (C53685 + C53684) * C181) * C57967) *
                C92322) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C2849 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C2709 -
             (C53685 + C53684) * C2850 - (C53922 + C53923) * C2710) *
                C57967 +
            ((C53684 + C53685) * C2849 + (C53923 + C53922) * C2709 -
             (C53694 + C53695) * C2850 - (C53925 + C53924) * C2710) *
                C92195) *
               C92322 +
           (((C41803 + C41802) * C2849 + (C42000 + C42001) * C2709 -
             C55998 * C2850 - C56270 * C2710) *
                C57967 +
            (C56000 * C2849 + C56271 * C2709 - (C53690 + C53691) * C2850 -
             (C53927 + C53926) * C2710) *
                C92195) *
               C92072) *
              C92105 * C1983 +
          (((C56000 * C2850 -
             ((C42001 + C42000) * C2709 + (C41802 + C41803) * C2849) +
             C56271 * C2710) *
                C57967 +
            ((C53691 + C53690) * C2850 - (C56270 * C2709 + C55998 * C2849) +
             (C53926 + C53927) * C2710) *
                C92195) *
               C92322 +
           (((C45014 + C45015) * C2850 -
             ((C42003 + C42002) * C2709 + (C41807 + C41806) * C2849) +
             (C45237 + C45236) * C2710) *
                C57967 +
            ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
              C92171 * C5967) *
                 C2850 -
             ((C45236 + C45237) * C2709 + (C45015 + C45014) * C2849) +
             (C41775 * C1543 + C41548 * C1732 + C41776 * C5887 +
              C92171 * C6124) *
                 C2710) *
                C92195) *
               C92072) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C1987 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C1983 -
             (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
                C92322 +
            ((C58447 + C58446) * C1987 + (C58449 + C58448) * C1983 -
             (C58451 + C58450) * C1988 - (C58453 + C58452) * C1984) *
                C92072) *
               C41548 +
           (((C64426 + C64427) * C1987 + (C64428 + C64429) * C1983 -
             C66486 * C1988 - C66487 * C1984) *
                C92322 +
            (C66488 * C1987 + C66489 * C1983 - (C60763 + C60762) * C1988 -
             (C60765 + C60764) * C1984) *
                C92072) *
               C92171) *
              C2709 +
          ((((C61724 + C61725) * C1988 -
             ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
               C57967 * C1796) *
                  C1983 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C1987) +
             (C61726 + C61727) * C1984) *
                C92322 +
            ((C61728 + C61729) * C1988 -
             ((C61727 + C61726) * C1983 + (C61725 + C61724) * C1987) +
             (C61730 + C61731) * C1984) *
                C92072) *
               C41548 +
           (((C67692 + C67693) * C1988 -
             ((C68886 + C68887) * C1983 + (C68888 + C68889) * C1987) +
             (C67694 + C67695) * C1984) *
                C92322 +
            ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
              C92195 * C6201) *
                 C1988 -
             ((C67695 + C67694) * C1983 + (C67693 + C67692) * C1987) +
             (C58419 * C3441 + C57967 * C3881 + C58420 * C5727 +
              C92195 * C6204) *
                 C1984) *
                C92072) *
               C92171) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C58419 * C107 + C57967 * C555 + C58420 * C1389 +
               C92195 * C1788) *
                  C181 +
              (C58419 * C182 + C57967 * C641 + C58420 * C1471 +
               C92195 * C1854) *
                  C92105) *
                 C92322 +
             ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
                C41548 +
            (((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92322 +
             (C66488 * C181 + C66621 * C92105) * C92072) *
                C92171) *
               C1983 -
           ((((C60874 + C60875) * C92105 + (C60763 + C60762) * C181) * C92072 +
             (C66620 * C92105 + C66486 * C181) * C92322) *
                C92171 +
            (((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92072 +
             ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92322) *
                C41548) *
               C1984) *
              C2709 +
          (((((C61724 + C61725) * C181 + (C61838 + C61839) * C92105) * C92322 +
             ((C61728 + C61729) * C181 + (C61840 + C61841) * C92105) * C92072) *
                C41548 +
            (((C67692 + C67693) * C181 + (C67830 + C67831) * C92105) * C92322 +
             ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
               C92195 * C6201) *
                  C181 +
              (C58419 * C3515 + C57967 * C3951 + C58420 * C5807 +
               C92195 * C6281) *
                  C92105) *
                 C92072) *
                C92171) *
               C1984 -
           ((((C67831 + C67830) * C92105 + (C67693 + C67692) * C181) * C92072 +
             ((C69025 + C69024) * C92105 + (C68888 + C68889) * C181) * C92322) *
                C92171 +
            (((C61839 + C61838) * C92105 + (C61725 + C61724) * C181) * C92072 +
             ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
               C57967 * C1854) *
                  C92105 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C181) *
                 C92322) *
                C41548) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2849 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C2709 -
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C2850 -
             (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
              C57967 * C1909) *
                 C2710) *
                C92322 +
            ((C58447 + C58446) * C2849 + (C58643 + C58644) * C2709 -
             (C61725 + C61724) * C2850 - (C61948 + C61949) * C2710) *
                C92072) *
               C41548 +
           (((C64426 + C64427) * C2849 + (C64664 + C64665) * C2709 -
             (C68888 + C68889) * C2850 - (C69160 + C69161) * C2710) *
                C92322 +
            (C66488 * C2849 + C66753 * C2709 - (C67693 + C67692) * C2850 -
             (C67966 + C67967) * C2710) *
                C92072) *
               C92171) *
              C92105 * C1983 +
          ((((C61724 + C61725) * C2850 -
             ((C58644 + C58643) * C2709 + (C58446 + C58447) * C2849) +
             (C61949 + C61948) * C2710) *
                C92322 +
            ((C61728 + C61729) * C2850 -
             ((C58646 + C58645) * C2709 + (C58451 + C58450) * C2849) +
             (C61951 + C61950) * C2710) *
                C92072) *
               C41548 +
           (((C67692 + C67693) * C2850 - (C66754 * C2709 + C66486 * C2849) +
             (C67967 + C67966) * C2710) *
                C92322 +
            ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
              C92195 * C6201) *
                 C2850 -
             ((C60982 + C60983) * C2709 + (C60763 + C60762) * C2849) +
             (C58419 * C3589 + C57967 * C4021 + C58420 * C5887 +
              C92195 * C6358) *
                 C2710) *
                C92072) *
               C92171) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C104 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C93 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C105 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C94 +
            (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C106 +
            (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
                C95) *
               C41548 +
           ((C15306 + C15307) * C104 + (C15308 + C15309) * C93 -
            (C16834 + C16835) * C105 - (C16836 + C16837) * C94 +
            (C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C106 +
            (C89875 * C811 + C92322 * C827 + C89868 * C810 + C92072 * C826) *
                C95) *
               C92171) *
              C57967 +
          (((C29644 + C29645) * C104 + (C29646 + C29647) * C93 -
            (C31406 + C31407) * C105 - (C31408 + C31409) * C94 +
            (C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
             C92072 * C1398) *
                C106 +
            (C89875 * C1395 + C92322 * C1411 + C89868 * C1394 +
             C92072 * C1410) *
                C95) *
               C41548 +
           ((C18764 + C18763) * C104 + (C18762 + C18761) * C93 -
            (C89868 * C3433 + C92072 * C3437 + C89875 * C3432 +
             C92322 * C3436) *
                C105 -
            (C89868 * C3441 + C92072 * C3445 + C89875 * C3440 +
             C92322 * C3444) *
                C94 +
            (C89875 * C3433 + C92322 * C3437 + C89868 * C3434 +
             C92072 * C3438) *
                C106 +
            (C89875 * C3441 + C92322 * C3445 + C89868 * C3442 +
             C92072 * C3446) *
                C95) *
               C92171) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C801 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C92084) *
                C41548 +
            ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C92171) *
               C57967 +
           (((C29644 + C29645) * C801 + (C29646 + C29647) * C92084) * C41548 +
            ((C18764 + C18763) * C801 + (C18762 + C18761) * C92084) * C92171) *
               C92195) *
              C92116 * C798 -
          ((((C18757 + C18758) * C92084 + (C18759 + C18760) * C801) * C92171 +
            ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C41548) *
               C92195 +
           (((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C92171 +
            ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C41548) *
               C57967) *
              C92116 * C799 +
          ((C15322 * C41548 +
            ((C15317 + C15316) * C801 + (C15315 + C15314) * C92084) * C92171) *
               C57967 +
           (((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C41548 +
            ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C89875 * C18736 + C92322 * C18738 + C89868 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C92171) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C181 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C92105) *
                C41548 +
            ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C92171) *
               C57967 +
           (((C29644 + C29645) * C181 + (C29753 + C29754) * C92105) * C41548 +
            ((C18764 + C18763) * C181 + (C18875 + C18876) * C92105) * C92171) *
               C92195) *
              C93 -
          ((((C89868 * C3515 + C92072 * C3519 + C89875 * C3514 +
              C92322 * C3518) *
                 C92105 +
             (C89868 * C3433 + C92072 * C3437 + C89875 * C3432 +
              C92322 * C3436) *
                 C181) *
                C92171 +
            ((C31522 + C31523) * C92105 + (C31406 + C31407) * C181) * C41548) *
               C92195 +
           (((C16949 + C16948) * C92105 + (C16834 + C16835) * C181) * C92171 +
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C92105 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C181) *
                C41548) *
               C57967) *
              C94 +
          ((((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                 C181 +
             (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                 C92105) *
                C41548 +
            ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                 C181 +
             (C89875 * C888 + C92322 * C896 + C89868 * C887 + C92072 * C895) *
                 C92105) *
                C92171) *
               C57967 +
           (((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
              C92072 * C1398) *
                 C181 +
             (C89875 * C1469 + C92322 * C1477 + C89868 * C1468 +
              C92072 * C1476) *
                 C92105) *
                C41548 +
            ((C89875 * C3433 + C92322 * C3437 + C89868 * C3434 +
              C92072 * C3438) *
                 C181 +
             (C89875 * C3515 + C92322 * C3519 + C89868 * C3516 +
              C92072 * C3520) *
                 C92105) *
                C92171) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C884 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C798 -
            (C15307 + C15306) * C885 - (C15413 + C15414) * C799 +
            C15318 * C886 + C15419 * C800) *
               C41548 +
           ((C15306 + C15307) * C884 + (C15414 + C15413) * C798 -
            (C15311 + C15310) * C885 - (C15416 + C15415) * C799 +
            (C15317 + C15316) * C886 + (C15417 + C15418) * C800) *
               C92171) *
              C57967 +
          (((C29644 + C29645) * C884 + (C29753 + C29754) * C798 -
            (C18763 + C18764) * C885 - (C18876 + C18875) * C799 +
            (C18760 + C18759) * C886 + (C18877 + C18878) * C800) *
               C41548 +
           ((C18764 + C18763) * C884 + (C18875 + C18876) * C798 -
            (C18759 + C18760) * C885 - (C18878 + C18877) * C799 +
            (C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
             C92072 * C18735) *
                C886 +
            (C89875 * C18862 + C92322 * C18864 + C89868 * C18863 +
             C92072 * C18865) *
                C800) *
               C92171) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C92171) *
               C57967 +
           (((C29644 + C29645) * C244 + (C29854 + C29853) * C92116) * C41548 +
            ((C18764 + C18763) * C244 + (C18990 + C18989) * C92116) * C92171) *
               C92195) *
              C92105 * C93 -
          ((((C89868 * C3589 + C92072 * C3593 + C89875 * C3588 +
              C92322 * C3592) *
                 C92116 +
             (C89868 * C3433 + C92072 * C3437 + C89875 * C3432 +
              C92322 * C3436) *
                 C244) *
                C92171 +
            ((C31631 + C31630) * C92116 + (C31406 + C31407) * C244) * C41548) *
               C92195 +
           (((C17059 + C17058) * C92116 + (C16834 + C16835) * C244) * C92171 +
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C92116 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C244) *
                C41548) *
               C57967) *
              C92105 * C94 +
          ((((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                 C244 +
             (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                 C92116) *
                C41548 +
            ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                 C244 +
             (C89875 * C954 + C92322 * C962 + C89868 * C953 + C92072 * C961) *
                 C92116) *
                C92171) *
               C57967 +
           (((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
              C92072 * C1398) *
                 C244 +
             (C89875 * C1538 + C92322 * C1546 + C89868 * C1537 +
              C92072 * C1545) *
                 C92116) *
                C41548 +
            ((C89875 * C3433 + C92322 * C3437 + C89868 * C3434 +
              C92072 * C3438) *
                 C244 +
             (C89875 * C3589 + C92322 * C3593 + C89868 * C3590 +
              C92072 * C3594) *
                 C92116) *
                C92171) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C41548 +
            ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C92171) *
               C57967 +
           (((C29644 + C29645) * C244 + (C29854 + C29853) * C92116) * C41548 +
            ((C18764 + C18763) * C244 + (C18990 + C18989) * C92116) * C92171) *
               C92195) *
              C798 -
          ((((C18991 + C18992) * C92116 + (C18759 + C18760) * C244) * C92171 +
            ((C18989 + C18990) * C92116 + (C18763 + C18764) * C244) * C41548) *
               C92195 +
           (((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C92171 +
            ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C41548) *
               C57967) *
              C799 +
          ((C15519 * C41548 +
            ((C15317 + C15316) * C244 + (C15516 + C15515) * C92116) * C92171) *
               C57967 +
           (((C18760 + C18759) * C244 + (C18992 + C18991) * C92116) * C41548 +
            ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
              C92072 * C18735) *
                 C244 +
             (C89875 * C18976 + C92322 * C18978 + C89868 * C18977 +
              C92072 * C18979) *
                 C92116) *
                C92171) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C104 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C93 -
            (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
            C41815 * C95) *
               C57967 +
           ((C53684 + C53685) * C104 + (C53686 + C53687) * C93 - C55998 * C105 -
            C55999 * C94 + (C45014 + C45015) * C106 + (C45016 + C45017) * C95) *
               C92195) *
              C92322 +
          (((C41803 + C41802) * C104 + (C41805 + C41804) * C93 -
            (C41807 + C41806) * C105 - (C41809 + C41808) * C94 +
            (C41810 + C41811) * C106 + (C41812 + C41813) * C95) *
               C57967 +
           (C56000 * C104 + C56001 * C93 - (C45015 + C45014) * C105 -
            (C45017 + C45016) * C94 +
            (C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
             C92171 * C3664) *
                C106 +
            (C41775 * C1394 + C41548 * C1611 + C41776 * C3442 +
             C92171 * C3668) *
                C95) *
               C92195) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C57967 +
            ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92195) *
               C92322 +
           (((C41803 + C41802) * C801 + (C41805 + C41804) * C92084) * C57967 +
            (C56000 * C801 + C56001 * C92084) * C92195) *
               C92072) *
              C92116 * C798 -
          ((((C54777 + C54776) * C92084 + (C54775 + C54774) * C801) * C92195 +
            ((C44083 + C44082) * C92084 + (C44081 + C44080) * C801) * C57967) *
               C92072 +
           (((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92195 +
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C92084 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C801) *
                C57967) *
               C92322) *
              C92116 * C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C801 +
             (C41775 * C822 + C41548 * C1031 + C41776 * C4871 +
              C92171 * C5186) *
                 C92084) *
                C57967 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C801 +
             (C41775 * C8418 + C41548 * C8769 + C41776 * C18736 +
              C92171 * C19092) *
                 C92084) *
                C92195) *
               C92322 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C801 +
             (C41775 * C823 + C41548 * C1032 + C41776 * C4872 +
              C92171 * C5187) *
                 C92084) *
                C57967 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C801 +
             (C41775 * C8419 + C41548 * C8770 + C41776 * C18737 +
              C92171 * C19093) *
                 C92084) *
                C92195) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C57967 +
            ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92195) *
               C92322 +
           (((C41803 + C41802) * C181 + (C41903 + C41904) * C92105) * C57967 +
            C56138 * C92195) *
               C92072) *
              C93 -
          ((((C45127 + C45126) * C92105 + (C45015 + C45014) * C181) * C92195 +
            ((C41906 + C41905) * C92105 + (C41807 + C41806) * C181) * C57967) *
               C92072 +
           (C56139 * C92195 +
            ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C57967) *
               C92322) *
              C94 +
          ((C41911 * C57967 +
            ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92195) *
               C92322 +
           (((C41810 + C41811) * C181 + (C41908 + C41907) * C92105) * C57967 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C181 +
             (C41775 * C1468 + C41548 * C1669 + C41776 * C3516 +
              C92171 * C3738) *
                 C92105) *
                C92195) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C884 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C798 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C885 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C799 +
            (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C886 +
            (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
                C800) *
               C57967 +
           ((C53684 + C53685) * C884 + (C53806 + C53807) * C798 -
            (C57229 + C57228) * C885 - (C57366 + C57367) * C799 +
            (C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C886 +
            (C41775 * C8540 + C41548 * C8870 + C41776 * C18862 +
             C92171 * C19192) *
                C800) *
               C92195) *
              C92322 +
          (((C41803 + C41802) * C884 + (C41903 + C41904) * C798 -
            (C44081 + C44080) * C885 - (C44194 + C44195) * C799 +
            (C41775 * C807 + C41548 * C1024 + C41776 * C4866 + C92171 * C5184) *
                C886 +
            (C41775 * C892 + C41548 * C1088 + C41776 * C4988 + C92171 * C5264) *
                C800) *
               C57967 +
           (C56000 * C884 + C56133 * C798 - (C54775 + C54774) * C885 -
            (C54912 + C54913) * C799 +
            (C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
             C92171 * C19091) *
                C886 +
            (C41775 * C8541 + C41548 * C8871 + C41776 * C18863 +
             C92171 * C19193) *
                C800) *
               C92195) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92195) *
               C92322 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C57967 +
            (C56000 * C244 + C56271 * C92116) * C92195) *
               C92072) *
              C92105 * C93 -
          ((((C45236 + C45237) * C92116 + (C45015 + C45014) * C244) * C92195 +
            ((C42003 + C42002) * C92116 + (C41807 + C41806) * C244) * C57967) *
               C92072 +
           ((C56270 * C92116 + C55998 * C244) * C92195 +
            ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C57967) *
               C92322) *
              C92105 * C94 +
          ((C42008 * C57967 +
            ((C45014 + C45015) * C244 + (C45237 + C45236) * C92116) * C92195) *
               C92322 +
           (((C41810 + C41811) * C244 + (C42005 + C42004) * C92116) * C57967 +
            ((C41775 * C1386 + C41548 * C1603 + C41776 * C3434 +
              C92171 * C3664) *
                 C244 +
             (C41775 * C1537 + C41548 * C1733 + C41776 * C3590 +
              C92171 * C3808) *
                 C92116) *
                C92195) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92195) *
               C92322 +
           (((C41803 + C41802) * C244 + (C42000 + C42001) * C92116) * C57967 +
            (C56000 * C244 + C56271 * C92116) * C92195) *
               C92072) *
              C798 -
          ((((C55048 + C55049) * C92116 + (C54775 + C54774) * C244) * C92195 +
            ((C44306 + C44307) * C92116 + (C44081 + C44080) * C244) * C57967) *
               C92072 +
           (((C57503 + C57502) * C92116 + (C57229 + C57228) * C244) * C92195 +
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C92116 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C244) *
                C57967) *
               C92322) *
              C799 +
          ((((C41775 * C806 + C41548 * C1023 + C41776 * C4865 +
              C92171 * C5183) *
                 C244 +
             (C41775 * C957 + C41548 * C1147 + C41776 * C5085 +
              C92171 * C5340) *
                 C92116) *
                C57967 +
            ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
              C92171 * C19090) *
                 C244 +
             (C41775 * C8653 + C41548 * C8971 + C41776 * C18976 +
              C92171 * C19292) *
                 C92116) *
                C92195) *
               C92322 +
           (((C41775 * C807 + C41548 * C1024 + C41776 * C4866 +
              C92171 * C5184) *
                 C244 +
             (C41775 * C958 + C41548 * C1148 + C41776 * C5086 +
              C92171 * C5341) *
                 C92116) *
                C57967 +
            ((C41775 * C8413 + C41548 * C8767 + C41776 * C18733 +
              C92171 * C19091) *
                 C244 +
             (C41775 * C8654 + C41548 * C8972 + C41776 * C18977 +
              C92171 * C19293) *
                 C92116) *
                C92195) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C104 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C93 -
            (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
            C58459 * C95) *
               C92322 +
           ((C58447 + C58446) * C104 + (C58449 + C58448) * C93 -
            (C58451 + C58450) * C105 - (C58453 + C58452) * C94 +
            (C58454 + C58455) * C106 + (C58456 + C58457) * C95) *
               C92072) *
              C41548 +
          (((C64426 + C64427) * C104 + (C64428 + C64429) * C93 - C66486 * C105 -
            C66487 * C94 + (C60762 + C60763) * C106 + (C60764 + C60765) * C95) *
               C92322 +
           (C66488 * C104 + C66489 * C93 - (C60763 + C60762) * C105 -
            (C60765 + C60764) * C94 +
            (C58419 * C802 + C57967 * C1201 + C58420 * C3434 + C92195 * C3878) *
                C106 +
            (C58419 * C810 + C57967 * C1209 + C58420 * C3442 + C92195 * C3882) *
                C95) *
               C92072) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C92322 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
               C41548 +
           (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92322 +
            (C66488 * C801 + C66489 * C92084) * C92072) *
               C92171) *
              C92116 * C798 -
          ((((C64430 + C64431) * C92084 + (C64432 + C64433) * C801) * C92072 +
            ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C92322) *
               C92171 +
           ((C66487 * C92084 + C66486 * C801) * C92072 +
            ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C92322) *
               C41548) *
              C92116 * C799 +
          ((((C64437 + C64436) * C801 + (C64435 + C64434) * C92084) * C92322 +
            ((C64433 + C64432) * C801 + (C64431 + C64430) * C92084) * C92072) *
               C41548 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C801 +
             (C58419 * C4871 + C57967 * C5420 + C58420 * C18736 +
              C92195 * C19394) *
                 C92084) *
                C92322 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C801 +
             (C58419 * C4872 + C57967 * C5421 + C58420 * C18737 +
              C92195 * C19395) *
                 C92084) *
                C92072) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C92322 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
               C41548 +
           (((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92322 +
            (C66488 * C181 + C66621 * C92105) * C92072) *
               C92171) *
              C93 -
          ((((C60874 + C60875) * C92105 + (C60763 + C60762) * C181) * C92072 +
            (C66620 * C92105 + C66486 * C181) * C92322) *
               C92171 +
           (((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92072 +
            ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92322) *
               C41548) *
              C94 +
          ((C58555 * C92322 +
            ((C58454 + C58455) * C181 + (C58552 + C58551) * C92105) * C92072) *
               C41548 +
           (((C60762 + C60763) * C181 + (C60875 + C60874) * C92105) * C92322 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C181 +
             (C58419 * C887 + C57967 * C1273 + C58420 * C3516 +
              C92195 * C3952) *
                 C92105) *
                C92072) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C884 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C798 -
            (C64427 + C64426) * C885 - (C64548 + C64549) * C799 +
            (C64437 + C64436) * C886 + (C64550 + C64551) * C800) *
               C92322 +
           ((C58447 + C58446) * C884 + (C58547 + C58548) * C798 -
            C66486 * C885 - C66620 * C799 + (C64433 + C64432) * C886 +
            (C64552 + C64553) * C800) *
               C92072) *
              C41548 +
          (((C64426 + C64427) * C884 + (C64549 + C64548) * C798 -
            (C64436 + C64437) * C885 - (C64551 + C64550) * C799 +
            (C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
             C92195 * C19392) *
                C886 +
            (C58419 * C4987 + C57967 * C5533 + C58420 * C18862 +
             C92195 * C19504) *
                C800) *
               C92322 +
           (C66488 * C884 + C66621 * C798 - (C64432 + C64433) * C885 -
            (C64553 + C64552) * C799 +
            (C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
             C92195 * C19393) *
                C886 +
            (C58419 * C4988 + C57967 * C5534 + C58420 * C18863 +
             C92195 * C19505) *
                C800) *
               C92072) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C92322 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C41548 +
           (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92322 +
            C66758 * C92072) *
               C92171) *
              C92105 * C93 -
          ((((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C92072 +
            C66759 * C92322) *
               C92171 +
           (((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92072 +
            ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92322) *
               C41548) *
              C92105 * C94 +
          ((C58651 * C92322 +
            ((C58454 + C58455) * C244 + (C58648 + C58647) * C92116) * C92072) *
               C41548 +
           (((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92322 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C244 +
             (C58419 * C953 + C57967 * C1325 + C58420 * C3590 +
              C92195 * C4022) *
                 C92116) *
                C92072) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C92322 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C41548 +
           (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92322 +
            C66758 * C92072) *
               C92171) *
              C798 -
          ((((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92072 +
            ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C92322) *
               C92171 +
           (C66759 * C92072 +
            ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C92322) *
               C41548) *
              C799 +
          ((((C64437 + C64436) * C244 + (C64669 + C64668) * C92116) * C92322 +
            ((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C92072) *
               C41548 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C244 +
             (C58419 * C5085 + C57967 * C5622 + C58420 * C18976 +
              C92195 * C19607) *
                 C92116) *
                C92322 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C58419 * C5086 + C57967 * C5623 + C58420 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92072) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C92361 +
                      (C21165 + C21166 - C21189 - C21190) * C92356 +
                      (C21171 + C21172 - C21191 - C21192) * C46527) *
                         C57967 +
                     ((C26329 + C26330 - C26337 - C26338) * C92361 +
                      (C25387 + C25388 - C25403 - C25404) * C92356 +
                      (C25393 + C25394 - C25405 - C25406) * C46527) *
                         C92195) *
                        C92116 * C1985 +
                    (((C21189 - (C21166 + C21165) + C21190) * C92361 +
                      (C21191 - (C21172 + C21171) + C21192) * C92356 +
                      (C21193 - (C21178 + C21177) + C21194) * C46527) *
                         C57967 +
                     ((C25403 - (C25388 + C25387) + C25404) * C92361 +
                      (C25405 - (C25394 + C25393) + C25406) * C92356 +
                      ((C19671 * C18733 + C92067 * C18735) * C1988 -
                       (C22427 * C1983 + C22428 * C1987) +
                       (C19671 * C18737 + C92067 * C18739) * C1984) *
                          C46527) *
                         C92195) *
                        C92116 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2059 +
                       (C19671 * C182 + C92067 * C188) * C1985 -
                       C20147 * C2060 - C20225 * C1986) *
                          C92361 +
                      (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
                       C20226 * C1986) *
                          C92356 +
                      (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 -
                       C20227 * C1986) *
                          C46527) *
                         C57967 +
                     ((C27334 + C27335 - C27336 - C27337) * C92361 +
                      (C27338 + C27339 - C27340 - C27341) * C92356 +
                      (C27342 + C27343 - C27344 - C27345) * C46527) *
                         C92195) *
                        C1983 +
                    (((C21183 * C2060 -
                       ((C19671 * C183 + C92067 * C189) * C1985 +
                        (C19671 * C108 + C92067 * C114) * C2059) +
                       C21267 * C1986) *
                          C92361 +
                      (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
                       C21268 * C1986) *
                          C92356 +
                      (C21187 * C2060 - (C21268 * C1985 + C21185 * C2059) +
                       C21269 * C1986) *
                          C46527) *
                         C57967 +
                     ((C25399 * C2060 - (C26444 * C1985 + C26335 * C2059) +
                       C25509 * C1986) *
                          C92361 +
                      (C25401 * C2060 - (C25509 * C1985 + C25399 * C2059) +
                       C25510 * C1986) *
                          C92356 +
                      ((C19671 * C18733 + C92067 * C18735) * C2060 -
                       (C25510 * C1985 + C25401 * C2059) +
                       (C19671 * C18863 + C92067 * C18865) * C1986) *
                          C46527) *
                         C92195) *
                        C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eexz[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C19671 * C107 + C92067 * C113) * C244 +
                        (C19671 * C245 + C92067 * C251) * C92116) *
                           C92361 +
                       (C20281 + C20297) * C92356 + C20301 * C46527) *
                          C57967 +
                      ((C24549 * C244 + C24753 * C92116) * C92361 +
                       (C23916 + C23917) * C92356 + C23922 * C46527) *
                          C92195) *
                         C1985 -
                     (((C23920 + C23921) * C46527 + (C23919 + C23918) * C92356 +
                       (C23917 + C23916) * C92361) *
                          C92195 +
                      ((C20299 + C20287) * C46527 + (C20298 + C20284) * C92356 +
                       (C20297 + C20281) * C92361) *
                          C57967) *
                         C1986) *
                        C1983 +
                    ((((C21336 + C21348) * C92361 + (C21339 + C21349) * C92356 +
                       (C21342 + C21350) * C46527) *
                          C57967 +
                      ((C25609 + C25617) * C92361 + (C25612 + C25618) * C92356 +
                       ((C19671 * C18733 + C92067 * C18735) * C244 +
                        (C19671 * C18977 + C92067 * C18979) * C92116) *
                           C46527) *
                          C92195) *
                         C1986 -
                     (((C25618 + C25612) * C46527 + (C25617 + C25609) * C92356 +
                       (C26546 * C92116 + C26335 * C244) * C92361) *
                          C92195 +
                      ((C21349 + C21339) * C46527 + (C21348 + C21336) * C92356 +
                       ((C19671 * C246 + C92067 * C252) * C92116 +
                        (C19671 * C108 + C92067 * C114) * C244) *
                           C92361) *
                          C57967) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C1987 +
                      (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                       C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                          C1983 -
                      (C46780 + C46781 + C46782) * C1988 -
                      (C46783 + C46784 + C46785) * C1984) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C1987 +
                      (C81901 + C81902 + C81903) * C1983 -
                      (C49990 + C49989 + C49988) * C1988 -
                      (C49993 + C49992 + C49991) * C1984) *
                         C92195) *
                        C92067 * C92116 * C1985 +
                    (((C49070 + C49071 + C49072) * C1988 -
                      ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                        C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                           C1983 +
                       (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                        C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                           C1987) +
                      (C49073 + C49074 + C49075) * C1984) *
                         C57967 +
                     ((C46752 * C3432 + C92361 * C3662 + C46753 * C8413 +
                       C92356 * C8767 + C46754 * C18733 + C46527 * C19091) *
                          C1988 -
                      ((C46754 * C18736 + C46527 * C19092 + C46753 * C8418 +
                        C92356 * C8769 + C46752 * C3439 + C92361 * C3665) *
                           C1983 +
                       (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                        C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                           C1987) +
                      (C46752 * C3440 + C92361 * C3666 + C46753 * C8419 +
                       C92356 * C8770 + C46754 * C18737 + C46527 * C19093) *
                          C1984) *
                         C92195) *
                        C92067 * C92116 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C2059 +
                      (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                       C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                          C1985 -
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C2060 -
                      (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                       C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                          C1986) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C2059 +
                      (C81996 + C81997 + C81998) * C1985 -
                      (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                       C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                          C2060 -
                      (C46754 * C18862 + C46527 * C19192 + C46753 * C8540 +
                       C92356 * C8870 + C46752 * C3513 + C92361 * C3735) *
                          C1986) *
                         C92195) *
                        C92067 * C1983 +
                    (((C49070 + C49071 + C49072) * C2060 -
                      ((C46880 + C46879 + C46878) * C1985 +
                       (C46780 + C46781 + C46782) * C2059) +
                      (C49182 + C49181 + C49180) * C1986) *
                         C57967 +
                     ((C46752 * C3432 + C92361 * C3662 + C46753 * C8413 +
                       C92356 * C8767 + C46754 * C18733 + C46527 * C19091) *
                          C2060 -
                      ((C50100 + C50099 + C50098) * C1985 +
                       (C49990 + C49989 + C49988) * C2059) +
                      (C46752 * C3514 + C92361 * C3736 + C46753 * C8541 +
                       C92356 * C8871 + C46754 * C18863 + C46527 * C19193) *
                          C1986) *
                         C92195) *
                        C92067 * C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                        C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                           C244 +
                       (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                        C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                           C92116) *
                          C57967 +
                      ((C81898 + C81899 + C81900) * C244 +
                       (C82090 + C82089 + C82088) * C92116) *
                          C92195) *
                         C92067 * C1985 -
                     (((C46754 * C18976 + C46527 * C19292 + C46753 * C8653 +
                        C92356 * C8971 + C46752 * C3587 + C92361 * C3805) *
                           C92116 +
                       (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                        C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                           C244) *
                          C92195 +
                      ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                        C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                           C92116 +
                       (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                        C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                           C244) *
                          C57967) *
                         C92067 * C1986) *
                        C1983 +
                    ((((C49070 + C49071 + C49072) * C244 +
                       (C49289 + C49288 + C49287) * C92116) *
                          C57967 +
                      ((C46752 * C3432 + C92361 * C3662 + C46753 * C8413 +
                        C92356 * C8767 + C46754 * C18733 + C46527 * C19091) *
                           C244 +
                       (C46752 * C3588 + C92361 * C3806 + C46753 * C8654 +
                        C92356 * C8972 + C46754 * C18977 + C46527 * C19293) *
                           C92116) *
                          C92195) *
                         C92067 * C1986 -
                     (((C50205 + C50206 + C50207) * C92116 +
                       (C49990 + C49989 + C49988) * C244) *
                          C92195 +
                      ((C46972 + C46971 + C46970) * C92116 +
                       (C46780 + C46781 + C46782) * C244) *
                          C57967) *
                         C92067 * C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C1987 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C1983 -
            (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
               C92067 * C92361 +
           ((C64426 + C64427) * C1987 + (C64428 + C64429) * C1983 -
            C66486 * C1988 - C66487 * C1984) *
               C92067 * C92356 +
           (C81394 * C1987 + C81395 * C1983 - (C64432 + C64433) * C1988 -
            (C64430 + C64431) * C1984) *
               C92067 * C46527) *
              C92116 * C1985 +
          ((C66488 * C1988 -
            ((C64429 + C64428) * C1983 + (C64427 + C64426) * C1987) +
            C66489 * C1984) *
               C92067 * C92361 +
           ((C64433 + C64432) * C1988 -
            ((C64434 + C64435) * C1983 + (C64436 + C64437) * C1987) +
            (C64431 + C64430) * C1984) *
               C92067 * C92356 +
           ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
             C92195 * C19393) *
                C1988 -
            ((C81406 + C81407) * C1983 + (C81408 + C81409) * C1987) +
            (C58419 * C4872 + C57967 * C5421 + C58420 * C18737 +
             C92195 * C19395) *
                C1984) *
               C92067 * C46527) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2059 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C1985 -
            (C64427 + C64426) * C2060 - (C64548 + C64549) * C1986) *
               C92067 * C92361 +
           ((C64426 + C64427) * C2059 + (C64549 + C64548) * C1985 -
            (C64436 + C64437) * C2060 - (C64551 + C64550) * C1986) *
               C92067 * C92356 +
           (C81394 * C2059 + C81486 * C1985 - (C81408 + C81409) * C2060 -
            (C81492 + C81491) * C1986) *
               C92067 * C46527) *
              C1983 +
          ((C66488 * C2060 -
            ((C58548 + C58547) * C1985 + (C58446 + C58447) * C2059) +
            C66621 * C1986) *
               C92067 * C92361 +
           ((C64433 + C64432) * C2060 - (C66620 * C1985 + C66486 * C2059) +
            (C64552 + C64553) * C1986) *
               C92067 * C92356 +
           ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
             C92195 * C19393) *
                C2060 -
            ((C64553 + C64552) * C1985 + (C64432 + C64433) * C2059) +
            (C58419 * C4988 + C57967 * C5534 + C58420 * C18863 +
             C92195 * C19505) *
                C1986) *
               C92067 * C46527) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C92067 * C92361 +
            ((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92067 *
                C92356 +
            C81577 * C46527) *
               C1985 -
           (((C81574 + C81575) * C92116 + (C81408 + C81409) * C244) * C92067 *
                C46527 +
            ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C92067 *
                C92356 +
            ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C92067 *
                C92361) *
               C1986) *
              C1983 +
          ((C66758 * C92067 * C92361 +
            ((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C92067 *
                C92356 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C58419 * C5086 + C57967 * C5623 + C58420 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92067 * C46527) *
               C1986 -
           (((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92067 *
                C46527 +
            C66759 * C92067 * C92356 +
            ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92067 *
                C92361) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C801 +
              (C19671 * C117 + C92067 * C125) * C92084) *
                 C92361 +
             (C20155 + C20156) * C92356 + C20163 * C46527) *
                C57967 +
            ((C24557 + C24558) * C92361 + C27233 * C92356 + C23767 * C46527) *
                C92195) *
               C2709 -
           (((C24559 + C24560) * C46527 + C37351 * C92356 +
             (C24563 + C24564) * C92361) *
                C92195 +
            (C27234 * C46527 + C27235 * C92356 + (C24558 + C24557) * C92361) *
                C57967) *
               C2710) *
              C1985 +
          (((C27233 * C92361 + C23767 * C92356 + (C22434 + C22433) * C46527) *
                C57967 +
            (C34700 * C92361 + (C24560 + C24559) * C92356 +
             ((C19671 * C20682 + C92067 * C20683) * C801 +
              (C19671 * C20684 + C92067 * C20685) * C92084) *
                 C46527) *
                C92195) *
               C2710 -
           (((C22433 + C22434) * C46527 + C27234 * C92356 + C27235 * C92361) *
                C92195 +
            ((C20160 + C20159) * C46527 + (C20158 + C20157) * C92356 +
             (C20156 + C20155) * C92361) *
                C57967) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2059 +
                       (C19671 * C182 + C92067 * C188) * C1985 -
                       C20147 * C2060 - C20225 * C1986) *
                          C92361 +
                      (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
                       C20226 * C1986) *
                          C92356 +
                      (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 -
                       C20227 * C1986) *
                          C46527) *
                         C57967 +
                     ((C27334 + C27335 - C27336 - C27337) * C92361 +
                      (C27338 + C27339 - C27340 - C27341) * C92356 +
                      (C27342 + C27343 - C27344 - C27345) * C46527) *
                         C92195) *
                        C92084 * C2709 +
                    (((C27336 - (C27335 + C27334) + C27337) * C92361 +
                      (C27340 - (C27339 + C27338) + C27341) * C92356 +
                      (C27344 - (C27343 + C27342) + C27345) * C46527) *
                         C57967 +
                     ((C37452 - (C37451 + C37450) + C37453) * C92361 +
                      (C37456 - (C37455 + C37454) + C37457) * C92356 +
                      ((C19671 * C20682 + C92067 * C20683) * C2060 -
                       (C24660 * C1985 + C24552 * C2059) +
                       (C19671 * C20736 + C92067 * C20737) * C1986) *
                          C46527) *
                         C92195) *
                        C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2849 +
                       (C19671 * C245 + C92067 * C251) * C2709 -
                       C24549 * C2850 - C24753 * C2710) *
                          C92361 +
                      (C22584 + C22585 - C22586 - C22602) * C92356 +
                      (C22589 + C22590 - C22591 - C22603) * C46527) *
                         C57967 +
                     ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
                       C24754 * C2710) *
                          C92361 +
                      (C27444 + C27445 - C27446 - C27447) * C92356 +
                      (C27448 + C27449 - C27450 - C27451) * C46527) *
                         C92195) *
                        C1985 +
                    (((C22586 - (C22585 + C22584) + C22602) * C92361 +
                      (C22591 - (C22590 + C22589) + C22603) * C92356 +
                      (C22596 - (C22595 + C22594) + C22604) * C46527) *
                         C57967 +
                     ((C27446 - (C27445 + C27444) + C27447) * C92361 +
                      (C27450 - (C27449 + C27448) + C27451) * C92356 +
                      ((C19671 * C20682 + C92067 * C20683) * C2850 -
                       (C22601 * C2709 + C22428 * C2849) +
                       (C19671 * C20788 + C92067 * C20789) * C2710) *
                          C46527) *
                         C92195) *
                        C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                        C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                           C801 +
                       (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                        C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                           C92084) *
                          C57967 +
                      ((C81898 + C81899 + C81900) * C801 +
                       (C81901 + C81902 + C81903) * C92084) *
                          C92195) *
                         C92067 * C2709 -
                     (((C81904 + C81905 + C81906) * C92084 +
                       (C81907 + C81908 + C81909) * C801) *
                          C92195 +
                      ((C81903 + C81902 + C81901) * C92084 +
                       (C81900 + C81899 + C81898) * C801) *
                          C57967) *
                         C92067 * C2710) *
                        C1985 +
                    ((((C84484 + C84485 + C84486) * C801 +
                       (C84487 + C84488 + C84489) * C92084) *
                          C57967 +
                      ((C46752 * C5719 + C92361 * C5965 + C46753 * C16095 +
                        C92356 * C16333 + C46754 * C20682 + C46527 * C20840) *
                           C801 +
                       (C46752 * C5725 + C92361 * C5968 + C46753 * C16099 +
                        C92356 * C16335 + C46754 * C20684 + C46527 * C20841) *
                           C92084) *
                          C92195) *
                         C92067 * C2710 -
                     (((C84489 + C84488 + C84487) * C92084 +
                       (C84486 + C84485 + C84484) * C801) *
                          C92195 +
                      ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                        C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                           C92084 +
                       (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                        C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                           C801) *
                          C57967) *
                         C92067 * C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C2059 +
                      (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                       C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                          C1985 -
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C2060 -
                      (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                       C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                          C1986) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C2059 +
                      (C81996 + C81997 + C81998) * C1985 -
                      (C84486 + C84485 + C84484) * C2060 -
                      (C84594 + C84595 + C84596) * C1986) *
                         C92195) *
                        C92067 * C92084 * C2709 +
                    (((C84484 + C84485 + C84486) * C2060 -
                      ((C81998 + C81997 + C81996) * C1985 +
                       (C81900 + C81899 + C81898) * C2059) +
                      (C84596 + C84595 + C84594) * C1986) *
                         C57967 +
                     ((C46752 * C5719 + C92361 * C5965 + C46753 * C16095 +
                       C92356 * C16333 + C46754 * C20682 + C46527 * C20840) *
                          C2060 -
                      ((C81999 + C82000 + C82001) * C1985 +
                       (C81907 + C81908 + C81909) * C2059) +
                      (C46752 * C5805 + C92361 * C6045 + C46753 * C16177 +
                       C92356 * C16411 + C46754 * C20736 + C46527 * C20892) *
                          C1986) *
                         C92195) *
                        C92067 * C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C2849 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C2709 -
                      (C81900 + C81899 + C81898) * C2850 -
                      (C82088 + C82089 + C82090) * C2710) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C2849 +
                      (C82090 + C82089 + C82088) * C2709 -
                      (C81907 + C81908 + C81909) * C2850 -
                      (C82093 + C82092 + C82091) * C2710) *
                         C92195) *
                        C92067 * C1985 +
                    (((C84484 + C84485 + C84486) * C2850 -
                      ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                        C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                           C2709 +
                       (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                        C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                           C2849) +
                      (C84701 + C84702 + C84703) * C2710) *
                         C57967 +
                     ((C46752 * C5719 + C92361 * C5965 + C46753 * C16095 +
                       C92356 * C16333 + C46754 * C20682 + C46527 * C20840) *
                          C2850 -
                      ((C84703 + C84702 + C84701) * C2709 +
                       (C84486 + C84485 + C84484) * C2849) +
                      (C46752 * C5885 + C92361 * C6122 + C46753 * C16255 +
                       C92356 * C16487 + C46754 * C20788 + C46527 * C20943) *
                          C2710) *
                         C92195) *
                        C92067 * C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eezx[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C92067 * C92361 +
            ((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92067 *
                C92356 +
            C81411 * C46527) *
               C2709 -
           (((C84810 + C84811) * C92084 + (C84812 + C84813) * C801) * C92067 *
                C46527 +
            ((C68886 + C68887) * C92084 + (C68888 + C68889) * C801) * C92067 *
                C92356 +
            ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
              C57967 * C1796) *
                 C92084 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C801) *
                C92067 * C92361) *
               C2710) *
              C1985 +
          ((((C68889 + C68888) * C801 + (C68887 + C68886) * C92084) * C92067 *
                C92361 +
            ((C84813 + C84812) * C801 + (C84811 + C84810) * C92084) * C92067 *
                C92356 +
            ((C58419 * C18732 + C57967 * C19392 + C58420 * C20682 +
              C92195 * C20994) *
                 C801 +
             (C58419 * C18736 + C57967 * C19394 + C58420 * C20684 +
              C92195 * C20995) *
                 C92084) *
                C92067 * C46527) *
               C2710 -
           (((C81406 + C81407) * C92084 + (C81408 + C81409) * C801) * C92067 *
                C46527 +
            ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C92067 *
                C92356 +
            ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C92067 *
                C92361) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2059 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C1985 -
            (C64427 + C64426) * C2060 - (C64548 + C64549) * C1986) *
               C92067 * C92361 +
           ((C64426 + C64427) * C2059 + (C64549 + C64548) * C1985 -
            (C64436 + C64437) * C2060 - (C64551 + C64550) * C1986) *
               C92067 * C92356 +
           (C81394 * C2059 + C81486 * C1985 - (C81408 + C81409) * C2060 -
            (C81492 + C81491) * C1986) *
               C92067 * C46527) *
              C92084 * C2709 +
          (((C68889 + C68888) * C2060 -
            ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
              C57967 * C1854) *
                 C1985 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C2059) +
            (C69024 + C69025) * C1986) *
               C92067 * C92361 +
           ((C84813 + C84812) * C2060 -
            ((C69025 + C69024) * C1985 + (C68888 + C68889) * C2059) +
            (C84916 + C84917) * C1986) *
               C92067 * C92356 +
           ((C58419 * C18732 + C57967 * C19392 + C58420 * C20682 +
             C92195 * C20994) *
                C2060 -
            ((C84917 + C84916) * C1985 + (C84812 + C84813) * C2059) +
            (C58419 * C18862 + C57967 * C19504 + C58420 * C20736 +
             C92195 * C21046) *
                C1986) *
               C92067 * C46527) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2849 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C2709 -
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C2850 -
            (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
             C57967 * C1909) *
                C2710) *
               C92067 * C92361 +
           ((C64426 + C64427) * C2849 + (C64664 + C64665) * C2709 -
            (C68888 + C68889) * C2850 - (C69160 + C69161) * C2710) *
               C92067 * C92356 +
           (C81394 * C2849 + C81568 * C2709 - (C84812 + C84813) * C2850 -
            (C85020 + C85021) * C2710) *
               C92067 * C46527) *
              C1985 +
          (((C68889 + C68888) * C2850 -
            ((C64665 + C64664) * C2709 + (C64427 + C64426) * C2849) +
            (C69161 + C69160) * C2710) *
               C92067 * C92361 +
           ((C84813 + C84812) * C2850 -
            ((C64668 + C64669) * C2709 + (C64436 + C64437) * C2849) +
            (C85021 + C85020) * C2710) *
               C92067 * C92356 +
           ((C58419 * C18732 + C57967 * C19392 + C58420 * C20682 +
             C92195 * C20994) *
                C2850 -
            ((C81574 + C81575) * C2709 + (C81408 + C81409) * C2849) +
            (C58419 * C18976 + C57967 * C19607 + C58420 * C20788 +
             C92195 * C21097) *
                C2710) *
               C92067 * C46527) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eexx[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92361 +
            (C20155 + C20156) * C92356 + C20163 * C46527) *
               C57967 +
           ((C24557 + C24558) * C92361 + C27233 * C92356 + C23767 * C46527) *
               C92195) *
              C92116 * C798 -
          (((C22433 + C22434) * C46527 + C27234 * C92356 + C27235 * C92361) *
               C92195 +
           ((C20160 + C20159) * C46527 + (C20158 + C20157) * C92356 +
            (C20156 + C20155) * C92361) *
               C57967) *
              C92116 * C799 +
          ((C20163 * C92361 + C20164 * C92356 + (C20162 + C20161) * C46527) *
               C57967 +
           (C23767 * C92361 + (C22434 + C22433) * C92356 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C46527) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C92361 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C92356 +
           (C20149 * C104 + C20150 * C93 - C21185 * C105 - C21186 * C94 +
            (C19671 * C808 + C92067 * C820) * C106 +
            (C19671 * C824 + C92067 * C832) * C95) *
               C46527) *
              C57967 +
          ((C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C92361 +
           (C22432 * C104 + C22431 * C93 - C25399 * C105 - C25400 * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C92356 +
           (C22430 * C104 + C22429 * C93 - C25401 * C105 - C25402 * C94 +
            (C19671 * C8414 + C92067 * C8417) * C106 +
            (C19671 * C8420 + C92067 * C8423) * C95) *
               C46527) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92361 +
            (C20155 + C20156) * C92356 + C20163 * C46527) *
               C57967 +
           ((C24557 + C24558) * C92361 + C27233 * C92356 + C23767 * C46527) *
               C92195) *
              C1383 -
          (((C24559 + C24560) * C46527 + C37351 * C92356 +
            (C24563 + C24564) * C92361) *
               C92195 +
           (C27234 * C46527 + C27235 * C92356 + (C24558 + C24557) * C92361) *
               C57967) *
              C1384 +
          ((C34699 * C92361 + C34700 * C92356 + (C24560 + C24559) * C46527) *
               C57967 +
           (C39195 * C92361 + (C34717 + C34716) * C92356 +
            ((C19671 * C24525 + C92067 * C24528) * C801 +
             (C19671 * C24529 + C92067 * C24531) * C92084) *
                C46527) *
               C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C92361 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C92356 +
           (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
            C20154 * C886 + C20228 * C800) *
               C46527) *
              C57967 +
          ((C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
            C22430 * C886 + C22514 * C800) *
               C92361 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C92356 +
           (C22430 * C884 + C22514 * C798 - C22428 * C885 - C22515 * C799 +
            (C19671 * C22410 + C92067 * C22411) * C886 +
            (C19671 * C22504 + C92067 * C22505) * C800) *
               C46527) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C92361 +
            (C20147 * C181 + C20225 * C92105) * C92356 +
            (C20149 * C181 + C20226 * C92105) * C46527) *
               C57967 +
           ((C24643 + C24663) * C92361 + (C24646 + C24647) * C92356 +
            (C24648 + C24649) * C46527) *
               C92195) *
              C93 -
          (((C26437 + C26438) * C46527 + (C26439 + C26440) * C92356 +
            (C26445 + C26443) * C92361) *
               C92195 +
           ((C21268 * C92105 + C21185 * C181) * C46527 +
            (C21267 * C92105 + C21183 * C181) * C92356 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C92361) *
               C57967) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C92361 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C92356 +
            ((C19671 * C808 + C92067 * C820) * C181 +
             (C19671 * C893 + C92067 * C901) * C92105) *
                C46527) *
               C57967 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C92361 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C92356 +
            ((C19671 * C8414 + C92067 * C8417) * C181 +
             (C19671 * C8542 + C92067 * C8545) * C92105) *
                C46527) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C92361 +
            (C20147 * C181 + C20225 * C92105) * C92356 +
            (C20149 * C181 + C20226 * C92105) * C46527) *
               C57967 +
           ((C24643 + C24663) * C92361 + (C24646 + C24647) * C92356 +
            (C24648 + C24649) * C46527) *
               C92195) *
              C92084 * C1383 -
          (((C24664 + C24652) * C46527 + (C24665 + C24655) * C92356 +
            (C24666 + C24658) * C92361) *
               C92195 +
           ((C24649 + C24648) * C46527 + (C24647 + C24646) * C92356 +
            (C24663 + C24643) * C92361) *
               C57967) *
              C92084 * C1384 +
          ((C34796 * C92361 + C34797 * C92356 + (C24652 + C24664) * C46527) *
               C57967 +
           (C39258 * C92361 + (C34800 + C34809) * C92356 +
            ((C19671 * C24525 + C92067 * C24528) * C181 +
             (C19671 * C24639 + C92067 * C24641) * C92105) *
                C46527) *
               C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92361 +
            (C20281 + C20297) * C92356 + C20301 * C46527) *
               C57967 +
           ((C24549 * C244 + C24753 * C92116) * C92361 +
            (C23916 + C23917) * C92356 + C23922 * C46527) *
               C92195) *
              C798 -
          (((C23920 + C23921) * C46527 + (C23919 + C23918) * C92356 +
            (C23917 + C23916) * C92361) *
               C92195 +
           ((C20299 + C20287) * C46527 + (C20298 + C20284) * C92356 +
            (C20297 + C20281) * C92361) *
               C57967) *
              C799 +
          ((C20301 * C92361 + C20302 * C92356 + (C20292 + C20300) * C46527) *
               C57967 +
           (C23922 * C92361 + (C23921 + C23920) * C92356 +
            ((C19671 * C22410 + C92067 * C22411) * C244 +
             (C19671 * C22581 + C92067 * C22582) * C92116) *
                C46527) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92361 +
            (C20281 + C20297) * C92356 + C20301 * C46527) *
               C57967 +
           ((C24549 * C244 + C24753 * C92116) * C92361 +
            (C23916 + C23917) * C92356 + C23922 * C46527) *
               C92195) *
              C92105 * C93 -
          (((C25618 + C25612) * C46527 + (C25617 + C25609) * C92356 +
            (C26546 * C92116 + C26335 * C244) * C92361) *
               C92195 +
           ((C21349 + C21339) * C46527 + (C21348 + C21336) * C92356 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C92361) *
               C57967) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C92361 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C92356 +
            ((C19671 * C808 + C92067 * C820) * C244 +
             (C19671 * C959 + C92067 * C967) * C92116) *
                C46527) *
               C57967 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C92361 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C92356 +
            ((C19671 * C8414 + C92067 * C8417) * C244 +
             (C19671 * C8655 + C92067 * C8658) * C92116) *
                C46527) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1534 +
            (C19671 * C245 + C92067 * C251) * C1383 - C24549 * C1535 -
            C24753 * C1384 + C24556 * C1536 + C24754 * C1385) *
               C92361 +
           (C20147 * C1534 + C20293 * C1383 - C22432 * C1535 - C22599 * C1384 +
            C24554 * C1536 + C24755 * C1385) *
               C92356 +
           (C20149 * C1534 + C20294 * C1383 - C22430 * C1535 - C22600 * C1384 +
            C24552 * C1536 + C24756 * C1385) *
               C46527) *
              C57967 +
          ((C24549 * C1534 + C24753 * C1383 - C24556 * C1535 - C24754 * C1384 +
            C34714 * C1536 + C34891 * C1385) *
               C92361 +
           (C22432 * C1534 + C22599 * C1383 - C24554 * C1535 - C24755 * C1384 +
            C34712 * C1536 + C34892 * C1385) *
               C92356 +
           (C22430 * C1534 + C22600 * C1383 - C24552 * C1535 - C24756 * C1384 +
            (C19671 * C24525 + C92067 * C24528) * C1536 +
            (C19671 * C24741 + C92067 * C24743) * C1385) *
               C46527) *
              C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C801 +
                      (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                       C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                          C92084) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C801 +
                      (C46752 * C1397 + C92361 * C1614 + C46753 * C3439 +
                       C92356 * C3665 + C46754 * C8418 + C46527 * C8769) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C798 -
                    (((C46754 * C18736 + C46527 * C19092 + C46753 * C8418 +
                       C92356 * C8769 + C46752 * C3439 + C92361 * C3665) *
                          C92084 +
                      (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                       C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                          C801) *
                         C92195 +
                     ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                       C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                          C92084 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C801) *
                         C57967) *
                        C92067 * C92116 * C799 +
                    (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                       C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                          C801 +
                      (C46752 * C822 + C92361 * C1031 + C46753 * C4871 +
                       C92356 * C5186 + C46754 * C15277 + C46527 * C15595) *
                          C92084) *
                         C57967 +
                     ((C46752 * C8412 + C92361 * C8766 + C46753 * C18732 +
                       C92356 * C19090 + C46754 * C22410 + C46527 * C22670) *
                          C801 +
                      (C46752 * C8418 + C92361 * C8769 + C46753 * C18736 +
                       C92356 * C19092 + C46754 * C22412 + C46527 * C22671) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C104 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C93 -
                     (C46780 + C46781 + C46782) * C105 -
                     (C46783 + C46784 + C46785) * C94 +
                     (C46786 + C46787 + C46788) * C106 +
                     (C46789 + C46790 + C46791) * C95) *
                        C57967 +
                    ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                      C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                         C104 +
                     (C46752 * C1397 + C92361 * C1614 + C46753 * C3439 +
                      C92356 * C3665 + C46754 * C8418 + C46527 * C8769) *
                         C93 -
                     (C49990 + C49989 + C49988) * C105 -
                     (C49993 + C49992 + C49991) * C94 +
                     (C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                      C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                         C106 +
                     (C46752 * C1395 + C92361 * C1612 + C46753 * C3441 +
                      C92356 * C3667 + C46754 * C8420 + C46527 * C8771) *
                         C95) *
                        C92195) *
                   C92067 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C801 +
                      (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                       C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                          C92084) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C801 +
                      (C81901 + C81902 + C81903) * C92084) *
                         C92195) *
                        C92067 * C1383 -
                    (((C81904 + C81905 + C81906) * C92084 +
                      (C81907 + C81908 + C81909) * C801) *
                         C92195 +
                     ((C81903 + C81902 + C81901) * C92084 +
                      (C81900 + C81899 + C81898) * C801) *
                         C57967) *
                        C92067 * C1384 +
                    (((C81909 + C81908 + C81907) * C801 +
                      (C81906 + C81905 + C81904) * C92084) *
                         C57967 +
                     ((C46752 * C10808 + C92361 * C11126 + C46753 * C24524 +
                       C92356 * C24830 + C46754 * C24525 + C46527 * C24831) *
                          C801 +
                      (C46752 * C10814 + C92361 * C11129 + C46753 * C24527 +
                       C92356 * C24832 + C46754 * C24529 + C46527 * C24833) *
                          C92084) *
                         C92195) *
                        C92067 * C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C884 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C798 -
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C885 -
                     (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                      C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                         C799 +
                     (C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                      C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                         C886 +
                     (C46752 * C891 + C92361 * C1086 + C46753 * C4987 +
                      C92356 * C5263 + C46754 * C15396 + C46527 * C15671) *
                         C800) *
                        C57967 +
                    ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                      C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                         C884 +
                     (C46752 * C1471 + C92361 * C1672 + C46753 * C3513 +
                      C92356 * C3735 + C46754 * C8540 + C46527 * C8870) *
                         C798 -
                     (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                      C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                         C885 -
                     (C46754 * C18862 + C46527 * C19192 + C46753 * C8540 +
                      C92356 * C8870 + C46752 * C3513 + C92361 * C3735) *
                         C799 +
                     (C46752 * C8412 + C92361 * C8766 + C46753 * C18732 +
                      C92356 * C19090 + C46754 * C22410 + C46527 * C22670) *
                         C886 +
                     (C46752 * C8540 + C92361 * C8870 + C46753 * C18862 +
                      C92356 * C19192 + C46754 * C22504 + C46527 * C22738) *
                         C800) *
                        C92195) *
                   C92067 * C92084 * C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C181 +
                      (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                       C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                          C92105) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C181 +
                      (C46752 * C1471 + C92361 * C1672 + C46753 * C3513 +
                       C92356 * C3735 + C46754 * C8540 + C46527 * C8870) *
                          C92105) *
                         C92195) *
                        C92067 * C93 -
                    (((C50100 + C50099 + C50098) * C92105 +
                      (C49990 + C49989 + C49988) * C181) *
                         C92195 +
                     ((C46880 + C46879 + C46878) * C92105 +
                      (C46780 + C46781 + C46782) * C181) *
                         C57967) *
                        C92067 * C94 +
                    (((C46786 + C46787 + C46788) * C181 +
                      (C46883 + C46882 + C46881) * C92105) *
                         C57967 +
                     ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                       C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                          C181 +
                      (C46752 * C1469 + C92361 * C1670 + C46753 * C3515 +
                       C92356 * C3737 + C46754 * C8542 + C46527 * C8872) *
                          C92105) *
                         C92195) *
                        C92067 * C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C181 +
                      (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                       C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                          C92105) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C181 +
                      (C81996 + C81997 + C81998) * C92105) *
                         C92195) *
                        C92067 * C92084 * C1383 -
                    (((C81999 + C82000 + C82001) * C92105 +
                      (C81907 + C81908 + C81909) * C181) *
                         C92195 +
                     ((C81998 + C81997 + C81996) * C92105 +
                      (C81900 + C81899 + C81898) * C181) *
                         C57967) *
                        C92067 * C92084 * C1384 +
                    (((C81909 + C81908 + C81907) * C181 +
                      (C82001 + C82000 + C81999) * C92105) *
                         C57967 +
                     ((C46752 * C10808 + C92361 * C11126 + C46753 * C24524 +
                       C92356 * C24830 + C46754 * C24525 + C46527 * C24831) *
                          C181 +
                      (C46752 * C10930 + C92361 * C11242 + C46753 * C24638 +
                       C92356 * C24944 + C46754 * C24639 + C46527 * C24945) *
                          C92105) *
                         C92195) *
                        C92067 * C92084 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C244 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C92116) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C244 +
                      (C46752 * C1540 + C92361 * C1727 + C46753 * C3587 +
                       C92356 * C3805 + C46754 * C8653 + C46527 * C8971) *
                          C92116) *
                         C92195) *
                        C92067 * C798 -
                    (((C46754 * C18976 + C46527 * C19292 + C46753 * C8653 +
                       C92356 * C8971 + C46752 * C3587 + C92361 * C3805) *
                          C92116 +
                      (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                       C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                          C244) *
                         C92195 +
                     ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                       C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                          C92116 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C244) *
                         C57967) *
                        C92067 * C799 +
                    (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                       C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                          C244 +
                      (C46752 * C957 + C92361 * C1147 + C46753 * C5085 +
                       C92356 * C5340 + C46754 * C15493 + C46527 * C15747) *
                          C92116) *
                         C57967 +
                     ((C46752 * C8412 + C92361 * C8766 + C46753 * C18732 +
                       C92356 * C19090 + C46754 * C22410 + C46527 * C22670) *
                          C244 +
                      (C46752 * C8653 + C92361 * C8971 + C46753 * C18976 +
                       C92356 * C19292 + C46754 * C22581 + C46527 * C22805) *
                          C92116) *
                         C92195) *
                        C92067 * C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C244 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C92116) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C244 +
                      (C46752 * C1540 + C92361 * C1727 + C46753 * C3587 +
                       C92356 * C3805 + C46754 * C8653 + C46527 * C8971) *
                          C92116) *
                         C92195) *
                        C92067 * C92105 * C93 -
                    (((C50205 + C50206 + C50207) * C92116 +
                      (C49990 + C49989 + C49988) * C244) *
                         C92195 +
                     ((C46972 + C46971 + C46970) * C92116 +
                      (C46780 + C46781 + C46782) * C244) *
                         C57967) *
                        C92067 * C92105 * C94 +
                    (((C46786 + C46787 + C46788) * C244 +
                      (C46975 + C46974 + C46973) * C92116) *
                         C57967 +
                     ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                       C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                          C244 +
                      (C46752 * C1538 + C92361 * C1731 + C46753 * C3589 +
                       C92356 * C3807 + C46754 * C8655 + C46527 * C8973) *
                          C92116) *
                         C92195) *
                        C92067 * C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C1534 +
                     (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                      C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                         C1383 -
                     (C81900 + C81899 + C81898) * C1535 -
                     (C82088 + C82089 + C82090) * C1384 +
                     (C81909 + C81908 + C81907) * C1536 +
                     (C82091 + C82092 + C82093) * C1385) *
                        C57967 +
                    ((C81898 + C81899 + C81900) * C1534 +
                     (C82090 + C82089 + C82088) * C1383 -
                     (C81907 + C81908 + C81909) * C1535 -
                     (C82093 + C82092 + C82091) * C1384 +
                     (C46752 * C10808 + C92361 * C11126 + C46753 * C24524 +
                      C92356 * C24830 + C46754 * C24525 + C46527 * C24831) *
                         C1536 +
                     (C46752 * C11028 + C92361 * C11339 + C46753 * C24740 +
                      C92356 * C25038 + C46754 * C24741 + C46527 * C25039) *
                         C1385) *
                        C92195) *
                   C92067 * C92105 * C92084) /
                      (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C801 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C92361 +
           ((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92067 *
               C92356 +
           C81411 * C46527) *
              C92116 * C798 -
          (((C81406 + C81407) * C92084 + (C81408 + C81409) * C801) * C92067 *
               C46527 +
           ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C92067 *
               C92356 +
           ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C92067 *
               C92361) *
              C92116 * C799 +
          (C81411 * C92361 +
           ((C81409 + C81408) * C801 + (C81407 + C81406) * C92084) * C92067 *
               C92356 +
           ((C58419 * C15273 + C57967 * C15823 + C58420 * C22410 +
             C92195 * C22872) *
                C801 +
            (C58419 * C15277 + C57967 * C15825 + C58420 * C22412 +
             C92195 * C22873) *
                C92084) *
               C92067 * C46527) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C104 +
           (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
               C93 -
           (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
           C58459 * C95) *
              C92067 * C92361 +
          ((C64426 + C64427) * C104 + (C64428 + C64429) * C93 - C66486 * C105 -
           C66487 * C94 + (C60762 + C60763) * C106 + (C60764 + C60765) * C95) *
              C92067 * C92356 +
          ((C64437 + C64436) * C104 + (C64435 + C64434) * C93 -
           (C64432 + C64433) * C105 - (C64430 + C64431) * C94 +
           (C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
               C106 +
           (C58419 * C824 + C57967 * C1215 + C58420 * C8420 + C92195 * C9077) *
               C95) *
              C92067 * C46527) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C801 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C92361 +
           ((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92067 *
               C92356 +
           C81411 * C46527) *
              C1383 -
          (((C58420 * C16099 + C92195 * C16565 + C58419 * C8418 +
             C57967 * C9075) *
                C92084 +
            (C58420 * C16095 + C92195 * C16563 + C58419 * C8412 +
             C57967 * C9072) *
                C801) *
               C92067 * C46527 +
           ((C68886 + C68887) * C92084 + (C68888 + C68889) * C801) * C92067 *
               C92356 +
           ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
             C57967 * C1796) *
                C92084 +
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C801) *
               C92067 * C92361) *
              C1384 +
          (((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
             C92195 * C11428) *
                C801 +
            (C58419 * C1406 + C57967 * C1797 + C58420 * C10814 +
             C92195 * C11431) *
                C92084) *
               C92067 * C92361 +
           ((C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
             C92195 * C25132) *
                C801 +
            (C58419 * C5725 + C57967 * C6202 + C58420 * C24527 +
             C92195 * C25134) *
                C92084) *
               C92067 * C92356 +
           ((C58419 * C16095 + C57967 * C16563 + C58420 * C24525 +
             C92195 * C25133) *
                C801 +
            (C58419 * C16099 + C57967 * C16565 + C58420 * C24529 +
             C92195 * C25135) *
                C92084) *
               C92067 * C46527) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C884 +
           (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
               C798 -
           (C64427 + C64426) * C885 - (C64548 + C64549) * C799 + C81394 * C886 +
           C81486 * C800) *
              C92067 * C92361 +
          ((C64426 + C64427) * C884 + (C64549 + C64548) * C798 -
           (C64436 + C64437) * C885 - (C64551 + C64550) * C799 +
           (C81409 + C81408) * C886 + (C81491 + C81492) * C800) *
              C92067 * C92356 +
          (C81394 * C884 + C81486 * C798 - (C81408 + C81409) * C885 -
           (C81492 + C81491) * C799 +
           (C58419 * C15273 + C57967 * C15823 + C58420 * C22410 +
            C92195 * C22872) *
               C886 +
           (C58419 * C15396 + C57967 * C15922 + C58420 * C22504 +
            C92195 * C22948) *
               C800) *
              C92067 * C46527) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C181 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C92361 +
           ((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92067 *
               C92356 +
           ((C64437 + C64436) * C181 + (C64550 + C64551) * C92105) * C92067 *
               C46527) *
              C93 -
          (((C64553 + C64552) * C92105 + (C64432 + C64433) * C181) * C92067 *
               C46527 +
           (C66620 * C92105 + C66486 * C181) * C92067 * C92356 +
           ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92067 *
               C92361) *
              C94 +
          (C58555 * C92067 * C92361 +
           ((C60762 + C60763) * C181 + (C60875 + C60874) * C92105) * C92067 *
               C92356 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C181 +
            (C58419 * C893 + C57967 * C1272 + C58420 * C8542 + C92195 * C9190) *
                C92105) *
               C92067 * C46527) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C181 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C92361 +
           ((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92067 *
               C92356 +
           (C81394 * C181 + C81486 * C92105) * C92067 * C46527) *
              C92084 * C1383 -
          (((C58420 * C16177 + C92195 * C16641 + C58419 * C8540 +
             C57967 * C9188) *
                C92105 +
            (C58420 * C16095 + C92195 * C16563 + C58419 * C8412 +
             C57967 * C9072) *
                C181) *
               C92067 * C46527 +
           ((C69025 + C69024) * C92105 + (C68888 + C68889) * C181) * C92067 *
               C92356 +
           ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
             C57967 * C1854) *
                C92105 +
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C181) *
               C92067 * C92361) *
              C92084 * C1384 +
          (((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
             C92195 * C11428) *
                C181 +
            (C58419 * C1472 + C57967 * C1855 + C58420 * C10930 +
             C92195 * C11508) *
                C92105) *
               C92067 * C92361 +
           ((C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
             C92195 * C25132) *
                C181 +
            (C58419 * C5805 + C57967 * C6279 + C58420 * C24638 +
             C92195 * C25210) *
                C92105) *
               C92067 * C92356 +
           ((C58419 * C16095 + C57967 * C16563 + C58420 * C24525 +
             C92195 * C25133) *
                C181 +
            (C58419 * C16177 + C57967 * C16641 + C58420 * C24639 +
             C92195 * C25211) *
                C92105) *
               C92067 * C46527) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C92361 +
           ((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92067 *
               C92356 +
           C81577 * C46527) *
              C798 -
          (((C81574 + C81575) * C92116 + (C81408 + C81409) * C244) * C92067 *
               C46527 +
           ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C92067 *
               C92356 +
           ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C92067 *
               C92361) *
              C799 +
          (C81577 * C92361 +
           ((C81409 + C81408) * C244 + (C81575 + C81574) * C92116) * C92067 *
               C92356 +
           ((C58419 * C15273 + C57967 * C15823 + C58420 * C22410 +
             C92195 * C22872) *
                C244 +
            (C58419 * C15493 + C57967 * C16004 + C58420 * C22581 +
             C92195 * C23018) *
                C92116) *
               C92067 * C46527) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C92361 +
           ((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92067 *
               C92356 +
           ((C64437 + C64436) * C244 + (C64669 + C64668) * C92116) * C92067 *
               C46527) *
              C92105 * C93 -
          (((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92067 *
               C46527 +
           C66759 * C92067 * C92356 +
           ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92067 *
               C92361) *
              C92105 * C94 +
          (C58651 * C92067 * C92361 +
           ((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92067 *
               C92356 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C244 +
            (C58419 * C959 + C57967 * C1331 + C58420 * C8655 + C92195 * C9294) *
                C92116) *
               C92067 * C46527) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C1534 +
           (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
               C1383 -
           (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 + C57967 * C1788) *
               C1535 -
           (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 + C57967 * C1909) *
               C1384 +
           (C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
            C92195 * C11428) *
               C1536 +
           (C58419 * C1541 + C57967 * C1910 + C58420 * C11028 +
            C92195 * C11585) *
               C1385) *
              C92067 * C92361 +
          ((C64426 + C64427) * C1534 + (C64664 + C64665) * C1383 -
           (C68888 + C68889) * C1535 - (C69160 + C69161) * C1384 +
           (C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
            C92195 * C25132) *
               C1536 +
           (C58419 * C5885 + C57967 * C6356 + C58420 * C24740 +
            C92195 * C25286) *
               C1385) *
              C92067 * C92356 +
          (C81394 * C1534 + C81568 * C1383 -
           (C58420 * C16095 + C92195 * C16563 + C58419 * C8412 +
            C57967 * C9072) *
               C1535 -
           (C58420 * C16255 + C92195 * C16717 + C58419 * C8653 +
            C57967 * C9292) *
               C1384 +
           (C58419 * C16095 + C57967 * C16563 + C58420 * C24525 +
            C92195 * C25133) *
               C1536 +
           (C58419 * C16255 + C57967 * C16717 + C58420 * C24741 +
            C92195 * C25287) *
               C1385) *
              C92067 * C46527) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C92361 +
                      (C21165 + C21166 - C21189 - C21190) * C92356 +
                      (C21171 + C21172 - C21191 - C21192) * C46527) *
                         C57967 +
                     ((C26329 + C26330 - C26337 - C26338) * C92361 +
                      (C25387 + C25388 - C25403 - C25404) * C92356 +
                      (C25393 + C25394 - C25405 - C25406) * C46527) *
                         C92195) *
                        C2709 +
                    (((C26337 - (C26330 + C26329) + C26338) * C92361 +
                      (C25403 - (C25388 + C25387) + C25404) * C92356 +
                      (C25405 - (C25394 + C25393) + C25406) * C46527) *
                         C57967 +
                     ((C36433 - (C36426 + C36425) + C36434) * C92361 +
                      (C35533 - (C35526 + C35525) + C35534) * C92356 +
                      ((C19671 * C16096 + C92067 * C16098) * C1988 -
                       (C24551 * C1983 + C24552 * C1987) +
                       (C19671 * C16100 + C92067 * C16102) * C1984) *
                          C46527) *
                         C92195) *
                        C2710) *
                   C92105) /
                  (p * q * std::sqrt(p + q));
    d2eexy[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C19671 * C107 + C92067 * C113) * C181 +
                        (C19671 * C182 + C92067 * C188) * C92105) *
                           C92361 +
                       (C20147 * C181 + C20225 * C92105) * C92356 +
                       (C20149 * C181 + C20226 * C92105) * C46527) *
                          C57967 +
                      ((C24643 + C24663) * C92361 + (C24646 + C24647) * C92356 +
                       (C24648 + C24649) * C46527) *
                          C92195) *
                         C1983 -
                     (((C26437 + C26438) * C46527 + (C26439 + C26440) * C92356 +
                       (C26445 + C26443) * C92361) *
                          C92195 +
                      ((C21268 * C92105 + C21185 * C181) * C46527 +
                       (C21267 * C92105 + C21183 * C181) * C92356 +
                       ((C19671 * C183 + C92067 * C189) * C92105 +
                        (C19671 * C108 + C92067 * C114) * C181) *
                           C92361) *
                          C57967) *
                         C1984) *
                        C2709 +
                    ((((C26443 + C26445) * C92361 + (C26440 + C26439) * C92356 +
                       (C26438 + C26437) * C46527) *
                          C57967 +
                      ((C36537 + C36539) * C92361 + (C36534 + C36533) * C92356 +
                       ((C19671 * C16096 + C92067 * C16098) * C181 +
                        (C19671 * C16178 + C92067 * C16180) * C92105) *
                           C46527) *
                          C92195) *
                         C1984 -
                     (((C24664 + C24652) * C46527 + (C24665 + C24655) * C92356 +
                       (C24666 + C24658) * C92361) *
                          C92195 +
                      ((C24649 + C24648) * C46527 + (C24647 + C24646) * C92356 +
                       (C24663 + C24643) * C92361) *
                          C57967) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2849 +
                       (C19671 * C245 + C92067 * C251) * C2709 -
                       C24549 * C2850 - C24753 * C2710) *
                          C92361 +
                      (C22584 + C22585 - C22586 - C22602) * C92356 +
                      (C22589 + C22590 - C22591 - C22603) * C46527) *
                         C57967 +
                     ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
                       C24754 * C2710) *
                          C92361 +
                      (C27444 + C27445 - C27446 - C27447) * C92356 +
                      (C27448 + C27449 - C27450 - C27451) * C46527) *
                         C92195) *
                        C92105 * C1983 +
                    (((C26335 * C2850 -
                       ((C19671 * C246 + C92067 * C252) * C2709 +
                        (C19671 * C108 + C92067 * C114) * C2849) +
                       C26546 * C2710) *
                          C92361 +
                      (C25399 * C2850 - (C21345 * C2709 + C21183 * C2849) +
                       C25615 * C2710) *
                          C92356 +
                      (C25401 * C2850 - (C21346 * C2709 + C21185 * C2849) +
                       C25616 * C2710) *
                          C46527) *
                         C57967 +
                     ((C36431 * C2850 - (C26546 * C2709 + C26335 * C2849) +
                       C36640 * C2710) *
                          C92361 +
                      (C35531 * C2850 - (C25615 * C2709 + C25399 * C2849) +
                       C35737 * C2710) *
                          C92356 +
                      ((C19671 * C16096 + C92067 * C16098) * C2850 -
                       (C25616 * C2709 + C25401 * C2849) +
                       (C19671 * C16256 + C92067 * C16258) * C2710) *
                          C46527) *
                         C92195) *
                        C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C1987 +
                      (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                       C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                          C1983 -
                      (C46780 + C46781 + C46782) * C1988 -
                      (C46783 + C46784 + C46785) * C1984) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C1987 +
                      (C81901 + C81902 + C81903) * C1983 -
                      (C49990 + C49989 + C49988) * C1988 -
                      (C49993 + C49992 + C49991) * C1984) *
                         C92195) *
                        C92067 * C2709 +
                    (((C49988 + C49989 + C49990) * C1988 -
                      ((C81903 + C81902 + C81901) * C1983 +
                       (C81900 + C81899 + C81898) * C1987) +
                      (C49991 + C49992 + C49993) * C1984) *
                         C57967 +
                     ((C46752 * C1391 + C92361 * C1608 + C46753 * C5720 +
                       C92356 * C5966 + C46754 * C16096 + C46527 * C16334) *
                          C1988 -
                      ((C81904 + C81905 + C81906) * C1983 +
                       (C81907 + C81908 + C81909) * C1987) +
                      (C46752 * C1407 + C92361 * C1616 + C46753 * C5726 +
                       C92356 * C5969 + C46754 * C16100 + C46527 * C16336) *
                          C1984) *
                         C92195) *
                        C92067 * C2710) *
                   C92105) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                        C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                           C181 +
                       (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                        C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                           C92105) *
                          C57967 +
                      ((C81898 + C81899 + C81900) * C181 +
                       (C81996 + C81997 + C81998) * C92105) *
                          C92195) *
                         C92067 * C1983 -
                     (((C50100 + C50099 + C50098) * C92105 +
                       (C49990 + C49989 + C49988) * C181) *
                          C92195 +
                      ((C46880 + C46879 + C46878) * C92105 +
                       (C46780 + C46781 + C46782) * C181) *
                          C57967) *
                         C92067 * C1984) *
                        C2709 +
                    ((((C49988 + C49989 + C49990) * C181 +
                       (C50098 + C50099 + C50100) * C92105) *
                          C57967 +
                      ((C46752 * C1391 + C92361 * C1608 + C46753 * C5720 +
                        C92356 * C5966 + C46754 * C16096 + C46527 * C16334) *
                           C181 +
                       (C46752 * C1473 + C92361 * C1674 + C46753 * C5806 +
                        C92356 * C6046 + C46754 * C16178 + C46527 * C16412) *
                           C92105) *
                          C92195) *
                         C92067 * C1984 -
                     (((C81999 + C82000 + C82001) * C92105 +
                       (C81907 + C81908 + C81909) * C181) *
                          C92195 +
                      ((C81998 + C81997 + C81996) * C92105 +
                       (C81900 + C81899 + C81898) * C181) *
                          C57967) *
                         C92067 * C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C2849 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C2709 -
                      (C81900 + C81899 + C81898) * C2850 -
                      (C82088 + C82089 + C82090) * C2710) *
                         C57967 +
                     ((C81898 + C81899 + C81900) * C2849 +
                      (C82090 + C82089 + C82088) * C2709 -
                      (C81907 + C81908 + C81909) * C2850 -
                      (C82093 + C82092 + C82091) * C2710) *
                         C92195) *
                        C92067 * C92105 * C1983 +
                    (((C49988 + C49989 + C49990) * C2850 -
                      ((C46972 + C46971 + C46970) * C2709 +
                       (C46780 + C46781 + C46782) * C2849) +
                      (C50207 + C50206 + C50205) * C2710) *
                         C57967 +
                     ((C46752 * C1391 + C92361 * C1608 + C46753 * C5720 +
                       C92356 * C5966 + C46754 * C16096 + C46527 * C16334) *
                          C2850 -
                      ((C50205 + C50206 + C50207) * C2709 +
                       (C49990 + C49989 + C49988) * C2849) +
                      (C46752 * C1542 + C92361 * C1730 + C46753 * C5886 +
                       C92356 * C6123 + C46754 * C16256 + C46527 * C16488) *
                          C2710) *
                         C92195) *
                        C92067 * C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C1987 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C1983 -
            (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
               C92067 * C92361 +
           ((C64426 + C64427) * C1987 + (C64428 + C64429) * C1983 -
            C66486 * C1988 - C66487 * C1984) *
               C92067 * C92356 +
           (C81394 * C1987 + C81395 * C1983 - (C64432 + C64433) * C1988 -
            (C64430 + C64431) * C1984) *
               C92067 * C46527) *
              C2709 +
          (((C61724 + C61725) * C1988 -
            ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
              C57967 * C1796) *
                 C1983 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C1987) +
            (C61726 + C61727) * C1984) *
               C92067 * C92361 +
           ((C67692 + C67693) * C1988 -
            ((C68886 + C68887) * C1983 + (C68888 + C68889) * C1987) +
            (C67694 + C67695) * C1984) *
               C92067 * C92356 +
           ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
             C92195 * C16564) *
                C1988 -
            ((C58420 * C16099 + C92195 * C16565 + C58419 * C8418 +
              C57967 * C9075) *
                 C1983 +
             (C58420 * C16095 + C92195 * C16563 + C58419 * C8412 +
              C57967 * C9072) *
                 C1987) +
            (C58419 * C8419 + C57967 * C9076 + C58420 * C16100 +
             C92195 * C16566) *
                C1984) *
               C92067 * C46527) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C92067 * C92361 +
            ((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92067 *
                C92356 +
            (C81394 * C181 + C81486 * C92105) * C92067 * C46527) *
               C1983 -
           (((C64553 + C64552) * C92105 + (C64432 + C64433) * C181) * C92067 *
                C46527 +
            (C66620 * C92105 + C66486 * C181) * C92067 * C92356 +
            ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92067 *
                C92361) *
               C1984) *
              C2709 +
          ((((C61724 + C61725) * C181 + (C61838 + C61839) * C92105) * C92067 *
                C92361 +
            ((C67692 + C67693) * C181 + (C67830 + C67831) * C92105) * C92067 *
                C92356 +
            ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
              C92195 * C16564) *
                 C181 +
             (C58419 * C8541 + C57967 * C9189 + C58420 * C16178 +
              C92195 * C16642) *
                 C92105) *
                C92067 * C46527) *
               C1984 -
           (((C58420 * C16177 + C92195 * C16641 + C58419 * C8540 +
              C57967 * C9188) *
                 C92105 +
             (C58420 * C16095 + C92195 * C16563 + C58419 * C8412 +
              C57967 * C9072) *
                 C181) *
                C92067 * C46527 +
            ((C69025 + C69024) * C92105 + (C68888 + C68889) * C181) * C92067 *
                C92356 +
            ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
              C57967 * C1854) *
                 C92105 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C181) *
                C92067 * C92361) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2849 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C2709 -
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C2850 -
            (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
             C57967 * C1909) *
                C2710) *
               C92067 * C92361 +
           ((C64426 + C64427) * C2849 + (C64664 + C64665) * C2709 -
            (C68888 + C68889) * C2850 - (C69160 + C69161) * C2710) *
               C92067 * C92356 +
           (C81394 * C2849 + C81568 * C2709 -
            (C58420 * C16095 + C92195 * C16563 + C58419 * C8412 +
             C57967 * C9072) *
                C2850 -
            (C58420 * C16255 + C92195 * C16717 + C58419 * C8653 +
             C57967 * C9292) *
                C2710) *
               C92067 * C46527) *
              C92105 * C1983 +
          (((C61724 + C61725) * C2850 -
            ((C58644 + C58643) * C2709 + (C58446 + C58447) * C2849) +
            (C61949 + C61948) * C2710) *
               C92067 * C92361 +
           ((C67692 + C67693) * C2850 - (C66754 * C2709 + C66486 * C2849) +
            (C67967 + C67966) * C2710) *
               C92067 * C92356 +
           ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
             C92195 * C16564) *
                C2850 -
            ((C64666 + C64667) * C2709 + (C64432 + C64433) * C2849) +
            (C58419 * C8654 + C57967 * C9293 + C58420 * C16256 +
             C92195 * C16718) *
                C2710) *
               C92067 * C46527) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C92361 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C92356 +
           (C20149 * C104 + C20150 * C93 - C21185 * C105 - C21186 * C94 +
            (C19671 * C808 + C92067 * C820) * C106 +
            (C19671 * C824 + C92067 * C832) * C95) *
               C46527) *
              C57967 +
          ((C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C92361 +
           (C22432 * C104 + C22431 * C93 - C25399 * C105 - C25400 * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C92356 +
           (C22430 * C104 + C22429 * C93 - C25401 * C105 - C25402 * C94 +
            (C19671 * C8414 + C92067 * C8417) * C106 +
            (C19671 * C8420 + C92067 * C8423) * C95) *
               C46527) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92361 +
            (C20155 + C20156) * C92356 + C20163 * C46527) *
               C57967 +
           ((C24557 + C24558) * C92361 + C27233 * C92356 + C23767 * C46527) *
               C92195) *
              C92116 * C798 -
          (((C22433 + C22434) * C46527 + C27234 * C92356 + C27235 * C92361) *
               C92195 +
           ((C20160 + C20159) * C46527 + (C20158 + C20157) * C92356 +
            (C20156 + C20155) * C92361) *
               C57967) *
              C92116 * C799 +
          ((C20163 * C92361 + C20164 * C92356 + (C20162 + C20161) * C46527) *
               C57967 +
           (C23767 * C92361 + (C22434 + C22433) * C92356 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C46527) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C92361 +
            (C20147 * C181 + C20225 * C92105) * C92356 +
            (C20149 * C181 + C20226 * C92105) * C46527) *
               C57967 +
           ((C24643 + C24663) * C92361 + (C24646 + C24647) * C92356 +
            (C24648 + C24649) * C46527) *
               C92195) *
              C93 -
          (((C26437 + C26438) * C46527 + (C26439 + C26440) * C92356 +
            (C26445 + C26443) * C92361) *
               C92195 +
           ((C21268 * C92105 + C21185 * C181) * C46527 +
            (C21267 * C92105 + C21183 * C181) * C92356 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C92361) *
               C57967) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C92361 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C92356 +
            ((C19671 * C808 + C92067 * C820) * C181 +
             (C19671 * C893 + C92067 * C901) * C92105) *
                C46527) *
               C57967 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C92361 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C92356 +
            ((C19671 * C8414 + C92067 * C8417) * C181 +
             (C19671 * C8542 + C92067 * C8545) * C92105) *
                C46527) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C92361 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C92356 +
           (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
            C20154 * C886 + C20228 * C800) *
               C46527) *
              C57967 +
          ((C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
            C22430 * C886 + C22514 * C800) *
               C92361 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C92356 +
           (C22430 * C884 + C22514 * C798 - C22428 * C885 - C22515 * C799 +
            (C19671 * C22410 + C92067 * C22411) * C886 +
            (C19671 * C22504 + C92067 * C22505) * C800) *
               C46527) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92361 +
            (C20281 + C20297) * C92356 + C20301 * C46527) *
               C57967 +
           ((C24549 * C244 + C24753 * C92116) * C92361 +
            (C23916 + C23917) * C92356 + C23922 * C46527) *
               C92195) *
              C92105 * C93 -
          (((C25618 + C25612) * C46527 + (C25617 + C25609) * C92356 +
            (C26546 * C92116 + C26335 * C244) * C92361) *
               C92195 +
           ((C21349 + C21339) * C46527 + (C21348 + C21336) * C92356 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C92361) *
               C57967) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C92361 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C92356 +
            ((C19671 * C808 + C92067 * C820) * C244 +
             (C19671 * C959 + C92067 * C967) * C92116) *
                C46527) *
               C57967 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C92361 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C92356 +
            ((C19671 * C8414 + C92067 * C8417) * C244 +
             (C19671 * C8655 + C92067 * C8658) * C92116) *
                C46527) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92361 +
            (C20281 + C20297) * C92356 + C20301 * C46527) *
               C57967 +
           ((C24549 * C244 + C24753 * C92116) * C92361 +
            (C23916 + C23917) * C92356 + C23922 * C46527) *
               C92195) *
              C798 -
          (((C23920 + C23921) * C46527 + (C23919 + C23918) * C92356 +
            (C23917 + C23916) * C92361) *
               C92195 +
           ((C20299 + C20287) * C46527 + (C20298 + C20284) * C92356 +
            (C20297 + C20281) * C92361) *
               C57967) *
              C799 +
          ((C20301 * C92361 + C20302 * C92356 + (C20292 + C20300) * C46527) *
               C57967 +
           (C23922 * C92361 + (C23921 + C23920) * C92356 +
            ((C19671 * C22410 + C92067 * C22411) * C244 +
             (C19671 * C22581 + C92067 * C22582) * C92116) *
                C46527) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C104 +
                     (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                      C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                         C93 -
                     (C46780 + C46781 + C46782) * C105 -
                     (C46783 + C46784 + C46785) * C94 +
                     (C46786 + C46787 + C46788) * C106 +
                     (C46789 + C46790 + C46791) * C95) *
                        C57967 +
                    ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                      C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                         C104 +
                     (C46752 * C1397 + C92361 * C1614 + C46753 * C3439 +
                      C92356 * C3665 + C46754 * C8418 + C46527 * C8769) *
                         C93 -
                     (C49990 + C49989 + C49988) * C105 -
                     (C49993 + C49992 + C49991) * C94 +
                     (C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                      C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                         C106 +
                     (C46752 * C1395 + C92361 * C1612 + C46753 * C3441 +
                      C92356 * C3667 + C46754 * C8420 + C46527 * C8771) *
                         C95) *
                        C92195) *
                   C92067 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C801 +
                      (C46752 * C117 + C92361 * C314 + C46753 * C813 +
                       C92356 * C1030 + C46754 * C822 + C46527 * C1031) *
                          C92084) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C801 +
                      (C46752 * C1397 + C92361 * C1614 + C46753 * C3439 +
                       C92356 * C3665 + C46754 * C8418 + C46527 * C8769) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C798 -
                    (((C46754 * C18736 + C46527 * C19092 + C46753 * C8418 +
                       C92356 * C8769 + C46752 * C3439 + C92361 * C3665) *
                          C92084 +
                      (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                       C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                          C801) *
                         C92195 +
                     ((C46754 * C4871 + C46527 * C5186 + C46753 * C822 +
                       C92356 * C1031 + C46752 * C813 + C92361 * C1030) *
                          C92084 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C801) *
                         C57967) *
                        C92067 * C92116 * C799 +
                    (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                       C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                          C801 +
                      (C46752 * C822 + C92361 * C1031 + C46753 * C4871 +
                       C92356 * C5186 + C46754 * C15277 + C46527 * C15595) *
                          C92084) *
                         C57967 +
                     ((C46752 * C8412 + C92361 * C8766 + C46753 * C18732 +
                       C92356 * C19090 + C46754 * C22410 + C46527 * C22670) *
                          C801 +
                      (C46752 * C8418 + C92361 * C8769 + C46753 * C18736 +
                       C92356 * C19092 + C46754 * C22412 + C46527 * C22671) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C181 +
                      (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                       C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                          C92105) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C181 +
                      (C46752 * C1471 + C92361 * C1672 + C46753 * C3513 +
                       C92356 * C3735 + C46754 * C8540 + C46527 * C8870) *
                          C92105) *
                         C92195) *
                        C92067 * C93 -
                    (((C50100 + C50099 + C50098) * C92105 +
                      (C49990 + C49989 + C49988) * C181) *
                         C92195 +
                     ((C46880 + C46879 + C46878) * C92105 +
                      (C46780 + C46781 + C46782) * C181) *
                         C57967) *
                        C92067 * C94 +
                    (((C46786 + C46787 + C46788) * C181 +
                      (C46883 + C46882 + C46881) * C92105) *
                         C57967 +
                     ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                       C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                          C181 +
                      (C46752 * C1469 + C92361 * C1670 + C46753 * C3515 +
                       C92356 * C3737 + C46754 * C8542 + C46527 * C8872) *
                          C92105) *
                         C92195) *
                        C92067 * C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                      C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                         C884 +
                     (C46752 * C182 + C92361 * C394 + C46753 * C890 +
                      C92356 * C1085 + C46754 * C891 + C46527 * C1086) *
                         C798 -
                     (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                      C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                         C885 -
                     (C46754 * C4987 + C46527 * C5263 + C46753 * C891 +
                      C92356 * C1086 + C46752 * C890 + C92361 * C1085) *
                         C799 +
                     (C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                      C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                         C886 +
                     (C46752 * C891 + C92361 * C1086 + C46753 * C4987 +
                      C92356 * C5263 + C46754 * C15396 + C46527 * C15671) *
                         C800) *
                        C57967 +
                    ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                      C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                         C884 +
                     (C46752 * C1471 + C92361 * C1672 + C46753 * C3513 +
                      C92356 * C3735 + C46754 * C8540 + C46527 * C8870) *
                         C798 -
                     (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                      C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                         C885 -
                     (C46754 * C18862 + C46527 * C19192 + C46753 * C8540 +
                      C92356 * C8870 + C46752 * C3513 + C92361 * C3735) *
                         C799 +
                     (C46752 * C8412 + C92361 * C8766 + C46753 * C18732 +
                      C92356 * C19090 + C46754 * C22410 + C46527 * C22670) *
                         C886 +
                     (C46752 * C8540 + C92361 * C8870 + C46753 * C18862 +
                      C92356 * C19192 + C46754 * C22504 + C46527 * C22738) *
                         C800) *
                        C92195) *
                   C92067 * C92084 * C92116) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C244 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C92116) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C244 +
                      (C46752 * C1540 + C92361 * C1727 + C46753 * C3587 +
                       C92356 * C3805 + C46754 * C8653 + C46527 * C8971) *
                          C92116) *
                         C92195) *
                        C92067 * C92105 * C93 -
                    (((C50205 + C50206 + C50207) * C92116 +
                      (C49990 + C49989 + C49988) * C244) *
                         C92195 +
                     ((C46972 + C46971 + C46970) * C92116 +
                      (C46780 + C46781 + C46782) * C244) *
                         C57967) *
                        C92067 * C92105 * C94 +
                    (((C46786 + C46787 + C46788) * C244 +
                      (C46975 + C46974 + C46973) * C92116) *
                         C57967 +
                     ((C46752 * C1387 + C92361 * C1604 + C46753 * C3433 +
                       C92356 * C3663 + C46754 * C8414 + C46527 * C8768) *
                          C244 +
                      (C46752 * C1538 + C92361 * C1731 + C46753 * C3589 +
                       C92356 * C3807 + C46754 * C8655 + C46527 * C8973) *
                          C92116) *
                         C92195) *
                        C92067 * C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C46752 * C107 + C92361 * C308 + C46753 * C805 +
                       C92356 * C1022 + C46754 * C806 + C46527 * C1023) *
                          C244 +
                      (C46752 * C245 + C92361 * C474 + C46753 * C956 +
                       C92356 * C1146 + C46754 * C957 + C46527 * C1147) *
                          C92116) *
                         C57967 +
                     ((C46752 * C1389 + C92361 * C1606 + C46753 * C3431 +
                       C92356 * C3661 + C46754 * C8412 + C46527 * C8766) *
                          C244 +
                      (C46752 * C1540 + C92361 * C1727 + C46753 * C3587 +
                       C92356 * C3805 + C46754 * C8653 + C46527 * C8971) *
                          C92116) *
                         C92195) *
                        C92067 * C798 -
                    (((C46754 * C18976 + C46527 * C19292 + C46753 * C8653 +
                       C92356 * C8971 + C46752 * C3587 + C92361 * C3805) *
                          C92116 +
                      (C46754 * C18732 + C46527 * C19090 + C46753 * C8412 +
                       C92356 * C8766 + C46752 * C3431 + C92361 * C3661) *
                          C244) *
                         C92195 +
                     ((C46754 * C5085 + C46527 * C5340 + C46753 * C957 +
                       C92356 * C1147 + C46752 * C956 + C92361 * C1146) *
                          C92116 +
                      (C46754 * C4865 + C46527 * C5183 + C46753 * C806 +
                       C92356 * C1023 + C46752 * C805 + C92361 * C1022) *
                          C244) *
                         C57967) *
                        C92067 * C799 +
                    (((C46752 * C806 + C92361 * C1023 + C46753 * C4865 +
                       C92356 * C5183 + C46754 * C15273 + C46527 * C15593) *
                          C244 +
                      (C46752 * C957 + C92361 * C1147 + C46753 * C5085 +
                       C92356 * C5340 + C46754 * C15493 + C46527 * C15747) *
                          C92116) *
                         C57967 +
                     ((C46752 * C8412 + C92361 * C8766 + C46753 * C18732 +
                       C92356 * C19090 + C46754 * C22410 + C46527 * C22670) *
                          C244 +
                      (C46752 * C8653 + C92361 * C8971 + C46753 * C18976 +
                       C92356 * C19292 + C46754 * C22581 + C46527 * C22805) *
                          C92116) *
                         C92195) *
                        C92067 * C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eezx[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C104 +
           (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
               C93 -
           (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
           C58459 * C95) *
              C92067 * C92361 +
          ((C64426 + C64427) * C104 + (C64428 + C64429) * C93 - C66486 * C105 -
           C66487 * C94 + (C60762 + C60763) * C106 + (C60764 + C60765) * C95) *
              C92067 * C92356 +
          ((C64437 + C64436) * C104 + (C64435 + C64434) * C93 -
           (C64432 + C64433) * C105 - (C64430 + C64431) * C94 +
           (C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
               C106 +
           (C58419 * C824 + C57967 * C1215 + C58420 * C8420 + C92195 * C9077) *
               C95) *
              C92067 * C46527) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C801 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C92361 +
           ((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C92067 *
               C92356 +
           C81411 * C46527) *
              C92116 * C798 -
          (((C81406 + C81407) * C92084 + (C81408 + C81409) * C801) * C92067 *
               C46527 +
           ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C92067 *
               C92356 +
           ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C92067 *
               C92361) *
              C92116 * C799 +
          (C81411 * C92361 +
           ((C81409 + C81408) * C801 + (C81407 + C81406) * C92084) * C92067 *
               C92356 +
           ((C58419 * C15273 + C57967 * C15823 + C58420 * C22410 +
             C92195 * C22872) *
                C801 +
            (C58419 * C15277 + C57967 * C15825 + C58420 * C22412 +
             C92195 * C22873) *
                C92084) *
               C92067 * C46527) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C181 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C92361 +
           ((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C92067 *
               C92356 +
           ((C64437 + C64436) * C181 + (C64550 + C64551) * C92105) * C92067 *
               C46527) *
              C93 -
          (((C64553 + C64552) * C92105 + (C64432 + C64433) * C181) * C92067 *
               C46527 +
           (C66620 * C92105 + C66486 * C181) * C92067 * C92356 +
           ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92067 *
               C92361) *
              C94 +
          (C58555 * C92067 * C92361 +
           ((C60762 + C60763) * C181 + (C60875 + C60874) * C92105) * C92067 *
               C92356 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C181 +
            (C58419 * C893 + C57967 * C1272 + C58420 * C8542 + C92195 * C9190) *
                C92105) *
               C92067 * C46527) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C884 +
           (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
               C798 -
           (C64427 + C64426) * C885 - (C64548 + C64549) * C799 + C81394 * C886 +
           C81486 * C800) *
              C92067 * C92361 +
          ((C64426 + C64427) * C884 + (C64549 + C64548) * C798 -
           (C64436 + C64437) * C885 - (C64551 + C64550) * C799 +
           (C81409 + C81408) * C886 + (C81491 + C81492) * C800) *
              C92067 * C92356 +
          (C81394 * C884 + C81486 * C798 - (C81408 + C81409) * C885 -
           (C81492 + C81491) * C799 +
           (C58419 * C15273 + C57967 * C15823 + C58420 * C22410 +
            C92195 * C22872) *
               C886 +
           (C58419 * C15396 + C57967 * C15922 + C58420 * C22504 +
            C92195 * C22948) *
               C800) *
              C92067 * C46527) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C92361 +
           ((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92067 *
               C92356 +
           ((C64437 + C64436) * C244 + (C64669 + C64668) * C92116) * C92067 *
               C46527) *
              C92105 * C93 -
          (((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92067 *
               C46527 +
           C66759 * C92067 * C92356 +
           ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92067 *
               C92361) *
              C92105 * C94 +
          (C58651 * C92067 * C92361 +
           ((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92067 *
               C92356 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C244 +
            (C58419 * C959 + C57967 * C1331 + C58420 * C8655 + C92195 * C9294) *
                C92116) *
               C92067 * C46527) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C92361 +
           ((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C92067 *
               C92356 +
           C81577 * C46527) *
              C798 -
          (((C81574 + C81575) * C92116 + (C81408 + C81409) * C244) * C92067 *
               C46527 +
           ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C92067 *
               C92356 +
           ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C92067 *
               C92361) *
              C799 +
          (C81577 * C92361 +
           ((C81409 + C81408) * C244 + (C81575 + C81574) * C92116) * C92067 *
               C92356 +
           ((C58419 * C15273 + C57967 * C15823 + C58420 * C22410 +
             C92195 * C22872) *
                C244 +
            (C58419 * C15493 + C57967 * C16004 + C58420 * C22581 +
             C92195 * C23018) *
                C92116) *
               C92067 * C46527) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C41548 +
                      (C21165 + C21166 - C21189 - C21190) * C92171) *
                         C92362 +
                     ((C26329 + C26330 - C26337 - C26338) * C41548 +
                      (C25387 + C25388 - C25403 - C25404) * C92171) *
                         C92359 +
                     ((C36425 + C36426 - C36433 - C36434) * C41548 +
                      (C35525 + C35526 - C35533 - C35534) * C92171) *
                         C69237) *
                        C92116 * C1985 +
                    (((C21189 - (C21166 + C21165) + C21190) * C41548 +
                      (C21191 - (C21172 + C21171) + C21192) * C92171) *
                         C92362 +
                     ((C25403 - (C25388 + C25387) + C25404) * C41548 +
                      (C25405 - (C25394 + C25393) + C25406) * C92171) *
                         C92359 +
                     ((C35533 - (C35526 + C35525) + C35534) * C41548 +
                      ((C19671 * C16096 + C92067 * C16098) * C1988 -
                       (C24551 * C1983 + C24552 * C1987) +
                       (C19671 * C16100 + C92067 * C16102) * C1984) *
                          C92171) *
                         C69237) *
                        C92116 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2059 +
                       (C19671 * C182 + C92067 * C188) * C1985 -
                       C20147 * C2060 - C20225 * C1986) *
                          C41548 +
                      (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
                       C20226 * C1986) *
                          C92171) *
                         C92362 +
                     ((C27334 + C27335 - C27336 - C27337) * C41548 +
                      (C27338 + C27339 - C27340 - C27341) * C92171) *
                         C92359 +
                     ((C37450 + C37451 - C37452 - C37453) * C41548 +
                      (C37454 + C37455 - C37456 - C37457) * C92171) *
                         C69237) *
                        C1983 +
                    (((C21183 * C2060 -
                       ((C19671 * C183 + C92067 * C189) * C1985 +
                        (C19671 * C108 + C92067 * C114) * C2059) +
                       C21267 * C1986) *
                          C41548 +
                      (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
                       C21268 * C1986) *
                          C92171) *
                         C92362 +
                     ((C25399 * C2060 - (C26444 * C1985 + C26335 * C2059) +
                       C25509 * C1986) *
                          C41548 +
                      (C25401 * C2060 - (C25509 * C1985 + C25399 * C2059) +
                       C25510 * C1986) *
                          C92171) *
                         C92359 +
                     ((C35531 * C2060 - (C36538 * C1985 + C36431 * C2059) +
                       C35635 * C1986) *
                          C41548 +
                      ((C19671 * C16096 + C92067 * C16098) * C2060 -
                       (C35635 * C1985 + C35531 * C2059) +
                       (C19671 * C16178 + C92067 * C16180) * C1986) *
                          C92171) *
                         C69237) *
                        C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eexz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C244 +
              (C19671 * C245 + C92067 * C251) * C92116) *
                 C41548 +
             (C20281 + C20297) * C92171) *
                C92362 +
            ((C24549 * C244 + C24753 * C92116) * C41548 +
             (C23916 + C23917) * C92171) *
                C92359 +
            ((C24556 * C244 + C24754 * C92116) * C41548 +
             (C34101 + C34102) * C92171) *
                C69237) *
               C1985 -
           (((C34103 + C34104) * C92171 + (C34102 + C34101) * C41548) * C69237 +
            ((C23919 + C23918) * C92171 + (C23917 + C23916) * C41548) * C92359 +
            ((C20298 + C20284) * C92171 + (C20297 + C20281) * C41548) *
                C92362) *
               C1986) *
              C1983 +
          ((((C21336 + C21348) * C41548 + (C21339 + C21349) * C92171) * C92362 +
            ((C25609 + C25617) * C41548 + (C25612 + C25618) * C92171) * C92359 +
            ((C35734 + C35738) * C41548 +
             ((C19671 * C16096 + C92067 * C16098) * C244 +
              (C19671 * C16256 + C92067 * C16258) * C92116) *
                 C92171) *
                C69237) *
               C1986 -
           (((C35738 + C35734) * C92171 +
             (C36640 * C92116 + C36431 * C244) * C41548) *
                C69237 +
            ((C25617 + C25609) * C92171 +
             (C26546 * C92116 + C26335 * C244) * C41548) *
                C92359 +
            ((C21348 + C21336) * C92171 +
             ((C19671 * C246 + C92067 * C252) * C92116 +
              (C19671 * C108 + C92067 * C114) * C244) *
                 C41548) *
                C92362) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C1987 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C1983 -
            (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
               C92362 +
           ((C53684 + C53685) * C1987 + (C53686 + C53687) * C1983 -
            C55998 * C1988 - C55999 * C1984) *
               C92359 +
           (C86728 * C1987 + C86729 * C1983 - (C53690 + C53691) * C1988 -
            (C53688 + C53689) * C1984) *
               C69237) *
              C92067 * C92116 * C1985 +
          (((C44080 + C44081) * C1988 -
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C1983 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C1987) +
            (C44082 + C44083) * C1984) *
               C92362 +
           ((C54774 + C54775) * C1988 -
            ((C57231 + C57230) * C1983 + (C57229 + C57228) * C1987) +
            (C54776 + C54777) * C1984) *
               C92359 +
           ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
             C92171 * C16334) *
                C1988 -
            ((C41776 * C16099 + C92171 * C16335 + C41775 * C5725 +
              C41548 * C5968) *
                 C1983 +
             (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
              C41548 * C5965) *
                 C1987) +
            (C41775 * C5726 + C41548 * C5969 + C41776 * C16100 +
             C92171 * C16336) *
                C1984) *
               C69237) *
              C92067 * C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2059 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C1985 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C2060 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C1986) *
               C92362 +
           ((C53684 + C53685) * C2059 + (C53806 + C53807) * C1985 -
            (C57229 + C57228) * C2060 - (C57366 + C57367) * C1986) *
               C92359 +
           (C86728 * C2059 + C86820 * C1985 -
            (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
             C41548 * C5965) *
                C2060 -
            (C41776 * C16177 + C92171 * C16411 + C41775 * C5805 +
             C41548 * C6045) *
                C1986) *
               C69237) *
              C92067 * C1983 +
          (((C44080 + C44081) * C2060 -
            ((C41904 + C41903) * C1985 + (C41802 + C41803) * C2059) +
            (C44195 + C44194) * C1986) *
               C92362 +
           ((C54774 + C54775) * C2060 - (C56134 * C1985 + C55998 * C2059) +
            (C54913 + C54912) * C1986) *
               C92359 +
           ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
             C92171 * C16334) *
                C2060 -
            ((C53808 + C53809) * C1985 + (C53690 + C53691) * C2059) +
            (C41775 * C5806 + C41548 * C6046 + C41776 * C16178 +
             C92171 * C16412) *
                C1986) *
               C69237) *
              C92067 * C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C244 +
             (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                 C92116) *
                C92362 +
            ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92359 +
            (C86728 * C244 + C86903 * C92116) * C69237) *
               C92067 * C1985 -
           (((C41776 * C16255 + C92171 * C16487 + C41775 * C5885 +
              C41548 * C6122) *
                 C92116 +
             (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
              C41548 * C5965) *
                 C244) *
                C69237 +
            ((C57503 + C57502) * C92116 + (C57229 + C57228) * C244) * C92359 +
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C92116 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C244) *
                C92362) *
               C92067 * C1986) *
              C1983 +
          ((((C44080 + C44081) * C244 + (C44307 + C44306) * C92116) * C92362 +
            ((C54774 + C54775) * C244 + (C55049 + C55048) * C92116) * C92359 +
            ((C41775 * C5720 + C41548 * C5966 + C41776 * C16096 +
              C92171 * C16334) *
                 C244 +
             (C41775 * C5886 + C41548 * C6123 + C41776 * C16256 +
              C92171 * C16488) *
                 C92116) *
                C69237) *
               C92067 * C1986 -
           (((C53927 + C53926) * C92116 + (C53690 + C53691) * C244) * C69237 +
            (C56270 * C92116 + C55998 * C244) * C92359 +
            ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92362) *
               C92067 * C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C1987 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C1983 -
                      (C69710 + C69711 + C69712) * C1988 -
                      (C69713 + C69714 + C69715) * C1984) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C1987 +
                      (C86233 + C86234 + C86235) * C1983 -
                      (C71974 + C71973 + C71972) * C1988 -
                      (C71977 + C71976 + C71975) * C1984) *
                         C92067 * C92171) *
                        C92116 * C1985 +
                    (((C71972 + C71973 + C71974) * C1988 -
                      ((C86235 + C86234 + C86233) * C1983 +
                       (C86232 + C86231 + C86230) * C1987) +
                      (C71975 + C71976 + C71977) * C1984) *
                         C92067 * C41548 +
                     ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                       C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                          C1988 -
                      ((C86236 + C86237 + C86238) * C1983 +
                       (C86239 + C86240 + C86241) * C1987) +
                      (C69682 * C823 + C92362 * C1214 + C69683 * C8419 +
                       C92359 * C9076 + C69684 * C16100 + C69237 * C16566) *
                          C1984) *
                         C92067 * C92171) *
                        C92116 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2059 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C1985 -
                      (C86232 + C86231 + C86230) * C2060 -
                      (C86328 + C86329 + C86330) * C1986) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C2059 +
                      (C86330 + C86329 + C86328) * C1985 -
                      (C86239 + C86240 + C86241) * C2060 -
                      (C86333 + C86332 + C86331) * C1986) *
                         C92067 * C92171) *
                        C1983 +
                    (((C71972 + C71973 + C71974) * C2060 -
                      ((C69810 + C69809 + C69808) * C1985 +
                       (C69710 + C69711 + C69712) * C2059) +
                      (C72084 + C72083 + C72082) * C1986) *
                         C92067 * C41548 +
                     ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                       C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                          C2060 -
                      ((C72082 + C72083 + C72084) * C1985 +
                       (C71974 + C71973 + C71972) * C2059) +
                      (C69682 * C892 + C92362 * C1270 + C69683 * C8541 +
                       C92359 * C9189 + C69684 * C16178 + C69237 * C16642) *
                          C1986) *
                         C92067 * C92171) *
                        C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eezz[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                        C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                           C244 +
                       (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                        C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                           C92116) *
                          C92067 * C41548 +
                      ((C86230 + C86231 + C86232) * C244 +
                       (C86420 + C86421 + C86422) * C92116) *
                          C92067 * C92171) *
                         C1985 -
                     (((C86423 + C86424 + C86425) * C92116 +
                       (C86239 + C86240 + C86241) * C244) *
                          C92067 * C92171 +
                      ((C86422 + C86421 + C86420) * C92116 +
                       (C86232 + C86231 + C86230) * C244) *
                          C92067 * C41548) *
                         C1986) *
                        C1983 +
                    ((((C71972 + C71973 + C71974) * C244 +
                       (C72191 + C72190 + C72189) * C92116) *
                          C92067 * C41548 +
                      ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                        C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                           C244 +
                       (C69682 * C958 + C92362 * C1330 + C69683 * C8654 +
                        C92359 * C9293 + C69684 * C16256 + C69237 * C16718) *
                           C92116) *
                          C92067 * C92171) *
                         C1986 -
                     (((C72189 + C72190 + C72191) * C92116 +
                       (C71974 + C71973 + C71972) * C244) *
                          C92067 * C92171 +
                      ((C69902 + C69901 + C69900) * C92116 +
                       (C69710 + C69711 + C69712) * C244) *
                          C92067 * C41548) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C801 +
              (C19671 * C117 + C92067 * C125) * C92084) *
                 C41548 +
             (C20155 + C20156) * C92171) *
                C92362 +
            ((C24557 + C24558) * C41548 + C27233 * C92171) * C92359 +
            C86502 * C69237) *
               C2709 -
           (((C34716 + C34717) * C92171 + (C34718 + C34719) * C41548) * C69237 +
            (C37351 * C92171 + (C24563 + C24564) * C41548) * C92359 +
            (C27235 * C92171 + (C24558 + C24557) * C41548) * C92362) *
               C2710) *
              C1985 +
          (((C27233 * C41548 + C23767 * C92171) * C92362 +
            (C34700 * C41548 + (C24560 + C24559) * C92171) * C92359 +
            ((C34717 + C34716) * C41548 +
             ((C19671 * C24525 + C92067 * C24528) * C801 +
              (C19671 * C24529 + C92067 * C24531) * C92084) *
                 C92171) *
                C69237) *
               C2710 -
           (((C24559 + C24560) * C92171 + C37351 * C41548) * C69237 +
            (C27234 * C92171 + C27235 * C41548) * C92359 +
            ((C20158 + C20157) * C92171 + (C20156 + C20155) * C41548) *
                C92362) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2059 +
                       (C19671 * C182 + C92067 * C188) * C1985 -
                       C20147 * C2060 - C20225 * C1986) *
                          C41548 +
                      (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
                       C20226 * C1986) *
                          C92171) *
                         C92362 +
                     ((C27334 + C27335 - C27336 - C27337) * C41548 +
                      (C27338 + C27339 - C27340 - C27341) * C92171) *
                         C92359 +
                     ((C37450 + C37451 - C37452 - C37453) * C41548 +
                      (C37454 + C37455 - C37456 - C37457) * C92171) *
                         C69237) *
                        C92084 * C2709 +
                    (((C27336 - (C27335 + C27334) + C27337) * C41548 +
                      (C27340 - (C27339 + C27338) + C27341) * C92171) *
                         C92362 +
                     ((C37452 - (C37451 + C37450) + C37453) * C41548 +
                      (C37456 - (C37455 + C37454) + C37457) * C92171) *
                         C92359 +
                     ((C40990 - (C40989 + C40988) + C40991) * C41548 +
                      ((C19671 * C24525 + C92067 * C24528) * C2060 -
                       (C34806 * C1985 + C34712 * C2059) +
                       (C19671 * C24639 + C92067 * C24641) * C1986) *
                          C92171) *
                         C69237) *
                        C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2849 +
                       (C19671 * C245 + C92067 * C251) * C2709 -
                       C24549 * C2850 - C24753 * C2710) *
                          C41548 +
                      (C22584 + C22585 - C22586 - C22602) * C92171) *
                         C92362 +
                     ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
                       C24754 * C2710) *
                          C41548 +
                      (C27444 + C27445 - C27446 - C27447) * C92171) *
                         C92359 +
                     ((C24556 * C2849 + C24754 * C2709 - C34714 * C2850 -
                       C34891 * C2710) *
                          C41548 +
                      (C37556 + C37557 - C37558 - C37559) * C92171) *
                         C69237) *
                        C1985 +
                    (((C22586 - (C22585 + C22584) + C22602) * C41548 +
                      (C22591 - (C22590 + C22589) + C22603) * C92171) *
                         C92362 +
                     ((C27446 - (C27445 + C27444) + C27447) * C41548 +
                      (C27450 - (C27449 + C27448) + C27451) * C92171) *
                         C92359 +
                     ((C37558 - (C37557 + C37556) + C37559) * C41548 +
                      ((C19671 * C24525 + C92067 * C24528) * C2850 -
                       (C24756 * C2709 + C24552 * C2849) +
                       (C19671 * C24741 + C92067 * C24743) * C2710) *
                          C92171) *
                         C69237) *
                        C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C801 +
             (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                 C92084) *
                C92362 +
            ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92359 +
            C86744 * C69237) *
               C92067 * C2709 -
           (((C86740 + C86741) * C92084 + (C86742 + C86743) * C801) * C69237 +
            ((C53692 + C53693) * C92084 + (C53694 + C53695) * C801) * C92359 +
            ((C53687 + C53686) * C92084 + (C53685 + C53684) * C801) * C92362) *
               C92067 * C2710) *
              C1985 +
          ((((C57228 + C57229) * C801 + (C57230 + C57231) * C92084) * C92362 +
            ((C89296 + C89297) * C801 + (C89298 + C89299) * C92084) * C92359 +
            ((C41775 * C24524 + C41548 * C24830 + C41776 * C24525 +
              C92171 * C24831) *
                 C801 +
             (C41775 * C24527 + C41548 * C24832 + C41776 * C24529 +
              C92171 * C24833) *
                 C92084) *
                C69237) *
               C92067 * C2710 -
           (((C89299 + C89298) * C92084 + (C89297 + C89296) * C801) * C69237 +
            ((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92359 +
            ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                 C92084 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C801) *
                C92362) *
               C92067 * C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2059 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C1985 -
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C2060 -
            (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
                C1986) *
               C92362 +
           ((C53684 + C53685) * C2059 + (C53806 + C53807) * C1985 -
            (C57229 + C57228) * C2060 - (C57366 + C57367) * C1986) *
               C92359 +
           (C86728 * C2059 + C86820 * C1985 - (C89297 + C89296) * C2060 -
            (C89402 + C89403) * C1986) *
               C69237) *
              C92067 * C92084 * C2709 +
          (((C57228 + C57229) * C2060 -
            ((C53807 + C53806) * C1985 + (C53685 + C53684) * C2059) +
            (C57367 + C57366) * C1986) *
               C92362 +
           ((C89296 + C89297) * C2060 -
            ((C53810 + C53811) * C1985 + (C53694 + C53695) * C2059) +
            (C89403 + C89402) * C1986) *
               C92359 +
           ((C41775 * C24524 + C41548 * C24830 + C41776 * C24525 +
             C92171 * C24831) *
                C2060 -
            ((C86826 + C86827) * C1985 + (C86742 + C86743) * C2059) +
            (C41775 * C24638 + C41548 * C24944 + C41776 * C24639 +
             C92171 * C24945) *
                C1986) *
               C69237) *
              C92067 * C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2849 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C2709 -
            (C53685 + C53684) * C2850 - (C53922 + C53923) * C2710) *
               C92362 +
           ((C53684 + C53685) * C2849 + (C53923 + C53922) * C2709 -
            (C53694 + C53695) * C2850 - (C53925 + C53924) * C2710) *
               C92359 +
           (C86728 * C2849 + C86903 * C2709 - (C86742 + C86743) * C2850 -
            (C86909 + C86908) * C2710) *
               C69237) *
              C92067 * C1985 +
          (((C57228 + C57229) * C2850 -
            ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                 C2709 +
             (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                 C2849) +
            (C57502 + C57503) * C2710) *
               C92362 +
           ((C89296 + C89297) * C2850 -
            ((C57503 + C57502) * C2709 + (C57229 + C57228) * C2849) +
            (C89506 + C89507) * C2710) *
               C92359 +
           ((C41775 * C24524 + C41548 * C24830 + C41776 * C24525 +
             C92171 * C24831) *
                C2850 -
            ((C89507 + C89506) * C2709 + (C89297 + C89296) * C2849) +
            (C41775 * C24740 + C41548 * C25038 + C41776 * C24741 +
             C92171 * C25039) *
                C2710) *
               C69237) *
              C92067 * C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                        C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                           C801 +
                       (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                        C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                           C92084) *
                          C92067 * C41548 +
                      ((C86230 + C86231 + C86232) * C801 +
                       (C86233 + C86234 + C86235) * C92084) *
                          C92067 * C92171) *
                         C2709 -
                     (((C89618 + C89619 + C89620) * C92084 +
                       (C89621 + C89622 + C89623) * C801) *
                          C92067 * C92171 +
                      ((C69684 * C10814 + C69237 * C11431 + C69683 * C1406 +
                        C92359 * C1797 + C69682 * C1397 + C92362 * C1796) *
                           C92084 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C801) *
                          C92067 * C41548) *
                         C2710) *
                        C1985 +
                    ((((C89623 + C89622 + C89621) * C801 +
                       (C89620 + C89619 + C89618) * C92084) *
                          C92067 * C41548 +
                      ((C69682 * C8412 + C92362 * C9072 + C69683 * C16095 +
                        C92359 * C16563 + C69684 * C24525 + C69237 * C25133) *
                           C801 +
                       (C69682 * C8418 + C92362 * C9075 + C69683 * C16099 +
                        C92359 * C16565 + C69684 * C24529 + C69237 * C25135) *
                           C92084) *
                          C92067 * C92171) *
                         C2710 -
                     (((C86236 + C86237 + C86238) * C92084 +
                       (C86239 + C86240 + C86241) * C801) *
                          C92067 * C92171 +
                      ((C86235 + C86234 + C86233) * C92084 +
                       (C86232 + C86231 + C86230) * C801) *
                          C92067 * C41548) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2059 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C1985 -
                      (C86232 + C86231 + C86230) * C2060 -
                      (C86328 + C86329 + C86330) * C1986) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C2059 +
                      (C86330 + C86329 + C86328) * C1985 -
                      (C86239 + C86240 + C86241) * C2060 -
                      (C86333 + C86332 + C86331) * C1986) *
                         C92067 * C92171) *
                        C92084 * C2709 +
                    (((C89623 + C89622 + C89621) * C2060 -
                      ((C69684 * C10930 + C69237 * C11508 + C69683 * C1472 +
                        C92359 * C1855 + C69682 * C1471 + C92362 * C1854) *
                           C1985 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C2059) +
                      (C89728 + C89729 + C89730) * C1986) *
                         C92067 * C41548 +
                     ((C69682 * C8412 + C92362 * C9072 + C69683 * C16095 +
                       C92359 * C16563 + C69684 * C24525 + C69237 * C25133) *
                          C2060 -
                      ((C89730 + C89729 + C89728) * C1985 +
                       (C89621 + C89622 + C89623) * C2059) +
                      (C69682 * C8540 + C92362 * C9188 + C69683 * C16177 +
                       C92359 * C16641 + C69684 * C24639 + C69237 * C25211) *
                          C1986) *
                         C92067 * C92171) *
                        C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2849 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C2709 -
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C2850 -
                      (C69684 * C11028 + C69237 * C11585 + C69683 * C1541 +
                       C92359 * C1910 + C69682 * C1540 + C92362 * C1909) *
                          C2710) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C2849 +
                      (C86420 + C86421 + C86422) * C2709 -
                      (C89621 + C89622 + C89623) * C2850 -
                      (C89835 + C89836 + C89837) * C2710) *
                         C92067 * C92171) *
                        C1985 +
                    (((C89623 + C89622 + C89621) * C2850 -
                      ((C86422 + C86421 + C86420) * C2709 +
                       (C86232 + C86231 + C86230) * C2849) +
                      (C89837 + C89836 + C89835) * C2710) *
                         C92067 * C41548 +
                     ((C69682 * C8412 + C92362 * C9072 + C69683 * C16095 +
                       C92359 * C16563 + C69684 * C24525 + C69237 * C25133) *
                          C2850 -
                      ((C86423 + C86424 + C86425) * C2709 +
                       (C86239 + C86240 + C86241) * C2849) +
                      (C69682 * C8653 + C92362 * C9292 + C69683 * C16255 +
                       C92359 * C16717 + C69684 * C24741 + C69237 * C25287) *
                          C2710) *
                         C92067 * C92171) *
                        C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C41548 +
            (C20155 + C20156) * C92171) *
               C92362 +
           ((C24557 + C24558) * C41548 + C27233 * C92171) * C92359 +
           (C34699 * C41548 + C34700 * C92171) * C69237) *
              C92116 * C798 -
          (((C24559 + C24560) * C92171 + C37351 * C41548) * C69237 +
           (C27234 * C92171 + C27235 * C41548) * C92359 +
           ((C20158 + C20157) * C92171 + (C20156 + C20155) * C41548) * C92362) *
              C92116 * C799 +
          ((C20163 * C41548 + C20164 * C92171) * C92362 +
           (C23767 * C41548 + (C22434 + C22433) * C92171) * C92359 +
           ((C24560 + C24559) * C41548 +
            ((C19671 * C20682 + C92067 * C20683) * C801 +
             (C19671 * C20684 + C92067 * C20685) * C92084) *
                C92171) *
               C69237) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C41548 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C92171) *
              C92362 +
          ((C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C41548 +
           (C22432 * C104 + C22431 * C93 - C25399 * C105 - C25400 * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C92171) *
              C92359 +
          ((C24556 * C104 + C24555 * C93 - C36431 * C105 - C36432 * C94 +
            (C19671 * C1392 + C92067 * C1404) * C106 +
            (C19671 * C1408 + C92067 * C1416) * C95) *
               C41548 +
           (C24554 * C104 + C24553 * C93 - C35531 * C105 - C35532 * C94 +
            (C19671 * C5721 + C92067 * C5724) * C106 +
            (C19671 * C5727 + C92067 * C5730) * C95) *
               C92171) *
              C69237) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C41548 +
            (C20155 + C20156) * C92171) *
               C92362 +
           ((C24557 + C24558) * C41548 + C27233 * C92171) * C92359 +
           C86502 * C69237) *
              C1383 -
          (((C34716 + C34717) * C92171 + (C34718 + C34719) * C41548) * C69237 +
           (C37351 * C92171 + (C24563 + C24564) * C41548) * C92359 +
           (C27235 * C92171 + (C24558 + C24557) * C41548) * C92362) *
              C1384 +
          (C86502 * C92362 +
           (C39195 * C41548 + (C34717 + C34716) * C92171) * C92359 +
           ((C39204 + C39203) * C41548 +
            ((C19671 * C34694 + C92067 * C34695) * C801 +
             (C19671 * C34696 + C92067 * C34697) * C92084) *
                C92171) *
               C69237) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C41548 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C92171) *
              C92362 +
          ((C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
            C22430 * C886 + C22514 * C800) *
               C41548 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C92171) *
              C92359 +
          ((C24556 * C884 + C24662 * C798 - C24554 * C885 - C24661 * C799 +
            C24552 * C886 + C24660 * C800) *
               C41548 +
           (C24554 * C884 + C24661 * C798 - C24552 * C885 - C24660 * C799 +
            (C19671 * C20682 + C92067 * C20683) * C886 +
            (C19671 * C20736 + C92067 * C20737) * C800) *
               C92171) *
              C69237) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C41548 +
            (C20147 * C181 + C20225 * C92105) * C92171) *
               C92362 +
           ((C24643 + C24663) * C41548 + (C24646 + C24647) * C92171) * C92359 +
           (C34796 * C41548 + C34797 * C92171) * C69237) *
              C93 -
          (((C36533 + C36534) * C92171 + (C36539 + C36537) * C41548) * C69237 +
           ((C26439 + C26440) * C92171 + (C26445 + C26443) * C41548) * C92359 +
           ((C21267 * C92105 + C21183 * C181) * C92171 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C41548) *
               C92362) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C41548 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C92171) *
               C92362 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C41548 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C92171) *
               C92359 +
           (((C19671 * C1392 + C92067 * C1404) * C181 +
             (C19671 * C1474 + C92067 * C1482) * C92105) *
                C41548 +
            ((C19671 * C5721 + C92067 * C5724) * C181 +
             (C19671 * C5807 + C92067 * C5810) * C92105) *
                C92171) *
               C69237) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C41548 +
            (C20147 * C181 + C20225 * C92105) * C92171) *
               C92362 +
           ((C24643 + C24663) * C41548 + (C24646 + C24647) * C92171) * C92359 +
           C86579 * C69237) *
              C92084 * C1383 -
          (((C34809 + C34800) * C92171 + (C34810 + C34803) * C41548) * C69237 +
           ((C24665 + C24655) * C92171 + (C24666 + C24658) * C41548) * C92359 +
           ((C24647 + C24646) * C92171 + (C24663 + C24643) * C41548) * C92362) *
              C92084 * C1384 +
          (C86579 * C92362 +
           (C39258 * C41548 + (C34800 + C34809) * C92171) * C92359 +
           ((C39261 + C39264) * C41548 +
            ((C19671 * C34694 + C92067 * C34695) * C181 +
             (C19671 * C34793 + C92067 * C34794) * C92105) *
                C92171) *
               C69237) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C41548 +
            (C20281 + C20297) * C92171) *
               C92362 +
           ((C24549 * C244 + C24753 * C92116) * C41548 +
            (C23916 + C23917) * C92171) *
               C92359 +
           ((C24556 * C244 + C24754 * C92116) * C41548 +
            (C34101 + C34102) * C92171) *
               C69237) *
              C798 -
          (((C34103 + C34104) * C92171 + (C34102 + C34101) * C41548) * C69237 +
           ((C23919 + C23918) * C92171 + (C23917 + C23916) * C41548) * C92359 +
           ((C20298 + C20284) * C92171 + (C20297 + C20281) * C41548) * C92362) *
              C799 +
          ((C20301 * C41548 + C20302 * C92171) * C92362 +
           (C23922 * C41548 + (C23921 + C23920) * C92171) * C92359 +
           ((C34104 + C34103) * C41548 +
            ((C19671 * C20682 + C92067 * C20683) * C244 +
             (C19671 * C20788 + C92067 * C20789) * C92116) *
                C92171) *
               C69237) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C41548 +
            (C20281 + C20297) * C92171) *
               C92362 +
           ((C24549 * C244 + C24753 * C92116) * C41548 +
            (C23916 + C23917) * C92171) *
               C92359 +
           ((C24556 * C244 + C24754 * C92116) * C41548 +
            (C34101 + C34102) * C92171) *
               C69237) *
              C92105 * C93 -
          (((C35738 + C35734) * C92171 +
            (C36640 * C92116 + C36431 * C244) * C41548) *
               C69237 +
           ((C25617 + C25609) * C92171 +
            (C26546 * C92116 + C26335 * C244) * C41548) *
               C92359 +
           ((C21348 + C21336) * C92171 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C41548) *
               C92362) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C41548 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C92171) *
               C92362 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C41548 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C92171) *
               C92359 +
           (((C19671 * C1392 + C92067 * C1404) * C244 +
             (C19671 * C1543 + C92067 * C1551) * C92116) *
                C41548 +
            ((C19671 * C5721 + C92067 * C5724) * C244 +
             (C19671 * C5887 + C92067 * C5890) * C92116) *
                C92171) *
               C69237) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1534 +
            (C19671 * C245 + C92067 * C251) * C1383 - C24549 * C1535 -
            C24753 * C1384 + C24556 * C1536 + C24754 * C1385) *
               C41548 +
           (C20147 * C1534 + C20293 * C1383 - C22432 * C1535 - C22599 * C1384 +
            C24554 * C1536 + C24755 * C1385) *
               C92171) *
              C92362 +
          ((C24549 * C1534 + C24753 * C1383 - C24556 * C1535 - C24754 * C1384 +
            C34714 * C1536 + C34891 * C1385) *
               C41548 +
           (C22432 * C1534 + C22599 * C1383 - C24554 * C1535 - C24755 * C1384 +
            C34712 * C1536 + C34892 * C1385) *
               C92171) *
              C92359 +
          ((C24556 * C1534 + C24754 * C1383 - C34714 * C1535 - C34891 * C1384 +
            C39202 * C1536 + C39319 * C1385) *
               C41548 +
           (C24554 * C1534 + C24755 * C1383 - C34712 * C1535 - C34892 * C1384 +
            (C19671 * C34694 + C92067 * C34695) * C1536 +
            (C19671 * C34884 + C92067 * C34885) * C1385) *
               C92171) *
              C69237) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C801 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C92084) *
               C92362 +
           ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92359 +
           ((C53695 + C53694) * C801 + (C53693 + C53692) * C92084) * C69237) *
              C92067 * C92116 * C798 -
          (((C41776 * C16099 + C92171 * C16335 + C41775 * C5725 +
             C41548 * C5968) *
                C92084 +
            (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
             C41548 * C5965) *
                C801) *
               C69237 +
           ((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92359 +
           ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                C92084 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C801) *
               C92362) *
              C92067 * C92116 * C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C801 +
            (C41775 * C822 + C41548 * C1031 + C41776 * C4871 + C92171 * C5186) *
                C92084) *
               C92362 +
           ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C801 +
            (C41775 * C8418 + C41548 * C8769 + C41776 * C18736 +
             C92171 * C19092) *
                C92084) *
               C92359 +
           ((C41775 * C16095 + C41548 * C16333 + C41776 * C20682 +
             C92171 * C20840) *
                C801 +
            (C41775 * C16099 + C41548 * C16335 + C41776 * C20684 +
             C92171 * C20841) *
                C92084) *
               C69237) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C104 +
           (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
               C93 -
           (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
           C41815 * C95) *
              C92362 +
          ((C53684 + C53685) * C104 + (C53686 + C53687) * C93 - C55998 * C105 -
           C55999 * C94 + (C45014 + C45015) * C106 + (C45016 + C45017) * C95) *
              C92359 +
          ((C53695 + C53694) * C104 + (C53693 + C53692) * C93 -
           (C53690 + C53691) * C105 - (C53688 + C53689) * C94 +
           (C41775 * C1392 + C41548 * C1609 + C41776 * C5721 + C92171 * C5967) *
               C106 +
           (C41775 * C1408 + C41548 * C1617 + C41776 * C5727 + C92171 * C5970) *
               C95) *
              C69237) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C801 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C92084) *
               C92362 +
           ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92359 +
           C86744 * C69237) *
              C92067 * C1383 -
          (((C86740 + C86741) * C92084 + (C86742 + C86743) * C801) * C69237 +
           ((C53692 + C53693) * C92084 + (C53694 + C53695) * C801) * C92359 +
           ((C53687 + C53686) * C92084 + (C53685 + C53684) * C801) * C92362) *
              C92067 * C1384 +
          (C86744 * C92362 +
           ((C86743 + C86742) * C801 + (C86741 + C86740) * C92084) * C92359 +
           ((C41775 * C29611 + C41548 * C29933 + C41776 * C34694 +
             C92171 * C34966) *
                C801 +
            (C41775 * C29615 + C41548 * C29935 + C41776 * C34696 +
             C92171 * C34967) *
                C92084) *
               C69237) *
              C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C884 +
           (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
               C798 -
           (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
               C885 -
           (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
               C799 +
           (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
               C886 +
           (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
               C800) *
              C92362 +
          ((C53684 + C53685) * C884 + (C53806 + C53807) * C798 -
           (C57229 + C57228) * C885 - (C57366 + C57367) * C799 +
           (C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
            C92171 * C19090) *
               C886 +
           (C41775 * C8540 + C41548 * C8870 + C41776 * C18862 +
            C92171 * C19192) *
               C800) *
              C92359 +
          ((C53695 + C53694) * C884 + (C53811 + C53810) * C798 -
           (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
            C41548 * C5965) *
               C885 -
           (C41776 * C16177 + C92171 * C16411 + C41775 * C5805 +
            C41548 * C6045) *
               C799 +
           (C41775 * C16095 + C41548 * C16333 + C41776 * C20682 +
            C92171 * C20840) *
               C886 +
           (C41775 * C16177 + C41548 * C16411 + C41776 * C20736 +
            C92171 * C20892) *
               C800) *
              C69237) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C181 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C92105) *
               C92362 +
           ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92359 +
           ((C53695 + C53694) * C181 + (C53811 + C53810) * C92105) * C69237) *
              C92067 * C93 -
          (((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C69237 +
           C56139 * C92359 +
           ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92362) *
              C92067 * C94 +
          (C41911 * C92362 +
           ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92359 +
           ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
             C92171 * C5967) *
                C181 +
            (C41775 * C1474 + C41548 * C1675 + C41776 * C5807 +
             C92171 * C6047) *
                C92105) *
               C69237) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C181 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C92105) *
               C92362 +
           ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92359 +
           C86828 * C69237) *
              C92067 * C92084 * C1383 -
          (((C86826 + C86827) * C92105 + (C86742 + C86743) * C181) * C69237 +
           ((C53810 + C53811) * C92105 + (C53694 + C53695) * C181) * C92359 +
           ((C53807 + C53806) * C92105 + (C53685 + C53684) * C181) * C92362) *
              C92067 * C92084 * C1384 +
          (C86828 * C92362 +
           ((C86743 + C86742) * C181 + (C86827 + C86826) * C92105) * C92359 +
           ((C41775 * C29611 + C41548 * C29933 + C41776 * C34694 +
             C92171 * C34966) *
                C181 +
            (C41775 * C29735 + C41548 * C30029 + C41776 * C34793 +
             C92171 * C35083) *
                C92105) *
               C69237) *
              C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92362 +
           ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92359 +
           ((C53695 + C53694) * C244 + (C53924 + C53925) * C92116) * C69237) *
              C92067 * C798 -
          (((C41776 * C16255 + C92171 * C16487 + C41775 * C5885 +
             C41548 * C6122) *
                C92116 +
            (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
             C41548 * C5965) *
                C244) *
               C69237 +
           ((C57503 + C57502) * C92116 + (C57229 + C57228) * C244) * C92359 +
           ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                C92116 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C244) *
               C92362) *
              C92067 * C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C244 +
            (C41775 * C957 + C41548 * C1147 + C41776 * C5085 + C92171 * C5340) *
                C92116) *
               C92362 +
           ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C244 +
            (C41775 * C8653 + C41548 * C8971 + C41776 * C18976 +
             C92171 * C19292) *
                C92116) *
               C92359 +
           ((C41775 * C16095 + C41548 * C16333 + C41776 * C20682 +
             C92171 * C20840) *
                C244 +
            (C41775 * C16255 + C41548 * C16487 + C41776 * C20788 +
             C92171 * C20943) *
                C92116) *
               C69237) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92362 +
           ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92359 +
           ((C53695 + C53694) * C244 + (C53924 + C53925) * C92116) * C69237) *
              C92067 * C92105 * C93 -
          (((C53927 + C53926) * C92116 + (C53690 + C53691) * C244) * C69237 +
           (C56270 * C92116 + C55998 * C244) * C92359 +
           ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92362) *
              C92067 * C92105 * C94 +
          (C42008 * C92362 +
           ((C45014 + C45015) * C244 + (C45237 + C45236) * C92116) * C92359 +
           ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
             C92171 * C5967) *
                C244 +
            (C41775 * C1543 + C41548 * C1732 + C41776 * C5887 +
             C92171 * C6124) *
                C92116) *
               C69237) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C1534 +
           (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
               C1383 -
           (C53685 + C53684) * C1535 - (C53922 + C53923) * C1384 +
           C86728 * C1536 + C86903 * C1385) *
              C92362 +
          ((C53684 + C53685) * C1534 + (C53923 + C53922) * C1383 -
           (C53694 + C53695) * C1535 - (C53925 + C53924) * C1384 +
           (C86743 + C86742) * C1536 + (C86908 + C86909) * C1385) *
              C92359 +
          (C86728 * C1534 + C86903 * C1383 - (C86742 + C86743) * C1535 -
           (C86909 + C86908) * C1384 +
           (C41775 * C29611 + C41548 * C29933 + C41776 * C34694 +
            C92171 * C34966) *
               C1536 +
           (C41775 * C29836 + C41548 * C30117 + C41776 * C34884 +
            C92171 * C35180) *
               C1385) *
              C69237) *
         C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C801 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C92084) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C801 +
                      (C86233 + C86234 + C86235) * C92084) *
                         C92067 * C92171) *
                        C92116 * C798 -
                    (((C86236 + C86237 + C86238) * C92084 +
                      (C86239 + C86240 + C86241) * C801) *
                         C92067 * C92171 +
                     ((C86235 + C86234 + C86233) * C92084 +
                      (C86232 + C86231 + C86230) * C801) *
                         C92067 * C41548) *
                        C92116 * C799 +
                    (((C86241 + C86240 + C86239) * C801 +
                      (C86238 + C86237 + C86236) * C92084) *
                         C92067 * C41548 +
                     ((C69682 * C4865 + C92362 * C5417 + C69683 * C18732 +
                       C92359 * C19392 + C69684 * C20682 + C69237 * C20994) *
                          C801 +
                      (C69682 * C4871 + C92362 * C5420 + C69683 * C18736 +
                       C92359 * C19394 + C69684 * C20684 + C69237 * C20995) *
                          C92084) *
                         C92067 * C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C104 +
                     (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                      C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                         C93 -
                     (C69710 + C69711 + C69712) * C105 -
                     (C69713 + C69714 + C69715) * C94 +
                     (C69716 + C69717 + C69718) * C106 +
                     (C69719 + C69720 + C69721) * C95) *
                        C92067 * C41548 +
                    ((C69682 * C805 + C92362 * C1204 + C69683 * C3431 +
                      C92359 * C3875 + C69684 * C5719 + C69237 * C6199) *
                         C104 +
                     (C69682 * C813 + C92362 * C1212 + C69683 * C3439 +
                      C92359 * C3879 + C69684 * C5725 + C69237 * C6202) *
                         C93 -
                     (C71974 + C71973 + C71972) * C105 -
                     (C71977 + C71976 + C71975) * C94 +
                     (C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                      C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                         C106 +
                     (C69682 * C811 + C92362 * C1210 + C69683 * C3441 +
                      C92359 * C3881 + C69684 * C5727 + C69237 * C6204) *
                         C95) *
                        C92067 * C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C801 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C92084) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C801 +
                      (C86233 + C86234 + C86235) * C92084) *
                         C92067 * C92171) *
                        C1383 -
                    (((C69684 * C24527 + C69237 * C25134 + C69683 * C5725 +
                       C92359 * C6202 + C69682 * C3439 + C92362 * C3879) *
                          C92084 +
                      (C69684 * C24524 + C69237 * C25132 + C69683 * C5719 +
                       C92359 * C6199 + C69682 * C3431 + C92362 * C3875) *
                          C801) *
                         C92067 * C92171 +
                     ((C69684 * C10814 + C69237 * C11431 + C69683 * C1406 +
                       C92359 * C1797 + C69682 * C1397 + C92362 * C1796) *
                          C92084 +
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C801) *
                         C92067 * C41548) *
                        C1384 +
                    (((C69682 * C1390 + C92362 * C1789 + C69683 * C10808 +
                       C92359 * C11428 + C69684 * C29611 + C69237 * C30199) *
                          C801 +
                      (C69682 * C1406 + C92362 * C1797 + C69683 * C10814 +
                       C92359 * C11431 + C69684 * C29615 + C69237 * C30201) *
                          C92084) *
                         C92067 * C41548 +
                     ((C69682 * C5719 + C92362 * C6199 + C69683 * C24524 +
                       C92359 * C25132 + C69684 * C34694 + C69237 * C35274) *
                          C801 +
                      (C69682 * C5725 + C92362 * C6202 + C69683 * C24527 +
                       C92359 * C25134 + C69684 * C34696 + C69237 * C35275) *
                          C92084) *
                         C92067 * C92171) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eezy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C884 +
                     (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                      C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                         C798 -
                     (C86232 + C86231 + C86230) * C885 -
                     (C86328 + C86329 + C86330) * C799 +
                     (C86241 + C86240 + C86239) * C886 +
                     (C86331 + C86332 + C86333) * C800) *
                        C92067 * C41548 +
                    ((C86230 + C86231 + C86232) * C884 +
                     (C86330 + C86329 + C86328) * C798 -
                     (C86239 + C86240 + C86241) * C885 -
                     (C86333 + C86332 + C86331) * C799 +
                     (C69682 * C4865 + C92362 * C5417 + C69683 * C18732 +
                      C92359 * C19392 + C69684 * C20682 + C69237 * C20994) *
                         C886 +
                     (C69682 * C4987 + C92362 * C5533 + C69683 * C18862 +
                      C92359 * C19504 + C69684 * C20736 + C69237 * C21046) *
                         C800) *
                        C92067 * C92171) *
                   C92084 * C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C181 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C92105) *
                         C92067 * C41548 +
                     ((C69682 * C805 + C92362 * C1204 + C69683 * C3431 +
                       C92359 * C3875 + C69684 * C5719 + C69237 * C6199) *
                          C181 +
                      (C69682 * C890 + C92362 * C1267 + C69683 * C3513 +
                       C92359 * C3949 + C69684 * C5805 + C69237 * C6279) *
                          C92105) *
                         C92067 * C92171) *
                        C93 -
                    (((C72082 + C72083 + C72084) * C92105 +
                      (C71974 + C71973 + C71972) * C181) *
                         C92067 * C92171 +
                     ((C69810 + C69809 + C69808) * C92105 +
                      (C69710 + C69711 + C69712) * C181) *
                         C92067 * C41548) *
                        C94 +
                    (((C69716 + C69717 + C69718) * C181 +
                      (C69813 + C69812 + C69811) * C92105) *
                         C92067 * C41548 +
                     ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                       C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                          C181 +
                      (C69682 * C888 + C92362 * C1271 + C69683 * C3515 +
                       C92359 * C3951 + C69684 * C5807 + C69237 * C6281) *
                          C92105) *
                         C92067 * C92171) *
                        C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C181 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C92105) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C181 +
                      (C86330 + C86329 + C86328) * C92105) *
                         C92067 * C92171) *
                        C92084 * C1383 -
                    (((C69684 * C24638 + C69237 * C25210 + C69683 * C5805 +
                       C92359 * C6279 + C69682 * C3513 + C92362 * C3949) *
                          C92105 +
                      (C69684 * C24524 + C69237 * C25132 + C69683 * C5719 +
                       C92359 * C6199 + C69682 * C3431 + C92362 * C3875) *
                          C181) *
                         C92067 * C92171 +
                     ((C69684 * C10930 + C69237 * C11508 + C69683 * C1472 +
                       C92359 * C1855 + C69682 * C1471 + C92362 * C1854) *
                          C92105 +
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C181) *
                         C92067 * C41548) *
                        C92084 * C1384 +
                    (((C69682 * C1390 + C92362 * C1789 + C69683 * C10808 +
                       C92359 * C11428 + C69684 * C29611 + C69237 * C30199) *
                          C181 +
                      (C69682 * C1472 + C92362 * C1855 + C69683 * C10930 +
                       C92359 * C11508 + C69684 * C29735 + C69237 * C30277) *
                          C92105) *
                         C92067 * C41548 +
                     ((C69682 * C5719 + C92362 * C6199 + C69683 * C24524 +
                       C92359 * C25132 + C69684 * C34694 + C69237 * C35274) *
                          C181 +
                      (C69682 * C5805 + C92362 * C6279 + C69683 * C24638 +
                       C92359 * C25210 + C69684 * C34793 + C69237 * C35350) *
                          C92105) *
                         C92067 * C92171) *
                        C92084 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C244 +
                      (C86420 + C86421 + C86422) * C92116) *
                         C92067 * C92171) *
                        C798 -
                    (((C86423 + C86424 + C86425) * C92116 +
                      (C86239 + C86240 + C86241) * C244) *
                         C92067 * C92171 +
                     ((C86422 + C86421 + C86420) * C92116 +
                      (C86232 + C86231 + C86230) * C244) *
                         C92067 * C41548) *
                        C799 +
                    (((C86241 + C86240 + C86239) * C244 +
                      (C86425 + C86424 + C86423) * C92116) *
                         C92067 * C41548 +
                     ((C69682 * C4865 + C92362 * C5417 + C69683 * C18732 +
                       C92359 * C19392 + C69684 * C20682 + C69237 * C20994) *
                          C244 +
                      (C69682 * C5085 + C92362 * C5622 + C69683 * C18976 +
                       C92359 * C19607 + C69684 * C20788 + C69237 * C21097) *
                          C92116) *
                         C92067 * C92171) *
                        C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C92067 * C41548 +
                     ((C69682 * C805 + C92362 * C1204 + C69683 * C3431 +
                       C92359 * C3875 + C69684 * C5719 + C69237 * C6199) *
                          C244 +
                      (C69682 * C956 + C92362 * C1328 + C69683 * C3587 +
                       C92359 * C4019 + C69684 * C5885 + C69237 * C6356) *
                          C92116) *
                         C92067 * C92171) *
                        C92105 * C93 -
                    (((C72189 + C72190 + C72191) * C92116 +
                      (C71974 + C71973 + C71972) * C244) *
                         C92067 * C92171 +
                     ((C69902 + C69901 + C69900) * C92116 +
                      (C69710 + C69711 + C69712) * C244) *
                         C92067 * C41548) *
                        C92105 * C94 +
                    (((C69716 + C69717 + C69718) * C244 +
                      (C69905 + C69904 + C69903) * C92116) *
                         C92067 * C41548 +
                     ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                       C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                          C244 +
                      (C69682 * C954 + C92362 * C1326 + C69683 * C3589 +
                       C92359 * C4021 + C69684 * C5887 + C69237 * C6358) *
                          C92116) *
                         C92067 * C92171) *
                        C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C1534 +
                     (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                      C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                         C1383 -
                     (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                      C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                         C1535 -
                     (C69684 * C11028 + C69237 * C11585 + C69683 * C1541 +
                      C92359 * C1910 + C69682 * C1540 + C92362 * C1909) *
                         C1384 +
                     (C69682 * C1390 + C92362 * C1789 + C69683 * C10808 +
                      C92359 * C11428 + C69684 * C29611 + C69237 * C30199) *
                         C1536 +
                     (C69682 * C1541 + C92362 * C1910 + C69683 * C11028 +
                      C92359 * C11585 + C69684 * C29836 + C69237 * C30353) *
                         C1385) *
                        C92067 * C41548 +
                    ((C86230 + C86231 + C86232) * C1534 +
                     (C86420 + C86421 + C86422) * C1383 -
                     (C69684 * C24524 + C69237 * C25132 + C69683 * C5719 +
                      C92359 * C6199 + C69682 * C3431 + C92362 * C3875) *
                         C1535 -
                     (C69684 * C24740 + C69237 * C25286 + C69683 * C5885 +
                      C92359 * C6356 + C69682 * C3587 + C92362 * C4019) *
                         C1384 +
                     (C69682 * C5719 + C92362 * C6199 + C69683 * C24524 +
                      C92359 * C25132 + C69684 * C34694 + C69237 * C35274) *
                         C1536 +
                     (C69682 * C5885 + C92362 * C6356 + C69683 * C24740 +
                      C92359 * C25286 + C69684 * C34884 + C69237 * C35425) *
                         C1385) *
                        C92067 * C92171) *
                   C92105 * C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C41548 +
                      (C21165 + C21166 - C21189 - C21190) * C92171) *
                         C92362 +
                     ((C26329 + C26330 - C26337 - C26338) * C41548 +
                      (C25387 + C25388 - C25403 - C25404) * C92171) *
                         C92359 +
                     ((C36425 + C36426 - C36433 - C36434) * C41548 +
                      (C35525 + C35526 - C35533 - C35534) * C92171) *
                         C69237) *
                        C2709 +
                    (((C26337 - (C26330 + C26329) + C26338) * C41548 +
                      (C25403 - (C25388 + C25387) + C25404) * C92171) *
                         C92362 +
                     ((C36433 - (C36426 + C36425) + C36434) * C41548 +
                      (C35533 - (C35526 + C35525) + C35534) * C92171) *
                         C92359 +
                     ((C40314 - (C40307 + C40306) + C40315) * C41548 +
                      ((C19671 * C32368 + C92067 * C32369) * C1988 -
                       (C34711 * C1983 + C34712 * C1987) +
                       (C19671 * C32370 + C92067 * C32371) * C1984) *
                          C92171) *
                         C69237) *
                        C2710) *
                   C92105) /
                  (p * q * std::sqrt(p + q));
    d2eexy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C181 +
              (C19671 * C182 + C92067 * C188) * C92105) *
                 C41548 +
             (C20147 * C181 + C20225 * C92105) * C92171) *
                C92362 +
            ((C24643 + C24663) * C41548 + (C24646 + C24647) * C92171) * C92359 +
            C86579 * C69237) *
               C1983 -
           (((C36533 + C36534) * C92171 + (C36539 + C36537) * C41548) * C69237 +
            ((C26439 + C26440) * C92171 + (C26445 + C26443) * C41548) * C92359 +
            ((C21267 * C92105 + C21183 * C181) * C92171 +
             ((C19671 * C183 + C92067 * C189) * C92105 +
              (C19671 * C108 + C92067 * C114) * C181) *
                 C41548) *
                C92362) *
               C1984) *
              C2709 +
          ((((C26443 + C26445) * C41548 + (C26440 + C26439) * C92171) * C92362 +
            ((C36537 + C36539) * C41548 + (C36534 + C36533) * C92171) * C92359 +
            ((C40384 + C40386) * C41548 +
             ((C19671 * C32368 + C92067 * C32369) * C181 +
              (C19671 * C32482 + C92067 * C32483) * C92105) *
                 C92171) *
                C69237) *
               C1984 -
           (((C34809 + C34800) * C92171 + (C34810 + C34803) * C41548) * C69237 +
            ((C24665 + C24655) * C92171 + (C24666 + C24658) * C41548) * C92359 +
            ((C24647 + C24646) * C92171 + (C24663 + C24643) * C41548) *
                C92362) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2849 +
                       (C19671 * C245 + C92067 * C251) * C2709 -
                       C24549 * C2850 - C24753 * C2710) *
                          C41548 +
                      (C22584 + C22585 - C22586 - C22602) * C92171) *
                         C92362 +
                     ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
                       C24754 * C2710) *
                          C41548 +
                      (C27444 + C27445 - C27446 - C27447) * C92171) *
                         C92359 +
                     ((C24556 * C2849 + C24754 * C2709 - C34714 * C2850 -
                       C34891 * C2710) *
                          C41548 +
                      (C37556 + C37557 - C37558 - C37559) * C92171) *
                         C69237) *
                        C92105 * C1983 +
                    (((C26335 * C2850 -
                       ((C19671 * C246 + C92067 * C252) * C2709 +
                        (C19671 * C108 + C92067 * C114) * C2849) +
                       C26546 * C2710) *
                          C41548 +
                      (C25399 * C2850 - (C21345 * C2709 + C21183 * C2849) +
                       C25615 * C2710) *
                          C92171) *
                         C92362 +
                     ((C36431 * C2850 - (C26546 * C2709 + C26335 * C2849) +
                       C36640 * C2710) *
                          C41548 +
                      (C35531 * C2850 - (C25615 * C2709 + C25399 * C2849) +
                       C35737 * C2710) *
                          C92171) *
                         C92359 +
                     ((C40312 * C2850 - (C36640 * C2709 + C36431 * C2849) +
                       C40455 * C2710) *
                          C41548 +
                      ((C19671 * C32368 + C92067 * C32369) * C2850 -
                       (C35737 * C2709 + C35531 * C2849) +
                       (C19671 * C32588 + C92067 * C32589) * C2710) *
                          C92171) *
                         C69237) *
                        C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C1987 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C1983 -
            (C41802 + C41803) * C1988 - (C41804 + C41805) * C1984) *
               C92362 +
           ((C53684 + C53685) * C1987 + (C53686 + C53687) * C1983 -
            C55998 * C1988 - C55999 * C1984) *
               C92359 +
           (C86728 * C1987 + C86729 * C1983 - (C53690 + C53691) * C1988 -
            (C53688 + C53689) * C1984) *
               C69237) *
              C92067 * C2709 +
          ((C56000 * C1988 -
            ((C53687 + C53686) * C1983 + (C53685 + C53684) * C1987) +
            C56001 * C1984) *
               C92362 +
           ((C53691 + C53690) * C1988 -
            ((C53692 + C53693) * C1983 + (C53694 + C53695) * C1987) +
            (C53689 + C53688) * C1984) *
               C92359 +
           ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
             C92171 * C32694) *
                C1988 -
            ((C86740 + C86741) * C1983 + (C86742 + C86743) * C1987) +
            (C41775 * C10815 + C41548 * C11130 + C41776 * C32370 +
             C92171 * C32695) *
                C1984) *
               C69237) *
              C92067 * C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                 C181 +
             (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                 C92105) *
                C92362 +
            ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92359 +
            C86828 * C69237) *
               C92067 * C1983 -
           (((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C69237 +
            C56139 * C92359 +
            ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92362) *
               C92067 * C1984) *
              C2709 +
          ((C56138 * C92362 +
            ((C53691 + C53690) * C181 + (C53809 + C53808) * C92105) * C92359 +
            ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
              C92171 * C32694) *
                 C181 +
             (C41775 * C10931 + C41548 * C11243 + C41776 * C32482 +
              C92171 * C32804) *
                 C92105) *
                C69237) *
               C92067 * C1984 -
           (((C86826 + C86827) * C92105 + (C86742 + C86743) * C181) * C69237 +
            ((C53810 + C53811) * C92105 + (C53694 + C53695) * C181) * C92359 +
            ((C53807 + C53806) * C92105 + (C53685 + C53684) * C181) * C92362) *
               C92067 * C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C2849 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C2709 -
            (C53685 + C53684) * C2850 - (C53922 + C53923) * C2710) *
               C92362 +
           ((C53684 + C53685) * C2849 + (C53923 + C53922) * C2709 -
            (C53694 + C53695) * C2850 - (C53925 + C53924) * C2710) *
               C92359 +
           (C86728 * C2849 + C86903 * C2709 - (C86742 + C86743) * C2850 -
            (C86909 + C86908) * C2710) *
               C69237) *
              C92067 * C92105 * C1983 +
          ((C56000 * C2850 -
            ((C42001 + C42000) * C2709 + (C41802 + C41803) * C2849) +
            C56271 * C2710) *
               C92362 +
           ((C53691 + C53690) * C2850 - (C56270 * C2709 + C55998 * C2849) +
            (C53926 + C53927) * C2710) *
               C92359 +
           ((C41775 * C10809 + C41548 * C11127 + C41776 * C32368 +
             C92171 * C32694) *
                C2850 -
            ((C53927 + C53926) * C2709 + (C53690 + C53691) * C2849) +
            (C41775 * C11029 + C41548 * C11340 + C41776 * C32588 +
             C92171 * C32910) *
                C2710) *
               C69237) *
              C92067 * C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C1987 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C1983 -
                      (C69710 + C69711 + C69712) * C1988 -
                      (C69713 + C69714 + C69715) * C1984) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C1987 +
                      (C86233 + C86234 + C86235) * C1983 -
                      (C71974 + C71973 + C71972) * C1988 -
                      (C71977 + C71976 + C71975) * C1984) *
                         C92067 * C92171) *
                        C2709 +
                    (((C72914 + C72915 + C72916) * C1988 -
                      ((C69684 * C10814 + C69237 * C11431 + C69683 * C1406 +
                        C92359 * C1797 + C69682 * C1397 + C92362 * C1796) *
                           C1983 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C1987) +
                      (C72917 + C72918 + C72919) * C1984) *
                         C92067 * C41548 +
                     ((C69682 * C3432 + C92362 * C3876 + C69683 * C5720 +
                       C92359 * C6200 + C69684 * C32368 + C69237 * C33012) *
                          C1988 -
                      ((C69684 * C24527 + C69237 * C25134 + C69683 * C5725 +
                        C92359 * C6202 + C69682 * C3439 + C92362 * C3879) *
                           C1983 +
                       (C69684 * C24524 + C69237 * C25132 + C69683 * C5719 +
                        C92359 * C6199 + C69682 * C3431 + C92362 * C3875) *
                           C1987) +
                      (C69682 * C3440 + C92362 * C3880 + C69683 * C5726 +
                       C92359 * C6203 + C69684 * C32370 + C69237 * C33013) *
                          C1984) *
                         C92067 * C92171) *
                        C2710) *
                   C92105) /
                  (p * q * std::sqrt(p + q));
    d2eezy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                        C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                           C181 +
                       (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                        C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                           C92105) *
                          C92067 * C41548 +
                      ((C86230 + C86231 + C86232) * C181 +
                       (C86330 + C86329 + C86328) * C92105) *
                          C92067 * C92171) *
                         C1983 -
                     (((C72082 + C72083 + C72084) * C92105 +
                       (C71974 + C71973 + C71972) * C181) *
                          C92067 * C92171 +
                      ((C69810 + C69809 + C69808) * C92105 +
                       (C69710 + C69711 + C69712) * C181) *
                          C92067 * C41548) *
                         C1984) *
                        C2709 +
                    ((((C72914 + C72915 + C72916) * C181 +
                       (C73024 + C73025 + C73026) * C92105) *
                          C92067 * C41548 +
                      ((C69682 * C3432 + C92362 * C3876 + C69683 * C5720 +
                        C92359 * C6200 + C69684 * C32368 + C69237 * C33012) *
                           C181 +
                       (C69682 * C3514 + C92362 * C3950 + C69683 * C5806 +
                        C92359 * C6280 + C69684 * C32482 + C69237 * C33112) *
                           C92105) *
                          C92067 * C92171) *
                         C1984 -
                     (((C69684 * C24638 + C69237 * C25210 + C69683 * C5805 +
                        C92359 * C6279 + C69682 * C3513 + C92362 * C3949) *
                           C92105 +
                       (C69684 * C24524 + C69237 * C25132 + C69683 * C5719 +
                        C92359 * C6199 + C69682 * C3431 + C92362 * C3875) *
                           C181) *
                          C92067 * C92171 +
                      ((C69684 * C10930 + C69237 * C11508 + C69683 * C1472 +
                        C92359 * C1855 + C69682 * C1471 + C92362 * C1854) *
                           C92105 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C181) *
                          C92067 * C41548) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2849 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C2709 -
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C2850 -
                      (C69684 * C11028 + C69237 * C11585 + C69683 * C1541 +
                       C92359 * C1910 + C69682 * C1540 + C92362 * C1909) *
                          C2710) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C2849 +
                      (C86420 + C86421 + C86422) * C2709 -
                      (C69684 * C24524 + C69237 * C25132 + C69683 * C5719 +
                       C92359 * C6199 + C69682 * C3431 + C92362 * C3875) *
                          C2850 -
                      (C69684 * C24740 + C69237 * C25286 + C69683 * C5885 +
                       C92359 * C6356 + C69682 * C3587 + C92362 * C4019) *
                          C2710) *
                         C92067 * C92171) *
                        C92105 * C1983 +
                    (((C72914 + C72915 + C72916) * C2850 -
                      ((C69902 + C69901 + C69900) * C2709 +
                       (C69710 + C69711 + C69712) * C2849) +
                      (C73133 + C73132 + C73131) * C2710) *
                         C92067 * C41548 +
                     ((C69682 * C3432 + C92362 * C3876 + C69683 * C5720 +
                       C92359 * C6200 + C69684 * C32368 + C69237 * C33012) *
                          C2850 -
                      ((C72189 + C72190 + C72191) * C2709 +
                       (C71974 + C71973 + C71972) * C2849) +
                      (C69682 * C3588 + C92362 * C4020 + C69683 * C5886 +
                       C92359 * C6357 + C69684 * C32588 + C69237 * C33211) *
                          C2710) *
                         C92067 * C92171) *
                        C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C41548 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C92171) *
              C92362 +
          ((C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C41548 +
           (C22432 * C104 + C22431 * C93 - C25399 * C105 - C25400 * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C92171) *
              C92359 +
          ((C24556 * C104 + C24555 * C93 - C36431 * C105 - C36432 * C94 +
            (C19671 * C1392 + C92067 * C1404) * C106 +
            (C19671 * C1408 + C92067 * C1416) * C95) *
               C41548 +
           (C24554 * C104 + C24553 * C93 - C35531 * C105 - C35532 * C94 +
            (C19671 * C5721 + C92067 * C5724) * C106 +
            (C19671 * C5727 + C92067 * C5730) * C95) *
               C92171) *
              C69237) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C41548 +
            (C20155 + C20156) * C92171) *
               C92362 +
           ((C24557 + C24558) * C41548 + C27233 * C92171) * C92359 +
           (C34699 * C41548 + C34700 * C92171) * C69237) *
              C92116 * C798 -
          (((C24559 + C24560) * C92171 + C37351 * C41548) * C69237 +
           (C27234 * C92171 + C27235 * C41548) * C92359 +
           ((C20158 + C20157) * C92171 + (C20156 + C20155) * C41548) * C92362) *
              C92116 * C799 +
          ((C20163 * C41548 + C20164 * C92171) * C92362 +
           (C23767 * C41548 + (C22434 + C22433) * C92171) * C92359 +
           ((C24560 + C24559) * C41548 +
            ((C19671 * C20682 + C92067 * C20683) * C801 +
             (C19671 * C20684 + C92067 * C20685) * C92084) *
                C92171) *
               C69237) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C41548 +
            (C20147 * C181 + C20225 * C92105) * C92171) *
               C92362 +
           ((C24643 + C24663) * C41548 + (C24646 + C24647) * C92171) * C92359 +
           (C34796 * C41548 + C34797 * C92171) * C69237) *
              C93 -
          (((C36533 + C36534) * C92171 + (C36539 + C36537) * C41548) * C69237 +
           ((C26439 + C26440) * C92171 + (C26445 + C26443) * C41548) * C92359 +
           ((C21267 * C92105 + C21183 * C181) * C92171 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C41548) *
               C92362) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C41548 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C92171) *
               C92362 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C41548 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C92171) *
               C92359 +
           (((C19671 * C1392 + C92067 * C1404) * C181 +
             (C19671 * C1474 + C92067 * C1482) * C92105) *
                C41548 +
            ((C19671 * C5721 + C92067 * C5724) * C181 +
             (C19671 * C5807 + C92067 * C5810) * C92105) *
                C92171) *
               C69237) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C41548 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C92171) *
              C92362 +
          ((C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
            C22430 * C886 + C22514 * C800) *
               C41548 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C92171) *
              C92359 +
          ((C24556 * C884 + C24662 * C798 - C24554 * C885 - C24661 * C799 +
            C24552 * C886 + C24660 * C800) *
               C41548 +
           (C24554 * C884 + C24661 * C798 - C24552 * C885 - C24660 * C799 +
            (C19671 * C20682 + C92067 * C20683) * C886 +
            (C19671 * C20736 + C92067 * C20737) * C800) *
               C92171) *
              C69237) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C41548 +
            (C20281 + C20297) * C92171) *
               C92362 +
           ((C24549 * C244 + C24753 * C92116) * C41548 +
            (C23916 + C23917) * C92171) *
               C92359 +
           ((C24556 * C244 + C24754 * C92116) * C41548 +
            (C34101 + C34102) * C92171) *
               C69237) *
              C92105 * C93 -
          (((C35738 + C35734) * C92171 +
            (C36640 * C92116 + C36431 * C244) * C41548) *
               C69237 +
           ((C25617 + C25609) * C92171 +
            (C26546 * C92116 + C26335 * C244) * C41548) *
               C92359 +
           ((C21348 + C21336) * C92171 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C41548) *
               C92362) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C41548 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C92171) *
               C92362 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C41548 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C92171) *
               C92359 +
           (((C19671 * C1392 + C92067 * C1404) * C244 +
             (C19671 * C1543 + C92067 * C1551) * C92116) *
                C41548 +
            ((C19671 * C5721 + C92067 * C5724) * C244 +
             (C19671 * C5887 + C92067 * C5890) * C92116) *
                C92171) *
               C69237) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C41548 +
            (C20281 + C20297) * C92171) *
               C92362 +
           ((C24549 * C244 + C24753 * C92116) * C41548 +
            (C23916 + C23917) * C92171) *
               C92359 +
           ((C24556 * C244 + C24754 * C92116) * C41548 +
            (C34101 + C34102) * C92171) *
               C69237) *
              C798 -
          (((C34103 + C34104) * C92171 + (C34102 + C34101) * C41548) * C69237 +
           ((C23919 + C23918) * C92171 + (C23917 + C23916) * C41548) * C92359 +
           ((C20298 + C20284) * C92171 + (C20297 + C20281) * C41548) * C92362) *
              C799 +
          ((C20301 * C41548 + C20302 * C92171) * C92362 +
           (C23922 * C41548 + (C23921 + C23920) * C92171) * C92359 +
           ((C34104 + C34103) * C41548 +
            ((C19671 * C20682 + C92067 * C20683) * C244 +
             (C19671 * C20788 + C92067 * C20789) * C92116) *
                C92171) *
               C69237) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C104 +
           (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
               C93 -
           (C41802 + C41803) * C105 - (C41804 + C41805) * C94 + C41814 * C106 +
           C41815 * C95) *
              C92362 +
          ((C53684 + C53685) * C104 + (C53686 + C53687) * C93 - C55998 * C105 -
           C55999 * C94 + (C45014 + C45015) * C106 + (C45016 + C45017) * C95) *
              C92359 +
          ((C53695 + C53694) * C104 + (C53693 + C53692) * C93 -
           (C53690 + C53691) * C105 - (C53688 + C53689) * C94 +
           (C41775 * C1392 + C41548 * C1609 + C41776 * C5721 + C92171 * C5967) *
               C106 +
           (C41775 * C1408 + C41548 * C1617 + C41776 * C5727 + C92171 * C5970) *
               C95) *
              C69237) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C801 +
            (C41775 * C117 + C41548 * C314 + C41776 * C813 + C92171 * C1030) *
                C92084) *
               C92362 +
           ((C53684 + C53685) * C801 + (C53686 + C53687) * C92084) * C92359 +
           ((C53695 + C53694) * C801 + (C53693 + C53692) * C92084) * C69237) *
              C92067 * C92116 * C798 -
          (((C41776 * C16099 + C92171 * C16335 + C41775 * C5725 +
             C41548 * C5968) *
                C92084 +
            (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
             C41548 * C5965) *
                C801) *
               C69237 +
           ((C57231 + C57230) * C92084 + (C57229 + C57228) * C801) * C92359 +
           ((C41776 * C822 + C92171 * C1031 + C41775 * C813 + C41548 * C1030) *
                C92084 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C801) *
               C92362) *
              C92067 * C92116 * C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C801 +
            (C41775 * C822 + C41548 * C1031 + C41776 * C4871 + C92171 * C5186) *
                C92084) *
               C92362 +
           ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C801 +
            (C41775 * C8418 + C41548 * C8769 + C41776 * C18736 +
             C92171 * C19092) *
                C92084) *
               C92359 +
           ((C41775 * C16095 + C41548 * C16333 + C41776 * C20682 +
             C92171 * C20840) *
                C801 +
            (C41775 * C16099 + C41548 * C16335 + C41776 * C20684 +
             C92171 * C20841) *
                C92084) *
               C69237) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C181 +
            (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
                C92105) *
               C92362 +
           ((C53684 + C53685) * C181 + (C53806 + C53807) * C92105) * C92359 +
           ((C53695 + C53694) * C181 + (C53811 + C53810) * C92105) * C69237) *
              C92067 * C93 -
          (((C53808 + C53809) * C92105 + (C53690 + C53691) * C181) * C69237 +
           C56139 * C92359 +
           ((C41904 + C41903) * C92105 + (C41802 + C41803) * C181) * C92362) *
              C92067 * C94 +
          (C41911 * C92362 +
           ((C45014 + C45015) * C181 + (C45126 + C45127) * C92105) * C92359 +
           ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
             C92171 * C5967) *
                C181 +
            (C41775 * C1474 + C41548 * C1675 + C41776 * C5807 +
             C92171 * C6047) *
                C92105) *
               C69237) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
               C884 +
           (C41775 * C182 + C41548 * C394 + C41776 * C890 + C92171 * C1085) *
               C798 -
           (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
               C885 -
           (C41776 * C891 + C92171 * C1086 + C41775 * C890 + C41548 * C1085) *
               C799 +
           (C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
               C886 +
           (C41775 * C891 + C41548 * C1086 + C41776 * C4987 + C92171 * C5263) *
               C800) *
              C92362 +
          ((C53684 + C53685) * C884 + (C53806 + C53807) * C798 -
           (C57229 + C57228) * C885 - (C57366 + C57367) * C799 +
           (C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
            C92171 * C19090) *
               C886 +
           (C41775 * C8540 + C41548 * C8870 + C41776 * C18862 +
            C92171 * C19192) *
               C800) *
              C92359 +
          ((C53695 + C53694) * C884 + (C53811 + C53810) * C798 -
           (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
            C41548 * C5965) *
               C885 -
           (C41776 * C16177 + C92171 * C16411 + C41775 * C5805 +
            C41548 * C6045) *
               C799 +
           (C41775 * C16095 + C41548 * C16333 + C41776 * C20682 +
            C92171 * C20840) *
               C886 +
           (C41775 * C16177 + C41548 * C16411 + C41776 * C20736 +
            C92171 * C20892) *
               C800) *
              C69237) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92362 +
           ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92359 +
           ((C53695 + C53694) * C244 + (C53924 + C53925) * C92116) * C69237) *
              C92067 * C92105 * C93 -
          (((C53927 + C53926) * C92116 + (C53690 + C53691) * C244) * C69237 +
           (C56270 * C92116 + C55998 * C244) * C92359 +
           ((C42001 + C42000) * C92116 + (C41802 + C41803) * C244) * C92362) *
              C92067 * C92105 * C94 +
          (C42008 * C92362 +
           ((C45014 + C45015) * C244 + (C45237 + C45236) * C92116) * C92359 +
           ((C41775 * C1392 + C41548 * C1609 + C41776 * C5721 +
             C92171 * C5967) *
                C244 +
            (C41775 * C1543 + C41548 * C1732 + C41776 * C5887 +
             C92171 * C6124) *
                C92116) *
               C69237) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C41775 * C107 + C41548 * C308 + C41776 * C805 + C92171 * C1022) *
                C244 +
            (C41775 * C245 + C41548 * C474 + C41776 * C956 + C92171 * C1146) *
                C92116) *
               C92362 +
           ((C53684 + C53685) * C244 + (C53923 + C53922) * C92116) * C92359 +
           ((C53695 + C53694) * C244 + (C53924 + C53925) * C92116) * C69237) *
              C92067 * C798 -
          (((C41776 * C16255 + C92171 * C16487 + C41775 * C5885 +
             C41548 * C6122) *
                C92116 +
            (C41776 * C16095 + C92171 * C16333 + C41775 * C5719 +
             C41548 * C5965) *
                C244) *
               C69237 +
           ((C57503 + C57502) * C92116 + (C57229 + C57228) * C244) * C92359 +
           ((C41776 * C957 + C92171 * C1147 + C41775 * C956 + C41548 * C1146) *
                C92116 +
            (C41776 * C806 + C92171 * C1023 + C41775 * C805 + C41548 * C1022) *
                C244) *
               C92362) *
              C92067 * C799 +
          (((C41775 * C806 + C41548 * C1023 + C41776 * C4865 + C92171 * C5183) *
                C244 +
            (C41775 * C957 + C41548 * C1147 + C41776 * C5085 + C92171 * C5340) *
                C92116) *
               C92362 +
           ((C41775 * C8412 + C41548 * C8766 + C41776 * C18732 +
             C92171 * C19090) *
                C244 +
            (C41775 * C8653 + C41548 * C8971 + C41776 * C18976 +
             C92171 * C19292) *
                C92116) *
               C92359 +
           ((C41775 * C16095 + C41548 * C16333 + C41776 * C20682 +
             C92171 * C20840) *
                C244 +
            (C41775 * C16255 + C41548 * C16487 + C41776 * C20788 +
             C92171 * C20943) *
                C92116) *
               C69237) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C104 +
                     (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                      C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                         C93 -
                     (C69710 + C69711 + C69712) * C105 -
                     (C69713 + C69714 + C69715) * C94 +
                     (C69716 + C69717 + C69718) * C106 +
                     (C69719 + C69720 + C69721) * C95) *
                        C92067 * C41548 +
                    ((C69682 * C805 + C92362 * C1204 + C69683 * C3431 +
                      C92359 * C3875 + C69684 * C5719 + C69237 * C6199) *
                         C104 +
                     (C69682 * C813 + C92362 * C1212 + C69683 * C3439 +
                      C92359 * C3879 + C69684 * C5725 + C69237 * C6202) *
                         C93 -
                     (C71974 + C71973 + C71972) * C105 -
                     (C71977 + C71976 + C71975) * C94 +
                     (C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                      C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                         C106 +
                     (C69682 * C811 + C92362 * C1210 + C69683 * C3441 +
                      C92359 * C3881 + C69684 * C5727 + C69237 * C6204) *
                         C95) *
                        C92067 * C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C801 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C92084) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C801 +
                      (C86233 + C86234 + C86235) * C92084) *
                         C92067 * C92171) *
                        C92116 * C798 -
                    (((C86236 + C86237 + C86238) * C92084 +
                      (C86239 + C86240 + C86241) * C801) *
                         C92067 * C92171 +
                     ((C86235 + C86234 + C86233) * C92084 +
                      (C86232 + C86231 + C86230) * C801) *
                         C92067 * C41548) *
                        C92116 * C799 +
                    (((C86241 + C86240 + C86239) * C801 +
                      (C86238 + C86237 + C86236) * C92084) *
                         C92067 * C41548 +
                     ((C69682 * C4865 + C92362 * C5417 + C69683 * C18732 +
                       C92359 * C19392 + C69684 * C20682 + C69237 * C20994) *
                          C801 +
                      (C69682 * C4871 + C92362 * C5420 + C69683 * C18736 +
                       C92359 * C19394 + C69684 * C20684 + C69237 * C20995) *
                          C92084) *
                         C92067 * C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C181 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C92105) *
                         C92067 * C41548 +
                     ((C69682 * C805 + C92362 * C1204 + C69683 * C3431 +
                       C92359 * C3875 + C69684 * C5719 + C69237 * C6199) *
                          C181 +
                      (C69682 * C890 + C92362 * C1267 + C69683 * C3513 +
                       C92359 * C3949 + C69684 * C5805 + C69237 * C6279) *
                          C92105) *
                         C92067 * C92171) *
                        C93 -
                    (((C72082 + C72083 + C72084) * C92105 +
                      (C71974 + C71973 + C71972) * C181) *
                         C92067 * C92171 +
                     ((C69810 + C69809 + C69808) * C92105 +
                      (C69710 + C69711 + C69712) * C181) *
                         C92067 * C41548) *
                        C94 +
                    (((C69716 + C69717 + C69718) * C181 +
                      (C69813 + C69812 + C69811) * C92105) *
                         C92067 * C41548 +
                     ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                       C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                          C181 +
                      (C69682 * C888 + C92362 * C1271 + C69683 * C3515 +
                       C92359 * C3951 + C69684 * C5807 + C69237 * C6281) *
                          C92105) *
                         C92067 * C92171) *
                        C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C884 +
                     (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                      C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                         C798 -
                     (C86232 + C86231 + C86230) * C885 -
                     (C86328 + C86329 + C86330) * C799 +
                     (C86241 + C86240 + C86239) * C886 +
                     (C86331 + C86332 + C86333) * C800) *
                        C92067 * C41548 +
                    ((C86230 + C86231 + C86232) * C884 +
                     (C86330 + C86329 + C86328) * C798 -
                     (C86239 + C86240 + C86241) * C885 -
                     (C86333 + C86332 + C86331) * C799 +
                     (C69682 * C4865 + C92362 * C5417 + C69683 * C18732 +
                      C92359 * C19392 + C69684 * C20682 + C69237 * C20994) *
                         C886 +
                     (C69682 * C4987 + C92362 * C5533 + C69683 * C18862 +
                      C92359 * C19504 + C69684 * C20736 + C69237 * C21046) *
                         C800) *
                        C92067 * C92171) *
                   C92084 * C92116) /
                      (p * q * std::sqrt(p + q));
    d2eezz[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C92067 * C41548 +
                     ((C69682 * C805 + C92362 * C1204 + C69683 * C3431 +
                       C92359 * C3875 + C69684 * C5719 + C69237 * C6199) *
                          C244 +
                      (C69682 * C956 + C92362 * C1328 + C69683 * C3587 +
                       C92359 * C4019 + C69684 * C5885 + C69237 * C6356) *
                          C92116) *
                         C92067 * C92171) *
                        C92105 * C93 -
                    (((C72189 + C72190 + C72191) * C92116 +
                      (C71974 + C71973 + C71972) * C244) *
                         C92067 * C92171 +
                     ((C69902 + C69901 + C69900) * C92116 +
                      (C69710 + C69711 + C69712) * C244) *
                         C92067 * C41548) *
                        C92105 * C94 +
                    (((C69716 + C69717 + C69718) * C244 +
                      (C69905 + C69904 + C69903) * C92116) *
                         C92067 * C41548 +
                     ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                       C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                          C244 +
                      (C69682 * C954 + C92362 * C1326 + C69683 * C3589 +
                       C92359 * C4021 + C69684 * C5887 + C69237 * C6358) *
                          C92116) *
                         C92067 * C92171) *
                        C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C92067 * C41548 +
                     ((C86230 + C86231 + C86232) * C244 +
                      (C86420 + C86421 + C86422) * C92116) *
                         C92067 * C92171) *
                        C798 -
                    (((C86423 + C86424 + C86425) * C92116 +
                      (C86239 + C86240 + C86241) * C244) *
                         C92067 * C92171 +
                     ((C86422 + C86421 + C86420) * C92116 +
                      (C86232 + C86231 + C86230) * C244) *
                         C92067 * C41548) *
                        C799 +
                    (((C86241 + C86240 + C86239) * C244 +
                      (C86425 + C86424 + C86423) * C92116) *
                         C92067 * C41548 +
                     ((C69682 * C4865 + C92362 * C5417 + C69683 * C18732 +
                       C92359 * C19392 + C69684 * C20682 + C69237 * C20994) *
                          C244 +
                      (C69682 * C5085 + C92362 * C5622 + C69683 * C18976 +
                       C92359 * C19607 + C69684 * C20788 + C69237 * C21097) *
                          C92116) *
                         C92067 * C92171) *
                        C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1987 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C1983 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C1988 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C1984) *
               C14523 +
           ((C15306 + C15307) * C1987 + (C15308 + C15309) * C1983 -
            (C16834 + C16835) * C1988 - (C16836 + C16837) * C1984) *
               C14524 +
           (C15318 * C1987 + C15319 * C1983 - (C16838 + C16839) * C1988 -
            (C16840 + C16841) * C1984) *
               C14525) *
              C92183 * C92116 * C1985 +
          (((C16835 + C16834) * C1988 -
            ((C15309 + C15308) * C1983 + (C15307 + C15306) * C1987) +
            (C16837 + C16836) * C1984) *
               C14523 +
           ((C16839 + C16838) * C1988 -
            ((C15313 + C15312) * C1983 + (C15311 + C15310) * C1987) +
            (C16841 + C16840) * C1984) *
               C14524 +
           ((C89875 * C4866 + C92322 * C4869 + C89868 * C4867 +
             C92072 * C4870) *
                C1988 -
            ((C15314 + C15315) * C1983 + (C15316 + C15317) * C1987) +
            (C89875 * C4872 + C92322 * C4875 + C89868 * C4873 +
             C92072 * C4876) *
                C1984) *
               C14525) *
              C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92157 * C92183 * C92116 * C1985 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C1988 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C1983 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C1987) +
           (C100 * C812 + C89 * C828 + C101 * C811 + C90 * C827 + C102 * C810 +
            C91 * C826 + C103 * C1991 + C92 * C1992) *
               C1984) *
              C92157 * C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1987 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C1983 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C1988 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C1984) *
               C92157 * C28197 +
           ((C29644 + C29645) * C1987 + (C29646 + C29647) * C1983 -
            (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
             C92322 * C1400) *
                C1988 -
            (C89868 * C1395 + C92072 * C1411 + C89875 * C1396 +
             C92322 * C1412) *
                C1984) *
               C92157 * C28198 +
           (C29656 * C1987 + C29657 * C1983 -
            (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
             C92322 * C1403) *
                C1988 -
            (C89868 * C1408 + C92072 * C1416 + C89875 * C1407 +
             C92322 * C1415) *
                C1984) *
               C92157 * C28199) *
              C92116 * C1985 +
          (((C16835 + C16834) * C1988 -
            ((C15309 + C15308) * C1983 + (C15307 + C15306) * C1987) +
            (C16837 + C16836) * C1984) *
               C92157 * C28197 +
           ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
             C92072 * C3437) *
                C1988 -
            ((C18761 + C18762) * C1983 + (C18763 + C18764) * C1987) +
            (C89875 * C3440 + C92322 * C3444 + C89868 * C3441 +
             C92072 * C3445) *
                C1984) *
               C92157 * C28198 +
           ((C89875 * C5720 + C92322 * C5723 + C89868 * C5721 +
             C92072 * C5724) *
                C1988 -
            ((C89868 * C5726 + C92072 * C5729 + C89875 * C5725 +
              C92322 * C5728) *
                 C1983 +
             (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
              C92322 * C5722) *
                 C1987) +
            (C89875 * C5726 + C92322 * C5729 + C89868 * C5727 +
             C92072 * C5730) *
                C1984) *
               C92157 * C28199) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2059 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C1985 -
            (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
               C14523 +
           ((C15306 + C15307) * C2059 + (C15414 + C15413) * C1985 -
            (C15311 + C15310) * C2060 - (C15416 + C15415) * C1986) *
               C14524 +
           (C15318 * C2059 + C15419 * C1985 - (C15316 + C15317) * C2060 -
            (C15418 + C15417) * C1986) *
               C14525) *
              C92183 * C1983 +
          (((C16835 + C16834) * C2060 -
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C1985 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C2059) +
            (C16948 + C16949) * C1986) *
               C14523 +
           ((C16839 + C16838) * C2060 -
            ((C16949 + C16948) * C1985 + (C16834 + C16835) * C2059) +
            (C16950 + C16951) * C1986) *
               C14524 +
           ((C89875 * C4866 + C92322 * C4869 + C89868 * C4867 +
             C92072 * C4870) *
                C2060 -
            ((C16951 + C16950) * C1985 + (C16838 + C16839) * C2059) +
            (C89875 * C4988 + C92322 * C4991 + C89868 * C4989 +
             C92072 * C4992) *
                C1986) *
               C14525) *
              C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92157 * C92183 * C1983 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C2060 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C1985 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2059) +
           (C100 * C889 + C89 * C897 + C101 * C888 + C90 * C896 + C102 * C887 +
            C91 * C895 + C103 * C2061 + C92 * C2062) *
               C1986) *
              C92157 * C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2059 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C1985 -
            (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
               C92157 * C28197 +
           ((C29644 + C29645) * C2059 + (C29753 + C29754) * C1985 -
            (C18763 + C18764) * C2060 - (C18876 + C18875) * C1986) *
               C92157 * C28198 +
           (C29656 * C2059 + C29759 * C1985 -
            (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
             C92322 * C5722) *
                C2060 -
            (C89868 * C5806 + C92072 * C5809 + C89875 * C5805 +
             C92322 * C5808) *
                C1986) *
               C92157 * C28199) *
              C1983 +
          (((C16835 + C16834) * C2060 -
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C1985 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C2059) +
            (C16948 + C16949) * C1986) *
               C92157 * C28197 +
           ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
             C92072 * C3437) *
                C2060 -
            ((C89868 * C1469 + C92072 * C1477 + C89875 * C1470 +
              C92322 * C1478) *
                 C1985 +
             (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
              C92322 * C1400) *
                 C2059) +
            (C89875 * C3514 + C92322 * C3518 + C89868 * C3515 +
             C92072 * C3519) *
                C1986) *
               C92157 * C28198 +
           ((C89875 * C5720 + C92322 * C5723 + C89868 * C5721 +
             C92072 * C5724) *
                C2060 -
            ((C89868 * C1474 + C92072 * C1482 + C89875 * C1473 +
              C92322 * C1481) *
                 C1985 +
             (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
              C92322 * C1403) *
                 C2059) +
            (C89875 * C5806 + C92322 * C5809 + C89868 * C5807 +
             C92072 * C5810) *
                C1986) *
               C92157 * C28199) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C14523 +
            ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C14524 +
            C15519 * C14525) *
               C92183 * C1985 -
           (((C15515 + C15516) * C92116 + (C15316 + C15317) * C244) * C14525 +
            ((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C14524 +
            ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C14523) *
               C92183 * C1986) *
              C1983 +
          ((((C16835 + C16834) * C244 + (C17058 + C17059) * C92116) * C14523 +
            ((C16839 + C16838) * C244 + (C17060 + C17061) * C92116) * C14524 +
            ((C89875 * C4866 + C92322 * C4869 + C89868 * C4867 +
              C92072 * C4870) *
                 C244 +
             (C89875 * C5086 + C92322 * C5089 + C89868 * C5087 +
              C92072 * C5090) *
                 C92116) *
                C14525) *
               C92183 * C1986 -
           (((C17061 + C17060) * C92116 + (C16838 + C16839) * C244) * C14525 +
            ((C17059 + C17058) * C92116 + (C16834 + C16835) * C244) * C14524 +
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C92116 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C244) *
                C14523) *
               C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C244 +
            (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
             C91 * C253 + C103 * C248 + C92 * C254) *
                C92116) *
               C92157 * C92183 * C1985 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C92116 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C244) *
               C92157 * C92183 * C1986) *
              C1983 +
          (((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
             C91 * C814 + C103 * C1989 + C92 * C1990) *
                C244 +
            (C100 * C955 + C89 * C963 + C101 * C954 + C90 * C962 + C102 * C953 +
             C91 * C961 + C103 * C2129 + C92 * C2130) *
                C92116) *
               C92157 * C92183 * C1986 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C92116 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C244) *
               C92157 * C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C92157 * C28197 +
            ((C29644 + C29645) * C244 + (C29854 + C29853) * C92116) * C92157 *
                C28198 +
            (C29656 * C244 + C29859 * C92116) * C92157 * C28199) *
               C1985 -
           (((C89868 * C5886 + C92072 * C5889 + C89875 * C5885 +
              C92322 * C5888) *
                 C92116 +
             (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
              C92322 * C5722) *
                 C244) *
                C92157 * C28199 +
            ((C18989 + C18990) * C92116 + (C18763 + C18764) * C244) * C92157 *
                C28198 +
            ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C92157 *
                C28197) *
               C1986) *
              C1983 +
          ((((C16835 + C16834) * C244 + (C17058 + C17059) * C92116) * C92157 *
                C28197 +
            ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
              C92072 * C3437) *
                 C244 +
             (C89875 * C3588 + C92322 * C3592 + C89868 * C3589 +
              C92072 * C3593) *
                 C92116) *
                C92157 * C28198 +
            ((C89875 * C5720 + C92322 * C5723 + C89868 * C5721 +
              C92072 * C5724) *
                 C244 +
             (C89875 * C5886 + C92322 * C5889 + C89868 * C5887 +
              C92072 * C5890) *
                 C92116) *
                C92157 * C28199) *
               C1986 -
           (((C89868 * C1543 + C92072 * C1551 + C89875 * C1542 +
              C92322 * C1550) *
                 C92116 +
             (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
              C92322 * C1403) *
                 C244) *
                C92157 * C28199 +
            ((C89868 * C1538 + C92072 * C1546 + C89875 * C1539 +
              C92322 * C1547) *
                 C92116 +
             (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
              C92322 * C1400) *
                 C244) *
                C92157 * C28198 +
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C92116 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C244) *
                C92157 * C28197) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C1987 +
            (C14783 + C14782 + C14781) * C1983 -
            (C14786 + C14785 + C14784) * C1988 -
            (C14789 + C14788 + C14787) * C1984) *
               C92183 * C92072) *
              C92116 * C1985 +
          (((C17172 + C17173 + C17174) * C1988 -
            ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
              C14750 * C813 + C14523 * C1030) *
                 C1983 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C1987) +
            (C17175 + C17176 + C17177) * C1984) *
               C92183 * C92322 +
           ((C14750 * C803 + C14523 * C1020 + C14751 * C808 + C14524 * C1025 +
             C14752 * C4867 + C14525 * C5185) *
                C1988 -
            ((C17177 + C17176 + C17175) * C1983 +
             (C17174 + C17173 + C17172) * C1987) +
            (C14750 * C811 + C14523 * C1028 + C14751 * C824 + C14524 * C1033 +
             C14752 * C4873 + C14525 * C5188) *
                C1984) *
               C92183 * C92072) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1987 +
            (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92183 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92183 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92183 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92183 * C92) *
              C92116 * C1985 +
          ((C2212 * C1988 -
            ((C307 * C813 + C92157 * C1030) * C1983 +
             (C307 * C805 + C92157 * C1022) * C1987) +
            C2213 * C1984) *
               C92183 * C89 +
           (C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
               C92183 * C90 +
           (C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
               C92183 * C91 +
           ((C307 * C1989 + C92157 * C2197) * C1988 -
            (C2217 * C1983 + C2216 * C1987) +
            (C307 * C1991 + C92157 * C2198) * C1984) *
               C92183 * C92) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C28197 +
            (C12983 + C12984 - C12985 - C12986) * C28198 +
            (C11160 * C1987 + C11159 * C1983 - C11158 * C1988 -
             C11157 * C1984) *
                C28199) *
               C92322 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C28197 +
            (C12987 + C12988 - C12989 - C12990) * C28198 +
            (C11158 * C1987 + C11157 * C1983 - C11156 * C1988 -
             C11155 * C1984) *
                C28199) *
               C92072) *
              C92116 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92157 * C1030) * C1983 +
              (C307 * C805 + C92157 * C1022) * C1987) +
             C2213 * C1984) *
                C28197 +
            (C11989 * C1988 - (C13945 * C1983 + C13944 * C1987) +
             C11990 * C1984) *
                C28198 +
            (C30752 * C1988 -
             ((C307 * C5725 + C92157 * C5968) * C1983 +
              (C307 * C5719 + C92157 * C5965) * C1987) +
             C30753 * C1984) *
                C28199) *
               C92322 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C28197 +
            (C11991 * C1988 - (C11990 * C1983 + C11989 * C1987) +
             C11992 * C1984) *
                C28198 +
            ((C307 * C5721 + C92157 * C5967) * C1988 -
             (C30753 * C1983 + C30752 * C1987) +
             (C307 * C5727 + C92157 * C5970) * C1984) *
                C28199) *
               C92072) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[30] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2059 +
                      (C14876 + C14877 + C14878) * C1985 -
                      (C17174 + C17173 + C17172) * C2060 -
                      (C17282 + C17283 + C17284) * C1986) *
                         C92183 * C92072) *
                        C1983 +
                    (((C17172 + C17173 + C17174) * C2060 -
                      ((C14878 + C14877 + C14876) * C1985 +
                       (C14778 + C14779 + C14780) * C2059) +
                      (C17284 + C17283 + C17282) * C1986) *
                         C92183 * C92322 +
                     ((C14750 * C803 + C14523 * C1020 + C14751 * C808 +
                       C14524 * C1025 + C14752 * C4867 + C14525 * C5185) *
                          C2060 -
                      ((C14879 + C14880 + C14881) * C1985 +
                       (C14786 + C14785 + C14784) * C2059) +
                      (C14750 * C888 + C14523 * C1089 + C14751 * C893 +
                       C14524 * C1090 + C14752 * C4989 + C14525 * C5265) *
                          C1986) *
                         C92183 * C92072) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2059 +
                      (C307 * C182 + C92157 * C394) * C1985 -
                      (C307 * C805 + C92157 * C1022) * C2060 -
                      (C307 * C890 + C92157 * C1085) * C1986) *
                         C92183 * C89 +
                     (C2285 + C2286 - C2287 - C2303) * C92183 * C90 +
                     (C2290 + C2291 - C2292 - C2304) * C92183 * C91 +
                     (C2295 + C2296 - C2297 - C2305) * C92183 * C92) *
                        C1983 +
                    ((C2287 - (C2286 + C2285) + C2303) * C92183 * C89 +
                     (C2292 - (C2291 + C2290) + C2304) * C92183 * C90 +
                     (C2297 - (C2296 + C2295) + C2305) * C92183 * C91 +
                     ((C307 * C1989 + C92157 * C2197) * C2060 -
                      (C416 * C1985 + C343 * C2059) +
                      (C307 * C2061 + C92157 * C2283) * C1986) *
                         C92183 * C92) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C28197 +
                      (C14046 + C14047 - C14048 - C14052) * C28198 +
                      (C11160 * C2059 + C11261 * C1985 -
                       (C307 * C5719 + C92157 * C5965) * C2060 -
                       (C307 * C5805 + C92157 * C6045) * C1986) *
                          C28199) *
                         C92322 +
                     ((C2285 + C2286 - C2287 - C2303) * C28197 +
                      (C12091 + C12092 - C12093 - C12103) * C28198 +
                      (C30852 + C30853 - C30854 - C30858) * C28199) *
                         C92072) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C28197 +
                      (C12093 - (C12092 + C12091) + C12103) * C28198 +
                      (C30854 - (C30853 + C30852) + C30858) * C28199) *
                         C92322 +
                     ((C2292 - (C2291 + C2290) + C2304) * C28197 +
                      (C12098 - (C12097 + C12096) + C12104) * C28198 +
                      ((C307 * C5721 + C92157 * C5967) * C2060 -
                       (C11259 * C1985 + C11156 * C2059) +
                       (C307 * C5807 + C92157 * C6047) * C1986) *
                          C28199) *
                         C92072) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C244 +
             (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
              C14752 * C957 + C14525 * C1147) *
                 C92116) *
                C92183 * C92322 +
            ((C14780 + C14779 + C14778) * C244 +
             (C14968 + C14969 + C14970) * C92116) *
                C92183 * C92072) *
               C1985 -
           (((C17389 + C17390 + C17391) * C92116 +
             (C17174 + C17173 + C17172) * C244) *
                C92183 * C92072 +
            ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
              C14750 * C956 + C14523 * C1146) *
                 C92116 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C244) *
                C92183 * C92322) *
               C1986) *
              C1983 +
          ((((C17172 + C17173 + C17174) * C244 +
             (C17391 + C17390 + C17389) * C92116) *
                C92183 * C92322 +
            ((C14750 * C803 + C14523 * C1020 + C14751 * C808 + C14524 * C1025 +
              C14752 * C4867 + C14525 * C5185) *
                 C244 +
             (C14750 * C954 + C14523 * C1144 + C14751 * C959 + C14524 * C1149 +
              C14752 * C5087 + C14525 * C5342) *
                 C92116) *
                C92183 * C92072) *
               C1986 -
           (((C14971 + C14972 + C14973) * C92116 +
             (C14786 + C14785 + C14784) * C244) *
                C92183 * C92072 +
            ((C14970 + C14969 + C14968) * C92116 +
             (C14778 + C14779 + C14780) * C244) *
                C92183 * C92322) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92183 * C89 +
            (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
               C1985 -
           ((C2385 + C2375) * C92183 * C92 + (C2386 + C2378) * C92183 * C91 +
            (C2387 + C2381) * C92183 * C90 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92183 * C89) *
               C1986) *
              C1983 +
          (((C2381 + C2387) * C92183 * C89 + (C2378 + C2386) * C92183 * C90 +
            (C2375 + C2385) * C92183 * C91 +
            ((C307 * C1989 + C92157 * C2197) * C244 +
             (C307 * C2129 + C92157 * C2371) * C92116) *
                C92183 * C92) *
               C1986 -
           ((C500 + C492) * C92183 * C92 + (C499 + C487) * C92183 * C91 +
            (C498 + C484) * C92183 * C90 + (C497 + C481) * C92183 * C89) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C244 +
              (C307 * C245 + C92157 * C474) * C92116) *
                 C28197 +
             (C11153 * C244 + C11351 * C92116) * C28198 +
             (C11160 * C244 + C11352 * C92116) * C28199) *
                C92322 +
            ((C481 + C497) * C28197 + (C9753 + C9754) * C28198 +
             (C28571 + C28572) * C28199) *
                C92072) *
               C1985 -
           (((C30961 + C30959) * C28199 + (C12212 + C12208) * C28198 +
             (C2387 + C2381) * C28197) *
                C92072 +
            (((C307 * C5885 + C92157 * C6122) * C92116 +
              (C307 * C5719 + C92157 * C5965) * C244) *
                 C28199 +
             (C14153 * C92116 + C13944 * C244) * C28198 +
             ((C307 * C956 + C92157 * C1146) * C92116 +
              (C307 * C805 + C92157 * C1022) * C244) *
                 C28197) *
                C92322) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C28197 + (C12208 + C12212) * C28198 +
             (C30959 + C30961) * C28199) *
                C92322 +
            ((C2378 + C2386) * C28197 + (C12205 + C12211) * C28198 +
             ((C307 * C5721 + C92157 * C5967) * C244 +
              (C307 * C5887 + C92157 * C6124) * C92116) *
                 C28199) *
                C92072) *
               C1986 -
           (((C28573 + C28574) * C28199 + (C9757 + C9756) * C28198 +
             (C498 + C484) * C28197) *
                C92072 +
            ((C28572 + C28571) * C28199 + (C9754 + C9753) * C28198 +
             (C497 + C481) * C28197) *
                C92322) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92322 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92072) *
               C14523 +
           ((C7130 + C7131 - C7132 - C7133) * C92322 +
            (C7134 + C7135 - C7136 - C7137) * C92072) *
               C14524 +
           ((C17490 + C17491 - C17492 - C17493) * C92322 +
            (C17494 + C17495 - C17496 - C17497) * C92072) *
               C14525) *
              C92116 * C1985 +
          (((C7132 - (C7131 + C7130) + C7133) * C92322 +
            (C7136 - (C7135 + C7134) + C7137) * C92072) *
               C14523 +
           ((C17492 - (C17491 + C17490) + C17493) * C92322 +
            (C17496 - (C17495 + C17494) + C17497) * C92072) *
               C14524 +
           ((C15841 * C1988 - (C15842 * C1983 + C15843 * C1987) +
             C15840 * C1984) *
                C92322 +
            ((C554 * C4867 + C92183 * C5419) * C1988 -
             (C15840 * C1983 + C15841 * C1987) +
             (C554 * C4873 + C92183 * C5422) * C1984) *
                C92072) *
               C14525) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92157 * C92116 * C1985 +
          ((C2468 * C1988 -
            ((C554 * C813 + C92183 * C1212) * C1983 +
             (C554 * C805 + C92183 * C1204) * C1987) +
            C2469 * C1984) *
               C89 +
           (C2470 * C1988 - (C2469 * C1983 + C2468 * C1987) + C2471 * C1984) *
               C90 +
           (C2472 * C1988 - (C2471 * C1983 + C2470 * C1987) + C2473 * C1984) *
               C91 +
           ((C554 * C1989 + C92183 * C2453) * C1988 -
            (C2473 * C1983 + C2472 * C1987) +
            (C554 * C1991 + C92183 * C2454) * C1984) *
               C92) *
              C92157 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C1987 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C1983 -
            (C28676 + C28677 + C28678) * C1988 -
            (C28679 + C28680 + C28681) * C1984) *
               C92322 +
           ((C28678 + C28677 + C28676) * C1987 +
            (C28681 + C28680 + C28679) * C1983 -
            (C28684 + C28683 + C28682) * C1988 -
            (C28687 + C28686 + C28685) * C1984) *
               C92072) *
              C92157 * C92116 * C1985 +
          (((C31072 + C31073 + C31074) * C1988 -
            ((C28650 * C5725 + C28199 * C6202 + C28649 * C3439 +
              C28198 * C3879 + C28648 * C813 + C28197 * C1212) *
                 C1983 +
             (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 +
              C28198 * C3875 + C28648 * C805 + C28197 * C1204) *
                 C1987) +
            (C31075 + C31076 + C31077) * C1984) *
               C92322 +
           ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
             C28650 * C5721 + C28199 * C6201) *
                C1988 -
            ((C31077 + C31076 + C31075) * C1983 +
             (C31074 + C31073 + C31072) * C1987) +
            (C28648 * C811 + C28197 * C1210 + C28649 * C3441 + C28198 * C3881 +
             C28650 * C5727 + C28199 * C6204) *
                C1984) *
               C92072) *
              C92157 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C92322 +
            (C2541 + C2542 - C2543 - C2559) * C92072) *
               C14523 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C92322 +
            (C7240 + C7241 - C7242 - C7243) * C92072) *
               C14524 +
           ((C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
                C92322 +
            (C17596 + C17597 - C17598 - C17599) * C92072) *
               C14525) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C92322 +
            (C2548 - (C2547 + C2546) + C2560) * C92072) *
               C14523 +
           ((C7242 - (C7241 + C7240) + C7243) * C92322 +
            (C7246 - (C7245 + C7244) + C7247) * C92072) *
               C14524 +
           ((C17598 - (C17597 + C17596) + C17599) * C92322 +
            ((C554 * C4867 + C92183 * C5419) * C2060 -
             (C5548 * C1985 + C5447 * C2059) +
             (C554 * C4989 + C92183 * C5535) * C1986) *
                C92072) *
               C14525) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 -
            (C554 * C805 + C92183 * C1204) * C2060 -
            (C554 * C890 + C92183 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92157 * C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C89 +
           (C2548 - (C2547 + C2546) + C2560) * C90 +
           (C2553 - (C2552 + C2551) + C2561) * C91 +
           ((C554 * C1989 + C92183 * C2453) * C2060 -
            (C663 * C1985 + C590 * C2059) +
            (C554 * C2061 + C92183 * C2539) * C1986) *
               C92) *
              C92157 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C2059 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C1985 -
            (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
             C28648 * C805 + C28197 * C1204) *
                C2060 -
            (C28650 * C5805 + C28199 * C6279 + C28649 * C3513 + C28198 * C3949 +
             C28648 * C890 + C28197 * C1267) *
                C1986) *
               C92322 +
           ((C28678 + C28677 + C28676) * C2059 +
            (C28774 + C28775 + C28776) * C1985 -
            (C31074 + C31073 + C31072) * C2060 -
            (C31182 + C31183 + C31184) * C1986) *
               C92072) *
              C92157 * C1983 +
          (((C31072 + C31073 + C31074) * C2060 -
            ((C28776 + C28775 + C28774) * C1985 +
             (C28676 + C28677 + C28678) * C2059) +
            (C31184 + C31183 + C31182) * C1986) *
               C92322 +
           ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
             C28650 * C5721 + C28199 * C6201) *
                C2060 -
            ((C28777 + C28778 + C28779) * C1985 +
             (C28684 + C28683 + C28682) * C2059) +
            (C28648 * C888 + C28197 * C1271 + C28649 * C3515 + C28198 * C3951 +
             C28650 * C5807 + C28199 * C6281) *
                C1986) *
               C92072) *
              C92157 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C244 +
              (C554 * C245 + C92183 * C719) * C92116) *
                 C92322 +
             (C726 + C742) * C92072) *
                C14523 +
            ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
            C16019 * C14525) *
               C1985 -
           (((C16020 + C16011) * C92072 + (C16021 + C16014) * C92322) * C14525 +
            (C17698 * C92072 + (C5645 + C5637) * C92322) * C14524 +
            (C7348 * C92072 + (C5642 + C5626) * C92322) * C14523) *
               C1986) *
              C1983 +
          (((C7346 * C92322 + C4791 * C92072) * C14523 +
            (C16008 * C92322 + (C5631 + C5643) * C92072) * C14524 +
            ((C16011 + C16020) * C92322 +
             ((C554 * C4867 + C92183 * C5419) * C244 +
              (C554 * C5087 + C92183 * C5624) * C92116) *
                 C92072) *
                C14525) *
               C1986 -
           (((C5643 + C5631) * C92072 + C17698 * C92322) * C14525 +
            (C7347 * C92072 + C7348 * C92322) * C14524 +
            ((C743 + C729) * C92072 + (C742 + C726) * C92322) * C14523) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C89 +
            (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
               C92157 * C1985 -
           ((C2641 + C2631) * C92 + (C2642 + C2634) * C91 +
            (C2643 + C2637) * C90 +
            ((C554 * C956 + C92183 * C1328) * C92116 +
             (C554 * C805 + C92183 * C1204) * C244) *
                C89) *
               C92157 * C1986) *
              C1983 +
          (((C2637 + C2643) * C89 + (C2634 + C2642) * C90 +
            (C2631 + C2641) * C91 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C92) *
               C92157 * C1986 -
           ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
            (C742 + C726) * C89) *
               C92157 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
              C28650 * C1390 + C28199 * C1789) *
                 C244 +
             (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
              C28650 * C1541 + C28199 * C1910) *
                 C92116) *
                C92322 +
            ((C28678 + C28677 + C28676) * C244 +
             (C28866 + C28867 + C28868) * C92116) *
                C92072) *
               C92157 * C1985 -
           (((C31289 + C31290 + C31291) * C92116 +
             (C31074 + C31073 + C31072) * C244) *
                C92072 +
            ((C28650 * C5885 + C28199 * C6356 + C28649 * C3587 +
              C28198 * C4019 + C28648 * C956 + C28197 * C1328) *
                 C92116 +
             (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 +
              C28198 * C3875 + C28648 * C805 + C28197 * C1204) *
                 C244) *
                C92322) *
               C92157 * C1986) *
              C1983 +
          ((((C31072 + C31073 + C31074) * C244 +
             (C31291 + C31290 + C31289) * C92116) *
                C92322 +
            ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
              C28650 * C5721 + C28199 * C6201) *
                 C244 +
             (C28648 * C954 + C28197 * C1326 + C28649 * C3589 + C28198 * C4021 +
              C28650 * C5887 + C28199 * C6358) *
                 C92116) *
                C92072) *
               C92157 * C1986 -
           (((C28869 + C28870 + C28871) * C92116 +
             (C28684 + C28683 + C28682) * C244) *
                C92072 +
            ((C28868 + C28867 + C28866) * C92116 +
             (C28676 + C28677 + C28678) * C244) *
                C92322) *
               C92157 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C801 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C92084) *
                C14523 +
            ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
            C15322 * C14525) *
               C92183 * C2709 -
           (((C18757 + C18758) * C92084 + (C18759 + C18760) * C801) * C14525 +
            ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C14524 +
            ((C89868 * C1396 + C92072 * C1412 + C89875 * C1397 +
              C92322 * C1413) *
                 C92084 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C801) *
                C14523) *
               C92183 * C2710) *
              C1985 +
          ((((C18764 + C18763) * C801 + (C18762 + C18761) * C92084) * C14523 +
            ((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C14524 +
            ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C89875 * C18736 + C92322 * C18738 + C89868 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C14525) *
               C92183 * C2710 -
           (((C15314 + C15315) * C92084 + (C15316 + C15317) * C801) * C14525 +
            ((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C14524 +
            ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C14523) *
               C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C801 +
            (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
             C91 * C127 + C103 * C120 + C92 * C128) *
                C92084) *
               C92157 * C92183 * C2709 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C92084 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C801) *
               C92157 * C92183 * C2710) *
              C1985 +
          (((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
             C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
                C801 +
            (C100 * C3439 + C89 * C3443 + C101 * C3440 + C90 * C3444 +
             C102 * C3441 + C91 * C3445 + C103 * C3442 + C92 * C3446) *
                C92084) *
               C92157 * C92183 * C2710 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C92084 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C801) *
               C92157 * C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C801 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C92084) *
                C92157 * C28197 +
            ((C29644 + C29645) * C801 + (C29646 + C29647) * C92084) * C92157 *
                C28198 +
            C29661 * C28199) *
               C2709 -
           (((C29652 + C29653) * C92084 + (C29654 + C29655) * C801) * C92157 *
                C28199 +
            ((C29651 + C29650) * C92084 + (C29649 + C29648) * C801) * C92157 *
                C28198 +
            ((C29647 + C29646) * C92084 + (C29645 + C29644) * C801) * C92157 *
                C28197) *
               C2710) *
              C1985 +
          ((((C18764 + C18763) * C801 + (C18762 + C18761) * C92084) * C92157 *
                C28197 +
            ((C32381 + C32382) * C801 + (C32383 + C32384) * C92084) * C92157 *
                C28198 +
            ((C89875 * C24524 + C92322 * C24526 + C89868 * C32368 +
              C92072 * C32369) *
                 C801 +
             (C89875 * C24527 + C92322 * C24530 + C89868 * C32370 +
              C92072 * C32371) *
                 C92084) *
                C92157 * C28199) *
               C2710 -
           (((C32384 + C32383) * C92084 + (C32382 + C32381) * C801) * C92157 *
                C28199 +
            ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C92157 *
                C28198 +
            ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C92157 *
                C28197) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2059 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C1985 -
            (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
               C14523 +
           ((C15306 + C15307) * C2059 + (C15414 + C15413) * C1985 -
            (C15311 + C15310) * C2060 - (C15416 + C15415) * C1986) *
               C14524 +
           (C15318 * C2059 + C15419 * C1985 - (C15316 + C15317) * C2060 -
            (C15418 + C15417) * C1986) *
               C14525) *
              C92183 * C92084 * C2709 +
          (((C18764 + C18763) * C2060 -
            ((C89868 * C1470 + C92072 * C1478 + C89875 * C1471 +
              C92322 * C1479) *
                 C1985 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C2059) +
            (C18875 + C18876) * C1986) *
               C14523 +
           ((C18760 + C18759) * C2060 -
            ((C18876 + C18875) * C1985 + (C18763 + C18764) * C2059) +
            (C18877 + C18878) * C1986) *
               C14524 +
           ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
             C92072 * C18735) *
                C2060 -
            ((C18878 + C18877) * C1985 + (C18759 + C18760) * C2059) +
            (C89875 * C18862 + C92322 * C18864 + C89868 * C18863 +
             C92072 * C18865) *
                C1986) *
               C14525) *
              C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92157 * C92183 * C92084 * C2709 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2060 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C1985 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C2059) +
           (C100 * C3513 + C89 * C3517 + C101 * C3514 + C90 * C3518 +
            C102 * C3515 + C91 * C3519 + C103 * C3516 + C92 * C3520) *
               C1986) *
              C92157 * C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2059 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C1985 -
            (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
               C92157 * C28197 +
           ((C29644 + C29645) * C2059 + (C29753 + C29754) * C1985 -
            (C18763 + C18764) * C2060 - (C18876 + C18875) * C1986) *
               C92157 * C28198 +
           (C29656 * C2059 + C29759 * C1985 - (C32382 + C32381) * C2060 -
            (C32489 + C32490) * C1986) *
               C92157 * C28199) *
              C92084 * C2709 +
          (((C18764 + C18763) * C2060 -
            ((C29754 + C29753) * C1985 + (C29645 + C29644) * C2059) +
            (C18875 + C18876) * C1986) *
               C92157 * C28197 +
           ((C32381 + C32382) * C2060 -
            ((C29756 + C29755) * C1985 + (C29649 + C29648) * C2059) +
            (C32490 + C32489) * C1986) *
               C92157 * C28198 +
           ((C89875 * C24524 + C92322 * C24526 + C89868 * C32368 +
             C92072 * C32369) *
                C2060 -
            ((C29757 + C29758) * C1985 + (C29654 + C29655) * C2059) +
            (C89875 * C24638 + C92322 * C24640 + C89868 * C32482 +
             C92072 * C32483) *
                C1986) *
               C92157 * C28199) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2849 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C2709 -
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C2850 -
            (C89868 * C1539 + C92072 * C1547 + C89875 * C1540 +
             C92322 * C1548) *
                C2710) *
               C14523 +
           ((C15306 + C15307) * C2849 + (C15511 + C15512) * C2709 -
            (C18763 + C18764) * C2850 - (C18989 + C18990) * C2710) *
               C14524 +
           (C15318 * C2849 + C15517 * C2709 - (C18759 + C18760) * C2850 -
            (C18991 + C18992) * C2710) *
               C14525) *
              C92183 * C1985 +
          (((C18764 + C18763) * C2850 -
            ((C15512 + C15511) * C2709 + (C15307 + C15306) * C2849) +
            (C18990 + C18989) * C2710) *
               C14523 +
           ((C18760 + C18759) * C2850 -
            ((C15514 + C15513) * C2709 + (C15311 + C15310) * C2849) +
            (C18992 + C18991) * C2710) *
               C14524 +
           ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
             C92072 * C18735) *
                C2850 -
            ((C15515 + C15516) * C2709 + (C15316 + C15317) * C2849) +
            (C89875 * C18976 + C92322 * C18978 + C89868 * C18977 +
             C92072 * C18979) *
                C2710) *
               C14525) *
              C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92157 * C92183 * C1985 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2850 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C2709 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C2849) +
           (C100 * C3587 + C89 * C3591 + C101 * C3588 + C90 * C3592 +
            C102 * C3589 + C91 * C3593 + C103 * C3590 + C92 * C3594) *
               C2710) *
              C92157 * C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2849 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C2709 -
            (C29645 + C29644) * C2850 - (C29853 + C29854) * C2710) *
               C92157 * C28197 +
           ((C29644 + C29645) * C2849 + (C29854 + C29853) * C2709 -
            (C29649 + C29648) * C2850 - (C29856 + C29855) * C2710) *
               C92157 * C28198 +
           (C29656 * C2849 + C29859 * C2709 - (C29654 + C29655) * C2850 -
            (C29858 + C29857) * C2710) *
               C92157 * C28199) *
              C1985 +
          (((C18764 + C18763) * C2850 -
            ((C15512 + C15511) * C2709 + (C15307 + C15306) * C2849) +
            (C18990 + C18989) * C2710) *
               C92157 * C28197 +
           ((C32381 + C32382) * C2850 -
            ((C18989 + C18990) * C2709 + (C18763 + C18764) * C2849) +
            (C32595 + C32596) * C2710) *
               C92157 * C28198 +
           ((C89875 * C24524 + C92322 * C24526 + C89868 * C32368 +
             C92072 * C32369) *
                C2850 -
            ((C32596 + C32595) * C2709 + (C32382 + C32381) * C2849) +
            (C89875 * C24740 + C92322 * C24742 + C89868 * C32588 +
             C92072 * C32589) *
                C2710) *
               C92157 * C28199) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[31] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                        C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                           C801 +
                       (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                        C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                           C92084) *
                          C92183 * C92322 +
                      ((C14780 + C14779 + C14778) * C801 +
                       (C14783 + C14782 + C14781) * C92084) *
                          C92183 * C92072) *
                         C2709 -
                     (((C18108 + C18107 + C18106) * C92084 +
                       (C18105 + C18104 + C18103) * C801) *
                          C92183 * C92072 +
                      ((C14752 * C8418 + C14525 * C8769 + C14751 * C3439 +
                        C14524 * C3665 + C14750 * C1397 + C14523 * C1614) *
                           C92084 +
                       (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                        C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                           C801) *
                          C92183 * C92322) *
                         C2710) *
                        C1985 +
                    ((((C14750 * C3431 + C14523 * C3661 + C14751 * C8412 +
                        C14524 * C8766 + C14752 * C18732 + C14525 * C19090) *
                           C801 +
                       (C14750 * C3439 + C14523 * C3665 + C14751 * C8418 +
                        C14524 * C8769 + C14752 * C18736 + C14525 * C19092) *
                           C92084) *
                          C92183 * C92322 +
                      ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                        C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                           C801 +
                       (C14750 * C3440 + C14523 * C3666 + C14751 * C8419 +
                        C14524 * C8770 + C14752 * C18737 + C14525 * C19093) *
                           C92084) *
                          C92183 * C92072) *
                         C2710 -
                     (((C17177 + C17176 + C17175) * C92084 +
                       (C17174 + C17173 + C17172) * C801) *
                          C92183 * C92072 +
                      ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                        C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                           C92084 +
                       (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                        C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                           C801) *
                          C92183 * C92322) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C92183 * C89 +
                      (C337 * C801 + C338 * C92084) * C92183 * C90 +
                      (C339 * C801 + C340 * C92084) * C92183 * C91 +
                      (C341 * C801 + C342 * C92084) * C92183 * C92) *
                         C2709 -
                     ((C2939 * C92084 + C2938 * C801) * C92183 * C92 +
                      (C2937 * C92084 + C2936 * C801) * C92183 * C91 +
                      (C2935 * C92084 + C2934 * C801) * C92183 * C90 +
                      ((C307 * C1397 + C92157 * C1614) * C92084 +
                       (C307 * C1389 + C92157 * C1606) * C801) *
                          C92183 * C89) *
                         C2710) *
                        C1985 +
                    ((((C307 * C3431 + C92157 * C3661) * C801 +
                       (C307 * C3439 + C92157 * C3665) * C92084) *
                          C92183 * C89 +
                      ((C307 * C3432 + C92157 * C3662) * C801 +
                       (C307 * C3440 + C92157 * C3666) * C92084) *
                          C92183 * C90 +
                      ((C307 * C3433 + C92157 * C3663) * C801 +
                       (C307 * C3441 + C92157 * C3667) * C92084) *
                          C92183 * C91 +
                      ((C307 * C3434 + C92157 * C3664) * C801 +
                       (C307 * C3442 + C92157 * C3668) * C92084) *
                          C92183 * C92) *
                         C2710 -
                     ((C2217 * C92084 + C2216 * C801) * C92183 * C92 +
                      (C2215 * C92084 + C2214 * C801) * C92183 * C91 +
                      (C2213 * C92084 + C2212 * C801) * C92183 * C90 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C92183 * C89) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((((C307 * C107 + C92157 * C308) * C801 +
                        (C307 * C117 + C92157 * C314) * C92084) *
                           C28197 +
                       (C11161 + C11162) * C28198 + C29938 * C28199) *
                          C92322 +
                      ((C337 * C801 + C338 * C92084) * C28197 +
                       (C11137 + C11138) * C28198 + C29939 * C28199) *
                          C92072) *
                         C2709 -
                     (((C29952 + C29953) * C28199 + (C11165 + C11166) * C28198 +
                       (C11138 + C11137) * C28197) *
                          C92072 +
                      ((C29954 + C29955) * C28199 + (C11167 + C11168) * C28198 +
                       (C11162 + C11161) * C28197) *
                          C92322) *
                         C2710) *
                        C1985 +
                    ((((C13946 + C13947) * C28197 + (C32705 + C32706) * C28198 +
                       ((C307 * C24524 + C92157 * C24830) * C801 +
                        (C307 * C24527 + C92157 * C24832) * C92084) *
                           C28199) *
                          C92322 +
                      ((C13940 + C13941) * C28197 + (C32701 + C32702) * C28198 +
                       ((C307 * C32368 + C92157 * C32694) * C801 +
                        (C307 * C32370 + C92157 * C32695) * C92084) *
                           C28199) *
                          C92072) *
                         C2710 -
                     (((C32702 + C32701) * C28199 + (C13941 + C13940) * C28198 +
                       (C2213 * C92084 + C2212 * C801) * C28197) *
                          C92072 +
                      ((C32706 + C32705) * C28199 + (C13947 + C13946) * C28198 +
                       ((C307 * C813 + C92157 * C1030) * C92084 +
                        (C307 * C805 + C92157 * C1022) * C801) *
                           C28197) *
                          C92322) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[31] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2059 +
                      (C14876 + C14877 + C14878) * C1985 -
                      (C17174 + C17173 + C17172) * C2060 -
                      (C17282 + C17283 + C17284) * C1986) *
                         C92183 * C92072) *
                        C92084 * C2709 +
                    (((C14750 * C3431 + C14523 * C3661 + C14751 * C8412 +
                       C14524 * C8766 + C14752 * C18732 + C14525 * C19090) *
                          C2060 -
                      ((C14752 * C8540 + C14525 * C8870 + C14751 * C3513 +
                        C14524 * C3735 + C14750 * C1471 + C14523 * C1672) *
                           C1985 +
                       (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                        C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                           C2059) +
                      (C14750 * C3513 + C14523 * C3735 + C14751 * C8540 +
                       C14524 * C8870 + C14752 * C18862 + C14525 * C19192) *
                          C1986) *
                         C92183 * C92322 +
                     ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                       C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                          C2060 -
                      ((C18215 + C18214 + C18213) * C1985 +
                       (C18105 + C18104 + C18103) * C2059) +
                      (C14750 * C3514 + C14523 * C3736 + C14751 * C8541 +
                       C14524 * C8871 + C14752 * C18863 + C14525 * C19193) *
                          C1986) *
                         C92183 * C92072) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2059 +
                      (C307 * C182 + C92157 * C394) * C1985 -
                      (C307 * C805 + C92157 * C1022) * C2060 -
                      (C307 * C890 + C92157 * C1085) * C1986) *
                         C92183 * C89 +
                     (C2285 + C2286 - C2287 - C2303) * C92183 * C90 +
                     (C2290 + C2291 - C2292 - C2304) * C92183 * C91 +
                     (C2295 + C2296 - C2297 - C2305) * C92183 * C92) *
                        C92084 * C2709 +
                    (((C307 * C3431 + C92157 * C3661) * C2060 -
                      ((C307 * C1471 + C92157 * C1672) * C1985 +
                       (C307 * C1389 + C92157 * C1606) * C2059) +
                      (C307 * C3513 + C92157 * C3735) * C1986) *
                         C92183 * C89 +
                     ((C307 * C3432 + C92157 * C3662) * C2060 -
                      (C3016 * C1985 + C2934 * C2059) +
                      (C307 * C3514 + C92157 * C3736) * C1986) *
                         C92183 * C90 +
                     ((C307 * C3433 + C92157 * C3663) * C2060 -
                      (C3017 * C1985 + C2936 * C2059) +
                      (C307 * C3515 + C92157 * C3737) * C1986) *
                         C92183 * C91 +
                     ((C307 * C3434 + C92157 * C3664) * C2060 -
                      (C3018 * C1985 + C2938 * C2059) +
                      (C307 * C3516 + C92157 * C3738) * C1986) *
                         C92183 * C92) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C28197 +
                      (C14046 + C14047 - C14048 - C14052) * C28198 +
                      (C32806 + C32807 - C32808 - C32812) * C28199) *
                         C92322 +
                     ((C2285 + C2286 - C2287 - C2303) * C28197 +
                      (C12091 + C12092 - C12093 - C12103) * C28198 +
                      (C30852 + C30853 - C30854 - C30858) * C28199) *
                         C92072) *
                        C92084 * C2709 +
                    (((C14048 - (C14047 + C14046) + C14052) * C28197 +
                      (C32808 - (C32807 + C32806) + C32812) * C28198 +
                      ((C307 * C24524 + C92157 * C24830) * C2060 -
                       (C30041 * C1985 + C29951 * C2059) +
                       (C307 * C24638 + C92157 * C24944) * C1986) *
                          C28199) *
                         C92322 +
                     ((C12093 - (C12092 + C12091) + C12103) * C28197 +
                      (C30854 - (C30853 + C30852) + C30858) * C28198 +
                      ((C307 * C32368 + C92157 * C32694) * C2060 -
                       (C30040 * C1985 + C29949 * C2059) +
                       (C307 * C32482 + C92157 * C32804) * C1986) *
                          C28199) *
                         C92072) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[31] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2849 +
                      (C14750 * C245 + C14523 * C474 + C14751 * C956 +
                       C14524 * C1146 + C14752 * C957 + C14525 * C1147) *
                          C2709 -
                      (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                       C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                          C2850 -
                      (C14752 * C8653 + C14525 * C8971 + C14751 * C3587 +
                       C14524 * C3805 + C14750 * C1540 + C14523 * C1727) *
                          C2710) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2849 +
                      (C14968 + C14969 + C14970) * C2709 -
                      (C18105 + C18104 + C18103) * C2850 -
                      (C18320 + C18321 + C18322) * C2710) *
                         C92183 * C92072) *
                        C1985 +
                    (((C14750 * C3431 + C14523 * C3661 + C14751 * C8412 +
                       C14524 * C8766 + C14752 * C18732 + C14525 * C19090) *
                          C2850 -
                      ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 +
                        C14524 * C1147 + C14750 * C956 + C14523 * C1146) *
                           C2709 +
                       (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                        C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                           C2849) +
                      (C14750 * C3587 + C14523 * C3805 + C14751 * C8653 +
                       C14524 * C8971 + C14752 * C18976 + C14525 * C19292) *
                          C2710) *
                         C92183 * C92322 +
                     ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                       C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                          C2850 -
                      ((C17389 + C17390 + C17391) * C2709 +
                       (C17174 + C17173 + C17172) * C2849) +
                      (C14750 * C3588 + C14523 * C3806 + C14751 * C8654 +
                       C14524 * C8972 + C14752 * C18977 + C14525 * C19293) *
                          C2710) *
                         C92183 * C92072) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2849 +
                      (C307 * C245 + C92157 * C474) * C2709 -
                      (C307 * C1389 + C92157 * C1606) * C2850 -
                      (C307 * C1540 + C92157 * C1727) * C2710) *
                         C92183 * C89 +
                     (C3089 + C3090 - C3091 - C3107) * C92183 * C90 +
                     (C3094 + C3095 - C3096 - C3108) * C92183 * C91 +
                     (C3099 + C3100 - C3101 - C3109) * C92183 * C92) *
                        C1985 +
                    (((C307 * C3431 + C92157 * C3661) * C2850 -
                      ((C307 * C956 + C92157 * C1146) * C2709 +
                       (C307 * C805 + C92157 * C1022) * C2849) +
                      (C307 * C3587 + C92157 * C3805) * C2710) *
                         C92183 * C89 +
                     ((C307 * C3432 + C92157 * C3662) * C2850 -
                      (C2384 * C2709 + C2212 * C2849) +
                      (C307 * C3588 + C92157 * C3806) * C2710) *
                         C92183 * C90 +
                     ((C307 * C3433 + C92157 * C3663) * C2850 -
                      (C2383 * C2709 + C2214 * C2849) +
                      (C307 * C3589 + C92157 * C3807) * C2710) *
                         C92183 * C91 +
                     ((C307 * C3434 + C92157 * C3664) * C2850 -
                      (C2382 * C2709 + C2216 * C2849) +
                      (C307 * C3590 + C92157 * C3808) * C2710) *
                         C92183 * C92) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C28197 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C28198 +
                      (C11160 * C2849 + C11352 * C2709 - C29951 * C2850 -
                       C30124 * C2710) *
                          C28199) *
                         C92322 +
                     ((C3089 + C3090 - C3091 - C3107) * C28197 +
                      (C13194 + C13195 - C13196 - C13197) * C28198 +
                      (C31937 + C31938 - C31939 - C31940) * C28199) *
                         C92072) *
                        C1985 +
                    (((C13944 * C2850 -
                       ((C307 * C956 + C92157 * C1146) * C2709 +
                        (C307 * C805 + C92157 * C1022) * C2849) +
                       C14153 * C2710) *
                          C28197 +
                      (C32703 * C2850 - (C14153 * C2709 + C13944 * C2849) +
                       C32914 * C2710) *
                          C28198 +
                      ((C307 * C24524 + C92157 * C24830) * C2850 -
                       (C32914 * C2709 + C32703 * C2849) +
                       (C307 * C24740 + C92157 * C25038) * C2710) *
                          C28199) *
                         C92322 +
                     ((C11989 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12210 * C2710) *
                          C28197 +
                      (C30752 * C2850 - (C12210 * C2709 + C11989 * C2849) +
                       C30960 * C2710) *
                          C28198 +
                      ((C307 * C32368 + C92157 * C32694) * C2850 -
                       (C30960 * C2709 + C30752 * C2849) +
                       (C307 * C32588 + C92157 * C32910) * C2710) *
                          C28199) *
                         C92072) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C801 +
              (C554 * C117 + C92183 * C561) * C92084) *
                 C92322 +
             (C584 * C801 + C585 * C92084) * C92072) *
                C14523 +
            ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
            C15844 * C14525) *
               C2709 -
           (((C19397 + C19398) * C92072 + (C19405 + C19406) * C92322) * C14525 +
            ((C9081 + C9082) * C92072 + (C9089 + C9090) * C92322) * C14524 +
            ((C3191 * C92084 + C3190 * C801) * C92072 +
             ((C554 * C1397 + C92183 * C1796) * C92084 +
              (C554 * C1389 + C92183 * C1788) * C801) *
                 C92322) *
                C14523) *
               C2710) *
              C1985 +
          ((((C9090 + C9089) * C92322 + (C9082 + C9081) * C92072) * C14523 +
            ((C19406 + C19405) * C92322 + (C19398 + C19397) * C92072) * C14524 +
            (((C554 * C18732 + C92183 * C19392) * C801 +
              (C554 * C18736 + C92183 * C19394) * C92084) *
                 C92322 +
             ((C554 * C18733 + C92183 * C19393) * C801 +
              (C554 * C18737 + C92183 * C19395) * C92084) *
                 C92072) *
                C14525) *
               C2710 -
           (((C15845 + C15846) * C92072 + (C15847 + C15848) * C92322) * C14525 +
            ((C5456 + C5457) * C92072 + (C5458 + C5459) * C92322) * C14524 +
            ((C5429 + C5428) * C92072 + (C5453 + C5452) * C92322) * C14523) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C89 +
            (C584 * C801 + C585 * C92084) * C90 +
            (C586 * C801 + C587 * C92084) * C91 +
            (C588 * C801 + C589 * C92084) * C92) *
               C92157 * C2709 -
           ((C3195 * C92084 + C3194 * C801) * C92 +
            (C3193 * C92084 + C3192 * C801) * C91 +
            (C3191 * C92084 + C3190 * C801) * C90 +
            ((C554 * C1397 + C92183 * C1796) * C92084 +
             (C554 * C1389 + C92183 * C1788) * C801) *
                C89) *
               C92157 * C2710) *
              C1985 +
          ((((C554 * C3431 + C92183 * C3875) * C801 +
             (C554 * C3439 + C92183 * C3879) * C92084) *
                C89 +
            ((C554 * C3432 + C92183 * C3876) * C801 +
             (C554 * C3440 + C92183 * C3880) * C92084) *
                C90 +
            ((C554 * C3433 + C92183 * C3877) * C801 +
             (C554 * C3441 + C92183 * C3881) * C92084) *
                C91 +
            ((C554 * C3434 + C92183 * C3878) * C801 +
             (C554 * C3442 + C92183 * C3882) * C92084) *
                C92) *
               C92157 * C2710 -
           ((C2473 * C92084 + C2472 * C801) * C92 +
            (C2471 * C92084 + C2470 * C801) * C91 +
            (C2469 * C92084 + C2468 * C801) * C90 +
            ((C554 * C813 + C92183 * C1212) * C92084 +
             (C554 * C805 + C92183 * C1204) * C801) *
                C89) *
               C92157 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
              C28650 * C1390 + C28199 * C1789) *
                 C801 +
             (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
              C28650 * C1406 + C28199 * C1797) *
                 C92084) *
                C92322 +
            ((C28678 + C28677 + C28676) * C801 +
             (C28681 + C28680 + C28679) * C92084) *
                C92072) *
               C92157 * C2709 -
           (((C32056 + C32055 + C32054) * C92084 +
             (C32053 + C32052 + C32051) * C801) *
                C92072 +
            ((C28650 * C10814 + C28199 * C11431 + C28649 * C1406 +
              C28198 * C1797 + C28648 * C1397 + C28197 * C1796) *
                 C92084 +
             (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
              C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                 C801) *
                C92322) *
               C92157 * C2710) *
              C1985 +
          ((((C28648 * C3431 + C28197 * C3875 + C28649 * C5719 +
              C28198 * C6199 + C28650 * C24524 + C28199 * C25132) *
                 C801 +
             (C28648 * C3439 + C28197 * C3879 + C28649 * C5725 +
              C28198 * C6202 + C28650 * C24527 + C28199 * C25134) *
                 C92084) *
                C92322 +
            ((C28648 * C3432 + C28197 * C3876 + C28649 * C5720 +
              C28198 * C6200 + C28650 * C32368 + C28199 * C33012) *
                 C801 +
             (C28648 * C3440 + C28197 * C3880 + C28649 * C5726 +
              C28198 * C6203 + C28650 * C32370 + C28199 * C33013) *
                 C92084) *
                C92072) *
               C92157 * C2710 -
           (((C31077 + C31076 + C31075) * C92084 +
             (C31074 + C31073 + C31072) * C801) *
                C92072 +
            ((C28650 * C5725 + C28199 * C6202 + C28649 * C3439 +
              C28198 * C3879 + C28648 * C813 + C28197 * C1212) *
                 C92084 +
             (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 +
              C28198 * C3875 + C28648 * C805 + C28197 * C1204) *
                 C801) *
                C92322) *
               C92157 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C92322 +
            (C2541 + C2542 - C2543 - C2559) * C92072) *
               C14523 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C92322 +
            (C7240 + C7241 - C7242 - C7243) * C92072) *
               C14524 +
           ((C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
                C92322 +
            (C17596 + C17597 - C17598 - C17599) * C92072) *
               C14525) *
              C92084 * C2709 +
          (((C9088 * C2060 -
             ((C554 * C1471 + C92183 * C1854) * C1985 +
              (C554 * C1389 + C92183 * C1788) * C2059) +
             C9194 * C1986) *
                C92322 +
            (C8091 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8199 * C1986) *
                C92072) *
               C14523 +
           ((C19404 * C2060 - (C9194 * C1985 + C9088 * C2059) +
             C19509 * C1986) *
                C92322 +
            (C18425 * C2060 - (C8199 * C1985 + C8091 * C2059) +
             C18528 * C1986) *
                C92072) *
               C14524 +
           (((C554 * C18732 + C92183 * C19392) * C2060 -
             (C19509 * C1985 + C19404 * C2059) +
             (C554 * C18862 + C92183 * C19504) * C1986) *
                C92322 +
            ((C554 * C18733 + C92183 * C19393) * C2060 -
             (C18528 * C1985 + C18425 * C2059) +
             (C554 * C18863 + C92183 * C19505) * C1986) *
                C92072) *
               C14525) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 -
            (C554 * C805 + C92183 * C1204) * C2060 -
            (C554 * C890 + C92183 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92157 * C92084 * C2709 +
          (((C554 * C3431 + C92183 * C3875) * C2060 -
            ((C554 * C1471 + C92183 * C1854) * C1985 +
             (C554 * C1389 + C92183 * C1788) * C2059) +
            (C554 * C3513 + C92183 * C3949) * C1986) *
               C89 +
           ((C554 * C3432 + C92183 * C3876) * C2060 -
            (C3272 * C1985 + C3190 * C2059) +
            (C554 * C3514 + C92183 * C3950) * C1986) *
               C90 +
           ((C554 * C3433 + C92183 * C3877) * C2060 -
            (C3273 * C1985 + C3192 * C2059) +
            (C554 * C3515 + C92183 * C3951) * C1986) *
               C91 +
           ((C554 * C3434 + C92183 * C3878) * C2060 -
            (C3274 * C1985 + C3194 * C2059) +
            (C554 * C3516 + C92183 * C3952) * C1986) *
               C92) *
              C92157 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C2059 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C1985 -
            (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
             C28648 * C805 + C28197 * C1204) *
                C2060 -
            (C28650 * C5805 + C28199 * C6279 + C28649 * C3513 + C28198 * C3949 +
             C28648 * C890 + C28197 * C1267) *
                C1986) *
               C92322 +
           ((C28678 + C28677 + C28676) * C2059 +
            (C28774 + C28775 + C28776) * C1985 -
            (C31074 + C31073 + C31072) * C2060 -
            (C31182 + C31183 + C31184) * C1986) *
               C92072) *
              C92157 * C92084 * C2709 +
          (((C28648 * C3431 + C28197 * C3875 + C28649 * C5719 + C28198 * C6199 +
             C28650 * C24524 + C28199 * C25132) *
                C2060 -
            ((C28650 * C10930 + C28199 * C11508 + C28649 * C1472 +
              C28198 * C1855 + C28648 * C1471 + C28197 * C1854) *
                 C1985 +
             (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
              C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                 C2059) +
            (C28648 * C3513 + C28197 * C3949 + C28649 * C5805 + C28198 * C6279 +
             C28650 * C24638 + C28199 * C25210) *
                C1986) *
               C92322 +
           ((C28648 * C3432 + C28197 * C3876 + C28649 * C5720 + C28198 * C6200 +
             C28650 * C32368 + C28199 * C33012) *
                C2060 -
            ((C32163 + C32162 + C32161) * C1985 +
             (C32053 + C32052 + C32051) * C2059) +
            (C28648 * C3514 + C28197 * C3950 + C28649 * C5806 + C28198 * C6280 +
             C28650 * C32482 + C28199 * C33112) *
                C1986) *
               C92072) *
              C92157 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[31] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C92322 +
                      (C3345 + C3346 - C3347 - C3363) * C92072) *
                         C14523 +
                     ((C9296 + C9297 - C9298 - C9302) * C92322 +
                      (C8301 + C8302 - C8303 - C8313) * C92072) *
                         C14524 +
                     ((C19610 + C19611 - C19612 - C19616) * C92322 +
                      (C18628 + C18629 - C18630 - C18634) * C92072) *
                         C14525) *
                        C1985 +
                    (((C9298 - (C9297 + C9296) + C9302) * C92322 +
                      (C8303 - (C8302 + C8301) + C8313) * C92072) *
                         C14523 +
                     ((C19612 - (C19611 + C19610) + C19616) * C92322 +
                      (C18630 - (C18629 + C18628) + C18634) * C92072) *
                         C14524 +
                     (((C554 * C18732 + C92183 * C19392) * C2850 -
                       (C16018 * C2709 + C15843 * C2849) +
                       (C554 * C18976 + C92183 * C19607) * C2710) *
                          C92322 +
                      ((C554 * C18733 + C92183 * C19393) * C2850 -
                       (C16017 * C2709 + C15841 * C2849) +
                       (C554 * C18977 + C92183 * C19608) * C2710) *
                          C92072) *
                         C14525) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92157 * C1985 +
                    (((C554 * C3431 + C92183 * C3875) * C2850 -
                      ((C554 * C956 + C92183 * C1328) * C2709 +
                       (C554 * C805 + C92183 * C1204) * C2849) +
                      (C554 * C3587 + C92183 * C4019) * C2710) *
                         C89 +
                     ((C554 * C3432 + C92183 * C3876) * C2850 -
                      (C2640 * C2709 + C2468 * C2849) +
                      (C554 * C3588 + C92183 * C4020) * C2710) *
                         C90 +
                     ((C554 * C3433 + C92183 * C3877) * C2850 -
                      (C2639 * C2709 + C2470 * C2849) +
                      (C554 * C3589 + C92183 * C4021) * C2710) *
                         C91 +
                     ((C554 * C3434 + C92183 * C3878) * C2850 -
                      (C2638 * C2709 + C2472 * C2849) +
                      (C554 * C3590 + C92183 * C4022) * C2710) *
                         C92) *
                        C92157 * C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C2849 +
                      (C28648 * C245 + C28197 * C719 + C28649 * C1540 +
                       C28198 * C1909 + C28650 * C1541 + C28199 * C1910) *
                          C2709 -
                      (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                       C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                          C2850 -
                      (C28650 * C11028 + C28199 * C11585 + C28649 * C1541 +
                       C28198 * C1910 + C28648 * C1540 + C28197 * C1909) *
                          C2710) *
                         C92322 +
                     ((C28678 + C28677 + C28676) * C2849 +
                      (C28866 + C28867 + C28868) * C2709 -
                      (C32053 + C32052 + C32051) * C2850 -
                      (C32268 + C32269 + C32270) * C2710) *
                         C92072) *
                        C92157 * C1985 +
                    (((C28648 * C3431 + C28197 * C3875 + C28649 * C5719 +
                       C28198 * C6199 + C28650 * C24524 + C28199 * C25132) *
                          C2850 -
                      ((C28650 * C5885 + C28199 * C6356 + C28649 * C3587 +
                        C28198 * C4019 + C28648 * C956 + C28197 * C1328) *
                           C2709 +
                       (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 +
                        C28198 * C3875 + C28648 * C805 + C28197 * C1204) *
                           C2849) +
                      (C28648 * C3587 + C28197 * C4019 + C28649 * C5885 +
                       C28198 * C6356 + C28650 * C24740 + C28199 * C25286) *
                          C2710) *
                         C92322 +
                     ((C28648 * C3432 + C28197 * C3876 + C28649 * C5720 +
                       C28198 * C6200 + C28650 * C32368 + C28199 * C33012) *
                          C2850 -
                      ((C31289 + C31290 + C31291) * C2709 +
                       (C31074 + C31073 + C31072) * C2849) +
                      (C28648 * C3588 + C28197 * C4020 + C28649 * C5886 +
                       C28198 * C6357 + C28650 * C32588 + C28199 * C33211) *
                          C2710) *
                         C92072) *
                        C92157 * C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
               C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                  C104 +
              (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 +
               C102 * C119 + C91 * C127 + C103 * C120 + C92 * C128) *
                  C93 -
              (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 +
               C101 * C109 + C90 * C115 + C100 * C108 + C89 * C114) *
                  C105 -
              (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 +
               C101 * C119 + C90 * C127 + C100 * C118 + C89 * C126) *
                  C94 +
              (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 +
               C102 * C111 + C91 * C121 + C103 * C112 + C92 * C123) *
                  C106 +
              (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 +
               C102 * C122 + C91 * C129 + C103 * C124 + C92 * C130) *
                  C95) *
             C92157 * C92183 * C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C801 +
               (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 +
                C102 * C119 + C91 * C127 + C103 * C120 + C92 * C128) *
                   C92084) *
                  C92157 * C92183 * C92116 * C798 -
              ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 +
                C101 * C812 + C90 * C828 + C100 * C813 + C89 * C829) *
                   C92084 +
               (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 +
                C101 * C804 + C90 * C816 + C100 * C805 + C89 * C817) *
                   C801) *
                  C92157 * C92183 * C92116 * C799 +
              ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 +
                C102 * C808 + C91 * C820 + C103 * C809 + C92 * C821) *
                   C801 +
               (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 +
                C102 * C824 + C91 * C832 + C103 * C825 + C92 * C833) *
                   C92084) *
                  C92157 * C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92084) *
              C92157 * C92183 * C1383 -
          ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
            C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
               C92084 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C801) *
              C92157 * C92183 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C801 +
           (C100 * C1406 + C89 * C1414 + C101 * C1407 + C90 * C1415 +
            C102 * C1408 + C91 * C1416 + C103 * C1409 + C92 * C1417) *
               C92084) *
              C92157 * C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C104 +
           (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
               C93 -
           (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
               C105 -
           (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
               C94 +
           (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
               C106 +
           (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
               C95) *
              C14523 +
          ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
               C104 +
           (C89875 * C813 + C92322 * C829 + C89868 * C812 + C92072 * C828) *
               C93 -
           (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
               C105 -
           (C89868 * C811 + C92072 * C827 + C89875 * C812 + C92322 * C828) *
               C94 +
           (C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
               C106 +
           (C89875 * C811 + C92322 * C827 + C89868 * C810 + C92072 * C826) *
               C95) *
              C14524 +
          ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
               C104 +
           (C89875 * C822 + C92322 * C830 + C89868 * C823 + C92072 * C831) *
               C93 -
           (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
               C105 -
           (C89868 * C824 + C92072 * C832 + C89875 * C823 + C92322 * C831) *
               C94 +
           (C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
               C106 +
           (C89875 * C824 + C92322 * C832 + C89868 * C825 + C92072 * C833) *
               C95) *
              C14525) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C14523 +
           ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
           C15322 * C14525) *
              C92183 * C92116 * C798 -
          (((C15314 + C15315) * C92084 + (C15316 + C15317) * C801) * C14525 +
           ((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C14524 +
           ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C14523) *
              C92183 * C92116 * C799 +
          (C15322 * C14523 +
           ((C15317 + C15316) * C801 + (C15315 + C15314) * C92084) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C801 +
            (C89875 * C15277 + C92322 * C15279 + C89868 * C15278 +
             C92072 * C15280) *
                C92084) *
               C14525) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C14523 +
           ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
           C15322 * C14525) *
              C92183 * C1383 -
          (((C89868 * C8419 + C92072 * C8422 + C89875 * C8418 +
             C92322 * C8421) *
                C92084 +
            (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
             C92322 * C8415) *
                C801) *
               C14525 +
           ((C89868 * C3440 + C92072 * C3444 + C89875 * C3439 +
             C92322 * C3443) *
                C92084 +
            (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
             C92322 * C3435) *
                C801) *
               C14524 +
           ((C89868 * C1396 + C92072 * C1412 + C89875 * C1397 +
             C92322 * C1413) *
                C92084 +
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C801) *
               C14523) *
              C92183 * C1384 +
          (((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C801 +
            (C89875 * C1406 + C92322 * C1414 + C89868 * C1407 +
             C92072 * C1415) *
                C92084) *
               C14523 +
           ((C89875 * C5719 + C92322 * C5722 + C89868 * C5720 +
             C92072 * C5723) *
                C801 +
            (C89875 * C5725 + C92322 * C5728 + C89868 * C5726 +
             C92072 * C5729) *
                C92084) *
               C14524 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C801 +
            (C89875 * C16099 + C92322 * C16101 + C89868 * C16100 +
             C92072 * C16102) *
                C92084) *
               C14525) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C104 +
           (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
               C93 -
           (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
               C105 -
           (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
               C94 +
           (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
               C106 +
           (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
               C95) *
              C92157 * C28197 +
          ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 + C92072 * C1400) *
               C104 +
           (C89875 * C1397 + C92322 * C1413 + C89868 * C1396 + C92072 * C1412) *
               C93 -
           (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 + C92322 * C1400) *
               C105 -
           (C89868 * C1395 + C92072 * C1411 + C89875 * C1396 + C92322 * C1412) *
               C94 +
           (C89875 * C1387 + C92322 * C1399 + C89868 * C1386 + C92072 * C1398) *
               C106 +
           (C89875 * C1395 + C92322 * C1411 + C89868 * C1394 + C92072 * C1410) *
               C95) *
              C92157 * C28198 +
          ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 + C92072 * C1403) *
               C104 +
           (C89875 * C1406 + C92322 * C1414 + C89868 * C1407 + C92072 * C1415) *
               C93 -
           (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 + C92322 * C1403) *
               C105 -
           (C89868 * C1408 + C92072 * C1416 + C89875 * C1407 + C92322 * C1415) *
               C94 +
           (C89875 * C1392 + C92322 * C1404 + C89868 * C1393 + C92072 * C1405) *
               C106 +
           (C89875 * C1408 + C92322 * C1416 + C89868 * C1409 + C92072 * C1417) *
               C95) *
              C92157 * C28199) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C801 +
            (C89875 * C1397 + C92322 * C1413 + C89868 * C1396 +
             C92072 * C1412) *
                C92084) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C801 +
            (C89875 * C1406 + C92322 * C1414 + C89868 * C1407 +
             C92072 * C1415) *
                C92084) *
               C92157 * C28199) *
              C92116 * C798 -
          (((C89868 * C5726 + C92072 * C5729 + C89875 * C5725 +
             C92322 * C5728) *
                C92084 +
            (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
             C92322 * C5722) *
                C801) *
               C92157 * C28199 +
           ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C92157 *
               C28198 +
           ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C92157 *
               C28197) *
              C92116 * C799 +
          (C15322 * C92157 * C28197 +
           ((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C92157 *
               C28198 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C801 +
            (C89875 * C16099 + C92322 * C16101 + C89868 * C16100 +
             C92072 * C16102) *
                C92084) *
               C92157 * C28199) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C92157 * C28197 +
           ((C29644 + C29645) * C801 + (C29646 + C29647) * C92084) * C92157 *
               C28198 +
           C29661 * C28199) *
              C1383 -
          (((C29652 + C29653) * C92084 + (C29654 + C29655) * C801) * C92157 *
               C28199 +
           ((C29651 + C29650) * C92084 + (C29649 + C29648) * C801) * C92157 *
               C28198 +
           ((C29647 + C29646) * C92084 + (C29645 + C29644) * C801) * C92157 *
               C28197) *
              C1384 +
          (C29661 * C28197 +
           ((C29655 + C29654) * C801 + (C29653 + C29652) * C92084) * C92157 *
               C28198 +
           ((C89875 * C29611 + C92322 * C29613 + C89868 * C29612 +
             C92072 * C29614) *
                C801 +
            (C89875 * C29615 + C92322 * C29617 + C89868 * C29616 +
             C92072 * C29618) *
                C92084) *
               C92157 * C28199) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C181 +
               (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 +
                C102 * C184 + C91 * C190 + C103 * C185 + C92 * C191) *
                   C92105) *
                  C92157 * C92183 * C93 -
              ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 +
                C101 * C184 + C90 * C190 + C100 * C183 + C89 * C189) *
                   C92105 +
               (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 +
                C101 * C109 + C90 * C115 + C100 * C108 + C89 * C114) *
                   C181) *
                  C92157 * C92183 * C94 +
              ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 +
                C102 * C111 + C91 * C121 + C103 * C112 + C92 * C123) *
                   C181 +
               (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 +
                C102 * C186 + C91 * C192 + C103 * C187 + C92 * C193) *
                   C92105) *
                  C92157 * C92183 * C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
               C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                  C884 +
              (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 +
               C102 * C184 + C91 * C190 + C103 * C185 + C92 * C191) *
                  C798 -
              (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 +
               C101 * C804 + C90 * C816 + C100 * C805 + C89 * C817) *
                  C885 -
              (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 +
               C101 * C889 + C90 * C897 + C100 * C890 + C89 * C898) *
                  C799 +
              (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 +
               C102 * C808 + C91 * C820 + C103 * C809 + C92 * C821) *
                  C886 +
              (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 +
               C102 * C893 + C91 * C901 + C103 * C894 + C92 * C902) *
                  C800) *
             C92157 * C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92105) *
              C92157 * C92183 * C92084 * C1383 -
          ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
            C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
               C92105 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C181) *
              C92157 * C92183 * C92084 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C181 +
           (C100 * C1472 + C89 * C1480 + C101 * C1473 + C90 * C1481 +
            C102 * C1474 + C91 * C1482 + C103 * C1475 + C92 * C1483) *
               C92105) *
              C92157 * C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C181 +
            (C89875 * C890 + C92322 * C898 + C89868 * C889 + C92072 * C897) *
                C92105) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C181 +
            (C89875 * C891 + C92322 * C899 + C89868 * C892 + C92072 * C900) *
                C92105) *
               C14525) *
              C92183 * C93 -
          (((C89868 * C893 + C92072 * C901 + C89875 * C892 + C92322 * C900) *
                C92105 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C181) *
               C14525 +
           ((C89868 * C888 + C92072 * C896 + C89875 * C889 + C92322 * C897) *
                C92105 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C181) *
               C14524 +
           ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                C92105 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C181) *
               C14523) *
              C92183 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C181 +
            (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                C92105) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C181 +
            (C89875 * C888 + C92322 * C896 + C89868 * C887 + C92072 * C895) *
                C92105) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C181 +
            (C89875 * C893 + C92322 * C901 + C89868 * C894 + C92072 * C902) *
                C92105) *
               C14525) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C884 +
           (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
               C798 -
           (C15307 + C15306) * C885 - (C15413 + C15414) * C799 + C15318 * C886 +
           C15419 * C800) *
              C14523 +
          ((C15306 + C15307) * C884 + (C15414 + C15413) * C798 -
           (C15311 + C15310) * C885 - (C15416 + C15415) * C799 +
           (C15317 + C15316) * C886 + (C15417 + C15418) * C800) *
              C14524 +
          (C15318 * C884 + C15419 * C798 - (C15316 + C15317) * C885 -
           (C15418 + C15417) * C799 +
           (C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
            C92072 * C15276) *
               C886 +
           (C89875 * C15396 + C92322 * C15398 + C89868 * C15397 +
            C92072 * C15399) *
               C800) *
              C14525) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C14523 +
           ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C14524 +
           (C15318 * C181 + C15419 * C92105) * C14525) *
              C92183 * C92084 * C1383 -
          (((C89868 * C8541 + C92072 * C8544 + C89875 * C8540 +
             C92322 * C8543) *
                C92105 +
            (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
             C92322 * C8415) *
                C181) *
               C14525 +
           ((C89868 * C3514 + C92072 * C3518 + C89875 * C3513 +
             C92322 * C3517) *
                C92105 +
            (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
             C92322 * C3435) *
                C181) *
               C14524 +
           ((C89868 * C1470 + C92072 * C1478 + C89875 * C1471 +
             C92322 * C1479) *
                C92105 +
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C181) *
               C14523) *
              C92183 * C92084 * C1384 +
          (((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C181 +
            (C89875 * C1472 + C92322 * C1480 + C89868 * C1473 +
             C92072 * C1481) *
                C92105) *
               C14523 +
           ((C89875 * C5719 + C92322 * C5722 + C89868 * C5720 +
             C92072 * C5723) *
                C181 +
            (C89875 * C5805 + C92322 * C5808 + C89868 * C5806 +
             C92072 * C5809) *
                C92105) *
               C14524 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C181 +
            (C89875 * C16177 + C92322 * C16179 + C89868 * C16178 +
             C92072 * C16180) *
                C92105) *
               C14525) *
              C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C181 +
            (C89875 * C1471 + C92322 * C1479 + C89868 * C1470 +
             C92072 * C1478) *
                C92105) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C181 +
            (C89875 * C1472 + C92322 * C1480 + C89868 * C1473 +
             C92072 * C1481) *
                C92105) *
               C92157 * C28199) *
              C93 -
          (((C89868 * C1474 + C92072 * C1482 + C89875 * C1473 +
             C92322 * C1481) *
                C92105 +
            (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
             C92322 * C1403) *
                C181) *
               C92157 * C28199 +
           ((C89868 * C1469 + C92072 * C1477 + C89875 * C1470 +
             C92322 * C1478) *
                C92105 +
            (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
             C92322 * C1400) *
                C181) *
               C92157 * C28198 +
           ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                C92105 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C181) *
               C92157 * C28197) *
              C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C181 +
            (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                C92105) *
               C92157 * C28197 +
           ((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
             C92072 * C1398) *
                C181 +
            (C89875 * C1469 + C92322 * C1477 + C89868 * C1468 +
             C92072 * C1476) *
                C92105) *
               C92157 * C28198 +
           ((C89875 * C1392 + C92322 * C1404 + C89868 * C1393 +
             C92072 * C1405) *
                C181 +
            (C89875 * C1474 + C92322 * C1482 + C89868 * C1475 +
             C92072 * C1483) *
                C92105) *
               C92157 * C28199) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C884 +
           (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
               C798 -
           (C15307 + C15306) * C885 - (C15413 + C15414) * C799 + C15318 * C886 +
           C15419 * C800) *
              C92157 * C28197 +
          ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 + C92072 * C1400) *
               C884 +
           (C89875 * C1471 + C92322 * C1479 + C89868 * C1470 + C92072 * C1478) *
               C798 -
           (C18763 + C18764) * C885 - (C18876 + C18875) * C799 +
           (C18760 + C18759) * C886 + (C18877 + C18878) * C800) *
              C92157 * C28198 +
          ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 + C92072 * C1403) *
               C884 +
           (C89875 * C1472 + C92322 * C1480 + C89868 * C1473 + C92072 * C1481) *
               C798 -
           (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 + C92322 * C5722) *
               C885 -
           (C89868 * C5806 + C92072 * C5809 + C89875 * C5805 + C92322 * C5808) *
               C799 +
           (C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
            C92072 * C16098) *
               C886 +
           (C89875 * C16177 + C92322 * C16179 + C89868 * C16178 +
            C92072 * C16180) *
               C800) *
              C92157 * C28199) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C92157 * C28197 +
           ((C29644 + C29645) * C181 + (C29753 + C29754) * C92105) * C92157 *
               C28198 +
           C29762 * C28199) *
              C92084 * C1383 -
          (((C29757 + C29758) * C92105 + (C29654 + C29655) * C181) * C92157 *
               C28199 +
           ((C29756 + C29755) * C92105 + (C29649 + C29648) * C181) * C92157 *
               C28198 +
           ((C29754 + C29753) * C92105 + (C29645 + C29644) * C181) * C92157 *
               C28197) *
              C92084 * C1384 +
          (C29762 * C28197 +
           ((C29655 + C29654) * C181 + (C29758 + C29757) * C92105) * C92157 *
               C28198 +
           ((C89875 * C29611 + C92322 * C29613 + C89868 * C29612 +
             C92072 * C29614) *
                C181 +
            (C89875 * C29735 + C92322 * C29737 + C89868 * C29736 +
             C92072 * C29738) *
                C92105) *
               C92157 * C28199) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C244 +
               (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 +
                C102 * C247 + C91 * C253 + C103 * C248 + C92 * C254) *
                   C92116) *
                  C92157 * C92183 * C92105 * C93 -
              ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 +
                C101 * C247 + C90 * C253 + C100 * C246 + C89 * C252) *
                   C92116 +
               (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 +
                C101 * C109 + C90 * C115 + C100 * C108 + C89 * C114) *
                   C244) *
                  C92157 * C92183 * C92105 * C94 +
              ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 +
                C102 * C111 + C91 * C121 + C103 * C112 + C92 * C123) *
                   C244 +
               (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 +
                C102 * C249 + C91 * C255 + C103 * C250 + C92 * C256) *
                   C92116) *
                  C92157 * C92183 * C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C244 +
               (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 +
                C102 * C247 + C91 * C253 + C103 * C248 + C92 * C254) *
                   C92116) *
                  C92157 * C92183 * C798 -
              ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 +
                C101 * C955 + C90 * C963 + C100 * C956 + C89 * C964) *
                   C92116 +
               (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 +
                C101 * C804 + C90 * C816 + C100 * C805 + C89 * C817) *
                   C244) *
                  C92157 * C92183 * C799 +
              ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 +
                C102 * C808 + C91 * C820 + C103 * C809 + C92 * C821) *
                   C244 +
               (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 +
                C102 * C959 + C91 * C967 + C103 * C960 + C92 * C968) *
                   C92116) *
                  C92157 * C92183 * C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C1534 +
          (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
           C91 * C253 + C103 * C248 + C92 * C254) *
              C1383 -
          (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
           C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
              C1535 -
          (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
           C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
              C1384 +
          (C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
           C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
              C1536 +
          (C100 * C1541 + C89 * C1549 + C101 * C1542 + C90 * C1550 +
           C102 * C1543 + C91 * C1551 + C103 * C1544 + C92 * C1552) *
              C1385) *
         C92157 * C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C244 +
            (C89875 * C956 + C92322 * C964 + C89868 * C955 + C92072 * C963) *
                C92116) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C244 +
            (C89875 * C957 + C92322 * C965 + C89868 * C958 + C92072 * C966) *
                C92116) *
               C14525) *
              C92183 * C92105 * C93 -
          (((C89868 * C959 + C92072 * C967 + C89875 * C958 + C92322 * C966) *
                C92116 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C244) *
               C14525 +
           ((C89868 * C954 + C92072 * C962 + C89875 * C955 + C92322 * C963) *
                C92116 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C244) *
               C14524 +
           ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                C92116 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C244) *
               C14523) *
              C92183 * C92105 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C244 +
            (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                C92116) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C244 +
            (C89875 * C954 + C92322 * C962 + C89868 * C953 + C92072 * C961) *
                C92116) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C244 +
            (C89875 * C959 + C92322 * C967 + C89868 * C960 + C92072 * C968) *
                C92116) *
               C14525) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C14524 +
           C15519 * C14525) *
              C92183 * C798 -
          (((C15515 + C15516) * C92116 + (C15316 + C15317) * C244) * C14525 +
           ((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C14524 +
           ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C14523) *
              C92183 * C799 +
          (C15519 * C14523 +
           ((C15317 + C15316) * C244 + (C15516 + C15515) * C92116) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C244 +
            (C89875 * C15493 + C92322 * C15495 + C89868 * C15494 +
             C92072 * C15496) *
                C92116) *
               C14525) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C1534 +
           (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
               C1383 -
           (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 + C92322 * C1401) *
               C1535 -
           (C89868 * C1539 + C92072 * C1547 + C89875 * C1540 + C92322 * C1548) *
               C1384 +
           (C89875 * C1390 + C92322 * C1402 + C89868 * C1391 + C92072 * C1403) *
               C1536 +
           (C89875 * C1541 + C92322 * C1549 + C89868 * C1542 + C92072 * C1550) *
               C1385) *
              C14523 +
          ((C15306 + C15307) * C1534 + (C15511 + C15512) * C1383 -
           (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 + C92322 * C3435) *
               C1535 -
           (C89868 * C3588 + C92072 * C3592 + C89875 * C3587 + C92322 * C3591) *
               C1384 +
           (C89875 * C5719 + C92322 * C5722 + C89868 * C5720 + C92072 * C5723) *
               C1536 +
           (C89875 * C5885 + C92322 * C5888 + C89868 * C5886 + C92072 * C5889) *
               C1385) *
              C14524 +
          (C15318 * C1534 + C15517 * C1383 -
           (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 + C92322 * C8415) *
               C1535 -
           (C89868 * C8654 + C92072 * C8657 + C89875 * C8653 + C92322 * C8656) *
               C1384 +
           (C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
            C92072 * C16098) *
               C1536 +
           (C89875 * C16255 + C92322 * C16257 + C89868 * C16256 +
            C92072 * C16258) *
               C1385) *
              C14525) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C244 +
            (C89875 * C1540 + C92322 * C1548 + C89868 * C1539 +
             C92072 * C1547) *
                C92116) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C244 +
            (C89875 * C1541 + C92322 * C1549 + C89868 * C1542 +
             C92072 * C1550) *
                C92116) *
               C92157 * C28199) *
              C92105 * C93 -
          (((C89868 * C1543 + C92072 * C1551 + C89875 * C1542 +
             C92322 * C1550) *
                C92116 +
            (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
             C92322 * C1403) *
                C244) *
               C92157 * C28199 +
           ((C89868 * C1538 + C92072 * C1546 + C89875 * C1539 +
             C92322 * C1547) *
                C92116 +
            (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
             C92322 * C1400) *
                C244) *
               C92157 * C28198 +
           ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                C92116 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C244) *
               C92157 * C28197) *
              C92105 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C244 +
            (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                C92116) *
               C92157 * C28197 +
           ((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
             C92072 * C1398) *
                C244 +
            (C89875 * C1538 + C92322 * C1546 + C89868 * C1537 +
             C92072 * C1545) *
                C92116) *
               C92157 * C28198 +
           ((C89875 * C1392 + C92322 * C1404 + C89868 * C1393 +
             C92072 * C1405) *
                C244 +
            (C89875 * C1543 + C92322 * C1551 + C89868 * C1544 +
             C92072 * C1552) *
                C92116) *
               C92157 * C28199) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C244 +
            (C89875 * C1540 + C92322 * C1548 + C89868 * C1539 +
             C92072 * C1547) *
                C92116) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C244 +
            (C89875 * C1541 + C92322 * C1549 + C89868 * C1542 +
             C92072 * C1550) *
                C92116) *
               C92157 * C28199) *
              C798 -
          (((C89868 * C5886 + C92072 * C5889 + C89875 * C5885 +
             C92322 * C5888) *
                C92116 +
            (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
             C92322 * C5722) *
                C244) *
               C92157 * C28199 +
           ((C18989 + C18990) * C92116 + (C18763 + C18764) * C244) * C92157 *
               C28198 +
           ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C92157 *
               C28197) *
              C799 +
          (C15519 * C92157 * C28197 +
           ((C18760 + C18759) * C244 + (C18992 + C18991) * C92116) * C92157 *
               C28198 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C244 +
            (C89875 * C16255 + C92322 * C16257 + C89868 * C16256 +
             C92072 * C16258) *
                C92116) *
               C92157 * C28199) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C1534 +
           (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
               C1383 -
           (C29645 + C29644) * C1535 - (C29853 + C29854) * C1384 +
           C29656 * C1536 + C29859 * C1385) *
              C92157 * C28197 +
          ((C29644 + C29645) * C1534 + (C29854 + C29853) * C1383 -
           (C29649 + C29648) * C1535 - (C29856 + C29855) * C1384 +
           (C29655 + C29654) * C1536 + (C29857 + C29858) * C1385) *
              C92157 * C28198 +
          (C29656 * C1534 + C29859 * C1383 - (C29654 + C29655) * C1535 -
           (C29858 + C29857) * C1384 +
           (C89875 * C29611 + C92322 * C29613 + C89868 * C29612 +
            C92072 * C29614) *
               C1536 +
           (C89875 * C29836 + C92322 * C29838 + C89868 * C29837 +
            C92072 * C29839) *
               C1385) *
              C92157 * C28199) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] += (0.5 * std::pow(Pi, 2.5) *
                       (((C307 * C107 + C92157 * C308) * C104 +
                         (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                         C338 * C94 + C339 * C106 + C340 * C95) *
                            C92183 * C89 +
                        (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                         C341 * C106 + C342 * C95) *
                            C92183 * C90 +
                        (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                         C343 * C106 + C344 * C95) *
                            C92183 * C91 +
                        (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
                         (C307 * C112 + C92157 * C313) * C106 +
                         (C307 * C124 + C92157 * C319) * C95) *
                            C92183 * C92) *
                       C92116 * C92105 +
                   0.5 * std::pow(Pi, 2.5) *
                       ((((C307 * C107 + C92157 * C308) * C801 +
                          (C307 * C117 + C92157 * C314) * C92084) *
                             C92183 * C89 +
                         (C337 * C801 + C338 * C92084) * C92183 * C90 +
                         (C339 * C801 + C340 * C92084) * C92183 * C91 +
                         (C341 * C801 + C342 * C92084) * C92183 * C92) *
                            C92116 * C798 -
                        (((C307 * C810 + C92157 * C1027) * C92084 +
                          (C307 * C802 + C92157 * C1019) * C801) *
                             C92183 * C92 +
                         ((C307 * C811 + C92157 * C1028) * C92084 +
                          (C307 * C803 + C92157 * C1020) * C801) *
                             C92183 * C91 +
                         ((C307 * C812 + C92157 * C1029) * C92084 +
                          (C307 * C804 + C92157 * C1021) * C801) *
                             C92183 * C90 +
                         ((C307 * C813 + C92157 * C1030) * C92084 +
                          (C307 * C805 + C92157 * C1022) * C801) *
                             C92183 * C89) *
                            C92116 * C799 +
                        (((C307 * C806 + C92157 * C1023) * C801 +
                          (C307 * C822 + C92157 * C1031) * C92084) *
                             C92183 * C89 +
                         ((C307 * C807 + C92157 * C1024) * C801 +
                          (C307 * C823 + C92157 * C1032) * C92084) *
                             C92183 * C90 +
                         ((C307 * C808 + C92157 * C1025) * C801 +
                          (C307 * C824 + C92157 * C1033) * C92084) *
                             C92183 * C91 +
                         ((C307 * C809 + C92157 * C1026) * C801 +
                          (C307 * C825 + C92157 * C1034) * C92084) *
                             C92183 * C92) *
                            C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C801 +
                      (C307 * C117 + C92157 * C314) * C92084) *
                         C92183 * C89 +
                     (C337 * C801 + C338 * C92084) * C92183 * C90 +
                     (C339 * C801 + C340 * C92084) * C92183 * C91 +
                     (C341 * C801 + C342 * C92084) * C92183 * C92) *
                        C1383 -
                    (((C307 * C1394 + C92157 * C1611) * C92084 +
                      (C307 * C1386 + C92157 * C1603) * C801) *
                         C92183 * C92 +
                     ((C307 * C1395 + C92157 * C1612) * C92084 +
                      (C307 * C1387 + C92157 * C1604) * C801) *
                         C92183 * C91 +
                     ((C307 * C1396 + C92157 * C1613) * C92084 +
                      (C307 * C1388 + C92157 * C1605) * C801) *
                         C92183 * C90 +
                     ((C307 * C1397 + C92157 * C1614) * C92084 +
                      (C307 * C1389 + C92157 * C1606) * C801) *
                         C92183 * C89) *
                        C1384 +
                    (((C307 * C1390 + C92157 * C1607) * C801 +
                      (C307 * C1406 + C92157 * C1615) * C92084) *
                         C92183 * C89 +
                     ((C307 * C1391 + C92157 * C1608) * C801 +
                      (C307 * C1407 + C92157 * C1616) * C92084) *
                         C92183 * C90 +
                     ((C307 * C1392 + C92157 * C1609) * C801 +
                      (C307 * C1408 + C92157 * C1617) * C92084) *
                         C92183 * C91 +
                     ((C307 * C1393 + C92157 * C1610) * C801 +
                      (C307 * C1409 + C92157 * C1618) * C92084) *
                         C92183 * C92) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                      C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                         C104 +
                     (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                      C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                         C93 -
                     (C14778 + C14779 + C14780) * C105 -
                     (C14781 + C14782 + C14783) * C94 +
                     (C14784 + C14785 + C14786) * C106 +
                     (C14787 + C14788 + C14789) * C95) *
                        C92183 * C92322 +
                    ((C14780 + C14779 + C14778) * C104 +
                     (C14783 + C14782 + C14781) * C93 -
                     (C14786 + C14785 + C14784) * C105 -
                     (C14789 + C14788 + C14787) * C94 +
                     (C14750 * C110 + C14523 * C311 + C14751 * C802 +
                      C14524 * C1019 + C14752 * C809 + C14525 * C1026) *
                         C106 +
                     (C14750 * C120 + C14523 * C317 + C14751 * C810 +
                      C14524 * C1027 + C14752 * C825 + C14525 * C1034) *
                         C95) *
                        C92183 * C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C801 +
                      (C14783 + C14782 + C14781) * C92084) *
                         C92183 * C92072) *
                        C92116 * C798 -
                    (((C14752 * C4872 + C14525 * C5187 + C14751 * C823 +
                       C14524 * C1032 + C14750 * C812 + C14523 * C1029) *
                          C92084 +
                      (C14752 * C4866 + C14525 * C5184 + C14751 * C807 +
                       C14524 * C1024 + C14750 * C804 + C14523 * C1021) *
                          C801) *
                         C92183 * C92072 +
                     ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                       C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                          C92084 +
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C801) *
                         C92183 * C92322) *
                        C92116 * C799 +
                    (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 +
                       C14524 * C5183 + C14752 * C15273 + C14525 * C15593) *
                          C801 +
                      (C14750 * C822 + C14523 * C1031 + C14751 * C4871 +
                       C14524 * C5186 + C14752 * C15277 + C14525 * C15595) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 +
                       C14524 * C5184 + C14752 * C15274 + C14525 * C15594) *
                          C801 +
                      (C14750 * C823 + C14523 * C1032 + C14751 * C4872 +
                       C14524 * C5187 + C14752 * C15278 + C14525 * C15596) *
                          C92084) *
                         C92183 * C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C801 +
                      (C14783 + C14782 + C14781) * C92084) *
                         C92183 * C92072) *
                        C1383 -
                    (((C14752 * C8419 + C14525 * C8770 + C14751 * C3440 +
                       C14524 * C3666 + C14750 * C1396 + C14523 * C1613) *
                          C92084 +
                      (C14752 * C8413 + C14525 * C8767 + C14751 * C3432 +
                       C14524 * C3662 + C14750 * C1388 + C14523 * C1605) *
                          C801) *
                         C92183 * C92072 +
                     ((C14752 * C8418 + C14525 * C8769 + C14751 * C3439 +
                       C14524 * C3665 + C14750 * C1397 + C14523 * C1614) *
                          C92084 +
                      (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                       C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                          C801) *
                         C92183 * C92322) *
                        C1384 +
                    (((C14750 * C1390 + C14523 * C1607 + C14751 * C5719 +
                       C14524 * C5965 + C14752 * C16095 + C14525 * C16333) *
                          C801 +
                      (C14750 * C1406 + C14523 * C1615 + C14751 * C5725 +
                       C14524 * C5968 + C14752 * C16099 + C14525 * C16335) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 +
                       C14524 * C5966 + C14752 * C16096 + C14525 * C16334) *
                          C801 +
                      (C14750 * C1407 + C14523 * C1616 + C14751 * C5726 +
                       C14524 * C5969 + C14752 * C16100 + C14525 * C16336) *
                          C92084) *
                         C92183 * C92072) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C104 +
                      (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C28197 +
                     (C11153 * C104 + C11154 * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C28198 +
                     (C11160 * C104 + C11159 * C93 - C11158 * C105 -
                      C11157 * C94 + C11156 * C106 + C11155 * C95) *
                         C28199) *
                        C92322 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C28197 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C28198 +
                     (C11158 * C104 + C11157 * C93 - C11156 * C105 -
                      C11155 * C94 + (C307 * C1393 + C92157 * C1610) * C106 +
                      (C307 * C1409 + C92157 * C1618) * C95) *
                         C28199) *
                        C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C28197 +
                      (C11161 + C11162) * C28198 + (C11168 + C11167) * C28199) *
                         C92322 +
                     ((C337 * C801 + C338 * C92084) * C28197 +
                      (C11137 + C11138) * C28198 + (C11166 + C11165) * C28199) *
                         C92072) *
                        C92116 * C798 -
                    ((((C307 * C5726 + C92157 * C5969) * C92084 +
                       (C307 * C5720 + C92157 * C5966) * C801) *
                          C28199 +
                      (C13941 + C13940) * C28198 +
                      (C2213 * C92084 + C2212 * C801) * C28197) *
                         C92072 +
                     (((C307 * C5725 + C92157 * C5968) * C92084 +
                       (C307 * C5719 + C92157 * C5965) * C801) *
                          C28199 +
                      (C13947 + C13946) * C28198 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C28197) *
                         C92322) *
                        C92116 * C799 +
                    ((((C307 * C806 + C92157 * C1023) * C801 +
                       (C307 * C822 + C92157 * C1031) * C92084) *
                          C28197 +
                      ((C307 * C8412 + C92157 * C8766) * C801 +
                       (C307 * C8418 + C92157 * C8769) * C92084) *
                          C28198 +
                      ((C307 * C16095 + C92157 * C16333) * C801 +
                       (C307 * C16099 + C92157 * C16335) * C92084) *
                          C28199) *
                         C92322 +
                     (((C307 * C807 + C92157 * C1024) * C801 +
                       (C307 * C823 + C92157 * C1032) * C92084) *
                          C28197 +
                      ((C307 * C8413 + C92157 * C8767) * C801 +
                       (C307 * C8419 + C92157 * C8770) * C92084) *
                          C28198 +
                      ((C307 * C16096 + C92157 * C16334) * C801 +
                       (C307 * C16100 + C92157 * C16336) * C92084) *
                          C28199) *
                         C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C28197 +
                      (C11161 + C11162) * C28198 + C29938 * C28199) *
                         C92322 +
                     ((C337 * C801 + C338 * C92084) * C28197 +
                      (C11137 + C11138) * C28198 + C29939 * C28199) *
                         C92072) *
                        C1383 -
                    (((C29952 + C29953) * C28199 + (C11165 + C11166) * C28198 +
                      (C11138 + C11137) * C28197) *
                         C92072 +
                     ((C29954 + C29955) * C28199 + (C11167 + C11168) * C28198 +
                      (C11162 + C11161) * C28197) *
                         C92322) *
                        C1384 +
                    ((C29938 * C28197 + (C29955 + C29954) * C28198 +
                      ((C307 * C29611 + C92157 * C29933) * C801 +
                       (C307 * C29615 + C92157 * C29935) * C92084) *
                          C28199) *
                         C92322 +
                     (C29939 * C28197 + (C29953 + C29952) * C28198 +
                      ((C307 * C29612 + C92157 * C29934) * C801 +
                       (C307 * C29616 + C92157 * C29936) * C92084) *
                          C28199) *
                         C92072) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92157 * C308) * C181 +
                (C307 * C182 + C92157 * C394) * C92105) *
                   C92183 * C89 +
               (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
                  C93 -
              ((C420 + C412) * C92183 * C92 + (C419 + C407) * C92183 * C91 +
               (C418 + C404) * C92183 * C90 + (C417 + C401) * C92183 * C89) *
                  C94 +
              (C423 * C89 + C424 * C90 + (C412 + C420) * C92183 * C91 +
               ((C307 * C112 + C92157 * C313) * C181 +
                (C307 * C187 + C92157 * C399) * C92105) *
                   C92183 * C92) *
                  C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             (((C307 * C107 + C92157 * C308) * C884 +
               (C307 * C182 + C92157 * C394) * C798 -
               (C307 * C805 + C92157 * C1022) * C885 -
               (C307 * C890 + C92157 * C1085) * C799 +
               (C307 * C806 + C92157 * C1023) * C886 +
               (C307 * C891 + C92157 * C1086) * C800) *
                  C92183 * C89 +
              (C337 * C884 + C413 * C798 -
               (C307 * C804 + C92157 * C1021) * C885 -
               (C307 * C889 + C92157 * C1087) * C799 +
               (C307 * C807 + C92157 * C1024) * C886 +
               (C307 * C892 + C92157 * C1088) * C800) *
                  C92183 * C90 +
              (C339 * C884 + C414 * C798 -
               (C307 * C803 + C92157 * C1020) * C885 -
               (C307 * C888 + C92157 * C1089) * C799 +
               (C307 * C808 + C92157 * C1025) * C886 +
               (C307 * C893 + C92157 * C1090) * C800) *
                  C92183 * C91 +
              (C341 * C884 + C415 * C798 -
               (C307 * C802 + C92157 * C1019) * C885 -
               (C307 * C887 + C92157 * C1091) * C799 +
               (C307 * C809 + C92157 * C1026) * C886 +
               (C307 * C894 + C92157 * C1092) * C800) *
                  C92183 * C92) *
             C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C92183 * C89 +
           (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
              C92084 * C1383 -
          (((C307 * C1468 + C92157 * C1669) * C92105 +
            (C307 * C1386 + C92157 * C1603) * C181) *
               C92183 * C92 +
           ((C307 * C1469 + C92157 * C1670) * C92105 +
            (C307 * C1387 + C92157 * C1604) * C181) *
               C92183 * C91 +
           ((C307 * C1470 + C92157 * C1671) * C92105 +
            (C307 * C1388 + C92157 * C1605) * C181) *
               C92183 * C90 +
           ((C307 * C1471 + C92157 * C1672) * C92105 +
            (C307 * C1389 + C92157 * C1606) * C181) *
               C92183 * C89) *
              C92084 * C1384 +
          (((C307 * C1390 + C92157 * C1607) * C181 +
            (C307 * C1472 + C92157 * C1673) * C92105) *
               C92183 * C89 +
           ((C307 * C1391 + C92157 * C1608) * C181 +
            (C307 * C1473 + C92157 * C1674) * C92105) *
               C92183 * C90 +
           ((C307 * C1392 + C92157 * C1609) * C181 +
            (C307 * C1474 + C92157 * C1675) * C92105) *
               C92183 * C91 +
           ((C307 * C1393 + C92157 * C1610) * C181 +
            (C307 * C1475 + C92157 * C1676) * C92105) *
               C92183 * C92) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C181 +
            (C14876 + C14877 + C14878) * C92105) *
               C92183 * C92072) *
              C93 -
          (((C14879 + C14880 + C14881) * C92105 +
            (C14786 + C14785 + C14784) * C181) *
               C92183 * C92072 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92183 * C92322) *
              C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C181 +
            (C14750 * C185 + C14523 * C397 + C14751 * C887 + C14524 * C1091 +
             C14752 * C894 + C14525 * C1092) *
                C92105) *
               C92183 * C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92183 * C92322 +
          ((C14780 + C14779 + C14778) * C884 +
           (C14876 + C14877 + C14878) * C798 -
           (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
            C14750 * C804 + C14523 * C1021) *
               C885 -
           (C14752 * C4988 + C14525 * C5264 + C14751 * C892 + C14524 * C1088 +
            C14750 * C889 + C14523 * C1087) *
               C799 +
           (C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
            C14752 * C15274 + C14525 * C15594) *
               C886 +
           (C14750 * C892 + C14523 * C1088 + C14751 * C4988 + C14524 * C5264 +
            C14752 * C15397 + C14525 * C15672) *
               C800) *
              C92183 * C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C181 +
            (C14876 + C14877 + C14878) * C92105) *
               C92183 * C92072) *
              C92084 * C1383 -
          (((C14752 * C8541 + C14525 * C8871 + C14751 * C3514 + C14524 * C3736 +
             C14750 * C1470 + C14523 * C1671) *
                C92105 +
            (C14752 * C8413 + C14525 * C8767 + C14751 * C3432 + C14524 * C3662 +
             C14750 * C1388 + C14523 * C1605) *
                C181) *
               C92183 * C92072 +
           ((C14752 * C8540 + C14525 * C8870 + C14751 * C3513 + C14524 * C3735 +
             C14750 * C1471 + C14523 * C1672) *
                C92105 +
            (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 + C14524 * C3661 +
             C14750 * C1389 + C14523 * C1606) *
                C181) *
               C92183 * C92322) *
              C92084 * C1384 +
          (((C14750 * C1390 + C14523 * C1607 + C14751 * C5719 + C14524 * C5965 +
             C14752 * C16095 + C14525 * C16333) *
                C181 +
            (C14750 * C1472 + C14523 * C1673 + C14751 * C5805 + C14524 * C6045 +
             C14752 * C16177 + C14525 * C16411) *
                C92105) *
               C92183 * C92322 +
           ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
             C14752 * C16096 + C14525 * C16334) *
                C181 +
            (C14750 * C1473 + C14523 * C1674 + C14751 * C5806 + C14524 * C6046 +
             C14752 * C16178 + C14525 * C16412) *
                C92105) *
               C92183 * C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C28197 +
            (C11246 + C11262) * C28198 + (C11257 + C11265) * C28199) *
               C92322 +
           ((C401 + C417) * C28197 + C13093 * C28198 +
            (C11254 + C11264) * C28199) *
               C92072) *
              C93 -
          (((C11263 + C11251) * C28199 + C13094 * C28198 +
            (C418 + C404) * C28197) *
               C92072 +
           ((C11264 + C11254) * C28199 + C13095 * C28198 +
            (C417 + C401) * C28197) *
               C92322) *
              C94 +
          ((C421 * C28197 + C9676 * C28198 + (C11251 + C11263) * C28199) *
               C92322 +
           (C422 * C28197 + (C3013 + C3021) * C28198 +
            ((C307 * C1393 + C92157 * C1610) * C181 +
             (C307 * C1475 + C92157 * C1676) * C92105) *
                C28199) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C28197 +
           (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C28198 +
           (C11160 * C884 + C11261 * C798 -
            (C307 * C5719 + C92157 * C5965) * C885 -
            (C307 * C5805 + C92157 * C6045) * C799 +
            (C307 * C16095 + C92157 * C16333) * C886 +
            (C307 * C16177 + C92157 * C16411) * C800) *
               C28199) *
              C92322 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C28197 +
           (C2934 * C884 + C3016 * C798 - C11989 * C885 - C12101 * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C28198 +
           (C11158 * C884 + C11260 * C798 -
            (C307 * C5720 + C92157 * C5966) * C885 -
            (C307 * C5806 + C92157 * C6046) * C799 +
            (C307 * C16096 + C92157 * C16334) * C886 +
            (C307 * C16178 + C92157 * C16412) * C800) *
               C28199) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C28197 +
            (C11246 + C11262) * C28198 + C30032 * C28199) *
               C92322 +
           ((C401 + C417) * C28197 + C13093 * C28198 + C30033 * C28199) *
               C92072) *
              C92084 * C1383 -
          (((C30042 + C30036) * C28199 + (C11264 + C11254) * C28198 +
            C13095 * C28197) *
               C92072 +
           ((C30043 + C30039) * C28199 + (C11265 + C11257) * C28198 +
            (C11262 + C11246) * C28197) *
               C92322) *
              C92084 * C1384 +
          ((C30032 * C28197 + (C30039 + C30043) * C28198 +
            ((C307 * C29611 + C92157 * C29933) * C181 +
             (C307 * C29735 + C92157 * C30029) * C92105) *
                C28199) *
               C92322 +
           (C30033 * C28197 + (C30036 + C30042) * C28198 +
            ((C307 * C29612 + C92157 * C29934) * C181 +
             (C307 * C29736 + C92157 * C30030) * C92105) *
                C28199) *
               C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92157 * C308) * C244 +
                (C307 * C245 + C92157 * C474) * C92116) *
                   C92183 * C89 +
               (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
                  C92105 * C93 -
              ((C500 + C492) * C92183 * C92 + (C499 + C487) * C92183 * C91 +
               (C498 + C484) * C92183 * C90 + (C497 + C481) * C92183 * C89) *
                  C92105 * C94 +
              (C503 * C89 + C504 * C90 + (C492 + C500) * C92183 * C91 +
               ((C307 * C112 + C92157 * C313) * C244 +
                (C307 * C250 + C92157 * C479) * C92116) *
                   C92183 * C92) *
                  C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92157 * C308) * C244 +
                (C307 * C245 + C92157 * C474) * C92116) *
                   C92183 * C89 +
               (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
                  C798 -
              (((C307 * C953 + C92157 * C1143) * C92116 +
                (C307 * C802 + C92157 * C1019) * C244) *
                   C92183 * C92 +
               ((C307 * C954 + C92157 * C1144) * C92116 +
                (C307 * C803 + C92157 * C1020) * C244) *
                   C92183 * C91 +
               ((C307 * C955 + C92157 * C1145) * C92116 +
                (C307 * C804 + C92157 * C1021) * C244) *
                   C92183 * C90 +
               ((C307 * C956 + C92157 * C1146) * C92116 +
                (C307 * C805 + C92157 * C1022) * C244) *
                   C92183 * C89) *
                  C799 +
              (((C307 * C806 + C92157 * C1023) * C244 +
                (C307 * C957 + C92157 * C1147) * C92116) *
                   C92183 * C89 +
               ((C307 * C807 + C92157 * C1024) * C244 +
                (C307 * C958 + C92157 * C1148) * C92116) *
                   C92183 * C90 +
               ((C307 * C808 + C92157 * C1025) * C244 +
                (C307 * C959 + C92157 * C1149) * C92116) *
                   C92183 * C91 +
               ((C307 * C809 + C92157 * C1026) * C244 +
                (C307 * C960 + C92157 * C1150) * C92116) *
                   C92183 * C92) *
                  C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C1534 +
           (C307 * C245 + C92157 * C474) * C1383 -
           (C307 * C1389 + C92157 * C1606) * C1535 -
           (C307 * C1540 + C92157 * C1727) * C1384 +
           (C307 * C1390 + C92157 * C1607) * C1536 +
           (C307 * C1541 + C92157 * C1728) * C1385) *
              C92183 * C89 +
          (C337 * C1534 + C493 * C1383 -
           (C307 * C1388 + C92157 * C1605) * C1535 -
           (C307 * C1539 + C92157 * C1729) * C1384 +
           (C307 * C1391 + C92157 * C1608) * C1536 +
           (C307 * C1542 + C92157 * C1730) * C1385) *
              C92183 * C90 +
          (C339 * C1534 + C494 * C1383 -
           (C307 * C1387 + C92157 * C1604) * C1535 -
           (C307 * C1538 + C92157 * C1731) * C1384 +
           (C307 * C1392 + C92157 * C1609) * C1536 +
           (C307 * C1543 + C92157 * C1732) * C1385) *
              C92183 * C91 +
          (C341 * C1534 + C495 * C1383 -
           (C307 * C1386 + C92157 * C1603) * C1535 -
           (C307 * C1537 + C92157 * C1733) * C1384 +
           (C307 * C1393 + C92157 * C1610) * C1536 +
           (C307 * C1544 + C92157 * C1734) * C1385) *
              C92183 * C92) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C92105 * C93 -
          (((C14971 + C14972 + C14973) * C92116 +
            (C14786 + C14785 + C14784) * C244) *
               C92183 * C92072 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92183 * C92322) *
              C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C244 +
            (C14750 * C248 + C14523 * C477 + C14751 * C953 + C14524 * C1143 +
             C14752 * C960 + C14525 * C1150) *
                C92116) *
               C92183 * C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C798 -
          (((C14752 * C5086 + C14525 * C5341 + C14751 * C958 + C14524 * C1148 +
             C14750 * C955 + C14523 * C1145) *
                C92116 +
            (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
             C14750 * C804 + C14523 * C1021) *
                C244) *
               C92183 * C92072 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92183 * C92322) *
              C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92183 * C92322 +
           ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
             C14752 * C15274 + C14525 * C15594) *
                C244 +
            (C14750 * C958 + C14523 * C1148 + C14751 * C5086 + C14524 * C5341 +
             C14752 * C15494 + C14525 * C15748) *
                C92116) *
               C92183 * C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C1534 +
           (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
            C14752 * C957 + C14525 * C1147) *
               C1383 -
           (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 + C14524 * C3661 +
            C14750 * C1389 + C14523 * C1606) *
               C1535 -
           (C14752 * C8653 + C14525 * C8971 + C14751 * C3587 + C14524 * C3805 +
            C14750 * C1540 + C14523 * C1727) *
               C1384 +
           (C14750 * C1390 + C14523 * C1607 + C14751 * C5719 + C14524 * C5965 +
            C14752 * C16095 + C14525 * C16333) *
               C1536 +
           (C14750 * C1541 + C14523 * C1728 + C14751 * C5885 + C14524 * C6122 +
            C14752 * C16255 + C14525 * C16487) *
               C1385) *
              C92183 * C92322 +
          ((C14780 + C14779 + C14778) * C1534 +
           (C14968 + C14969 + C14970) * C1383 -
           (C14752 * C8413 + C14525 * C8767 + C14751 * C3432 + C14524 * C3662 +
            C14750 * C1388 + C14523 * C1605) *
               C1535 -
           (C14752 * C8654 + C14525 * C8972 + C14751 * C3588 + C14524 * C3806 +
            C14750 * C1539 + C14523 * C1729) *
               C1384 +
           (C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
            C14752 * C16096 + C14525 * C16334) *
               C1536 +
           (C14750 * C1542 + C14523 * C1730 + C14751 * C5886 + C14524 * C6123 +
            C14752 * C16256 + C14525 * C16488) *
               C1385) *
              C92183 * C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C28197 +
            (C11153 * C244 + C11351 * C92116) * C28198 +
            (C11160 * C244 + C11352 * C92116) * C28199) *
               C92322 +
           ((C481 + C497) * C28197 + (C9753 + C9754) * C28198 +
            (C28571 + C28572) * C28199) *
               C92072) *
              C92105 * C93 -
          (((C28573 + C28574) * C28199 + (C9757 + C9756) * C28198 +
            (C498 + C484) * C28197) *
               C92072 +
           ((C28572 + C28571) * C28199 + (C9754 + C9753) * C28198 +
            (C497 + C481) * C28197) *
               C92322) *
              C92105 * C94 +
          ((C501 * C28197 + C9760 * C28198 + (C28574 + C28573) * C28199) *
               C92322 +
           (C502 * C28197 + (C9759 + C9758) * C28198 +
            ((C307 * C1393 + C92157 * C1610) * C244 +
             (C307 * C1544 + C92157 * C1734) * C92116) *
                C28199) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C28197 +
            (C11153 * C244 + C11351 * C92116) * C28198 +
            (C11160 * C244 + C11352 * C92116) * C28199) *
               C92322 +
           ((C481 + C497) * C28197 + (C9753 + C9754) * C28198 +
            (C28571 + C28572) * C28199) *
               C92072) *
              C798 -
          ((((C307 * C5886 + C92157 * C6123) * C92116 +
             (C307 * C5720 + C92157 * C5966) * C244) *
                C28199 +
            (C12212 + C12208) * C28198 + (C2387 + C2381) * C28197) *
               C92072 +
           (((C307 * C5885 + C92157 * C6122) * C92116 +
             (C307 * C5719 + C92157 * C5965) * C244) *
                C28199 +
            (C14153 * C92116 + C13944 * C244) * C28198 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C28197) *
               C92322) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C28197 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C28198 +
            ((C307 * C16095 + C92157 * C16333) * C244 +
             (C307 * C16255 + C92157 * C16487) * C92116) *
                C28199) *
               C92322 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C28197 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C28198 +
            ((C307 * C16096 + C92157 * C16334) * C244 +
             (C307 * C16256 + C92157 * C16488) * C92116) *
                C28199) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1534 +
            (C307 * C245 + C92157 * C474) * C1383 - C11153 * C1535 -
            C11351 * C1384 + C11160 * C1536 + C11352 * C1385) *
               C28197 +
           (C11153 * C1534 + C11351 * C1383 - C11160 * C1535 - C11352 * C1384 +
            C29951 * C1536 + C30124 * C1385) *
               C28198 +
           (C11160 * C1534 + C11352 * C1383 - C29951 * C1535 - C30124 * C1384 +
            (C307 * C29611 + C92157 * C29933) * C1536 +
            (C307 * C29836 + C92157 * C30117) * C1385) *
               C28199) *
              C92322 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C11158 * C1536 + C11353 * C1385) *
               C28197 +
           (C2934 * C1534 + C3104 * C1383 - C11158 * C1535 - C11353 * C1384 +
            C29949 * C1536 + C30125 * C1385) *
               C28198 +
           (C11158 * C1534 + C11353 * C1383 - C29949 * C1535 - C30125 * C1384 +
            (C307 * C29612 + C92157 * C29934) * C1536 +
            (C307 * C29837 + C92157 * C30118) * C1385) *
               C28199) *
              C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C554 * C107 + C92183 * C555) * C104 +
               (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
               C586 * C106 + C587 * C95) *
                  C89 +
              (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
               C588 * C106 + C589 * C95) *
                  C90 +
              (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
               C590 * C106 + C591 * C95) *
                  C91 +
              (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
               (C554 * C112 + C92183 * C560) * C106 +
               (C554 * C124 + C92183 * C566) * C95) *
                  C92) *
             C92157 * C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92183 * C555) * C801 +
                (C554 * C117 + C92183 * C561) * C92084) *
                   C89 +
               (C584 * C801 + C585 * C92084) * C90 +
               (C586 * C801 + C587 * C92084) * C91 +
               (C588 * C801 + C589 * C92084) * C92) *
                  C92157 * C92116 * C798 -
              (((C554 * C810 + C92183 * C1209) * C92084 +
                (C554 * C802 + C92183 * C1201) * C801) *
                   C92 +
               ((C554 * C811 + C92183 * C1210) * C92084 +
                (C554 * C803 + C92183 * C1202) * C801) *
                   C91 +
               ((C554 * C812 + C92183 * C1211) * C92084 +
                (C554 * C804 + C92183 * C1203) * C801) *
                   C90 +
               ((C554 * C813 + C92183 * C1212) * C92084 +
                (C554 * C805 + C92183 * C1204) * C801) *
                   C89) *
                  C92157 * C92116 * C799 +
              (((C554 * C806 + C92183 * C1205) * C801 +
                (C554 * C822 + C92183 * C1213) * C92084) *
                   C89 +
               ((C554 * C807 + C92183 * C1206) * C801 +
                (C554 * C823 + C92183 * C1214) * C92084) *
                   C90 +
               ((C554 * C808 + C92183 * C1207) * C801 +
                (C554 * C824 + C92183 * C1215) * C92084) *
                   C91 +
               ((C554 * C809 + C92183 * C1208) * C801 +
                (C554 * C825 + C92183 * C1216) * C92084) *
                   C92) *
                  C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C801 +
            (C554 * C117 + C92183 * C561) * C92084) *
               C89 +
           (C584 * C801 + C585 * C92084) * C90 +
           (C586 * C801 + C587 * C92084) * C91 +
           (C588 * C801 + C589 * C92084) * C92) *
              C92157 * C1383 -
          (((C554 * C1394 + C92183 * C1793) * C92084 +
            (C554 * C1386 + C92183 * C1785) * C801) *
               C92 +
           ((C554 * C1395 + C92183 * C1794) * C92084 +
            (C554 * C1387 + C92183 * C1786) * C801) *
               C91 +
           ((C554 * C1396 + C92183 * C1795) * C92084 +
            (C554 * C1388 + C92183 * C1787) * C801) *
               C90 +
           ((C554 * C1397 + C92183 * C1796) * C92084 +
            (C554 * C1389 + C92183 * C1788) * C801) *
               C89) *
              C92157 * C1384 +
          (((C554 * C1390 + C92183 * C1789) * C801 +
            (C554 * C1406 + C92183 * C1797) * C92084) *
               C89 +
           ((C554 * C1391 + C92183 * C1790) * C801 +
            (C554 * C1407 + C92183 * C1798) * C92084) *
               C90 +
           ((C554 * C1392 + C92183 * C1791) * C801 +
            (C554 * C1408 + C92183 * C1799) * C92084) *
               C91 +
           ((C554 * C1393 + C92183 * C1792) * C801 +
            (C554 * C1409 + C92183 * C1800) * C92084) *
               C92) *
              C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92322 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92072) *
              C14523 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92322 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92072) *
              C14524 +
          ((C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
            C5447 * C106 + C5446 * C95) *
               C92322 +
           (C5449 * C104 + C5448 * C93 - C5447 * C105 - C5446 * C94 +
            (C554 * C809 + C92183 * C1208) * C106 +
            (C554 * C825 + C92183 * C1216) * C95) *
               C92072) *
              C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92322 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C14523 +
           ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
           C15844 * C14525) *
              C92116 * C798 -
          (((C15845 + C15846) * C92072 + (C15847 + C15848) * C92322) * C14525 +
           ((C5456 + C5457) * C92072 + (C5458 + C5459) * C92322) * C14524 +
           ((C5429 + C5428) * C92072 + (C5453 + C5452) * C92322) * C14523) *
              C92116 * C799 +
          (C15844 * C14523 +
           ((C15848 + C15847) * C92322 + (C15846 + C15845) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C801 +
             (C554 * C15277 + C92183 * C15825) * C92084) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C801 +
             (C554 * C15278 + C92183 * C15826) * C92084) *
                C92072) *
               C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92322 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C14523 +
           ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
           C15844 * C14525) *
              C1383 -
          ((((C554 * C8419 + C92183 * C9076) * C92084 +
             (C554 * C8413 + C92183 * C9073) * C801) *
                C92072 +
            ((C554 * C8418 + C92183 * C9075) * C92084 +
             (C554 * C8412 + C92183 * C9072) * C801) *
                C92322) *
               C14525 +
           ((C9081 + C9082) * C92072 + (C9089 + C9090) * C92322) * C14524 +
           ((C3191 * C92084 + C3190 * C801) * C92072 +
            ((C554 * C1397 + C92183 * C1796) * C92084 +
             (C554 * C1389 + C92183 * C1788) * C801) *
                C92322) *
               C14523) *
              C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C801 +
             (C554 * C1406 + C92183 * C1797) * C92084) *
                C92322 +
            ((C554 * C1391 + C92183 * C1790) * C801 +
             (C554 * C1407 + C92183 * C1798) * C92084) *
                C92072) *
               C14523 +
           (((C554 * C5719 + C92183 * C6199) * C801 +
             (C554 * C5725 + C92183 * C6202) * C92084) *
                C92322 +
            ((C554 * C5720 + C92183 * C6200) * C801 +
             (C554 * C5726 + C92183 * C6203) * C92084) *
                C92072) *
               C14524 +
           (((C554 * C16095 + C92183 * C16563) * C801 +
             (C554 * C16099 + C92183 * C16565) * C92084) *
                C92322 +
            ((C554 * C16096 + C92183 * C16564) * C801 +
             (C554 * C16100 + C92183 * C16566) * C92084) *
                C92072) *
               C14525) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C104 +
           (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
            C28650 * C1406 + C28199 * C1797) *
               C93 -
           (C28676 + C28677 + C28678) * C105 -
           (C28679 + C28680 + C28681) * C94 +
           (C28682 + C28683 + C28684) * C106 +
           (C28685 + C28686 + C28687) * C95) *
              C92322 +
          ((C28678 + C28677 + C28676) * C104 +
           (C28681 + C28680 + C28679) * C93 -
           (C28684 + C28683 + C28682) * C105 -
           (C28687 + C28686 + C28685) * C94 +
           (C28648 * C110 + C28197 * C558 + C28649 * C1386 + C28198 * C1785 +
            C28650 * C1393 + C28199 * C1792) *
               C106 +
           (C28648 * C120 + C28197 * C564 + C28649 * C1394 + C28198 * C1793 +
            C28650 * C1409 + C28199 * C1800) *
               C95) *
              C92072) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C801 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C92084) *
               C92322 +
           ((C28678 + C28677 + C28676) * C801 +
            (C28681 + C28680 + C28679) * C92084) *
               C92072) *
              C92157 * C92116 * C798 -
          (((C28650 * C5726 + C28199 * C6203 + C28649 * C3440 + C28198 * C3880 +
             C28648 * C812 + C28197 * C1211) *
                C92084 +
            (C28650 * C5720 + C28199 * C6200 + C28649 * C3432 + C28198 * C3876 +
             C28648 * C804 + C28197 * C1203) *
                C801) *
               C92072 +
           ((C28650 * C5725 + C28199 * C6202 + C28649 * C3439 + C28198 * C3879 +
             C28648 * C813 + C28197 * C1212) *
                C92084 +
            (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
             C28648 * C805 + C28197 * C1204) *
                C801) *
               C92322) *
              C92157 * C92116 * C799 +
          (((C28648 * C806 + C28197 * C1205 + C28649 * C8412 + C28198 * C9072 +
             C28650 * C16095 + C28199 * C16563) *
                C801 +
            (C28648 * C822 + C28197 * C1213 + C28649 * C8418 + C28198 * C9075 +
             C28650 * C16099 + C28199 * C16565) *
                C92084) *
               C92322 +
           ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
             C28650 * C16096 + C28199 * C16564) *
                C801 +
            (C28648 * C823 + C28197 * C1214 + C28649 * C8419 + C28198 * C9076 +
             C28650 * C16100 + C28199 * C16566) *
                C92084) *
               C92072) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C801 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C92084) *
               C92322 +
           ((C28678 + C28677 + C28676) * C801 +
            (C28681 + C28680 + C28679) * C92084) *
               C92072) *
              C92157 * C1383 -
          (((C28650 * C10815 + C28199 * C11432 + C28649 * C1407 +
             C28198 * C1798 + C28648 * C1396 + C28197 * C1795) *
                C92084 +
            (C28650 * C10809 + C28199 * C11429 + C28649 * C1391 +
             C28198 * C1790 + C28648 * C1388 + C28197 * C1787) *
                C801) *
               C92072 +
           ((C28650 * C10814 + C28199 * C11431 + C28649 * C1406 +
             C28198 * C1797 + C28648 * C1397 + C28197 * C1796) *
                C92084 +
            (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
             C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                C801) *
               C92322) *
              C92157 * C1384 +
          (((C28648 * C1390 + C28197 * C1789 + C28649 * C10808 +
             C28198 * C11428 + C28650 * C29611 + C28199 * C30199) *
                C801 +
            (C28648 * C1406 + C28197 * C1797 + C28649 * C10814 +
             C28198 * C11431 + C28650 * C29615 + C28199 * C30201) *
                C92084) *
               C92322 +
           ((C28648 * C1391 + C28197 * C1790 + C28649 * C10809 +
             C28198 * C11429 + C28650 * C29612 + C28199 * C30200) *
                C801 +
            (C28648 * C1407 + C28197 * C1798 + C28649 * C10815 +
             C28198 * C11432 + C28650 * C29616 + C28199 * C30202) *
                C92084) *
               C92072) *
              C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92183 * C555) * C181 +
                (C554 * C182 + C92183 * C641) * C92105) *
                   C89 +
               (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
                  C92157 * C93 -
              ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
               (C664 + C648) * C89) *
                  C92157 * C94 +
              (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
               ((C554 * C112 + C92183 * C560) * C181 +
                (C554 * C187 + C92183 * C646) * C92105) *
                   C92) *
                  C92157 * C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             (((C554 * C107 + C92183 * C555) * C884 +
               (C554 * C182 + C92183 * C641) * C798 -
               (C554 * C805 + C92183 * C1204) * C885 -
               (C554 * C890 + C92183 * C1267) * C799 +
               (C554 * C806 + C92183 * C1205) * C886 +
               (C554 * C891 + C92183 * C1268) * C800) *
                  C89 +
              (C584 * C884 + C660 * C798 -
               (C554 * C804 + C92183 * C1203) * C885 -
               (C554 * C889 + C92183 * C1269) * C799 +
               (C554 * C807 + C92183 * C1206) * C886 +
               (C554 * C892 + C92183 * C1270) * C800) *
                  C90 +
              (C586 * C884 + C661 * C798 -
               (C554 * C803 + C92183 * C1202) * C885 -
               (C554 * C888 + C92183 * C1271) * C799 +
               (C554 * C808 + C92183 * C1207) * C886 +
               (C554 * C893 + C92183 * C1272) * C800) *
                  C91 +
              (C588 * C884 + C662 * C798 -
               (C554 * C802 + C92183 * C1201) * C885 -
               (C554 * C887 + C92183 * C1273) * C799 +
               (C554 * C809 + C92183 * C1208) * C886 +
               (C554 * C894 + C92183 * C1274) * C800) *
                  C92) *
             C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C554 * C107 + C92183 * C555) * C181 +
                                (C554 * C182 + C92183 * C641) * C92105) *
                                   C89 +
                               (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
                                  C92157 * C92084 * C1383 -
                              (((C554 * C1468 + C92183 * C1851) * C92105 +
                                (C554 * C1386 + C92183 * C1785) * C181) *
                                   C92 +
                               ((C554 * C1469 + C92183 * C1852) * C92105 +
                                (C554 * C1387 + C92183 * C1786) * C181) *
                                   C91 +
                               ((C554 * C1470 + C92183 * C1853) * C92105 +
                                (C554 * C1388 + C92183 * C1787) * C181) *
                                   C90 +
                               ((C554 * C1471 + C92183 * C1854) * C92105 +
                                (C554 * C1389 + C92183 * C1788) * C181) *
                                   C89) *
                                  C92157 * C92084 * C1384 +
                              (((C554 * C1390 + C92183 * C1789) * C181 +
                                (C554 * C1472 + C92183 * C1855) * C92105) *
                                   C89 +
                               ((C554 * C1391 + C92183 * C1790) * C181 +
                                (C554 * C1473 + C92183 * C1856) * C92105) *
                                   C90 +
                               ((C554 * C1392 + C92183 * C1791) * C181 +
                                (C554 * C1474 + C92183 * C1857) * C92105) *
                                   C91 +
                               ((C554 * C1393 + C92183 * C1792) * C181 +
                                (C554 * C1475 + C92183 * C1858) * C92105) *
                                   C92) *
                                  C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92322 +
            (C648 + C664) * C92072) *
               C14523 +
           ((C5444 * C181 + C5545 * C92105) * C92322 +
            (C4710 + C4711) * C92072) *
               C14524 +
           ((C5451 * C181 + C5546 * C92105) * C92322 +
            (C15122 + C15123) * C92072) *
               C14525) *
              C93 -
          (((C15124 + C15125) * C92072 + (C15123 + C15122) * C92322) * C14525 +
           ((C4713 + C4712) * C92072 + (C4711 + C4710) * C92322) * C14524 +
           ((C665 + C651) * C92072 + (C664 + C648) * C92322) * C14523) *
              C94 +
          ((C668 * C92322 + C669 * C92072) * C14523 +
           (C4716 * C92322 + (C4715 + C4714) * C92072) * C14524 +
           ((C15125 + C15124) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C181 +
             (C554 * C894 + C92183 * C1274) * C92105) *
                C92072) *
               C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C92322 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92072) *
              C14523 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C92322 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92072) *
              C14524 +
          ((C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
            (C554 * C15273 + C92183 * C15823) * C886 +
            (C554 * C15396 + C92183 * C15922) * C800) *
               C92322 +
           (C5449 * C884 + C5547 * C798 - C15841 * C885 - C15930 * C799 +
            (C554 * C15274 + C92183 * C15824) * C886 +
            (C554 * C15397 + C92183 * C15923) * C800) *
               C92072) *
              C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C554 * C107 + C92183 * C555) * C181 +
                                 (C554 * C182 + C92183 * C641) * C92105) *
                                    C92322 +
                                (C648 + C664) * C92072) *
                                   C14523 +
                               ((C5444 * C181 + C5545 * C92105) * C92322 +
                                (C4710 + C4711) * C92072) *
                                   C14524 +
                               ((C5451 * C181 + C5546 * C92105) * C92322 +
                                (C15122 + C15123) * C92072) *
                                   C14525) *
                                  C92084 * C1383 -
                              ((((C554 * C8541 + C92183 * C9189) * C92105 +
                                 (C554 * C8413 + C92183 * C9073) * C181) *
                                    C92072 +
                                ((C554 * C8540 + C92183 * C9188) * C92105 +
                                 (C554 * C8412 + C92183 * C9072) * C181) *
                                    C92322) *
                                   C14525 +
                               ((C8201 + C8193) * C92072 +
                                (C9194 * C92105 + C9088 * C181) * C92322) *
                                   C14524 +
                               ((C3275 + C3263) * C92072 +
                                ((C554 * C1471 + C92183 * C1854) * C92105 +
                                 (C554 * C1389 + C92183 * C1788) * C181) *
                                    C92322) *
                                   C14523) *
                                  C92084 * C1384 +
                              ((((C554 * C1390 + C92183 * C1789) * C181 +
                                 (C554 * C1472 + C92183 * C1855) * C92105) *
                                    C92322 +
                                ((C554 * C1391 + C92183 * C1790) * C181 +
                                 (C554 * C1473 + C92183 * C1856) * C92105) *
                                    C92072) *
                                   C14523 +
                               (((C554 * C5719 + C92183 * C6199) * C181 +
                                 (C554 * C5805 + C92183 * C6279) * C92105) *
                                    C92322 +
                                ((C554 * C5720 + C92183 * C6200) * C181 +
                                 (C554 * C5806 + C92183 * C6280) * C92105) *
                                    C92072) *
                                   C14524 +
                               (((C554 * C16095 + C92183 * C16563) * C181 +
                                 (C554 * C16177 + C92183 * C16641) * C92105) *
                                    C92322 +
                                ((C554 * C16096 + C92183 * C16564) * C181 +
                                 (C554 * C16178 + C92183 * C16642) * C92105) *
                                    C92072) *
                                   C14525) *
                                  C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C181 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C92105) *
               C92322 +
           ((C28678 + C28677 + C28676) * C181 +
            (C28774 + C28775 + C28776) * C92105) *
               C92072) *
              C92157 * C93 -
          (((C28777 + C28778 + C28779) * C92105 +
            (C28684 + C28683 + C28682) * C181) *
               C92072 +
           ((C28776 + C28775 + C28774) * C92105 +
            (C28676 + C28677 + C28678) * C181) *
               C92322) *
              C92157 * C94 +
          (((C28682 + C28683 + C28684) * C181 +
            (C28779 + C28778 + C28777) * C92105) *
               C92322 +
           ((C28648 * C110 + C28197 * C558 + C28649 * C1386 + C28198 * C1785 +
             C28650 * C1393 + C28199 * C1792) *
                C181 +
            (C28648 * C185 + C28197 * C644 + C28649 * C1468 + C28198 * C1851 +
             C28650 * C1475 + C28199 * C1858) *
                C92105) *
               C92072) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C884 +
           (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
            C28650 * C1472 + C28199 * C1855) *
               C798 -
           (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
            C28648 * C805 + C28197 * C1204) *
               C885 -
           (C28650 * C5805 + C28199 * C6279 + C28649 * C3513 + C28198 * C3949 +
            C28648 * C890 + C28197 * C1267) *
               C799 +
           (C28648 * C806 + C28197 * C1205 + C28649 * C8412 + C28198 * C9072 +
            C28650 * C16095 + C28199 * C16563) *
               C886 +
           (C28648 * C891 + C28197 * C1268 + C28649 * C8540 + C28198 * C9188 +
            C28650 * C16177 + C28199 * C16641) *
               C800) *
              C92322 +
          ((C28678 + C28677 + C28676) * C884 +
           (C28774 + C28775 + C28776) * C798 -
           (C28650 * C5720 + C28199 * C6200 + C28649 * C3432 + C28198 * C3876 +
            C28648 * C804 + C28197 * C1203) *
               C885 -
           (C28650 * C5806 + C28199 * C6280 + C28649 * C3514 + C28198 * C3950 +
            C28648 * C889 + C28197 * C1269) *
               C799 +
           (C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
            C28650 * C16096 + C28199 * C16564) *
               C886 +
           (C28648 * C892 + C28197 * C1270 + C28649 * C8541 + C28198 * C9189 +
            C28650 * C16178 + C28199 * C16642) *
               C800) *
              C92072) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C181 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C92105) *
               C92322 +
           ((C28678 + C28677 + C28676) * C181 +
            (C28774 + C28775 + C28776) * C92105) *
               C92072) *
              C92157 * C92084 * C1383 -
          (((C28650 * C10931 + C28199 * C11509 + C28649 * C1473 +
             C28198 * C1856 + C28648 * C1470 + C28197 * C1853) *
                C92105 +
            (C28650 * C10809 + C28199 * C11429 + C28649 * C1391 +
             C28198 * C1790 + C28648 * C1388 + C28197 * C1787) *
                C181) *
               C92072 +
           ((C28650 * C10930 + C28199 * C11508 + C28649 * C1472 +
             C28198 * C1855 + C28648 * C1471 + C28197 * C1854) *
                C92105 +
            (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
             C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                C181) *
               C92322) *
              C92157 * C92084 * C1384 +
          (((C28648 * C1390 + C28197 * C1789 + C28649 * C10808 +
             C28198 * C11428 + C28650 * C29611 + C28199 * C30199) *
                C181 +
            (C28648 * C1472 + C28197 * C1855 + C28649 * C10930 +
             C28198 * C11508 + C28650 * C29735 + C28199 * C30277) *
                C92105) *
               C92322 +
           ((C28648 * C1391 + C28197 * C1790 + C28649 * C10809 +
             C28198 * C11429 + C28650 * C29612 + C28199 * C30200) *
                C181 +
            (C28648 * C1473 + C28197 * C1856 + C28649 * C10931 +
             C28198 * C11509 + C28650 * C29736 + C28199 * C30278) *
                C92105) *
               C92072) *
              C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92183 * C555) * C244 +
                (C554 * C245 + C92183 * C719) * C92116) *
                   C89 +
               (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
                  C92157 * C92105 * C93 -
              ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
               (C742 + C726) * C89) *
                  C92157 * C92105 * C94 +
              (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
               ((C554 * C112 + C92183 * C560) * C244 +
                (C554 * C250 + C92183 * C724) * C92116) *
                   C92) *
                  C92157 * C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92183 * C555) * C244 +
                (C554 * C245 + C92183 * C719) * C92116) *
                   C89 +
               (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
                  C92157 * C798 -
              (((C554 * C953 + C92183 * C1325) * C92116 +
                (C554 * C802 + C92183 * C1201) * C244) *
                   C92 +
               ((C554 * C954 + C92183 * C1326) * C92116 +
                (C554 * C803 + C92183 * C1202) * C244) *
                   C91 +
               ((C554 * C955 + C92183 * C1327) * C92116 +
                (C554 * C804 + C92183 * C1203) * C244) *
                   C90 +
               ((C554 * C956 + C92183 * C1328) * C92116 +
                (C554 * C805 + C92183 * C1204) * C244) *
                   C89) *
                  C92157 * C799 +
              (((C554 * C806 + C92183 * C1205) * C244 +
                (C554 * C957 + C92183 * C1329) * C92116) *
                   C89 +
               ((C554 * C807 + C92183 * C1206) * C244 +
                (C554 * C958 + C92183 * C1330) * C92116) *
                   C90 +
               ((C554 * C808 + C92183 * C1207) * C244 +
                (C554 * C959 + C92183 * C1331) * C92116) *
                   C91 +
               ((C554 * C809 + C92183 * C1208) * C244 +
                (C554 * C960 + C92183 * C1332) * C92116) *
                   C92) *
                  C92157 * C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C1534 +
           (C554 * C245 + C92183 * C719) * C1383 -
           (C554 * C1389 + C92183 * C1788) * C1535 -
           (C554 * C1540 + C92183 * C1909) * C1384 +
           (C554 * C1390 + C92183 * C1789) * C1536 +
           (C554 * C1541 + C92183 * C1910) * C1385) *
              C89 +
          (C584 * C1534 + C738 * C1383 -
           (C554 * C1388 + C92183 * C1787) * C1535 -
           (C554 * C1539 + C92183 * C1911) * C1384 +
           (C554 * C1391 + C92183 * C1790) * C1536 +
           (C554 * C1542 + C92183 * C1912) * C1385) *
              C90 +
          (C586 * C1534 + C739 * C1383 -
           (C554 * C1387 + C92183 * C1786) * C1535 -
           (C554 * C1538 + C92183 * C1913) * C1384 +
           (C554 * C1392 + C92183 * C1791) * C1536 +
           (C554 * C1543 + C92183 * C1914) * C1385) *
              C91 +
          (C588 * C1534 + C740 * C1383 -
           (C554 * C1386 + C92183 * C1785) * C1535 -
           (C554 * C1537 + C92183 * C1915) * C1384 +
           (C554 * C1393 + C92183 * C1792) * C1536 +
           (C554 * C1544 + C92183 * C1916) * C1385) *
              C92) *
         C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           ((C5637 + C5645) * C92322 + (C5634 + C5644) * C92072) * C14525) *
              C92105 * C93 -
          (((C5643 + C5631) * C92072 + (C5644 + C5634) * C92322) * C14525 +
           (C7347 * C92072 + C7348 * C92322) * C14524 +
           ((C743 + C729) * C92072 + (C742 + C726) * C92322) * C14523) *
              C92105 * C94 +
          ((C746 * C92322 + C747 * C92072) * C14523 +
           (C4791 * C92322 + (C2631 + C2641) * C92072) * C14524 +
           ((C5631 + C5643) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C244 +
             (C554 * C960 + C92183 * C1332) * C92116) *
                C92072) *
               C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           C16019 * C14525) *
              C798 -
          (((C16020 + C16011) * C92072 + (C16021 + C16014) * C92322) * C14525 +
           ((C5644 + C5634) * C92072 + (C5645 + C5637) * C92322) * C14524 +
           (C7348 * C92072 + (C5642 + C5626) * C92322) * C14523) *
              C799 +
          (C16019 * C14523 +
           ((C16014 + C16021) * C92322 + (C16011 + C16020) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C244 +
             (C554 * C15493 + C92183 * C16004) * C92116) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92072) *
               C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1534 +
            (C554 * C245 + C92183 * C719) * C1383 -
            (C554 * C1389 + C92183 * C1788) * C1535 -
            (C554 * C1540 + C92183 * C1909) * C1384 +
            (C554 * C1390 + C92183 * C1789) * C1536 +
            (C554 * C1541 + C92183 * C1910) * C1385) *
               C92322 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92183 * C1790) * C1536 +
            (C554 * C1542 + C92183 * C1912) * C1385) *
               C92072) *
              C14523 +
          ((C5444 * C1534 + C5638 * C1383 - C9088 * C1535 - C9301 * C1384 +
            (C554 * C5719 + C92183 * C6199) * C1536 +
            (C554 * C5885 + C92183 * C6356) * C1385) *
               C92322 +
           (C2468 * C1534 + C2640 * C1383 - C8091 * C1535 - C8311 * C1384 +
            (C554 * C5720 + C92183 * C6200) * C1536 +
            (C554 * C5886 + C92183 * C6357) * C1385) *
               C92072) *
              C14524 +
          ((C5451 * C1534 + C5641 * C1383 -
            (C554 * C8412 + C92183 * C9072) * C1535 -
            (C554 * C8653 + C92183 * C9292) * C1384 +
            (C554 * C16095 + C92183 * C16563) * C1536 +
            (C554 * C16255 + C92183 * C16717) * C1385) *
               C92322 +
           (C5449 * C1534 + C5640 * C1383 -
            (C554 * C8413 + C92183 * C9073) * C1535 -
            (C554 * C8654 + C92183 * C9293) * C1384 +
            (C554 * C16096 + C92183 * C16564) * C1536 +
            (C554 * C16256 + C92183 * C16718) * C1385) *
               C92072) *
              C14525) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92322 +
           ((C28678 + C28677 + C28676) * C244 +
            (C28866 + C28867 + C28868) * C92116) *
               C92072) *
              C92157 * C92105 * C93 -
          (((C28869 + C28870 + C28871) * C92116 +
            (C28684 + C28683 + C28682) * C244) *
               C92072 +
           ((C28868 + C28867 + C28866) * C92116 +
            (C28676 + C28677 + C28678) * C244) *
               C92322) *
              C92157 * C92105 * C94 +
          (((C28682 + C28683 + C28684) * C244 +
            (C28871 + C28870 + C28869) * C92116) *
               C92322 +
           ((C28648 * C110 + C28197 * C558 + C28649 * C1386 + C28198 * C1785 +
             C28650 * C1393 + C28199 * C1792) *
                C244 +
            (C28648 * C248 + C28197 * C722 + C28649 * C1537 + C28198 * C1915 +
             C28650 * C1544 + C28199 * C1916) *
                C92116) *
               C92072) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92322 +
           ((C28678 + C28677 + C28676) * C244 +
            (C28866 + C28867 + C28868) * C92116) *
               C92072) *
              C92157 * C798 -
          (((C28650 * C5886 + C28199 * C6357 + C28649 * C3588 + C28198 * C4020 +
             C28648 * C955 + C28197 * C1327) *
                C92116 +
            (C28650 * C5720 + C28199 * C6200 + C28649 * C3432 + C28198 * C3876 +
             C28648 * C804 + C28197 * C1203) *
                C244) *
               C92072 +
           ((C28650 * C5885 + C28199 * C6356 + C28649 * C3587 + C28198 * C4019 +
             C28648 * C956 + C28197 * C1328) *
                C92116 +
            (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
             C28648 * C805 + C28197 * C1204) *
                C244) *
               C92322) *
              C92157 * C799 +
          (((C28648 * C806 + C28197 * C1205 + C28649 * C8412 + C28198 * C9072 +
             C28650 * C16095 + C28199 * C16563) *
                C244 +
            (C28648 * C957 + C28197 * C1329 + C28649 * C8653 + C28198 * C9292 +
             C28650 * C16255 + C28199 * C16717) *
                C92116) *
               C92322 +
           ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
             C28650 * C16096 + C28199 * C16564) *
                C244 +
            (C28648 * C958 + C28197 * C1330 + C28649 * C8654 + C28198 * C9293 +
             C28650 * C16256 + C28199 * C16718) *
                C92116) *
               C92072) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C1534 +
           (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
            C28650 * C1541 + C28199 * C1910) *
               C1383 -
           (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
            C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
               C1535 -
           (C28650 * C11028 + C28199 * C11585 + C28649 * C1541 +
            C28198 * C1910 + C28648 * C1540 + C28197 * C1909) *
               C1384 +
           (C28648 * C1390 + C28197 * C1789 + C28649 * C10808 +
            C28198 * C11428 + C28650 * C29611 + C28199 * C30199) *
               C1536 +
           (C28648 * C1541 + C28197 * C1910 + C28649 * C11028 +
            C28198 * C11585 + C28650 * C29836 + C28199 * C30353) *
               C1385) *
              C92322 +
          ((C28678 + C28677 + C28676) * C1534 +
           (C28866 + C28867 + C28868) * C1383 -
           (C28650 * C10809 + C28199 * C11429 + C28649 * C1391 +
            C28198 * C1790 + C28648 * C1388 + C28197 * C1787) *
               C1535 -
           (C28650 * C11029 + C28199 * C11586 + C28649 * C1542 +
            C28198 * C1912 + C28648 * C1539 + C28197 * C1911) *
               C1384 +
           (C28648 * C1391 + C28197 * C1790 + C28649 * C10809 +
            C28198 * C11429 + C28650 * C29612 + C28199 * C30200) *
               C1536 +
           (C28648 * C1542 + C28197 * C1912 + C28649 * C11029 +
            C28198 * C11586 + C28650 * C29837 + C28199 * C30354) *
               C1385) *
              C92072) *
         C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1987 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C1983 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C1988 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C1984) *
               C14523 +
           ((C15306 + C15307) * C1987 + (C15308 + C15309) * C1983 -
            (C16834 + C16835) * C1988 - (C16836 + C16837) * C1984) *
               C14524 +
           (C15318 * C1987 + C15319 * C1983 - (C16838 + C16839) * C1988 -
            (C16840 + C16841) * C1984) *
               C14525) *
              C92183 * C2709 +
          (((C89875 * C1388 + C92322 * C1400 + C89868 * C1387 +
             C92072 * C1399) *
                C1988 -
            ((C89868 * C1396 + C92072 * C1412 + C89875 * C1397 +
              C92322 * C1413) *
                 C1983 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C1987) +
            (C89875 * C1396 + C92322 * C1412 + C89868 * C1395 +
             C92072 * C1411) *
                C1984) *
               C14523 +
           ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
             C92072 * C3437) *
                C1988 -
            ((C89868 * C3440 + C92072 * C3444 + C89875 * C3439 +
              C92322 * C3443) *
                 C1983 +
             (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
              C92322 * C3435) *
                 C1987) +
            (C89875 * C3440 + C92322 * C3444 + C89868 * C3441 +
             C92072 * C3445) *
                C1984) *
               C14524 +
           ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
             C92072 * C8417) *
                C1988 -
            ((C89868 * C8419 + C92072 * C8422 + C89875 * C8418 +
              C92322 * C8421) *
                 C1983 +
             (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
              C92322 * C8415) *
                 C1987) +
            (C89875 * C8419 + C92322 * C8422 + C89868 * C8420 +
             C92072 * C8423) *
                C1984) *
               C14525) *
              C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92157 * C92183 * C2709 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C1988 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C1983 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C1987) +
           (C100 * C1396 + C89 * C1412 + C101 * C1395 + C90 * C1411 +
            C102 * C1394 + C91 * C1410 + C103 * C2713 + C92 * C2714) *
               C1984) *
              C92157 * C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1987 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C1983 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C1988 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C1984) *
               C92157 * C28197 +
           ((C29644 + C29645) * C1987 + (C29646 + C29647) * C1983 -
            (C31406 + C31407) * C1988 - (C31408 + C31409) * C1984) *
               C92157 * C28198 +
           (C29656 * C1987 + C29657 * C1983 - (C31410 + C31411) * C1988 -
            (C31412 + C31413) * C1984) *
               C92157 * C28199) *
              C2709 +
          (((C31407 + C31406) * C1988 -
            ((C29647 + C29646) * C1983 + (C29645 + C29644) * C1987) +
            (C31409 + C31408) * C1984) *
               C92157 * C28197 +
           ((C31411 + C31410) * C1988 -
            ((C29651 + C29650) * C1983 + (C29649 + C29648) * C1987) +
            (C31413 + C31412) * C1984) *
               C92157 * C28198 +
           ((C89875 * C10809 + C92322 * C10812 + C89868 * C10810 +
             C92072 * C10813) *
                C1988 -
            ((C29652 + C29653) * C1983 + (C29654 + C29655) * C1987) +
            (C89875 * C10815 + C92322 * C10818 + C89868 * C10816 +
             C92072 * C10819) *
                C1984) *
               C92157 * C28199) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C181 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C92105) *
                C14523 +
            ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C14524 +
            (C15318 * C181 + C15419 * C92105) * C14525) *
               C92183 * C1983 -
           (((C16951 + C16950) * C92105 + (C16838 + C16839) * C181) * C14525 +
            ((C16949 + C16948) * C92105 + (C16834 + C16835) * C181) * C14524 +
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C92105 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C181) *
                C14523) *
               C92183 * C1984) *
              C2709 +
          ((((C89875 * C1388 + C92322 * C1400 + C89868 * C1387 +
              C92072 * C1399) *
                 C181 +
             (C89875 * C1470 + C92322 * C1478 + C89868 * C1469 +
              C92072 * C1477) *
                 C92105) *
                C14523 +
            ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
              C92072 * C3437) *
                 C181 +
             (C89875 * C3514 + C92322 * C3518 + C89868 * C3515 +
              C92072 * C3519) *
                 C92105) *
                C14524 +
            ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
              C92072 * C8417) *
                 C181 +
             (C89875 * C8541 + C92322 * C8544 + C89868 * C8542 +
              C92072 * C8545) *
                 C92105) *
                C14525) *
               C92183 * C1984 -
           (((C89868 * C8541 + C92072 * C8544 + C89875 * C8540 +
              C92322 * C8543) *
                 C92105 +
             (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
              C92322 * C8415) *
                 C181) *
                C14525 +
            ((C89868 * C3514 + C92072 * C3518 + C89875 * C3513 +
              C92322 * C3517) *
                 C92105 +
             (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
              C92322 * C3435) *
                 C181) *
                C14524 +
            ((C89868 * C1470 + C92072 * C1478 + C89875 * C1471 +
              C92322 * C1479) *
                 C92105 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C181) *
                C14523) *
               C92183 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C181 +
            (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
             C91 * C190 + C103 * C185 + C92 * C191) *
                C92105) *
               C92157 * C92183 * C1983 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C92105 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C181) *
               C92157 * C92183 * C1984) *
              C2709 +
          (((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
             C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
                C181 +
            (C100 * C1470 + C89 * C1478 + C101 * C1469 + C90 * C1477 +
             C102 * C1468 + C91 * C1476 + C103 * C2781 + C92 * C2782) *
                C92105) *
               C92157 * C92183 * C1984 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C92105 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C181) *
               C92157 * C92183 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C181 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C92105) *
                C92157 * C28197 +
            ((C29644 + C29645) * C181 + (C29753 + C29754) * C92105) * C92157 *
                C28198 +
            C29762 * C28199) *
               C1983 -
           (((C31520 + C31521) * C92105 + (C31410 + C31411) * C181) * C92157 *
                C28199 +
            ((C31522 + C31523) * C92105 + (C31406 + C31407) * C181) * C92157 *
                C28198 +
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C92105 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C181) *
                C92157 * C28197) *
               C1984) *
              C2709 +
          ((((C31407 + C31406) * C181 + (C31523 + C31522) * C92105) * C92157 *
                C28197 +
            ((C31411 + C31410) * C181 + (C31521 + C31520) * C92105) * C92157 *
                C28198 +
            ((C89875 * C10809 + C92322 * C10812 + C89868 * C10810 +
              C92072 * C10813) *
                 C181 +
             (C89875 * C10931 + C92322 * C10934 + C89868 * C10932 +
              C92072 * C10935) *
                 C92105) *
                C92157 * C28199) *
               C1984 -
           (((C29757 + C29758) * C92105 + (C29654 + C29655) * C181) * C92157 *
                C28199 +
            ((C29756 + C29755) * C92105 + (C29649 + C29648) * C181) * C92157 *
                C28198 +
            ((C29754 + C29753) * C92105 + (C29645 + C29644) * C181) * C92157 *
                C28197) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2849 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C2709 -
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C2850 -
            (C89868 * C1539 + C92072 * C1547 + C89875 * C1540 +
             C92322 * C1548) *
                C2710) *
               C14523 +
           ((C15306 + C15307) * C2849 + (C15511 + C15512) * C2709 -
            (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
             C92322 * C3435) *
                C2850 -
            (C89868 * C3588 + C92072 * C3592 + C89875 * C3587 +
             C92322 * C3591) *
                C2710) *
               C14524 +
           (C15318 * C2849 + C15517 * C2709 -
            (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
             C92322 * C8415) *
                C2850 -
            (C89868 * C8654 + C92072 * C8657 + C89875 * C8653 +
             C92322 * C8656) *
                C2710) *
               C14525) *
              C92183 * C92105 * C1983 +
          (((C89875 * C1388 + C92322 * C1400 + C89868 * C1387 +
             C92072 * C1399) *
                C2850 -
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C2709 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C2849) +
            (C89875 * C1539 + C92322 * C1547 + C89868 * C1538 +
             C92072 * C1546) *
                C2710) *
               C14523 +
           ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
             C92072 * C3437) *
                C2850 -
            ((C17059 + C17058) * C2709 + (C16834 + C16835) * C2849) +
            (C89875 * C3588 + C92322 * C3592 + C89868 * C3589 +
             C92072 * C3593) *
                C2710) *
               C14524 +
           ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
             C92072 * C8417) *
                C2850 -
            ((C17061 + C17060) * C2709 + (C16838 + C16839) * C2849) +
            (C89875 * C8654 + C92322 * C8657 + C89868 * C8655 +
             C92072 * C8658) *
                C2710) *
               C14525) *
              C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92157 * C92183 * C92105 * C1983 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C2850 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C2709 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2849) +
           (C100 * C1539 + C89 * C1547 + C101 * C1538 + C90 * C1546 +
            C102 * C1537 + C91 * C1545 + C103 * C2851 + C92 * C2852) *
               C2710) *
              C92157 * C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2849 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C2709 -
            (C29645 + C29644) * C2850 - (C29853 + C29854) * C2710) *
               C92157 * C28197 +
           ((C29644 + C29645) * C2849 + (C29854 + C29853) * C2709 -
            (C29649 + C29648) * C2850 - (C29856 + C29855) * C2710) *
               C92157 * C28198 +
           (C29656 * C2849 + C29859 * C2709 - (C29654 + C29655) * C2850 -
            (C29858 + C29857) * C2710) *
               C92157 * C28199) *
              C92105 * C1983 +
          (((C31407 + C31406) * C2850 -
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C2709 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C2849) +
            (C31630 + C31631) * C2710) *
               C92157 * C28197 +
           ((C31411 + C31410) * C2850 -
            ((C31631 + C31630) * C2709 + (C31406 + C31407) * C2849) +
            (C31632 + C31633) * C2710) *
               C92157 * C28198 +
           ((C89875 * C10809 + C92322 * C10812 + C89868 * C10810 +
             C92072 * C10813) *
                C2850 -
            ((C31633 + C31632) * C2709 + (C31410 + C31411) * C2849) +
            (C89875 * C11029 + C92322 * C11032 + C89868 * C11030 +
             C92072 * C11033) *
                C2710) *
               C92157 * C28199) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C1987 +
            (C14783 + C14782 + C14781) * C1983 -
            (C14786 + C14785 + C14784) * C1988 -
            (C14789 + C14788 + C14787) * C1984) *
               C92183 * C92072) *
              C2709 +
          (((C18103 + C18104 + C18105) * C1988 -
            ((C14752 * C8418 + C14525 * C8769 + C14751 * C3439 +
              C14524 * C3665 + C14750 * C1397 + C14523 * C1614) *
                 C1983 +
             (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
              C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                 C1987) +
            (C18106 + C18107 + C18108) * C1984) *
               C92183 * C92322 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C1988 -
            ((C18108 + C18107 + C18106) * C1983 +
             (C18105 + C18104 + C18103) * C1987) +
            (C14750 * C1395 + C14523 * C1612 + C14751 * C3441 + C14524 * C3667 +
             C14752 * C8420 + C14525 * C8771) *
                C1984) *
               C92183 * C92072) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1987 +
            (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92183 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92183 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92183 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92183 * C92) *
              C2709 +
          ((C2934 * C1988 -
            ((C307 * C1397 + C92157 * C1614) * C1983 +
             (C307 * C1389 + C92157 * C1606) * C1987) +
            C2935 * C1984) *
               C92183 * C89 +
           (C2936 * C1988 - (C2935 * C1983 + C2934 * C1987) + C2937 * C1984) *
               C92183 * C90 +
           (C2938 * C1988 - (C2937 * C1983 + C2936 * C1987) + C2939 * C1984) *
               C92183 * C91 +
           ((C307 * C2711 + C92157 * C2919) * C1988 -
            (C2939 * C1983 + C2938 * C1987) +
            (C307 * C2713 + C92157 * C2920) * C1984) *
               C92183 * C92) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C28197 +
            (C12983 + C12984 - C12985 - C12986) * C28198 +
            (C31732 + C31733 - C31734 - C31735) * C28199) *
               C92322 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C28197 +
            (C12987 + C12988 - C12989 - C12990) * C28198 +
            (C31736 + C31737 - C31738 - C31739) * C28199) *
               C92072) *
              C2709 +
          (((C12985 - (C12984 + C12983) + C12986) * C28197 +
            (C31734 - (C31733 + C31732) + C31735) * C28198 +
            (C29949 * C1988 - (C29950 * C1983 + C29951 * C1987) +
             C29948 * C1984) *
                C28199) *
               C92322 +
           ((C12989 - (C12988 + C12987) + C12990) * C28197 +
            (C31738 - (C31737 + C31736) + C31739) * C28198 +
            ((C307 * C10810 + C92157 * C11128) * C1988 -
             (C29948 * C1983 + C29949 * C1987) +
             (C307 * C10816 + C92157 * C11131) * C1984) *
                C28199) *
               C92072) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C181 +
             (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
              C14752 * C891 + C14525 * C1086) *
                 C92105) *
                C92183 * C92322 +
            ((C14780 + C14779 + C14778) * C181 +
             (C14876 + C14877 + C14878) * C92105) *
                C92183 * C92072) *
               C1983 -
           (((C14879 + C14880 + C14881) * C92105 +
             (C14786 + C14785 + C14784) * C181) *
                C92183 * C92072 +
            ((C14878 + C14877 + C14876) * C92105 +
             (C14778 + C14779 + C14780) * C181) *
                C92183 * C92322) *
               C1984) *
              C2709 +
          ((((C18103 + C18104 + C18105) * C181 +
             (C18213 + C18214 + C18215) * C92105) *
                C92183 * C92322 +
            ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 +
              C14524 * C3663 + C14752 * C8414 + C14525 * C8768) *
                 C181 +
             (C14750 * C1469 + C14523 * C1670 + C14751 * C3515 +
              C14524 * C3737 + C14752 * C8542 + C14525 * C8872) *
                 C92105) *
                C92183 * C92072) *
               C1984 -
           (((C18215 + C18214 + C18213) * C92105 +
             (C18105 + C18104 + C18103) * C181) *
                C92183 * C92072 +
            ((C14752 * C8540 + C14525 * C8870 + C14751 * C3513 +
              C14524 * C3735 + C14750 * C1471 + C14523 * C1672) *
                 C92105 +
             (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
              C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                 C181) *
                C92183 * C92322) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92183 * C89 +
            (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
               C1983 -
           ((C420 + C412) * C92183 * C92 + (C419 + C407) * C92183 * C91 +
            (C418 + C404) * C92183 * C90 + (C417 + C401) * C92183 * C89) *
               C1984) *
              C2709 +
          (((C3007 + C3019) * C92183 * C89 + (C3010 + C3020) * C92183 * C90 +
            (C3013 + C3021) * C92183 * C91 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92183 * C92) *
               C1984 -
           ((C3021 + C3013) * C92183 * C92 + (C3020 + C3010) * C92183 * C91 +
            (C3019 + C3007) * C92183 * C90 +
            ((C307 * C1471 + C92157 * C1672) * C92105 +
             (C307 * C1389 + C92157 * C1606) * C181) *
                C92183 * C89) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C181 +
              (C307 * C182 + C92157 * C394) * C92105) *
                 C28197 +
             (C11246 + C11262) * C28198 + C30032 * C28199) *
                C92322 +
            ((C401 + C417) * C28197 + C13093 * C28198 + C30033 * C28199) *
                C92072) *
               C1983 -
           (((C11263 + C11251) * C28199 + C13094 * C28198 +
             (C418 + C404) * C28197) *
                C92072 +
            (C31838 * C28199 + C13095 * C28198 + (C417 + C401) * C28197) *
                C92322) *
               C1984) *
              C2709 +
          (((C13093 * C28197 + C30033 * C28198 + (C30036 + C30042) * C28199) *
                C92322 +
            (C9676 * C28197 + (C11251 + C11263) * C28198 +
             ((C307 * C10810 + C92157 * C11128) * C181 +
              (C307 * C10932 + C92157 * C11244) * C92105) *
                 C28199) *
                C92072) *
               C1984 -
           (((C30042 + C30036) * C28199 + C31838 * C28198 + C13095 * C28197) *
                C92072 +
            ((C30043 + C30039) * C28199 + (C11265 + C11257) * C28198 +
             (C11262 + C11246) * C28197) *
                C92322) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[33] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2849 +
                      (C14750 * C245 + C14523 * C474 + C14751 * C956 +
                       C14524 * C1146 + C14752 * C957 + C14525 * C1147) *
                          C2709 -
                      (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                       C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                          C2850 -
                      (C14752 * C8653 + C14525 * C8971 + C14751 * C3587 +
                       C14524 * C3805 + C14750 * C1540 + C14523 * C1727) *
                          C2710) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2849 +
                      (C14968 + C14969 + C14970) * C2709 -
                      (C18105 + C18104 + C18103) * C2850 -
                      (C18320 + C18321 + C18322) * C2710) *
                         C92183 * C92072) *
                        C92105 * C1983 +
                    (((C18103 + C18104 + C18105) * C2850 -
                      ((C14970 + C14969 + C14968) * C2709 +
                       (C14778 + C14779 + C14780) * C2849) +
                      (C18322 + C18321 + C18320) * C2710) *
                         C92183 * C92322 +
                     ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 +
                       C14524 * C3663 + C14752 * C8414 + C14525 * C8768) *
                          C2850 -
                      ((C14971 + C14972 + C14973) * C2709 +
                       (C14786 + C14785 + C14784) * C2849) +
                      (C14750 * C1538 + C14523 * C1731 + C14751 * C3589 +
                       C14524 * C3807 + C14752 * C8655 + C14525 * C8973) *
                          C2710) *
                         C92183 * C92072) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2849 +
                      (C307 * C245 + C92157 * C474) * C2709 -
                      (C307 * C1389 + C92157 * C1606) * C2850 -
                      (C307 * C1540 + C92157 * C1727) * C2710) *
                         C92183 * C89 +
                     (C3089 + C3090 - C3091 - C3107) * C92183 * C90 +
                     (C3094 + C3095 - C3096 - C3108) * C92183 * C91 +
                     (C3099 + C3100 - C3101 - C3109) * C92183 * C92) *
                        C92105 * C1983 +
                    ((C3091 - (C3090 + C3089) + C3107) * C92183 * C89 +
                     (C3096 - (C3095 + C3094) + C3108) * C92183 * C90 +
                     (C3101 - (C3100 + C3099) + C3109) * C92183 * C91 +
                     ((C307 * C2711 + C92157 * C2919) * C2850 -
                      (C496 * C2709 + C343 * C2849) +
                      (C307 * C2851 + C92157 * C3087) * C2710) *
                         C92183 * C92) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C28197 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C28198 +
                      (C11160 * C2849 + C11352 * C2709 - C29951 * C2850 -
                       C30124 * C2710) *
                          C28199) *
                         C92322 +
                     ((C3089 + C3090 - C3091 - C3107) * C28197 +
                      (C13194 + C13195 - C13196 - C13197) * C28198 +
                      (C31937 + C31938 - C31939 - C31940) * C28199) *
                         C92072) *
                        C92105 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C28197 +
                      (C13196 - (C13195 + C13194) + C13197) * C28198 +
                      (C31939 - (C31938 + C31937) + C31940) * C28199) *
                         C92322 +
                     ((C3096 - (C3095 + C3094) + C3108) * C28197 +
                      (C13200 - (C13199 + C13198) + C13201) * C28198 +
                      ((C307 * C10810 + C92157 * C11128) * C2850 -
                       (C11354 * C2709 + C11156 * C2849) +
                       (C307 * C11030 + C92157 * C11341) * C2710) *
                          C28199) *
                         C92072) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92322 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92072) *
               C14523 +
           ((C7130 + C7131 - C7132 - C7133) * C92322 +
            (C7134 + C7135 - C7136 - C7137) * C92072) *
               C14524 +
           ((C17490 + C17491 - C17492 - C17493) * C92322 +
            (C17494 + C17495 - C17496 - C17497) * C92072) *
               C14525) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92183 * C1796) * C1983 +
              (C554 * C1389 + C92183 * C1788) * C1987) +
             C3191 * C1984) *
                C92322 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92072) *
               C14523 +
           ((C8091 * C1988 - (C9087 * C1983 + C9088 * C1987) + C8092 * C1984) *
                C92322 +
            (C8093 * C1988 - (C8092 * C1983 + C8091 * C1987) + C8094 * C1984) *
                C92072) *
               C14524 +
           ((C18425 * C1988 -
             ((C554 * C8418 + C92183 * C9075) * C1983 +
              (C554 * C8412 + C92183 * C9072) * C1987) +
             C18426 * C1984) *
                C92322 +
            ((C554 * C8414 + C92183 * C9074) * C1988 -
             (C18426 * C1983 + C18425 * C1987) +
             (C554 * C8420 + C92183 * C9077) * C1984) *
                C92072) *
               C14525) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92157 * C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92183 * C1796) * C1983 +
             (C554 * C1389 + C92183 * C1788) * C1987) +
            C3191 * C1984) *
               C89 +
           (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
               C90 +
           (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
               C91 +
           ((C554 * C2711 + C92183 * C3175) * C1988 -
            (C3195 * C1983 + C3194 * C1987) +
            (C554 * C2713 + C92183 * C3176) * C1984) *
               C92) *
              C92157 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C1987 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C1983 -
            (C28676 + C28677 + C28678) * C1988 -
            (C28679 + C28680 + C28681) * C1984) *
               C92322 +
           ((C28678 + C28677 + C28676) * C1987 +
            (C28681 + C28680 + C28679) * C1983 -
            (C28684 + C28683 + C28682) * C1988 -
            (C28687 + C28686 + C28685) * C1984) *
               C92072) *
              C92157 * C2709 +
          (((C32051 + C32052 + C32053) * C1988 -
            ((C28650 * C10814 + C28199 * C11431 + C28649 * C1406 +
              C28198 * C1797 + C28648 * C1397 + C28197 * C1796) *
                 C1983 +
             (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
              C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                 C1987) +
            (C32054 + C32055 + C32056) * C1984) *
               C92322 +
           ((C28648 * C1387 + C28197 * C1786 + C28649 * C1392 + C28198 * C1791 +
             C28650 * C10810 + C28199 * C11430) *
                C1988 -
            ((C32056 + C32055 + C32054) * C1983 +
             (C32053 + C32052 + C32051) * C1987) +
            (C28648 * C1395 + C28197 * C1794 + C28649 * C1408 + C28198 * C1799 +
             C28650 * C10816 + C28199 * C11433) *
                C1984) *
               C92072) *
              C92157 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C181 +
              (C554 * C182 + C92183 * C641) * C92105) *
                 C92322 +
             (C648 + C664) * C92072) *
                C14523 +
            ((C5444 * C181 + C5545 * C92105) * C92322 +
             (C4710 + C4711) * C92072) *
                C14524 +
            ((C5451 * C181 + C5546 * C92105) * C92322 +
             (C15122 + C15123) * C92072) *
                C14525) *
               C1983 -
           (((C15124 + C15125) * C92072 + (C15123 + C15122) * C92322) * C14525 +
            ((C4713 + C4712) * C92072 + (C4711 + C4710) * C92322) * C14524 +
            ((C665 + C651) * C92072 + (C664 + C648) * C92322) * C14523) *
               C1984) *
              C2709 +
          ((((C3263 + C3275) * C92322 + (C3266 + C3276) * C92072) * C14523 +
            ((C8193 + C8201) * C92322 + (C8196 + C8202) * C92072) * C14524 +
            ((C18525 + C18529) * C92322 +
             ((C554 * C8414 + C92183 * C9074) * C181 +
              (C554 * C8542 + C92183 * C9190) * C92105) *
                 C92072) *
                C14525) *
               C1984 -
           (((C18529 + C18525) * C92072 +
             ((C554 * C8540 + C92183 * C9188) * C92105 +
              (C554 * C8412 + C92183 * C9072) * C181) *
                 C92322) *
                C14525 +
            ((C8201 + C8193) * C92072 +
             (C9194 * C92105 + C9088 * C181) * C92322) *
                C14524 +
            ((C3275 + C3263) * C92072 +
             ((C554 * C1471 + C92183 * C1854) * C92105 +
              (C554 * C1389 + C92183 * C1788) * C181) *
                 C92322) *
                C14523) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C89 +
            (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
               C92157 * C1983 -
           ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
            (C664 + C648) * C89) *
               C92157 * C1984) *
              C2709 +
          (((C3263 + C3275) * C89 + (C3266 + C3276) * C90 +
            (C3269 + C3277) * C91 +
            ((C554 * C2711 + C92183 * C3175) * C181 +
             (C554 * C2781 + C92183 * C3261) * C92105) *
                C92) *
               C92157 * C1984 -
           ((C3277 + C3269) * C92 + (C3276 + C3266) * C91 +
            (C3275 + C3263) * C90 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C89) *
               C92157 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
              C28650 * C1390 + C28199 * C1789) *
                 C181 +
             (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
              C28650 * C1472 + C28199 * C1855) *
                 C92105) *
                C92322 +
            ((C28678 + C28677 + C28676) * C181 +
             (C28774 + C28775 + C28776) * C92105) *
                C92072) *
               C92157 * C1983 -
           (((C28777 + C28778 + C28779) * C92105 +
             (C28684 + C28683 + C28682) * C181) *
                C92072 +
            ((C28776 + C28775 + C28774) * C92105 +
             (C28676 + C28677 + C28678) * C181) *
                C92322) *
               C92157 * C1984) *
              C2709 +
          ((((C32051 + C32052 + C32053) * C181 +
             (C32161 + C32162 + C32163) * C92105) *
                C92322 +
            ((C28648 * C1387 + C28197 * C1786 + C28649 * C1392 +
              C28198 * C1791 + C28650 * C10810 + C28199 * C11430) *
                 C181 +
             (C28648 * C1469 + C28197 * C1852 + C28649 * C1474 +
              C28198 * C1857 + C28650 * C10932 + C28199 * C11510) *
                 C92105) *
                C92072) *
               C92157 * C1984 -
           (((C32163 + C32162 + C32161) * C92105 +
             (C32053 + C32052 + C32051) * C181) *
                C92072 +
            ((C28650 * C10930 + C28199 * C11508 + C28649 * C1472 +
              C28198 * C1855 + C28648 * C1471 + C28197 * C1854) *
                 C92105 +
             (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
              C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                 C181) *
                C92322) *
               C92157 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[33] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C92322 +
                      (C3345 + C3346 - C3347 - C3363) * C92072) *
                         C14523 +
                     ((C9296 + C9297 - C9298 - C9302) * C92322 +
                      (C8301 + C8302 - C8303 - C8313) * C92072) *
                         C14524 +
                     ((C5451 * C2849 + C5641 * C2709 -
                       (C554 * C8412 + C92183 * C9072) * C2850 -
                       (C554 * C8653 + C92183 * C9292) * C2710) *
                          C92322 +
                      (C18628 + C18629 - C18630 - C18634) * C92072) *
                         C14525) *
                        C92105 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C92322 +
                      (C3352 - (C3351 + C3350) + C3364) * C92072) *
                         C14523 +
                     ((C8303 - (C8302 + C8301) + C8313) * C92322 +
                      (C8308 - (C8307 + C8306) + C8314) * C92072) *
                         C14524 +
                     ((C18630 - (C18629 + C18628) + C18634) * C92322 +
                      ((C554 * C8414 + C92183 * C9074) * C2850 -
                       (C5639 * C2709 + C5447 * C2849) +
                       (C554 * C8655 + C92183 * C9294) * C2710) *
                          C92072) *
                         C14525) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92157 * C92105 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C89 +
                     (C3352 - (C3351 + C3350) + C3364) * C90 +
                     (C3357 - (C3356 + C3355) + C3365) * C91 +
                     ((C554 * C2711 + C92183 * C3175) * C2850 -
                      (C741 * C2709 + C590 * C2849) +
                      (C554 * C2851 + C92183 * C3343) * C2710) *
                         C92) *
                        C92157 * C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C2849 +
                      (C28648 * C245 + C28197 * C719 + C28649 * C1540 +
                       C28198 * C1909 + C28650 * C1541 + C28199 * C1910) *
                          C2709 -
                      (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                       C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                          C2850 -
                      (C28650 * C11028 + C28199 * C11585 + C28649 * C1541 +
                       C28198 * C1910 + C28648 * C1540 + C28197 * C1909) *
                          C2710) *
                         C92322 +
                     ((C28678 + C28677 + C28676) * C2849 +
                      (C28866 + C28867 + C28868) * C2709 -
                      (C32053 + C32052 + C32051) * C2850 -
                      (C32268 + C32269 + C32270) * C2710) *
                         C92072) *
                        C92157 * C92105 * C1983 +
                    (((C32051 + C32052 + C32053) * C2850 -
                      ((C28868 + C28867 + C28866) * C2709 +
                       (C28676 + C28677 + C28678) * C2849) +
                      (C32270 + C32269 + C32268) * C2710) *
                         C92322 +
                     ((C28648 * C1387 + C28197 * C1786 + C28649 * C1392 +
                       C28198 * C1791 + C28650 * C10810 + C28199 * C11430) *
                          C2850 -
                      ((C28869 + C28870 + C28871) * C2709 +
                       (C28684 + C28683 + C28682) * C2849) +
                      (C28648 * C1538 + C28197 * C1913 + C28649 * C1543 +
                       C28198 * C1914 + C28650 * C11030 + C28199 * C11587) *
                          C2710) *
                         C92072) *
                        C92157 * C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92084) *
              C92157 * C92183 * C92116 * C798 -
          ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
            C90 * C828 + C100 * C813 + C89 * C829) *
               C92084 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C801) *
              C92157 * C92183 * C92116 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C801 +
           (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 + C102 * C824 +
            C91 * C832 + C103 * C825 + C92 * C833) *
               C92084) *
              C92157 * C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C104 +
          (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
           C91 * C127 + C103 * C120 + C92 * C128) *
              C93 -
          (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
           C90 * C115 + C100 * C108 + C89 * C114) *
              C105 -
          (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
           C90 * C127 + C100 * C118 + C89 * C126) *
              C94 +
          (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
           C91 * C121 + C103 * C112 + C92 * C123) *
              C106 +
          (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 + C102 * C122 +
           C91 * C129 + C103 * C124 + C92 * C130) *
              C95) *
         C92157 * C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C104 +
           (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
               C93 -
           (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
               C105 -
           (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
               C94 +
           (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
               C106 +
           (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
               C95) *
              C14523 +
          ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
               C104 +
           (C89875 * C813 + C92322 * C829 + C89868 * C812 + C92072 * C828) *
               C93 -
           (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
               C105 -
           (C89868 * C811 + C92072 * C827 + C89875 * C812 + C92322 * C828) *
               C94 +
           (C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
               C106 +
           (C89875 * C811 + C92322 * C827 + C89868 * C810 + C92072 * C826) *
               C95) *
              C14524 +
          ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
               C104 +
           (C89875 * C822 + C92322 * C830 + C89868 * C823 + C92072 * C831) *
               C93 -
           (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
               C105 -
           (C89868 * C824 + C92072 * C832 + C89875 * C823 + C92322 * C831) *
               C94 +
           (C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
               C106 +
           (C89875 * C824 + C92322 * C832 + C89868 * C825 + C92072 * C833) *
               C95) *
              C14525) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C14523 +
           ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
           C15322 * C14525) *
              C92183 * C92116 * C798 -
          (((C15314 + C15315) * C92084 + (C15316 + C15317) * C801) * C14525 +
           ((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C14524 +
           ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C14523) *
              C92183 * C92116 * C799 +
          (C15322 * C14523 +
           ((C15317 + C15316) * C801 + (C15315 + C15314) * C92084) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C801 +
            (C89875 * C15277 + C92322 * C15279 + C89868 * C15278 +
             C92072 * C15280) *
                C92084) *
               C14525) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C104 +
           (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
               C93 -
           (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
               C105 -
           (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
               C94 +
           (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
               C106 +
           (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
               C95) *
              C92157 * C28197 +
          ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 + C92072 * C1400) *
               C104 +
           (C89875 * C1397 + C92322 * C1413 + C89868 * C1396 + C92072 * C1412) *
               C93 -
           (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 + C92322 * C1400) *
               C105 -
           (C89868 * C1395 + C92072 * C1411 + C89875 * C1396 + C92322 * C1412) *
               C94 +
           (C89875 * C1387 + C92322 * C1399 + C89868 * C1386 + C92072 * C1398) *
               C106 +
           (C89875 * C1395 + C92322 * C1411 + C89868 * C1394 + C92072 * C1410) *
               C95) *
              C92157 * C28198 +
          ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 + C92072 * C1403) *
               C104 +
           (C89875 * C1406 + C92322 * C1414 + C89868 * C1407 + C92072 * C1415) *
               C93 -
           (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 + C92322 * C1403) *
               C105 -
           (C89868 * C1408 + C92072 * C1416 + C89875 * C1407 + C92322 * C1415) *
               C94 +
           (C89875 * C1392 + C92322 * C1404 + C89868 * C1393 + C92072 * C1405) *
               C106 +
           (C89875 * C1408 + C92322 * C1416 + C89868 * C1409 + C92072 * C1417) *
               C95) *
              C92157 * C28199) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C801 +
            (C89875 * C1397 + C92322 * C1413 + C89868 * C1396 +
             C92072 * C1412) *
                C92084) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C801 +
            (C89875 * C1406 + C92322 * C1414 + C89868 * C1407 +
             C92072 * C1415) *
                C92084) *
               C92157 * C28199) *
              C92116 * C798 -
          (((C89868 * C5726 + C92072 * C5729 + C89875 * C5725 +
             C92322 * C5728) *
                C92084 +
            (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
             C92322 * C5722) *
                C801) *
               C92157 * C28199 +
           ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C92157 *
               C28198 +
           ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C92157 *
               C28197) *
              C92116 * C799 +
          (C15322 * C92157 * C28197 +
           ((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C92157 *
               C28198 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C801 +
            (C89875 * C16099 + C92322 * C16101 + C89868 * C16100 +
             C92072 * C16102) *
                C92084) *
               C92157 * C28199) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C884 +
          (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
           C91 * C190 + C103 * C185 + C92 * C191) *
              C798 -
          (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
           C90 * C816 + C100 * C805 + C89 * C817) *
              C885 -
          (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
           C90 * C897 + C100 * C890 + C89 * C898) *
              C799 +
          (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
           C91 * C820 + C103 * C809 + C92 * C821) *
              C886 +
          (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 + C102 * C893 +
           C91 * C901 + C103 * C894 + C92 * C902) *
              C800) *
         C92157 * C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92105) *
              C92157 * C92183 * C93 -
          ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
            C90 * C190 + C100 * C183 + C89 * C189) *
               C92105 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C181) *
              C92157 * C92183 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C181 +
           (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 + C102 * C186 +
            C91 * C192 + C103 * C187 + C92 * C193) *
               C92105) *
              C92157 * C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C181 +
            (C89875 * C890 + C92322 * C898 + C89868 * C889 + C92072 * C897) *
                C92105) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C181 +
            (C89875 * C891 + C92322 * C899 + C89868 * C892 + C92072 * C900) *
                C92105) *
               C14525) *
              C92183 * C93 -
          (((C89868 * C893 + C92072 * C901 + C89875 * C892 + C92322 * C900) *
                C92105 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C181) *
               C14525 +
           ((C89868 * C888 + C92072 * C896 + C89875 * C889 + C92322 * C897) *
                C92105 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C181) *
               C14524 +
           ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                C92105 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C181) *
               C14523) *
              C92183 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C181 +
            (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                C92105) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C181 +
            (C89875 * C888 + C92322 * C896 + C89868 * C887 + C92072 * C895) *
                C92105) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C181 +
            (C89875 * C893 + C92322 * C901 + C89868 * C894 + C92072 * C902) *
                C92105) *
               C14525) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C884 +
           (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
               C798 -
           (C15307 + C15306) * C885 - (C15413 + C15414) * C799 + C15318 * C886 +
           C15419 * C800) *
              C14523 +
          ((C15306 + C15307) * C884 + (C15414 + C15413) * C798 -
           (C15311 + C15310) * C885 - (C15416 + C15415) * C799 +
           (C15317 + C15316) * C886 + (C15417 + C15418) * C800) *
              C14524 +
          (C15318 * C884 + C15419 * C798 - (C15316 + C15317) * C885 -
           (C15418 + C15417) * C799 +
           (C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
            C92072 * C15276) *
               C886 +
           (C89875 * C15396 + C92322 * C15398 + C89868 * C15397 +
            C92072 * C15399) *
               C800) *
              C14525) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C181 +
            (C89875 * C1471 + C92322 * C1479 + C89868 * C1470 +
             C92072 * C1478) *
                C92105) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C181 +
            (C89875 * C1472 + C92322 * C1480 + C89868 * C1473 +
             C92072 * C1481) *
                C92105) *
               C92157 * C28199) *
              C93 -
          (((C89868 * C1474 + C92072 * C1482 + C89875 * C1473 +
             C92322 * C1481) *
                C92105 +
            (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
             C92322 * C1403) *
                C181) *
               C92157 * C28199 +
           ((C89868 * C1469 + C92072 * C1477 + C89875 * C1470 +
             C92322 * C1478) *
                C92105 +
            (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
             C92322 * C1400) *
                C181) *
               C92157 * C28198 +
           ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                C92105 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C181) *
               C92157 * C28197) *
              C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C181 +
            (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                C92105) *
               C92157 * C28197 +
           ((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
             C92072 * C1398) *
                C181 +
            (C89875 * C1469 + C92322 * C1477 + C89868 * C1468 +
             C92072 * C1476) *
                C92105) *
               C92157 * C28198 +
           ((C89875 * C1392 + C92322 * C1404 + C89868 * C1393 +
             C92072 * C1405) *
                C181 +
            (C89875 * C1474 + C92322 * C1482 + C89868 * C1475 +
             C92072 * C1483) *
                C92105) *
               C92157 * C28199) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C884 +
           (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
               C798 -
           (C15307 + C15306) * C885 - (C15413 + C15414) * C799 + C15318 * C886 +
           C15419 * C800) *
              C92157 * C28197 +
          ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 + C92072 * C1400) *
               C884 +
           (C89875 * C1471 + C92322 * C1479 + C89868 * C1470 + C92072 * C1478) *
               C798 -
           (C18763 + C18764) * C885 - (C18876 + C18875) * C799 +
           (C18760 + C18759) * C886 + (C18877 + C18878) * C800) *
              C92157 * C28198 +
          ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 + C92072 * C1403) *
               C884 +
           (C89875 * C1472 + C92322 * C1480 + C89868 * C1473 + C92072 * C1481) *
               C798 -
           (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 + C92322 * C5722) *
               C885 -
           (C89868 * C5806 + C92072 * C5809 + C89875 * C5805 + C92322 * C5808) *
               C799 +
           (C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
            C92072 * C16098) *
               C886 +
           (C89875 * C16177 + C92322 * C16179 + C89868 * C16178 +
            C92072 * C16180) *
               C800) *
              C92157 * C28199) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92116) *
              C92157 * C92183 * C798 -
          ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
            C90 * C963 + C100 * C956 + C89 * C964) *
               C92116 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C244) *
              C92157 * C92183 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C244 +
           (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 + C102 * C959 +
            C91 * C967 + C103 * C960 + C92 * C968) *
               C92116) *
              C92157 * C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92116) *
              C92157 * C92183 * C92105 * C93 -
          ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
            C90 * C253 + C100 * C246 + C89 * C252) *
               C92116 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C244) *
              C92157 * C92183 * C92105 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C244 +
           (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 + C102 * C249 +
            C91 * C255 + C103 * C250 + C92 * C256) *
               C92116) *
              C92157 * C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C244 +
            (C89875 * C956 + C92322 * C964 + C89868 * C955 + C92072 * C963) *
                C92116) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C244 +
            (C89875 * C957 + C92322 * C965 + C89868 * C958 + C92072 * C966) *
                C92116) *
               C14525) *
              C92183 * C92105 * C93 -
          (((C89868 * C959 + C92072 * C967 + C89875 * C958 + C92322 * C966) *
                C92116 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C244) *
               C14525 +
           ((C89868 * C954 + C92072 * C962 + C89875 * C955 + C92322 * C963) *
                C92116 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C244) *
               C14524 +
           ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                C92116 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C244) *
               C14523) *
              C92183 * C92105 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C244 +
            (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                C92116) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C244 +
            (C89875 * C954 + C92322 * C962 + C89868 * C953 + C92072 * C961) *
                C92116) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C244 +
            (C89875 * C959 + C92322 * C967 + C89868 * C960 + C92072 * C968) *
                C92116) *
               C14525) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C14524 +
           C15519 * C14525) *
              C92183 * C798 -
          (((C15515 + C15516) * C92116 + (C15316 + C15317) * C244) * C14525 +
           ((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C14524 +
           ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C14523) *
              C92183 * C799 +
          (C15519 * C14523 +
           ((C15317 + C15316) * C244 + (C15516 + C15515) * C92116) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C244 +
            (C89875 * C15493 + C92322 * C15495 + C89868 * C15494 +
             C92072 * C15496) *
                C92116) *
               C14525) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C244 +
            (C89875 * C1540 + C92322 * C1548 + C89868 * C1539 +
             C92072 * C1547) *
                C92116) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C244 +
            (C89875 * C1541 + C92322 * C1549 + C89868 * C1542 +
             C92072 * C1550) *
                C92116) *
               C92157 * C28199) *
              C92105 * C93 -
          (((C89868 * C1543 + C92072 * C1551 + C89875 * C1542 +
             C92322 * C1550) *
                C92116 +
            (C89868 * C1392 + C92072 * C1404 + C89875 * C1391 +
             C92322 * C1403) *
                C244) *
               C92157 * C28199 +
           ((C89868 * C1538 + C92072 * C1546 + C89875 * C1539 +
             C92322 * C1547) *
                C92116 +
            (C89868 * C1387 + C92072 * C1399 + C89875 * C1388 +
             C92322 * C1400) *
                C244) *
               C92157 * C28198 +
           ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                C92116 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C244) *
               C92157 * C28197) *
              C92105 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C244 +
            (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                C92116) *
               C92157 * C28197 +
           ((C89875 * C1387 + C92322 * C1399 + C89868 * C1386 +
             C92072 * C1398) *
                C244 +
            (C89875 * C1538 + C92322 * C1546 + C89868 * C1537 +
             C92072 * C1545) *
                C92116) *
               C92157 * C28198 +
           ((C89875 * C1392 + C92322 * C1404 + C89868 * C1393 +
             C92072 * C1405) *
                C244 +
            (C89875 * C1543 + C92322 * C1551 + C89868 * C1544 +
             C92072 * C1552) *
                C92116) *
               C92157 * C28199) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C28197 +
           ((C89875 * C1389 + C92322 * C1401 + C89868 * C1388 +
             C92072 * C1400) *
                C244 +
            (C89875 * C1540 + C92322 * C1548 + C89868 * C1539 +
             C92072 * C1547) *
                C92116) *
               C92157 * C28198 +
           ((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C244 +
            (C89875 * C1541 + C92322 * C1549 + C89868 * C1542 +
             C92072 * C1550) *
                C92116) *
               C92157 * C28199) *
              C798 -
          (((C89868 * C5886 + C92072 * C5889 + C89875 * C5885 +
             C92322 * C5888) *
                C92116 +
            (C89868 * C5720 + C92072 * C5723 + C89875 * C5719 +
             C92322 * C5722) *
                C244) *
               C92157 * C28199 +
           ((C18989 + C18990) * C92116 + (C18763 + C18764) * C244) * C92157 *
               C28198 +
           ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C92157 *
               C28197) *
              C799 +
          (C15519 * C92157 * C28197 +
           ((C18760 + C18759) * C244 + (C18992 + C18991) * C92116) * C92157 *
               C28198 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C244 +
            (C89875 * C16255 + C92322 * C16257 + C89868 * C16256 +
             C92072 * C16258) *
                C92116) *
               C92157 * C28199) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[34] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C801 +
                      (C307 * C117 + C92157 * C314) * C92084) *
                         C92183 * C89 +
                     (C337 * C801 + C338 * C92084) * C92183 * C90 +
                     (C339 * C801 + C340 * C92084) * C92183 * C91 +
                     (C341 * C801 + C342 * C92084) * C92183 * C92) *
                        C92116 * C798 -
                    (((C307 * C810 + C92157 * C1027) * C92084 +
                      (C307 * C802 + C92157 * C1019) * C801) *
                         C92183 * C92 +
                     ((C307 * C811 + C92157 * C1028) * C92084 +
                      (C307 * C803 + C92157 * C1020) * C801) *
                         C92183 * C91 +
                     ((C307 * C812 + C92157 * C1029) * C92084 +
                      (C307 * C804 + C92157 * C1021) * C801) *
                         C92183 * C90 +
                     ((C307 * C813 + C92157 * C1030) * C92084 +
                      (C307 * C805 + C92157 * C1022) * C801) *
                         C92183 * C89) *
                        C92116 * C799 +
                    (((C307 * C806 + C92157 * C1023) * C801 +
                      (C307 * C822 + C92157 * C1031) * C92084) *
                         C92183 * C89 +
                     ((C307 * C807 + C92157 * C1024) * C801 +
                      (C307 * C823 + C92157 * C1032) * C92084) *
                         C92183 * C90 +
                     ((C307 * C808 + C92157 * C1025) * C801 +
                      (C307 * C824 + C92157 * C1033) * C92084) *
                         C92183 * C91 +
                     ((C307 * C809 + C92157 * C1026) * C801 +
                      (C307 * C825 + C92157 * C1034) * C92084) *
                         C92183 * C92) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C307 * C107 + C92157 * C308) * C104 +
                     (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                     C338 * C94 + C339 * C106 + C340 * C95) *
                        C92183 * C89 +
                    (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                     C341 * C106 + C342 * C95) *
                        C92183 * C90 +
                    (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                     C343 * C106 + C344 * C95) *
                        C92183 * C91 +
                    (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
                     (C307 * C112 + C92157 * C313) * C106 +
                     (C307 * C124 + C92157 * C319) * C95) *
                        C92183 * C92) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                      C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                         C104 +
                     (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                      C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                         C93 -
                     (C14778 + C14779 + C14780) * C105 -
                     (C14781 + C14782 + C14783) * C94 +
                     (C14784 + C14785 + C14786) * C106 +
                     (C14787 + C14788 + C14789) * C95) *
                        C92183 * C92322 +
                    ((C14780 + C14779 + C14778) * C104 +
                     (C14783 + C14782 + C14781) * C93 -
                     (C14786 + C14785 + C14784) * C105 -
                     (C14789 + C14788 + C14787) * C94 +
                     (C14750 * C110 + C14523 * C311 + C14751 * C802 +
                      C14524 * C1019 + C14752 * C809 + C14525 * C1026) *
                         C106 +
                     (C14750 * C120 + C14523 * C317 + C14751 * C810 +
                      C14524 * C1027 + C14752 * C825 + C14525 * C1034) *
                         C95) *
                        C92183 * C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C801 +
                      (C14783 + C14782 + C14781) * C92084) *
                         C92183 * C92072) *
                        C92116 * C798 -
                    (((C14752 * C4872 + C14525 * C5187 + C14751 * C823 +
                       C14524 * C1032 + C14750 * C812 + C14523 * C1029) *
                          C92084 +
                      (C14752 * C4866 + C14525 * C5184 + C14751 * C807 +
                       C14524 * C1024 + C14750 * C804 + C14523 * C1021) *
                          C801) *
                         C92183 * C92072 +
                     ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                       C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                          C92084 +
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C801) *
                         C92183 * C92322) *
                        C92116 * C799 +
                    (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 +
                       C14524 * C5183 + C14752 * C15273 + C14525 * C15593) *
                          C801 +
                      (C14750 * C822 + C14523 * C1031 + C14751 * C4871 +
                       C14524 * C5186 + C14752 * C15277 + C14525 * C15595) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 +
                       C14524 * C5184 + C14752 * C15274 + C14525 * C15594) *
                          C801 +
                      (C14750 * C823 + C14523 * C1032 + C14751 * C4872 +
                       C14524 * C5187 + C14752 * C15278 + C14525 * C15596) *
                          C92084) *
                         C92183 * C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C104 +
                      (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C28197 +
                     (C11153 * C104 + C11154 * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C28198 +
                     (C11160 * C104 + C11159 * C93 - C11158 * C105 -
                      C11157 * C94 + C11156 * C106 + C11155 * C95) *
                         C28199) *
                        C92322 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C28197 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C28198 +
                     (C11158 * C104 + C11157 * C93 - C11156 * C105 -
                      C11155 * C94 + (C307 * C1393 + C92157 * C1610) * C106 +
                      (C307 * C1409 + C92157 * C1618) * C95) *
                         C28199) *
                        C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C28197 +
                      (C11161 + C11162) * C28198 + (C11168 + C11167) * C28199) *
                         C92322 +
                     ((C337 * C801 + C338 * C92084) * C28197 +
                      (C11137 + C11138) * C28198 + (C11166 + C11165) * C28199) *
                         C92072) *
                        C92116 * C798 -
                    ((((C307 * C5726 + C92157 * C5969) * C92084 +
                       (C307 * C5720 + C92157 * C5966) * C801) *
                          C28199 +
                      (C13941 + C13940) * C28198 +
                      (C2213 * C92084 + C2212 * C801) * C28197) *
                         C92072 +
                     (((C307 * C5725 + C92157 * C5968) * C92084 +
                       (C307 * C5719 + C92157 * C5965) * C801) *
                          C28199 +
                      (C13947 + C13946) * C28198 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C28197) *
                         C92322) *
                        C92116 * C799 +
                    ((((C307 * C806 + C92157 * C1023) * C801 +
                       (C307 * C822 + C92157 * C1031) * C92084) *
                          C28197 +
                      ((C307 * C8412 + C92157 * C8766) * C801 +
                       (C307 * C8418 + C92157 * C8769) * C92084) *
                          C28198 +
                      ((C307 * C16095 + C92157 * C16333) * C801 +
                       (C307 * C16099 + C92157 * C16335) * C92084) *
                          C28199) *
                         C92322 +
                     (((C307 * C807 + C92157 * C1024) * C801 +
                       (C307 * C823 + C92157 * C1032) * C92084) *
                          C28197 +
                      ((C307 * C8413 + C92157 * C8767) * C801 +
                       (C307 * C8419 + C92157 * C8770) * C92084) *
                          C28198 +
                      ((C307 * C16096 + C92157 * C16334) * C801 +
                       (C307 * C16100 + C92157 * C16336) * C92084) *
                          C28199) *
                         C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C884 +
           (C307 * C182 + C92157 * C394) * C798 -
           (C307 * C805 + C92157 * C1022) * C885 -
           (C307 * C890 + C92157 * C1085) * C799 +
           (C307 * C806 + C92157 * C1023) * C886 +
           (C307 * C891 + C92157 * C1086) * C800) *
              C92183 * C89 +
          (C337 * C884 + C413 * C798 - (C307 * C804 + C92157 * C1021) * C885 -
           (C307 * C889 + C92157 * C1087) * C799 +
           (C307 * C807 + C92157 * C1024) * C886 +
           (C307 * C892 + C92157 * C1088) * C800) *
              C92183 * C90 +
          (C339 * C884 + C414 * C798 - (C307 * C803 + C92157 * C1020) * C885 -
           (C307 * C888 + C92157 * C1089) * C799 +
           (C307 * C808 + C92157 * C1025) * C886 +
           (C307 * C893 + C92157 * C1090) * C800) *
              C92183 * C91 +
          (C341 * C884 + C415 * C798 - (C307 * C802 + C92157 * C1019) * C885 -
           (C307 * C887 + C92157 * C1091) * C799 +
           (C307 * C809 + C92157 * C1026) * C886 +
           (C307 * C894 + C92157 * C1092) * C800) *
              C92183 * C92) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C92183 * C89 +
           (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
              C93 -
          ((C420 + C412) * C92183 * C92 + (C419 + C407) * C92183 * C91 +
           (C418 + C404) * C92183 * C90 + (C417 + C401) * C92183 * C89) *
              C94 +
          (C423 * C89 + C424 * C90 + (C412 + C420) * C92183 * C91 +
           ((C307 * C112 + C92157 * C313) * C181 +
            (C307 * C187 + C92157 * C399) * C92105) *
               C92183 * C92) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C181 +
            (C14876 + C14877 + C14878) * C92105) *
               C92183 * C92072) *
              C93 -
          (((C14879 + C14880 + C14881) * C92105 +
            (C14786 + C14785 + C14784) * C181) *
               C92183 * C92072 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92183 * C92322) *
              C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C181 +
            (C14750 * C185 + C14523 * C397 + C14751 * C887 + C14524 * C1091 +
             C14752 * C894 + C14525 * C1092) *
                C92105) *
               C92183 * C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92183 * C92322 +
          ((C14780 + C14779 + C14778) * C884 +
           (C14876 + C14877 + C14878) * C798 -
           (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
            C14750 * C804 + C14523 * C1021) *
               C885 -
           (C14752 * C4988 + C14525 * C5264 + C14751 * C892 + C14524 * C1088 +
            C14750 * C889 + C14523 * C1087) *
               C799 +
           (C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
            C14752 * C15274 + C14525 * C15594) *
               C886 +
           (C14750 * C892 + C14523 * C1088 + C14751 * C4988 + C14524 * C5264 +
            C14752 * C15397 + C14525 * C15672) *
               C800) *
              C92183 * C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C28197 +
            (C11246 + C11262) * C28198 + (C11257 + C11265) * C28199) *
               C92322 +
           ((C401 + C417) * C28197 + C13093 * C28198 +
            (C11254 + C11264) * C28199) *
               C92072) *
              C93 -
          (((C11263 + C11251) * C28199 + C13094 * C28198 +
            (C418 + C404) * C28197) *
               C92072 +
           ((C11264 + C11254) * C28199 + C13095 * C28198 +
            (C417 + C401) * C28197) *
               C92322) *
              C94 +
          ((C421 * C28197 + C9676 * C28198 + (C11251 + C11263) * C28199) *
               C92322 +
           (C422 * C28197 + (C3013 + C3021) * C28198 +
            ((C307 * C1393 + C92157 * C1610) * C181 +
             (C307 * C1475 + C92157 * C1676) * C92105) *
                C28199) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C28197 +
           (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C28198 +
           (C11160 * C884 + C11261 * C798 -
            (C307 * C5719 + C92157 * C5965) * C885 -
            (C307 * C5805 + C92157 * C6045) * C799 +
            (C307 * C16095 + C92157 * C16333) * C886 +
            (C307 * C16177 + C92157 * C16411) * C800) *
               C28199) *
              C92322 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C28197 +
           (C2934 * C884 + C3016 * C798 - C11989 * C885 - C12101 * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C28198 +
           (C11158 * C884 + C11260 * C798 -
            (C307 * C5720 + C92157 * C5966) * C885 -
            (C307 * C5806 + C92157 * C6046) * C799 +
            (C307 * C16096 + C92157 * C16334) * C886 +
            (C307 * C16178 + C92157 * C16412) * C800) *
               C28199) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C92183 * C89 +
           (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
              C798 -
          (((C307 * C953 + C92157 * C1143) * C92116 +
            (C307 * C802 + C92157 * C1019) * C244) *
               C92183 * C92 +
           ((C307 * C954 + C92157 * C1144) * C92116 +
            (C307 * C803 + C92157 * C1020) * C244) *
               C92183 * C91 +
           ((C307 * C955 + C92157 * C1145) * C92116 +
            (C307 * C804 + C92157 * C1021) * C244) *
               C92183 * C90 +
           ((C307 * C956 + C92157 * C1146) * C92116 +
            (C307 * C805 + C92157 * C1022) * C244) *
               C92183 * C89) *
              C799 +
          (((C307 * C806 + C92157 * C1023) * C244 +
            (C307 * C957 + C92157 * C1147) * C92116) *
               C92183 * C89 +
           ((C307 * C807 + C92157 * C1024) * C244 +
            (C307 * C958 + C92157 * C1148) * C92116) *
               C92183 * C90 +
           ((C307 * C808 + C92157 * C1025) * C244 +
            (C307 * C959 + C92157 * C1149) * C92116) *
               C92183 * C91 +
           ((C307 * C809 + C92157 * C1026) * C244 +
            (C307 * C960 + C92157 * C1150) * C92116) *
               C92183 * C92) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C92183 * C89 +
           (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
              C92105 * C93 -
          ((C500 + C492) * C92183 * C92 + (C499 + C487) * C92183 * C91 +
           (C498 + C484) * C92183 * C90 + (C497 + C481) * C92183 * C89) *
              C92105 * C94 +
          (C503 * C89 + C504 * C90 + (C492 + C500) * C92183 * C91 +
           ((C307 * C112 + C92157 * C313) * C244 +
            (C307 * C250 + C92157 * C479) * C92116) *
               C92183 * C92) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C92105 * C93 -
          (((C14971 + C14972 + C14973) * C92116 +
            (C14786 + C14785 + C14784) * C244) *
               C92183 * C92072 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92183 * C92322) *
              C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C244 +
            (C14750 * C248 + C14523 * C477 + C14751 * C953 + C14524 * C1143 +
             C14752 * C960 + C14525 * C1150) *
                C92116) *
               C92183 * C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C798 -
          (((C14752 * C5086 + C14525 * C5341 + C14751 * C958 + C14524 * C1148 +
             C14750 * C955 + C14523 * C1145) *
                C92116 +
            (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
             C14750 * C804 + C14523 * C1021) *
                C244) *
               C92183 * C92072 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92183 * C92322) *
              C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92183 * C92322 +
           ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
             C14752 * C15274 + C14525 * C15594) *
                C244 +
            (C14750 * C958 + C14523 * C1148 + C14751 * C5086 + C14524 * C5341 +
             C14752 * C15494 + C14525 * C15748) *
                C92116) *
               C92183 * C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C28197 +
            (C11153 * C244 + C11351 * C92116) * C28198 +
            (C11160 * C244 + C11352 * C92116) * C28199) *
               C92322 +
           ((C481 + C497) * C28197 + (C9753 + C9754) * C28198 +
            (C28571 + C28572) * C28199) *
               C92072) *
              C92105 * C93 -
          (((C28573 + C28574) * C28199 + (C9757 + C9756) * C28198 +
            (C498 + C484) * C28197) *
               C92072 +
           ((C28572 + C28571) * C28199 + (C9754 + C9753) * C28198 +
            (C497 + C481) * C28197) *
               C92322) *
              C92105 * C94 +
          ((C501 * C28197 + C9760 * C28198 + (C28574 + C28573) * C28199) *
               C92322 +
           (C502 * C28197 + (C9759 + C9758) * C28198 +
            ((C307 * C1393 + C92157 * C1610) * C244 +
             (C307 * C1544 + C92157 * C1734) * C92116) *
                C28199) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C28197 +
            (C11153 * C244 + C11351 * C92116) * C28198 +
            (C11160 * C244 + C11352 * C92116) * C28199) *
               C92322 +
           ((C481 + C497) * C28197 + (C9753 + C9754) * C28198 +
            (C28571 + C28572) * C28199) *
               C92072) *
              C798 -
          ((((C307 * C5886 + C92157 * C6123) * C92116 +
             (C307 * C5720 + C92157 * C5966) * C244) *
                C28199 +
            (C12212 + C12208) * C28198 + (C2387 + C2381) * C28197) *
               C92072 +
           (((C307 * C5885 + C92157 * C6122) * C92116 +
             (C307 * C5719 + C92157 * C5965) * C244) *
                C28199 +
            (C14153 * C92116 + C13944 * C244) * C28198 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C28197) *
               C92322) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C28197 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C28198 +
            ((C307 * C16095 + C92157 * C16333) * C244 +
             (C307 * C16255 + C92157 * C16487) * C92116) *
                C28199) *
               C92322 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C28197 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C28198 +
            ((C307 * C16096 + C92157 * C16334) * C244 +
             (C307 * C16256 + C92157 * C16488) * C92116) *
                C28199) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C801 +
            (C554 * C117 + C92183 * C561) * C92084) *
               C89 +
           (C584 * C801 + C585 * C92084) * C90 +
           (C586 * C801 + C587 * C92084) * C91 +
           (C588 * C801 + C589 * C92084) * C92) *
              C92157 * C92116 * C798 -
          (((C554 * C810 + C92183 * C1209) * C92084 +
            (C554 * C802 + C92183 * C1201) * C801) *
               C92 +
           ((C554 * C811 + C92183 * C1210) * C92084 +
            (C554 * C803 + C92183 * C1202) * C801) *
               C91 +
           ((C554 * C812 + C92183 * C1211) * C92084 +
            (C554 * C804 + C92183 * C1203) * C801) *
               C90 +
           ((C554 * C813 + C92183 * C1212) * C92084 +
            (C554 * C805 + C92183 * C1204) * C801) *
               C89) *
              C92157 * C92116 * C799 +
          (((C554 * C806 + C92183 * C1205) * C801 +
            (C554 * C822 + C92183 * C1213) * C92084) *
               C89 +
           ((C554 * C807 + C92183 * C1206) * C801 +
            (C554 * C823 + C92183 * C1214) * C92084) *
               C90 +
           ((C554 * C808 + C92183 * C1207) * C801 +
            (C554 * C824 + C92183 * C1215) * C92084) *
               C91 +
           ((C554 * C809 + C92183 * C1208) * C801 +
            (C554 * C825 + C92183 * C1216) * C92084) *
               C92) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C104 +
           (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C89 +
          (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
           C589 * C95) *
              C90 +
          (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
           C591 * C95) *
              C91 +
          (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
           (C554 * C112 + C92183 * C560) * C106 +
           (C554 * C124 + C92183 * C566) * C95) *
              C92) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92322 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92072) *
              C14523 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92322 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92072) *
              C14524 +
          ((C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
            C5447 * C106 + C5446 * C95) *
               C92322 +
           (C5449 * C104 + C5448 * C93 - C5447 * C105 - C5446 * C94 +
            (C554 * C809 + C92183 * C1208) * C106 +
            (C554 * C825 + C92183 * C1216) * C95) *
               C92072) *
              C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92322 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C14523 +
           ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
           C15844 * C14525) *
              C92116 * C798 -
          (((C15845 + C15846) * C92072 + (C15847 + C15848) * C92322) * C14525 +
           ((C5456 + C5457) * C92072 + (C5458 + C5459) * C92322) * C14524 +
           ((C5429 + C5428) * C92072 + (C5453 + C5452) * C92322) * C14523) *
              C92116 * C799 +
          (C15844 * C14523 +
           ((C15848 + C15847) * C92322 + (C15846 + C15845) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C801 +
             (C554 * C15277 + C92183 * C15825) * C92084) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C801 +
             (C554 * C15278 + C92183 * C15826) * C92084) *
                C92072) *
               C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C104 +
           (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
            C28650 * C1406 + C28199 * C1797) *
               C93 -
           (C28676 + C28677 + C28678) * C105 -
           (C28679 + C28680 + C28681) * C94 +
           (C28682 + C28683 + C28684) * C106 +
           (C28685 + C28686 + C28687) * C95) *
              C92322 +
          ((C28678 + C28677 + C28676) * C104 +
           (C28681 + C28680 + C28679) * C93 -
           (C28684 + C28683 + C28682) * C105 -
           (C28687 + C28686 + C28685) * C94 +
           (C28648 * C110 + C28197 * C558 + C28649 * C1386 + C28198 * C1785 +
            C28650 * C1393 + C28199 * C1792) *
               C106 +
           (C28648 * C120 + C28197 * C564 + C28649 * C1394 + C28198 * C1793 +
            C28650 * C1409 + C28199 * C1800) *
               C95) *
              C92072) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C801 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C92084) *
               C92322 +
           ((C28678 + C28677 + C28676) * C801 +
            (C28681 + C28680 + C28679) * C92084) *
               C92072) *
              C92157 * C92116 * C798 -
          (((C28650 * C5726 + C28199 * C6203 + C28649 * C3440 + C28198 * C3880 +
             C28648 * C812 + C28197 * C1211) *
                C92084 +
            (C28650 * C5720 + C28199 * C6200 + C28649 * C3432 + C28198 * C3876 +
             C28648 * C804 + C28197 * C1203) *
                C801) *
               C92072 +
           ((C28650 * C5725 + C28199 * C6202 + C28649 * C3439 + C28198 * C3879 +
             C28648 * C813 + C28197 * C1212) *
                C92084 +
            (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
             C28648 * C805 + C28197 * C1204) *
                C801) *
               C92322) *
              C92157 * C92116 * C799 +
          (((C28648 * C806 + C28197 * C1205 + C28649 * C8412 + C28198 * C9072 +
             C28650 * C16095 + C28199 * C16563) *
                C801 +
            (C28648 * C822 + C28197 * C1213 + C28649 * C8418 + C28198 * C9075 +
             C28650 * C16099 + C28199 * C16565) *
                C92084) *
               C92322 +
           ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
             C28650 * C16096 + C28199 * C16564) *
                C801 +
            (C28648 * C823 + C28197 * C1214 + C28649 * C8419 + C28198 * C9076 +
             C28650 * C16100 + C28199 * C16566) *
                C92084) *
               C92072) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 -
           (C554 * C805 + C92183 * C1204) * C885 -
           (C554 * C890 + C92183 * C1267) * C799 +
           (C554 * C806 + C92183 * C1205) * C886 +
           (C554 * C891 + C92183 * C1268) * C800) *
              C89 +
          (C584 * C884 + C660 * C798 - (C554 * C804 + C92183 * C1203) * C885 -
           (C554 * C889 + C92183 * C1269) * C799 +
           (C554 * C807 + C92183 * C1206) * C886 +
           (C554 * C892 + C92183 * C1270) * C800) *
              C90 +
          (C586 * C884 + C661 * C798 - (C554 * C803 + C92183 * C1202) * C885 -
           (C554 * C888 + C92183 * C1271) * C799 +
           (C554 * C808 + C92183 * C1207) * C886 +
           (C554 * C893 + C92183 * C1272) * C800) *
              C91 +
          (C588 * C884 + C662 * C798 - (C554 * C802 + C92183 * C1201) * C885 -
           (C554 * C887 + C92183 * C1273) * C799 +
           (C554 * C809 + C92183 * C1208) * C886 +
           (C554 * C894 + C92183 * C1274) * C800) *
              C92) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92157 * C93 -
          ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
           (C664 + C648) * C89) *
              C92157 * C94 +
          (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
           ((C554 * C112 + C92183 * C560) * C181 +
            (C554 * C187 + C92183 * C646) * C92105) *
               C92) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92322 +
            (C648 + C664) * C92072) *
               C14523 +
           ((C5444 * C181 + C5545 * C92105) * C92322 +
            (C4710 + C4711) * C92072) *
               C14524 +
           ((C5451 * C181 + C5546 * C92105) * C92322 +
            (C15122 + C15123) * C92072) *
               C14525) *
              C93 -
          (((C15124 + C15125) * C92072 + (C15123 + C15122) * C92322) * C14525 +
           ((C4713 + C4712) * C92072 + (C4711 + C4710) * C92322) * C14524 +
           ((C665 + C651) * C92072 + (C664 + C648) * C92322) * C14523) *
              C94 +
          ((C668 * C92322 + C669 * C92072) * C14523 +
           (C4716 * C92322 + (C4715 + C4714) * C92072) * C14524 +
           ((C15125 + C15124) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C181 +
             (C554 * C894 + C92183 * C1274) * C92105) *
                C92072) *
               C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C92322 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92072) *
              C14523 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C92322 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92072) *
              C14524 +
          ((C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
            (C554 * C15273 + C92183 * C15823) * C886 +
            (C554 * C15396 + C92183 * C15922) * C800) *
               C92322 +
           (C5449 * C884 + C5547 * C798 - C15841 * C885 - C15930 * C799 +
            (C554 * C15274 + C92183 * C15824) * C886 +
            (C554 * C15397 + C92183 * C15923) * C800) *
               C92072) *
              C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C181 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C92105) *
               C92322 +
           ((C28678 + C28677 + C28676) * C181 +
            (C28774 + C28775 + C28776) * C92105) *
               C92072) *
              C92157 * C93 -
          (((C28777 + C28778 + C28779) * C92105 +
            (C28684 + C28683 + C28682) * C181) *
               C92072 +
           ((C28776 + C28775 + C28774) * C92105 +
            (C28676 + C28677 + C28678) * C181) *
               C92322) *
              C92157 * C94 +
          (((C28682 + C28683 + C28684) * C181 +
            (C28779 + C28778 + C28777) * C92105) *
               C92322 +
           ((C28648 * C110 + C28197 * C558 + C28649 * C1386 + C28198 * C1785 +
             C28650 * C1393 + C28199 * C1792) *
                C181 +
            (C28648 * C185 + C28197 * C644 + C28649 * C1468 + C28198 * C1851 +
             C28650 * C1475 + C28199 * C1858) *
                C92105) *
               C92072) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C884 +
           (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
            C28650 * C1472 + C28199 * C1855) *
               C798 -
           (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
            C28648 * C805 + C28197 * C1204) *
               C885 -
           (C28650 * C5805 + C28199 * C6279 + C28649 * C3513 + C28198 * C3949 +
            C28648 * C890 + C28197 * C1267) *
               C799 +
           (C28648 * C806 + C28197 * C1205 + C28649 * C8412 + C28198 * C9072 +
            C28650 * C16095 + C28199 * C16563) *
               C886 +
           (C28648 * C891 + C28197 * C1268 + C28649 * C8540 + C28198 * C9188 +
            C28650 * C16177 + C28199 * C16641) *
               C800) *
              C92322 +
          ((C28678 + C28677 + C28676) * C884 +
           (C28774 + C28775 + C28776) * C798 -
           (C28650 * C5720 + C28199 * C6200 + C28649 * C3432 + C28198 * C3876 +
            C28648 * C804 + C28197 * C1203) *
               C885 -
           (C28650 * C5806 + C28199 * C6280 + C28649 * C3514 + C28198 * C3950 +
            C28648 * C889 + C28197 * C1269) *
               C799 +
           (C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
            C28650 * C16096 + C28199 * C16564) *
               C886 +
           (C28648 * C892 + C28197 * C1270 + C28649 * C8541 + C28198 * C9189 +
            C28650 * C16178 + C28199 * C16642) *
               C800) *
              C92072) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92157 * C798 -
          (((C554 * C953 + C92183 * C1325) * C92116 +
            (C554 * C802 + C92183 * C1201) * C244) *
               C92 +
           ((C554 * C954 + C92183 * C1326) * C92116 +
            (C554 * C803 + C92183 * C1202) * C244) *
               C91 +
           ((C554 * C955 + C92183 * C1327) * C92116 +
            (C554 * C804 + C92183 * C1203) * C244) *
               C90 +
           ((C554 * C956 + C92183 * C1328) * C92116 +
            (C554 * C805 + C92183 * C1204) * C244) *
               C89) *
              C92157 * C799 +
          (((C554 * C806 + C92183 * C1205) * C244 +
            (C554 * C957 + C92183 * C1329) * C92116) *
               C89 +
           ((C554 * C807 + C92183 * C1206) * C244 +
            (C554 * C958 + C92183 * C1330) * C92116) *
               C90 +
           ((C554 * C808 + C92183 * C1207) * C244 +
            (C554 * C959 + C92183 * C1331) * C92116) *
               C91 +
           ((C554 * C809 + C92183 * C1208) * C244 +
            (C554 * C960 + C92183 * C1332) * C92116) *
               C92) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92157 * C92105 * C93 -
          ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
           (C742 + C726) * C89) *
              C92157 * C92105 * C94 +
          (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
           ((C554 * C112 + C92183 * C560) * C244 +
            (C554 * C250 + C92183 * C724) * C92116) *
               C92) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           ((C5637 + C5645) * C92322 + (C5634 + C5644) * C92072) * C14525) *
              C92105 * C93 -
          (((C5643 + C5631) * C92072 + (C5644 + C5634) * C92322) * C14525 +
           (C7347 * C92072 + C7348 * C92322) * C14524 +
           ((C743 + C729) * C92072 + (C742 + C726) * C92322) * C14523) *
              C92105 * C94 +
          ((C746 * C92322 + C747 * C92072) * C14523 +
           (C4791 * C92322 + (C2631 + C2641) * C92072) * C14524 +
           ((C5631 + C5643) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C244 +
             (C554 * C960 + C92183 * C1332) * C92116) *
                C92072) *
               C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           C16019 * C14525) *
              C798 -
          (((C16020 + C16011) * C92072 + (C16021 + C16014) * C92322) * C14525 +
           ((C5644 + C5634) * C92072 + (C5645 + C5637) * C92322) * C14524 +
           (C7348 * C92072 + (C5642 + C5626) * C92322) * C14523) *
              C799 +
          (C16019 * C14523 +
           ((C16014 + C16021) * C92322 + (C16011 + C16020) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C244 +
             (C554 * C15493 + C92183 * C16004) * C92116) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92072) *
               C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92322 +
           ((C28678 + C28677 + C28676) * C244 +
            (C28866 + C28867 + C28868) * C92116) *
               C92072) *
              C92157 * C92105 * C93 -
          (((C28869 + C28870 + C28871) * C92116 +
            (C28684 + C28683 + C28682) * C244) *
               C92072 +
           ((C28868 + C28867 + C28866) * C92116 +
            (C28676 + C28677 + C28678) * C244) *
               C92322) *
              C92157 * C92105 * C94 +
          (((C28682 + C28683 + C28684) * C244 +
            (C28871 + C28870 + C28869) * C92116) *
               C92322 +
           ((C28648 * C110 + C28197 * C558 + C28649 * C1386 + C28198 * C1785 +
             C28650 * C1393 + C28199 * C1792) *
                C244 +
            (C28648 * C248 + C28197 * C722 + C28649 * C1537 + C28198 * C1915 +
             C28650 * C1544 + C28199 * C1916) *
                C92116) *
               C92072) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92322 +
           ((C28678 + C28677 + C28676) * C244 +
            (C28866 + C28867 + C28868) * C92116) *
               C92072) *
              C92157 * C798 -
          (((C28650 * C5886 + C28199 * C6357 + C28649 * C3588 + C28198 * C4020 +
             C28648 * C955 + C28197 * C1327) *
                C92116 +
            (C28650 * C5720 + C28199 * C6200 + C28649 * C3432 + C28198 * C3876 +
             C28648 * C804 + C28197 * C1203) *
                C244) *
               C92072 +
           ((C28650 * C5885 + C28199 * C6356 + C28649 * C3587 + C28198 * C4019 +
             C28648 * C956 + C28197 * C1328) *
                C92116 +
            (C28650 * C5719 + C28199 * C6199 + C28649 * C3431 + C28198 * C3875 +
             C28648 * C805 + C28197 * C1204) *
                C244) *
               C92322) *
              C92157 * C799 +
          (((C28648 * C806 + C28197 * C1205 + C28649 * C8412 + C28198 * C9072 +
             C28650 * C16095 + C28199 * C16563) *
                C244 +
            (C28648 * C957 + C28197 * C1329 + C28649 * C8653 + C28198 * C9292 +
             C28650 * C16255 + C28199 * C16717) *
                C92116) *
               C92322 +
           ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
             C28650 * C16096 + C28199 * C16564) *
                C244 +
            (C28648 * C958 + C28197 * C1330 + C28649 * C8654 + C28198 * C9293 +
             C28650 * C16256 + C28199 * C16718) *
                C92116) *
               C92072) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1987 +
            (C19671 * C117 + C92067 * C125) * C1983 -
            (C19671 * C108 + C92067 * C114) * C1988 -
            (C19671 * C118 + C92067 * C126) * C1984) *
               C19667 +
           (C21165 + C21166 - C21189 - C21190) * C19668 +
           (C21171 + C21172 - C21191 - C21192) * C19669 +
           (C21177 + C21178 - C21193 - C21194) * C19670) *
              C92183 * C92116 * C1985 +
          ((C21189 - (C21166 + C21165) + C21190) * C19667 +
           (C21191 - (C21172 + C21171) + C21192) * C19668 +
           (C21193 - (C21178 + C21177) + C21194) * C19669 +
           ((C19671 * C15274 + C92067 * C15276) * C1988 -
            (C20153 * C1983 + C20154 * C1987) +
            (C19671 * C15278 + C92067 * C15280) * C1984) *
               C19670) *
              C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C1983 -
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
             C4102 * C118 + C4097 * C126) *
                C1984) *
               C92336 +
           ((C4902 + C4903 + C4904) * C1987 + (C4905 + C4906 + C4907) * C1983 -
            (C6470 + C6471 + C6472) * C1988 - (C6473 + C6474 + C6475) * C1984) *
               C92171) *
              C92183 * C92116 * C1985 +
          (((C6472 + C6471 + C6470) * C1988 -
            ((C4907 + C4906 + C4905) * C1983 +
             (C4904 + C4903 + C4902) * C1987) +
            (C6475 + C6474 + C6473) * C1984) *
               C92336 +
           ((C4102 * C807 + C4097 * C819 + C4103 * C808 + C4098 * C820 +
             C4104 * C809 + C4099 * C821) *
                C1988 -
            ((C4908 + C4909 + C4910) * C1983 +
             (C4911 + C4912 + C4913) * C1987) +
            (C4102 * C823 + C4097 * C831 + C4103 * C824 + C4098 * C832 +
             C4104 * C825 + C4099 * C833) *
                C1984) *
               C92171) *
              C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C1987 +
             (C19671 * C117 + C92067 * C125) * C1983 -
             (C19671 * C108 + C92067 * C114) * C1988 -
             (C19671 * C118 + C92067 * C126) * C1984) *
                C92336 +
            (C21165 + C21166 - C21189 - C21190) * C92171) *
               C28197 +
           ((C26329 + C26330 - C26337 - C26338) * C92336 +
            (C25387 + C25388 - C25403 - C25404) * C92171) *
               C28198 +
           ((C24556 * C1987 + C24555 * C1983 -
             (C19671 * C1391 + C92067 * C1403) * C1988 -
             (C19671 * C1407 + C92067 * C1415) * C1984) *
                C92336 +
            (C35525 + C35526 - C35533 - C35534) * C92171) *
               C28199) *
              C92116 * C1985 +
          (((C21189 - (C21166 + C21165) + C21190) * C92336 +
            (C21191 - (C21172 + C21171) + C21192) * C92171) *
               C28197 +
           ((C25403 - (C25388 + C25387) + C25404) * C92336 +
            (C25405 - (C25394 + C25393) + C25406) * C92171) *
               C28198 +
           ((C35533 - (C35526 + C35525) + C35534) * C92336 +
            ((C19671 * C16096 + C92067 * C16098) * C1988 -
             (C24551 * C1983 + C24552 * C1987) +
             (C19671 * C16100 + C92067 * C16102) * C1984) *
                C92171) *
               C28199) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2059 +
            (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
            C20225 * C1986) *
               C19667 +
           (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 - C20226 * C1986) *
               C19668 +
           (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 - C20227 * C1986) *
               C19669 +
           (C20151 * C2059 + C20227 * C1985 - C20154 * C2060 - C20228 * C1986) *
               C19670) *
              C92183 * C1983 +
          ((C21183 * C2060 -
            ((C19671 * C183 + C92067 * C189) * C1985 +
             (C19671 * C108 + C92067 * C114) * C2059) +
            C21267 * C1986) *
               C19667 +
           (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
            C21268 * C1986) *
               C19668 +
           (C21187 * C2060 - (C21268 * C1985 + C21185 * C2059) +
            C21269 * C1986) *
               C19669 +
           ((C19671 * C15274 + C92067 * C15276) * C2060 -
            (C21269 * C1985 + C21187 * C2059) +
            (C19671 * C15397 + C92067 * C15399) * C1986) *
               C19670) *
              C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2059 + (C5008 + C5007 + C5006) * C1985 -
            (C4911 + C4912 + C4913) * C2060 - (C5011 + C5010 + C5009) * C1986) *
               C92171) *
              C92183 * C1983 +
          (((C6472 + C6471 + C6470) * C2060 -
            ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
              C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6580 + C6581 + C6582) * C1986) *
               C92336 +
           ((C4102 * C807 + C4097 * C819 + C4103 * C808 + C4098 * C820 +
             C4104 * C809 + C4099 * C821) *
                C2060 -
            ((C6582 + C6581 + C6580) * C1985 +
             (C6470 + C6471 + C6472) * C2059) +
            (C4102 * C892 + C4097 * C900 + C4103 * C893 + C4098 * C901 +
             C4104 * C894 + C4099 * C902) *
                C1986) *
               C92171) *
              C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2059 +
             (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
             C20225 * C1986) *
                C92336 +
            (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
             C20226 * C1986) *
                C92171) *
               C28197 +
           ((C27334 + C27335 - C27336 - C27337) * C92336 +
            (C27338 + C27339 - C27340 - C27341) * C92171) *
               C28198 +
           ((C24556 * C2059 + C24662 * C1985 - C24554 * C2060 -
             C24661 * C1986) *
                C92336 +
            (C24554 * C2059 + C24661 * C1985 - C24552 * C2060 -
             C24660 * C1986) *
                C92171) *
               C28199) *
              C1983 +
          (((C21183 * C2060 -
             ((C19671 * C183 + C92067 * C189) * C1985 +
              (C19671 * C108 + C92067 * C114) * C2059) +
             C21267 * C1986) *
                C92336 +
            (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
             C21268 * C1986) *
                C92171) *
               C28197 +
           ((C25399 * C2060 - (C26444 * C1985 + C26335 * C2059) +
             C25509 * C1986) *
                C92336 +
            (C25401 * C2060 - (C25509 * C1985 + C25399 * C2059) +
             C25510 * C1986) *
                C92171) *
               C28198 +
           ((C35531 * C2060 -
             ((C19671 * C1473 + C92067 * C1481) * C1985 +
              (C19671 * C1391 + C92067 * C1403) * C2059) +
             C35635 * C1986) *
                C92336 +
            ((C19671 * C16096 + C92067 * C16098) * C2060 -
             (C35635 * C1985 + C35531 * C2059) +
             (C19671 * C16178 + C92067 * C16180) * C1986) *
                C92171) *
               C28199) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C19667 +
            (C20281 + C20297) * C19668 + C20301 * C19669 + C20302 * C19670) *
               C92183 * C1985 -
           ((C20300 + C20292) * C19670 + (C20299 + C20287) * C19669 +
            (C20298 + C20284) * C19668 + (C20297 + C20281) * C19667) *
               C92183 * C1986) *
              C1983 +
          (((C21336 + C21348) * C19667 + (C21339 + C21349) * C19668 +
            (C21342 + C21350) * C19669 +
            ((C19671 * C15274 + C92067 * C15276) * C244 +
             (C19671 * C15494 + C92067 * C15496) * C92116) *
                C19670) *
               C92183 * C1986 -
           ((C21350 + C21342) * C19670 + (C21349 + C21339) * C19669 +
            (C21348 + C21336) * C19668 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C19667) *
               C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
              C4104 * C247 + C4099 * C253) *
                 C92116) *
                C92336 +
            ((C4902 + C4903 + C4904) * C244 +
             (C5104 + C5105 + C5106) * C92116) *
                C92171) *
               C92183 * C1985 -
           (((C5107 + C5108 + C5109) * C92116 +
             (C4911 + C4912 + C4913) * C244) *
                C92171 +
            ((C5106 + C5105 + C5104) * C92116 +
             (C4904 + C4903 + C4902) * C244) *
                C92336) *
               C92183 * C1986) *
              C1983 +
          ((((C6472 + C6471 + C6470) * C244 +
             (C6687 + C6688 + C6689) * C92116) *
                C92336 +
            ((C4102 * C807 + C4097 * C819 + C4103 * C808 + C4098 * C820 +
              C4104 * C809 + C4099 * C821) *
                 C244 +
             (C4102 * C958 + C4097 * C966 + C4103 * C959 + C4098 * C967 +
              C4104 * C960 + C4099 * C968) *
                 C92116) *
                C92171) *
               C92183 * C1986 -
           (((C6689 + C6688 + C6687) * C92116 +
             (C6470 + C6471 + C6472) * C244) *
                C92171 +
            ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
              C4102 * C246 + C4097 * C252) *
                 C92116 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C244) *
                C92336) *
               C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C244 +
              (C19671 * C245 + C92067 * C251) * C92116) *
                 C92336 +
             (C20281 + C20297) * C92171) *
                C28197 +
            ((C24549 * C244 + C24753 * C92116) * C92336 +
             (C23916 + C23917) * C92171) *
                C28198 +
            ((C24556 * C244 + C24754 * C92116) * C92336 +
             (C34101 + C34102) * C92171) *
                C28199) *
               C1985 -
           (((C34103 + C34104) * C92171 + (C34102 + C34101) * C92336) * C28199 +
            ((C23919 + C23918) * C92171 + (C23917 + C23916) * C92336) * C28198 +
            ((C20298 + C20284) * C92171 + (C20297 + C20281) * C92336) *
                C28197) *
               C1986) *
              C1983 +
          ((((C21336 + C21348) * C92336 + (C21339 + C21349) * C92171) * C28197 +
            ((C25609 + C25617) * C92336 + (C25612 + C25618) * C92171) * C28198 +
            ((C35734 + C35738) * C92336 +
             ((C19671 * C16096 + C92067 * C16098) * C244 +
              (C19671 * C16256 + C92067 * C16258) * C92116) *
                 C92171) *
                C28199) *
               C1986 -
           (((C35738 + C35734) * C92171 +
             ((C19671 * C1542 + C92067 * C1550) * C92116 +
              (C19671 * C1391 + C92067 * C1403) * C244) *
                 C92336) *
                C28199 +
            ((C25617 + C25609) * C92171 +
             (C26546 * C92116 + C26335 * C244) * C92336) *
                C28198 +
            ((C21348 + C21336) * C92171 +
             ((C19671 * C246 + C92067 * C252) * C92116 +
              (C19671 * C108 + C92067 * C114) * C244) *
                 C92336) *
                C28197) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C1987 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C1983 -
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C1988 -
           (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
            C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
               C1984) *
              C92183 * C92067 * C92116 * C1985 +
          ((C19822 * C804 + C19667 * C1021 + C19823 * C807 + C19668 * C1024 +
            C19824 * C4866 + C19669 * C5184 + C19825 * C15274 +
            C19670 * C15594) *
               C1988 -
           ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
             C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
             C19667 * C1030) *
                C1983 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C1987) +
           (C19822 * C812 + C19667 * C1029 + C19823 * C823 + C19668 * C1032 +
            C19824 * C4872 + C19669 * C5187 + C19825 * C15278 +
            C19670 * C15596) *
               C1984) *
              C92183 * C92067 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1987 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C1983 -
            (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
               C92183 * C4097 +
           ((C4355 + C4354) * C1987 + (C4357 + C4356) * C1983 -
            (C4359 + C4358) * C1988 - (C4361 + C4360) * C1984) *
               C92183 * C4098 +
           (C4366 * C1987 + C4367 * C1983 - (C4363 + C4362) * C1988 -
            (C4365 + C4364) * C1984) *
               C92183 * C4099) *
              C92116 * C1985 +
          (((C6804 + C6805) * C1988 -
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C1983 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C1987) +
            (C6806 + C6807) * C1984) *
               C92183 * C4097 +
           ((C6808 + C6809) * C1988 -
            ((C6807 + C6806) * C1983 + (C6805 + C6804) * C1987) +
            (C6810 + C6811) * C1984) *
               C92183 * C4098 +
           ((C4327 * C802 + C92336 * C1019 + C4328 * C809 + C92171 * C1026) *
                C1988 -
            ((C6811 + C6810) * C1983 + (C6809 + C6808) * C1987) +
            (C4327 * C810 + C92336 * C1027 + C4328 * C825 + C92171 * C1034) *
                C1984) *
               C92183 * C4099) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1987 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C1983 -
            (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
               C28197 +
           ((C34993 + C34994) * C1987 + (C34995 + C34996) * C1983 -
            (C7758 + C7757) * C1988 - (C7760 + C7759) * C1984) *
               C28198 +
           (C35005 * C1987 + C35006 * C1983 -
            (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                C1988 -
            (C4328 * C5726 + C92171 * C5969 + C4327 * C1407 + C92336 * C1616) *
                C1984) *
               C28199) *
              C92067 * C92116 * C1985 +
          (((C6804 + C6805) * C1988 -
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C1983 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C1987) +
            (C6806 + C6807) * C1984) *
               C28197 +
           ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                C1988 -
            ((C4328 * C8418 + C92171 * C8769 + C4327 * C3439 + C92336 * C3665) *
                 C1983 +
             (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                 C1987) +
            (C4327 * C3440 + C92336 * C3666 + C4328 * C8419 + C92171 * C8770) *
                C1984) *
               C28198 +
           ((C4327 * C5720 + C92336 * C5966 + C4328 * C16096 +
             C92171 * C16334) *
                C1988 -
            ((C4328 * C16099 + C92171 * C16335 + C4327 * C5725 +
              C92336 * C5968) *
                 C1983 +
             (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
              C92336 * C5965) *
                 C1987) +
            (C4327 * C5726 + C92336 * C5969 + C4328 * C16100 +
             C92171 * C16336) *
                C1984) *
               C28199) *
              C92067 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2059 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C1985 -
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C2060 -
           (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 +
            C19669 * C5263 + C19823 * C891 + C19668 * C1086 + C19822 * C890 +
            C19667 * C1085) *
               C1986) *
              C92183 * C92067 * C1983 +
          ((C19822 * C804 + C19667 * C1021 + C19823 * C807 + C19668 * C1024 +
            C19824 * C4866 + C19669 * C5184 + C19825 * C15274 +
            C19670 * C15594) *
               C2060 -
           ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
             C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
                C1985 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C2059) +
           (C19822 * C889 + C19667 * C1087 + C19823 * C892 + C19668 * C1088 +
            C19824 * C4988 + C19669 * C5264 + C19825 * C15397 +
            C19670 * C15672) *
               C1986) *
              C92183 * C92067 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2059 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C1985 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C2060 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C1986) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2059 + (C4455 + C4456) * C1985 -
            (C6805 + C6804) * C2060 - (C6918 + C6919) * C1986) *
               C92183 * C4098 +
           (C4366 * C2059 + C4461 * C1985 - (C6809 + C6808) * C2060 -
            (C6920 + C6921) * C1986) *
               C92183 * C4099) *
              C1983 +
          (((C6804 + C6805) * C2060 -
            ((C4456 + C4455) * C1985 + (C4354 + C4355) * C2059) +
            (C6919 + C6918) * C1986) *
               C92183 * C4097 +
           ((C6808 + C6809) * C2060 -
            ((C4458 + C4457) * C1985 + (C4359 + C4358) * C2059) +
            (C6921 + C6920) * C1986) *
               C92183 * C4098 +
           ((C4327 * C802 + C92336 * C1019 + C4328 * C809 + C92171 * C1026) *
                C2060 -
            ((C4459 + C4460) * C1985 + (C4363 + C4362) * C2059) +
            (C4327 * C887 + C92336 * C1091 + C4328 * C894 + C92171 * C1092) *
                C1986) *
               C92183 * C4099) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2059 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C1985 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C2060 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C1986) *
               C28197 +
           ((C34993 + C34994) * C2059 + (C35098 + C35099) * C1985 -
            (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                C2060 -
            (C4328 * C8540 + C92171 * C8870 + C4327 * C3513 + C92336 * C3735) *
                C1986) *
               C28198 +
           (C35005 * C2059 + C35104 * C1985 -
            (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
             C92336 * C5965) *
                C2060 -
            (C4328 * C16177 + C92171 * C16411 + C4327 * C5805 +
             C92336 * C6045) *
                C1986) *
               C28199) *
              C92067 * C1983 +
          (((C6804 + C6805) * C2060 -
            ((C4456 + C4455) * C1985 + (C4354 + C4355) * C2059) +
            (C6919 + C6918) * C1986) *
               C28197 +
           ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                C2060 -
            ((C7872 + C7871) * C1985 + (C7758 + C7757) * C2059) +
            (C4327 * C3514 + C92336 * C3736 + C4328 * C8541 + C92171 * C8871) *
                C1986) *
               C28198 +
           ((C4327 * C5720 + C92336 * C5966 + C4328 * C16096 +
             C92171 * C16334) *
                C2060 -
            ((C4328 * C5806 + C92171 * C6046 + C4327 * C1473 + C92336 * C1674) *
                 C1985 +
             (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                 C2059) +
            (C4327 * C5806 + C92336 * C6046 + C4328 * C16178 +
             C92171 * C16412) *
                C1986) *
               C28199) *
              C92067 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
             C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
                C244 +
            (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
             C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
                C92116) *
               C92183 * C92067 * C1985 -
           ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
             C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
             C19667 * C1146) *
                C92116 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C244) *
               C92183 * C92067 * C1986) *
              C1983 +
          (((C19822 * C804 + C19667 * C1021 + C19823 * C807 + C19668 * C1024 +
             C19824 * C4866 + C19669 * C5184 + C19825 * C15274 +
             C19670 * C15594) *
                C244 +
            (C19822 * C955 + C19667 * C1145 + C19823 * C958 + C19668 * C1148 +
             C19824 * C5086 + C19669 * C5341 + C19825 * C15494 +
             C19670 * C15748) *
                C92116) *
               C92183 * C92067 * C1986 -
           ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
             C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
                C92116 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C244) *
               C92183 * C92067 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C92183 * C4097 +
            ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
                C4098 +
            C4561 * C4099) *
               C1985 -
           (((C7028 + C7029) * C92116 + (C6809 + C6808) * C244) * C92183 *
                C4099 +
            ((C7030 + C7031) * C92116 + (C6805 + C6804) * C244) * C92183 *
                C4098 +
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C92116 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C244) *
                C92183 * C4097) *
               C1986) *
              C1983 +
          ((((C6804 + C6805) * C244 + (C7031 + C7030) * C92116) * C92183 *
                C4097 +
            ((C6808 + C6809) * C244 + (C7029 + C7028) * C92116) * C92183 *
                C4098 +
            ((C4327 * C802 + C92336 * C1019 + C4328 * C809 + C92171 * C1026) *
                 C244 +
             (C4327 * C953 + C92336 * C1143 + C4328 * C960 + C92171 * C1150) *
                 C92116) *
                C92183 * C4099) *
               C1986 -
           (((C4556 + C4557) * C92116 + (C4363 + C4362) * C244) * C92183 *
                C4099 +
            ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C92183 *
                C4098 +
            ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C92183 *
                C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C28197 +
            ((C34993 + C34994) * C244 + (C35195 + C35194) * C92116) * C28198 +
            (C35005 * C244 + C35200 * C92116) * C28199) *
               C92067 * C1985 -
           (((C4328 * C16255 + C92171 * C16487 + C4327 * C5885 +
              C92336 * C6122) *
                 C92116 +
             (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
              C92336 * C5965) *
                 C244) *
                C28199 +
            ((C4328 * C8653 + C92171 * C8971 + C4327 * C3587 + C92336 * C3805) *
                 C92116 +
             (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                 C244) *
                C28198 +
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C92116 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C244) *
                C28197) *
               C92067 * C1986) *
              C1983 +
          ((((C6804 + C6805) * C244 + (C7031 + C7030) * C92116) * C28197 +
            ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                 C244 +
             (C4327 * C3588 + C92336 * C3806 + C4328 * C8654 + C92171 * C8972) *
                 C92116) *
                C28198 +
            ((C4327 * C5720 + C92336 * C5966 + C4328 * C16096 +
              C92171 * C16334) *
                 C244 +
             (C4327 * C5886 + C92336 * C6123 + C4328 * C16256 +
              C92171 * C16488) *
                 C92116) *
                C28199) *
               C92067 * C1986 -
           (((C4328 * C5886 + C92171 * C6123 + C4327 * C1542 + C92336 * C1730) *
                 C92116 +
             (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                 C244) *
                C28199 +
            ((C7981 + C7982) * C92116 + (C7758 + C7757) * C244) * C28198 +
            ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C28197) *
               C92067 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92067 * C19667 +
           (C7130 + C7131 - C7132 - C7133) * C92067 * C19668 +
           (C17490 + C17491 - C17492 - C17493) * C92067 * C19669 +
           (C21615 + C21616 - C21617 - C21618) * C92067 * C19670) *
              C92116 * C1985 +
          ((C7132 - (C7131 + C7130) + C7133) * C92067 * C19667 +
           (C17492 - (C17491 + C17490) + C17493) * C92067 * C19668 +
           (C21617 - (C21616 + C21615) + C21618) * C92067 * C19669 +
           ((C554 * C15274 + C92183 * C15824) * C1988 -
            (C20516 * C1983 + C20517 * C1987) +
            (C554 * C15278 + C92183 * C15826) * C1984) *
               C92067 * C19670) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C4098 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C4099) *
               C92336 +
           ((C7130 + C7131 - C7132 - C7133) * C4097 +
            (C7134 + C7135 - C7136 - C7137) * C4098 +
            (C7138 + C7139 - C7140 - C7141) * C4099) *
               C92171) *
              C92116 * C1985 +
          (((C7132 - (C7131 + C7130) + C7133) * C4097 +
            (C7136 - (C7135 + C7134) + C7137) * C4098 +
            (C7140 - (C7139 + C7138) + C7141) * C4099) *
               C92336 +
           ((C5449 * C1988 - (C5450 * C1983 + C5451 * C1987) + C5448 * C1984) *
                C4097 +
            (C5447 * C1988 - (C5448 * C1983 + C5449 * C1987) + C5446 * C1984) *
                C4098 +
            ((C554 * C809 + C92183 * C1208) * C1988 -
             (C5446 * C1983 + C5447 * C1987) +
             (C554 * C825 + C92183 * C1216) * C1984) *
                C4099) *
               C92171) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C1987 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C1983 -
            (C28676 + C28677 + C28678) * C1988 -
            (C28679 + C28680 + C28681) * C1984) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C1987 +
            (C34428 + C34429 + C34430) * C1983 -
            (C31074 + C31073 + C31072) * C1988 -
            (C31077 + C31076 + C31075) * C1984) *
               C92067 * C92171) *
              C92116 * C1985 +
          (((C31072 + C31073 + C31074) * C1988 -
            ((C34430 + C34429 + C34428) * C1983 +
             (C34427 + C34426 + C34425) * C1987) +
            (C31075 + C31076 + C31077) * C1984) *
               C92067 * C92336 +
           ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
             C28650 * C16096 + C28199 * C16564) *
                C1988 -
            ((C34431 + C34432 + C34433) * C1983 +
             (C34434 + C34435 + C34436) * C1987) +
            (C28648 * C823 + C28197 * C1214 + C28649 * C8419 + C28198 * C9076 +
             C28650 * C16100 + C28199 * C16566) *
                C1984) *
               C92067 * C92171) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
            C5545 * C1986) *
               C92067 * C19667 +
           (C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
               C92067 * C19668 +
           (C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
               C92067 * C19669 +
           (C15843 * C2059 + C15929 * C1985 - C20517 * C2060 - C20573 * C1986) *
               C92067 * C19670) *
              C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C92067 * C19667 +
           (C7242 - (C7241 + C7240) + C7243) * C92067 * C19668 +
           (C17598 - (C17597 + C17596) + C17599) * C92067 * C19669 +
           ((C554 * C15274 + C92183 * C15824) * C2060 -
            (C15930 * C1985 + C15841 * C2059) +
            (C554 * C15397 + C92183 * C15923) * C1986) *
               C92067 * C19670) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C4098 +
            (C2546 + C2547 - C2548 - C2560) * C4099) *
               C92336 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C4097 +
            (C7240 + C7241 - C7242 - C7243) * C4098 +
            (C7244 + C7245 - C7246 - C7247) * C4099) *
               C92171) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C4097 +
            (C2548 - (C2547 + C2546) + C2560) * C4098 +
            (C2553 - (C2552 + C2551) + C2561) * C4099) *
               C92336 +
           ((C7242 - (C7241 + C7240) + C7243) * C4097 +
            (C7246 - (C7245 + C7244) + C7247) * C4098 +
            ((C554 * C809 + C92183 * C1208) * C2060 -
             (C2558 * C1985 + C2472 * C2059) +
             (C554 * C894 + C92183 * C1274) * C1986) *
                C4099) *
               C92171) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C2059 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C1985 -
            (C34427 + C34426 + C34425) * C2060 -
            (C34523 + C34524 + C34525) * C1986) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C2059 +
            (C34525 + C34524 + C34523) * C1985 -
            (C34434 + C34435 + C34436) * C2060 -
            (C34528 + C34527 + C34526) * C1986) *
               C92067 * C92171) *
              C1983 +
          (((C31072 + C31073 + C31074) * C2060 -
            ((C28776 + C28775 + C28774) * C1985 +
             (C28676 + C28677 + C28678) * C2059) +
            (C31184 + C31183 + C31182) * C1986) *
               C92067 * C92336 +
           ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
             C28650 * C16096 + C28199 * C16564) *
                C2060 -
            ((C31182 + C31183 + C31184) * C1985 +
             (C31074 + C31073 + C31072) * C2059) +
            (C28648 * C892 + C28197 * C1270 + C28649 * C8541 + C28198 * C9189 +
             C28650 * C16178 + C28199 * C16642) *
                C1986) *
               C92067 * C92171) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92067 * C19667 +
            (C5626 + C5642) * C92067 * C19668 + C20625 * C19669 +
            C20630 * C19670) *
               C1985 -
           ((C20632 + C20629) * C92067 * C19670 +
            (C16021 + C16014) * C92067 * C19669 +
            (C5645 + C5637) * C92067 * C19668 +
            (C5642 + C5626) * C92067 * C19667) *
               C1986) *
              C1983 +
          ((C7346 * C92067 * C19667 + C16008 * C92067 * C19668 +
            (C16011 + C16020) * C92067 * C19669 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92067 * C19670) *
               C1986 -
           ((C16020 + C16011) * C92067 * C19670 + C17698 * C92067 * C19669 +
            C7348 * C92067 * C19668 + (C742 + C726) * C92067 * C19667) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C244 +
              (C554 * C245 + C92183 * C719) * C92116) *
                 C4097 +
             (C726 + C742) * C4098 + C746 * C4099) *
                C92336 +
            ((C5626 + C5642) * C4097 + C7346 * C4098 + C4791 * C4099) *
                C92171) *
               C1985 -
           (((C5643 + C5631) * C4099 + (C5644 + C5634) * C4098 +
             (C5645 + C5637) * C4097) *
                C92171 +
            (C7347 * C4099 + C7348 * C4098 + (C5642 + C5626) * C4097) *
                C92336) *
               C1986) *
              C1983 +
          (((C7346 * C4097 + C4791 * C4098 + (C2631 + C2641) * C4099) * C92336 +
            ((C5634 + C5644) * C4097 + (C5631 + C5643) * C4098 +
             ((C554 * C809 + C92183 * C1208) * C244 +
              (C554 * C960 + C92183 * C1332) * C92116) *
                 C4099) *
                C92171) *
               C1986 -
           (((C2641 + C2631) * C4099 + C7347 * C4098 + C7348 * C4097) * C92171 +
            ((C744 + C732) * C4099 + (C743 + C729) * C4098 +
             (C742 + C726) * C4097) *
                C92336) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
              C28650 * C1390 + C28199 * C1789) *
                 C244 +
             (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
              C28650 * C1541 + C28199 * C1910) *
                 C92116) *
                C92067 * C92336 +
            ((C34425 + C34426 + C34427) * C244 +
             (C34615 + C34616 + C34617) * C92116) *
                C92067 * C92171) *
               C1985 -
           (((C34618 + C34619 + C34620) * C92116 +
             (C34434 + C34435 + C34436) * C244) *
                C92067 * C92171 +
            ((C34617 + C34616 + C34615) * C92116 +
             (C34427 + C34426 + C34425) * C244) *
                C92067 * C92336) *
               C1986) *
              C1983 +
          ((((C31072 + C31073 + C31074) * C244 +
             (C31291 + C31290 + C31289) * C92116) *
                C92067 * C92336 +
            ((C28648 * C807 + C28197 * C1206 + C28649 * C8413 + C28198 * C9073 +
              C28650 * C16096 + C28199 * C16564) *
                 C244 +
             (C28648 * C958 + C28197 * C1330 + C28649 * C8654 + C28198 * C9293 +
              C28650 * C16256 + C28199 * C16718) *
                 C92116) *
                C92067 * C92171) *
               C1986 -
           (((C31289 + C31290 + C31291) * C92116 +
             (C31074 + C31073 + C31072) * C244) *
                C92067 * C92171 +
            ((C28868 + C28867 + C28866) * C92116 +
             (C28676 + C28677 + C28678) * C244) *
                C92067 * C92336) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C19667 +
            (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
               C92183 * C2709 -
           ((C22433 + C22434) * C19670 + (C22435 + C22436) * C19669 +
            (C22437 + C22438) * C19668 +
            ((C19671 * C1397 + C92067 * C1413) * C92084 +
             (C19671 * C1389 + C92067 * C1401) * C801) *
                C19667) *
               C92183 * C2710) *
              C1985 +
          (((C22438 + C22437) * C19667 + (C22436 + C22435) * C19668 +
            (C22434 + C22433) * C19669 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C19670) *
               C92183 * C2710 -
           ((C20161 + C20162) * C19670 + (C20160 + C20159) * C19669 +
            (C20158 + C20157) * C19668 + (C20156 + C20155) * C19667) *
               C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
              C4104 * C119 + C4099 * C127) *
                 C92084) *
                C92336 +
            ((C4902 + C4903 + C4904) * C801 +
             (C4905 + C4906 + C4907) * C92084) *
                C92171) *
               C92183 * C2709 -
           (((C8437 + C8438 + C8439) * C92084 +
             (C8440 + C8441 + C8442) * C801) *
                C92171 +
            ((C4104 * C1395 + C4099 * C1411 + C4103 * C1396 + C4098 * C1412 +
              C4102 * C1397 + C4097 * C1413) *
                 C92084 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C801) *
                C92336) *
               C92183 * C2710) *
              C1985 +
          ((((C8442 + C8441 + C8440) * C801 +
             (C8439 + C8438 + C8437) * C92084) *
                C92336 +
            ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
              C4104 * C8414 + C4099 * C8417) *
                 C801 +
             (C4102 * C8418 + C4097 * C8421 + C4103 * C8419 + C4098 * C8422 +
              C4104 * C8420 + C4099 * C8423) *
                 C92084) *
                C92171) *
               C92183 * C2710 -
           (((C4908 + C4909 + C4910) * C92084 +
             (C4911 + C4912 + C4913) * C801) *
                C92171 +
            ((C4907 + C4906 + C4905) * C92084 +
             (C4904 + C4903 + C4902) * C801) *
                C92336) *
               C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C801 +
              (C19671 * C117 + C92067 * C125) * C92084) *
                 C92336 +
             (C20155 + C20156) * C92171) *
                C28197 +
            ((C24557 + C24558) * C92336 + C27233 * C92171) * C28198 +
            C34715 * C28199) *
               C2709 -
           (((C34716 + C34717) * C92171 + (C34718 + C34719) * C92336) * C28199 +
            (C37351 * C92171 + (C24563 + C24564) * C92336) * C28198 +
            (C27235 * C92171 + (C24558 + C24557) * C92336) * C28197) *
               C2710) *
              C1985 +
          (((C27233 * C92336 + C23767 * C92171) * C28197 +
            (C34700 * C92336 + (C24560 + C24559) * C92171) * C28198 +
            ((C34717 + C34716) * C92336 +
             ((C19671 * C24525 + C92067 * C24528) * C801 +
              (C19671 * C24529 + C92067 * C24531) * C92084) *
                 C92171) *
                C28199) *
               C2710 -
           (((C24559 + C24560) * C92171 + C37351 * C92336) * C28199 +
            (C27234 * C92171 + C27235 * C92336) * C28198 +
            ((C20158 + C20157) * C92171 + (C20156 + C20155) * C92336) *
                C28197) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2059 +
            (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
            C20225 * C1986) *
               C19667 +
           (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 - C20226 * C1986) *
               C19668 +
           (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 - C20227 * C1986) *
               C19669 +
           (C20151 * C2059 + C20227 * C1985 - C20154 * C2060 - C20228 * C1986) *
               C19670) *
              C92183 * C92084 * C2709 +
          ((C22432 * C2060 -
            ((C19671 * C1471 + C92067 * C1479) * C1985 +
             (C19671 * C1389 + C92067 * C1401) * C2059) +
            C22513 * C1986) *
               C19667 +
           (C22430 * C2060 - (C22513 * C1985 + C22432 * C2059) +
            C22514 * C1986) *
               C19668 +
           (C22428 * C2060 - (C22514 * C1985 + C22430 * C2059) +
            C22515 * C1986) *
               C19669 +
           ((C19671 * C22410 + C92067 * C22411) * C2060 -
            (C22515 * C1985 + C22428 * C2059) +
            (C19671 * C22504 + C92067 * C22505) * C1986) *
               C19670) *
              C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2059 + (C5008 + C5007 + C5006) * C1985 -
            (C4911 + C4912 + C4913) * C2060 - (C5011 + C5010 + C5009) * C1986) *
               C92171) *
              C92183 * C92084 * C2709 +
          (((C8442 + C8441 + C8440) * C2060 -
            ((C4104 * C1469 + C4099 * C1477 + C4103 * C1470 + C4098 * C1478 +
              C4102 * C1471 + C4097 * C1479) *
                 C1985 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C2059) +
            (C8553 + C8554 + C8555) * C1986) *
               C92336 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C2060 -
            ((C8555 + C8554 + C8553) * C1985 +
             (C8440 + C8441 + C8442) * C2059) +
            (C4102 * C8540 + C4097 * C8543 + C4103 * C8541 + C4098 * C8544 +
             C4104 * C8542 + C4099 * C8545) *
                C1986) *
               C92171) *
              C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2059 +
             (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
             C20225 * C1986) *
                C92336 +
            (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
             C20226 * C1986) *
                C92171) *
               C28197 +
           ((C27334 + C27335 - C27336 - C27337) * C92336 +
            (C27338 + C27339 - C27340 - C27341) * C92171) *
               C28198 +
           ((C37450 + C37451 - C37452 - C37453) * C92336 +
            (C37454 + C37455 - C37456 - C37457) * C92171) *
               C28199) *
              C92084 * C2709 +
          (((C27336 - (C27335 + C27334) + C27337) * C92336 +
            (C27340 - (C27339 + C27338) + C27341) * C92171) *
               C28197 +
           ((C37452 - (C37451 + C37450) + C37453) * C92336 +
            (C37456 - (C37455 + C37454) + C37457) * C92171) *
               C28198 +
           ((C34712 * C2060 - (C34807 * C1985 + C34714 * C2059) +
             C34806 * C1986) *
                C92336 +
            ((C19671 * C24525 + C92067 * C24528) * C2060 -
             (C34806 * C1985 + C34712 * C2059) +
             (C19671 * C24639 + C92067 * C24641) * C1986) *
                C92171) *
               C28199) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2849 +
            (C19671 * C245 + C92067 * C251) * C2709 -
            (C19671 * C1389 + C92067 * C1401) * C2850 -
            (C19671 * C1540 + C92067 * C1548) * C2710) *
               C19667 +
           (C22584 + C22585 - C22586 - C22602) * C19668 +
           (C22589 + C22590 - C22591 - C22603) * C19669 +
           (C22594 + C22595 - C22596 - C22604) * C19670) *
              C92183 * C1985 +
          ((C22586 - (C22585 + C22584) + C22602) * C19667 +
           (C22591 - (C22590 + C22589) + C22603) * C19668 +
           (C22596 - (C22595 + C22594) + C22604) * C19669 +
           ((C19671 * C22410 + C92067 * C22411) * C2850 -
            (C20296 * C2709 + C20154 * C2849) +
            (C19671 * C22581 + C92067 * C22582) * C2710) *
               C19670) *
              C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C2709 -
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4104 * C1538 + C4099 * C1546 + C4103 * C1539 + C4098 * C1547 +
             C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2849 + (C5104 + C5105 + C5106) * C2709 -
            (C8440 + C8441 + C8442) * C2850 - (C8666 + C8667 + C8668) * C2710) *
               C92171) *
              C92183 * C1985 +
          (((C8442 + C8441 + C8440) * C2850 -
            ((C5106 + C5105 + C5104) * C2709 +
             (C4904 + C4903 + C4902) * C2849) +
            (C8668 + C8667 + C8666) * C2710) *
               C92336 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C2850 -
            ((C5107 + C5108 + C5109) * C2709 +
             (C4911 + C4912 + C4913) * C2849) +
            (C4102 * C8653 + C4097 * C8656 + C4103 * C8654 + C4098 * C8657 +
             C4104 * C8655 + C4099 * C8658) *
                C2710) *
               C92171) *
              C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2849 +
             (C19671 * C245 + C92067 * C251) * C2709 - C24549 * C2850 -
             C24753 * C2710) *
                C92336 +
            (C22584 + C22585 - C22586 - C22602) * C92171) *
               C28197 +
           ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
             C24754 * C2710) *
                C92336 +
            (C27444 + C27445 - C27446 - C27447) * C92171) *
               C28198 +
           ((C24556 * C2849 + C24754 * C2709 - C34714 * C2850 -
             C34891 * C2710) *
                C92336 +
            (C37556 + C37557 - C37558 - C37559) * C92171) *
               C28199) *
              C1985 +
          (((C22586 - (C22585 + C22584) + C22602) * C92336 +
            (C22591 - (C22590 + C22589) + C22603) * C92171) *
               C28197 +
           ((C27446 - (C27445 + C27444) + C27447) * C92336 +
            (C27450 - (C27449 + C27448) + C27451) * C92171) *
               C28198 +
           ((C37558 - (C37557 + C37556) + C37559) * C92336 +
            ((C19671 * C24525 + C92067 * C24528) * C2850 -
             (C24756 * C2709 + C24552 * C2849) +
             (C19671 * C24741 + C92067 * C24743) * C2710) *
                C92171) *
               C28199) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
             C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
                C801 +
            (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
             C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
                C92084) *
               C92183 * C92067 * C2709 -
           ((C19825 * C18736 + C19670 * C19092 + C19824 * C8418 +
             C19669 * C8769 + C19823 * C3439 + C19668 * C3665 + C19822 * C1397 +
             C19667 * C1614) *
                C92084 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C801) *
               C92183 * C92067 * C2710) *
              C1985 +
          (((C19822 * C3431 + C19667 * C3661 + C19823 * C8412 + C19668 * C8766 +
             C19824 * C18732 + C19669 * C19090 + C19825 * C22410 +
             C19670 * C22670) *
                C801 +
            (C19822 * C3439 + C19667 * C3665 + C19823 * C8418 + C19668 * C8769 +
             C19824 * C18736 + C19669 * C19092 + C19825 * C22412 +
             C19670 * C22671) *
                C92084) *
               C92183 * C92067 * C2710 -
           ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
             C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
             C19667 * C1030) *
                C92084 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C801) *
               C92183 * C92067 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C801 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C92084) *
                C92183 * C4097 +
            ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
                C4098 +
            (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
               C2709 -
           (((C7764 + C7763) * C92084 + (C7762 + C7761) * C801) * C92183 *
                C4099 +
            ((C7760 + C7759) * C92084 + (C7758 + C7757) * C801) * C92183 *
                C4098 +
            ((C4328 * C3439 + C92171 * C3665 + C4327 * C1397 + C92336 * C1614) *
                 C92084 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C801) *
                C92183 * C4097) *
               C2710) *
              C1985 +
          ((((C4327 * C3431 + C92336 * C3661 + C4328 * C8412 + C92171 * C8766) *
                 C801 +
             (C4327 * C3439 + C92336 * C3665 + C4328 * C8418 + C92171 * C8769) *
                 C92084) *
                C92183 * C4097 +
            ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                 C801 +
             (C4327 * C3440 + C92336 * C3666 + C4328 * C8419 + C92171 * C8770) *
                 C92084) *
                C92183 * C4098 +
            ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                 C801 +
             (C4327 * C3441 + C92336 * C3667 + C4328 * C8420 + C92171 * C8771) *
                 C92084) *
                C92183 * C4099) *
               C2710 -
           (((C6811 + C6810) * C92084 + (C6809 + C6808) * C801) * C92183 *
                C4099 +
            ((C6807 + C6806) * C92084 + (C6805 + C6804) * C801) * C92183 *
                C4098 +
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C92084 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C801) *
                C92183 * C4097) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C801 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C92084) *
                C28197 +
            ((C34993 + C34994) * C801 + (C34995 + C34996) * C92084) * C28198 +
            C35009 * C28199) *
               C92067 * C2709 -
           (((C35001 + C35002) * C92084 + (C35003 + C35004) * C801) * C28199 +
            ((C35000 + C34999) * C92084 + (C34998 + C34997) * C801) * C28198 +
            ((C34996 + C34995) * C92084 + (C34994 + C34993) * C801) * C28197) *
               C92067 * C2710) *
              C1985 +
          ((((C37674 + C37675) * C801 + (C37676 + C37677) * C92084) * C28197 +
            ((C37678 + C37679) * C801 + (C37680 + C37681) * C92084) * C28198 +
            ((C4327 * C24524 + C92336 * C24830 + C4328 * C24525 +
              C92171 * C24831) *
                 C801 +
             (C4327 * C24527 + C92336 * C24832 + C4328 * C24529 +
              C92171 * C24833) *
                 C92084) *
                C28199) *
               C92067 * C2710 -
           (((C37681 + C37680) * C92084 + (C37679 + C37678) * C801) * C28199 +
            ((C37677 + C37676) * C92084 + (C37675 + C37674) * C801) * C28198 +
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C92084 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C801) *
                C28197) *
               C92067 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2059 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C1985 -
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C2060 -
           (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 +
            C19669 * C5263 + C19823 * C891 + C19668 * C1086 + C19822 * C890 +
            C19667 * C1085) *
               C1986) *
              C92183 * C92067 * C92084 * C2709 +
          ((C19822 * C3431 + C19667 * C3661 + C19823 * C8412 + C19668 * C8766 +
            C19824 * C18732 + C19669 * C19090 + C19825 * C22410 +
            C19670 * C22670) *
               C2060 -
           ((C19825 * C18862 + C19670 * C19192 + C19824 * C8540 +
             C19669 * C8870 + C19823 * C3513 + C19668 * C3735 + C19822 * C1471 +
             C19667 * C1672) *
                C1985 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C2059) +
           (C19822 * C3513 + C19667 * C3735 + C19823 * C8540 + C19668 * C8870 +
            C19824 * C18862 + C19669 * C19192 + C19825 * C22504 +
            C19670 * C22738) *
               C1986) *
              C92183 * C92067 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2059 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C1985 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C2060 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C1986) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2059 + (C4455 + C4456) * C1985 -
            (C6805 + C6804) * C2060 - (C6918 + C6919) * C1986) *
               C92183 * C4098 +
           (C4366 * C2059 + C4461 * C1985 - (C6809 + C6808) * C2060 -
            (C6920 + C6921) * C1986) *
               C92183 * C4099) *
              C92084 * C2709 +
          (((C4327 * C3431 + C92336 * C3661 + C4328 * C8412 + C92171 * C8766) *
                C2060 -
            ((C4328 * C3513 + C92171 * C3735 + C4327 * C1471 + C92336 * C1672) *
                 C1985 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C2059) +
            (C4327 * C3513 + C92336 * C3735 + C4328 * C8540 + C92171 * C8870) *
                C1986) *
               C92183 * C4097 +
           ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                C2060 -
            ((C7872 + C7871) * C1985 + (C7758 + C7757) * C2059) +
            (C4327 * C3514 + C92336 * C3736 + C4328 * C8541 + C92171 * C8871) *
                C1986) *
               C92183 * C4098 +
           ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                C2060 -
            ((C7874 + C7873) * C1985 + (C7762 + C7761) * C2059) +
            (C4327 * C3515 + C92336 * C3737 + C4328 * C8542 + C92171 * C8872) *
                C1986) *
               C92183 * C4099) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2059 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C1985 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C2060 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C1986) *
               C28197 +
           ((C34993 + C34994) * C2059 + (C35098 + C35099) * C1985 -
            (C37675 + C37674) * C2060 - (C37788 + C37789) * C1986) *
               C28198 +
           (C35005 * C2059 + C35104 * C1985 - (C37679 + C37678) * C2060 -
            (C37790 + C37791) * C1986) *
               C28199) *
              C92067 * C92084 * C2709 +
          (((C37674 + C37675) * C2060 -
            ((C35099 + C35098) * C1985 + (C34994 + C34993) * C2059) +
            (C37789 + C37788) * C1986) *
               C28197 +
           ((C37678 + C37679) * C2060 -
            ((C35101 + C35100) * C1985 + (C34998 + C34997) * C2059) +
            (C37791 + C37790) * C1986) *
               C28198 +
           ((C4327 * C24524 + C92336 * C24830 + C4328 * C24525 +
             C92171 * C24831) *
                C2060 -
            ((C35102 + C35103) * C1985 + (C35003 + C35004) * C2059) +
            (C4327 * C24638 + C92336 * C24944 + C4328 * C24639 +
             C92171 * C24945) *
                C1986) *
               C28199) *
              C92067 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2849 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C2709 -
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C2850 -
           (C19825 * C18976 + C19670 * C19292 + C19824 * C8653 +
            C19669 * C8971 + C19823 * C3587 + C19668 * C3805 + C19822 * C1540 +
            C19667 * C1727) *
               C2710) *
              C92183 * C92067 * C1985 +
          ((C19822 * C3431 + C19667 * C3661 + C19823 * C8412 + C19668 * C8766 +
            C19824 * C18732 + C19669 * C19090 + C19825 * C22410 +
            C19670 * C22670) *
               C2850 -
           ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
             C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
             C19667 * C1146) *
                C2709 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C2849) +
           (C19822 * C3587 + C19667 * C3805 + C19823 * C8653 + C19668 * C8971 +
            C19824 * C18976 + C19669 * C19292 + C19825 * C22581 +
            C19670 * C22805) *
               C2710) *
              C92183 * C92067 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2849 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C2709 -
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C2850 -
            (C4328 * C3587 + C92171 * C3805 + C4327 * C1540 + C92336 * C1727) *
                C2710) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2849 + (C4552 + C4553) * C2709 -
            (C7758 + C7757) * C2850 - (C7981 + C7982) * C2710) *
               C92183 * C4098 +
           (C4366 * C2849 + C4558 * C2709 - (C7762 + C7761) * C2850 -
            (C7983 + C7984) * C2710) *
               C92183 * C4099) *
              C1985 +
          (((C4327 * C3431 + C92336 * C3661 + C4328 * C8412 + C92171 * C8766) *
                C2850 -
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C2709 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C2849) +
            (C4327 * C3587 + C92336 * C3805 + C4328 * C8653 + C92171 * C8971) *
                C2710) *
               C92183 * C4097 +
           ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                C2850 -
            ((C7030 + C7031) * C2709 + (C6805 + C6804) * C2849) +
            (C4327 * C3588 + C92336 * C3806 + C4328 * C8654 + C92171 * C8972) *
                C2710) *
               C92183 * C4098 +
           ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                C2850 -
            ((C7028 + C7029) * C2709 + (C6809 + C6808) * C2849) +
            (C4327 * C3589 + C92336 * C3807 + C4328 * C8655 + C92171 * C8973) *
                C2710) *
               C92183 * C4099) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2849 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C2709 -
            (C34994 + C34993) * C2850 - (C35194 + C35195) * C2710) *
               C28197 +
           ((C34993 + C34994) * C2849 + (C35195 + C35194) * C2709 -
            (C34998 + C34997) * C2850 - (C35197 + C35196) * C2710) *
               C28198 +
           (C35005 * C2849 + C35200 * C2709 - (C35003 + C35004) * C2850 -
            (C35199 + C35198) * C2710) *
               C28199) *
              C92067 * C1985 +
          (((C37674 + C37675) * C2850 -
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C2709 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C2849) +
            (C37898 + C37899) * C2710) *
               C28197 +
           ((C37678 + C37679) * C2850 -
            ((C37899 + C37898) * C2709 + (C37675 + C37674) * C2849) +
            (C37900 + C37901) * C2710) *
               C28198 +
           ((C4327 * C24524 + C92336 * C24830 + C4328 * C24525 +
             C92171 * C24831) *
                C2850 -
            ((C37901 + C37900) * C2709 + (C37679 + C37678) * C2849) +
            (C4327 * C24740 + C92336 * C25038 + C4328 * C24741 +
             C92171 * C25039) *
                C2710) *
               C28199) *
              C92067 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C92067 * C19667 +
                      (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                      C20515 * C19670) *
                         C2709 -
                     ((C22881 + C22882) * C92067 * C19670 +
                      (C19405 + C19406) * C92067 * C19669 +
                      (C9089 + C9090) * C92067 * C19668 +
                      ((C554 * C1397 + C92183 * C1796) * C92084 +
                       (C554 * C1389 + C92183 * C1788) * C801) *
                          C92067 * C19667) *
                         C2710) *
                        C1985 +
                    (((C9090 + C9089) * C92067 * C19667 +
                      (C19406 + C19405) * C92067 * C19668 +
                      (C22882 + C22881) * C92067 * C19669 +
                      ((C554 * C22410 + C92183 * C22872) * C801 +
                       (C554 * C22412 + C92183 * C22873) * C92084) *
                          C92067 * C19670) *
                         C2710 -
                     ((C20518 + C20519) * C92067 * C19670 +
                      (C15847 + C15848) * C92067 * C19669 +
                      (C5458 + C5459) * C92067 * C19668 +
                      (C5453 + C5452) * C92067 * C19667) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92183 * C555) * C801 +
                        (C554 * C117 + C92183 * C561) * C92084) *
                           C4097 +
                       (C584 * C801 + C585 * C92084) * C4098 +
                       (C586 * C801 + C587 * C92084) * C4099) *
                          C92336 +
                      ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                       (C5430 + C5431) * C4099) *
                          C92171) *
                         C2709 -
                     (((C9079 + C9080) * C4099 + (C9081 + C9082) * C4098 +
                       (C9089 + C9090) * C4097) *
                          C92171 +
                      ((C3193 * C92084 + C3192 * C801) * C4099 +
                       (C3191 * C92084 + C3190 * C801) * C4098 +
                       ((C554 * C1397 + C92183 * C1796) * C92084 +
                        (C554 * C1389 + C92183 * C1788) * C801) *
                           C4097) *
                          C92336) *
                         C2710) *
                        C1985 +
                    ((((C9090 + C9089) * C4097 + (C9082 + C9081) * C4098 +
                       (C9080 + C9079) * C4099) *
                          C92336 +
                      (((C554 * C8412 + C92183 * C9072) * C801 +
                        (C554 * C8418 + C92183 * C9075) * C92084) *
                           C4097 +
                       ((C554 * C8413 + C92183 * C9073) * C801 +
                        (C554 * C8419 + C92183 * C9076) * C92084) *
                           C4098 +
                       ((C554 * C8414 + C92183 * C9074) * C801 +
                        (C554 * C8420 + C92183 * C9077) * C92084) *
                           C4099) *
                          C92171) *
                         C2710 -
                     (((C5454 + C5455) * C4099 + (C5456 + C5457) * C4098 +
                       (C5458 + C5459) * C4097) *
                          C92171 +
                      ((C5431 + C5430) * C4099 + (C5429 + C5428) * C4098 +
                       (C5453 + C5452) * C4097) *
                          C92336) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                        C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                           C801 +
                       (C28648 * C117 + C28197 * C561 + C28649 * C1397 +
                        C28198 * C1796 + C28650 * C1406 + C28199 * C1797) *
                           C92084) *
                          C92067 * C92336 +
                      ((C34425 + C34426 + C34427) * C801 +
                       (C34428 + C34429 + C34430) * C92084) *
                          C92067 * C92171) *
                         C2709 -
                     (((C38012 + C38013 + C38014) * C92084 +
                       (C38015 + C38016 + C38017) * C801) *
                          C92067 * C92171 +
                      ((C28650 * C10814 + C28199 * C11431 + C28649 * C1406 +
                        C28198 * C1797 + C28648 * C1397 + C28197 * C1796) *
                           C92084 +
                       (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                        C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                           C801) *
                          C92067 * C92336) *
                         C2710) *
                        C1985 +
                    ((((C38017 + C38016 + C38015) * C801 +
                       (C38014 + C38013 + C38012) * C92084) *
                          C92067 * C92336 +
                      ((C28648 * C8412 + C28197 * C9072 + C28649 * C16095 +
                        C28198 * C16563 + C28650 * C24525 + C28199 * C25133) *
                           C801 +
                       (C28648 * C8418 + C28197 * C9075 + C28649 * C16099 +
                        C28198 * C16565 + C28650 * C24529 + C28199 * C25135) *
                           C92084) *
                          C92067 * C92171) *
                         C2710 -
                     (((C34431 + C34432 + C34433) * C92084 +
                       (C34434 + C34435 + C34436) * C801) *
                          C92067 * C92171 +
                      ((C34430 + C34429 + C34428) * C92084 +
                       (C34427 + C34426 + C34425) * C801) *
                          C92067 * C92336) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
            C5545 * C1986) *
               C92067 * C19667 +
           (C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
               C92067 * C19668 +
           (C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
               C92067 * C19669 +
           (C15843 * C2059 + C15929 * C1985 - C20517 * C2060 - C20573 * C1986) *
               C92067 * C19670) *
              C92084 * C2709 +
          ((C9088 * C2060 -
            ((C554 * C1471 + C92183 * C1854) * C1985 +
             (C554 * C1389 + C92183 * C1788) * C2059) +
            C9194 * C1986) *
               C92067 * C19667 +
           (C19404 * C2060 - (C9194 * C1985 + C9088 * C2059) + C19509 * C1986) *
               C92067 * C19668 +
           (C22880 * C2060 - (C19509 * C1985 + C19404 * C2059) +
            C22952 * C1986) *
               C92067 * C19669 +
           ((C554 * C22410 + C92183 * C22872) * C2060 -
            (C22952 * C1985 + C22880 * C2059) +
            (C554 * C22504 + C92183 * C22948) * C1986) *
               C92067 * C19670) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C4098 +
            (C2546 + C2547 - C2548 - C2560) * C4099) *
               C92336 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C4097 +
            (C7240 + C7241 - C7242 - C7243) * C4098 +
            (C7244 + C7245 - C7246 - C7247) * C4099) *
               C92171) *
              C92084 * C2709 +
          (((C9088 * C2060 -
             ((C554 * C1471 + C92183 * C1854) * C1985 +
              (C554 * C1389 + C92183 * C1788) * C2059) +
             C9194 * C1986) *
                C4097 +
            (C8091 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8199 * C1986) *
                C4098 +
            (C8093 * C2060 - (C3273 * C1985 + C3192 * C2059) + C8200 * C1986) *
                C4099) *
               C92336 +
           (((C554 * C8412 + C92183 * C9072) * C2060 -
             (C9194 * C1985 + C9088 * C2059) +
             (C554 * C8540 + C92183 * C9188) * C1986) *
                C4097 +
            ((C554 * C8413 + C92183 * C9073) * C2060 -
             (C8199 * C1985 + C8091 * C2059) +
             (C554 * C8541 + C92183 * C9189) * C1986) *
                C4098 +
            ((C554 * C8414 + C92183 * C9074) * C2060 -
             (C8200 * C1985 + C8093 * C2059) +
             (C554 * C8542 + C92183 * C9190) * C1986) *
                C4099) *
               C92171) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C2059 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C1985 -
            (C34427 + C34426 + C34425) * C2060 -
            (C34523 + C34524 + C34525) * C1986) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C2059 +
            (C34525 + C34524 + C34523) * C1985 -
            (C34434 + C34435 + C34436) * C2060 -
            (C34528 + C34527 + C34526) * C1986) *
               C92067 * C92171) *
              C92084 * C2709 +
          (((C38017 + C38016 + C38015) * C2060 -
            ((C28650 * C10930 + C28199 * C11508 + C28649 * C1472 +
              C28198 * C1855 + C28648 * C1471 + C28197 * C1854) *
                 C1985 +
             (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
              C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                 C2059) +
            (C38122 + C38123 + C38124) * C1986) *
               C92067 * C92336 +
           ((C28648 * C8412 + C28197 * C9072 + C28649 * C16095 +
             C28198 * C16563 + C28650 * C24525 + C28199 * C25133) *
                C2060 -
            ((C38124 + C38123 + C38122) * C1985 +
             (C38015 + C38016 + C38017) * C2059) +
            (C28648 * C8540 + C28197 * C9188 + C28649 * C16177 +
             C28198 * C16641 + C28650 * C24639 + C28199 * C25211) *
                C1986) *
               C92067 * C92171) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C92067 * C19667 +
                     (C9296 + C9297 - C9298 - C9302) * C92067 * C19668 +
                     (C19610 + C19611 - C19612 - C19616) * C92067 * C19669 +
                     (C23020 + C23021 - C23022 - C23026) * C92067 * C19670) *
                        C1985 +
                    ((C9298 - (C9297 + C9296) + C9302) * C92067 * C19667 +
                     (C19612 - (C19611 + C19610) + C19616) * C92067 * C19668 +
                     (C23022 - (C23021 + C23020) + C23026) * C92067 * C19669 +
                     ((C554 * C22410 + C92183 * C22872) * C2850 -
                      (C20631 * C2709 + C20517 * C2849) +
                      (C554 * C22581 + C92183 * C23018) * C2710) *
                         C92067 * C19670) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C4098 +
                      (C3350 + C3351 - C3352 - C3364) * C4099) *
                         C92336 +
                     ((C9296 + C9297 - C9298 - C9302) * C4097 +
                      (C8301 + C8302 - C8303 - C8313) * C4098 +
                      (C8306 + C8307 - C8308 - C8314) * C4099) *
                         C92171) *
                        C1985 +
                    (((C9298 - (C9297 + C9296) + C9302) * C4097 +
                      (C8303 - (C8302 + C8301) + C8313) * C4098 +
                      (C8308 - (C8307 + C8306) + C8314) * C4099) *
                         C92336 +
                     (((C554 * C8412 + C92183 * C9072) * C2850 -
                       (C5641 * C2709 + C5451 * C2849) +
                       (C554 * C8653 + C92183 * C9292) * C2710) *
                          C4097 +
                      ((C554 * C8413 + C92183 * C9073) * C2850 -
                       (C5640 * C2709 + C5449 * C2849) +
                       (C554 * C8654 + C92183 * C9293) * C2710) *
                          C4098 +
                      ((C554 * C8414 + C92183 * C9074) * C2850 -
                       (C5639 * C2709 + C5447 * C2849) +
                       (C554 * C8655 + C92183 * C9294) * C2710) *
                          C4099) *
                         C92171) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C2849 +
                      (C28648 * C245 + C28197 * C719 + C28649 * C1540 +
                       C28198 * C1909 + C28650 * C1541 + C28199 * C1910) *
                          C2709 -
                      (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                       C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                          C2850 -
                      (C28650 * C11028 + C28199 * C11585 + C28649 * C1541 +
                       C28198 * C1910 + C28648 * C1540 + C28197 * C1909) *
                          C2710) *
                         C92067 * C92336 +
                     ((C34425 + C34426 + C34427) * C2849 +
                      (C34615 + C34616 + C34617) * C2709 -
                      (C38015 + C38016 + C38017) * C2850 -
                      (C38229 + C38230 + C38231) * C2710) *
                         C92067 * C92171) *
                        C1985 +
                    (((C38017 + C38016 + C38015) * C2850 -
                      ((C34617 + C34616 + C34615) * C2709 +
                       (C34427 + C34426 + C34425) * C2849) +
                      (C38231 + C38230 + C38229) * C2710) *
                         C92067 * C92336 +
                     ((C28648 * C8412 + C28197 * C9072 + C28649 * C16095 +
                       C28198 * C16563 + C28650 * C24525 + C28199 * C25133) *
                          C2850 -
                      ((C34618 + C34619 + C34620) * C2709 +
                       (C34434 + C34435 + C34436) * C2849) +
                      (C28648 * C8653 + C28197 * C9292 + C28649 * C16255 +
                       C28198 * C16717 + C28650 * C24741 + C28199 * C25287) *
                          C2710) *
                         C92067 * C92171) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                C4104 * C109 + C4099 * C115) *
                   C104 +
               (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
                C4104 * C119 + C4099 * C127) *
                   C93 -
               (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
                C4102 * C108 + C4097 * C114) *
                   C105 -
               (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
                C4102 * C118 + C4097 * C126) *
                   C94 +
               (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
                C4104 * C111 + C4099 * C121) *
                   C106 +
               (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
                C4104 * C122 + C4099 * C129) *
                   C95) *
                  C92336 +
              ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
                C4104 * C803 + C4099 * C815) *
                   C104 +
               (C4102 * C813 + C4097 * C829 + C4103 * C812 + C4098 * C828 +
                C4104 * C811 + C4099 * C827) *
                   C93 -
               (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
                C4102 * C804 + C4097 * C816) *
                   C105 -
               (C4104 * C810 + C4099 * C826 + C4103 * C811 + C4098 * C827 +
                C4102 * C812 + C4097 * C828) *
                   C94 +
               (C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
                C4104 * C1989 + C4099 * C1990) *
                   C106 +
               (C4102 * C811 + C4097 * C827 + C4103 * C810 + C4098 * C826 +
                C4104 * C1991 + C4099 * C1992) *
                   C95) *
                  C92171) *
             C92183 * C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C801 +
                (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
                 C4104 * C119 + C4099 * C127) *
                    C92084) *
                   C92336 +
               ((C4902 + C4903 + C4904) * C801 +
                (C4905 + C4906 + C4907) * C92084) *
                   C92171) *
                  C92183 * C92116 * C798 -
              (((C4908 + C4909 + C4910) * C92084 +
                (C4911 + C4912 + C4913) * C801) *
                   C92171 +
               ((C4907 + C4906 + C4905) * C92084 +
                (C4904 + C4903 + C4902) * C801) *
                   C92336) *
                  C92183 * C92116 * C799 +
              (((C4913 + C4912 + C4911) * C801 +
                (C4910 + C4909 + C4908) * C92084) *
                   C92336 +
               ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
                 C4104 * C4867 + C4099 * C4870) *
                    C801 +
                (C4102 * C4871 + C4097 * C4874 + C4103 * C4872 + C4098 * C4875 +
                 C4104 * C4873 + C4099 * C4876) *
                    C92084) *
                   C92171) *
                  C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92336 +
           ((C4902 + C4903 + C4904) * C801 + (C4905 + C4906 + C4907) * C92084) *
               C92171) *
              C92183 * C1383 -
          (((C4104 * C3441 + C4099 * C3445 + C4103 * C3440 + C4098 * C3444 +
             C4102 * C3439 + C4097 * C3443) *
                C92084 +
            (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
             C4102 * C3431 + C4097 * C3435) *
                C801) *
               C92171 +
           ((C4104 * C1395 + C4099 * C1411 + C4103 * C1396 + C4098 * C1412 +
             C4102 * C1397 + C4097 * C1413) *
                C92084 +
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C801) *
               C92336) *
              C92183 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C4098 * C1403 +
             C4104 * C1392 + C4099 * C1404) *
                C801 +
            (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C4098 * C1415 +
             C4104 * C1408 + C4099 * C1416) *
                C92084) *
               C92336 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C801 +
            (C4102 * C5725 + C4097 * C5728 + C4103 * C5726 + C4098 * C5729 +
             C4104 * C5727 + C4099 * C5730) *
                C92084) *
               C92171) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C104 +
           (C19671 * C117 + C92067 * C125) * C93 -
           (C19671 * C108 + C92067 * C114) * C105 -
           (C19671 * C118 + C92067 * C126) * C94 +
           (C19671 * C109 + C92067 * C115) * C106 +
           (C19671 * C119 + C92067 * C127) * C95) *
              C19667 +
          ((C19671 * C805 + C92067 * C817) * C104 +
           (C19671 * C813 + C92067 * C829) * C93 -
           (C19671 * C804 + C92067 * C816) * C105 -
           (C19671 * C812 + C92067 * C828) * C94 +
           (C19671 * C803 + C92067 * C815) * C106 +
           (C19671 * C811 + C92067 * C827) * C95) *
              C19668 +
          ((C19671 * C806 + C92067 * C818) * C104 +
           (C19671 * C822 + C92067 * C830) * C93 -
           (C19671 * C807 + C92067 * C819) * C105 -
           (C19671 * C823 + C92067 * C831) * C94 +
           (C19671 * C808 + C92067 * C820) * C106 +
           (C19671 * C824 + C92067 * C832) * C95) *
              C19669 +
          ((C19671 * C4865 + C92067 * C4868) * C104 +
           (C19671 * C4871 + C92067 * C4874) * C93 -
           (C19671 * C4866 + C92067 * C4869) * C105 -
           (C19671 * C4872 + C92067 * C4875) * C94 +
           (C19671 * C4867 + C92067 * C4870) * C106 +
           (C19671 * C4873 + C92067 * C4876) * C95) *
              C19670) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C19667 +
           (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
              C92183 * C92116 * C798 -
          ((C20161 + C20162) * C19670 + (C20160 + C20159) * C19669 +
           (C20158 + C20157) * C19668 + (C20156 + C20155) * C19667) *
              C92183 * C92116 * C799 +
          (C20163 * C19667 + C20164 * C19668 + (C20162 + C20161) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C801 +
            (C19671 * C20128 + C92067 * C20129) * C92084) *
               C19670) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C19667 +
           (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
              C92183 * C1383 -
          (((C19671 * C18736 + C92067 * C18738) * C92084 +
            (C19671 * C18732 + C92067 * C18734) * C801) *
               C19670 +
           ((C19671 * C8418 + C92067 * C8421) * C92084 +
            (C19671 * C8412 + C92067 * C8415) * C801) *
               C19669 +
           ((C19671 * C3439 + C92067 * C3443) * C92084 +
            (C19671 * C3431 + C92067 * C3435) * C801) *
               C19668 +
           ((C19671 * C1397 + C92067 * C1413) * C92084 +
            (C19671 * C1389 + C92067 * C1401) * C801) *
               C19667) *
              C92183 * C1384 +
          (((C19671 * C1390 + C92067 * C1402) * C801 +
            (C19671 * C1406 + C92067 * C1414) * C92084) *
               C19667 +
           ((C19671 * C5719 + C92067 * C5722) * C801 +
            (C19671 * C5725 + C92067 * C5728) * C92084) *
               C19668 +
           ((C19671 * C16095 + C92067 * C16097) * C801 +
            (C19671 * C16099 + C92067 * C16101) * C92084) *
               C19669 +
           ((C19671 * C20682 + C92067 * C20683) * C801 +
            (C19671 * C20684 + C92067 * C20685) * C92084) *
               C19670) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C92336 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C92171) *
              C28197 +
          ((C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C92336 +
           (C22432 * C104 + C22431 * C93 - C25399 * C105 - C25400 * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C92171) *
              C28198 +
          ((C24556 * C104 + C24555 * C93 -
            (C19671 * C1391 + C92067 * C1403) * C105 -
            (C19671 * C1407 + C92067 * C1415) * C94 +
            (C19671 * C1392 + C92067 * C1404) * C106 +
            (C19671 * C1408 + C92067 * C1416) * C95) *
               C92336 +
           (C24554 * C104 + C24553 * C93 -
            (C19671 * C5720 + C92067 * C5723) * C105 -
            (C19671 * C5726 + C92067 * C5729) * C94 +
            (C19671 * C5721 + C92067 * C5724) * C106 +
            (C19671 * C5727 + C92067 * C5730) * C95) *
               C92171) *
              C28199) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92336 +
            (C20155 + C20156) * C92171) *
               C28197 +
           ((C24557 + C24558) * C92336 + C27233 * C92171) * C28198 +
           ((C24564 + C24563) * C92336 + (C24562 + C24561) * C92171) * C28199) *
              C92116 * C798 -
          (((C24559 + C24560) * C92171 + (C24561 + C24562) * C92336) * C28199 +
           (C27234 * C92171 + C27235 * C92336) * C28198 +
           ((C20158 + C20157) * C92171 + (C20156 + C20155) * C92336) * C28197) *
              C92116 * C799 +
          ((C20163 * C92336 + C20164 * C92171) * C28197 +
           (C23767 * C92336 + (C22434 + C22433) * C92171) * C28198 +
           ((C24560 + C24559) * C92336 +
            ((C19671 * C20682 + C92067 * C20683) * C801 +
             (C19671 * C20684 + C92067 * C20685) * C92084) *
                C92171) *
               C28199) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92336 +
            (C20155 + C20156) * C92171) *
               C28197 +
           ((C24557 + C24558) * C92336 + C27233 * C92171) * C28198 +
           C34715 * C28199) *
              C1383 -
          (((C34716 + C34717) * C92171 + (C34718 + C34719) * C92336) * C28199 +
           ((C24561 + C24562) * C92171 + (C24563 + C24564) * C92336) * C28198 +
           (C27235 * C92171 + (C24558 + C24557) * C92336) * C28197) *
              C1384 +
          (C34715 * C28197 +
           ((C34719 + C34718) * C92336 + (C34717 + C34716) * C92171) * C28198 +
           (((C19671 * C29611 + C92067 * C29613) * C801 +
             (C19671 * C29615 + C92067 * C29617) * C92084) *
                C92336 +
            ((C19671 * C34694 + C92067 * C34695) * C801 +
             (C19671 * C34696 + C92067 * C34697) * C92084) *
                C92171) *
               C28199) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C181 +
                (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
                 C4104 * C184 + C4099 * C190) *
                    C92105) *
                   C92336 +
               ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
                 C4104 * C803 + C4099 * C815) *
                    C181 +
                (C4102 * C890 + C4097 * C898 + C4103 * C889 + C4098 * C897 +
                 C4104 * C888 + C4099 * C896) *
                    C92105) *
                   C92171) *
                  C92183 * C93 -
              (((C4104 * C887 + C4099 * C895 + C4103 * C888 + C4098 * C896 +
                 C4102 * C889 + C4097 * C897) *
                    C92105 +
                (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
                 C4102 * C804 + C4097 * C816) *
                    C181) *
                   C92171 +
               ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
                 C4102 * C183 + C4097 * C189) *
                    C92105 +
                (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
                 C4102 * C108 + C4097 * C114) *
                    C181) *
                   C92336) *
                  C92183 * C94 +
              (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
                 C4104 * C111 + C4099 * C121) *
                    C181 +
                (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
                 C4104 * C186 + C4099 * C192) *
                    C92105) *
                   C92336 +
               ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
                 C4104 * C1989 + C4099 * C1990) *
                    C181 +
                (C4102 * C888 + C4097 * C896 + C4103 * C887 + C4098 * C895 +
                 C4104 * C2061 + C4099 * C2062) *
                    C92105) *
                   C92171) *
                  C92183 * C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                C4104 * C109 + C4099 * C115) *
                   C884 +
               (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
                C4104 * C184 + C4099 * C190) *
                   C798 -
               (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
               (C4913 + C4912 + C4911) * C886 +
               (C5009 + C5010 + C5011) * C800) *
                  C92336 +
              ((C4902 + C4903 + C4904) * C884 + (C5008 + C5007 + C5006) * C798 -
               (C4911 + C4912 + C4913) * C885 - (C5011 + C5010 + C5009) * C799 +
               (C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
                C4104 * C4867 + C4099 * C4870) *
                   C886 +
               (C4102 * C4987 + C4097 * C4990 + C4103 * C4988 + C4098 * C4991 +
                C4104 * C4989 + C4099 * C4992) *
                   C800) *
                  C92171) *
             C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92336 +
           ((C4902 + C4903 + C4904) * C181 + (C5008 + C5007 + C5006) * C92105) *
               C92171) *
              C92183 * C92084 * C1383 -
          (((C4104 * C3515 + C4099 * C3519 + C4103 * C3514 + C4098 * C3518 +
             C4102 * C3513 + C4097 * C3517) *
                C92105 +
            (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
             C4102 * C3431 + C4097 * C3435) *
                C181) *
               C92171 +
           ((C4104 * C1469 + C4099 * C1477 + C4103 * C1470 + C4098 * C1478 +
             C4102 * C1471 + C4097 * C1479) *
                C92105 +
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C181) *
               C92336) *
              C92183 * C92084 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C4098 * C1403 +
             C4104 * C1392 + C4099 * C1404) *
                C181 +
            (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C4098 * C1481 +
             C4104 * C1474 + C4099 * C1482) *
                C92105) *
               C92336 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C181 +
            (C4102 * C5805 + C4097 * C5808 + C4103 * C5806 + C4098 * C5809 +
             C4104 * C5807 + C4099 * C5810) *
                C92105) *
               C92171) *
              C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C181 +
            (C19671 * C890 + C92067 * C898) * C92105) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C181 +
            (C19671 * C891 + C92067 * C899) * C92105) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C181 +
            (C19671 * C4987 + C92067 * C4990) * C92105) *
               C19670) *
              C92183 * C93 -
          (((C19671 * C4988 + C92067 * C4991) * C92105 +
            (C19671 * C4866 + C92067 * C4869) * C181) *
               C19670 +
           ((C19671 * C892 + C92067 * C900) * C92105 +
            (C19671 * C807 + C92067 * C819) * C181) *
               C19669 +
           ((C19671 * C889 + C92067 * C897) * C92105 +
            (C19671 * C804 + C92067 * C816) * C181) *
               C19668 +
           ((C19671 * C183 + C92067 * C189) * C92105 +
            (C19671 * C108 + C92067 * C114) * C181) *
               C19667) *
              C92183 * C94 +
          (((C19671 * C109 + C92067 * C115) * C181 +
            (C19671 * C184 + C92067 * C190) * C92105) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C181 +
            (C19671 * C888 + C92067 * C896) * C92105) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C181 +
            (C19671 * C893 + C92067 * C901) * C92105) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C181 +
            (C19671 * C4989 + C92067 * C4992) * C92105) *
               C19670) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C884 +
           (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
           C20225 * C799 + C20149 * C886 + C20226 * C800) *
              C19667 +
          (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
           C20151 * C886 + C20227 * C800) *
              C19668 +
          (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
           C20154 * C886 + C20228 * C800) *
              C19669 +
          (C20151 * C884 + C20227 * C798 - C20154 * C885 - C20228 * C799 +
           (C19671 * C20126 + C92067 * C20127) * C886 +
           (C19671 * C20214 + C92067 * C20215) * C800) *
              C19670) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C19671 * C107 + C92067 * C113) * C181 +
                                (C19671 * C182 + C92067 * C188) * C92105) *
                                   C19667 +
                               (C20147 * C181 + C20225 * C92105) * C19668 +
                               (C20149 * C181 + C20226 * C92105) * C19669 +
                               (C20151 * C181 + C20227 * C92105) * C19670) *
                                  C92183 * C92084 * C1383 -
                              (((C19671 * C18862 + C92067 * C18864) * C92105 +
                                (C19671 * C18732 + C92067 * C18734) * C181) *
                                   C19670 +
                               ((C19671 * C8540 + C92067 * C8543) * C92105 +
                                (C19671 * C8412 + C92067 * C8415) * C181) *
                                   C19669 +
                               ((C19671 * C3513 + C92067 * C3517) * C92105 +
                                (C19671 * C3431 + C92067 * C3435) * C181) *
                                   C19668 +
                               ((C19671 * C1471 + C92067 * C1479) * C92105 +
                                (C19671 * C1389 + C92067 * C1401) * C181) *
                                   C19667) *
                                  C92183 * C92084 * C1384 +
                              (((C19671 * C1390 + C92067 * C1402) * C181 +
                                (C19671 * C1472 + C92067 * C1480) * C92105) *
                                   C19667 +
                               ((C19671 * C5719 + C92067 * C5722) * C181 +
                                (C19671 * C5805 + C92067 * C5808) * C92105) *
                                   C19668 +
                               ((C19671 * C16095 + C92067 * C16097) * C181 +
                                (C19671 * C16177 + C92067 * C16179) * C92105) *
                                   C19669 +
                               ((C19671 * C20682 + C92067 * C20683) * C181 +
                                (C19671 * C20736 + C92067 * C20737) * C92105) *
                                   C19670) *
                                  C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C92336 +
            (C20147 * C181 + C20225 * C92105) * C92171) *
               C28197 +
           ((C24643 + C24663) * C92336 + (C24646 + C24647) * C92171) * C28198 +
           ((C24658 + C24666) * C92336 + (C24655 + C24665) * C92171) * C28199) *
              C93 -
          ((((C19671 * C5806 + C92067 * C5809) * C92105 +
             (C19671 * C5720 + C92067 * C5723) * C181) *
                C92171 +
            ((C19671 * C1473 + C92067 * C1481) * C92105 +
             (C19671 * C1391 + C92067 * C1403) * C181) *
                C92336) *
               C28199 +
           ((C26439 + C26440) * C92171 + (C26445 + C26443) * C92336) * C28198 +
           ((C21267 * C92105 + C21183 * C181) * C92171 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C92336) *
               C28197) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C92336 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C92171) *
               C28197 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C92336 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C92171) *
               C28198 +
           (((C19671 * C1392 + C92067 * C1404) * C181 +
             (C19671 * C1474 + C92067 * C1482) * C92105) *
                C92336 +
            ((C19671 * C5721 + C92067 * C5724) * C181 +
             (C19671 * C5807 + C92067 * C5810) * C92105) *
                C92171) *
               C28199) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C92336 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C92171) *
              C28197 +
          ((C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
            C22430 * C886 + C22514 * C800) *
               C92336 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C92171) *
              C28198 +
          ((C24556 * C884 + C24662 * C798 - C24554 * C885 - C24661 * C799 +
            C24552 * C886 + C24660 * C800) *
               C92336 +
           (C24554 * C884 + C24661 * C798 - C24552 * C885 - C24660 * C799 +
            (C19671 * C20682 + C92067 * C20683) * C886 +
            (C19671 * C20736 + C92067 * C20737) * C800) *
               C92171) *
              C28199) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C92336 +
            (C20147 * C181 + C20225 * C92105) * C92171) *
               C28197 +
           ((C24643 + C24663) * C92336 + (C24646 + C24647) * C92171) * C28198 +
           C34808 * C28199) *
              C92084 * C1383 -
          (((C34809 + C34800) * C92171 + (C34810 + C34803) * C92336) * C28199 +
           ((C24665 + C24655) * C92171 + (C24666 + C24658) * C92336) * C28198 +
           ((C24647 + C24646) * C92171 + (C24663 + C24643) * C92336) * C28197) *
              C92084 * C1384 +
          (C34808 * C28197 +
           ((C34803 + C34810) * C92336 + (C34800 + C34809) * C92171) * C28198 +
           (((C19671 * C29611 + C92067 * C29613) * C181 +
             (C19671 * C29735 + C92067 * C29737) * C92105) *
                C92336 +
            ((C19671 * C34694 + C92067 * C34695) * C181 +
             (C19671 * C34793 + C92067 * C34794) * C92105) *
                C92171) *
               C28199) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C244 +
                (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
                 C4104 * C247 + C4099 * C253) *
                    C92116) *
                   C92336 +
               ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
                 C4104 * C803 + C4099 * C815) *
                    C244 +
                (C4102 * C956 + C4097 * C964 + C4103 * C955 + C4098 * C963 +
                 C4104 * C954 + C4099 * C962) *
                    C92116) *
                   C92171) *
                  C92183 * C92105 * C93 -
              (((C4104 * C953 + C4099 * C961 + C4103 * C954 + C4098 * C962 +
                 C4102 * C955 + C4097 * C963) *
                    C92116 +
                (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
                 C4102 * C804 + C4097 * C816) *
                    C244) *
                   C92171 +
               ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
                 C4102 * C246 + C4097 * C252) *
                    C92116 +
                (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
                 C4102 * C108 + C4097 * C114) *
                    C244) *
                   C92336) *
                  C92183 * C92105 * C94 +
              (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
                 C4104 * C111 + C4099 * C121) *
                    C244 +
                (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
                 C4104 * C249 + C4099 * C255) *
                    C92116) *
                   C92336 +
               ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
                 C4104 * C1989 + C4099 * C1990) *
                    C244 +
                (C4102 * C954 + C4097 * C962 + C4103 * C953 + C4098 * C961 +
                 C4104 * C2129 + C4099 * C2130) *
                    C92116) *
                   C92171) *
                  C92183 * C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C244 +
                (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
                 C4104 * C247 + C4099 * C253) *
                    C92116) *
                   C92336 +
               ((C4902 + C4903 + C4904) * C244 +
                (C5104 + C5105 + C5106) * C92116) *
                   C92171) *
                  C92183 * C798 -
              (((C5107 + C5108 + C5109) * C92116 +
                (C4911 + C4912 + C4913) * C244) *
                   C92171 +
               ((C5106 + C5105 + C5104) * C92116 +
                (C4904 + C4903 + C4902) * C244) *
                   C92336) *
                  C92183 * C799 +
              (((C4913 + C4912 + C4911) * C244 +
                (C5109 + C5108 + C5107) * C92116) *
                   C92336 +
               ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
                 C4104 * C4867 + C4099 * C4870) *
                    C244 +
                (C4102 * C5085 + C4097 * C5088 + C4103 * C5086 + C4098 * C5089 +
                 C4104 * C5087 + C4099 * C5090) *
                    C92116) *
                   C92171) *
                  C92183 * C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
            C4104 * C247 + C4099 * C253) *
               C1383 -
           (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
            C4102 * C1389 + C4097 * C1401) *
               C1535 -
           (C4104 * C1538 + C4099 * C1546 + C4103 * C1539 + C4098 * C1547 +
            C4102 * C1540 + C4097 * C1548) *
               C1384 +
           (C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C4098 * C1403 +
            C4104 * C1392 + C4099 * C1404) *
               C1536 +
           (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C4098 * C1550 +
            C4104 * C1543 + C4099 * C1551) *
               C1385) *
              C92336 +
          ((C4902 + C4903 + C4904) * C1534 + (C5104 + C5105 + C5106) * C1383 -
           (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
            C4102 * C3431 + C4097 * C3435) *
               C1535 -
           (C4104 * C3589 + C4099 * C3593 + C4103 * C3588 + C4098 * C3592 +
            C4102 * C3587 + C4097 * C3591) *
               C1384 +
           (C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
            C4104 * C5721 + C4099 * C5724) *
               C1536 +
           (C4102 * C5885 + C4097 * C5888 + C4103 * C5886 + C4098 * C5889 +
            C4104 * C5887 + C4099 * C5890) *
               C1385) *
              C92171) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C244 +
            (C19671 * C956 + C92067 * C964) * C92116) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C244 +
            (C19671 * C957 + C92067 * C965) * C92116) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C244 +
            (C19671 * C5085 + C92067 * C5088) * C92116) *
               C19670) *
              C92183 * C92105 * C93 -
          (((C19671 * C5086 + C92067 * C5089) * C92116 +
            (C19671 * C4866 + C92067 * C4869) * C244) *
               C19670 +
           ((C19671 * C958 + C92067 * C966) * C92116 +
            (C19671 * C807 + C92067 * C819) * C244) *
               C19669 +
           ((C19671 * C955 + C92067 * C963) * C92116 +
            (C19671 * C804 + C92067 * C816) * C244) *
               C19668 +
           ((C19671 * C246 + C92067 * C252) * C92116 +
            (C19671 * C108 + C92067 * C114) * C244) *
               C19667) *
              C92183 * C92105 * C94 +
          (((C19671 * C109 + C92067 * C115) * C244 +
            (C19671 * C247 + C92067 * C253) * C92116) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C244 +
            (C19671 * C954 + C92067 * C962) * C92116) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C244 +
            (C19671 * C959 + C92067 * C967) * C92116) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C244 +
            (C19671 * C5087 + C92067 * C5090) * C92116) *
               C19670) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           (C20281 + C20297) * C19668 + C20301 * C19669 + C20302 * C19670) *
              C92183 * C798 -
          ((C20300 + C20292) * C19670 + (C20299 + C20287) * C19669 +
           (C20298 + C20284) * C19668 + (C20297 + C20281) * C19667) *
              C92183 * C799 +
          (C20301 * C19667 + C20302 * C19668 + (C20292 + C20300) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C244 +
            (C19671 * C20278 + C92067 * C20279) * C92116) *
               C19670) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C1534 +
           (C19671 * C245 + C92067 * C251) * C1383 -
           (C19671 * C1389 + C92067 * C1401) * C1535 -
           (C19671 * C1540 + C92067 * C1548) * C1384 +
           (C19671 * C1390 + C92067 * C1402) * C1536 +
           (C19671 * C1541 + C92067 * C1549) * C1385) *
              C19667 +
          (C20147 * C1534 + C20293 * C1383 -
           (C19671 * C3431 + C92067 * C3435) * C1535 -
           (C19671 * C3587 + C92067 * C3591) * C1384 +
           (C19671 * C5719 + C92067 * C5722) * C1536 +
           (C19671 * C5885 + C92067 * C5888) * C1385) *
              C19668 +
          (C20149 * C1534 + C20294 * C1383 -
           (C19671 * C8412 + C92067 * C8415) * C1535 -
           (C19671 * C8653 + C92067 * C8656) * C1384 +
           (C19671 * C16095 + C92067 * C16097) * C1536 +
           (C19671 * C16255 + C92067 * C16257) * C1385) *
              C19669 +
          (C20151 * C1534 + C20295 * C1383 -
           (C19671 * C18732 + C92067 * C18734) * C1535 -
           (C19671 * C18976 + C92067 * C18978) * C1384 +
           (C19671 * C20682 + C92067 * C20683) * C1536 +
           (C19671 * C20788 + C92067 * C20789) * C1385) *
              C19670) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19671 * C107 + C92067 * C113) * C244 +
                                 (C19671 * C245 + C92067 * C251) * C92116) *
                                    C92336 +
                                (C20281 + C20297) * C92171) *
                                   C28197 +
                               ((C24549 * C244 + C24753 * C92116) * C92336 +
                                (C23916 + C23917) * C92171) *
                                   C28198 +
                               ((C24556 * C244 + C24754 * C92116) * C92336 +
                                (C24554 * C244 + C24755 * C92116) * C92171) *
                                   C28199) *
                                  C92105 * C93 -
                              ((((C19671 * C5886 + C92067 * C5889) * C92116 +
                                 (C19671 * C5720 + C92067 * C5723) * C244) *
                                    C92171 +
                                ((C19671 * C1542 + C92067 * C1550) * C92116 +
                                 (C19671 * C1391 + C92067 * C1403) * C244) *
                                    C92336) *
                                   C28199 +
                               ((C25617 + C25609) * C92171 +
                                (C26546 * C92116 + C26335 * C244) * C92336) *
                                   C28198 +
                               ((C21348 + C21336) * C92171 +
                                ((C19671 * C246 + C92067 * C252) * C92116 +
                                 (C19671 * C108 + C92067 * C114) * C244) *
                                    C92336) *
                                   C28197) *
                                  C92105 * C94 +
                              ((((C19671 * C109 + C92067 * C115) * C244 +
                                 (C19671 * C247 + C92067 * C253) * C92116) *
                                    C92336 +
                                ((C19671 * C803 + C92067 * C815) * C244 +
                                 (C19671 * C954 + C92067 * C962) * C92116) *
                                    C92171) *
                                   C28197 +
                               (((C19671 * C1387 + C92067 * C1399) * C244 +
                                 (C19671 * C1538 + C92067 * C1546) * C92116) *
                                    C92336 +
                                ((C19671 * C3433 + C92067 * C3437) * C244 +
                                 (C19671 * C3589 + C92067 * C3593) * C92116) *
                                    C92171) *
                                   C28198 +
                               (((C19671 * C1392 + C92067 * C1404) * C244 +
                                 (C19671 * C1543 + C92067 * C1551) * C92116) *
                                    C92336 +
                                ((C19671 * C5721 + C92067 * C5724) * C244 +
                                 (C19671 * C5887 + C92067 * C5890) * C92116) *
                                    C92171) *
                                   C28199) *
                                  C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92336 +
            (C20281 + C20297) * C92171) *
               C28197 +
           ((C24549 * C244 + C24753 * C92116) * C92336 +
            (C23916 + C23917) * C92171) *
               C28198 +
           ((C24556 * C244 + C24754 * C92116) * C92336 +
            (C34101 + C34102) * C92171) *
               C28199) *
              C798 -
          (((C34103 + C34104) * C92171 + (C34102 + C34101) * C92336) * C28199 +
           ((C23919 + C23918) * C92171 + (C23917 + C23916) * C92336) * C28198 +
           ((C20298 + C20284) * C92171 + (C20297 + C20281) * C92336) * C28197) *
              C799 +
          ((C20301 * C92336 + C20302 * C92171) * C28197 +
           (C23922 * C92336 + (C23921 + C23920) * C92171) * C28198 +
           ((C34104 + C34103) * C92336 +
            ((C19671 * C20682 + C92067 * C20683) * C244 +
             (C19671 * C20788 + C92067 * C20789) * C92116) *
                C92171) *
               C28199) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1534 +
            (C19671 * C245 + C92067 * C251) * C1383 - C24549 * C1535 -
            C24753 * C1384 + C24556 * C1536 + C24754 * C1385) *
               C92336 +
           (C20147 * C1534 + C20293 * C1383 - C22432 * C1535 - C22599 * C1384 +
            C24554 * C1536 + C24755 * C1385) *
               C92171) *
              C28197 +
          ((C24549 * C1534 + C24753 * C1383 - C24556 * C1535 - C24754 * C1384 +
            C34714 * C1536 + C34891 * C1385) *
               C92336 +
           (C22432 * C1534 + C22599 * C1383 - C24554 * C1535 - C24755 * C1384 +
            C34712 * C1536 + C34892 * C1385) *
               C92171) *
              C28198 +
          ((C24556 * C1534 + C24754 * C1383 - C34714 * C1535 - C34891 * C1384 +
            (C19671 * C29611 + C92067 * C29613) * C1536 +
            (C19671 * C29836 + C92067 * C29838) * C1385) *
               C92336 +
           (C24554 * C1534 + C24755 * C1383 - C34712 * C1535 - C34892 * C1384 +
            (C19671 * C34694 + C92067 * C34695) * C1536 +
            (C19671 * C34884 + C92067 * C34885) * C1385) *
               C92171) *
              C28199) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                   C104 +
               (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                   C93 -
               (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
               C4367 * C95) *
                  C92183 * C4097 +
              ((C4355 + C4354) * C104 + (C4357 + C4356) * C93 -
               (C4359 + C4358) * C105 - (C4361 + C4360) * C94 +
               (C4362 + C4363) * C106 + (C4364 + C4365) * C95) *
                  C92183 * C4098 +
              (C4366 * C104 + C4367 * C93 - (C4363 + C4362) * C105 -
               (C4365 + C4364) * C94 +
               (C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                   C106 +
               (C4327 * C122 + C92336 * C318 + C4328 * C1991 + C92171 * C2198) *
                   C95) *
                  C92183 * C4099) *
             C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                    C801 +
                (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                    C92084) *
                   C92183 * C4097 +
               ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
                   C4098 +
               (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
                  C92116 * C798 -
              (((C4328 * C824 + C92171 * C1033 + C4327 * C811 +
                 C92336 * C1028) *
                    C92084 +
                (C4328 * C808 + C92171 * C1025 + C4327 * C803 +
                 C92336 * C1020) *
                    C801) *
                   C92183 * C4099 +
               ((C4328 * C823 + C92171 * C1032 + C4327 * C812 +
                 C92336 * C1029) *
                    C92084 +
                (C4328 * C807 + C92171 * C1024 + C4327 * C804 +
                 C92336 * C1021) *
                    C801) *
                   C92183 * C4098 +
               ((C4328 * C822 + C92171 * C1031 + C4327 * C813 +
                 C92336 * C1030) *
                    C92084 +
                (C4328 * C806 + C92171 * C1023 + C4327 * C805 +
                 C92336 * C1022) *
                    C801) *
                   C92183 * C4097) *
                  C92116 * C799 +
              (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 +
                 C92171 * C5183) *
                    C801 +
                (C4327 * C822 + C92336 * C1031 + C4328 * C4871 +
                 C92171 * C5186) *
                    C92084) *
                   C92183 * C4097 +
               ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 +
                 C92171 * C5184) *
                    C801 +
                (C4327 * C823 + C92336 * C1032 + C4328 * C4872 +
                 C92171 * C5187) *
                    C92084) *
                   C92183 * C4098 +
               ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 +
                 C92171 * C5185) *
                    C801 +
                (C4327 * C824 + C92336 * C1033 + C4328 * C4873 +
                 C92171 * C5188) *
                    C92084) *
                   C92183 * C4099) *
                  C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C4097 +
           ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
               C4098 +
           (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
              C1383 -
          (((C4328 * C3441 + C92171 * C3667 + C4327 * C1395 + C92336 * C1612) *
                C92084 +
            (C4328 * C3433 + C92171 * C3663 + C4327 * C1387 + C92336 * C1604) *
                C801) *
               C92183 * C4099 +
           ((C4328 * C3440 + C92171 * C3666 + C4327 * C1396 + C92336 * C1613) *
                C92084 +
            (C4328 * C3432 + C92171 * C3662 + C4327 * C1388 + C92336 * C1605) *
                C801) *
               C92183 * C4098 +
           ((C4328 * C3439 + C92171 * C3665 + C4327 * C1397 + C92336 * C1614) *
                C92084 +
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C801) *
               C92183 * C4097) *
              C1384 +
          (((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C801 +
            (C4327 * C1406 + C92336 * C1615 + C4328 * C5725 + C92171 * C5968) *
                C92084) *
               C92183 * C4097 +
           ((C4327 * C1391 + C92336 * C1608 + C4328 * C5720 + C92171 * C5966) *
                C801 +
            (C4327 * C1407 + C92336 * C1616 + C4328 * C5726 + C92171 * C5969) *
                C92084) *
               C92183 * C4098 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C801 +
            (C4327 * C1408 + C92336 * C1617 + C4328 * C5727 + C92171 * C5970) *
                C92084) *
               C92183 * C4099) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C104 +
          (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
           C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
              C93 -
          (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
           C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
              C105 -
          (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
           C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
              C94 +
          (C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
           C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
              C106 +
          (C19822 * C119 + C19667 * C316 + C19823 * C811 + C19668 * C1028 +
           C19824 * C824 + C19669 * C1033 + C19825 * C4873 + C19670 * C5188) *
              C95) *
         C92183 * C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C801 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C92084) *
              C92183 * C92067 * C92116 * C798 -
          ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
            C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
            C19667 * C1030) *
               C92084 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C801) *
              C92183 * C92067 * C92116 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C801 +
           (C19822 * C822 + C19667 * C1031 + C19823 * C4871 + C19668 * C5186 +
            C19824 * C15277 + C19669 * C15595 + C19825 * C20128 +
            C19670 * C20353) *
               C92084) *
              C92183 * C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C801 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C92084) *
              C92183 * C92067 * C1383 -
          ((C19825 * C18736 + C19670 * C19092 + C19824 * C8418 +
            C19669 * C8769 + C19823 * C3439 + C19668 * C3665 + C19822 * C1397 +
            C19667 * C1614) *
               C92084 +
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C801) *
              C92183 * C92067 * C1384 +
          ((C19822 * C1390 + C19667 * C1607 + C19823 * C5719 + C19668 * C5965 +
            C19824 * C16095 + C19669 * C16333 + C19825 * C20682 +
            C19670 * C20840) *
               C801 +
           (C19822 * C1406 + C19667 * C1615 + C19823 * C5725 + C19668 * C5968 +
            C19824 * C16099 + C19669 * C16335 + C19825 * C20684 +
            C19670 * C20841) *
               C92084) *
              C92183 * C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C104 +
           (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
               C93 -
           (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
           C4367 * C95) *
              C28197 +
          ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
               C104 +
           (C4327 * C1397 + C92336 * C1614 + C4328 * C3439 + C92171 * C3665) *
               C93 -
           (C7758 + C7757) * C105 - (C7760 + C7759) * C94 +
           (C7761 + C7762) * C106 + (C7763 + C7764) * C95) *
              C28198 +
          ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
               C104 +
           (C4327 * C1406 + C92336 * C1615 + C4328 * C5725 + C92171 * C5968) *
               C93 -
           (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
               C105 -
           (C4328 * C5726 + C92171 * C5969 + C4327 * C1407 + C92336 * C1616) *
               C94 +
           (C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
               C106 +
           (C4327 * C1408 + C92336 * C1617 + C4328 * C5727 + C92171 * C5970) *
               C95) *
              C28199) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C801 +
            (C4327 * C1397 + C92336 * C1614 + C4328 * C3439 + C92171 * C3665) *
                C92084) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C801 +
            (C4327 * C1406 + C92336 * C1615 + C4328 * C5725 + C92171 * C5968) *
                C92084) *
               C28199) *
              C92067 * C92116 * C798 -
          (((C4328 * C16099 + C92171 * C16335 + C4327 * C5725 +
             C92336 * C5968) *
                C92084 +
            (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
             C92336 * C5965) *
                C801) *
               C28199 +
           ((C4328 * C8418 + C92171 * C8769 + C4327 * C3439 + C92336 * C3665) *
                C92084 +
            (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                C801) *
               C28198 +
           ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                C92084 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C801) *
               C28197) *
              C92067 * C92116 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C801 +
            (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                C92084) *
               C28197 +
           ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
             C92171 * C19090) *
                C801 +
            (C4327 * C8418 + C92336 * C8769 + C4328 * C18736 +
             C92171 * C19092) *
                C92084) *
               C28198 +
           ((C4327 * C16095 + C92336 * C16333 + C4328 * C20682 +
             C92171 * C20840) *
                C801 +
            (C4327 * C16099 + C92336 * C16335 + C4328 * C20684 +
             C92171 * C20841) *
                C92084) *
               C28199) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C28197 +
           ((C34993 + C34994) * C801 + (C34995 + C34996) * C92084) * C28198 +
           C35009 * C28199) *
              C92067 * C1383 -
          (((C35001 + C35002) * C92084 + (C35003 + C35004) * C801) * C28199 +
           ((C35000 + C34999) * C92084 + (C34998 + C34997) * C801) * C28198 +
           ((C34996 + C34995) * C92084 + (C34994 + C34993) * C801) * C28197) *
              C92067 * C1384 +
          (C35009 * C28197 +
           ((C35004 + C35003) * C801 + (C35002 + C35001) * C92084) * C28198 +
           ((C4327 * C29611 + C92336 * C29933 + C4328 * C34694 +
             C92171 * C34966) *
                C801 +
            (C4327 * C29615 + C92336 * C29935 + C4328 * C34696 +
             C92171 * C34967) *
                C92084) *
               C28199) *
              C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                    C181 +
                (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                    C92105) *
                   C92183 * C4097 +
               ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
                   C4098 +
               C4464 * C4099) *
                  C93 -
              (((C4459 + C4460) * C92105 + (C4363 + C4362) * C181) * C92183 *
                   C4099 +
               ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C92183 *
                   C4098 +
               ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C92183 *
                   C4097) *
                  C94 +
              (C4464 * C4097 +
               ((C4362 + C4363) * C181 + (C4460 + C4459) * C92105) * C92183 *
                   C4098 +
               ((C4327 * C111 + C92336 * C312 + C4328 * C1989 +
                 C92171 * C2197) *
                    C181 +
                (C4327 * C186 + C92336 * C398 + C4328 * C2061 +
                 C92171 * C2283) *
                    C92105) *
                   C92183 * C4099) *
                  C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                   C884 +
               (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                   C798 -
               (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                   C885 -
               (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                   C799 +
               (C4327 * C806 + C92336 * C1023 + C4328 * C4865 +
                C92171 * C5183) *
                   C886 +
               (C4327 * C891 + C92336 * C1086 + C4328 * C4987 +
                C92171 * C5263) *
                   C800) *
                  C92183 * C4097 +
              ((C4355 + C4354) * C884 + (C4455 + C4456) * C798 -
               (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                   C885 -
               (C4328 * C892 + C92171 * C1088 + C4327 * C889 + C92336 * C1087) *
                   C799 +
               (C4327 * C807 + C92336 * C1024 + C4328 * C4866 +
                C92171 * C5184) *
                   C886 +
               (C4327 * C892 + C92336 * C1088 + C4328 * C4988 +
                C92171 * C5264) *
                   C800) *
                  C92183 * C4098 +
              (C4366 * C884 + C4461 * C798 -
               (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                   C885 -
               (C4328 * C893 + C92171 * C1090 + C4327 * C888 + C92336 * C1089) *
                   C799 +
               (C4327 * C808 + C92336 * C1025 + C4328 * C4867 +
                C92171 * C5185) *
                   C886 +
               (C4327 * C893 + C92336 * C1090 + C4328 * C4989 +
                C92171 * C5265) *
                   C800) *
                  C92183 * C4099) *
             C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C4097 +
           ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
               C4098 +
           C4464 * C4099) *
              C92084 * C1383 -
          (((C4328 * C3515 + C92171 * C3737 + C4327 * C1469 + C92336 * C1670) *
                C92105 +
            (C4328 * C3433 + C92171 * C3663 + C4327 * C1387 + C92336 * C1604) *
                C181) *
               C92183 * C4099 +
           ((C4328 * C3514 + C92171 * C3736 + C4327 * C1470 + C92336 * C1671) *
                C92105 +
            (C4328 * C3432 + C92171 * C3662 + C4327 * C1388 + C92336 * C1605) *
                C181) *
               C92183 * C4098 +
           ((C4328 * C3513 + C92171 * C3735 + C4327 * C1471 + C92336 * C1672) *
                C92105 +
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C181) *
               C92183 * C4097) *
              C92084 * C1384 +
          (((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C181 +
            (C4327 * C1472 + C92336 * C1673 + C4328 * C5805 + C92171 * C6045) *
                C92105) *
               C92183 * C4097 +
           ((C4327 * C1391 + C92336 * C1608 + C4328 * C5720 + C92171 * C5966) *
                C181 +
            (C4327 * C1473 + C92336 * C1674 + C4328 * C5806 + C92171 * C6046) *
                C92105) *
               C92183 * C4098 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C181 +
            (C4327 * C1474 + C92336 * C1675 + C4328 * C5807 + C92171 * C6047) *
                C92105) *
               C92183 * C4099) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C181 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C92105) *
              C92183 * C92067 * C93 -
          ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
            C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
               C92105 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C181) *
              C92183 * C92067 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C181 +
           (C19822 * C184 + C19667 * C396 + C19823 * C888 + C19668 * C1089 +
            C19824 * C893 + C19669 * C1090 + C19825 * C4989 + C19670 * C5265) *
               C92105) *
              C92183 * C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C884 +
          (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
           C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
              C798 -
          (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 + C19669 * C5183 +
           C19823 * C806 + C19668 * C1023 + C19822 * C805 + C19667 * C1022) *
              C885 -
          (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 + C19669 * C5263 +
           C19823 * C891 + C19668 * C1086 + C19822 * C890 + C19667 * C1085) *
              C799 +
          (C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
           C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
           C19670 * C20352) *
              C886 +
          (C19822 * C891 + C19667 * C1086 + C19823 * C4987 + C19668 * C5263 +
           C19824 * C15396 + C19669 * C15671 + C19825 * C20214 +
           C19670 * C20404) *
              C800) *
         C92183 * C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C181 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C92105) *
              C92183 * C92067 * C92084 * C1383 -
          ((C19825 * C18862 + C19670 * C19192 + C19824 * C8540 +
            C19669 * C8870 + C19823 * C3513 + C19668 * C3735 + C19822 * C1471 +
            C19667 * C1672) *
               C92105 +
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C181) *
              C92183 * C92067 * C92084 * C1384 +
          ((C19822 * C1390 + C19667 * C1607 + C19823 * C5719 + C19668 * C5965 +
            C19824 * C16095 + C19669 * C16333 + C19825 * C20682 +
            C19670 * C20840) *
               C181 +
           (C19822 * C1472 + C19667 * C1673 + C19823 * C5805 + C19668 * C6045 +
            C19824 * C16177 + C19669 * C16411 + C19825 * C20736 +
            C19670 * C20892) *
               C92105) *
              C92183 * C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C181 +
            (C4327 * C1471 + C92336 * C1672 + C4328 * C3513 + C92171 * C3735) *
                C92105) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C181 +
            (C4327 * C1472 + C92336 * C1673 + C4328 * C5805 + C92171 * C6045) *
                C92105) *
               C28199) *
              C92067 * C93 -
          (((C4328 * C5806 + C92171 * C6046 + C4327 * C1473 + C92336 * C1674) *
                C92105 +
            (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                C181) *
               C28199 +
           ((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C28198 +
           ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C28197) *
              C92067 * C94 +
          (C4463 * C28197 +
           ((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C28198 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C181 +
            (C4327 * C1474 + C92336 * C1675 + C4328 * C5807 + C92171 * C6047) *
                C92105) *
               C28199) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C884 +
           (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
               C798 -
           (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
               C885 -
           (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
               C799 +
           (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
               C886 +
           (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
               C800) *
              C28197 +
          ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
               C884 +
           (C4327 * C1471 + C92336 * C1672 + C4328 * C3513 + C92171 * C3735) *
               C798 -
           (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
               C885 -
           (C4328 * C8540 + C92171 * C8870 + C4327 * C3513 + C92336 * C3735) *
               C799 +
           (C4327 * C8412 + C92336 * C8766 + C4328 * C18732 + C92171 * C19090) *
               C886 +
           (C4327 * C8540 + C92336 * C8870 + C4328 * C18862 + C92171 * C19192) *
               C800) *
              C28198 +
          ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
               C884 +
           (C4327 * C1472 + C92336 * C1673 + C4328 * C5805 + C92171 * C6045) *
               C798 -
           (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 + C92336 * C5965) *
               C885 -
           (C4328 * C16177 + C92171 * C16411 + C4327 * C5805 + C92336 * C6045) *
               C799 +
           (C4327 * C16095 + C92336 * C16333 + C4328 * C20682 +
            C92171 * C20840) *
               C886 +
           (C4327 * C16177 + C92336 * C16411 + C4328 * C20736 +
            C92171 * C20892) *
               C800) *
              C28199) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C28197 +
           ((C34993 + C34994) * C181 + (C35098 + C35099) * C92105) * C28198 +
           C35106 * C28199) *
              C92067 * C92084 * C1383 -
          (((C35102 + C35103) * C92105 + (C35003 + C35004) * C181) * C28199 +
           ((C35101 + C35100) * C92105 + (C34998 + C34997) * C181) * C28198 +
           ((C35099 + C35098) * C92105 + (C34994 + C34993) * C181) * C28197) *
              C92067 * C92084 * C1384 +
          (C35106 * C28197 +
           ((C35004 + C35003) * C181 + (C35103 + C35102) * C92105) * C28198 +
           ((C4327 * C29611 + C92336 * C29933 + C4328 * C34694 +
             C92171 * C34966) *
                C181 +
            (C4327 * C29735 + C92336 * C30029 + C4328 * C34793 +
             C92171 * C35083) *
                C92105) *
               C28199) *
              C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                    C244 +
                (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                    C92116) *
                   C92183 * C4097 +
               ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
                   C4098 +
               C4561 * C4099) *
                  C92105 * C93 -
              (((C4556 + C4557) * C92116 + (C4363 + C4362) * C244) * C92183 *
                   C4099 +
               ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C92183 *
                   C4098 +
               ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C92183 *
                   C4097) *
                  C92105 * C94 +
              (C4561 * C4097 +
               ((C4362 + C4363) * C244 + (C4557 + C4556) * C92116) * C92183 *
                   C4098 +
               ((C4327 * C111 + C92336 * C312 + C4328 * C1989 +
                 C92171 * C2197) *
                    C244 +
                (C4327 * C249 + C92336 * C478 + C4328 * C2129 +
                 C92171 * C2371) *
                    C92116) *
                   C92183 * C4099) *
                  C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                    C244 +
                (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                    C92116) *
                   C92183 * C4097 +
               ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
                   C4098 +
               C4561 * C4099) *
                  C798 -
              (((C4328 * C959 + C92171 * C1149 + C4327 * C954 +
                 C92336 * C1144) *
                    C92116 +
                (C4328 * C808 + C92171 * C1025 + C4327 * C803 +
                 C92336 * C1020) *
                    C244) *
                   C92183 * C4099 +
               ((C4328 * C958 + C92171 * C1148 + C4327 * C955 +
                 C92336 * C1145) *
                    C92116 +
                (C4328 * C807 + C92171 * C1024 + C4327 * C804 +
                 C92336 * C1021) *
                    C244) *
                   C92183 * C4098 +
               ((C4328 * C957 + C92171 * C1147 + C4327 * C956 +
                 C92336 * C1146) *
                    C92116 +
                (C4328 * C806 + C92171 * C1023 + C4327 * C805 +
                 C92336 * C1022) *
                    C244) *
                   C92183 * C4097) *
                  C799 +
              (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 +
                 C92171 * C5183) *
                    C244 +
                (C4327 * C957 + C92336 * C1147 + C4328 * C5085 +
                 C92171 * C5340) *
                    C92116) *
                   C92183 * C4097 +
               ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 +
                 C92171 * C5184) *
                    C244 +
                (C4327 * C958 + C92336 * C1148 + C4328 * C5086 +
                 C92171 * C5341) *
                    C92116) *
                   C92183 * C4098 +
               ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 +
                 C92171 * C5185) *
                    C244 +
                (C4327 * C959 + C92336 * C1149 + C4328 * C5087 +
                 C92171 * C5342) *
                    C92116) *
                   C92183 * C4099) *
                  C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C1534 +
           (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
               C1383 -
           (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
               C1535 -
           (C4328 * C3587 + C92171 * C3805 + C4327 * C1540 + C92336 * C1727) *
               C1384 +
           (C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
               C1536 +
           (C4327 * C1541 + C92336 * C1728 + C4328 * C5885 + C92171 * C6122) *
               C1385) *
              C92183 * C4097 +
          ((C4355 + C4354) * C1534 + (C4552 + C4553) * C1383 -
           (C4328 * C3432 + C92171 * C3662 + C4327 * C1388 + C92336 * C1605) *
               C1535 -
           (C4328 * C3588 + C92171 * C3806 + C4327 * C1539 + C92336 * C1729) *
               C1384 +
           (C4327 * C1391 + C92336 * C1608 + C4328 * C5720 + C92171 * C5966) *
               C1536 +
           (C4327 * C1542 + C92336 * C1730 + C4328 * C5886 + C92171 * C6123) *
               C1385) *
              C92183 * C4098 +
          (C4366 * C1534 + C4558 * C1383 -
           (C4328 * C3433 + C92171 * C3663 + C4327 * C1387 + C92336 * C1604) *
               C1535 -
           (C4328 * C3589 + C92171 * C3807 + C4327 * C1538 + C92336 * C1731) *
               C1384 +
           (C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
               C1536 +
           (C4327 * C1543 + C92336 * C1732 + C4328 * C5887 + C92171 * C6124) *
               C1385) *
              C92183 * C4099) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C92105 * C93 -
          ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
            C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
               C92116 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C244) *
              C92183 * C92067 * C92105 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C244 +
           (C19822 * C247 + C19667 * C476 + C19823 * C954 + C19668 * C1144 +
            C19824 * C959 + C19669 * C1149 + C19825 * C5087 + C19670 * C5342) *
               C92116) *
              C92183 * C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C798 -
          ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
            C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
            C19667 * C1146) *
               C92116 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C244) *
              C92183 * C92067 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C244 +
           (C19822 * C957 + C19667 * C1147 + C19823 * C5085 + C19668 * C5340 +
            C19824 * C15493 + C19669 * C15747 + C19825 * C20278 +
            C19670 * C20455) *
               C92116) *
              C92183 * C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C1534 +
          (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
           C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
              C1383 -
          (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 + C19669 * C8766 +
           C19823 * C3431 + C19668 * C3661 + C19822 * C1389 + C19667 * C1606) *
              C1535 -
          (C19825 * C18976 + C19670 * C19292 + C19824 * C8653 + C19669 * C8971 +
           C19823 * C3587 + C19668 * C3805 + C19822 * C1540 + C19667 * C1727) *
              C1384 +
          (C19822 * C1390 + C19667 * C1607 + C19823 * C5719 + C19668 * C5965 +
           C19824 * C16095 + C19669 * C16333 + C19825 * C20682 +
           C19670 * C20840) *
              C1536 +
          (C19822 * C1541 + C19667 * C1728 + C19823 * C5885 + C19668 * C6122 +
           C19824 * C16255 + C19669 * C16487 + C19825 * C20788 +
           C19670 * C20943) *
              C1385) *
         C92183 * C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C244 +
            (C4327 * C1540 + C92336 * C1727 + C4328 * C3587 + C92171 * C3805) *
                C92116) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C244 +
            (C4327 * C1541 + C92336 * C1728 + C4328 * C5885 + C92171 * C6122) *
                C92116) *
               C28199) *
              C92067 * C92105 * C93 -
          (((C4328 * C5886 + C92171 * C6123 + C4327 * C1542 + C92336 * C1730) *
                C92116 +
            (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                C244) *
               C28199 +
           ((C7981 + C7982) * C92116 + (C7758 + C7757) * C244) * C28198 +
           ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C28197) *
              C92067 * C92105 * C94 +
          (C4560 * C28197 +
           ((C7761 + C7762) * C244 + (C7984 + C7983) * C92116) * C28198 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C244 +
            (C4327 * C1543 + C92336 * C1732 + C4328 * C5887 + C92171 * C6124) *
                C92116) *
               C28199) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C244 +
            (C4327 * C1540 + C92336 * C1727 + C4328 * C3587 + C92171 * C3805) *
                C92116) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C244 +
            (C4327 * C1541 + C92336 * C1728 + C4328 * C5885 + C92171 * C6122) *
                C92116) *
               C28199) *
              C92067 * C798 -
          (((C4328 * C16255 + C92171 * C16487 + C4327 * C5885 +
             C92336 * C6122) *
                C92116 +
            (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
             C92336 * C5965) *
                C244) *
               C28199 +
           ((C4328 * C8653 + C92171 * C8971 + C4327 * C3587 + C92336 * C3805) *
                C92116 +
            (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                C244) *
               C28198 +
           ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                C92116 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C244) *
               C28197) *
              C92067 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C244 +
            (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                C92116) *
               C28197 +
           ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
             C92171 * C19090) *
                C244 +
            (C4327 * C8653 + C92336 * C8971 + C4328 * C18976 +
             C92171 * C19292) *
                C92116) *
               C28198 +
           ((C4327 * C16095 + C92336 * C16333 + C4328 * C20682 +
             C92171 * C20840) *
                C244 +
            (C4327 * C16255 + C92336 * C16487 + C4328 * C20788 +
             C92171 * C20943) *
                C92116) *
               C28199) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C1534 +
           (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
               C1383 -
           (C34994 + C34993) * C1535 - (C35194 + C35195) * C1384 +
           C35005 * C1536 + C35200 * C1385) *
              C28197 +
          ((C34993 + C34994) * C1534 + (C35195 + C35194) * C1383 -
           (C34998 + C34997) * C1535 - (C35197 + C35196) * C1384 +
           (C35004 + C35003) * C1536 + (C35198 + C35199) * C1385) *
              C28198 +
          (C35005 * C1534 + C35200 * C1383 - (C35003 + C35004) * C1535 -
           (C35199 + C35198) * C1384 +
           (C4327 * C29611 + C92336 * C29933 + C4328 * C34694 +
            C92171 * C34966) *
               C1536 +
           (C4327 * C29836 + C92336 * C30117 + C4328 * C34884 +
            C92171 * C35180) *
               C1385) *
              C28199) *
         C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] += (0.5 * std::pow(Pi, 2.5) *
                       ((((C554 * C107 + C92183 * C555) * C104 +
                          (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                          C585 * C94 + C586 * C106 + C587 * C95) *
                             C4097 +
                         (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
                          C588 * C106 + C589 * C95) *
                             C4098 +
                         (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
                          C590 * C106 + C591 * C95) *
                             C4099) *
                            C92336 +
                        (((C554 * C805 + C92183 * C1204) * C104 +
                          (C554 * C813 + C92183 * C1212) * C93 - C2468 * C105 -
                          C2469 * C94 + C2470 * C106 + C2471 * C95) *
                             C4097 +
                         (C2468 * C104 + C2469 * C93 - C2470 * C105 -
                          C2471 * C94 + C2472 * C106 + C2473 * C95) *
                             C4098 +
                         (C2470 * C104 + C2471 * C93 - C2472 * C105 -
                          C2473 * C94 + (C554 * C1989 + C92183 * C2453) * C106 +
                          (C554 * C1991 + C92183 * C2454) * C95) *
                             C4099) *
                            C92171) *
                       C92116 * C92105 +
                   0.5 * std::pow(Pi, 2.5) *
                       (((((C554 * C107 + C92183 * C555) * C801 +
                           (C554 * C117 + C92183 * C561) * C92084) *
                              C4097 +
                          (C584 * C801 + C585 * C92084) * C4098 +
                          (C586 * C801 + C587 * C92084) * C4099) *
                             C92336 +
                         ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                          (C5430 + C5431) * C4099) *
                             C92171) *
                            C92116 * C798 -
                        (((C5454 + C5455) * C4099 + (C5456 + C5457) * C4098 +
                          (C5458 + C5459) * C4097) *
                             C92171 +
                         ((C5431 + C5430) * C4099 + (C5429 + C5428) * C4098 +
                          (C5453 + C5452) * C4097) *
                             C92336) *
                            C92116 * C799 +
                        (((C5459 + C5458) * C4097 + (C5457 + C5456) * C4098 +
                          (C5455 + C5454) * C4099) *
                             C92336 +
                         (((C554 * C4865 + C92183 * C5417) * C801 +
                           (C554 * C4871 + C92183 * C5420) * C92084) *
                              C4097 +
                          ((C554 * C4866 + C92183 * C5418) * C801 +
                           (C554 * C4872 + C92183 * C5421) * C92084) *
                              C4098 +
                          ((C554 * C4867 + C92183 * C5419) * C801 +
                           (C554 * C4873 + C92183 * C5422) * C92084) *
                              C4099) *
                             C92171) *
                            C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C4097 +
                      (C584 * C801 + C585 * C92084) * C4098 +
                      (C586 * C801 + C587 * C92084) * C4099) *
                         C92336 +
                     ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                      (C5430 + C5431) * C4099) *
                         C92171) *
                        C1383 -
                    ((((C554 * C3441 + C92183 * C3881) * C92084 +
                       (C554 * C3433 + C92183 * C3877) * C801) *
                          C4099 +
                      ((C554 * C3440 + C92183 * C3880) * C92084 +
                       (C554 * C3432 + C92183 * C3876) * C801) *
                          C4098 +
                      ((C554 * C3439 + C92183 * C3879) * C92084 +
                       (C554 * C3431 + C92183 * C3875) * C801) *
                          C4097) *
                         C92171 +
                     ((C3193 * C92084 + C3192 * C801) * C4099 +
                      (C3191 * C92084 + C3190 * C801) * C4098 +
                      ((C554 * C1397 + C92183 * C1796) * C92084 +
                       (C554 * C1389 + C92183 * C1788) * C801) *
                          C4097) *
                         C92336) *
                        C1384 +
                    ((((C554 * C1390 + C92183 * C1789) * C801 +
                       (C554 * C1406 + C92183 * C1797) * C92084) *
                          C4097 +
                      ((C554 * C1391 + C92183 * C1790) * C801 +
                       (C554 * C1407 + C92183 * C1798) * C92084) *
                          C4098 +
                      ((C554 * C1392 + C92183 * C1791) * C801 +
                       (C554 * C1408 + C92183 * C1799) * C92084) *
                          C4099) *
                         C92336 +
                     (((C554 * C5719 + C92183 * C6199) * C801 +
                       (C554 * C5725 + C92183 * C6202) * C92084) *
                          C4097 +
                      ((C554 * C5720 + C92183 * C6200) * C801 +
                       (C554 * C5726 + C92183 * C6203) * C92084) *
                          C4098 +
                      ((C554 * C5721 + C92183 * C6201) * C801 +
                       (C554 * C5727 + C92183 * C6204) * C92084) *
                          C4099) *
                         C92171) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((C554 * C107 + C92183 * C555) * C104 +
                     (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                     C585 * C94 + C586 * C106 + C587 * C95) *
                        C92067 * C19667 +
                    (C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
                     C2470 * C106 + C2471 * C95) *
                        C92067 * C19668 +
                    (C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
                     C5447 * C106 + C5446 * C95) *
                        C92067 * C19669 +
                    (C15843 * C104 + C15842 * C93 - C15841 * C105 -
                     C15840 * C94 + (C554 * C4867 + C92183 * C5419) * C106 +
                     (C554 * C4873 + C92183 * C5422) * C95) *
                        C92067 * C19670) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C801 +
                      (C554 * C117 + C92183 * C561) * C92084) *
                         C92067 * C19667 +
                     (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                     C20515 * C19670) *
                        C92116 * C798 -
                    ((C20518 + C20519) * C92067 * C19670 +
                     (C15847 + C15848) * C92067 * C19669 +
                     (C5458 + C5459) * C92067 * C19668 +
                     (C5453 + C5452) * C92067 * C19667) *
                        C92116 * C799 +
                    (C20509 * C19667 + C20515 * C19668 +
                     (C20519 + C20518) * C92067 * C19669 +
                     ((C554 * C20126 + C92183 * C20506) * C801 +
                      (C554 * C20128 + C92183 * C20507) * C92084) *
                         C92067 * C19670) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C801 +
                      (C554 * C117 + C92183 * C561) * C92084) *
                         C92067 * C19667 +
                     (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                     C20515 * C19670) *
                        C1383 -
                    (((C554 * C18736 + C92183 * C19394) * C92084 +
                      (C554 * C18732 + C92183 * C19392) * C801) *
                         C92067 * C19670 +
                     (C19405 + C19406) * C92067 * C19669 +
                     (C9089 + C9090) * C92067 * C19668 +
                     ((C554 * C1397 + C92183 * C1796) * C92084 +
                      (C554 * C1389 + C92183 * C1788) * C801) *
                         C92067 * C19667) *
                        C1384 +
                    (((C554 * C1390 + C92183 * C1789) * C801 +
                      (C554 * C1406 + C92183 * C1797) * C92084) *
                         C92067 * C19667 +
                     ((C554 * C5719 + C92183 * C6199) * C801 +
                      (C554 * C5725 + C92183 * C6202) * C92084) *
                         C92067 * C19668 +
                     ((C554 * C16095 + C92183 * C16563) * C801 +
                      (C554 * C16099 + C92183 * C16565) * C92084) *
                         C92067 * C19669 +
                     ((C554 * C20682 + C92183 * C20994) * C801 +
                      (C554 * C20684 + C92183 * C20995) * C92084) *
                         C92067 * C19670) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                      C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                         C104 +
                     (C28648 * C117 + C28197 * C561 + C28649 * C1397 +
                      C28198 * C1796 + C28650 * C1406 + C28199 * C1797) *
                         C93 -
                     (C28676 + C28677 + C28678) * C105 -
                     (C28679 + C28680 + C28681) * C94 +
                     (C28682 + C28683 + C28684) * C106 +
                     (C28685 + C28686 + C28687) * C95) *
                        C92067 * C92336 +
                    ((C28648 * C805 + C28197 * C1204 + C28649 * C3431 +
                      C28198 * C3875 + C28650 * C5719 + C28199 * C6199) *
                         C104 +
                     (C28648 * C813 + C28197 * C1212 + C28649 * C3439 +
                      C28198 * C3879 + C28650 * C5725 + C28199 * C6202) *
                         C93 -
                     (C31074 + C31073 + C31072) * C105 -
                     (C31077 + C31076 + C31075) * C94 +
                     (C28648 * C803 + C28197 * C1202 + C28649 * C3433 +
                      C28198 * C3877 + C28650 * C5721 + C28199 * C6201) *
                         C106 +
                     (C28648 * C811 + C28197 * C1210 + C28649 * C3441 +
                      C28198 * C3881 + C28650 * C5727 + C28199 * C6204) *
                         C95) *
                        C92067 * C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C801 +
                      (C28648 * C117 + C28197 * C561 + C28649 * C1397 +
                       C28198 * C1796 + C28650 * C1406 + C28199 * C1797) *
                          C92084) *
                         C92067 * C92336 +
                     ((C34425 + C34426 + C34427) * C801 +
                      (C34428 + C34429 + C34430) * C92084) *
                         C92067 * C92171) *
                        C92116 * C798 -
                    (((C34431 + C34432 + C34433) * C92084 +
                      (C34434 + C34435 + C34436) * C801) *
                         C92067 * C92171 +
                     ((C34430 + C34429 + C34428) * C92084 +
                      (C34427 + C34426 + C34425) * C801) *
                         C92067 * C92336) *
                        C92116 * C799 +
                    (((C34436 + C34435 + C34434) * C801 +
                      (C34433 + C34432 + C34431) * C92084) *
                         C92067 * C92336 +
                     ((C28648 * C4865 + C28197 * C5417 + C28649 * C18732 +
                       C28198 * C19392 + C28650 * C20682 + C28199 * C20994) *
                          C801 +
                      (C28648 * C4871 + C28197 * C5420 + C28649 * C18736 +
                       C28198 * C19394 + C28650 * C20684 + C28199 * C20995) *
                          C92084) *
                         C92067 * C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C801 +
                      (C28648 * C117 + C28197 * C561 + C28649 * C1397 +
                       C28198 * C1796 + C28650 * C1406 + C28199 * C1797) *
                          C92084) *
                         C92067 * C92336 +
                     ((C34425 + C34426 + C34427) * C801 +
                      (C34428 + C34429 + C34430) * C92084) *
                         C92067 * C92171) *
                        C1383 -
                    (((C28650 * C24527 + C28199 * C25134 + C28649 * C5725 +
                       C28198 * C6202 + C28648 * C3439 + C28197 * C3879) *
                          C92084 +
                      (C28650 * C24524 + C28199 * C25132 + C28649 * C5719 +
                       C28198 * C6199 + C28648 * C3431 + C28197 * C3875) *
                          C801) *
                         C92067 * C92171 +
                     ((C28650 * C10814 + C28199 * C11431 + C28649 * C1406 +
                       C28198 * C1797 + C28648 * C1397 + C28197 * C1796) *
                          C92084 +
                      (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                       C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                          C801) *
                         C92067 * C92336) *
                        C1384 +
                    (((C28648 * C1390 + C28197 * C1789 + C28649 * C10808 +
                       C28198 * C11428 + C28650 * C29611 + C28199 * C30199) *
                          C801 +
                      (C28648 * C1406 + C28197 * C1797 + C28649 * C10814 +
                       C28198 * C11431 + C28650 * C29615 + C28199 * C30201) *
                          C92084) *
                         C92067 * C92336 +
                     ((C28648 * C5719 + C28197 * C6199 + C28649 * C24524 +
                       C28198 * C25132 + C28650 * C34694 + C28199 * C35274) *
                          C801 +
                      (C28648 * C5725 + C28197 * C6202 + C28649 * C24527 +
                       C28198 * C25134 + C28650 * C34696 + C28199 * C35275) *
                          C92084) *
                         C92067 * C92171) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92183 * C555) * C181 +
                 (C554 * C182 + C92183 * C641) * C92105) *
                    C4097 +
                (C648 + C664) * C4098 + C668 * C4099) *
                   C92336 +
               (((C554 * C805 + C92183 * C1204) * C181 +
                 (C554 * C890 + C92183 * C1267) * C92105) *
                    C4097 +
                (C4710 + C4711) * C4098 + C4716 * C4099) *
                   C92171) *
                  C93 -
              (((C4714 + C4715) * C4099 + (C4713 + C4712) * C4098 +
                (C4711 + C4710) * C4097) *
                   C92171 +
               ((C666 + C654) * C4099 + (C665 + C651) * C4098 +
                (C664 + C648) * C4097) *
                   C92336) *
                  C94 +
              ((C668 * C4097 + C669 * C4098 + (C659 + C667) * C4099) * C92336 +
               (C4716 * C4097 + (C4715 + C4714) * C4098 +
                ((C554 * C1989 + C92183 * C2453) * C181 +
                 (C554 * C2061 + C92183 * C2539) * C92105) *
                    C4099) *
                   C92171) *
                  C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92183 * C555) * C884 +
                (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 -
                C5545 * C799 + C5451 * C886 + C5546 * C800) *
                   C4097 +
               (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
                C5449 * C886 + C5547 * C800) *
                   C4098 +
               (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
                C5447 * C886 + C5548 * C800) *
                   C4099) *
                  C92336 +
              ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
                (C554 * C4865 + C92183 * C5417) * C886 +
                (C554 * C4987 + C92183 * C5533) * C800) *
                   C4097 +
               (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
                (C554 * C4866 + C92183 * C5418) * C886 +
                (C554 * C4988 + C92183 * C5534) * C800) *
                   C4098 +
               (C2470 * C884 + C2557 * C798 - C5447 * C885 - C5548 * C799 +
                (C554 * C4867 + C92183 * C5419) * C886 +
                (C554 * C4989 + C92183 * C5535) * C800) *
                   C4099) *
                  C92171) *
             C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C4097 +
            (C648 + C664) * C4098 + C668 * C4099) *
               C92336 +
           ((C5444 * C181 + C5545 * C92105) * C4097 + (C4710 + C4711) * C4098 +
            C4716 * C4099) *
               C92171) *
              C92084 * C1383 -
          ((((C554 * C3515 + C92183 * C3951) * C92105 +
             (C554 * C3433 + C92183 * C3877) * C181) *
                C4099 +
            ((C554 * C3514 + C92183 * C3950) * C92105 +
             (C554 * C3432 + C92183 * C3876) * C181) *
                C4098 +
            ((C554 * C3513 + C92183 * C3949) * C92105 +
             (C554 * C3431 + C92183 * C3875) * C181) *
                C4097) *
               C92171 +
           ((C3276 + C3266) * C4099 + (C3275 + C3263) * C4098 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C4097) *
               C92336) *
              C92084 * C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C181 +
             (C554 * C1472 + C92183 * C1855) * C92105) *
                C4097 +
            ((C554 * C1391 + C92183 * C1790) * C181 +
             (C554 * C1473 + C92183 * C1856) * C92105) *
                C4098 +
            ((C554 * C1392 + C92183 * C1791) * C181 +
             (C554 * C1474 + C92183 * C1857) * C92105) *
                C4099) *
               C92336 +
           (((C554 * C5719 + C92183 * C6199) * C181 +
             (C554 * C5805 + C92183 * C6279) * C92105) *
                C4097 +
            ((C554 * C5720 + C92183 * C6200) * C181 +
             (C554 * C5806 + C92183 * C6280) * C92105) *
                C4098 +
            ((C554 * C5721 + C92183 * C6201) * C181 +
             (C554 * C5807 + C92183 * C6281) * C92105) *
                C4099) *
               C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C92067 * C19667 +
           (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
           (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
           (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
              C93 -
          ((C15930 * C92105 + C15841 * C181) * C92067 * C19670 +
           (C15123 + C15122) * C92067 * C19669 +
           (C4711 + C4710) * C92067 * C19668 +
           (C664 + C648) * C92067 * C19667) *
              C94 +
          (C668 * C92067 * C19667 + C4716 * C92067 * C19668 +
           (C15125 + C15124) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C181 +
            (C554 * C4989 + C92183 * C5535) * C92105) *
               C92067 * C19670) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
           C5451 * C886 + C5546 * C800) *
              C92067 * C19667 +
          (C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
           C15843 * C886 + C15929 * C800) *
              C92067 * C19668 +
          (C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
           C20517 * C886 + C20573 * C800) *
              C92067 * C19669 +
          (C15843 * C884 + C15929 * C798 - C20517 * C885 - C20573 * C799 +
           (C554 * C20126 + C92183 * C20506) * C886 +
           (C554 * C20214 + C92183 * C20569) * C800) *
              C92067 * C19670) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C92067 * C19667 +
           (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
           (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
           (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
              C92084 * C1383 -
          (((C554 * C18862 + C92183 * C19504) * C92105 +
            (C554 * C18732 + C92183 * C19392) * C181) *
               C92067 * C19670 +
           (C19509 * C92105 + C19404 * C181) * C92067 * C19669 +
           (C9194 * C92105 + C9088 * C181) * C92067 * C19668 +
           ((C554 * C1471 + C92183 * C1854) * C92105 +
            (C554 * C1389 + C92183 * C1788) * C181) *
               C92067 * C19667) *
              C92084 * C1384 +
          (((C554 * C1390 + C92183 * C1789) * C181 +
            (C554 * C1472 + C92183 * C1855) * C92105) *
               C92067 * C19667 +
           ((C554 * C5719 + C92183 * C6199) * C181 +
            (C554 * C5805 + C92183 * C6279) * C92105) *
               C92067 * C19668 +
           ((C554 * C16095 + C92183 * C16563) * C181 +
            (C554 * C16177 + C92183 * C16641) * C92105) *
               C92067 * C19669 +
           ((C554 * C20682 + C92183 * C20994) * C181 +
            (C554 * C20736 + C92183 * C21046) * C92105) *
               C92067 * C19670) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C181 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C92105) *
               C92067 * C92336 +
           ((C28648 * C805 + C28197 * C1204 + C28649 * C3431 + C28198 * C3875 +
             C28650 * C5719 + C28199 * C6199) *
                C181 +
            (C28648 * C890 + C28197 * C1267 + C28649 * C3513 + C28198 * C3949 +
             C28650 * C5805 + C28199 * C6279) *
                C92105) *
               C92067 * C92171) *
              C93 -
          (((C31182 + C31183 + C31184) * C92105 +
            (C31074 + C31073 + C31072) * C181) *
               C92067 * C92171 +
           ((C28776 + C28775 + C28774) * C92105 +
            (C28676 + C28677 + C28678) * C181) *
               C92067 * C92336) *
              C94 +
          (((C28682 + C28683 + C28684) * C181 +
            (C28779 + C28778 + C28777) * C92105) *
               C92067 * C92336 +
           ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
             C28650 * C5721 + C28199 * C6201) *
                C181 +
            (C28648 * C888 + C28197 * C1271 + C28649 * C3515 + C28198 * C3951 +
             C28650 * C5807 + C28199 * C6281) *
                C92105) *
               C92067 * C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C884 +
           (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
            C28650 * C1472 + C28199 * C1855) *
               C798 -
           (C34427 + C34426 + C34425) * C885 -
           (C34523 + C34524 + C34525) * C799 +
           (C34436 + C34435 + C34434) * C886 +
           (C34526 + C34527 + C34528) * C800) *
              C92067 * C92336 +
          ((C34425 + C34426 + C34427) * C884 +
           (C34525 + C34524 + C34523) * C798 -
           (C34434 + C34435 + C34436) * C885 -
           (C34528 + C34527 + C34526) * C799 +
           (C28648 * C4865 + C28197 * C5417 + C28649 * C18732 +
            C28198 * C19392 + C28650 * C20682 + C28199 * C20994) *
               C886 +
           (C28648 * C4987 + C28197 * C5533 + C28649 * C18862 +
            C28198 * C19504 + C28650 * C20736 + C28199 * C21046) *
               C800) *
              C92067 * C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C181 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C92105) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C181 +
            (C34525 + C34524 + C34523) * C92105) *
               C92067 * C92171) *
              C92084 * C1383 -
          (((C28650 * C24638 + C28199 * C25210 + C28649 * C5805 +
             C28198 * C6279 + C28648 * C3513 + C28197 * C3949) *
                C92105 +
            (C28650 * C24524 + C28199 * C25132 + C28649 * C5719 +
             C28198 * C6199 + C28648 * C3431 + C28197 * C3875) *
                C181) *
               C92067 * C92171 +
           ((C28650 * C10930 + C28199 * C11508 + C28649 * C1472 +
             C28198 * C1855 + C28648 * C1471 + C28197 * C1854) *
                C92105 +
            (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
             C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                C181) *
               C92067 * C92336) *
              C92084 * C1384 +
          (((C28648 * C1390 + C28197 * C1789 + C28649 * C10808 +
             C28198 * C11428 + C28650 * C29611 + C28199 * C30199) *
                C181 +
            (C28648 * C1472 + C28197 * C1855 + C28649 * C10930 +
             C28198 * C11508 + C28650 * C29735 + C28199 * C30277) *
                C92105) *
               C92067 * C92336 +
           ((C28648 * C5719 + C28197 * C6199 + C28649 * C24524 +
             C28198 * C25132 + C28650 * C34694 + C28199 * C35274) *
                C181 +
            (C28648 * C5805 + C28197 * C6279 + C28649 * C24638 +
             C28198 * C25210 + C28650 * C34793 + C28199 * C35350) *
                C92105) *
               C92067 * C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92183 * C555) * C244 +
                 (C554 * C245 + C92183 * C719) * C92116) *
                    C4097 +
                (C726 + C742) * C4098 + C746 * C4099) *
                   C92336 +
               (((C554 * C805 + C92183 * C1204) * C244 +
                 (C554 * C956 + C92183 * C1328) * C92116) *
                    C4097 +
                (C2637 + C2643) * C4098 + C4791 * C4099) *
                   C92171) *
                  C92105 * C93 -
              (((C2641 + C2631) * C4099 + (C2642 + C2634) * C4098 +
                (C2643 + C2637) * C4097) *
                   C92171 +
               ((C744 + C732) * C4099 + (C743 + C729) * C4098 +
                (C742 + C726) * C4097) *
                   C92336) *
                  C92105 * C94 +
              ((C746 * C4097 + C747 * C4098 + (C737 + C745) * C4099) * C92336 +
               (C4791 * C4097 + (C2631 + C2641) * C4098 +
                ((C554 * C1989 + C92183 * C2453) * C244 +
                 (C554 * C2129 + C92183 * C2627) * C92116) *
                    C4099) *
                   C92171) *
                  C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92183 * C555) * C244 +
                 (C554 * C245 + C92183 * C719) * C92116) *
                    C4097 +
                (C726 + C742) * C4098 + C746 * C4099) *
                   C92336 +
               ((C5626 + C5642) * C4097 + (C2637 + C2643) * C4098 +
                C4791 * C4099) *
                   C92171) *
                  C798 -
              (((C5643 + C5631) * C4099 + (C5644 + C5634) * C4098 +
                (C5645 + C5637) * C4097) *
                   C92171 +
               ((C2642 + C2634) * C4099 + (C2643 + C2637) * C4098 +
                (C5642 + C5626) * C4097) *
                   C92336) *
                  C799 +
              (((C5637 + C5645) * C4097 + (C5634 + C5644) * C4098 +
                (C5631 + C5643) * C4099) *
                   C92336 +
               (((C554 * C4865 + C92183 * C5417) * C244 +
                 (C554 * C5085 + C92183 * C5622) * C92116) *
                    C4097 +
                ((C554 * C4866 + C92183 * C5418) * C244 +
                 (C554 * C5086 + C92183 * C5623) * C92116) *
                    C4098 +
                ((C554 * C4867 + C92183 * C5419) * C244 +
                 (C554 * C5087 + C92183 * C5624) * C92116) *
                    C4099) *
                   C92171) *
                  C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1534 +
            (C554 * C245 + C92183 * C719) * C1383 -
            (C554 * C1389 + C92183 * C1788) * C1535 -
            (C554 * C1540 + C92183 * C1909) * C1384 +
            (C554 * C1390 + C92183 * C1789) * C1536 +
            (C554 * C1541 + C92183 * C1910) * C1385) *
               C4097 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92183 * C1790) * C1536 +
            (C554 * C1542 + C92183 * C1912) * C1385) *
               C4098 +
           (C586 * C1534 + C739 * C1383 - C3192 * C1535 - C3361 * C1384 +
            (C554 * C1392 + C92183 * C1791) * C1536 +
            (C554 * C1543 + C92183 * C1914) * C1385) *
               C4099) *
              C92336 +
          ((C5444 * C1534 + C5638 * C1383 -
            (C554 * C3431 + C92183 * C3875) * C1535 -
            (C554 * C3587 + C92183 * C4019) * C1384 +
            (C554 * C5719 + C92183 * C6199) * C1536 +
            (C554 * C5885 + C92183 * C6356) * C1385) *
               C4097 +
           (C2468 * C1534 + C2640 * C1383 -
            (C554 * C3432 + C92183 * C3876) * C1535 -
            (C554 * C3588 + C92183 * C4020) * C1384 +
            (C554 * C5720 + C92183 * C6200) * C1536 +
            (C554 * C5886 + C92183 * C6357) * C1385) *
               C4098 +
           (C2470 * C1534 + C2639 * C1383 -
            (C554 * C3433 + C92183 * C3877) * C1535 -
            (C554 * C3589 + C92183 * C4021) * C1384 +
            (C554 * C5721 + C92183 * C6201) * C1536 +
            (C554 * C5887 + C92183 * C6358) * C1385) *
               C4099) *
              C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C16007 * C92067 * C19669 +
           (C16014 + C16021) * C92067 * C19670) *
              C92105 * C93 -
          ((C16020 + C16011) * C92067 * C19670 + C17698 * C92067 * C19669 +
           C7348 * C92067 * C19668 + (C742 + C726) * C92067 * C19667) *
              C92105 * C94 +
          (C746 * C92067 * C19667 + C4791 * C92067 * C19668 +
           (C5631 + C5643) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C244 +
            (C554 * C5087 + C92183 * C5624) * C92116) *
               C92067 * C19670) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C20625 * C19669 +
           C20630 * C19670) *
              C798 -
          ((C20632 + C20629) * C92067 * C19670 +
           (C16021 + C16014) * C92067 * C19669 +
           (C5645 + C5637) * C92067 * C19668 +
           (C5642 + C5626) * C92067 * C19667) *
              C799 +
          (C20625 * C19667 + C20630 * C19668 +
           (C20629 + C20632) * C92067 * C19669 +
           ((C554 * C20126 + C92183 * C20506) * C244 +
            (C554 * C20278 + C92183 * C20623) * C92116) *
               C92067 * C19670) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C1534 +
           (C554 * C245 + C92183 * C719) * C1383 -
           (C554 * C1389 + C92183 * C1788) * C1535 -
           (C554 * C1540 + C92183 * C1909) * C1384 +
           (C554 * C1390 + C92183 * C1789) * C1536 +
           (C554 * C1541 + C92183 * C1910) * C1385) *
              C92067 * C19667 +
          (C5444 * C1534 + C5638 * C1383 - C9088 * C1535 - C9301 * C1384 +
           (C554 * C5719 + C92183 * C6199) * C1536 +
           (C554 * C5885 + C92183 * C6356) * C1385) *
              C92067 * C19668 +
          (C5451 * C1534 + C5641 * C1383 - C19404 * C1535 - C19615 * C1384 +
           (C554 * C16095 + C92183 * C16563) * C1536 +
           (C554 * C16255 + C92183 * C16717) * C1385) *
              C92067 * C19669 +
          (C15843 * C1534 + C16018 * C1383 -
           (C554 * C18732 + C92183 * C19392) * C1535 -
           (C554 * C18976 + C92183 * C19607) * C1384 +
           (C554 * C20682 + C92183 * C20994) * C1536 +
           (C554 * C20788 + C92183 * C21097) * C1385) *
              C92067 * C19670) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92067 * C92336 +
           ((C28648 * C805 + C28197 * C1204 + C28649 * C3431 + C28198 * C3875 +
             C28650 * C5719 + C28199 * C6199) *
                C244 +
            (C28648 * C956 + C28197 * C1328 + C28649 * C3587 + C28198 * C4019 +
             C28650 * C5885 + C28199 * C6356) *
                C92116) *
               C92067 * C92171) *
              C92105 * C93 -
          (((C31289 + C31290 + C31291) * C92116 +
            (C31074 + C31073 + C31072) * C244) *
               C92067 * C92171 +
           ((C28868 + C28867 + C28866) * C92116 +
            (C28676 + C28677 + C28678) * C244) *
               C92067 * C92336) *
              C92105 * C94 +
          (((C28682 + C28683 + C28684) * C244 +
            (C28871 + C28870 + C28869) * C92116) *
               C92067 * C92336 +
           ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
             C28650 * C5721 + C28199 * C6201) *
                C244 +
            (C28648 * C954 + C28197 * C1326 + C28649 * C3589 + C28198 * C4021 +
             C28650 * C5887 + C28199 * C6358) *
                C92116) *
               C92067 * C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C244 +
            (C34615 + C34616 + C34617) * C92116) *
               C92067 * C92171) *
              C798 -
          (((C34618 + C34619 + C34620) * C92116 +
            (C34434 + C34435 + C34436) * C244) *
               C92067 * C92171 +
           ((C34617 + C34616 + C34615) * C92116 +
            (C34427 + C34426 + C34425) * C244) *
               C92067 * C92336) *
              C799 +
          (((C34436 + C34435 + C34434) * C244 +
            (C34620 + C34619 + C34618) * C92116) *
               C92067 * C92336 +
           ((C28648 * C4865 + C28197 * C5417 + C28649 * C18732 +
             C28198 * C19392 + C28650 * C20682 + C28199 * C20994) *
                C244 +
            (C28648 * C5085 + C28197 * C5622 + C28649 * C18976 +
             C28198 * C19607 + C28650 * C20788 + C28199 * C21097) *
                C92116) *
               C92067 * C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C1534 +
           (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
            C28650 * C1541 + C28199 * C1910) *
               C1383 -
           (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
            C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
               C1535 -
           (C28650 * C11028 + C28199 * C11585 + C28649 * C1541 +
            C28198 * C1910 + C28648 * C1540 + C28197 * C1909) *
               C1384 +
           (C28648 * C1390 + C28197 * C1789 + C28649 * C10808 +
            C28198 * C11428 + C28650 * C29611 + C28199 * C30199) *
               C1536 +
           (C28648 * C1541 + C28197 * C1910 + C28649 * C11028 +
            C28198 * C11585 + C28650 * C29836 + C28199 * C30353) *
               C1385) *
              C92067 * C92336 +
          ((C34425 + C34426 + C34427) * C1534 +
           (C34615 + C34616 + C34617) * C1383 -
           (C28650 * C24524 + C28199 * C25132 + C28649 * C5719 +
            C28198 * C6199 + C28648 * C3431 + C28197 * C3875) *
               C1535 -
           (C28650 * C24740 + C28199 * C25286 + C28649 * C5885 +
            C28198 * C6356 + C28648 * C3587 + C28197 * C4019) *
               C1384 +
           (C28648 * C5719 + C28197 * C6199 + C28649 * C24524 +
            C28198 * C25132 + C28650 * C34694 + C28199 * C35274) *
               C1536 +
           (C28648 * C5885 + C28197 * C6356 + C28649 * C24740 +
            C28198 * C25286 + C28650 * C34884 + C28199 * C35425) *
               C1385) *
              C92067 * C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1987 +
            (C19671 * C117 + C92067 * C125) * C1983 -
            (C19671 * C108 + C92067 * C114) * C1988 -
            (C19671 * C118 + C92067 * C126) * C1984) *
               C19667 +
           (C21165 + C21166 - C21189 - C21190) * C19668 +
           (C21171 + C21172 - C21191 - C21192) * C19669 +
           (C21177 + C21178 - C21193 - C21194) * C19670) *
              C92183 * C2709 +
          (((C19671 * C1388 + C92067 * C1400) * C1988 -
            ((C19671 * C1397 + C92067 * C1413) * C1983 +
             (C19671 * C1389 + C92067 * C1401) * C1987) +
            (C19671 * C1396 + C92067 * C1412) * C1984) *
               C19667 +
           ((C19671 * C3432 + C92067 * C3436) * C1988 -
            ((C19671 * C3439 + C92067 * C3443) * C1983 +
             (C19671 * C3431 + C92067 * C3435) * C1987) +
            (C19671 * C3440 + C92067 * C3444) * C1984) *
               C19668 +
           ((C19671 * C8413 + C92067 * C8416) * C1988 -
            ((C19671 * C8418 + C92067 * C8421) * C1983 +
             (C19671 * C8412 + C92067 * C8415) * C1987) +
            (C19671 * C8419 + C92067 * C8422) * C1984) *
               C19669 +
           ((C19671 * C18733 + C92067 * C18735) * C1988 -
            ((C19671 * C18736 + C92067 * C18738) * C1983 +
             (C19671 * C18732 + C92067 * C18734) * C1987) +
            (C19671 * C18737 + C92067 * C18739) * C1984) *
               C19670) *
              C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C1983 -
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
             C4102 * C118 + C4097 * C126) *
                C1984) *
               C92336 +
           ((C4902 + C4903 + C4904) * C1987 + (C4905 + C4906 + C4907) * C1983 -
            (C6470 + C6471 + C6472) * C1988 - (C6473 + C6474 + C6475) * C1984) *
               C92171) *
              C92183 * C2709 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C4098 * C1399 +
             C4104 * C1386 + C4099 * C1398) *
                C1988 -
            ((C4104 * C1395 + C4099 * C1411 + C4103 * C1396 + C4098 * C1412 +
              C4102 * C1397 + C4097 * C1413) *
                 C1983 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C1987) +
            (C4102 * C1396 + C4097 * C1412 + C4103 * C1395 + C4098 * C1411 +
             C4104 * C1394 + C4099 * C1410) *
                C1984) *
               C92336 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
             C4104 * C3434 + C4099 * C3438) *
                C1988 -
            ((C4104 * C3441 + C4099 * C3445 + C4103 * C3440 + C4098 * C3444 +
              C4102 * C3439 + C4097 * C3443) *
                 C1983 +
             (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
              C4102 * C3431 + C4097 * C3435) *
                 C1987) +
            (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 + C4098 * C3445 +
             C4104 * C3442 + C4099 * C3446) *
                C1984) *
               C92171) *
              C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C1987 +
             (C19671 * C117 + C92067 * C125) * C1983 -
             (C19671 * C108 + C92067 * C114) * C1988 -
             (C19671 * C118 + C92067 * C126) * C1984) *
                C92336 +
            (C21165 + C21166 - C21189 - C21190) * C92171) *
               C28197 +
           ((C26329 + C26330 - C26337 - C26338) * C92336 +
            (C25387 + C25388 - C25403 - C25404) * C92171) *
               C28198 +
           ((C36425 + C36426 - C36433 - C36434) * C92336 +
            (C35525 + C35526 - C35533 - C35534) * C92171) *
               C28199) *
              C2709 +
          (((C26337 - (C26330 + C26329) + C26338) * C92336 +
            (C25403 - (C25388 + C25387) + C25404) * C92171) *
               C28197 +
           ((C36433 - (C36426 + C36425) + C36434) * C92336 +
            (C35533 - (C35526 + C35525) + C35534) * C92171) *
               C28198 +
           (((C19671 * C10809 + C92067 * C10812) * C1988 -
             (C34713 * C1983 + C34714 * C1987) +
             (C19671 * C10815 + C92067 * C10818) * C1984) *
                C92336 +
            ((C19671 * C32368 + C92067 * C32369) * C1988 -
             (C34711 * C1983 + C34712 * C1987) +
             (C19671 * C32370 + C92067 * C32371) * C1984) *
                C92171) *
               C28199) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C19667 +
            (C20147 * C181 + C20225 * C92105) * C19668 +
            (C20149 * C181 + C20226 * C92105) * C19669 +
            (C20151 * C181 + C20227 * C92105) * C19670) *
               C92183 * C1983 -
           ((C21269 * C92105 + C21187 * C181) * C19670 +
            (C21268 * C92105 + C21185 * C181) * C19669 +
            (C21267 * C92105 + C21183 * C181) * C19668 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C19667) *
               C92183 * C1984) *
              C2709 +
          ((((C19671 * C1388 + C92067 * C1400) * C181 +
             (C19671 * C1470 + C92067 * C1478) * C92105) *
                C19667 +
            ((C19671 * C3432 + C92067 * C3436) * C181 +
             (C19671 * C3514 + C92067 * C3518) * C92105) *
                C19668 +
            ((C19671 * C8413 + C92067 * C8416) * C181 +
             (C19671 * C8541 + C92067 * C8544) * C92105) *
                C19669 +
            ((C19671 * C18733 + C92067 * C18735) * C181 +
             (C19671 * C18863 + C92067 * C18865) * C92105) *
                C19670) *
               C92183 * C1984 -
           (((C19671 * C18862 + C92067 * C18864) * C92105 +
             (C19671 * C18732 + C92067 * C18734) * C181) *
                C19670 +
            ((C19671 * C8540 + C92067 * C8543) * C92105 +
             (C19671 * C8412 + C92067 * C8415) * C181) *
                C19669 +
            ((C19671 * C3513 + C92067 * C3517) * C92105 +
             (C19671 * C3431 + C92067 * C3435) * C181) *
                C19668 +
            ((C19671 * C1471 + C92067 * C1479) * C92105 +
             (C19671 * C1389 + C92067 * C1401) * C181) *
                C19667) *
               C92183 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
              C4104 * C184 + C4099 * C190) *
                 C92105) *
                C92336 +
            ((C4902 + C4903 + C4904) * C181 +
             (C5008 + C5007 + C5006) * C92105) *
                C92171) *
               C92183 * C1983 -
           (((C6582 + C6581 + C6580) * C92105 +
             (C6470 + C6471 + C6472) * C181) *
                C92171 +
            ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
              C4102 * C183 + C4097 * C189) *
                 C92105 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C181) *
                C92336) *
               C92183 * C1984) *
              C2709 +
          ((((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C4098 * C1399 +
              C4104 * C1386 + C4099 * C1398) *
                 C181 +
             (C4102 * C1470 + C4097 * C1478 + C4103 * C1469 + C4098 * C1477 +
              C4104 * C1468 + C4099 * C1476) *
                 C92105) *
                C92336 +
            ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
              C4104 * C3434 + C4099 * C3438) *
                 C181 +
             (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 + C4098 * C3519 +
              C4104 * C3516 + C4099 * C3520) *
                 C92105) *
                C92171) *
               C92183 * C1984 -
           (((C4104 * C3515 + C4099 * C3519 + C4103 * C3514 + C4098 * C3518 +
              C4102 * C3513 + C4097 * C3517) *
                 C92105 +
             (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
              C4102 * C3431 + C4097 * C3435) *
                 C181) *
                C92171 +
            ((C4104 * C1469 + C4099 * C1477 + C4103 * C1470 + C4098 * C1478 +
              C4102 * C1471 + C4097 * C1479) *
                 C92105 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C181) *
                C92336) *
               C92183 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C181 +
              (C19671 * C182 + C92067 * C188) * C92105) *
                 C92336 +
             (C20147 * C181 + C20225 * C92105) * C92171) *
                C28197 +
            ((C24643 + C24663) * C92336 + (C24646 + C24647) * C92171) * C28198 +
            C34808 * C28199) *
               C1983 -
           (((C36533 + C36534) * C92171 + (C36539 + C36537) * C92336) * C28199 +
            ((C26439 + C26440) * C92171 + (C26445 + C26443) * C92336) * C28198 +
            ((C21267 * C92105 + C21183 * C181) * C92171 +
             ((C19671 * C183 + C92067 * C189) * C92105 +
              (C19671 * C108 + C92067 * C114) * C181) *
                 C92336) *
                C28197) *
               C1984) *
              C2709 +
          ((((C26443 + C26445) * C92336 + (C26440 + C26439) * C92171) * C28197 +
            ((C36537 + C36539) * C92336 + (C36534 + C36533) * C92171) * C28198 +
            (((C19671 * C10809 + C92067 * C10812) * C181 +
              (C19671 * C10931 + C92067 * C10934) * C92105) *
                 C92336 +
             ((C19671 * C32368 + C92067 * C32369) * C181 +
              (C19671 * C32482 + C92067 * C32483) * C92105) *
                 C92171) *
                C28199) *
               C1984 -
           (((C34809 + C34800) * C92171 + (C34810 + C34803) * C92336) * C28199 +
            ((C24665 + C24655) * C92171 + (C24666 + C24658) * C92336) * C28198 +
            ((C24647 + C24646) * C92171 + (C24663 + C24643) * C92336) *
                C28197) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2849 +
            (C19671 * C245 + C92067 * C251) * C2709 -
            (C19671 * C1389 + C92067 * C1401) * C2850 -
            (C19671 * C1540 + C92067 * C1548) * C2710) *
               C19667 +
           (C20147 * C2849 + C20293 * C2709 -
            (C19671 * C3431 + C92067 * C3435) * C2850 -
            (C19671 * C3587 + C92067 * C3591) * C2710) *
               C19668 +
           (C20149 * C2849 + C20294 * C2709 -
            (C19671 * C8412 + C92067 * C8415) * C2850 -
            (C19671 * C8653 + C92067 * C8656) * C2710) *
               C19669 +
           (C20151 * C2849 + C20295 * C2709 -
            (C19671 * C18732 + C92067 * C18734) * C2850 -
            (C19671 * C18976 + C92067 * C18978) * C2710) *
               C19670) *
              C92183 * C92105 * C1983 +
          (((C19671 * C1388 + C92067 * C1400) * C2850 -
            ((C19671 * C246 + C92067 * C252) * C2709 +
             (C19671 * C108 + C92067 * C114) * C2849) +
            (C19671 * C1539 + C92067 * C1547) * C2710) *
               C19667 +
           ((C19671 * C3432 + C92067 * C3436) * C2850 -
            (C21345 * C2709 + C21183 * C2849) +
            (C19671 * C3588 + C92067 * C3592) * C2710) *
               C19668 +
           ((C19671 * C8413 + C92067 * C8416) * C2850 -
            (C21346 * C2709 + C21185 * C2849) +
            (C19671 * C8654 + C92067 * C8657) * C2710) *
               C19669 +
           ((C19671 * C18733 + C92067 * C18735) * C2850 -
            (C21347 * C2709 + C21187 * C2849) +
            (C19671 * C18977 + C92067 * C18979) * C2710) *
               C19670) *
              C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C2709 -
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4104 * C1538 + C4099 * C1546 + C4103 * C1539 + C4098 * C1547 +
             C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2849 + (C5104 + C5105 + C5106) * C2709 -
            (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
             C4102 * C3431 + C4097 * C3435) *
                C2850 -
            (C4104 * C3589 + C4099 * C3593 + C4103 * C3588 + C4098 * C3592 +
             C4102 * C3587 + C4097 * C3591) *
                C2710) *
               C92171) *
              C92183 * C92105 * C1983 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C4098 * C1399 +
             C4104 * C1386 + C4099 * C1398) *
                C2850 -
            ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
              C4102 * C246 + C4097 * C252) *
                 C2709 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2849) +
            (C4102 * C1539 + C4097 * C1547 + C4103 * C1538 + C4098 * C1546 +
             C4104 * C1537 + C4099 * C1545) *
                C2710) *
               C92336 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
             C4104 * C3434 + C4099 * C3438) *
                C2850 -
            ((C6689 + C6688 + C6687) * C2709 +
             (C6470 + C6471 + C6472) * C2849) +
            (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 + C4098 * C3593 +
             C4104 * C3590 + C4099 * C3594) *
                C2710) *
               C92171) *
              C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2849 +
             (C19671 * C245 + C92067 * C251) * C2709 - C24549 * C2850 -
             C24753 * C2710) *
                C92336 +
            (C22584 + C22585 - C22586 - C22602) * C92171) *
               C28197 +
           ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
             C24754 * C2710) *
                C92336 +
            (C27444 + C27445 - C27446 - C27447) * C92171) *
               C28198 +
           ((C24556 * C2849 + C24754 * C2709 - C34714 * C2850 -
             C34891 * C2710) *
                C92336 +
            (C24554 * C2849 + C24755 * C2709 - C34712 * C2850 -
             C34892 * C2710) *
                C92171) *
               C28199) *
              C92105 * C1983 +
          (((C26335 * C2850 -
             ((C19671 * C246 + C92067 * C252) * C2709 +
              (C19671 * C108 + C92067 * C114) * C2849) +
             C26546 * C2710) *
                C92336 +
            (C25399 * C2850 - (C21345 * C2709 + C21183 * C2849) +
             C25615 * C2710) *
                C92171) *
               C28197 +
           ((C36431 * C2850 - (C26546 * C2709 + C26335 * C2849) +
             C36640 * C2710) *
                C92336 +
            (C35531 * C2850 - (C25615 * C2709 + C25399 * C2849) +
             C35737 * C2710) *
                C92171) *
               C28198 +
           (((C19671 * C10809 + C92067 * C10812) * C2850 -
             (C36640 * C2709 + C36431 * C2849) +
             (C19671 * C11029 + C92067 * C11032) * C2710) *
                C92336 +
            ((C19671 * C32368 + C92067 * C32369) * C2850 -
             (C35737 * C2709 + C35531 * C2849) +
             (C19671 * C32588 + C92067 * C32589) * C2710) *
                C92171) *
               C28199) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C1987 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C1983 -
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C1988 -
           (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
            C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
               C1984) *
              C92183 * C92067 * C2709 +
          ((C19822 * C1388 + C19667 * C1605 + C19823 * C3432 + C19668 * C3662 +
            C19824 * C8413 + C19669 * C8767 + C19825 * C18733 +
            C19670 * C19091) *
               C1988 -
           ((C19825 * C18736 + C19670 * C19092 + C19824 * C8418 +
             C19669 * C8769 + C19823 * C3439 + C19668 * C3665 + C19822 * C1397 +
             C19667 * C1614) *
                C1983 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C1987) +
           (C19822 * C1396 + C19667 * C1613 + C19823 * C3440 + C19668 * C3666 +
            C19824 * C8419 + C19669 * C8770 + C19825 * C18737 +
            C19670 * C19093) *
               C1984) *
              C92183 * C92067 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1987 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C1983 -
            (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
               C92183 * C4097 +
           ((C4355 + C4354) * C1987 + (C4357 + C4356) * C1983 -
            (C4359 + C4358) * C1988 - (C4361 + C4360) * C1984) *
               C92183 * C4098 +
           (C4366 * C1987 + C4367 * C1983 - (C4363 + C4362) * C1988 -
            (C4365 + C4364) * C1984) *
               C92183 * C4099) *
              C2709 +
          (((C7757 + C7758) * C1988 -
            ((C4328 * C3439 + C92171 * C3665 + C4327 * C1397 + C92336 * C1614) *
                 C1983 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C1987) +
            (C7759 + C7760) * C1984) *
               C92183 * C4097 +
           ((C7761 + C7762) * C1988 -
            ((C7760 + C7759) * C1983 + (C7758 + C7757) * C1987) +
            (C7763 + C7764) * C1984) *
               C92183 * C4098 +
           ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                C1988 -
            ((C7764 + C7763) * C1983 + (C7762 + C7761) * C1987) +
            (C4327 * C1394 + C92336 * C1611 + C4328 * C3442 + C92171 * C3668) *
                C1984) *
               C92183 * C4099) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1987 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C1983 -
            (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
               C28197 +
           ((C34993 + C34994) * C1987 + (C34995 + C34996) * C1983 -
            (C7758 + C7757) * C1988 - (C7760 + C7759) * C1984) *
               C28198 +
           (C35005 * C1987 + C35006 * C1983 - (C36747 + C36748) * C1988 -
            (C36749 + C36750) * C1984) *
               C28199) *
              C92067 * C2709 +
          (((C7757 + C7758) * C1988 -
            ((C34996 + C34995) * C1983 + (C34994 + C34993) * C1987) +
            (C7759 + C7760) * C1984) *
               C28197 +
           ((C36748 + C36747) * C1988 -
            ((C35000 + C34999) * C1983 + (C34998 + C34997) * C1987) +
            (C36750 + C36749) * C1984) *
               C28198 +
           ((C4327 * C10809 + C92336 * C11127 + C4328 * C32368 +
             C92171 * C32694) *
                C1988 -
            ((C35001 + C35002) * C1983 + (C35003 + C35004) * C1987) +
            (C4327 * C10815 + C92336 * C11130 + C4328 * C32370 +
             C92171 * C32695) *
                C1984) *
               C28199) *
              C92067 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
             C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
                C181 +
            (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
             C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
                C92105) *
               C92183 * C92067 * C1983 -
           ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
             C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
                C92105 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C181) *
               C92183 * C92067 * C1984) *
              C2709 +
          (((C19822 * C1388 + C19667 * C1605 + C19823 * C3432 + C19668 * C3662 +
             C19824 * C8413 + C19669 * C8767 + C19825 * C18733 +
             C19670 * C19091) *
                C181 +
            (C19822 * C1470 + C19667 * C1671 + C19823 * C3514 + C19668 * C3736 +
             C19824 * C8541 + C19669 * C8871 + C19825 * C18863 +
             C19670 * C19193) *
                C92105) *
               C92183 * C92067 * C1984 -
           ((C19825 * C18862 + C19670 * C19192 + C19824 * C8540 +
             C19669 * C8870 + C19823 * C3513 + C19668 * C3735 + C19822 * C1471 +
             C19667 * C1672) *
                C92105 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C181) *
               C92183 * C92067 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C181 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C92105) *
                C92183 * C4097 +
            ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
                C4098 +
            C4464 * C4099) *
               C1983 -
           (((C4459 + C4460) * C92105 + (C4363 + C4362) * C181) * C92183 *
                C4099 +
            ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C92183 *
                C4098 +
            ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C92183 *
                C4097) *
               C1984) *
              C2709 +
          ((((C7757 + C7758) * C181 + (C7871 + C7872) * C92105) * C92183 *
                C4097 +
            ((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C92183 *
                C4098 +
            ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                 C181 +
             (C4327 * C1468 + C92336 * C1669 + C4328 * C3516 + C92171 * C3738) *
                 C92105) *
                C92183 * C4099) *
               C1984 -
           (((C7874 + C7873) * C92105 + (C7762 + C7761) * C181) * C92183 *
                C4099 +
            ((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C92183 *
                C4098 +
            ((C4328 * C3513 + C92171 * C3735 + C4327 * C1471 + C92336 * C1672) *
                 C92105 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C181) *
                C92183 * C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C181 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C92105) *
                C28197 +
            ((C34993 + C34994) * C181 + (C35098 + C35099) * C92105) * C28198 +
            C35106 * C28199) *
               C92067 * C1983 -
           (((C36853 + C36854) * C92105 + (C36747 + C36748) * C181) * C28199 +
            ((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C28198 +
            ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C28197) *
               C92067 * C1984) *
              C2709 +
          ((((C7757 + C7758) * C181 + (C7871 + C7872) * C92105) * C28197 +
            ((C36748 + C36747) * C181 + (C36854 + C36853) * C92105) * C28198 +
            ((C4327 * C10809 + C92336 * C11127 + C4328 * C32368 +
              C92171 * C32694) *
                 C181 +
             (C4327 * C10931 + C92336 * C11243 + C4328 * C32482 +
              C92171 * C32804) *
                 C92105) *
                C28199) *
               C92067 * C1984 -
           (((C35102 + C35103) * C92105 + (C35003 + C35004) * C181) * C28199 +
            ((C35101 + C35100) * C92105 + (C34998 + C34997) * C181) * C28198 +
            ((C35099 + C35098) * C92105 + (C34994 + C34993) * C181) * C28197) *
               C92067 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2849 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C2709 -
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C2850 -
           (C19825 * C18976 + C19670 * C19292 + C19824 * C8653 +
            C19669 * C8971 + C19823 * C3587 + C19668 * C3805 + C19822 * C1540 +
            C19667 * C1727) *
               C2710) *
              C92183 * C92067 * C92105 * C1983 +
          ((C19822 * C1388 + C19667 * C1605 + C19823 * C3432 + C19668 * C3662 +
            C19824 * C8413 + C19669 * C8767 + C19825 * C18733 +
            C19670 * C19091) *
               C2850 -
           ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
             C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
                C2709 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C2849) +
           (C19822 * C1539 + C19667 * C1729 + C19823 * C3588 + C19668 * C3806 +
            C19824 * C8654 + C19669 * C8972 + C19825 * C18977 +
            C19670 * C19293) *
               C2710) *
              C92183 * C92067 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2849 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C2709 -
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C2850 -
            (C4328 * C3587 + C92171 * C3805 + C4327 * C1540 + C92336 * C1727) *
                C2710) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2849 + (C4552 + C4553) * C2709 -
            (C7758 + C7757) * C2850 - (C7981 + C7982) * C2710) *
               C92183 * C4098 +
           (C4366 * C2849 + C4558 * C2709 - (C7762 + C7761) * C2850 -
            (C7983 + C7984) * C2710) *
               C92183 * C4099) *
              C92105 * C1983 +
          (((C7757 + C7758) * C2850 -
            ((C4553 + C4552) * C2709 + (C4354 + C4355) * C2849) +
            (C7982 + C7981) * C2710) *
               C92183 * C4097 +
           ((C7761 + C7762) * C2850 -
            ((C4555 + C4554) * C2709 + (C4359 + C4358) * C2849) +
            (C7984 + C7983) * C2710) *
               C92183 * C4098 +
           ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                C2850 -
            ((C4556 + C4557) * C2709 + (C4363 + C4362) * C2849) +
            (C4327 * C1537 + C92336 * C1733 + C4328 * C3590 + C92171 * C3808) *
                C2710) *
               C92183 * C4099) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2849 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C2709 -
            (C34994 + C34993) * C2850 - (C35194 + C35195) * C2710) *
               C28197 +
           ((C34993 + C34994) * C2849 + (C35195 + C35194) * C2709 -
            (C34998 + C34997) * C2850 - (C35197 + C35196) * C2710) *
               C28198 +
           (C35005 * C2849 + C35200 * C2709 - (C35003 + C35004) * C2850 -
            (C35199 + C35198) * C2710) *
               C28199) *
              C92067 * C92105 * C1983 +
          (((C7757 + C7758) * C2850 -
            ((C4553 + C4552) * C2709 + (C4354 + C4355) * C2849) +
            (C7982 + C7981) * C2710) *
               C28197 +
           ((C36748 + C36747) * C2850 -
            ((C7981 + C7982) * C2709 + (C7758 + C7757) * C2849) +
            (C36957 + C36958) * C2710) *
               C28198 +
           ((C4327 * C10809 + C92336 * C11127 + C4328 * C32368 +
             C92171 * C32694) *
                C2850 -
            ((C36958 + C36957) * C2709 + (C36747 + C36748) * C2849) +
            (C4327 * C11029 + C92336 * C11340 + C4328 * C32588 +
             C92171 * C32910) *
                C2710) *
               C28199) *
              C92067 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92067 * C19667 +
           (C7130 + C7131 - C7132 - C7133) * C92067 * C19668 +
           (C17490 + C17491 - C17492 - C17493) * C92067 * C19669 +
           (C21615 + C21616 - C21617 - C21618) * C92067 * C19670) *
              C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92183 * C1796) * C1983 +
             (C554 * C1389 + C92183 * C1788) * C1987) +
            C3191 * C1984) *
               C92067 * C19667 +
           (C8091 * C1988 - (C9087 * C1983 + C9088 * C1987) + C8092 * C1984) *
               C92067 * C19668 +
           (C18425 * C1988 - (C19403 * C1983 + C19404 * C1987) +
            C18426 * C1984) *
               C92067 * C19669 +
           ((C554 * C18733 + C92183 * C19393) * C1988 -
            ((C554 * C18736 + C92183 * C19394) * C1983 +
             (C554 * C18732 + C92183 * C19392) * C1987) +
            (C554 * C18737 + C92183 * C19395) * C1984) *
               C92067 * C19670) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C4098 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C4099) *
               C92336 +
           ((C7130 + C7131 - C7132 - C7133) * C4097 +
            (C7134 + C7135 - C7136 - C7137) * C4098 +
            (C7138 + C7139 - C7140 - C7141) * C4099) *
               C92171) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92183 * C1796) * C1983 +
              (C554 * C1389 + C92183 * C1788) * C1987) +
             C3191 * C1984) *
                C4097 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C4098 +
            (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
                C4099) *
               C92336 +
           ((C8091 * C1988 -
             ((C554 * C3439 + C92183 * C3879) * C1983 +
              (C554 * C3431 + C92183 * C3875) * C1987) +
             C8092 * C1984) *
                C4097 +
            (C8093 * C1988 - (C8092 * C1983 + C8091 * C1987) + C8094 * C1984) *
                C4098 +
            ((C554 * C3434 + C92183 * C3878) * C1988 -
             (C8094 * C1983 + C8093 * C1987) +
             (C554 * C3442 + C92183 * C3882) * C1984) *
                C4099) *
               C92171) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C1987 +
            (C28648 * C117 + C28197 * C561 + C28649 * C1397 + C28198 * C1796 +
             C28650 * C1406 + C28199 * C1797) *
                C1983 -
            (C28676 + C28677 + C28678) * C1988 -
            (C28679 + C28680 + C28681) * C1984) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C1987 +
            (C34428 + C34429 + C34430) * C1983 -
            (C31074 + C31073 + C31072) * C1988 -
            (C31077 + C31076 + C31075) * C1984) *
               C92067 * C92171) *
              C2709 +
          (((C32051 + C32052 + C32053) * C1988 -
            ((C28650 * C10814 + C28199 * C11431 + C28649 * C1406 +
              C28198 * C1797 + C28648 * C1397 + C28197 * C1796) *
                 C1983 +
             (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
              C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                 C1987) +
            (C32054 + C32055 + C32056) * C1984) *
               C92067 * C92336 +
           ((C28648 * C3432 + C28197 * C3876 + C28649 * C5720 + C28198 * C6200 +
             C28650 * C32368 + C28199 * C33012) *
                C1988 -
            ((C28650 * C24527 + C28199 * C25134 + C28649 * C5725 +
              C28198 * C6202 + C28648 * C3439 + C28197 * C3879) *
                 C1983 +
             (C28650 * C24524 + C28199 * C25132 + C28649 * C5719 +
              C28198 * C6199 + C28648 * C3431 + C28197 * C3875) *
                 C1987) +
            (C28648 * C3440 + C28197 * C3880 + C28649 * C5726 + C28198 * C6203 +
             C28650 * C32370 + C28199 * C33013) *
                C1984) *
               C92067 * C92171) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C181 +
                       (C554 * C182 + C92183 * C641) * C92105) *
                          C92067 * C19667 +
                      (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
                      (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
                      (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
                         C1983 -
                     ((C15930 * C92105 + C15841 * C181) * C92067 * C19670 +
                      (C15123 + C15122) * C92067 * C19669 +
                      (C4711 + C4710) * C92067 * C19668 +
                      (C664 + C648) * C92067 * C19667) *
                         C1984) *
                        C2709 +
                    (((C3263 + C3275) * C92067 * C19667 +
                      (C8193 + C8201) * C92067 * C19668 +
                      (C18525 + C18529) * C92067 * C19669 +
                      ((C554 * C18733 + C92183 * C19393) * C181 +
                       (C554 * C18863 + C92183 * C19505) * C92105) *
                          C92067 * C19670) *
                         C1984 -
                     (((C554 * C18862 + C92183 * C19504) * C92105 +
                       (C554 * C18732 + C92183 * C19392) * C181) *
                          C92067 * C19670 +
                      (C19509 * C92105 + C19404 * C181) * C92067 * C19669 +
                      (C9194 * C92105 + C9088 * C181) * C92067 * C19668 +
                      ((C554 * C1471 + C92183 * C1854) * C92105 +
                       (C554 * C1389 + C92183 * C1788) * C181) *
                          C92067 * C19667) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92183 * C555) * C181 +
                        (C554 * C182 + C92183 * C641) * C92105) *
                           C4097 +
                       (C648 + C664) * C4098 + C668 * C4099) *
                          C92336 +
                      ((C5444 * C181 + C5545 * C92105) * C4097 +
                       (C4710 + C4711) * C4098 + C4716 * C4099) *
                          C92171) *
                         C1983 -
                     (((C4714 + C4715) * C4099 + (C4713 + C4712) * C4098 +
                       (C4711 + C4710) * C4097) *
                          C92171 +
                      ((C666 + C654) * C4099 + (C665 + C651) * C4098 +
                       (C664 + C648) * C4097) *
                          C92336) *
                         C1984) *
                        C2709 +
                    ((((C3263 + C3275) * C4097 + (C3266 + C3276) * C4098 +
                       (C3269 + C3277) * C4099) *
                          C92336 +
                      ((C8193 + C8201) * C4097 + (C8196 + C8202) * C4098 +
                       ((C554 * C3434 + C92183 * C3878) * C181 +
                        (C554 * C3516 + C92183 * C3952) * C92105) *
                           C4099) *
                          C92171) *
                         C1984 -
                     (((C8202 + C8196) * C4099 + (C8201 + C8193) * C4098 +
                       ((C554 * C3513 + C92183 * C3949) * C92105 +
                        (C554 * C3431 + C92183 * C3875) * C181) *
                           C4097) *
                          C92171 +
                      ((C3276 + C3266) * C4099 + (C3275 + C3263) * C4098 +
                       ((C554 * C1471 + C92183 * C1854) * C92105 +
                        (C554 * C1389 + C92183 * C1788) * C181) *
                           C4097) *
                          C92336) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                        C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                           C181 +
                       (C28648 * C182 + C28197 * C641 + C28649 * C1471 +
                        C28198 * C1854 + C28650 * C1472 + C28199 * C1855) *
                           C92105) *
                          C92067 * C92336 +
                      ((C34425 + C34426 + C34427) * C181 +
                       (C34525 + C34524 + C34523) * C92105) *
                          C92067 * C92171) *
                         C1983 -
                     (((C31182 + C31183 + C31184) * C92105 +
                       (C31074 + C31073 + C31072) * C181) *
                          C92067 * C92171 +
                      ((C28776 + C28775 + C28774) * C92105 +
                       (C28676 + C28677 + C28678) * C181) *
                          C92067 * C92336) *
                         C1984) *
                        C2709 +
                    ((((C32051 + C32052 + C32053) * C181 +
                       (C32161 + C32162 + C32163) * C92105) *
                          C92067 * C92336 +
                      ((C28648 * C3432 + C28197 * C3876 + C28649 * C5720 +
                        C28198 * C6200 + C28650 * C32368 + C28199 * C33012) *
                           C181 +
                       (C28648 * C3514 + C28197 * C3950 + C28649 * C5806 +
                        C28198 * C6280 + C28650 * C32482 + C28199 * C33112) *
                           C92105) *
                          C92067 * C92171) *
                         C1984 -
                     (((C28650 * C24638 + C28199 * C25210 + C28649 * C5805 +
                        C28198 * C6279 + C28648 * C3513 + C28197 * C3949) *
                           C92105 +
                       (C28650 * C24524 + C28199 * C25132 + C28649 * C5719 +
                        C28198 * C6199 + C28648 * C3431 + C28197 * C3875) *
                           C181) *
                          C92067 * C92171 +
                      ((C28650 * C10930 + C28199 * C11508 + C28649 * C1472 +
                        C28198 * C1855 + C28648 * C1471 + C28197 * C1854) *
                           C92105 +
                       (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                        C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                           C181) *
                          C92067 * C92336) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C92067 * C19667 +
                     (C9296 + C9297 - C9298 - C9302) * C92067 * C19668 +
                     (C19610 + C19611 - C19612 - C19616) * C92067 * C19669 +
                     (C15843 * C2849 + C16018 * C2709 -
                      (C554 * C18732 + C92183 * C19392) * C2850 -
                      (C554 * C18976 + C92183 * C19607) * C2710) *
                         C92067 * C19670) *
                        C92105 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C92067 * C19667 +
                     (C8303 - (C8302 + C8301) + C8313) * C92067 * C19668 +
                     (C18630 - (C18629 + C18628) + C18634) * C92067 * C19669 +
                     ((C554 * C18733 + C92183 * C19393) * C2850 -
                      (C16017 * C2709 + C15841 * C2849) +
                      (C554 * C18977 + C92183 * C19608) * C2710) *
                         C92067 * C19670) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C4098 +
                      (C3350 + C3351 - C3352 - C3364) * C4099) *
                         C92336 +
                     ((C5444 * C2849 + C5638 * C2709 -
                       (C554 * C3431 + C92183 * C3875) * C2850 -
                       (C554 * C3587 + C92183 * C4019) * C2710) *
                          C4097 +
                      (C8301 + C8302 - C8303 - C8313) * C4098 +
                      (C8306 + C8307 - C8308 - C8314) * C4099) *
                         C92171) *
                        C92105 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C4097 +
                      (C3352 - (C3351 + C3350) + C3364) * C4098 +
                      (C3357 - (C3356 + C3355) + C3365) * C4099) *
                         C92336 +
                     ((C8303 - (C8302 + C8301) + C8313) * C4097 +
                      (C8308 - (C8307 + C8306) + C8314) * C4098 +
                      ((C554 * C3434 + C92183 * C3878) * C2850 -
                       (C2638 * C2709 + C2472 * C2849) +
                       (C554 * C3590 + C92183 * C4022) * C2710) *
                          C4099) *
                         C92171) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C2849 +
                      (C28648 * C245 + C28197 * C719 + C28649 * C1540 +
                       C28198 * C1909 + C28650 * C1541 + C28199 * C1910) *
                          C2709 -
                      (C28650 * C10808 + C28199 * C11428 + C28649 * C1390 +
                       C28198 * C1789 + C28648 * C1389 + C28197 * C1788) *
                          C2850 -
                      (C28650 * C11028 + C28199 * C11585 + C28649 * C1541 +
                       C28198 * C1910 + C28648 * C1540 + C28197 * C1909) *
                          C2710) *
                         C92067 * C92336 +
                     ((C34425 + C34426 + C34427) * C2849 +
                      (C34615 + C34616 + C34617) * C2709 -
                      (C28650 * C24524 + C28199 * C25132 + C28649 * C5719 +
                       C28198 * C6199 + C28648 * C3431 + C28197 * C3875) *
                          C2850 -
                      (C28650 * C24740 + C28199 * C25286 + C28649 * C5885 +
                       C28198 * C6356 + C28648 * C3587 + C28197 * C4019) *
                          C2710) *
                         C92067 * C92171) *
                        C92105 * C1983 +
                    (((C32051 + C32052 + C32053) * C2850 -
                      ((C28868 + C28867 + C28866) * C2709 +
                       (C28676 + C28677 + C28678) * C2849) +
                      (C32270 + C32269 + C32268) * C2710) *
                         C92067 * C92336 +
                     ((C28648 * C3432 + C28197 * C3876 + C28649 * C5720 +
                       C28198 * C6200 + C28650 * C32368 + C28199 * C33012) *
                          C2850 -
                      ((C31289 + C31290 + C31291) * C2709 +
                       (C31074 + C31073 + C31072) * C2849) +
                      (C28648 * C3588 + C28197 * C4020 + C28649 * C5886 +
                       C28198 * C6357 + C28650 * C32588 + C28199 * C33211) *
                          C2710) *
                         C92067 * C92171) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92336 +
           ((C4902 + C4903 + C4904) * C801 + (C4905 + C4906 + C4907) * C92084) *
               C92171) *
              C92183 * C92116 * C798 -
          (((C4908 + C4909 + C4910) * C92084 + (C4911 + C4912 + C4913) * C801) *
               C92171 +
           ((C4907 + C4906 + C4905) * C92084 + (C4904 + C4903 + C4902) * C801) *
               C92336) *
              C92183 * C92116 * C799 +
          (((C4913 + C4912 + C4911) * C801 + (C4910 + C4909 + C4908) * C92084) *
               C92336 +
           ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
             C4104 * C4867 + C4099 * C4870) *
                C801 +
            (C4102 * C4871 + C4097 * C4874 + C4103 * C4872 + C4098 * C4875 +
             C4104 * C4873 + C4099 * C4876) *
                C92084) *
               C92171) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
            C4104 * C119 + C4099 * C127) *
               C93 -
           (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
            C4102 * C108 + C4097 * C114) *
               C105 -
           (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
            C4102 * C118 + C4097 * C126) *
               C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
            C4104 * C111 + C4099 * C121) *
               C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
            C4104 * C122 + C4099 * C129) *
               C95) *
              C92336 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
            C4104 * C803 + C4099 * C815) *
               C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C4098 * C828 +
            C4104 * C811 + C4099 * C827) *
               C93 -
           (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
            C4102 * C804 + C4097 * C816) *
               C105 -
           (C4104 * C810 + C4099 * C826 + C4103 * C811 + C4098 * C827 +
            C4102 * C812 + C4097 * C828) *
               C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
            C4104 * C1989 + C4099 * C1990) *
               C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C4098 * C826 +
            C4104 * C1991 + C4099 * C1992) *
               C95) *
              C92171) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C104 +
           (C19671 * C117 + C92067 * C125) * C93 -
           (C19671 * C108 + C92067 * C114) * C105 -
           (C19671 * C118 + C92067 * C126) * C94 +
           (C19671 * C109 + C92067 * C115) * C106 +
           (C19671 * C119 + C92067 * C127) * C95) *
              C19667 +
          ((C19671 * C805 + C92067 * C817) * C104 +
           (C19671 * C813 + C92067 * C829) * C93 -
           (C19671 * C804 + C92067 * C816) * C105 -
           (C19671 * C812 + C92067 * C828) * C94 +
           (C19671 * C803 + C92067 * C815) * C106 +
           (C19671 * C811 + C92067 * C827) * C95) *
              C19668 +
          ((C19671 * C806 + C92067 * C818) * C104 +
           (C19671 * C822 + C92067 * C830) * C93 -
           (C19671 * C807 + C92067 * C819) * C105 -
           (C19671 * C823 + C92067 * C831) * C94 +
           (C19671 * C808 + C92067 * C820) * C106 +
           (C19671 * C824 + C92067 * C832) * C95) *
              C19669 +
          ((C19671 * C4865 + C92067 * C4868) * C104 +
           (C19671 * C4871 + C92067 * C4874) * C93 -
           (C19671 * C4866 + C92067 * C4869) * C105 -
           (C19671 * C4872 + C92067 * C4875) * C94 +
           (C19671 * C4867 + C92067 * C4870) * C106 +
           (C19671 * C4873 + C92067 * C4876) * C95) *
              C19670) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C19667 +
           (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
              C92183 * C92116 * C798 -
          ((C20161 + C20162) * C19670 + (C20160 + C20159) * C19669 +
           (C20158 + C20157) * C19668 + (C20156 + C20155) * C19667) *
              C92183 * C92116 * C799 +
          (C20163 * C19667 + C20164 * C19668 + (C20162 + C20161) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C801 +
            (C19671 * C20128 + C92067 * C20129) * C92084) *
               C19670) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C92336 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C92171) *
              C28197 +
          ((C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C92336 +
           (C22432 * C104 + C22431 * C93 - C25399 * C105 - C25400 * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C92171) *
              C28198 +
          ((C24556 * C104 + C24555 * C93 -
            (C19671 * C1391 + C92067 * C1403) * C105 -
            (C19671 * C1407 + C92067 * C1415) * C94 +
            (C19671 * C1392 + C92067 * C1404) * C106 +
            (C19671 * C1408 + C92067 * C1416) * C95) *
               C92336 +
           (C24554 * C104 + C24553 * C93 -
            (C19671 * C5720 + C92067 * C5723) * C105 -
            (C19671 * C5726 + C92067 * C5729) * C94 +
            (C19671 * C5721 + C92067 * C5724) * C106 +
            (C19671 * C5727 + C92067 * C5730) * C95) *
               C92171) *
              C28199) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92336 +
            (C20155 + C20156) * C92171) *
               C28197 +
           ((C24557 + C24558) * C92336 + C27233 * C92171) * C28198 +
           ((C24564 + C24563) * C92336 + (C24562 + C24561) * C92171) * C28199) *
              C92116 * C798 -
          (((C24559 + C24560) * C92171 + (C24561 + C24562) * C92336) * C28199 +
           (C27234 * C92171 + C27235 * C92336) * C28198 +
           ((C20158 + C20157) * C92171 + (C20156 + C20155) * C92336) * C28197) *
              C92116 * C799 +
          ((C20163 * C92336 + C20164 * C92171) * C28197 +
           (C23767 * C92336 + (C22434 + C22433) * C92171) * C28198 +
           ((C24560 + C24559) * C92336 +
            ((C19671 * C20682 + C92067 * C20683) * C801 +
             (C19671 * C20684 + C92067 * C20685) * C92084) *
                C92171) *
               C28199) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
            C4104 * C184 + C4099 * C190) *
               C798 -
           (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
           (C4913 + C4912 + C4911) * C886 + (C5009 + C5010 + C5011) * C800) *
              C92336 +
          ((C4902 + C4903 + C4904) * C884 + (C5008 + C5007 + C5006) * C798 -
           (C4911 + C4912 + C4913) * C885 - (C5011 + C5010 + C5009) * C799 +
           (C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
            C4104 * C4867 + C4099 * C4870) *
               C886 +
           (C4102 * C4987 + C4097 * C4990 + C4103 * C4988 + C4098 * C4991 +
            C4104 * C4989 + C4099 * C4992) *
               C800) *
              C92171) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92336 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
             C4104 * C803 + C4099 * C815) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C4098 * C897 +
             C4104 * C888 + C4099 * C896) *
                C92105) *
               C92171) *
              C92183 * C93 -
          (((C4104 * C887 + C4099 * C895 + C4103 * C888 + C4098 * C896 +
             C4102 * C889 + C4097 * C897) *
                C92105 +
            (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
             C4102 * C804 + C4097 * C816) *
                C181) *
               C92171 +
           ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
             C4102 * C183 + C4097 * C189) *
                C92105 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C181) *
               C92336) *
              C92183 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
             C4104 * C186 + C4099 * C192) *
                C92105) *
               C92336 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
             C4104 * C1989 + C4099 * C1990) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C4098 * C895 +
             C4104 * C2061 + C4099 * C2062) *
                C92105) *
               C92171) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C181 +
            (C19671 * C890 + C92067 * C898) * C92105) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C181 +
            (C19671 * C891 + C92067 * C899) * C92105) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C181 +
            (C19671 * C4987 + C92067 * C4990) * C92105) *
               C19670) *
              C92183 * C93 -
          (((C19671 * C4988 + C92067 * C4991) * C92105 +
            (C19671 * C4866 + C92067 * C4869) * C181) *
               C19670 +
           ((C19671 * C892 + C92067 * C900) * C92105 +
            (C19671 * C807 + C92067 * C819) * C181) *
               C19669 +
           ((C19671 * C889 + C92067 * C897) * C92105 +
            (C19671 * C804 + C92067 * C816) * C181) *
               C19668 +
           ((C19671 * C183 + C92067 * C189) * C92105 +
            (C19671 * C108 + C92067 * C114) * C181) *
               C19667) *
              C92183 * C94 +
          (((C19671 * C109 + C92067 * C115) * C181 +
            (C19671 * C184 + C92067 * C190) * C92105) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C181 +
            (C19671 * C888 + C92067 * C896) * C92105) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C181 +
            (C19671 * C893 + C92067 * C901) * C92105) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C181 +
            (C19671 * C4989 + C92067 * C4992) * C92105) *
               C19670) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C884 +
           (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
           C20225 * C799 + C20149 * C886 + C20226 * C800) *
              C19667 +
          (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
           C20151 * C886 + C20227 * C800) *
              C19668 +
          (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
           C20154 * C886 + C20228 * C800) *
              C19669 +
          (C20151 * C884 + C20227 * C798 - C20154 * C885 - C20228 * C799 +
           (C19671 * C20126 + C92067 * C20127) * C886 +
           (C19671 * C20214 + C92067 * C20215) * C800) *
              C19670) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C92336 +
            (C20147 * C181 + C20225 * C92105) * C92171) *
               C28197 +
           ((C24643 + C24663) * C92336 + (C24646 + C24647) * C92171) * C28198 +
           ((C24658 + C24666) * C92336 + (C24655 + C24665) * C92171) * C28199) *
              C93 -
          ((((C19671 * C5806 + C92067 * C5809) * C92105 +
             (C19671 * C5720 + C92067 * C5723) * C181) *
                C92171 +
            ((C19671 * C1473 + C92067 * C1481) * C92105 +
             (C19671 * C1391 + C92067 * C1403) * C181) *
                C92336) *
               C28199 +
           ((C26439 + C26440) * C92171 + (C26445 + C26443) * C92336) * C28198 +
           ((C21267 * C92105 + C21183 * C181) * C92171 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C92336) *
               C28197) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C92336 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C92171) *
               C28197 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C92336 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C92171) *
               C28198 +
           (((C19671 * C1392 + C92067 * C1404) * C181 +
             (C19671 * C1474 + C92067 * C1482) * C92105) *
                C92336 +
            ((C19671 * C5721 + C92067 * C5724) * C181 +
             (C19671 * C5807 + C92067 * C5810) * C92105) *
                C92171) *
               C28199) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C92336 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C92171) *
              C28197 +
          ((C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
            C22430 * C886 + C22514 * C800) *
               C92336 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C92171) *
              C28198 +
          ((C24556 * C884 + C24662 * C798 - C24554 * C885 - C24661 * C799 +
            C24552 * C886 + C24660 * C800) *
               C92336 +
           (C24554 * C884 + C24661 * C798 - C24552 * C885 - C24660 * C799 +
            (C19671 * C20682 + C92067 * C20683) * C886 +
            (C19671 * C20736 + C92067 * C20737) * C800) *
               C92171) *
              C28199) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92336 +
           ((C4902 + C4903 + C4904) * C244 + (C5104 + C5105 + C5106) * C92116) *
               C92171) *
              C92183 * C798 -
          (((C5107 + C5108 + C5109) * C92116 + (C4911 + C4912 + C4913) * C244) *
               C92171 +
           ((C5106 + C5105 + C5104) * C92116 + (C4904 + C4903 + C4902) * C244) *
               C92336) *
              C92183 * C799 +
          (((C4913 + C4912 + C4911) * C244 + (C5109 + C5108 + C5107) * C92116) *
               C92336 +
           ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
             C4104 * C4867 + C4099 * C4870) *
                C244 +
            (C4102 * C5085 + C4097 * C5088 + C4103 * C5086 + C4098 * C5089 +
             C4104 * C5087 + C4099 * C5090) *
                C92116) *
               C92171) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92336 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
             C4104 * C803 + C4099 * C815) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C4098 * C963 +
             C4104 * C954 + C4099 * C962) *
                C92116) *
               C92171) *
              C92183 * C92105 * C93 -
          (((C4104 * C953 + C4099 * C961 + C4103 * C954 + C4098 * C962 +
             C4102 * C955 + C4097 * C963) *
                C92116 +
            (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
             C4102 * C804 + C4097 * C816) *
                C244) *
               C92171 +
           ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
             C4102 * C246 + C4097 * C252) *
                C92116 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C244) *
               C92336) *
              C92183 * C92105 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
             C4104 * C249 + C4099 * C255) *
                C92116) *
               C92336 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
             C4104 * C1989 + C4099 * C1990) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C4098 * C961 +
             C4104 * C2129 + C4099 * C2130) *
                C92116) *
               C92171) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C244 +
            (C19671 * C956 + C92067 * C964) * C92116) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C244 +
            (C19671 * C957 + C92067 * C965) * C92116) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C244 +
            (C19671 * C5085 + C92067 * C5088) * C92116) *
               C19670) *
              C92183 * C92105 * C93 -
          (((C19671 * C5086 + C92067 * C5089) * C92116 +
            (C19671 * C4866 + C92067 * C4869) * C244) *
               C19670 +
           ((C19671 * C958 + C92067 * C966) * C92116 +
            (C19671 * C807 + C92067 * C819) * C244) *
               C19669 +
           ((C19671 * C955 + C92067 * C963) * C92116 +
            (C19671 * C804 + C92067 * C816) * C244) *
               C19668 +
           ((C19671 * C246 + C92067 * C252) * C92116 +
            (C19671 * C108 + C92067 * C114) * C244) *
               C19667) *
              C92183 * C92105 * C94 +
          (((C19671 * C109 + C92067 * C115) * C244 +
            (C19671 * C247 + C92067 * C253) * C92116) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C244 +
            (C19671 * C954 + C92067 * C962) * C92116) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C244 +
            (C19671 * C959 + C92067 * C967) * C92116) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C244 +
            (C19671 * C5087 + C92067 * C5090) * C92116) *
               C19670) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           (C20281 + C20297) * C19668 + C20301 * C19669 + C20302 * C19670) *
              C92183 * C798 -
          ((C20300 + C20292) * C19670 + (C20299 + C20287) * C19669 +
           (C20298 + C20284) * C19668 + (C20297 + C20281) * C19667) *
              C92183 * C799 +
          (C20301 * C19667 + C20302 * C19668 + (C20292 + C20300) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C244 +
            (C19671 * C20278 + C92067 * C20279) * C92116) *
               C19670) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92336 +
            (C20281 + C20297) * C92171) *
               C28197 +
           ((C24549 * C244 + C24753 * C92116) * C92336 +
            (C23916 + C23917) * C92171) *
               C28198 +
           ((C24556 * C244 + C24754 * C92116) * C92336 +
            (C24554 * C244 + C24755 * C92116) * C92171) *
               C28199) *
              C92105 * C93 -
          ((((C19671 * C5886 + C92067 * C5889) * C92116 +
             (C19671 * C5720 + C92067 * C5723) * C244) *
                C92171 +
            ((C19671 * C1542 + C92067 * C1550) * C92116 +
             (C19671 * C1391 + C92067 * C1403) * C244) *
                C92336) *
               C28199 +
           ((C25617 + C25609) * C92171 +
            (C26546 * C92116 + C26335 * C244) * C92336) *
               C28198 +
           ((C21348 + C21336) * C92171 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C92336) *
               C28197) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C92336 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C92171) *
               C28197 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C92336 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C92171) *
               C28198 +
           (((C19671 * C1392 + C92067 * C1404) * C244 +
             (C19671 * C1543 + C92067 * C1551) * C92116) *
                C92336 +
            ((C19671 * C5721 + C92067 * C5724) * C244 +
             (C19671 * C5887 + C92067 * C5890) * C92116) *
                C92171) *
               C28199) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C92336 +
            (C20281 + C20297) * C92171) *
               C28197 +
           ((C24549 * C244 + C24753 * C92116) * C92336 +
            (C23916 + C23917) * C92171) *
               C28198 +
           ((C24556 * C244 + C24754 * C92116) * C92336 +
            (C34101 + C34102) * C92171) *
               C28199) *
              C798 -
          (((C34103 + C34104) * C92171 + (C34102 + C34101) * C92336) * C28199 +
           ((C23919 + C23918) * C92171 + (C23917 + C23916) * C92336) * C28198 +
           ((C20298 + C20284) * C92171 + (C20297 + C20281) * C92336) * C28197) *
              C799 +
          ((C20301 * C92336 + C20302 * C92171) * C28197 +
           (C23922 * C92336 + (C23921 + C23920) * C92171) * C28198 +
           ((C34104 + C34103) * C92336 +
            ((C19671 * C20682 + C92067 * C20683) * C244 +
             (C19671 * C20788 + C92067 * C20789) * C92116) *
                C92171) *
               C28199) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C4097 +
           ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
               C4098 +
           (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
              C92116 * C798 -
          (((C4328 * C824 + C92171 * C1033 + C4327 * C811 + C92336 * C1028) *
                C92084 +
            (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                C801) *
               C92183 * C4099 +
           ((C4328 * C823 + C92171 * C1032 + C4327 * C812 + C92336 * C1029) *
                C92084 +
            (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                C801) *
               C92183 * C4098 +
           ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                C92084 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C801) *
               C92183 * C4097) *
              C92116 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C801 +
            (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                C92084) *
               C92183 * C4097 +
           ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C801 +
            (C4327 * C823 + C92336 * C1032 + C4328 * C4872 + C92171 * C5187) *
                C92084) *
               C92183 * C4098 +
           ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
                C801 +
            (C4327 * C824 + C92336 * C1033 + C4328 * C4873 + C92171 * C5188) *
                C92084) *
               C92183 * C4099) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C104 +
           (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
               C93 -
           (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
           C4367 * C95) *
              C92183 * C4097 +
          ((C4355 + C4354) * C104 + (C4357 + C4356) * C93 -
           (C4359 + C4358) * C105 - (C4361 + C4360) * C94 +
           (C4362 + C4363) * C106 + (C4364 + C4365) * C95) *
              C92183 * C4098 +
          (C4366 * C104 + C4367 * C93 - (C4363 + C4362) * C105 -
           (C4365 + C4364) * C94 +
           (C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
               C106 +
           (C4327 * C122 + C92336 * C318 + C4328 * C1991 + C92171 * C2198) *
               C95) *
              C92183 * C4099) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C104 +
          (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
           C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
              C93 -
          (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
           C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
              C105 -
          (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
           C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
              C94 +
          (C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
           C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
              C106 +
          (C19822 * C119 + C19667 * C316 + C19823 * C811 + C19668 * C1028 +
           C19824 * C824 + C19669 * C1033 + C19825 * C4873 + C19670 * C5188) *
              C95) *
         C92183 * C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C801 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C92084) *
              C92183 * C92067 * C92116 * C798 -
          ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
            C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
            C19667 * C1030) *
               C92084 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C801) *
              C92183 * C92067 * C92116 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C801 +
           (C19822 * C822 + C19667 * C1031 + C19823 * C4871 + C19668 * C5186 +
            C19824 * C15277 + C19669 * C15595 + C19825 * C20128 +
            C19670 * C20353) *
               C92084) *
              C92183 * C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C104 +
           (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
               C93 -
           (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
           C4367 * C95) *
              C28197 +
          ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
               C104 +
           (C4327 * C1397 + C92336 * C1614 + C4328 * C3439 + C92171 * C3665) *
               C93 -
           (C7758 + C7757) * C105 - (C7760 + C7759) * C94 +
           (C7761 + C7762) * C106 + (C7763 + C7764) * C95) *
              C28198 +
          ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
               C104 +
           (C4327 * C1406 + C92336 * C1615 + C4328 * C5725 + C92171 * C5968) *
               C93 -
           (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
               C105 -
           (C4328 * C5726 + C92171 * C5969 + C4327 * C1407 + C92336 * C1616) *
               C94 +
           (C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
               C106 +
           (C4327 * C1408 + C92336 * C1617 + C4328 * C5727 + C92171 * C5970) *
               C95) *
              C28199) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C801 +
            (C4327 * C1397 + C92336 * C1614 + C4328 * C3439 + C92171 * C3665) *
                C92084) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C801 +
            (C4327 * C1406 + C92336 * C1615 + C4328 * C5725 + C92171 * C5968) *
                C92084) *
               C28199) *
              C92067 * C92116 * C798 -
          (((C4328 * C16099 + C92171 * C16335 + C4327 * C5725 +
             C92336 * C5968) *
                C92084 +
            (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
             C92336 * C5965) *
                C801) *
               C28199 +
           ((C4328 * C8418 + C92171 * C8769 + C4327 * C3439 + C92336 * C3665) *
                C92084 +
            (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                C801) *
               C28198 +
           ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                C92084 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C801) *
               C28197) *
              C92067 * C92116 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C801 +
            (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                C92084) *
               C28197 +
           ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
             C92171 * C19090) *
                C801 +
            (C4327 * C8418 + C92336 * C8769 + C4328 * C18736 +
             C92171 * C19092) *
                C92084) *
               C28198 +
           ((C4327 * C16095 + C92336 * C16333 + C4328 * C20682 +
             C92171 * C20840) *
                C801 +
            (C4327 * C16099 + C92336 * C16335 + C4328 * C20684 +
             C92171 * C20841) *
                C92084) *
               C28199) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C884 +
           (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
               C798 -
           (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
               C885 -
           (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
               C799 +
           (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
               C886 +
           (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
               C800) *
              C92183 * C4097 +
          ((C4355 + C4354) * C884 + (C4455 + C4456) * C798 -
           (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
               C885 -
           (C4328 * C892 + C92171 * C1088 + C4327 * C889 + C92336 * C1087) *
               C799 +
           (C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
               C886 +
           (C4327 * C892 + C92336 * C1088 + C4328 * C4988 + C92171 * C5264) *
               C800) *
              C92183 * C4098 +
          (C4366 * C884 + C4461 * C798 -
           (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
               C885 -
           (C4328 * C893 + C92171 * C1090 + C4327 * C888 + C92336 * C1089) *
               C799 +
           (C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
               C886 +
           (C4327 * C893 + C92336 * C1090 + C4328 * C4989 + C92171 * C5265) *
               C800) *
              C92183 * C4099) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C4097 +
           ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
               C4098 +
           C4464 * C4099) *
              C93 -
          (((C4459 + C4460) * C92105 + (C4363 + C4362) * C181) * C92183 *
               C4099 +
           ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C92183 *
               C4098 +
           ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C92183 *
               C4097) *
              C94 +
          (C4464 * C4097 +
           ((C4362 + C4363) * C181 + (C4460 + C4459) * C92105) * C92183 *
               C4098 +
           ((C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                C181 +
            (C4327 * C186 + C92336 * C398 + C4328 * C2061 + C92171 * C2283) *
                C92105) *
               C92183 * C4099) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C181 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C92105) *
              C92183 * C92067 * C93 -
          ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
            C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
               C92105 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C181) *
              C92183 * C92067 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C181 +
           (C19822 * C184 + C19667 * C396 + C19823 * C888 + C19668 * C1089 +
            C19824 * C893 + C19669 * C1090 + C19825 * C4989 + C19670 * C5265) *
               C92105) *
              C92183 * C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C884 +
          (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
           C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
              C798 -
          (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 + C19669 * C5183 +
           C19823 * C806 + C19668 * C1023 + C19822 * C805 + C19667 * C1022) *
              C885 -
          (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 + C19669 * C5263 +
           C19823 * C891 + C19668 * C1086 + C19822 * C890 + C19667 * C1085) *
              C799 +
          (C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
           C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
           C19670 * C20352) *
              C886 +
          (C19822 * C891 + C19667 * C1086 + C19823 * C4987 + C19668 * C5263 +
           C19824 * C15396 + C19669 * C15671 + C19825 * C20214 +
           C19670 * C20404) *
              C800) *
         C92183 * C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C181 +
            (C4327 * C1471 + C92336 * C1672 + C4328 * C3513 + C92171 * C3735) *
                C92105) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C181 +
            (C4327 * C1472 + C92336 * C1673 + C4328 * C5805 + C92171 * C6045) *
                C92105) *
               C28199) *
              C92067 * C93 -
          (((C4328 * C5806 + C92171 * C6046 + C4327 * C1473 + C92336 * C1674) *
                C92105 +
            (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                C181) *
               C28199 +
           ((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C28198 +
           ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C28197) *
              C92067 * C94 +
          (C4463 * C28197 +
           ((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C28198 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C181 +
            (C4327 * C1474 + C92336 * C1675 + C4328 * C5807 + C92171 * C6047) *
                C92105) *
               C28199) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C884 +
           (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
               C798 -
           (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
               C885 -
           (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
               C799 +
           (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
               C886 +
           (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
               C800) *
              C28197 +
          ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
               C884 +
           (C4327 * C1471 + C92336 * C1672 + C4328 * C3513 + C92171 * C3735) *
               C798 -
           (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
               C885 -
           (C4328 * C8540 + C92171 * C8870 + C4327 * C3513 + C92336 * C3735) *
               C799 +
           (C4327 * C8412 + C92336 * C8766 + C4328 * C18732 + C92171 * C19090) *
               C886 +
           (C4327 * C8540 + C92336 * C8870 + C4328 * C18862 + C92171 * C19192) *
               C800) *
              C28198 +
          ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
               C884 +
           (C4327 * C1472 + C92336 * C1673 + C4328 * C5805 + C92171 * C6045) *
               C798 -
           (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 + C92336 * C5965) *
               C885 -
           (C4328 * C16177 + C92171 * C16411 + C4327 * C5805 + C92336 * C6045) *
               C799 +
           (C4327 * C16095 + C92336 * C16333 + C4328 * C20682 +
            C92171 * C20840) *
               C886 +
           (C4327 * C16177 + C92336 * C16411 + C4328 * C20736 +
            C92171 * C20892) *
               C800) *
              C28199) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C4097 +
           ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
               C4098 +
           C4561 * C4099) *
              C798 -
          (((C4328 * C959 + C92171 * C1149 + C4327 * C954 + C92336 * C1144) *
                C92116 +
            (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                C244) *
               C92183 * C4099 +
           ((C4328 * C958 + C92171 * C1148 + C4327 * C955 + C92336 * C1145) *
                C92116 +
            (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                C244) *
               C92183 * C4098 +
           ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                C92116 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C244) *
               C92183 * C4097) *
              C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C244 +
            (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                C92116) *
               C92183 * C4097 +
           ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C244 +
            (C4327 * C958 + C92336 * C1148 + C4328 * C5086 + C92171 * C5341) *
                C92116) *
               C92183 * C4098 +
           ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
                C244 +
            (C4327 * C959 + C92336 * C1149 + C4328 * C5087 + C92171 * C5342) *
                C92116) *
               C92183 * C4099) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C4097 +
           ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
               C4098 +
           C4561 * C4099) *
              C92105 * C93 -
          (((C4556 + C4557) * C92116 + (C4363 + C4362) * C244) * C92183 *
               C4099 +
           ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C92183 *
               C4098 +
           ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C92183 *
               C4097) *
              C92105 * C94 +
          (C4561 * C4097 +
           ((C4362 + C4363) * C244 + (C4557 + C4556) * C92116) * C92183 *
               C4098 +
           ((C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                C244 +
            (C4327 * C249 + C92336 * C478 + C4328 * C2129 + C92171 * C2371) *
                C92116) *
               C92183 * C4099) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C92105 * C93 -
          ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
            C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
               C92116 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C244) *
              C92183 * C92067 * C92105 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C244 +
           (C19822 * C247 + C19667 * C476 + C19823 * C954 + C19668 * C1144 +
            C19824 * C959 + C19669 * C1149 + C19825 * C5087 + C19670 * C5342) *
               C92116) *
              C92183 * C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C798 -
          ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
            C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
            C19667 * C1146) *
               C92116 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C244) *
              C92183 * C92067 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C244 +
           (C19822 * C957 + C19667 * C1147 + C19823 * C5085 + C19668 * C5340 +
            C19824 * C15493 + C19669 * C15747 + C19825 * C20278 +
            C19670 * C20455) *
               C92116) *
              C92183 * C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C244 +
            (C4327 * C1540 + C92336 * C1727 + C4328 * C3587 + C92171 * C3805) *
                C92116) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C244 +
            (C4327 * C1541 + C92336 * C1728 + C4328 * C5885 + C92171 * C6122) *
                C92116) *
               C28199) *
              C92067 * C92105 * C93 -
          (((C4328 * C5886 + C92171 * C6123 + C4327 * C1542 + C92336 * C1730) *
                C92116 +
            (C4328 * C5720 + C92171 * C5966 + C4327 * C1391 + C92336 * C1608) *
                C244) *
               C28199 +
           ((C7981 + C7982) * C92116 + (C7758 + C7757) * C244) * C28198 +
           ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C28197) *
              C92067 * C92105 * C94 +
          (C4560 * C28197 +
           ((C7761 + C7762) * C244 + (C7984 + C7983) * C92116) * C28198 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C244 +
            (C4327 * C1543 + C92336 * C1732 + C4328 * C5887 + C92171 * C6124) *
                C92116) *
               C28199) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C28197 +
           ((C4327 * C1389 + C92336 * C1606 + C4328 * C3431 + C92171 * C3661) *
                C244 +
            (C4327 * C1540 + C92336 * C1727 + C4328 * C3587 + C92171 * C3805) *
                C92116) *
               C28198 +
           ((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C244 +
            (C4327 * C1541 + C92336 * C1728 + C4328 * C5885 + C92171 * C6122) *
                C92116) *
               C28199) *
              C92067 * C798 -
          (((C4328 * C16255 + C92171 * C16487 + C4327 * C5885 +
             C92336 * C6122) *
                C92116 +
            (C4328 * C16095 + C92171 * C16333 + C4327 * C5719 +
             C92336 * C5965) *
                C244) *
               C28199 +
           ((C4328 * C8653 + C92171 * C8971 + C4327 * C3587 + C92336 * C3805) *
                C92116 +
            (C4328 * C8412 + C92171 * C8766 + C4327 * C3431 + C92336 * C3661) *
                C244) *
               C28198 +
           ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                C92116 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C244) *
               C28197) *
              C92067 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C244 +
            (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                C92116) *
               C28197 +
           ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
             C92171 * C19090) *
                C244 +
            (C4327 * C8653 + C92336 * C8971 + C4328 * C18976 +
             C92171 * C19292) *
                C92116) *
               C28198 +
           ((C4327 * C16095 + C92336 * C16333 + C4328 * C20682 +
             C92171 * C20840) *
                C244 +
            (C4327 * C16255 + C92336 * C16487 + C4328 * C20788 +
             C92171 * C20943) *
                C92116) *
               C28199) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C4097 +
                      (C584 * C801 + C585 * C92084) * C4098 +
                      (C586 * C801 + C587 * C92084) * C4099) *
                         C92336 +
                     ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                      (C5430 + C5431) * C4099) *
                         C92171) *
                        C92116 * C798 -
                    (((C5454 + C5455) * C4099 + (C5456 + C5457) * C4098 +
                      (C5458 + C5459) * C4097) *
                         C92171 +
                     ((C5431 + C5430) * C4099 + (C5429 + C5428) * C4098 +
                      (C5453 + C5452) * C4097) *
                         C92336) *
                        C92116 * C799 +
                    (((C5459 + C5458) * C4097 + (C5457 + C5456) * C4098 +
                      (C5455 + C5454) * C4099) *
                         C92336 +
                     (((C554 * C4865 + C92183 * C5417) * C801 +
                       (C554 * C4871 + C92183 * C5420) * C92084) *
                          C4097 +
                      ((C554 * C4866 + C92183 * C5418) * C801 +
                       (C554 * C4872 + C92183 * C5421) * C92084) *
                          C4098 +
                      ((C554 * C4867 + C92183 * C5419) * C801 +
                       (C554 * C4873 + C92183 * C5422) * C92084) *
                          C4099) *
                         C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C104 +
                      (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                      C585 * C94 + C586 * C106 + C587 * C95) *
                         C4097 +
                     (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
                      C588 * C106 + C589 * C95) *
                         C4098 +
                     (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
                      C590 * C106 + C591 * C95) *
                         C4099) *
                        C92336 +
                    (((C554 * C805 + C92183 * C1204) * C104 +
                      (C554 * C813 + C92183 * C1212) * C93 - C2468 * C105 -
                      C2469 * C94 + C2470 * C106 + C2471 * C95) *
                         C4097 +
                     (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
                      C2472 * C106 + C2473 * C95) *
                         C4098 +
                     (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
                      (C554 * C1989 + C92183 * C2453) * C106 +
                      (C554 * C1991 + C92183 * C2454) * C95) *
                         C4099) *
                        C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C554 * C107 + C92183 * C555) * C104 +
                     (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                     C585 * C94 + C586 * C106 + C587 * C95) *
                        C92067 * C19667 +
                    (C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
                     C2470 * C106 + C2471 * C95) *
                        C92067 * C19668 +
                    (C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
                     C5447 * C106 + C5446 * C95) *
                        C92067 * C19669 +
                    (C15843 * C104 + C15842 * C93 - C15841 * C105 -
                     C15840 * C94 + (C554 * C4867 + C92183 * C5419) * C106 +
                     (C554 * C4873 + C92183 * C5422) * C95) *
                        C92067 * C19670) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C801 +
                      (C554 * C117 + C92183 * C561) * C92084) *
                         C92067 * C19667 +
                     (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                     C20515 * C19670) *
                        C92116 * C798 -
                    ((C20518 + C20519) * C92067 * C19670 +
                     (C15847 + C15848) * C92067 * C19669 +
                     (C5458 + C5459) * C92067 * C19668 +
                     (C5453 + C5452) * C92067 * C19667) *
                        C92116 * C799 +
                    (C20509 * C19667 + C20515 * C19668 +
                     (C20519 + C20518) * C92067 * C19669 +
                     ((C554 * C20126 + C92183 * C20506) * C801 +
                      (C554 * C20128 + C92183 * C20507) * C92084) *
                         C92067 * C19670) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                      C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                         C104 +
                     (C28648 * C117 + C28197 * C561 + C28649 * C1397 +
                      C28198 * C1796 + C28650 * C1406 + C28199 * C1797) *
                         C93 -
                     (C28676 + C28677 + C28678) * C105 -
                     (C28679 + C28680 + C28681) * C94 +
                     (C28682 + C28683 + C28684) * C106 +
                     (C28685 + C28686 + C28687) * C95) *
                        C92067 * C92336 +
                    ((C28648 * C805 + C28197 * C1204 + C28649 * C3431 +
                      C28198 * C3875 + C28650 * C5719 + C28199 * C6199) *
                         C104 +
                     (C28648 * C813 + C28197 * C1212 + C28649 * C3439 +
                      C28198 * C3879 + C28650 * C5725 + C28199 * C6202) *
                         C93 -
                     (C31074 + C31073 + C31072) * C105 -
                     (C31077 + C31076 + C31075) * C94 +
                     (C28648 * C803 + C28197 * C1202 + C28649 * C3433 +
                      C28198 * C3877 + C28650 * C5721 + C28199 * C6201) *
                         C106 +
                     (C28648 * C811 + C28197 * C1210 + C28649 * C3441 +
                      C28198 * C3881 + C28650 * C5727 + C28199 * C6204) *
                         C95) *
                        C92067 * C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 +
                       C28198 * C1788 + C28650 * C1390 + C28199 * C1789) *
                          C801 +
                      (C28648 * C117 + C28197 * C561 + C28649 * C1397 +
                       C28198 * C1796 + C28650 * C1406 + C28199 * C1797) *
                          C92084) *
                         C92067 * C92336 +
                     ((C34425 + C34426 + C34427) * C801 +
                      (C34428 + C34429 + C34430) * C92084) *
                         C92067 * C92171) *
                        C92116 * C798 -
                    (((C34431 + C34432 + C34433) * C92084 +
                      (C34434 + C34435 + C34436) * C801) *
                         C92067 * C92171 +
                     ((C34430 + C34429 + C34428) * C92084 +
                      (C34427 + C34426 + C34425) * C801) *
                         C92067 * C92336) *
                        C92116 * C799 +
                    (((C34436 + C34435 + C34434) * C801 +
                      (C34433 + C34432 + C34431) * C92084) *
                         C92067 * C92336 +
                     ((C28648 * C4865 + C28197 * C5417 + C28649 * C18732 +
                       C28198 * C19392 + C28650 * C20682 + C28199 * C20994) *
                          C801 +
                      (C28648 * C4871 + C28197 * C5420 + C28649 * C18736 +
                       C28198 * C19394 + C28650 * C20684 + C28199 * C20995) *
                          C92084) *
                         C92067 * C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C4098 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C5447 * C886 + C5548 * C800) *
               C4099) *
              C92336 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            (C554 * C4865 + C92183 * C5417) * C886 +
            (C554 * C4987 + C92183 * C5533) * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            (C554 * C4866 + C92183 * C5418) * C886 +
            (C554 * C4988 + C92183 * C5534) * C800) *
               C4098 +
           (C2470 * C884 + C2557 * C798 - C5447 * C885 - C5548 * C799 +
            (C554 * C4867 + C92183 * C5419) * C886 +
            (C554 * C4989 + C92183 * C5535) * C800) *
               C4099) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C4097 +
            (C648 + C664) * C4098 + C668 * C4099) *
               C92336 +
           (((C554 * C805 + C92183 * C1204) * C181 +
             (C554 * C890 + C92183 * C1267) * C92105) *
                C4097 +
            (C4710 + C4711) * C4098 + C4716 * C4099) *
               C92171) *
              C93 -
          (((C4714 + C4715) * C4099 + (C4713 + C4712) * C4098 +
            (C4711 + C4710) * C4097) *
               C92171 +
           ((C666 + C654) * C4099 + (C665 + C651) * C4098 +
            (C664 + C648) * C4097) *
               C92336) *
              C94 +
          ((C668 * C4097 + C669 * C4098 + (C659 + C667) * C4099) * C92336 +
           (C4716 * C4097 + (C4715 + C4714) * C4098 +
            ((C554 * C1989 + C92183 * C2453) * C181 +
             (C554 * C2061 + C92183 * C2539) * C92105) *
                C4099) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C92067 * C19667 +
           (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
           (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
           (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
              C93 -
          ((C15930 * C92105 + C15841 * C181) * C92067 * C19670 +
           (C15123 + C15122) * C92067 * C19669 +
           (C4711 + C4710) * C92067 * C19668 +
           (C664 + C648) * C92067 * C19667) *
              C94 +
          (C668 * C92067 * C19667 + C4716 * C92067 * C19668 +
           (C15125 + C15124) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C181 +
            (C554 * C4989 + C92183 * C5535) * C92105) *
               C92067 * C19670) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
           C5451 * C886 + C5546 * C800) *
              C92067 * C19667 +
          (C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
           C15843 * C886 + C15929 * C800) *
              C92067 * C19668 +
          (C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
           C20517 * C886 + C20573 * C800) *
              C92067 * C19669 +
          (C15843 * C884 + C15929 * C798 - C20517 * C885 - C20573 * C799 +
           (C554 * C20126 + C92183 * C20506) * C886 +
           (C554 * C20214 + C92183 * C20569) * C800) *
              C92067 * C19670) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C181 +
            (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
             C28650 * C1472 + C28199 * C1855) *
                C92105) *
               C92067 * C92336 +
           ((C28648 * C805 + C28197 * C1204 + C28649 * C3431 + C28198 * C3875 +
             C28650 * C5719 + C28199 * C6199) *
                C181 +
            (C28648 * C890 + C28197 * C1267 + C28649 * C3513 + C28198 * C3949 +
             C28650 * C5805 + C28199 * C6279) *
                C92105) *
               C92067 * C92171) *
              C93 -
          (((C31182 + C31183 + C31184) * C92105 +
            (C31074 + C31073 + C31072) * C181) *
               C92067 * C92171 +
           ((C28776 + C28775 + C28774) * C92105 +
            (C28676 + C28677 + C28678) * C181) *
               C92067 * C92336) *
              C94 +
          (((C28682 + C28683 + C28684) * C181 +
            (C28779 + C28778 + C28777) * C92105) *
               C92067 * C92336 +
           ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
             C28650 * C5721 + C28199 * C6201) *
                C181 +
            (C28648 * C888 + C28197 * C1271 + C28649 * C3515 + C28198 * C3951 +
             C28650 * C5807 + C28199 * C6281) *
                C92105) *
               C92067 * C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
            C28650 * C1390 + C28199 * C1789) *
               C884 +
           (C28648 * C182 + C28197 * C641 + C28649 * C1471 + C28198 * C1854 +
            C28650 * C1472 + C28199 * C1855) *
               C798 -
           (C34427 + C34426 + C34425) * C885 -
           (C34523 + C34524 + C34525) * C799 +
           (C34436 + C34435 + C34434) * C886 +
           (C34526 + C34527 + C34528) * C800) *
              C92067 * C92336 +
          ((C34425 + C34426 + C34427) * C884 +
           (C34525 + C34524 + C34523) * C798 -
           (C34434 + C34435 + C34436) * C885 -
           (C34528 + C34527 + C34526) * C799 +
           (C28648 * C4865 + C28197 * C5417 + C28649 * C18732 +
            C28198 * C19392 + C28650 * C20682 + C28199 * C20994) *
               C886 +
           (C28648 * C4987 + C28197 * C5533 + C28649 * C18862 +
            C28198 * C19504 + C28650 * C20736 + C28199 * C21046) *
               C800) *
              C92067 * C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C4097 +
            (C726 + C742) * C4098 + C746 * C4099) *
               C92336 +
           ((C5626 + C5642) * C4097 + (C2637 + C2643) * C4098 + C4791 * C4099) *
               C92171) *
              C798 -
          (((C5643 + C5631) * C4099 + (C5644 + C5634) * C4098 +
            (C5645 + C5637) * C4097) *
               C92171 +
           ((C2642 + C2634) * C4099 + (C2643 + C2637) * C4098 +
            (C5642 + C5626) * C4097) *
               C92336) *
              C799 +
          (((C5637 + C5645) * C4097 + (C5634 + C5644) * C4098 +
            (C5631 + C5643) * C4099) *
               C92336 +
           (((C554 * C4865 + C92183 * C5417) * C244 +
             (C554 * C5085 + C92183 * C5622) * C92116) *
                C4097 +
            ((C554 * C4866 + C92183 * C5418) * C244 +
             (C554 * C5086 + C92183 * C5623) * C92116) *
                C4098 +
            ((C554 * C4867 + C92183 * C5419) * C244 +
             (C554 * C5087 + C92183 * C5624) * C92116) *
                C4099) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C4097 +
            (C726 + C742) * C4098 + C746 * C4099) *
               C92336 +
           (((C554 * C805 + C92183 * C1204) * C244 +
             (C554 * C956 + C92183 * C1328) * C92116) *
                C4097 +
            (C2637 + C2643) * C4098 + C4791 * C4099) *
               C92171) *
              C92105 * C93 -
          (((C2641 + C2631) * C4099 + (C2642 + C2634) * C4098 +
            (C2643 + C2637) * C4097) *
               C92171 +
           ((C744 + C732) * C4099 + (C743 + C729) * C4098 +
            (C742 + C726) * C4097) *
               C92336) *
              C92105 * C94 +
          ((C746 * C4097 + C747 * C4098 + (C737 + C745) * C4099) * C92336 +
           (C4791 * C4097 + (C2631 + C2641) * C4098 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C4099) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C16007 * C92067 * C19669 +
           (C16014 + C16021) * C92067 * C19670) *
              C92105 * C93 -
          ((C16020 + C16011) * C92067 * C19670 + C17698 * C92067 * C19669 +
           C7348 * C92067 * C19668 + (C742 + C726) * C92067 * C19667) *
              C92105 * C94 +
          (C746 * C92067 * C19667 + C4791 * C92067 * C19668 +
           (C5631 + C5643) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C244 +
            (C554 * C5087 + C92183 * C5624) * C92116) *
               C92067 * C19670) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C20625 * C19669 +
           C20630 * C19670) *
              C798 -
          ((C20632 + C20629) * C92067 * C19670 +
           (C16021 + C16014) * C92067 * C19669 +
           (C5645 + C5637) * C92067 * C19668 +
           (C5642 + C5626) * C92067 * C19667) *
              C799 +
          (C20625 * C19667 + C20630 * C19668 +
           (C20629 + C20632) * C92067 * C19669 +
           ((C554 * C20126 + C92183 * C20506) * C244 +
            (C554 * C20278 + C92183 * C20623) * C92116) *
               C92067 * C19670) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92067 * C92336 +
           ((C28648 * C805 + C28197 * C1204 + C28649 * C3431 + C28198 * C3875 +
             C28650 * C5719 + C28199 * C6199) *
                C244 +
            (C28648 * C956 + C28197 * C1328 + C28649 * C3587 + C28198 * C4019 +
             C28650 * C5885 + C28199 * C6356) *
                C92116) *
               C92067 * C92171) *
              C92105 * C93 -
          (((C31289 + C31290 + C31291) * C92116 +
            (C31074 + C31073 + C31072) * C244) *
               C92067 * C92171 +
           ((C28868 + C28867 + C28866) * C92116 +
            (C28676 + C28677 + C28678) * C244) *
               C92067 * C92336) *
              C92105 * C94 +
          (((C28682 + C28683 + C28684) * C244 +
            (C28871 + C28870 + C28869) * C92116) *
               C92067 * C92336 +
           ((C28648 * C803 + C28197 * C1202 + C28649 * C3433 + C28198 * C3877 +
             C28650 * C5721 + C28199 * C6201) *
                C244 +
            (C28648 * C954 + C28197 * C1326 + C28649 * C3589 + C28198 * C4021 +
             C28650 * C5887 + C28199 * C6358) *
                C92116) *
               C92067 * C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28648 * C107 + C28197 * C555 + C28649 * C1389 + C28198 * C1788 +
             C28650 * C1390 + C28199 * C1789) *
                C244 +
            (C28648 * C245 + C28197 * C719 + C28649 * C1540 + C28198 * C1909 +
             C28650 * C1541 + C28199 * C1910) *
                C92116) *
               C92067 * C92336 +
           ((C34425 + C34426 + C34427) * C244 +
            (C34615 + C34616 + C34617) * C92116) *
               C92067 * C92171) *
              C798 -
          (((C34618 + C34619 + C34620) * C92116 +
            (C34434 + C34435 + C34436) * C244) *
               C92067 * C92171 +
           ((C34617 + C34616 + C34615) * C92116 +
            (C34427 + C34426 + C34425) * C244) *
               C92067 * C92336) *
              C799 +
          (((C34436 + C34435 + C34434) * C244 +
            (C34620 + C34619 + C34618) * C92116) *
               C92067 * C92336 +
           ((C28648 * C4865 + C28197 * C5417 + C28649 * C18732 +
             C28198 * C19392 + C28650 * C20682 + C28199 * C20994) *
                C244 +
            (C28648 * C5085 + C28197 * C5622 + C28649 * C18976 +
             C28198 * C19607 + C28650 * C20788 + C28199 * C21097) *
                C92116) *
               C92067 * C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C14523 +
                      (C21165 + C21166 - C21189 - C21190) * C14524 +
                      (C21171 + C21172 - C21191 - C21192) * C14525) *
                         C92337 +
                     ((C24549 * C1987 + C24550 * C1983 -
                       (C19671 * C1388 + C92067 * C1400) * C1988 -
                       (C19671 * C1396 + C92067 * C1412) * C1984) *
                          C14523 +
                      (C25387 + C25388 - C25403 - C25404) * C14524 +
                      (C25393 + C25394 - C25405 - C25406) * C14525) *
                         C92195) *
                        C92116 * C1985 +
                    (((C21189 - (C21166 + C21165) + C21190) * C14523 +
                      (C21191 - (C21172 + C21171) + C21192) * C14524 +
                      (C21193 - (C21178 + C21177) + C21194) * C14525) *
                         C92337 +
                     ((C25403 - (C25388 + C25387) + C25404) * C14523 +
                      (C25405 - (C25394 + C25393) + C25406) * C14524 +
                      ((C19671 * C18733 + C92067 * C18735) * C1988 -
                       (C22427 * C1983 + C22428 * C1987) +
                       (C19671 * C18737 + C92067 * C18739) * C1984) *
                          C14525) *
                         C92195) *
                        C92116 * C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                       C4098 * C114 + C4104 * C109 + C4099 * C115) *
                          C1987 +
                      (C4102 * C117 + C4097 * C125 + C4103 * C118 +
                       C4098 * C126 + C4104 * C119 + C4099 * C127) *
                          C1983 -
                      (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                       C4098 * C115 + C4102 * C108 + C4097 * C114) *
                          C1988 -
                      (C4104 * C120 + C4099 * C128 + C4103 * C119 +
                       C4098 * C127 + C4102 * C118 + C4097 * C126) *
                          C1984) *
                         C92157 * C92337 +
                     ((C10845 + C10846 + C10847) * C1987 +
                      (C10848 + C10849 + C10850) * C1983 -
                      (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 +
                       C4098 * C1399 + C4102 * C1388 + C4097 * C1400) *
                          C1988 -
                      (C4104 * C1394 + C4099 * C1410 + C4103 * C1395 +
                       C4098 * C1411 + C4102 * C1396 + C4097 * C1412) *
                          C1984) *
                         C92157 * C92195) *
                        C92116 * C1985 +
                    (((C6472 + C6471 + C6470) * C1988 -
                      ((C4907 + C4906 + C4905) * C1983 +
                       (C4904 + C4903 + C4902) * C1987) +
                      (C6475 + C6474 + C6473) * C1984) *
                         C92157 * C92337 +
                     ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 +
                       C4098 * C3437 + C4104 * C3434 + C4099 * C3438) *
                          C1988 -
                      ((C8437 + C8438 + C8439) * C1983 +
                       (C8440 + C8441 + C8442) * C1987) +
                      (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 +
                       C4098 * C3445 + C4104 * C3442 + C4099 * C3446) *
                          C1984) *
                         C92157 * C92195) *
                        C92116 * C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C19671 * C107 + C92067 * C113) * C1987 +
                      (C19671 * C117 + C92067 * C125) * C1983 -
                      (C19671 * C108 + C92067 * C114) * C1988 -
                      (C19671 * C118 + C92067 * C126) * C1984) *
                         C92157 * C38281 +
                     (C26329 + C26330 - C26337 - C26338) * C92157 * C38282 +
                     (C36425 + C36426 - C36433 - C36434) * C92157 * C38283 +
                     (C34714 * C1987 + C34713 * C1983 -
                      (C19671 * C10809 + C92067 * C10812) * C1988 -
                      (C19671 * C10815 + C92067 * C10818) * C1984) *
                         C92157 * C38284) *
                        C92116 * C1985 +
                    ((C21189 - (C21166 + C21165) + C21190) * C92157 * C38281 +
                     (C25403 - (C25388 + C25387) + C25404) * C92157 * C38282 +
                     (C35533 - (C35526 + C35525) + C35534) * C92157 * C38283 +
                     ((C19671 * C32368 + C92067 * C32369) * C1988 -
                      (C34711 * C1983 + C34712 * C1987) +
                      (C19671 * C32370 + C92067 * C32371) * C1984) *
                         C92157 * C38284) *
                        C92116 * C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2059 +
             (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
             C20225 * C1986) *
                C14523 +
            (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
             C20226 * C1986) *
                C14524 +
            (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 -
             C20227 * C1986) *
                C14525) *
               C92337 +
           ((C24549 * C2059 + C24659 * C1985 - C22432 * C2060 -
             C22513 * C1986) *
                C14523 +
            (C22432 * C2059 + C22513 * C1985 - C22430 * C2060 -
             C22514 * C1986) *
                C14524 +
            (C22430 * C2059 + C22514 * C1985 - C22428 * C2060 -
             C22515 * C1986) *
                C14525) *
               C92195) *
              C1983 +
          (((C21183 * C2060 -
             ((C19671 * C183 + C92067 * C189) * C1985 +
              (C19671 * C108 + C92067 * C114) * C2059) +
             C21267 * C1986) *
                C14523 +
            (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
             C21268 * C1986) *
                C14524 +
            (C21187 * C2060 - (C21268 * C1985 + C21185 * C2059) +
             C21269 * C1986) *
                C14525) *
               C92337 +
           ((C25399 * C2060 -
             ((C19671 * C1470 + C92067 * C1478) * C1985 +
              (C19671 * C1388 + C92067 * C1400) * C2059) +
             C25509 * C1986) *
                C14523 +
            (C25401 * C2060 - (C25509 * C1985 + C25399 * C2059) +
             C25510 * C1986) *
                C14524 +
            ((C19671 * C18733 + C92067 * C18735) * C2060 -
             (C25510 * C1985 + C25401 * C2059) +
             (C19671 * C18863 + C92067 * C18865) * C1986) *
                C14525) *
               C92195) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C2059 +
            (C10949 + C10950 + C10951) * C1985 -
            (C8440 + C8441 + C8442) * C2060 - (C8555 + C8554 + C8553) * C1986) *
               C92157 * C92195) *
              C1983 +
          (((C6472 + C6471 + C6470) * C2060 -
            ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
              C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6580 + C6581 + C6582) * C1986) *
               C92157 * C92337 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
             C4104 * C3434 + C4099 * C3438) *
                C2060 -
            ((C4104 * C1468 + C4099 * C1476 + C4103 * C1469 + C4098 * C1477 +
              C4102 * C1470 + C4097 * C1478) *
                 C1985 +
             (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
              C4102 * C1388 + C4097 * C1400) *
                 C2059) +
            (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 + C4098 * C3519 +
             C4104 * C3516 + C4099 * C3520) *
                C1986) *
               C92157 * C92195) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2059 +
            (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
            C20225 * C1986) *
               C92157 * C38281 +
           (C27334 + C27335 - C27336 - C27337) * C92157 * C38282 +
           (C37450 + C37451 - C37452 - C37453) * C92157 * C38283 +
           (C34714 * C2059 + C34807 * C1985 - C34712 * C2060 - C34806 * C1986) *
               C92157 * C38284) *
              C1983 +
          ((C21183 * C2060 -
            ((C19671 * C183 + C92067 * C189) * C1985 +
             (C19671 * C108 + C92067 * C114) * C2059) +
            C21267 * C1986) *
               C92157 * C38281 +
           (C25399 * C2060 - (C26444 * C1985 + C26335 * C2059) +
            C25509 * C1986) *
               C92157 * C38282 +
           (C35531 * C2060 - (C36538 * C1985 + C36431 * C2059) +
            C35635 * C1986) *
               C92157 * C38283 +
           ((C19671 * C32368 + C92067 * C32369) * C2060 -
            ((C19671 * C10931 + C92067 * C10934) * C1985 +
             (C19671 * C10809 + C92067 * C10812) * C2059) +
            (C19671 * C32482 + C92067 * C32483) * C1986) *
               C92157 * C38284) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[40] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C19671 * C107 + C92067 * C113) * C244 +
                        (C19671 * C245 + C92067 * C251) * C92116) *
                           C14523 +
                       (C20281 + C20297) * C14524 + C20301 * C14525) *
                          C92337 +
                      ((C24549 * C244 + C24753 * C92116) * C14523 +
                       (C23916 + C23917) * C14524 + C23922 * C14525) *
                          C92195) *
                         C1985 -
                     (((C23920 + C23921) * C14525 + (C23919 + C23918) * C14524 +
                       (C23917 + C23916) * C14523) *
                          C92195 +
                      ((C20299 + C20287) * C14525 + (C20298 + C20284) * C14524 +
                       (C20297 + C20281) * C14523) *
                          C92337) *
                         C1986) *
                        C1983 +
                    ((((C21336 + C21348) * C14523 + (C21339 + C21349) * C14524 +
                       (C21342 + C21350) * C14525) *
                          C92337 +
                      ((C25609 + C25617) * C14523 + (C25612 + C25618) * C14524 +
                       ((C19671 * C18733 + C92067 * C18735) * C244 +
                        (C19671 * C18977 + C92067 * C18979) * C92116) *
                           C14525) *
                          C92195) *
                         C1986 -
                     (((C25618 + C25612) * C14525 + (C25617 + C25609) * C14524 +
                       ((C19671 * C1539 + C92067 * C1547) * C92116 +
                        (C19671 * C1388 + C92067 * C1400) * C244) *
                           C14523) *
                          C92195 +
                      ((C21349 + C21339) * C14525 + (C21348 + C21336) * C14524 +
                       ((C19671 * C246 + C92067 * C252) * C92116 +
                        (C19671 * C108 + C92067 * C114) * C244) *
                           C14523) *
                          C92337) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                        C4098 * C114 + C4104 * C109 + C4099 * C115) *
                           C244 +
                       (C4102 * C245 + C4097 * C251 + C4103 * C246 +
                        C4098 * C252 + C4104 * C247 + C4099 * C253) *
                           C92116) *
                          C92157 * C92337 +
                      ((C10845 + C10846 + C10847) * C244 +
                       (C11049 + C11048 + C11047) * C92116) *
                          C92157 * C92195) *
                         C1985 -
                     (((C8666 + C8667 + C8668) * C92116 +
                       (C8440 + C8441 + C8442) * C244) *
                          C92157 * C92195 +
                      ((C5106 + C5105 + C5104) * C92116 +
                       (C4904 + C4903 + C4902) * C244) *
                          C92157 * C92337) *
                         C1986) *
                        C1983 +
                    ((((C6472 + C6471 + C6470) * C244 +
                       (C6687 + C6688 + C6689) * C92116) *
                          C92157 * C92337 +
                      ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 +
                        C4098 * C3437 + C4104 * C3434 + C4099 * C3438) *
                           C244 +
                       (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 +
                        C4098 * C3593 + C4104 * C3590 + C4099 * C3594) *
                           C92116) *
                          C92157 * C92195) *
                         C1986 -
                     (((C4104 * C1537 + C4099 * C1545 + C4103 * C1538 +
                        C4098 * C1546 + C4102 * C1539 + C4097 * C1547) *
                           C92116 +
                       (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 +
                        C4098 * C1399 + C4102 * C1388 + C4097 * C1400) *
                           C244) *
                          C92157 * C92195 +
                      ((C4104 * C248 + C4099 * C254 + C4103 * C247 +
                        C4098 * C253 + C4102 * C246 + C4097 * C252) *
                           C92116 +
                       (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                        C4098 * C115 + C4102 * C108 + C4097 * C114) *
                           C244) *
                          C92157 * C92337) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C244 +
                       (C19671 * C245 + C92067 * C251) * C92116) *
                          C92157 * C38281 +
                      (C24549 * C244 + C24753 * C92116) * C92157 * C38282 +
                      (C24556 * C244 + C24754 * C92116) * C92157 * C38283 +
                      (C34714 * C244 + C34891 * C92116) * C92157 * C38284) *
                         C1985 -
                     ((C34892 * C92116 + C34712 * C244) * C92157 * C38284 +
                      (C34102 + C34101) * C92157 * C38283 +
                      (C23917 + C23916) * C92157 * C38282 +
                      (C20297 + C20281) * C92157 * C38281) *
                         C1986) *
                        C1983 +
                    (((C21336 + C21348) * C92157 * C38281 +
                      (C25609 + C25617) * C92157 * C38282 +
                      (C35734 + C35738) * C92157 * C38283 +
                      ((C19671 * C32368 + C92067 * C32369) * C244 +
                       (C19671 * C32588 + C92067 * C32589) * C92116) *
                          C92157 * C38284) *
                         C1986 -
                     (((C19671 * C11029 + C92067 * C11032) * C92116 +
                       (C19671 * C10809 + C92067 * C10812) * C244) *
                          C92157 * C38284 +
                      (C36640 * C92116 + C36431 * C244) * C92157 * C38283 +
                      (C26546 * C92116 + C26335 * C244) * C92157 * C38282 +
                      ((C19671 * C246 + C92067 * C252) * C92116 +
                       (C19671 * C108 + C92067 * C114) * C244) *
                          C92157 * C38281) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92337 +
           ((C24859 + C24860 + C24861) * C1987 +
            (C24862 + C24863 + C24864) * C1983 -
            (C18105 + C18104 + C18103) * C1988 -
            (C18108 + C18107 + C18106) * C1984) *
               C92195) *
              C92067 * C92116 * C1985 +
          (((C17172 + C17173 + C17174) * C1988 -
            ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
              C14750 * C813 + C14523 * C1030) *
                 C1983 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C1987) +
            (C17175 + C17176 + C17177) * C1984) *
               C92337 +
           ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 + C14524 * C8767 +
             C14752 * C18733 + C14525 * C19091) *
                C1988 -
            ((C14752 * C18736 + C14525 * C19092 + C14751 * C8418 +
              C14524 * C8769 + C14750 * C3439 + C14523 * C3665) *
                 C1983 +
             (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
              C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                 C1987) +
            (C14750 * C3440 + C14523 * C3666 + C14751 * C8419 + C14524 * C8770 +
             C14752 * C18737 + C14525 * C19093) *
                C1984) *
               C92195) *
              C92067 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92337 +
            (C11153 * C1987 + C11154 * C1983 - C2934 * C1988 - C2935 * C1984) *
                C92195) *
               C4097 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92337 +
            (C2934 * C1987 + C2935 * C1983 - C2936 * C1988 - C2937 * C1984) *
                C92195) *
               C4098 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C92337 +
            (C2936 * C1987 + C2937 * C1983 - C2938 * C1988 - C2939 * C1984) *
                C92195) *
               C4099) *
              C92116 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92157 * C1030) * C1983 +
              (C307 * C805 + C92157 * C1022) * C1987) +
             C2213 * C1984) *
                C92337 +
            (C11989 * C1988 -
             ((C307 * C3439 + C92157 * C3665) * C1983 +
              (C307 * C3431 + C92157 * C3661) * C1987) +
             C11990 * C1984) *
                C92195) *
               C4097 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C92337 +
            (C11991 * C1988 - (C11990 * C1983 + C11989 * C1987) +
             C11992 * C1984) *
                C92195) *
               C4098 +
           ((C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
                C92337 +
            ((C307 * C3434 + C92157 * C3664) * C1988 -
             (C11992 * C1983 + C11991 * C1987) +
             (C307 * C3442 + C92157 * C3668) * C1984) *
                C92195) *
               C4099) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1987 +
            (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C38281 +
           (C12983 + C12984 - C12985 - C12986) * C38282 +
           (C31732 + C31733 - C31734 - C31735) * C38283 +
           (C29951 * C1987 + C29950 * C1983 - C29949 * C1988 - C29948 * C1984) *
               C38284) *
              C92067 * C92116 * C1985 +
          ((C2212 * C1988 -
            ((C307 * C813 + C92157 * C1030) * C1983 +
             (C307 * C805 + C92157 * C1022) * C1987) +
            C2213 * C1984) *
               C38281 +
           (C11989 * C1988 - (C13945 * C1983 + C13944 * C1987) +
            C11990 * C1984) *
               C38282 +
           (C30752 * C1988 - (C32704 * C1983 + C32703 * C1987) +
            C30753 * C1984) *
               C38283 +
           ((C307 * C32368 + C92157 * C32694) * C1988 -
            ((C307 * C24527 + C92157 * C24832) * C1983 +
             (C307 * C24524 + C92157 * C24830) * C1987) +
            (C307 * C32370 + C92157 * C32695) * C1984) *
               C38284) *
              C92067 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[40] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92337 +
                     ((C24859 + C24860 + C24861) * C2059 +
                      (C24959 + C24960 + C24961) * C1985 -
                      (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
                       C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                          C2060 -
                      (C14752 * C18862 + C14525 * C19192 + C14751 * C8540 +
                       C14524 * C8870 + C14750 * C3513 + C14523 * C3735) *
                          C1986) *
                         C92195) *
                        C92067 * C1983 +
                    (((C17172 + C17173 + C17174) * C2060 -
                      ((C14878 + C14877 + C14876) * C1985 +
                       (C14778 + C14779 + C14780) * C2059) +
                      (C17284 + C17283 + C17282) * C1986) *
                         C92337 +
                     ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                       C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                          C2060 -
                      ((C18215 + C18214 + C18213) * C1985 +
                       (C18105 + C18104 + C18103) * C2059) +
                      (C14750 * C3514 + C14523 * C3736 + C14751 * C8541 +
                       C14524 * C8871 + C14752 * C18863 + C14525 * C19193) *
                          C1986) *
                         C92195) *
                        C92067 * C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C92337 +
                      (C11153 * C2059 + C11258 * C1985 -
                       (C307 * C3431 + C92157 * C3661) * C2060 -
                       (C307 * C3513 + C92157 * C3735) * C1986) *
                          C92195) *
                         C4097 +
                     ((C2285 + C2286 - C2287 - C2303) * C92337 +
                      (C12091 + C12092 - C12093 - C12103) * C92195) *
                         C4098 +
                     ((C2290 + C2291 - C2292 - C2304) * C92337 +
                      (C12096 + C12097 - C12098 - C12104) * C92195) *
                         C4099) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C92337 +
                      (C12093 - (C12092 + C12091) + C12103) * C92195) *
                         C4097 +
                     ((C2292 - (C2291 + C2290) + C2304) * C92337 +
                      (C12098 - (C12097 + C12096) + C12104) * C92195) *
                         C4098 +
                     ((C2297 - (C2296 + C2295) + C2305) * C92337 +
                      ((C307 * C3434 + C92157 * C3664) * C2060 -
                       (C3018 * C1985 + C2938 * C2059) +
                       (C307 * C3516 + C92157 * C3738) * C1986) *
                          C92195) *
                         C4099) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2059 +
                      (C307 * C182 + C92157 * C394) * C1985 -
                      (C307 * C805 + C92157 * C1022) * C2060 -
                      (C307 * C890 + C92157 * C1085) * C1986) *
                         C38281 +
                     (C14046 + C14047 - C14048 - C14052) * C38282 +
                     (C32806 + C32807 - C32808 - C32812) * C38283 +
                     (C29951 * C2059 + C30041 * C1985 -
                      (C307 * C24524 + C92157 * C24830) * C2060 -
                      (C307 * C24638 + C92157 * C24944) * C1986) *
                         C38284) *
                        C92067 * C1983 +
                    ((C2287 - (C2286 + C2285) + C2303) * C38281 +
                     (C12093 - (C12092 + C12091) + C12103) * C38282 +
                     (C30854 - (C30853 + C30852) + C30858) * C38283 +
                     ((C307 * C32368 + C92157 * C32694) * C2060 -
                      (C30040 * C1985 + C29949 * C2059) +
                      (C307 * C32482 + C92157 * C32804) * C1986) *
                         C38284) *
                        C92067 * C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C244 +
             (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
              C14752 * C957 + C14525 * C1147) *
                 C92116) *
                C92337 +
            ((C24859 + C24860 + C24861) * C244 +
             (C25055 + C25054 + C25053) * C92116) *
                C92195) *
               C92067 * C1985 -
           (((C14752 * C18976 + C14525 * C19292 + C14751 * C8653 +
              C14524 * C8971 + C14750 * C3587 + C14523 * C3805) *
                 C92116 +
             (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
              C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                 C244) *
                C92195 +
            ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
              C14750 * C956 + C14523 * C1146) *
                 C92116 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C244) *
                C92337) *
               C92067 * C1986) *
              C1983 +
          ((((C17172 + C17173 + C17174) * C244 +
             (C17391 + C17390 + C17389) * C92116) *
                C92337 +
            ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
              C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                 C244 +
             (C14750 * C3588 + C14523 * C3806 + C14751 * C8654 +
              C14524 * C8972 + C14752 * C18977 + C14525 * C19293) *
                 C92116) *
                C92195) *
               C92067 * C1986 -
           (((C18320 + C18321 + C18322) * C92116 +
             (C18105 + C18104 + C18103) * C244) *
                C92195 +
            ((C14970 + C14969 + C14968) * C92116 +
             (C14778 + C14779 + C14780) * C244) *
                C92337) *
               C92067 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C244 +
              (C307 * C245 + C92157 * C474) * C92116) *
                 C92337 +
             (C11153 * C244 + C11351 * C92116) * C92195) *
                C4097 +
            ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
            C9762 * C4099) *
               C1985 -
           (((C12211 + C12205) * C92195 + (C2386 + C2378) * C92337) * C4099 +
            ((C12212 + C12208) * C92195 + (C2387 + C2381) * C92337) * C4098 +
            (((C307 * C3587 + C92157 * C3805) * C92116 +
              (C307 * C3431 + C92157 * C3661) * C244) *
                 C92195 +
             ((C307 * C956 + C92157 * C1146) * C92116 +
              (C307 * C805 + C92157 * C1022) * C244) *
                 C92337) *
                C4097) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C92337 + (C12208 + C12212) * C92195) * C4097 +
            ((C2378 + C2386) * C92337 + (C12205 + C12211) * C92195) * C4098 +
            ((C2375 + C2385) * C92337 +
             ((C307 * C3434 + C92157 * C3664) * C244 +
              (C307 * C3590 + C92157 * C3808) * C92116) *
                 C92195) *
                C4099) *
               C1986 -
           (((C9758 + C9759) * C92195 + (C499 + C487) * C92337) * C4099 +
            ((C9757 + C9756) * C92195 + (C498 + C484) * C92337) * C4098 +
            ((C9754 + C9753) * C92195 + (C497 + C481) * C92337) * C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C38281 +
            (C11153 * C244 + C11351 * C92116) * C38282 +
            (C11160 * C244 + C11352 * C92116) * C38283 +
            (C29951 * C244 + C30124 * C92116) * C38284) *
               C92067 * C1985 -
           (((C307 * C24740 + C92157 * C25038) * C92116 +
             (C307 * C24524 + C92157 * C24830) * C244) *
                C38284 +
            (C32914 * C92116 + C32703 * C244) * C38283 +
            (C14153 * C92116 + C13944 * C244) * C38282 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C38281) *
               C92067 * C1986) *
              C1983 +
          (((C2381 + C2387) * C38281 + (C12208 + C12212) * C38282 +
            (C30959 + C30961) * C38283 +
            ((C307 * C32368 + C92157 * C32694) * C244 +
             (C307 * C32588 + C92157 * C32910) * C92116) *
                C38284) *
               C92067 * C1986 -
           ((C30125 * C92116 + C29949 * C244) * C38284 +
            (C28572 + C28571) * C38283 + (C9754 + C9753) * C38282 +
            (C497 + C481) * C38281) *
               C92067 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C92067 * C14523 +
           ((C24243 + C24244) * C1987 + (C24245 + C24246) * C1983 -
            (C12328 + C12327) * C1988 - (C12330 + C12329) * C1984) *
               C92067 * C14524 +
           (C24255 * C1987 + C24256 * C1983 - (C26019 + C26020) * C1988 -
            (C26021 + C26022) * C1984) *
               C92067 * C14525) *
              C92116 * C1985 +
          (((C12327 + C12328) * C1988 -
            ((C24246 + C24245) * C1983 + (C24244 + C24243) * C1987) +
            (C12329 + C12330) * C1984) *
               C92067 * C14523 +
           ((C26020 + C26019) * C1988 -
            ((C24250 + C24249) * C1983 + (C24248 + C24247) * C1987) +
            (C26022 + C26021) * C1984) *
               C92067 * C14524 +
           ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
             C92195 * C19393) *
                C1988 -
            ((C24251 + C24252) * C1983 + (C24253 + C24254) * C1987) +
            (C9836 * C4872 + C92337 * C5421 + C9837 * C18737 +
             C92195 * C19395) *
                C1984) *
               C92067 * C14525) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C4097 +
           ((C9864 + C9863) * C1987 + (C9866 + C9865) * C1983 -
            (C9868 + C9867) * C1988 - (C9870 + C9869) * C1984) *
               C4098 +
           (C9875 * C1987 + C9876 * C1983 - (C9872 + C9871) * C1988 -
            (C9874 + C9873) * C1984) *
               C4099) *
              C92157 * C92116 * C1985 +
          (((C12327 + C12328) * C1988 -
            ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                 C1983 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C1987) +
            (C12329 + C12330) * C1984) *
               C4097 +
           ((C12331 + C12332) * C1988 -
            ((C12330 + C12329) * C1983 + (C12328 + C12327) * C1987) +
            (C12333 + C12334) * C1984) *
               C4098 +
           ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                C1988 -
            ((C12334 + C12333) * C1983 + (C12332 + C12331) * C1987) +
            (C9836 * C810 + C92337 * C1209 + C9837 * C3442 + C92195 * C3882) *
                C1984) *
               C4099) *
              C92157 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C1987 +
           (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
            C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
            C38284 * C11431) *
               C1983 -
           (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
            C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
            C38281 * C556) *
               C1988 -
           (C38588 * C10815 + C38284 * C11432 + C38587 * C1407 +
            C38283 * C1798 + C38586 * C1396 + C38282 * C1795 + C38585 * C118 +
            C38281 * C562) *
               C1984) *
              C92067 * C92157 * C92116 * C1985 +
          ((C38585 * C804 + C38281 * C1203 + C38586 * C3432 + C38282 * C3876 +
            C38587 * C5720 + C38283 * C6200 + C38588 * C32368 +
            C38284 * C33012) *
               C1988 -
           ((C38588 * C24527 + C38284 * C25134 + C38587 * C5725 +
             C38283 * C6202 + C38586 * C3439 + C38282 * C3879 + C38585 * C813 +
             C38281 * C1212) *
                C1983 +
            (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
             C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
             C38281 * C1204) *
                C1987) +
           (C38585 * C812 + C38281 * C1211 + C38586 * C3440 + C38282 * C3880 +
            C38587 * C5726 + C38283 * C6203 + C38588 * C32370 +
            C38284 * C33013) *
               C1984) *
              C92067 * C92157 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C24244 + C24243) * C2060 - (C24347 + C24348) * C1986) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2059 + (C24348 + C24347) * C1985 -
            (C24248 + C24247) * C2060 - (C24350 + C24349) * C1986) *
               C92067 * C14524 +
           (C24255 * C2059 + C24353 * C1985 - (C24253 + C24254) * C2060 -
            (C24352 + C24351) * C1986) *
               C92067 * C14525) *
              C1983 +
          (((C12327 + C12328) * C2060 -
            ((C9965 + C9964) * C1985 + (C9863 + C9864) * C2059) +
            (C12442 + C12441) * C1986) *
               C92067 * C14523 +
           ((C26020 + C26019) * C2060 -
            ((C12441 + C12442) * C1985 + (C12328 + C12327) * C2059) +
            (C26125 + C26126) * C1986) *
               C92067 * C14524 +
           ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
             C92195 * C19393) *
                C2060 -
            ((C26126 + C26125) * C1985 + (C26019 + C26020) * C2059) +
            (C9836 * C4988 + C92337 * C5534 + C9837 * C18863 +
             C92195 * C19505) *
                C1986) *
               C92067 * C14525) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C2060 -
            (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
                C1986) *
               C4097 +
           ((C9864 + C9863) * C2059 + (C9964 + C9965) * C1985 -
            (C12328 + C12327) * C2060 - (C12441 + C12442) * C1986) *
               C4098 +
           (C9875 * C2059 + C9970 * C1985 - (C12332 + C12331) * C2060 -
            (C12443 + C12444) * C1986) *
               C4099) *
              C92157 * C1983 +
          (((C12327 + C12328) * C2060 -
            ((C9965 + C9964) * C1985 + (C9863 + C9864) * C2059) +
            (C12442 + C12441) * C1986) *
               C4097 +
           ((C12331 + C12332) * C2060 -
            ((C9967 + C9966) * C1985 + (C9868 + C9867) * C2059) +
            (C12444 + C12443) * C1986) *
               C4098 +
           ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                C2060 -
            ((C9968 + C9969) * C1985 + (C9872 + C9871) * C2059) +
            (C9836 * C887 + C92337 * C1273 + C9837 * C3516 + C92195 * C3952) *
                C1986) *
               C4099) *
              C92157 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C2059 +
           (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
            C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
            C38284 * C11508) *
               C1985 -
           (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
            C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
            C38281 * C1204) *
               C2060 -
           (C38588 * C24638 + C38284 * C25210 + C38587 * C5805 +
            C38283 * C6279 + C38586 * C3513 + C38282 * C3949 + C38585 * C890 +
            C38281 * C1267) *
               C1986) *
              C92067 * C92157 * C1983 +
          ((C38585 * C804 + C38281 * C1203 + C38586 * C3432 + C38282 * C3876 +
            C38587 * C5720 + C38283 * C6200 + C38588 * C32368 +
            C38284 * C33012) *
               C2060 -
           ((C38588 * C10931 + C38284 * C11509 + C38587 * C1473 +
             C38283 * C1856 + C38586 * C1470 + C38282 * C1853 + C38585 * C183 +
             C38281 * C642) *
                C1985 +
            (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
             C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
             C38281 * C556) *
                C2059) +
           (C38585 * C889 + C38281 * C1269 + C38586 * C3514 + C38282 * C3950 +
            C38587 * C5806 + C38283 * C6280 + C38588 * C32482 +
            C38284 * C33112) *
               C1986) *
              C92067 * C92157 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C92067 * C14523 +
            ((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C92067 *
                C14524 +
            C24450 * C14525) *
               C1985 -
           (((C24445 + C24446) * C92116 + (C24253 + C24254) * C244) * C92067 *
                C14525 +
            ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C92067 *
                C14524 +
            ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C92067 *
                C14523) *
               C1986) *
              C1983 +
          ((((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C92067 *
                C14523 +
            ((C26020 + C26019) * C244 + (C26229 + C26230) * C92116) * C92067 *
                C14524 +
            ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C9836 * C5086 + C92337 * C5623 + C9837 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92067 * C14525) *
               C1986 -
           (((C26230 + C26229) * C92116 + (C26019 + C26020) * C244) * C92067 *
                C14525 +
            ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92067 *
                C14524 +
            ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C92067 *
                C14523) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C4097 +
            ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
            C10068 * C4099) *
               C92157 * C1985 -
           (((C12551 + C12552) * C92116 + (C12332 + C12331) * C244) * C4099 +
            ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C4098 +
            ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                 C92116 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C244) *
                C4097) *
               C92157 * C1986) *
              C1983 +
          ((((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C4097 +
            ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C4098 +
            ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                 C244 +
             (C9836 * C953 + C92337 * C1325 + C9837 * C3590 + C92195 * C4022) *
                 C92116) *
                C4099) *
               C92157 * C1986 -
           (((C10064 + C10065) * C92116 + (C9872 + C9871) * C244) * C4099 +
            ((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C4098 +
            ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C4097) *
               C92157 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
             C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
             C38284 * C11428) *
                C244 +
            (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
             C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
             C38284 * C11585) *
                C92116) *
               C92067 * C92157 * C1985 -
           ((C38588 * C24740 + C38284 * C25286 + C38587 * C5885 +
             C38283 * C6356 + C38586 * C3587 + C38282 * C4019 + C38585 * C956 +
             C38281 * C1328) *
                C92116 +
            (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
             C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
             C38281 * C1204) *
                C244) *
               C92067 * C92157 * C1986) *
              C1983 +
          (((C38585 * C804 + C38281 * C1203 + C38586 * C3432 + C38282 * C3876 +
             C38587 * C5720 + C38283 * C6200 + C38588 * C32368 +
             C38284 * C33012) *
                C244 +
            (C38585 * C955 + C38281 * C1327 + C38586 * C3588 + C38282 * C4020 +
             C38587 * C5886 + C38283 * C6357 + C38588 * C32588 +
             C38284 * C33211) *
                C92116) *
               C92067 * C92157 * C1986 -
           ((C38588 * C11029 + C38284 * C11586 + C38587 * C1542 +
             C38283 * C1912 + C38586 * C1539 + C38282 * C1911 + C38585 * C246 +
             C38281 * C720) *
                C92116 +
            (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
             C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
             C38281 * C556) *
                C244) *
               C92067 * C92157 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C801 +
              (C19671 * C117 + C92067 * C125) * C92084) *
                 C14523 +
             (C20155 + C20156) * C14524 + C20163 * C14525) *
                C92337 +
            ((C24557 + C24558) * C14523 + C27233 * C14524 + C23767 * C14525) *
                C92195) *
               C2709 -
           (((C24559 + C24560) * C14525 + (C24561 + C24562) * C14524 +
             (C24563 + C24564) * C14523) *
                C92195 +
            (C27234 * C14525 + C27235 * C14524 + (C24558 + C24557) * C14523) *
                C92337) *
               C2710) *
              C1985 +
          (((C27233 * C14523 + C23767 * C14524 + (C22434 + C22433) * C14525) *
                C92337 +
            ((C24562 + C24561) * C14523 + (C24560 + C24559) * C14524 +
             ((C19671 * C20682 + C92067 * C20683) * C801 +
              (C19671 * C20684 + C92067 * C20685) * C92084) *
                 C14525) *
                C92195) *
               C2710 -
           (((C22433 + C22434) * C14525 + C27234 * C14524 + C27235 * C14523) *
                C92195 +
            ((C20160 + C20159) * C14525 + (C20158 + C20157) * C14524 +
             (C20156 + C20155) * C14523) *
                C92337) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
              C4104 * C119 + C4099 * C127) *
                 C92084) *
                C92157 * C92337 +
            ((C10845 + C10846 + C10847) * C801 +
             (C10848 + C10849 + C10850) * C92084) *
                C92157 * C92195) *
               C2709 -
           (((C10851 + C10852 + C10853) * C92084 +
             (C10854 + C10855 + C10856) * C801) *
                C92157 * C92195 +
            ((C10850 + C10849 + C10848) * C92084 +
             (C10847 + C10846 + C10845) * C801) *
                C92157 * C92337) *
               C2710) *
              C1985 +
          ((((C8442 + C8441 + C8440) * C801 +
             (C8439 + C8438 + C8437) * C92084) *
                C92157 * C92337 +
            ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
              C4104 * C5721 + C4099 * C5724) *
                 C801 +
             (C4102 * C5725 + C4097 * C5728 + C4103 * C5726 + C4098 * C5729 +
              C4104 * C5727 + C4099 * C5730) *
                 C92084) *
                C92157 * C92195) *
               C2710 -
           (((C8437 + C8438 + C8439) * C92084 +
             (C8440 + C8441 + C8442) * C801) *
                C92157 * C92195 +
            ((C4907 + C4906 + C4905) * C92084 +
             (C4904 + C4903 + C4902) * C801) *
                C92157 * C92337) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C92157 * C38281 +
            (C24557 + C24558) * C92157 * C38282 + C39194 * C38283 +
            C39200 * C38284) *
               C2709 -
           ((C39203 + C39204) * C92157 * C38284 +
            (C34718 + C34719) * C92157 * C38283 +
            (C24563 + C24564) * C92157 * C38282 +
            (C24558 + C24557) * C92157 * C38281) *
               C2710) *
              C1985 +
          ((C27233 * C92157 * C38281 + C34700 * C92157 * C38282 +
            (C34717 + C34716) * C92157 * C38283 +
            ((C19671 * C34694 + C92067 * C34695) * C801 +
             (C19671 * C34696 + C92067 * C34697) * C92084) *
                C92157 * C38284) *
               C2710 -
           ((C34716 + C34717) * C92157 * C38284 + C37351 * C92157 * C38283 +
            C27235 * C92157 * C38282 + (C20156 + C20155) * C92157 * C38281) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2059 +
             (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
             C20225 * C1986) *
                C14523 +
            (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
             C20226 * C1986) *
                C14524 +
            (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 -
             C20227 * C1986) *
                C14525) *
               C92337 +
           ((C27334 + C27335 - C27336 - C27337) * C14523 +
            (C27338 + C27339 - C27340 - C27341) * C14524 +
            (C27342 + C27343 - C27344 - C27345) * C14525) *
               C92195) *
              C92084 * C2709 +
          (((C27336 - (C27335 + C27334) + C27337) * C14523 +
            (C27340 - (C27339 + C27338) + C27341) * C14524 +
            (C27344 - (C27343 + C27342) + C27345) * C14525) *
               C92337 +
           ((C24554 * C2060 - (C24662 * C1985 + C24556 * C2059) +
             C24661 * C1986) *
                C14523 +
            (C24552 * C2060 - (C24661 * C1985 + C24554 * C2059) +
             C24660 * C1986) *
                C14524 +
            ((C19671 * C20682 + C92067 * C20683) * C2060 -
             (C24660 * C1985 + C24552 * C2059) +
             (C19671 * C20736 + C92067 * C20737) * C1986) *
                C14525) *
               C92195) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C2059 +
            (C10949 + C10950 + C10951) * C1985 -
            (C8440 + C8441 + C8442) * C2060 - (C8555 + C8554 + C8553) * C1986) *
               C92157 * C92195) *
              C92084 * C2709 +
          (((C8442 + C8441 + C8440) * C2060 -
            ((C10951 + C10950 + C10949) * C1985 +
             (C10847 + C10846 + C10845) * C2059) +
            (C8553 + C8554 + C8555) * C1986) *
               C92157 * C92337 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C2060 -
            ((C10952 + C10953 + C10954) * C1985 +
             (C10854 + C10855 + C10856) * C2059) +
            (C4102 * C5805 + C4097 * C5808 + C4103 * C5806 + C4098 * C5809 +
             C4104 * C5807 + C4099 * C5810) *
                C1986) *
               C92157 * C92195) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2059 +
            (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
            C20225 * C1986) *
               C92157 * C38281 +
           (C27334 + C27335 - C27336 - C27337) * C92157 * C38282 +
           (C37450 + C37451 - C37452 - C37453) * C92157 * C38283 +
           (C40988 + C40989 - C40990 - C40991) * C92157 * C38284) *
              C92084 * C2709 +
          ((C27336 - (C27335 + C27334) + C27337) * C92157 * C38281 +
           (C37452 - (C37451 + C37450) + C37453) * C92157 * C38282 +
           (C40990 - (C40989 + C40988) + C40991) * C92157 * C38283 +
           ((C19671 * C34694 + C92067 * C34695) * C2060 -
            (C39263 * C1985 + C39202 * C2059) +
            (C19671 * C34793 + C92067 * C34794) * C1986) *
               C92157 * C38284) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2849 +
             (C19671 * C245 + C92067 * C251) * C2709 - C24549 * C2850 -
             C24753 * C2710) *
                C14523 +
            (C22584 + C22585 - C22586 - C22602) * C14524 +
            (C22589 + C22590 - C22591 - C22603) * C14525) *
               C92337 +
           ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
             C24754 * C2710) *
                C14523 +
            (C27444 + C27445 - C27446 - C27447) * C14524 +
            (C27448 + C27449 - C27450 - C27451) * C14525) *
               C92195) *
              C1985 +
          (((C22586 - (C22585 + C22584) + C22602) * C14523 +
            (C22591 - (C22590 + C22589) + C22603) * C14524 +
            (C22596 - (C22595 + C22594) + C22604) * C14525) *
               C92337 +
           ((C27446 - (C27445 + C27444) + C27447) * C14523 +
            (C27450 - (C27449 + C27448) + C27451) * C14524 +
            ((C19671 * C20682 + C92067 * C20683) * C2850 -
             (C22601 * C2709 + C22428 * C2849) +
             (C19671 * C20788 + C92067 * C20789) * C2710) *
                C14525) *
               C92195) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C2709 -
            (C10847 + C10846 + C10845) * C2850 -
            (C11047 + C11048 + C11049) * C2710) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C2849 +
            (C11049 + C11048 + C11047) * C2709 -
            (C10854 + C10855 + C10856) * C2850 -
            (C11052 + C11051 + C11050) * C2710) *
               C92157 * C92195) *
              C1985 +
          (((C8442 + C8441 + C8440) * C2850 -
            ((C5106 + C5105 + C5104) * C2709 +
             (C4904 + C4903 + C4902) * C2849) +
            (C8668 + C8667 + C8666) * C2710) *
               C92157 * C92337 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C2850 -
            ((C8666 + C8667 + C8668) * C2709 +
             (C8440 + C8441 + C8442) * C2849) +
            (C4102 * C5885 + C4097 * C5888 + C4103 * C5886 + C4098 * C5889 +
             C4104 * C5887 + C4099 * C5890) *
                C2710) *
               C92157 * C92195) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2849 +
            (C19671 * C245 + C92067 * C251) * C2709 - C24549 * C2850 -
            C24753 * C2710) *
               C92157 * C38281 +
           (C24549 * C2849 + C24753 * C2709 - C24556 * C2850 - C24754 * C2710) *
               C92157 * C38282 +
           (C24556 * C2849 + C24754 * C2709 - C34714 * C2850 - C34891 * C2710) *
               C92157 * C38283 +
           (C34714 * C2849 + C34891 * C2709 - C39202 * C2850 - C39319 * C2710) *
               C92157 * C38284) *
              C1985 +
          ((C22586 - (C22585 + C22584) + C22602) * C92157 * C38281 +
           (C27446 - (C27445 + C27444) + C27447) * C92157 * C38282 +
           (C37558 - (C37557 + C37556) + C37559) * C92157 * C38283 +
           ((C19671 * C34694 + C92067 * C34695) * C2850 -
            (C34892 * C2709 + C34712 * C2849) +
            (C19671 * C34884 + C92067 * C34885) * C2710) *
               C92157 * C38284) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C801 +
             (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
              C14752 * C822 + C14525 * C1031) *
                 C92084) *
                C92337 +
            ((C24859 + C24860 + C24861) * C801 +
             (C24862 + C24863 + C24864) * C92084) *
                C92195) *
               C92067 * C2709 -
           (((C24865 + C24866 + C24867) * C92084 +
             (C24868 + C24869 + C24870) * C801) *
                C92195 +
            ((C24864 + C24863 + C24862) * C92084 +
             (C24861 + C24860 + C24859) * C801) *
                C92337) *
               C92067 * C2710) *
              C1985 +
          ((((C27562 + C27563 + C27564) * C801 +
             (C27565 + C27566 + C27567) * C92084) *
                C92337 +
            ((C14750 * C5719 + C14523 * C5965 + C14751 * C16095 +
              C14524 * C16333 + C14752 * C20682 + C14525 * C20840) *
                 C801 +
             (C14750 * C5725 + C14523 * C5968 + C14751 * C16099 +
              C14524 * C16335 + C14752 * C20684 + C14525 * C20841) *
                 C92084) *
                C92195) *
               C92067 * C2710 -
           (((C27567 + C27566 + C27565) * C92084 +
             (C27564 + C27563 + C27562) * C801) *
                C92195 +
            ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
              C14750 * C813 + C14523 * C1030) *
                 C92084 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C801) *
                C92337) *
               C92067 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C801 +
              (C307 * C117 + C92157 * C314) * C92084) *
                 C92337 +
             (C11161 + C11162) * C92195) *
                C4097 +
            ((C337 * C801 + C338 * C92084) * C92337 +
             (C11137 + C11138) * C92195) *
                C4098 +
            ((C339 * C801 + C340 * C92084) * C92337 +
             (C11139 + C11140) * C92195) *
                C4099) *
               C2709 -
           (((C11163 + C11164) * C92195 + (C11140 + C11139) * C92337) * C4099 +
            ((C11165 + C11166) * C92195 + (C11138 + C11137) * C92337) * C4098 +
            ((C11167 + C11168) * C92195 + (C11162 + C11161) * C92337) * C4097) *
               C2710) *
              C1985 +
          ((((C13946 + C13947) * C92337 +
             ((C307 * C5719 + C92157 * C5965) * C801 +
              (C307 * C5725 + C92157 * C5968) * C92084) *
                 C92195) *
                C4097 +
            ((C13940 + C13941) * C92337 +
             ((C307 * C5720 + C92157 * C5966) * C801 +
              (C307 * C5726 + C92157 * C5969) * C92084) *
                 C92195) *
                C4098 +
            ((C13942 + C13943) * C92337 +
             ((C307 * C5721 + C92157 * C5967) * C801 +
              (C307 * C5727 + C92157 * C5970) * C92084) *
                 C92195) *
                C4099) *
               C2710 -
           (((C13943 + C13942) * C92195 +
             (C2215 * C92084 + C2214 * C801) * C92337) *
                C4099 +
            ((C13941 + C13940) * C92195 +
             (C2213 * C92084 + C2212 * C801) * C92337) *
                C4098 +
            ((C13947 + C13946) * C92195 +
             ((C307 * C813 + C92157 * C1030) * C92084 +
              (C307 * C805 + C92157 * C1022) * C801) *
                 C92337) *
                C4097) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C38281 +
            (C11161 + C11162) * C38282 + C29938 * C38283 + C39372 * C38284) *
               C92067 * C2709 -
           ((C39379 + C39380) * C38284 + (C29954 + C29955) * C38283 +
            (C11167 + C11168) * C38282 + (C11162 + C11161) * C38281) *
               C92067 * C2710) *
              C1985 +
          (((C13946 + C13947) * C38281 + (C32705 + C32706) * C38282 +
            (C41130 + C41131) * C38283 +
            ((C307 * C34694 + C92157 * C34966) * C801 +
             (C307 * C34696 + C92157 * C34967) * C92084) *
                C38284) *
               C92067 * C2710 -
           ((C41131 + C41130) * C38284 + (C32706 + C32705) * C38283 +
            (C13947 + C13946) * C38282 +
            ((C307 * C813 + C92157 * C1030) * C92084 +
             (C307 * C805 + C92157 * C1022) * C801) *
                C38281) *
               C92067 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[41] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92337 +
                     ((C24859 + C24860 + C24861) * C2059 +
                      (C24959 + C24960 + C24961) * C1985 -
                      (C27564 + C27563 + C27562) * C2060 -
                      (C27672 + C27673 + C27674) * C1986) *
                         C92195) *
                        C92067 * C92084 * C2709 +
                    (((C27562 + C27563 + C27564) * C2060 -
                      ((C24961 + C24960 + C24959) * C1985 +
                       (C24861 + C24860 + C24859) * C2059) +
                      (C27674 + C27673 + C27672) * C1986) *
                         C92337 +
                     ((C14750 * C5719 + C14523 * C5965 + C14751 * C16095 +
                       C14524 * C16333 + C14752 * C20682 + C14525 * C20840) *
                          C2060 -
                      ((C24962 + C24963 + C24964) * C1985 +
                       (C24868 + C24869 + C24870) * C2059) +
                      (C14750 * C5805 + C14523 * C6045 + C14751 * C16177 +
                       C14524 * C16411 + C14752 * C20736 + C14525 * C20892) *
                          C1986) *
                         C92195) *
                        C92067 * C92084 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C92337 +
                      (C14046 + C14047 - C14048 - C14052) * C92195) *
                         C4097 +
                     ((C2285 + C2286 - C2287 - C2303) * C92337 +
                      (C12091 + C12092 - C12093 - C12103) * C92195) *
                         C4098 +
                     ((C2290 + C2291 - C2292 - C2304) * C92337 +
                      (C12096 + C12097 - C12098 - C12104) * C92195) *
                         C4099) *
                        C92084 * C2709 +
                    (((C14048 - (C14047 + C14046) + C14052) * C92337 +
                      ((C307 * C5719 + C92157 * C5965) * C2060 -
                       (C11261 * C1985 + C11160 * C2059) +
                       (C307 * C5805 + C92157 * C6045) * C1986) *
                          C92195) *
                         C4097 +
                     ((C12093 - (C12092 + C12091) + C12103) * C92337 +
                      ((C307 * C5720 + C92157 * C5966) * C2060 -
                       (C11260 * C1985 + C11158 * C2059) +
                       (C307 * C5806 + C92157 * C6046) * C1986) *
                          C92195) *
                         C4098 +
                     ((C12098 - (C12097 + C12096) + C12104) * C92337 +
                      ((C307 * C5721 + C92157 * C5967) * C2060 -
                       (C11259 * C1985 + C11156 * C2059) +
                       (C307 * C5807 + C92157 * C6047) * C1986) *
                          C92195) *
                         C4099) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2059 +
                      (C307 * C182 + C92157 * C394) * C1985 -
                      (C307 * C805 + C92157 * C1022) * C2060 -
                      (C307 * C890 + C92157 * C1085) * C1986) *
                         C38281 +
                     (C14046 + C14047 - C14048 - C14052) * C38282 +
                     (C32806 + C32807 - C32808 - C32812) * C38283 +
                     (C41198 + C41199 - C41200 - C41204) * C38284) *
                        C92067 * C92084 * C2709 +
                    ((C14048 - (C14047 + C14046) + C14052) * C38281 +
                     (C32808 - (C32807 + C32806) + C32812) * C38282 +
                     (C41200 - (C41199 + C41198) + C41204) * C38283 +
                     ((C307 * C34694 + C92157 * C34966) * C2060 -
                      (C39436 * C1985 + C39378 * C2059) +
                      (C307 * C34793 + C92157 * C35083) * C1986) *
                         C38284) *
                        C92067 * C92084 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C2849 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C2709 -
            (C24861 + C24860 + C24859) * C2850 -
            (C25053 + C25054 + C25055) * C2710) *
               C92337 +
           ((C24859 + C24860 + C24861) * C2849 +
            (C25055 + C25054 + C25053) * C2709 -
            (C24868 + C24869 + C24870) * C2850 -
            (C25058 + C25057 + C25056) * C2710) *
               C92195) *
              C92067 * C1985 +
          (((C27562 + C27563 + C27564) * C2850 -
            ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
              C14750 * C956 + C14523 * C1146) *
                 C2709 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C2849) +
            (C27779 + C27780 + C27781) * C2710) *
               C92337 +
           ((C14750 * C5719 + C14523 * C5965 + C14751 * C16095 +
             C14524 * C16333 + C14752 * C20682 + C14525 * C20840) *
                C2850 -
            ((C27781 + C27780 + C27779) * C2709 +
             (C27564 + C27563 + C27562) * C2849) +
            (C14750 * C5885 + C14523 * C6122 + C14751 * C16255 +
             C14524 * C16487 + C14752 * C20788 + C14525 * C20943) *
                C2710) *
               C92195) *
              C92067 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C2849 +
             (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
             C11351 * C2710) *
                C92337 +
            (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
             C11352 * C2710) *
                C92195) *
               C4097 +
           ((C3089 + C3090 - C3091 - C3107) * C92337 +
            (C13194 + C13195 - C13196 - C13197) * C92195) *
               C4098 +
           ((C3094 + C3095 - C3096 - C3108) * C92337 +
            (C13198 + C13199 - C13200 - C13201) * C92195) *
               C4099) *
              C1985 +
          (((C13944 * C2850 -
             ((C307 * C956 + C92157 * C1146) * C2709 +
              (C307 * C805 + C92157 * C1022) * C2849) +
             C14153 * C2710) *
                C92337 +
            ((C307 * C5719 + C92157 * C5965) * C2850 -
             (C14153 * C2709 + C13944 * C2849) +
             (C307 * C5885 + C92157 * C6122) * C2710) *
                C92195) *
               C4097 +
           ((C11989 * C2850 - (C2384 * C2709 + C2212 * C2849) +
             C12210 * C2710) *
                C92337 +
            ((C307 * C5720 + C92157 * C5966) * C2850 -
             (C12210 * C2709 + C11989 * C2849) +
             (C307 * C5886 + C92157 * C6123) * C2710) *
                C92195) *
               C4098 +
           ((C11991 * C2850 - (C2383 * C2709 + C2214 * C2849) +
             C12209 * C2710) *
                C92337 +
            ((C307 * C5721 + C92157 * C5967) * C2850 -
             (C12209 * C2709 + C11991 * C2849) +
             (C307 * C5887 + C92157 * C6124) * C2710) *
                C92195) *
               C4099) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C2849 +
            (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
            C11351 * C2710) *
               C38281 +
           (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 - C11352 * C2710) *
               C38282 +
           (C11160 * C2849 + C11352 * C2709 - C29951 * C2850 - C30124 * C2710) *
               C38283 +
           (C29951 * C2849 + C30124 * C2709 - C39378 * C2850 - C39491 * C2710) *
               C38284) *
              C92067 * C1985 +
          ((C13944 * C2850 -
            ((C307 * C956 + C92157 * C1146) * C2709 +
             (C307 * C805 + C92157 * C1022) * C2849) +
            C14153 * C2710) *
               C38281 +
           (C32703 * C2850 - (C14153 * C2709 + C13944 * C2849) +
            C32914 * C2710) *
               C38282 +
           (C41128 * C2850 - (C32914 * C2709 + C32703 * C2849) +
            C41273 * C2710) *
               C38283 +
           ((C307 * C34694 + C92157 * C34966) * C2850 -
            (C41273 * C2709 + C41128 * C2849) +
            (C307 * C34884 + C92157 * C35180) * C2710) *
               C38284) *
              C92067 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C92067 * C14523 +
            ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
                C14524 +
            C24260 * C14525) *
               C2709 -
           (((C27896 + C27897) * C92084 + (C27898 + C27899) * C801) * C92067 *
                C14525 +
            ((C27900 + C27901) * C92084 + (C27902 + C27903) * C801) * C92067 *
                C14524 +
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C92084 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C801) *
                C92067 * C14523) *
               C2710) *
              C1985 +
          ((((C27903 + C27902) * C801 + (C27901 + C27900) * C92084) * C92067 *
                C14523 +
            ((C27899 + C27898) * C801 + (C27897 + C27896) * C92084) * C92067 *
                C14524 +
            ((C9836 * C18732 + C92337 * C19392 + C9837 * C20682 +
              C92195 * C20994) *
                 C801 +
             (C9836 * C18736 + C92337 * C19394 + C9837 * C20684 +
              C92195 * C20995) *
                 C92084) *
                C92067 * C14525) *
               C2710 -
           (((C24251 + C24252) * C92084 + (C24253 + C24254) * C801) * C92067 *
                C14525 +
            ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C92067 *
                C14524 +
            ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C92067 *
                C14523) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C4097 +
            ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
            (C9875 * C801 + C9876 * C92084) * C4099) *
               C92157 * C2709 -
           (((C13323 + C13322) * C92084 + (C13321 + C13320) * C801) * C4099 +
            ((C13319 + C13318) * C92084 + (C13317 + C13316) * C801) * C4098 +
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C92084 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C801) *
                C4097) *
               C92157 * C2710) *
              C1985 +
          ((((C9836 * C3431 + C92337 * C3875 + C9837 * C5719 + C92195 * C6199) *
                 C801 +
             (C9836 * C3439 + C92337 * C3879 + C9837 * C5725 + C92195 * C6202) *
                 C92084) *
                C4097 +
            ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                 C801 +
             (C9836 * C3440 + C92337 * C3880 + C9837 * C5726 + C92195 * C6203) *
                 C92084) *
                C4098 +
            ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                 C801 +
             (C9836 * C3441 + C92337 * C3881 + C9837 * C5727 + C92195 * C6204) *
                 C92084) *
                C4099) *
               C92157 * C2710 -
           (((C12334 + C12333) * C92084 + (C12332 + C12331) * C801) * C4099 +
            ((C12330 + C12329) * C92084 + (C12328 + C12327) * C801) * C4098 +
            ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                 C92084 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C801) *
                C4097) *
               C92157 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
             C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
             C38284 * C11428) *
                C801 +
            (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
             C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
             C38284 * C11431) *
                C92084) *
               C92067 * C92157 * C2709 -
           ((C38588 * C29615 + C38284 * C30201 + C38587 * C10814 +
             C38283 * C11431 + C38586 * C1406 + C38282 * C1797 +
             C38585 * C1397 + C38281 * C1796) *
                C92084 +
            (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
             C38283 * C11428 + C38586 * C1390 + C38282 * C1789 +
             C38585 * C1389 + C38281 * C1788) *
                C801) *
               C92067 * C92157 * C2710) *
              C1985 +
          (((C38585 * C3431 + C38281 * C3875 + C38586 * C5719 + C38282 * C6199 +
             C38587 * C24524 + C38283 * C25132 + C38588 * C34694 +
             C38284 * C35274) *
                C801 +
            (C38585 * C3439 + C38281 * C3879 + C38586 * C5725 + C38282 * C6202 +
             C38587 * C24527 + C38283 * C25134 + C38588 * C34696 +
             C38284 * C35275) *
                C92084) *
               C92067 * C92157 * C2710 -
           ((C38588 * C24527 + C38284 * C25134 + C38587 * C5725 +
             C38283 * C6202 + C38586 * C3439 + C38282 * C3879 + C38585 * C813 +
             C38281 * C1212) *
                C92084 +
            (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
             C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
             C38281 * C1204) *
                C801) *
               C92067 * C92157 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C24244 + C24243) * C2060 - (C24347 + C24348) * C1986) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2059 + (C24348 + C24347) * C1985 -
            (C24248 + C24247) * C2060 - (C24350 + C24349) * C1986) *
               C92067 * C14524 +
           (C24255 * C2059 + C24353 * C1985 - (C24253 + C24254) * C2060 -
            (C24352 + C24351) * C1986) *
               C92067 * C14525) *
              C92084 * C2709 +
          (((C27903 + C27902) * C2060 -
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C1985 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C2059) +
            (C28010 + C28011) * C1986) *
               C92067 * C14523 +
           ((C27899 + C27898) * C2060 -
            ((C28011 + C28010) * C1985 + (C27902 + C27903) * C2059) +
            (C28012 + C28013) * C1986) *
               C92067 * C14524 +
           ((C9836 * C18732 + C92337 * C19392 + C9837 * C20682 +
             C92195 * C20994) *
                C2060 -
            ((C28013 + C28012) * C1985 + (C27898 + C27899) * C2059) +
            (C9836 * C18862 + C92337 * C19504 + C9837 * C20736 +
             C92195 * C21046) *
                C1986) *
               C92067 * C14525) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C2060 -
            (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
                C1986) *
               C4097 +
           ((C9864 + C9863) * C2059 + (C9964 + C9965) * C1985 -
            (C12328 + C12327) * C2060 - (C12441 + C12442) * C1986) *
               C4098 +
           (C9875 * C2059 + C9970 * C1985 - (C12332 + C12331) * C2060 -
            (C12443 + C12444) * C1986) *
               C4099) *
              C92157 * C92084 * C2709 +
          (((C9836 * C3431 + C92337 * C3875 + C9837 * C5719 + C92195 * C6199) *
                C2060 -
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C1985 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C2059) +
            (C9836 * C3513 + C92337 * C3949 + C9837 * C5805 + C92195 * C6279) *
                C1986) *
               C4097 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C2060 -
            ((C13431 + C13430) * C1985 + (C13317 + C13316) * C2059) +
            (C9836 * C3514 + C92337 * C3950 + C9837 * C5806 + C92195 * C6280) *
                C1986) *
               C4098 +
           ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                C2060 -
            ((C13433 + C13432) * C1985 + (C13321 + C13320) * C2059) +
            (C9836 * C3515 + C92337 * C3951 + C9837 * C5807 + C92195 * C6281) *
                C1986) *
               C4099) *
              C92157 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C2059 +
           (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
            C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
            C38284 * C11508) *
               C1985 -
           (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
            C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
            C38281 * C1204) *
               C2060 -
           (C38588 * C24638 + C38284 * C25210 + C38587 * C5805 +
            C38283 * C6279 + C38586 * C3513 + C38282 * C3949 + C38585 * C890 +
            C38281 * C1267) *
               C1986) *
              C92067 * C92157 * C92084 * C2709 +
          ((C38585 * C3431 + C38281 * C3875 + C38586 * C5719 + C38282 * C6199 +
            C38587 * C24524 + C38283 * C25132 + C38588 * C34694 +
            C38284 * C35274) *
               C2060 -
           ((C38588 * C29735 + C38284 * C30277 + C38587 * C10930 +
             C38283 * C11508 + C38586 * C1472 + C38282 * C1855 +
             C38585 * C1471 + C38281 * C1854) *
                C1985 +
            (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
             C38283 * C11428 + C38586 * C1390 + C38282 * C1789 +
             C38585 * C1389 + C38281 * C1788) *
                C2059) +
           (C38585 * C3513 + C38281 * C3949 + C38586 * C5805 + C38282 * C6279 +
            C38587 * C24638 + C38283 * C25210 + C38588 * C34793 +
            C38284 * C35350) *
               C1986) *
              C92067 * C92157 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2849 + (C24441 + C24442) * C2709 -
            (C27902 + C27903) * C2850 - (C28120 + C28121) * C2710) *
               C92067 * C14524 +
           (C24255 * C2849 + C24447 * C2709 - (C27898 + C27899) * C2850 -
            (C28122 + C28123) * C2710) *
               C92067 * C14525) *
              C1985 +
          (((C27903 + C27902) * C2850 -
            ((C24442 + C24441) * C2709 + (C24244 + C24243) * C2849) +
            (C28121 + C28120) * C2710) *
               C92067 * C14523 +
           ((C27899 + C27898) * C2850 -
            ((C24444 + C24443) * C2709 + (C24248 + C24247) * C2849) +
            (C28123 + C28122) * C2710) *
               C92067 * C14524 +
           ((C9836 * C18732 + C92337 * C19392 + C9837 * C20682 +
             C92195 * C20994) *
                C2850 -
            ((C24445 + C24446) * C2709 + (C24253 + C24254) * C2849) +
            (C9836 * C18976 + C92337 * C19607 + C9837 * C20788 +
             C92195 * C21097) *
                C2710) *
               C92067 * C14525) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C4097 +
           ((C9864 + C9863) * C2849 + (C10060 + C10061) * C2709 -
            (C13317 + C13316) * C2850 - (C13540 + C13541) * C2710) *
               C4098 +
           (C9875 * C2849 + C10066 * C2709 - (C13321 + C13320) * C2850 -
            (C13542 + C13543) * C2710) *
               C4099) *
              C92157 * C1985 +
          (((C9836 * C3431 + C92337 * C3875 + C9837 * C5719 + C92195 * C6199) *
                C2850 -
            ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                 C2709 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C2849) +
            (C9836 * C3587 + C92337 * C4019 + C9837 * C5885 + C92195 * C6356) *
                C2710) *
               C4097 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C2850 -
            ((C12553 + C12554) * C2709 + (C12328 + C12327) * C2849) +
            (C9836 * C3588 + C92337 * C4020 + C9837 * C5886 + C92195 * C6357) *
                C2710) *
               C4098 +
           ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                C2850 -
            ((C12551 + C12552) * C2709 + (C12332 + C12331) * C2849) +
            (C9836 * C3589 + C92337 * C4021 + C9837 * C5887 + C92195 * C6358) *
                C2710) *
               C4099) *
              C92157 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C2849 +
           (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
            C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
            C38284 * C11585) *
               C2709 -
           (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
            C38283 * C11428 + C38586 * C1390 + C38282 * C1789 + C38585 * C1389 +
            C38281 * C1788) *
               C2850 -
           (C38588 * C29836 + C38284 * C30353 + C38587 * C11028 +
            C38283 * C11585 + C38586 * C1541 + C38282 * C1910 + C38585 * C1540 +
            C38281 * C1909) *
               C2710) *
              C92067 * C92157 * C1985 +
          ((C38585 * C3431 + C38281 * C3875 + C38586 * C5719 + C38282 * C6199 +
            C38587 * C24524 + C38283 * C25132 + C38588 * C34694 +
            C38284 * C35274) *
               C2850 -
           ((C38588 * C24740 + C38284 * C25286 + C38587 * C5885 +
             C38283 * C6356 + C38586 * C3587 + C38282 * C4019 + C38585 * C956 +
             C38281 * C1328) *
                C2709 +
            (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
             C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
             C38281 * C1204) *
                C2849) +
           (C38585 * C3587 + C38281 * C4019 + C38586 * C5885 + C38282 * C6356 +
            C38587 * C24740 + C38283 * C25286 + C38588 * C34884 +
            C38284 * C35425) *
               C2710) *
              C92067 * C92157 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                C4104 * C109 + C4099 * C115) *
                   C104 +
               (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
                C4104 * C119 + C4099 * C127) *
                   C93 -
               (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
                C4102 * C108 + C4097 * C114) *
                   C105 -
               (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
                C4102 * C118 + C4097 * C126) *
                   C94 +
               (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
                C4104 * C111 + C4099 * C121) *
                   C106 +
               (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
                C4104 * C122 + C4099 * C129) *
                   C95) *
                  C92157 * C92337 +
              ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
                C4104 * C1387 + C4099 * C1399) *
                   C104 +
               (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
                C4104 * C1395 + C4099 * C1411) *
                   C93 -
               (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
                C4102 * C1388 + C4097 * C1400) *
                   C105 -
               (C4104 * C1394 + C4099 * C1410 + C4103 * C1395 + C4098 * C1411 +
                C4102 * C1396 + C4097 * C1412) *
                   C94 +
               (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
                C4104 * C2711 + C4099 * C2712) *
                   C106 +
               (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C4098 * C1410 +
                C4104 * C2713 + C4099 * C2714) *
                   C95) *
                  C92157 * C92195) *
             C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C801 +
                (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
                 C4104 * C119 + C4099 * C127) *
                    C92084) *
                   C92157 * C92337 +
               ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
                 C4104 * C1387 + C4099 * C1399) *
                    C801 +
                (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
                 C4104 * C1395 + C4099 * C1411) *
                    C92084) *
                   C92157 * C92195) *
                  C92116 * C798 -
              (((C8437 + C8438 + C8439) * C92084 +
                (C8440 + C8441 + C8442) * C801) *
                   C92157 * C92195 +
               ((C4907 + C4906 + C4905) * C92084 +
                (C4904 + C4903 + C4902) * C801) *
                   C92157 * C92337) *
                  C92116 * C799 +
              (((C4913 + C4912 + C4911) * C801 +
                (C4910 + C4909 + C4908) * C92084) *
                   C92157 * C92337 +
               ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
                 C4104 * C8414 + C4099 * C8417) *
                    C801 +
                (C4102 * C8418 + C4097 * C8421 + C4103 * C8419 + C4098 * C8422 +
                 C4104 * C8420 + C4099 * C8423) *
                    C92084) *
                   C92157 * C92195) *
                  C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C801 +
            (C10848 + C10849 + C10850) * C92084) *
               C92157 * C92195) *
              C1383 -
          (((C10851 + C10852 + C10853) * C92084 +
            (C10854 + C10855 + C10856) * C801) *
               C92157 * C92195 +
           ((C10850 + C10849 + C10848) * C92084 +
            (C10847 + C10846 + C10845) * C801) *
               C92157 * C92337) *
              C1384 +
          (((C10856 + C10855 + C10854) * C801 +
            (C10853 + C10852 + C10851) * C92084) *
               C92157 * C92337 +
           ((C4102 * C10808 + C4097 * C10811 + C4103 * C10809 + C4098 * C10812 +
             C4104 * C10810 + C4099 * C10813) *
                C801 +
            (C4102 * C10814 + C4097 * C10817 + C4103 * C10815 + C4098 * C10818 +
             C4104 * C10816 + C4099 * C10819) *
                C92084) *
               C92157 * C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C14523 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C14524 +
           (C20149 * C104 + C20150 * C93 - C21185 * C105 - C21186 * C94 +
            (C19671 * C808 + C92067 * C820) * C106 +
            (C19671 * C824 + C92067 * C832) * C95) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C104 +
            (C19671 * C1397 + C92067 * C1413) * C93 -
            (C19671 * C1388 + C92067 * C1400) * C105 -
            (C19671 * C1396 + C92067 * C1412) * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C14523 +
           (C22432 * C104 + C22431 * C93 -
            (C19671 * C3432 + C92067 * C3436) * C105 -
            (C19671 * C3440 + C92067 * C3444) * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C14524 +
           (C22430 * C104 + C22429 * C93 -
            (C19671 * C8413 + C92067 * C8416) * C105 -
            (C19671 * C8419 + C92067 * C8422) * C94 +
            (C19671 * C8414 + C92067 * C8417) * C106 +
            (C19671 * C8420 + C92067 * C8423) * C95) *
               C14525) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C14523 +
            (C20155 + C20156) * C14524 + C20163 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C801 +
             (C19671 * C1397 + C92067 * C1413) * C92084) *
                C14523 +
            (C22438 + C22437) * C14524 + C23767 * C14525) *
               C92195) *
              C92116 * C798 -
          (((C22433 + C22434) * C14525 + (C22435 + C22436) * C14524 +
            (C22437 + C22438) * C14523) *
               C92195 +
           ((C20160 + C20159) * C14525 + (C20158 + C20157) * C14524 +
            (C20156 + C20155) * C14523) *
               C92337) *
              C92116 * C799 +
          ((C20163 * C14523 + C20164 * C14524 + (C20162 + C20161) * C14525) *
               C92337 +
           (C23767 * C14523 + (C22434 + C22433) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C14525) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C14523 +
            (C20155 + C20156) * C14524 + C20163 * C14525) *
               C92337 +
           ((C24557 + C24558) * C14523 + (C22438 + C22437) * C14524 +
            C23767 * C14525) *
               C92195) *
              C1383 -
          (((C24559 + C24560) * C14525 + (C24561 + C24562) * C14524 +
            (C24563 + C24564) * C14523) *
               C92195 +
           ((C22435 + C22436) * C14525 + (C22437 + C22438) * C14524 +
            (C24558 + C24557) * C14523) *
               C92337) *
              C1384 +
          (((C24564 + C24563) * C14523 + (C24562 + C24561) * C14524 +
            (C24560 + C24559) * C14525) *
               C92337 +
           (((C19671 * C10808 + C92067 * C10811) * C801 +
             (C19671 * C10814 + C92067 * C10817) * C92084) *
                C14523 +
            ((C19671 * C24524 + C92067 * C24526) * C801 +
             (C19671 * C24527 + C92067 * C24530) * C92084) *
                C14524 +
            ((C19671 * C24525 + C92067 * C24528) * C801 +
             (C19671 * C24529 + C92067 * C24531) * C92084) *
                C14525) *
               C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C104 +
           (C19671 * C117 + C92067 * C125) * C93 -
           (C19671 * C108 + C92067 * C114) * C105 -
           (C19671 * C118 + C92067 * C126) * C94 +
           (C19671 * C109 + C92067 * C115) * C106 +
           (C19671 * C119 + C92067 * C127) * C95) *
              C92157 * C38281 +
          (C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
           (C19671 * C1387 + C92067 * C1399) * C106 +
           (C19671 * C1395 + C92067 * C1411) * C95) *
              C92157 * C38282 +
          (C24556 * C104 + C24555 * C93 - C36431 * C105 - C36432 * C94 +
           (C19671 * C1392 + C92067 * C1404) * C106 +
           (C19671 * C1408 + C92067 * C1416) * C95) *
              C92157 * C38283 +
          (C34714 * C104 + C34713 * C93 -
           (C19671 * C10809 + C92067 * C10812) * C105 -
           (C19671 * C10815 + C92067 * C10818) * C94 +
           (C19671 * C10810 + C92067 * C10813) * C106 +
           (C19671 * C10816 + C92067 * C10819) * C95) *
              C92157 * C38284) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C92157 * C38281 +
           (C24557 + C24558) * C92157 * C38282 + C34699 * C92157 * C38283 +
           (C34719 + C34718) * C92157 * C38284) *
              C92116 * C798 -
          ((C34716 + C34717) * C92157 * C38284 + C37351 * C92157 * C38283 +
           C27235 * C92157 * C38282 + (C20156 + C20155) * C92157 * C38281) *
              C92116 * C799 +
          (C20163 * C92157 * C38281 + C23767 * C92157 * C38282 +
           (C24560 + C24559) * C92157 * C38283 +
           ((C19671 * C24525 + C92067 * C24528) * C801 +
            (C19671 * C24529 + C92067 * C24531) * C92084) *
               C92157 * C38284) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C92157 * C38281 +
           (C24557 + C24558) * C92157 * C38282 + C39194 * C38283 +
           C39200 * C38284) *
              C1383 -
          ((C39203 + C39204) * C92157 * C38284 +
           (C34718 + C34719) * C92157 * C38283 +
           (C24563 + C24564) * C92157 * C38282 +
           (C24558 + C24557) * C92157 * C38281) *
              C1384 +
          (C39194 * C38281 + C39200 * C38282 +
           (C39204 + C39203) * C92157 * C38283 +
           ((C19671 * C39189 + C92067 * C39190) * C801 +
            (C19671 * C39191 + C92067 * C39192) * C92084) *
               C92157 * C38284) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C181 +
                (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
                 C4104 * C184 + C4099 * C190) *
                    C92105) *
                   C92157 * C92337 +
               ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
                 C4104 * C1387 + C4099 * C1399) *
                    C181 +
                (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
                 C4104 * C1469 + C4099 * C1477) *
                    C92105) *
                   C92157 * C92195) *
                  C93 -
              (((C4104 * C1468 + C4099 * C1476 + C4103 * C1469 + C4098 * C1477 +
                 C4102 * C1470 + C4097 * C1478) *
                    C92105 +
                (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
                 C4102 * C1388 + C4097 * C1400) *
                    C181) *
                   C92157 * C92195 +
               ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
                 C4102 * C183 + C4097 * C189) *
                    C92105 +
                (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
                 C4102 * C108 + C4097 * C114) *
                    C181) *
                   C92157 * C92337) *
                  C94 +
              (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
                 C4104 * C111 + C4099 * C121) *
                    C181 +
                (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
                 C4104 * C186 + C4099 * C192) *
                    C92105) *
                   C92157 * C92337 +
               ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
                 C4104 * C2711 + C4099 * C2712) *
                    C181 +
                (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C4098 * C1476 +
                 C4104 * C2781 + C4099 * C2782) *
                    C92105) *
                   C92157 * C92195) *
                  C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                C4104 * C109 + C4099 * C115) *
                   C884 +
               (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
                C4104 * C184 + C4099 * C190) *
                   C798 -
               (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
               (C4913 + C4912 + C4911) * C886 +
               (C5009 + C5010 + C5011) * C800) *
                  C92157 * C92337 +
              ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
                C4104 * C1387 + C4099 * C1399) *
                   C884 +
               (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
                C4104 * C1469 + C4099 * C1477) *
                   C798 -
               (C8440 + C8441 + C8442) * C885 - (C8555 + C8554 + C8553) * C799 +
               (C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
                C4104 * C8414 + C4099 * C8417) *
                   C886 +
               (C4102 * C8540 + C4097 * C8543 + C4103 * C8541 + C4098 * C8544 +
                C4104 * C8542 + C4099 * C8545) *
                   C800) *
                  C92157 * C92195) *
             C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C181 +
            (C10949 + C10950 + C10951) * C92105) *
               C92157 * C92195) *
              C92084 * C1383 -
          (((C10952 + C10953 + C10954) * C92105 +
            (C10854 + C10855 + C10856) * C181) *
               C92157 * C92195 +
           ((C10951 + C10950 + C10949) * C92105 +
            (C10847 + C10846 + C10845) * C181) *
               C92157 * C92337) *
              C92084 * C1384 +
          (((C10856 + C10855 + C10854) * C181 +
            (C10954 + C10953 + C10952) * C92105) *
               C92157 * C92337 +
           ((C4102 * C10808 + C4097 * C10811 + C4103 * C10809 + C4098 * C10812 +
             C4104 * C10810 + C4099 * C10813) *
                C181 +
            (C4102 * C10930 + C4097 * C10933 + C4103 * C10931 + C4098 * C10934 +
             C4104 * C10932 + C4099 * C10935) *
                C92105) *
               C92157 * C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C14523 +
            (C20147 * C181 + C20225 * C92105) * C14524 +
            (C20149 * C181 + C20226 * C92105) * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C181 +
             (C19671 * C1471 + C92067 * C1479) * C92105) *
                C14523 +
            (C22432 * C181 + C22513 * C92105) * C14524 +
            (C22430 * C181 + C22514 * C92105) * C14525) *
               C92195) *
              C93 -
          ((((C19671 * C8541 + C92067 * C8544) * C92105 +
             (C19671 * C8413 + C92067 * C8416) * C181) *
                C14525 +
            ((C19671 * C3514 + C92067 * C3518) * C92105 +
             (C19671 * C3432 + C92067 * C3436) * C181) *
                C14524 +
            ((C19671 * C1470 + C92067 * C1478) * C92105 +
             (C19671 * C1388 + C92067 * C1400) * C181) *
                C14523) *
               C92195 +
           ((C21268 * C92105 + C21185 * C181) * C14525 +
            (C21267 * C92105 + C21183 * C181) * C14524 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C14523) *
               C92337) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C181 +
             (C19671 * C893 + C92067 * C901) * C92105) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C181 +
             (C19671 * C8542 + C92067 * C8545) * C92105) *
                C14525) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C14523 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C14524 +
           (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
            C20154 * C886 + C20228 * C800) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C884 +
            (C19671 * C1471 + C92067 * C1479) * C798 - C22432 * C885 -
            C22513 * C799 + C22430 * C886 + C22514 * C800) *
               C14523 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C14524 +
           (C22430 * C884 + C22514 * C798 - C22428 * C885 - C22515 * C799 +
            (C19671 * C22410 + C92067 * C22411) * C886 +
            (C19671 * C22504 + C92067 * C22505) * C800) *
               C14525) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C14523 +
            (C20147 * C181 + C20225 * C92105) * C14524 +
            (C20149 * C181 + C20226 * C92105) * C14525) *
               C92337 +
           ((C24643 + C24663) * C14523 + (C24646 + C24647) * C14524 +
            (C24648 + C24649) * C14525) *
               C92195) *
              C92084 * C1383 -
          (((C24664 + C24652) * C14525 + (C24665 + C24655) * C14524 +
            (C24666 + C24658) * C14523) *
               C92195 +
           ((C24649 + C24648) * C14525 + (C24647 + C24646) * C14524 +
            (C24663 + C24643) * C14523) *
               C92337) *
              C92084 * C1384 +
          (((C24658 + C24666) * C14523 + (C24655 + C24665) * C14524 +
            (C24652 + C24664) * C14525) *
               C92337 +
           (((C19671 * C10808 + C92067 * C10811) * C181 +
             (C19671 * C10930 + C92067 * C10933) * C92105) *
                C14523 +
            ((C19671 * C24524 + C92067 * C24526) * C181 +
             (C19671 * C24638 + C92067 * C24640) * C92105) *
                C14524 +
            ((C19671 * C24525 + C92067 * C24528) * C181 +
             (C19671 * C24639 + C92067 * C24641) * C92105) *
                C14525) *
               C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C92157 * C38281 +
           (C24643 + C24663) * C92157 * C38282 + C34796 * C92157 * C38283 +
           (C34803 + C34810) * C92157 * C38284) *
              C93 -
          (((C19671 * C10931 + C92067 * C10934) * C92105 +
            (C19671 * C10809 + C92067 * C10812) * C181) *
               C92157 * C38284 +
           (C36539 + C36537) * C92157 * C38283 +
           (C26445 + C26443) * C92157 * C38282 +
           ((C19671 * C183 + C92067 * C189) * C92105 +
            (C19671 * C108 + C92067 * C114) * C181) *
               C92157 * C38281) *
              C94 +
          (((C19671 * C109 + C92067 * C115) * C181 +
            (C19671 * C184 + C92067 * C190) * C92105) *
               C92157 * C38281 +
           ((C19671 * C1387 + C92067 * C1399) * C181 +
            (C19671 * C1469 + C92067 * C1477) * C92105) *
               C92157 * C38282 +
           ((C19671 * C1392 + C92067 * C1404) * C181 +
            (C19671 * C1474 + C92067 * C1482) * C92105) *
               C92157 * C38283 +
           ((C19671 * C10810 + C92067 * C10813) * C181 +
            (C19671 * C10932 + C92067 * C10935) * C92105) *
               C92157 * C38284) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C884 +
           (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
           C20225 * C799 + C20149 * C886 + C20226 * C800) *
              C92157 * C38281 +
          (C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
           C22430 * C886 + C22514 * C800) *
              C92157 * C38282 +
          (C24556 * C884 + C24662 * C798 - C24554 * C885 - C24661 * C799 +
           C24552 * C886 + C24660 * C800) *
              C92157 * C38283 +
          (C34714 * C884 + C34807 * C798 - C34712 * C885 - C34806 * C799 +
           (C19671 * C24525 + C92067 * C24528) * C886 +
           (C19671 * C24639 + C92067 * C24641) * C800) *
              C92157 * C38284) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C92157 * C38281 +
           (C24643 + C24663) * C92157 * C38282 + C39257 * C38283 +
           C39262 * C38284) *
              C92084 * C1383 -
          ((C39264 + C39261) * C92157 * C38284 +
           (C34810 + C34803) * C92157 * C38283 +
           (C24666 + C24658) * C92157 * C38282 +
           (C24663 + C24643) * C92157 * C38281) *
              C92084 * C1384 +
          (C39257 * C38281 + C39262 * C38282 +
           (C39261 + C39264) * C92157 * C38283 +
           ((C19671 * C39189 + C92067 * C39190) * C181 +
            (C19671 * C39254 + C92067 * C39255) * C92105) *
               C92157 * C38284) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C244 +
                (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
                 C4104 * C247 + C4099 * C253) *
                    C92116) *
                   C92157 * C92337 +
               ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
                 C4104 * C1387 + C4099 * C1399) *
                    C244 +
                (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
                 C4104 * C1538 + C4099 * C1546) *
                    C92116) *
                   C92157 * C92195) *
                  C92105 * C93 -
              (((C4104 * C1537 + C4099 * C1545 + C4103 * C1538 + C4098 * C1546 +
                 C4102 * C1539 + C4097 * C1547) *
                    C92116 +
                (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
                 C4102 * C1388 + C4097 * C1400) *
                    C244) *
                   C92157 * C92195 +
               ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
                 C4102 * C246 + C4097 * C252) *
                    C92116 +
                (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
                 C4102 * C108 + C4097 * C114) *
                    C244) *
                   C92157 * C92337) *
                  C92105 * C94 +
              (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
                 C4104 * C111 + C4099 * C121) *
                    C244 +
                (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
                 C4104 * C249 + C4099 * C255) *
                    C92116) *
                   C92157 * C92337 +
               ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
                 C4104 * C2711 + C4099 * C2712) *
                    C244 +
                (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C4098 * C1545 +
                 C4104 * C2851 + C4099 * C2852) *
                    C92116) *
                   C92157 * C92195) *
                  C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
                 C4104 * C109 + C4099 * C115) *
                    C244 +
                (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
                 C4104 * C247 + C4099 * C253) *
                    C92116) *
                   C92157 * C92337 +
               ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
                 C4104 * C1387 + C4099 * C1399) *
                    C244 +
                (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
                 C4104 * C1538 + C4099 * C1546) *
                    C92116) *
                   C92157 * C92195) *
                  C798 -
              (((C8666 + C8667 + C8668) * C92116 +
                (C8440 + C8441 + C8442) * C244) *
                   C92157 * C92195 +
               ((C5106 + C5105 + C5104) * C92116 +
                (C4904 + C4903 + C4902) * C244) *
                   C92157 * C92337) *
                  C799 +
              (((C4913 + C4912 + C4911) * C244 +
                (C5109 + C5108 + C5107) * C92116) *
                   C92157 * C92337 +
               ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
                 C4104 * C8414 + C4099 * C8417) *
                    C244 +
                (C4102 * C8653 + C4097 * C8656 + C4103 * C8654 + C4098 * C8657 +
                 C4104 * C8655 + C4099 * C8658) *
                    C92116) *
                   C92157 * C92195) *
                  C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
            C4104 * C247 + C4099 * C253) *
               C1383 -
           (C10847 + C10846 + C10845) * C1535 -
           (C11047 + C11048 + C11049) * C1384 +
           (C10856 + C10855 + C10854) * C1536 +
           (C11050 + C11051 + C11052) * C1385) *
              C92157 * C92337 +
          ((C10845 + C10846 + C10847) * C1534 +
           (C11049 + C11048 + C11047) * C1383 -
           (C10854 + C10855 + C10856) * C1535 -
           (C11052 + C11051 + C11050) * C1384 +
           (C4102 * C10808 + C4097 * C10811 + C4103 * C10809 + C4098 * C10812 +
            C4104 * C10810 + C4099 * C10813) *
               C1536 +
           (C4102 * C11028 + C4097 * C11031 + C4103 * C11029 + C4098 * C11032 +
            C4104 * C11030 + C4099 * C11033) *
               C1385) *
              C92157 * C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C22432 * C244 + C22599 * C92116) * C14524 +
            (C22430 * C244 + C22600 * C92116) * C14525) *
               C92195) *
              C92105 * C93 -
          ((((C19671 * C8654 + C92067 * C8657) * C92116 +
             (C19671 * C8413 + C92067 * C8416) * C244) *
                C14525 +
            ((C19671 * C3588 + C92067 * C3592) * C92116 +
             (C19671 * C3432 + C92067 * C3436) * C244) *
                C14524 +
            ((C19671 * C1539 + C92067 * C1547) * C92116 +
             (C19671 * C1388 + C92067 * C1400) * C244) *
                C14523) *
               C92195 +
           ((C21349 + C21339) * C14525 + (C21348 + C21336) * C14524 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C14523) *
               C92337) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C244 +
             (C19671 * C959 + C92067 * C967) * C92116) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C244 +
             (C19671 * C8655 + C92067 * C8658) * C92116) *
                C14525) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C23916 + C23917) * C14524 + C23922 * C14525) *
               C92195) *
              C798 -
          (((C23920 + C23921) * C14525 + (C23919 + C23918) * C14524 +
            (C23917 + C23916) * C14523) *
               C92195 +
           ((C20299 + C20287) * C14525 + (C20298 + C20284) * C14524 +
            (C20297 + C20281) * C14523) *
               C92337) *
              C799 +
          ((C20301 * C14523 + C20302 * C14524 + (C20292 + C20300) * C14525) *
               C92337 +
           (C23922 * C14523 + (C23921 + C23920) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C244 +
             (C19671 * C22581 + C92067 * C22582) * C92116) *
                C14525) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1534 +
            (C19671 * C245 + C92067 * C251) * C1383 - C24549 * C1535 -
            C24753 * C1384 + C24556 * C1536 + C24754 * C1385) *
               C14523 +
           (C20147 * C1534 + C20293 * C1383 - C22432 * C1535 - C22599 * C1384 +
            C24554 * C1536 + C24755 * C1385) *
               C14524 +
           (C20149 * C1534 + C20294 * C1383 - C22430 * C1535 - C22600 * C1384 +
            C24552 * C1536 + C24756 * C1385) *
               C14525) *
              C92337 +
          ((C24549 * C1534 + C24753 * C1383 - C24556 * C1535 - C24754 * C1384 +
            (C19671 * C10808 + C92067 * C10811) * C1536 +
            (C19671 * C11028 + C92067 * C11031) * C1385) *
               C14523 +
           (C22432 * C1534 + C22599 * C1383 - C24554 * C1535 - C24755 * C1384 +
            (C19671 * C24524 + C92067 * C24526) * C1536 +
            (C19671 * C24740 + C92067 * C24742) * C1385) *
               C14524 +
           (C22430 * C1534 + C22600 * C1383 - C24552 * C1535 - C24756 * C1384 +
            (C19671 * C24525 + C92067 * C24528) * C1536 +
            (C19671 * C24741 + C92067 * C24743) * C1385) *
               C14525) *
              C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C92157 * C38281 +
           (C24549 * C244 + C24753 * C92116) * C92157 * C38282 +
           (C24556 * C244 + C24754 * C92116) * C92157 * C38283 +
           (C34714 * C244 + C34891 * C92116) * C92157 * C38284) *
              C92105 * C93 -
          (((C19671 * C11029 + C92067 * C11032) * C92116 +
            (C19671 * C10809 + C92067 * C10812) * C244) *
               C92157 * C38284 +
           (C36640 * C92116 + C36431 * C244) * C92157 * C38283 +
           (C26546 * C92116 + C26335 * C244) * C92157 * C38282 +
           ((C19671 * C246 + C92067 * C252) * C92116 +
            (C19671 * C108 + C92067 * C114) * C244) *
               C92157 * C38281) *
              C92105 * C94 +
          (((C19671 * C109 + C92067 * C115) * C244 +
            (C19671 * C247 + C92067 * C253) * C92116) *
               C92157 * C38281 +
           ((C19671 * C1387 + C92067 * C1399) * C244 +
            (C19671 * C1538 + C92067 * C1546) * C92116) *
               C92157 * C38282 +
           ((C19671 * C1392 + C92067 * C1404) * C244 +
            (C19671 * C1543 + C92067 * C1551) * C92116) *
               C92157 * C38283 +
           ((C19671 * C10810 + C92067 * C10813) * C244 +
            (C19671 * C11030 + C92067 * C11033) * C92116) *
               C92157 * C38284) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C92157 * C38281 +
           (C24549 * C244 + C24753 * C92116) * C92157 * C38282 +
           (C24556 * C244 + C24754 * C92116) * C92157 * C38283 +
           (C34714 * C244 + C34891 * C92116) * C92157 * C38284) *
              C798 -
          ((C34892 * C92116 + C34712 * C244) * C92157 * C38284 +
           (C34102 + C34101) * C92157 * C38283 +
           (C23917 + C23916) * C92157 * C38282 +
           (C20297 + C20281) * C92157 * C38281) *
              C799 +
          (C20301 * C92157 * C38281 + C23922 * C92157 * C38282 +
           (C34104 + C34103) * C92157 * C38283 +
           ((C19671 * C24525 + C92067 * C24528) * C244 +
            (C19671 * C24741 + C92067 * C24743) * C92116) *
               C92157 * C38284) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C1534 +
           (C19671 * C245 + C92067 * C251) * C1383 - C24549 * C1535 -
           C24753 * C1384 + C24556 * C1536 + C24754 * C1385) *
              C92157 * C38281 +
          (C24549 * C1534 + C24753 * C1383 - C24556 * C1535 - C24754 * C1384 +
           C34714 * C1536 + C34891 * C1385) *
              C92157 * C38282 +
          (C24556 * C1534 + C24754 * C1383 - C34714 * C1535 - C34891 * C1384 +
           C39202 * C1536 + C39319 * C1385) *
              C92157 * C38283 +
          (C34714 * C1534 + C34891 * C1383 - C39202 * C1535 - C39319 * C1384 +
           (C19671 * C39189 + C92067 * C39190) * C1536 +
           (C19671 * C39314 + C92067 * C39315) * C1385) *
              C92157 * C38284) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92157 * C308) * C104 +
                (C307 * C117 + C92157 * C314) * C93 - C337 * C105 - C338 * C94 +
                C339 * C106 + C340 * C95) *
                   C92337 +
               ((C307 * C1389 + C92157 * C1606) * C104 +
                (C307 * C1397 + C92157 * C1614) * C93 - C2934 * C105 -
                C2935 * C94 + C2936 * C106 + C2937 * C95) *
                   C92195) *
                  C4097 +
              ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                C341 * C106 + C342 * C95) *
                   C92337 +
               (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                C2938 * C106 + C2939 * C95) *
                   C92195) *
                  C4098 +
              ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                C343 * C106 + C344 * C95) *
                   C92337 +
               (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
                (C307 * C2711 + C92157 * C2919) * C106 +
                (C307 * C2713 + C92157 * C2920) * C95) *
                   C92195) *
                  C4099) *
             C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92157 * C308) * C801 +
                 (C307 * C117 + C92157 * C314) * C92084) *
                    C92337 +
                ((C307 * C1389 + C92157 * C1606) * C801 +
                 (C307 * C1397 + C92157 * C1614) * C92084) *
                    C92195) *
                   C4097 +
               ((C337 * C801 + C338 * C92084) * C92337 +
                (C2934 * C801 + C2935 * C92084) * C92195) *
                   C4098 +
               ((C339 * C801 + C340 * C92084) * C92337 +
                (C2936 * C801 + C2937 * C92084) * C92195) *
                   C4099) *
                  C92116 * C798 -
              ((((C307 * C3441 + C92157 * C3667) * C92084 +
                 (C307 * C3433 + C92157 * C3663) * C801) *
                    C92195 +
                (C2215 * C92084 + C2214 * C801) * C92337) *
                   C4099 +
               (((C307 * C3440 + C92157 * C3666) * C92084 +
                 (C307 * C3432 + C92157 * C3662) * C801) *
                    C92195 +
                (C2213 * C92084 + C2212 * C801) * C92337) *
                   C4098 +
               (((C307 * C3439 + C92157 * C3665) * C92084 +
                 (C307 * C3431 + C92157 * C3661) * C801) *
                    C92195 +
                ((C307 * C813 + C92157 * C1030) * C92084 +
                 (C307 * C805 + C92157 * C1022) * C801) *
                    C92337) *
                   C4097) *
                  C92116 * C799 +
              ((((C307 * C806 + C92157 * C1023) * C801 +
                 (C307 * C822 + C92157 * C1031) * C92084) *
                    C92337 +
                ((C307 * C8412 + C92157 * C8766) * C801 +
                 (C307 * C8418 + C92157 * C8769) * C92084) *
                    C92195) *
                   C4097 +
               (((C307 * C807 + C92157 * C1024) * C801 +
                 (C307 * C823 + C92157 * C1032) * C92084) *
                    C92337 +
                ((C307 * C8413 + C92157 * C8767) * C801 +
                 (C307 * C8419 + C92157 * C8770) * C92084) *
                    C92195) *
                   C4098 +
               (((C307 * C808 + C92157 * C1025) * C801 +
                 (C307 * C824 + C92157 * C1033) * C92084) *
                    C92337 +
                ((C307 * C8414 + C92157 * C8768) * C801 +
                 (C307 * C8420 + C92157 * C8771) * C92084) *
                    C92195) *
                   C4099) *
                  C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C92337 +
            (C11161 + C11162) * C92195) *
               C4097 +
           ((C337 * C801 + C338 * C92084) * C92337 +
            (C11137 + C11138) * C92195) *
               C4098 +
           ((C339 * C801 + C340 * C92084) * C92337 +
            (C11139 + C11140) * C92195) *
               C4099) *
              C1383 -
          (((C11163 + C11164) * C92195 + (C11140 + C11139) * C92337) * C4099 +
           ((C11165 + C11166) * C92195 + (C11138 + C11137) * C92337) * C4098 +
           ((C11167 + C11168) * C92195 + (C11162 + C11161) * C92337) * C4097) *
              C1384 +
          (((C11168 + C11167) * C92337 +
            ((C307 * C10808 + C92157 * C11126) * C801 +
             (C307 * C10814 + C92157 * C11129) * C92084) *
                C92195) *
               C4097 +
           ((C11166 + C11165) * C92337 +
            ((C307 * C10809 + C92157 * C11127) * C801 +
             (C307 * C10815 + C92157 * C11130) * C92084) *
                C92195) *
               C4098 +
           ((C11164 + C11163) * C92337 +
            ((C307 * C10810 + C92157 * C11128) * C801 +
             (C307 * C10816 + C92157 * C11131) * C92084) *
                C92195) *
               C4099) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C104 +
           (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
            C14752 * C822 + C14525 * C1031) *
               C93 -
           (C14778 + C14779 + C14780) * C105 -
           (C14781 + C14782 + C14783) * C94 +
           (C14784 + C14785 + C14786) * C106 +
           (C14787 + C14788 + C14789) * C95) *
              C92337 +
          ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
            C14752 * C8412 + C14525 * C8766) *
               C104 +
           (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 + C14524 * C3665 +
            C14752 * C8418 + C14525 * C8769) *
               C93 -
           (C18105 + C18104 + C18103) * C105 -
           (C18108 + C18107 + C18106) * C94 +
           (C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
            C14752 * C8414 + C14525 * C8768) *
               C106 +
           (C14750 * C1395 + C14523 * C1612 + C14751 * C3441 + C14524 * C3667 +
            C14752 * C8420 + C14525 * C8771) *
               C95) *
              C92195) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C801 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C92084) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C801 +
            (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 + C14524 * C3665 +
             C14752 * C8418 + C14525 * C8769) *
                C92084) *
               C92195) *
              C92067 * C92116 * C798 -
          (((C14752 * C18736 + C14525 * C19092 + C14751 * C8418 +
             C14524 * C8769 + C14750 * C3439 + C14523 * C3665) *
                C92084 +
            (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
             C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                C801) *
               C92195 +
           ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
             C14750 * C813 + C14523 * C1030) *
                C92084 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C801) *
               C92337) *
              C92067 * C92116 * C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C801 +
            (C14750 * C822 + C14523 * C1031 + C14751 * C4871 + C14524 * C5186 +
             C14752 * C15277 + C14525 * C15595) *
                C92084) *
               C92337 +
           ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
             C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                C801 +
            (C14750 * C8418 + C14523 * C8769 + C14751 * C18736 +
             C14524 * C19092 + C14752 * C22412 + C14525 * C22671) *
                C92084) *
               C92195) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C801 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C92084) *
               C92337 +
           ((C24859 + C24860 + C24861) * C801 +
            (C24862 + C24863 + C24864) * C92084) *
               C92195) *
              C92067 * C1383 -
          (((C24865 + C24866 + C24867) * C92084 +
            (C24868 + C24869 + C24870) * C801) *
               C92195 +
           ((C24864 + C24863 + C24862) * C92084 +
            (C24861 + C24860 + C24859) * C801) *
               C92337) *
              C92067 * C1384 +
          (((C24870 + C24869 + C24868) * C801 +
            (C24867 + C24866 + C24865) * C92084) *
               C92337 +
           ((C14750 * C10808 + C14523 * C11126 + C14751 * C24524 +
             C14524 * C24830 + C14752 * C24525 + C14525 * C24831) *
                C801 +
            (C14750 * C10814 + C14523 * C11129 + C14751 * C24527 +
             C14524 * C24832 + C14752 * C24529 + C14525 * C24833) *
                C92084) *
               C92195) *
              C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C104 +
           (C307 * C117 + C92157 * C314) * C93 - C337 * C105 - C338 * C94 +
           C339 * C106 + C340 * C95) *
              C38281 +
          (C11153 * C104 + C11154 * C93 - C2934 * C105 - C2935 * C94 +
           C2936 * C106 + C2937 * C95) *
              C38282 +
          (C11160 * C104 + C11159 * C93 - C11158 * C105 - C11157 * C94 +
           C11156 * C106 + C11155 * C95) *
              C38283 +
          (C29951 * C104 + C29950 * C93 - C29949 * C105 - C29948 * C94 +
           (C307 * C10810 + C92157 * C11128) * C106 +
           (C307 * C10816 + C92157 * C11131) * C95) *
              C38284) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C801 +
            (C307 * C117 + C92157 * C314) * C92084) *
               C38281 +
           (C11161 + C11162) * C38282 + C29938 * C38283 +
           (C29955 + C29954) * C38284) *
              C92067 * C92116 * C798 -
          (((C307 * C24527 + C92157 * C24832) * C92084 +
            (C307 * C24524 + C92157 * C24830) * C801) *
               C38284 +
           (C32706 + C32705) * C38283 + (C13947 + C13946) * C38282 +
           ((C307 * C813 + C92157 * C1030) * C92084 +
            (C307 * C805 + C92157 * C1022) * C801) *
               C38281) *
              C92067 * C92116 * C799 +
          (((C307 * C806 + C92157 * C1023) * C801 +
            (C307 * C822 + C92157 * C1031) * C92084) *
               C38281 +
           ((C307 * C8412 + C92157 * C8766) * C801 +
            (C307 * C8418 + C92157 * C8769) * C92084) *
               C38282 +
           ((C307 * C16095 + C92157 * C16333) * C801 +
            (C307 * C16099 + C92157 * C16335) * C92084) *
               C38283 +
           ((C307 * C24525 + C92157 * C24831) * C801 +
            (C307 * C24529 + C92157 * C24833) * C92084) *
               C38284) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C801 +
            (C307 * C117 + C92157 * C314) * C92084) *
               C38281 +
           (C11161 + C11162) * C38282 + C29938 * C38283 + C39372 * C38284) *
              C92067 * C1383 -
          ((C39379 + C39380) * C38284 + (C29954 + C29955) * C38283 +
           (C11167 + C11168) * C38282 + (C11162 + C11161) * C38281) *
              C92067 * C1384 +
          (C29938 * C38281 + C39372 * C38282 + (C39380 + C39379) * C38283 +
           ((C307 * C39189 + C92157 * C39369) * C801 +
            (C307 * C39191 + C92157 * C39370) * C92084) *
               C38284) *
              C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92157 * C308) * C181 +
                 (C307 * C182 + C92157 * C394) * C92105) *
                    C92337 +
                ((C307 * C1389 + C92157 * C1606) * C181 +
                 (C307 * C1471 + C92157 * C1672) * C92105) *
                    C92195) *
                   C4097 +
               ((C401 + C417) * C92337 + (C3007 + C3019) * C92195) * C4098 +
               C9678 * C4099) *
                  C93 -
              (((C3021 + C3013) * C92195 + (C419 + C407) * C92337) * C4099 +
               ((C3020 + C3010) * C92195 + (C418 + C404) * C92337) * C4098 +
               ((C3019 + C3007) * C92195 + (C417 + C401) * C92337) * C4097) *
                  C94 +
              (C9678 * C4097 +
               (C422 * C92337 + (C3013 + C3021) * C92195) * C4098 +
               ((C412 + C420) * C92337 +
                ((C307 * C2711 + C92157 * C2919) * C181 +
                 (C307 * C2781 + C92157 * C3005) * C92105) *
                    C92195) *
                   C4099) *
                  C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92157 * C308) * C884 +
                (C307 * C182 + C92157 * C394) * C798 -
                (C307 * C805 + C92157 * C1022) * C885 -
                (C307 * C890 + C92157 * C1085) * C799 +
                (C307 * C806 + C92157 * C1023) * C886 +
                (C307 * C891 + C92157 * C1086) * C800) *
                   C92337 +
               ((C307 * C1389 + C92157 * C1606) * C884 +
                (C307 * C1471 + C92157 * C1672) * C798 -
                (C307 * C3431 + C92157 * C3661) * C885 -
                (C307 * C3513 + C92157 * C3735) * C799 +
                (C307 * C8412 + C92157 * C8766) * C886 +
                (C307 * C8540 + C92157 * C8870) * C800) *
                   C92195) *
                  C4097 +
              ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
                (C307 * C807 + C92157 * C1024) * C886 +
                (C307 * C892 + C92157 * C1088) * C800) *
                   C92337 +
               (C2934 * C884 + C3016 * C798 -
                (C307 * C3432 + C92157 * C3662) * C885 -
                (C307 * C3514 + C92157 * C3736) * C799 +
                (C307 * C8413 + C92157 * C8767) * C886 +
                (C307 * C8541 + C92157 * C8871) * C800) *
                   C92195) *
                  C4098 +
              ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
                (C307 * C808 + C92157 * C1025) * C886 +
                (C307 * C893 + C92157 * C1090) * C800) *
                   C92337 +
               (C2936 * C884 + C3017 * C798 -
                (C307 * C3433 + C92157 * C3663) * C885 -
                (C307 * C3515 + C92157 * C3737) * C799 +
                (C307 * C8414 + C92157 * C8768) * C886 +
                (C307 * C8542 + C92157 * C8872) * C800) *
                   C92195) *
                  C4099) *
             C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92337 +
            (C11246 + C11262) * C92195) *
               C4097 +
           ((C401 + C417) * C92337 + (C3007 + C3019) * C92195) * C4098 +
           C9678 * C4099) *
              C92084 * C1383 -
          (((C11263 + C11251) * C92195 + (C3020 + C3010) * C92337) * C4099 +
           ((C11264 + C11254) * C92195 + (C3019 + C3007) * C92337) * C4098 +
           ((C11265 + C11257) * C92195 + (C11262 + C11246) * C92337) * C4097) *
              C92084 * C1384 +
          (((C11257 + C11265) * C92337 +
            ((C307 * C10808 + C92157 * C11126) * C181 +
             (C307 * C10930 + C92157 * C11242) * C92105) *
                C92195) *
               C4097 +
           ((C11254 + C11264) * C92337 +
            ((C307 * C10809 + C92157 * C11127) * C181 +
             (C307 * C10931 + C92157 * C11243) * C92105) *
                C92195) *
               C4098 +
           ((C11251 + C11263) * C92337 +
            ((C307 * C10810 + C92157 * C11128) * C181 +
             (C307 * C10932 + C92157 * C11244) * C92105) *
                C92195) *
               C4099) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C181 +
            (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
             C14752 * C8540 + C14525 * C8870) *
                C92105) *
               C92195) *
              C92067 * C93 -
          (((C18215 + C18214 + C18213) * C92105 +
            (C18105 + C18104 + C18103) * C181) *
               C92195 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92337) *
              C92067 * C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C181 +
            (C14750 * C1469 + C14523 * C1670 + C14751 * C3515 + C14524 * C3737 +
             C14752 * C8542 + C14525 * C8872) *
                C92105) *
               C92195) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92337 +
          ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
            C14752 * C8412 + C14525 * C8766) *
               C884 +
           (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
            C14752 * C8540 + C14525 * C8870) *
               C798 -
           (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
            C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
               C885 -
           (C14752 * C18862 + C14525 * C19192 + C14751 * C8540 +
            C14524 * C8870 + C14750 * C3513 + C14523 * C3735) *
               C799 +
           (C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
            C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
               C886 +
           (C14750 * C8540 + C14523 * C8870 + C14751 * C18862 +
            C14524 * C19192 + C14752 * C22504 + C14525 * C22738) *
               C800) *
              C92195) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92337 +
           ((C24859 + C24860 + C24861) * C181 +
            (C24959 + C24960 + C24961) * C92105) *
               C92195) *
              C92067 * C92084 * C1383 -
          (((C24962 + C24963 + C24964) * C92105 +
            (C24868 + C24869 + C24870) * C181) *
               C92195 +
           ((C24961 + C24960 + C24959) * C92105 +
            (C24861 + C24860 + C24859) * C181) *
               C92337) *
              C92067 * C92084 * C1384 +
          (((C24870 + C24869 + C24868) * C181 +
            (C24964 + C24963 + C24962) * C92105) *
               C92337 +
           ((C14750 * C10808 + C14523 * C11126 + C14751 * C24524 +
             C14524 * C24830 + C14752 * C24525 + C14525 * C24831) *
                C181 +
            (C14750 * C10930 + C14523 * C11242 + C14751 * C24638 +
             C14524 * C24944 + C14752 * C24639 + C14525 * C24945) *
                C92105) *
               C92195) *
              C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C38281 +
           (C11246 + C11262) * C38282 + C30032 * C38283 +
           (C30039 + C30043) * C38284) *
              C92067 * C93 -
          ((C30042 + C30036) * C38284 + C31838 * C38283 + C13095 * C38282 +
           (C417 + C401) * C38281) *
              C92067 * C94 +
          (C421 * C38281 + C9676 * C38282 + (C11251 + C11263) * C38283 +
           ((C307 * C10810 + C92157 * C11128) * C181 +
            (C307 * C10932 + C92157 * C11244) * C92105) *
               C38284) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C884 +
           (C307 * C182 + C92157 * C394) * C798 -
           (C307 * C805 + C92157 * C1022) * C885 -
           (C307 * C890 + C92157 * C1085) * C799 +
           (C307 * C806 + C92157 * C1023) * C886 +
           (C307 * C891 + C92157 * C1086) * C800) *
              C38281 +
          (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
           (C307 * C8412 + C92157 * C8766) * C886 +
           (C307 * C8540 + C92157 * C8870) * C800) *
              C38282 +
          (C11160 * C884 + C11261 * C798 - C32703 * C885 - C32811 * C799 +
           (C307 * C16095 + C92157 * C16333) * C886 +
           (C307 * C16177 + C92157 * C16411) * C800) *
              C38283 +
          (C29951 * C884 + C30041 * C798 -
           (C307 * C24524 + C92157 * C24830) * C885 -
           (C307 * C24638 + C92157 * C24944) * C799 +
           (C307 * C24525 + C92157 * C24831) * C886 +
           (C307 * C24639 + C92157 * C24945) * C800) *
              C38284) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C38281 +
           (C11246 + C11262) * C38282 + C30032 * C38283 + C39432 * C38284) *
              C92067 * C92084 * C1383 -
          ((C39437 + C39435) * C38284 + (C30043 + C30039) * C38283 +
           (C11265 + C11257) * C38282 + (C11262 + C11246) * C38281) *
              C92067 * C92084 * C1384 +
          (C30032 * C38281 + C39432 * C38282 + (C39435 + C39437) * C38283 +
           ((C307 * C39189 + C92157 * C39369) * C181 +
            (C307 * C39254 + C92157 * C39430) * C92105) *
               C38284) *
              C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92157 * C308) * C244 +
                 (C307 * C245 + C92157 * C474) * C92116) *
                    C92337 +
                ((C307 * C1389 + C92157 * C1606) * C244 +
                 (C307 * C1540 + C92157 * C1727) * C92116) *
                    C92195) *
                   C4097 +
               ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
               C9762 * C4099) *
                  C92105 * C93 -
              (((C9758 + C9759) * C92195 + (C499 + C487) * C92337) * C4099 +
               ((C9757 + C9756) * C92195 + (C498 + C484) * C92337) * C4098 +
               ((C9754 + C9753) * C92195 + (C497 + C481) * C92337) * C4097) *
                  C92105 * C94 +
              (C9762 * C4097 +
               (C502 * C92337 + (C9759 + C9758) * C92195) * C4098 +
               ((C492 + C500) * C92337 +
                ((C307 * C2711 + C92157 * C2919) * C244 +
                 (C307 * C2851 + C92157 * C3087) * C92116) *
                    C92195) *
                   C4099) *
                  C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92157 * C308) * C244 +
                 (C307 * C245 + C92157 * C474) * C92116) *
                    C92337 +
                ((C307 * C1389 + C92157 * C1606) * C244 +
                 (C307 * C1540 + C92157 * C1727) * C92116) *
                    C92195) *
                   C4097 +
               ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
               C9762 * C4099) *
                  C798 -
              ((((C307 * C3589 + C92157 * C3807) * C92116 +
                 (C307 * C3433 + C92157 * C3663) * C244) *
                    C92195 +
                (C2386 + C2378) * C92337) *
                   C4099 +
               (((C307 * C3588 + C92157 * C3806) * C92116 +
                 (C307 * C3432 + C92157 * C3662) * C244) *
                    C92195 +
                (C2387 + C2381) * C92337) *
                   C4098 +
               (((C307 * C3587 + C92157 * C3805) * C92116 +
                 (C307 * C3431 + C92157 * C3661) * C244) *
                    C92195 +
                ((C307 * C956 + C92157 * C1146) * C92116 +
                 (C307 * C805 + C92157 * C1022) * C244) *
                    C92337) *
                   C4097) *
                  C799 +
              ((((C307 * C806 + C92157 * C1023) * C244 +
                 (C307 * C957 + C92157 * C1147) * C92116) *
                    C92337 +
                ((C307 * C8412 + C92157 * C8766) * C244 +
                 (C307 * C8653 + C92157 * C8971) * C92116) *
                    C92195) *
                   C4097 +
               (((C307 * C807 + C92157 * C1024) * C244 +
                 (C307 * C958 + C92157 * C1148) * C92116) *
                    C92337 +
                ((C307 * C8413 + C92157 * C8767) * C244 +
                 (C307 * C8654 + C92157 * C8972) * C92116) *
                    C92195) *
                   C4098 +
               (((C307 * C808 + C92157 * C1025) * C244 +
                 (C307 * C959 + C92157 * C1149) * C92116) *
                    C92337 +
                ((C307 * C8414 + C92157 * C8768) * C244 +
                 (C307 * C8655 + C92157 * C8973) * C92116) *
                    C92195) *
                   C4099) *
                  C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1534 +
            (C307 * C245 + C92157 * C474) * C1383 - C11153 * C1535 -
            C11351 * C1384 + C11160 * C1536 + C11352 * C1385) *
               C92337 +
           (C11153 * C1534 + C11351 * C1383 - C11160 * C1535 - C11352 * C1384 +
            (C307 * C10808 + C92157 * C11126) * C1536 +
            (C307 * C11028 + C92157 * C11339) * C1385) *
               C92195) *
              C4097 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C11158 * C1536 + C11353 * C1385) *
               C92337 +
           (C2934 * C1534 + C3104 * C1383 - C11158 * C1535 - C11353 * C1384 +
            (C307 * C10809 + C92157 * C11127) * C1536 +
            (C307 * C11029 + C92157 * C11340) * C1385) *
               C92195) *
              C4098 +
          ((C339 * C1534 + C494 * C1383 - C2936 * C1535 - C3105 * C1384 +
            C11156 * C1536 + C11354 * C1385) *
               C92337 +
           (C2936 * C1534 + C3105 * C1383 - C11156 * C1535 - C11354 * C1384 +
            (C307 * C10810 + C92157 * C11128) * C1536 +
            (C307 * C11030 + C92157 * C11341) * C1385) *
               C92195) *
              C4099) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C92105 * C93 -
          (((C18320 + C18321 + C18322) * C92116 +
            (C18105 + C18104 + C18103) * C244) *
               C92195 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92337) *
              C92067 * C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C244 +
            (C14750 * C1538 + C14523 * C1731 + C14751 * C3589 + C14524 * C3807 +
             C14752 * C8655 + C14525 * C8973) *
                C92116) *
               C92195) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C798 -
          (((C14752 * C18976 + C14525 * C19292 + C14751 * C8653 +
             C14524 * C8971 + C14750 * C3587 + C14523 * C3805) *
                C92116 +
            (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
             C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                C244) *
               C92195 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92337) *
              C92067 * C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92337 +
           ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
             C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                C244 +
            (C14750 * C8653 + C14523 * C8971 + C14751 * C18976 +
             C14524 * C19292 + C14752 * C22581 + C14525 * C22805) *
                C92116) *
               C92195) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C1534 +
           (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
            C14752 * C957 + C14525 * C1147) *
               C1383 -
           (C24861 + C24860 + C24859) * C1535 -
           (C25053 + C25054 + C25055) * C1384 +
           (C24870 + C24869 + C24868) * C1536 +
           (C25056 + C25057 + C25058) * C1385) *
              C92337 +
          ((C24859 + C24860 + C24861) * C1534 +
           (C25055 + C25054 + C25053) * C1383 -
           (C24868 + C24869 + C24870) * C1535 -
           (C25058 + C25057 + C25056) * C1384 +
           (C14750 * C10808 + C14523 * C11126 + C14751 * C24524 +
            C14524 * C24830 + C14752 * C24525 + C14525 * C24831) *
               C1536 +
           (C14750 * C11028 + C14523 * C11339 + C14751 * C24740 +
            C14524 * C25038 + C14752 * C24741 + C14525 * C25039) *
               C1385) *
              C92195) *
         C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C38281 +
           (C11153 * C244 + C11351 * C92116) * C38282 +
           (C11160 * C244 + C11352 * C92116) * C38283 +
           (C29951 * C244 + C30124 * C92116) * C38284) *
              C92067 * C92105 * C93 -
          ((C30125 * C92116 + C29949 * C244) * C38284 +
           (C28572 + C28571) * C38283 + (C9754 + C9753) * C38282 +
           (C497 + C481) * C38281) *
              C92067 * C92105 * C94 +
          (C501 * C38281 + C9760 * C38282 + (C28574 + C28573) * C38283 +
           ((C307 * C10810 + C92157 * C11128) * C244 +
            (C307 * C11030 + C92157 * C11341) * C92116) *
               C38284) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C38281 +
           (C11153 * C244 + C11351 * C92116) * C38282 +
           (C11160 * C244 + C11352 * C92116) * C38283 +
           (C29951 * C244 + C30124 * C92116) * C38284) *
              C92067 * C798 -
          (((C307 * C24740 + C92157 * C25038) * C92116 +
            (C307 * C24524 + C92157 * C24830) * C244) *
               C38284 +
           (C32914 * C92116 + C32703 * C244) * C38283 +
           (C14153 * C92116 + C13944 * C244) * C38282 +
           ((C307 * C956 + C92157 * C1146) * C92116 +
            (C307 * C805 + C92157 * C1022) * C244) *
               C38281) *
              C92067 * C799 +
          (((C307 * C806 + C92157 * C1023) * C244 +
            (C307 * C957 + C92157 * C1147) * C92116) *
               C38281 +
           ((C307 * C8412 + C92157 * C8766) * C244 +
            (C307 * C8653 + C92157 * C8971) * C92116) *
               C38282 +
           ((C307 * C16095 + C92157 * C16333) * C244 +
            (C307 * C16255 + C92157 * C16487) * C92116) *
               C38283 +
           ((C307 * C24525 + C92157 * C24831) * C244 +
            (C307 * C24741 + C92157 * C25039) * C92116) *
               C38284) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C1534 +
           (C307 * C245 + C92157 * C474) * C1383 - C11153 * C1535 -
           C11351 * C1384 + C11160 * C1536 + C11352 * C1385) *
              C38281 +
          (C11153 * C1534 + C11351 * C1383 - C11160 * C1535 - C11352 * C1384 +
           C29951 * C1536 + C30124 * C1385) *
              C38282 +
          (C11160 * C1534 + C11352 * C1383 - C29951 * C1535 - C30124 * C1384 +
           C39378 * C1536 + C39491 * C1385) *
              C38283 +
          (C29951 * C1534 + C30124 * C1383 - C39378 * C1535 - C39491 * C1384 +
           (C307 * C39189 + C92157 * C39369) * C1536 +
           (C307 * C39314 + C92157 * C39487) * C1385) *
              C38284) *
         C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                   C104 +
               (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                   C93 -
               (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
               C9876 * C95) *
                  C4097 +
              ((C9864 + C9863) * C104 + (C9866 + C9865) * C93 -
               (C9868 + C9867) * C105 - (C9870 + C9869) * C94 +
               (C9871 + C9872) * C106 + (C9873 + C9874) * C95) *
                  C4098 +
              (C9875 * C104 + C9876 * C93 - (C9872 + C9871) * C105 -
               (C9874 + C9873) * C94 +
               (C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                   C106 +
               (C9836 * C122 + C92337 * C565 + C9837 * C2713 + C92195 * C3176) *
                   C95) *
                  C4099) *
             C92157 * C92116 * C92105 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 +
                 C92195 * C1788) *
                    C801 +
                (C9836 * C117 + C92337 * C561 + C9837 * C1397 +
                 C92195 * C1796) *
                    C92084) *
                   C4097 +
               ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
               (C9875 * C801 + C9876 * C92084) * C4099) *
                  C92157 * C92116 * C798 -
              (((C9837 * C3441 + C92195 * C3881 + C9836 * C811 +
                 C92337 * C1210) *
                    C92084 +
                (C9837 * C3433 + C92195 * C3877 + C9836 * C803 +
                 C92337 * C1202) *
                    C801) *
                   C4099 +
               ((C9837 * C3440 + C92195 * C3880 + C9836 * C812 +
                 C92337 * C1211) *
                    C92084 +
                (C9837 * C3432 + C92195 * C3876 + C9836 * C804 +
                 C92337 * C1203) *
                    C801) *
                   C4098 +
               ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 +
                 C92337 * C1212) *
                    C92084 +
                (C9837 * C3431 + C92195 * C3875 + C9836 * C805 +
                 C92337 * C1204) *
                    C801) *
                   C4097) *
                  C92157 * C92116 * C799 +
              (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 +
                 C92195 * C9072) *
                    C801 +
                (C9836 * C822 + C92337 * C1213 + C9837 * C8418 +
                 C92195 * C9075) *
                    C92084) *
                   C4097 +
               ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 +
                 C92195 * C9073) *
                    C801 +
                (C9836 * C823 + C92337 * C1214 + C9837 * C8419 +
                 C92195 * C9076) *
                    C92084) *
                   C4098 +
               ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 +
                 C92195 * C9074) *
                    C801 +
                (C9836 * C824 + C92337 * C1215 + C9837 * C8420 +
                 C92195 * C9077) *
                    C92084) *
                   C4099) *
                  C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C4097 +
           ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
           (C9875 * C801 + C9876 * C92084) * C4099) *
              C92157 * C1383 -
          (((C9837 * C1408 + C92195 * C1799 + C9836 * C1395 + C92337 * C1794) *
                C92084 +
            (C9837 * C1392 + C92195 * C1791 + C9836 * C1387 + C92337 * C1786) *
                C801) *
               C4099 +
           ((C9837 * C1407 + C92195 * C1798 + C9836 * C1396 + C92337 * C1795) *
                C92084 +
            (C9837 * C1391 + C92195 * C1790 + C9836 * C1388 + C92337 * C1787) *
                C801) *
               C4098 +
           ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                C92084 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C801) *
               C4097) *
              C92157 * C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C801 +
            (C9836 * C1406 + C92337 * C1797 + C9837 * C10814 +
             C92195 * C11431) *
                C92084) *
               C4097 +
           ((C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
             C92195 * C11429) *
                C801 +
            (C9836 * C1407 + C92337 * C1798 + C9837 * C10815 +
             C92195 * C11432) *
                C92084) *
               C4098 +
           ((C9836 * C1392 + C92337 * C1791 + C9837 * C10810 +
             C92195 * C11430) *
                C801 +
            (C9836 * C1408 + C92337 * C1799 + C9837 * C10816 +
             C92195 * C11433) *
                C92084) *
               C4099) *
              C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C92067 * C14523 +
          ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
               C104 +
           (C9836 * C813 + C92337 * C1212 + C9837 * C3439 + C92195 * C3879) *
               C93 -
           (C12328 + C12327) * C105 - (C12330 + C12329) * C94 +
           (C12331 + C12332) * C106 + (C12333 + C12334) * C95) *
              C92067 * C14524 +
          ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C104 +
           (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
               C93 -
           (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
               C105 -
           (C9837 * C8419 + C92195 * C9076 + C9836 * C823 + C92337 * C1214) *
               C94 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C106 +
           (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
               C95) *
              C92067 * C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C14523 +
           ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
               C14524 +
           C24260 * C14525) *
              C92116 * C798 -
          (((C24251 + C24252) * C92084 + (C24253 + C24254) * C801) * C92067 *
               C14525 +
           ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C92067 *
               C14524 +
           ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C92067 *
               C14523) *
              C92116 * C799 +
          (C24260 * C14523 +
           ((C24254 + C24253) * C801 + (C24252 + C24251) * C92084) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C801 +
            (C9836 * C15277 + C92337 * C15825 + C9837 * C22412 +
             C92195 * C22873) *
                C92084) *
               C92067 * C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C14523 +
           ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
               C14524 +
           C24260 * C14525) *
              C1383 -
          (((C9837 * C16099 + C92195 * C16565 + C9836 * C8418 +
             C92337 * C9075) *
                C92084 +
            (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
             C92337 * C9072) *
                C801) *
               C92067 * C14525 +
           ((C9837 * C5725 + C92195 * C6202 + C9836 * C3439 + C92337 * C3879) *
                C92084 +
            (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                C801) *
               C92067 * C14524 +
           ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                C92084 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C801) *
               C92067 * C14523) *
              C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C801 +
            (C9836 * C1406 + C92337 * C1797 + C9837 * C10814 +
             C92195 * C11431) *
                C92084) *
               C92067 * C14523 +
           ((C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
             C92195 * C25132) *
                C801 +
            (C9836 * C5725 + C92337 * C6202 + C9837 * C24527 +
             C92195 * C25134) *
                C92084) *
               C92067 * C14524 +
           ((C9836 * C16095 + C92337 * C16563 + C9837 * C24525 +
             C92195 * C25133) *
                C801 +
            (C9836 * C16099 + C92337 * C16565 + C9837 * C24529 +
             C92195 * C25135) *
                C92084) *
               C92067 * C14525) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
           C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
           C38284 * C11428) *
              C104 +
          (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
           C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
           C38284 * C11431) *
              C93 -
          (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 + C38283 * C1790 +
           C38586 * C1388 + C38282 * C1787 + C38585 * C108 + C38281 * C556) *
              C105 -
          (C38588 * C10815 + C38284 * C11432 + C38587 * C1407 + C38283 * C1798 +
           C38586 * C1396 + C38282 * C1795 + C38585 * C118 + C38281 * C562) *
              C94 +
          (C38585 * C109 + C38281 * C557 + C38586 * C1387 + C38282 * C1786 +
           C38587 * C1392 + C38283 * C1791 + C38588 * C10810 +
           C38284 * C11430) *
              C106 +
          (C38585 * C119 + C38281 * C563 + C38586 * C1395 + C38282 * C1794 +
           C38587 * C1408 + C38283 * C1799 + C38588 * C10816 +
           C38284 * C11433) *
              C95) *
         C92067 * C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C801 +
           (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
            C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
            C38284 * C11431) *
               C92084) *
              C92067 * C92157 * C92116 * C798 -
          ((C38588 * C24527 + C38284 * C25134 + C38587 * C5725 +
            C38283 * C6202 + C38586 * C3439 + C38282 * C3879 + C38585 * C813 +
            C38281 * C1212) *
               C92084 +
           (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
            C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
            C38281 * C1204) *
               C801) *
              C92067 * C92157 * C92116 * C799 +
          ((C38585 * C806 + C38281 * C1205 + C38586 * C8412 + C38282 * C9072 +
            C38587 * C16095 + C38283 * C16563 + C38588 * C24525 +
            C38284 * C25133) *
               C801 +
           (C38585 * C822 + C38281 * C1213 + C38586 * C8418 + C38282 * C9075 +
            C38587 * C16099 + C38283 * C16565 + C38588 * C24529 +
            C38284 * C25135) *
               C92084) *
              C92067 * C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C801 +
           (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
            C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
            C38284 * C11431) *
               C92084) *
              C92067 * C92157 * C1383 -
          ((C38588 * C29615 + C38284 * C30201 + C38587 * C10814 +
            C38283 * C11431 + C38586 * C1406 + C38282 * C1797 + C38585 * C1397 +
            C38281 * C1796) *
               C92084 +
           (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
            C38283 * C11428 + C38586 * C1390 + C38282 * C1789 + C38585 * C1389 +
            C38281 * C1788) *
               C801) *
              C92067 * C92157 * C1384 +
          ((C38585 * C1390 + C38281 * C1789 + C38586 * C10808 +
            C38282 * C11428 + C38587 * C29611 + C38283 * C30199 +
            C38588 * C39189 + C38284 * C39541) *
               C801 +
           (C38585 * C1406 + C38281 * C1797 + C38586 * C10814 +
            C38282 * C11431 + C38587 * C29615 + C38283 * C30201 +
            C38588 * C39191 + C38284 * C39542) *
               C92084) *
              C92067 * C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 +
                 C92195 * C1788) *
                    C181 +
                (C9836 * C182 + C92337 * C641 + C9837 * C1471 +
                 C92195 * C1854) *
                    C92105) *
                   C4097 +
               ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
               C9972 * C4099) *
                  C92157 * C93 -
              (((C9968 + C9969) * C92105 + (C9872 + C9871) * C181) * C4099 +
               ((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C4098 +
               ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C4097) *
                  C92157 * C94 +
              (C9972 * C4097 +
               ((C9871 + C9872) * C181 + (C9969 + C9968) * C92105) * C4098 +
               ((C9836 * C111 + C92337 * C559 + C9837 * C2711 +
                 C92195 * C3175) *
                    C181 +
                (C9836 * C186 + C92337 * C645 + C9837 * C2781 +
                 C92195 * C3261) *
                    C92105) *
                   C4099) *
                  C92157 * C95) *
             C92116 +
         0.5 * std::pow(Pi, 2.5) *
             (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                   C884 +
               (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                   C798 -
               (C9837 * C3431 + C92195 * C3875 + C9836 * C805 +
                C92337 * C1204) *
                   C885 -
               (C9837 * C3513 + C92195 * C3949 + C9836 * C890 +
                C92337 * C1267) *
                   C799 +
               (C9836 * C806 + C92337 * C1205 + C9837 * C8412 +
                C92195 * C9072) *
                   C886 +
               (C9836 * C891 + C92337 * C1268 + C9837 * C8540 +
                C92195 * C9188) *
                   C800) *
                  C4097 +
              ((C9864 + C9863) * C884 + (C9964 + C9965) * C798 -
               (C9837 * C3432 + C92195 * C3876 + C9836 * C804 +
                C92337 * C1203) *
                   C885 -
               (C9837 * C3514 + C92195 * C3950 + C9836 * C889 +
                C92337 * C1269) *
                   C799 +
               (C9836 * C807 + C92337 * C1206 + C9837 * C8413 +
                C92195 * C9073) *
                   C886 +
               (C9836 * C892 + C92337 * C1270 + C9837 * C8541 +
                C92195 * C9189) *
                   C800) *
                  C4098 +
              (C9875 * C884 + C9970 * C798 -
               (C9837 * C3433 + C92195 * C3877 + C9836 * C803 +
                C92337 * C1202) *
                   C885 -
               (C9837 * C3515 + C92195 * C3951 + C9836 * C888 +
                C92337 * C1271) *
                   C799 +
               (C9836 * C808 + C92337 * C1207 + C9837 * C8414 +
                C92195 * C9074) *
                   C886 +
               (C9836 * C893 + C92337 * C1272 + C9837 * C8542 +
                C92195 * C9190) *
                   C800) *
                  C4099) *
             C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C4097 +
           ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
           C9972 * C4099) *
              C92157 * C92084 * C1383 -
          (((C9837 * C1474 + C92195 * C1857 + C9836 * C1469 + C92337 * C1852) *
                C92105 +
            (C9837 * C1392 + C92195 * C1791 + C9836 * C1387 + C92337 * C1786) *
                C181) *
               C4099 +
           ((C9837 * C1473 + C92195 * C1856 + C9836 * C1470 + C92337 * C1853) *
                C92105 +
            (C9837 * C1391 + C92195 * C1790 + C9836 * C1388 + C92337 * C1787) *
                C181) *
               C4098 +
           ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                C92105 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C181) *
               C4097) *
              C92157 * C92084 * C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C181 +
            (C9836 * C1472 + C92337 * C1855 + C9837 * C10930 +
             C92195 * C11508) *
                C92105) *
               C4097 +
           ((C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
             C92195 * C11429) *
                C181 +
            (C9836 * C1473 + C92337 * C1856 + C9837 * C10931 +
             C92195 * C11509) *
                C92105) *
               C4098 +
           ((C9836 * C1392 + C92337 * C1791 + C9837 * C10810 +
             C92195 * C11430) *
                C181 +
            (C9836 * C1474 + C92337 * C1857 + C9837 * C10932 +
             C92195 * C11510) *
                C92105) *
               C4099) *
              C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C181 +
            (C9836 * C890 + C92337 * C1267 + C9837 * C3513 + C92195 * C3949) *
                C92105) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C181 +
            (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
                C92105) *
               C92067 * C14525) *
              C93 -
          (((C9837 * C8541 + C92195 * C9189 + C9836 * C892 + C92337 * C1270) *
                C92105 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C181) *
               C92067 * C14525 +
           ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C92067 *
               C14524 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C92067 *
               C14523) *
              C94 +
          (C9972 * C92067 * C14523 +
           ((C12331 + C12332) * C181 + (C12444 + C12443) * C92105) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C181 +
            (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
                C92105) *
               C92067 * C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C24244 + C24243) * C885 - (C24347 + C24348) * C799 + C24255 * C886 +
           C24353 * C800) *
              C92067 * C14523 +
          ((C24243 + C24244) * C884 + (C24348 + C24347) * C798 -
           (C24248 + C24247) * C885 - (C24350 + C24349) * C799 +
           (C24254 + C24253) * C886 + (C24351 + C24352) * C800) *
              C92067 * C14524 +
          (C24255 * C884 + C24353 * C798 - (C24253 + C24254) * C885 -
           (C24352 + C24351) * C799 +
           (C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
            C92195 * C22872) *
               C886 +
           (C9836 * C15396 + C92337 * C15922 + C9837 * C22504 +
            C92195 * C22948) *
               C800) *
              C92067 * C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C14523 +
           ((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C92067 *
               C14524 +
           (C24255 * C181 + C24353 * C92105) * C92067 * C14525) *
              C92084 * C1383 -
          (((C9837 * C16177 + C92195 * C16641 + C9836 * C8540 +
             C92337 * C9188) *
                C92105 +
            (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
             C92337 * C9072) *
                C181) *
               C92067 * C14525 +
           ((C9837 * C5805 + C92195 * C6279 + C9836 * C3513 + C92337 * C3949) *
                C92105 +
            (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                C181) *
               C92067 * C14524 +
           ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                C92105 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C181) *
               C92067 * C14523) *
              C92084 * C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C181 +
            (C9836 * C1472 + C92337 * C1855 + C9837 * C10930 +
             C92195 * C11508) *
                C92105) *
               C92067 * C14523 +
           ((C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
             C92195 * C25132) *
                C181 +
            (C9836 * C5805 + C92337 * C6279 + C9837 * C24638 +
             C92195 * C25210) *
                C92105) *
               C92067 * C14524 +
           ((C9836 * C16095 + C92337 * C16563 + C9837 * C24525 +
             C92195 * C25133) *
                C181 +
            (C9836 * C16177 + C92337 * C16641 + C9837 * C24639 +
             C92195 * C25211) *
                C92105) *
               C92067 * C14525) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C181 +
           (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
            C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
            C38284 * C11508) *
               C92105) *
              C92067 * C92157 * C93 -
          ((C38588 * C10931 + C38284 * C11509 + C38587 * C1473 +
            C38283 * C1856 + C38586 * C1470 + C38282 * C1853 + C38585 * C183 +
            C38281 * C642) *
               C92105 +
           (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
            C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
            C38281 * C556) *
               C181) *
              C92067 * C92157 * C94 +
          ((C38585 * C109 + C38281 * C557 + C38586 * C1387 + C38282 * C1786 +
            C38587 * C1392 + C38283 * C1791 + C38588 * C10810 +
            C38284 * C11430) *
               C181 +
           (C38585 * C184 + C38281 * C643 + C38586 * C1469 + C38282 * C1852 +
            C38587 * C1474 + C38283 * C1857 + C38588 * C10932 +
            C38284 * C11510) *
               C92105) *
              C92067 * C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
           C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
           C38284 * C11428) *
              C884 +
          (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
           C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
           C38284 * C11508) *
              C798 -
          (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 + C38283 * C6199 +
           C38586 * C3431 + C38282 * C3875 + C38585 * C805 + C38281 * C1204) *
              C885 -
          (C38588 * C24638 + C38284 * C25210 + C38587 * C5805 + C38283 * C6279 +
           C38586 * C3513 + C38282 * C3949 + C38585 * C890 + C38281 * C1267) *
              C799 +
          (C38585 * C806 + C38281 * C1205 + C38586 * C8412 + C38282 * C9072 +
           C38587 * C16095 + C38283 * C16563 + C38588 * C24525 +
           C38284 * C25133) *
              C886 +
          (C38585 * C891 + C38281 * C1268 + C38586 * C8540 + C38282 * C9188 +
           C38587 * C16177 + C38283 * C16641 + C38588 * C24639 +
           C38284 * C25211) *
              C800) *
         C92067 * C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C181 +
           (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
            C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
            C38284 * C11508) *
               C92105) *
              C92067 * C92157 * C92084 * C1383 -
          ((C38588 * C29735 + C38284 * C30277 + C38587 * C10930 +
            C38283 * C11508 + C38586 * C1472 + C38282 * C1855 + C38585 * C1471 +
            C38281 * C1854) *
               C92105 +
           (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
            C38283 * C11428 + C38586 * C1390 + C38282 * C1789 + C38585 * C1389 +
            C38281 * C1788) *
               C181) *
              C92067 * C92157 * C92084 * C1384 +
          ((C38585 * C1390 + C38281 * C1789 + C38586 * C10808 +
            C38282 * C11428 + C38587 * C29611 + C38283 * C30199 +
            C38588 * C39189 + C38284 * C39541) *
               C181 +
           (C38585 * C1472 + C38281 * C1855 + C38586 * C10930 +
            C38282 * C11508 + C38587 * C29735 + C38283 * C30277 +
            C38588 * C39254 + C38284 * C39593) *
               C92105) *
              C92067 * C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 +
                 C92195 * C1788) *
                    C244 +
                (C9836 * C245 + C92337 * C719 + C9837 * C1540 +
                 C92195 * C1909) *
                    C92116) *
                   C4097 +
               ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
               C10068 * C4099) *
                  C92157 * C92105 * C93 -
              (((C10064 + C10065) * C92116 + (C9872 + C9871) * C244) * C4099 +
               ((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C4098 +
               ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C4097) *
                  C92157 * C92105 * C94 +
              (C10068 * C4097 +
               ((C9871 + C9872) * C244 + (C10065 + C10064) * C92116) * C4098 +
               ((C9836 * C111 + C92337 * C559 + C9837 * C2711 +
                 C92195 * C3175) *
                    C244 +
                (C9836 * C249 + C92337 * C723 + C9837 * C2851 +
                 C92195 * C3343) *
                    C92116) *
                   C4099) *
                  C92157 * C92105 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 +
                 C92195 * C1788) *
                    C244 +
                (C9836 * C245 + C92337 * C719 + C9837 * C1540 +
                 C92195 * C1909) *
                    C92116) *
                   C4097 +
               ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
               C10068 * C4099) *
                  C92157 * C798 -
              (((C9837 * C3589 + C92195 * C4021 + C9836 * C954 +
                 C92337 * C1326) *
                    C92116 +
                (C9837 * C3433 + C92195 * C3877 + C9836 * C803 +
                 C92337 * C1202) *
                    C244) *
                   C4099 +
               ((C9837 * C3588 + C92195 * C4020 + C9836 * C955 +
                 C92337 * C1327) *
                    C92116 +
                (C9837 * C3432 + C92195 * C3876 + C9836 * C804 +
                 C92337 * C1203) *
                    C244) *
                   C4098 +
               ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 +
                 C92337 * C1328) *
                    C92116 +
                (C9837 * C3431 + C92195 * C3875 + C9836 * C805 +
                 C92337 * C1204) *
                    C244) *
                   C4097) *
                  C92157 * C799 +
              (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 +
                 C92195 * C9072) *
                    C244 +
                (C9836 * C957 + C92337 * C1329 + C9837 * C8653 +
                 C92195 * C9292) *
                    C92116) *
                   C4097 +
               ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 +
                 C92195 * C9073) *
                    C244 +
                (C9836 * C958 + C92337 * C1330 + C9837 * C8654 +
                 C92195 * C9293) *
                    C92116) *
                   C4098 +
               ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 +
                 C92195 * C9074) *
                    C244 +
                (C9836 * C959 + C92337 * C1331 + C9837 * C8655 +
                 C92195 * C9294) *
                    C92116) *
                   C4099) *
                  C92157 * C800) *
             C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C1534 +
           (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
               C1383 -
           (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
               C1535 -
           (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
               C1384 +
           (C9836 * C1390 + C92337 * C1789 + C9837 * C10808 + C92195 * C11428) *
               C1536 +
           (C9836 * C1541 + C92337 * C1910 + C9837 * C11028 + C92195 * C11585) *
               C1385) *
              C4097 +
          ((C9864 + C9863) * C1534 + (C10060 + C10061) * C1383 -
           (C9837 * C1391 + C92195 * C1790 + C9836 * C1388 + C92337 * C1787) *
               C1535 -
           (C9837 * C1542 + C92195 * C1912 + C9836 * C1539 + C92337 * C1911) *
               C1384 +
           (C9836 * C1391 + C92337 * C1790 + C9837 * C10809 + C92195 * C11429) *
               C1536 +
           (C9836 * C1542 + C92337 * C1912 + C9837 * C11029 + C92195 * C11586) *
               C1385) *
              C4098 +
          (C9875 * C1534 + C10066 * C1383 -
           (C9837 * C1392 + C92195 * C1791 + C9836 * C1387 + C92337 * C1786) *
               C1535 -
           (C9837 * C1543 + C92195 * C1914 + C9836 * C1538 + C92337 * C1913) *
               C1384 +
           (C9836 * C1392 + C92337 * C1791 + C9837 * C10810 + C92195 * C11430) *
               C1536 +
           (C9836 * C1543 + C92337 * C1914 + C9837 * C11030 + C92195 * C11587) *
               C1385) *
              C4099) *
         C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C244 +
            (C9836 * C956 + C92337 * C1328 + C9837 * C3587 + C92195 * C4019) *
                C92116) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C92067 * C14525) *
              C92105 * C93 -
          (((C9837 * C8654 + C92195 * C9293 + C9836 * C958 + C92337 * C1330) *
                C92116 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C244) *
               C92067 * C14525 +
           ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92067 *
               C14524 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C92067 *
               C14523) *
              C92105 * C94 +
          (C10068 * C92067 * C14523 +
           ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C92067 * C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C92067 *
               C14524 +
           C24450 * C14525) *
              C798 -
          (((C24445 + C24446) * C92116 + (C24253 + C24254) * C244) * C92067 *
               C14525 +
           ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C92067 *
               C14524 +
           ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C92067 *
               C14523) *
              C799 +
          (C24450 * C14523 +
           ((C24254 + C24253) * C244 + (C24446 + C24445) * C92116) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C244 +
            (C9836 * C15493 + C92337 * C16004 + C9837 * C22581 +
             C92195 * C23018) *
                C92116) *
               C92067 * C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C1534 +
           (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
               C1383 -
           (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
               C1535 -
           (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
               C1384 +
           (C9836 * C1390 + C92337 * C1789 + C9837 * C10808 + C92195 * C11428) *
               C1536 +
           (C9836 * C1541 + C92337 * C1910 + C9837 * C11028 + C92195 * C11585) *
               C1385) *
              C92067 * C14523 +
          ((C24243 + C24244) * C1534 + (C24441 + C24442) * C1383 -
           (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
               C1535 -
           (C9837 * C5885 + C92195 * C6356 + C9836 * C3587 + C92337 * C4019) *
               C1384 +
           (C9836 * C5719 + C92337 * C6199 + C9837 * C24524 + C92195 * C25132) *
               C1536 +
           (C9836 * C5885 + C92337 * C6356 + C9837 * C24740 + C92195 * C25286) *
               C1385) *
              C92067 * C14524 +
          (C24255 * C1534 + C24447 * C1383 -
           (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 + C92337 * C9072) *
               C1535 -
           (C9837 * C16255 + C92195 * C16717 + C9836 * C8653 + C92337 * C9292) *
               C1384 +
           (C9836 * C16095 + C92337 * C16563 + C9837 * C24525 +
            C92195 * C25133) *
               C1536 +
           (C9836 * C16255 + C92337 * C16717 + C9837 * C24741 +
            C92195 * C25287) *
               C1385) *
              C92067 * C14525) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C244 +
           (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
            C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
            C38284 * C11585) *
               C92116) *
              C92067 * C92157 * C92105 * C93 -
          ((C38588 * C11029 + C38284 * C11586 + C38587 * C1542 +
            C38283 * C1912 + C38586 * C1539 + C38282 * C1911 + C38585 * C246 +
            C38281 * C720) *
               C92116 +
           (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
            C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
            C38281 * C556) *
               C244) *
              C92067 * C92157 * C92105 * C94 +
          ((C38585 * C109 + C38281 * C557 + C38586 * C1387 + C38282 * C1786 +
            C38587 * C1392 + C38283 * C1791 + C38588 * C10810 +
            C38284 * C11430) *
               C244 +
           (C38585 * C247 + C38281 * C721 + C38586 * C1538 + C38282 * C1913 +
            C38587 * C1543 + C38283 * C1914 + C38588 * C11030 +
            C38284 * C11587) *
               C92116) *
              C92067 * C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C244 +
           (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
            C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
            C38284 * C11585) *
               C92116) *
              C92067 * C92157 * C798 -
          ((C38588 * C24740 + C38284 * C25286 + C38587 * C5885 +
            C38283 * C6356 + C38586 * C3587 + C38282 * C4019 + C38585 * C956 +
            C38281 * C1328) *
               C92116 +
           (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
            C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
            C38281 * C1204) *
               C244) *
              C92067 * C92157 * C799 +
          ((C38585 * C806 + C38281 * C1205 + C38586 * C8412 + C38282 * C9072 +
            C38587 * C16095 + C38283 * C16563 + C38588 * C24525 +
            C38284 * C25133) *
               C244 +
           (C38585 * C957 + C38281 * C1329 + C38586 * C8653 + C38282 * C9292 +
            C38587 * C16255 + C38283 * C16717 + C38588 * C24741 +
            C38284 * C25287) *
               C92116) *
              C92067 * C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
           C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
           C38284 * C11428) *
              C1534 +
          (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
           C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
           C38284 * C11585) *
              C1383 -
          (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
           C38283 * C11428 + C38586 * C1390 + C38282 * C1789 + C38585 * C1389 +
           C38281 * C1788) *
              C1535 -
          (C38588 * C29836 + C38284 * C30353 + C38587 * C11028 +
           C38283 * C11585 + C38586 * C1541 + C38282 * C1910 + C38585 * C1540 +
           C38281 * C1909) *
              C1384 +
          (C38585 * C1390 + C38281 * C1789 + C38586 * C10808 + C38282 * C11428 +
           C38587 * C29611 + C38283 * C30199 + C38588 * C39189 +
           C38284 * C39541) *
              C1536 +
          (C38585 * C1541 + C38281 * C1910 + C38586 * C11028 + C38282 * C11585 +
           C38587 * C29836 + C38283 * C30353 + C38588 * C39314 +
           C38284 * C39644) *
              C1385) *
         C92067 * C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C14523 +
                      (C21165 + C21166 - C21189 - C21190) * C14524 +
                      (C21171 + C21172 - C21191 - C21192) * C14525) *
                         C92337 +
                     ((C26329 + C26330 - C26337 - C26338) * C14523 +
                      (C25387 + C25388 - C25403 - C25404) * C14524 +
                      (C25393 + C25394 - C25405 - C25406) * C14525) *
                         C92195) *
                        C2709 +
                    (((C26337 - (C26330 + C26329) + C26338) * C14523 +
                      (C25403 - (C25388 + C25387) + C25404) * C14524 +
                      (C25405 - (C25394 + C25393) + C25406) * C14525) *
                         C92337 +
                     (((C19671 * C1391 + C92067 * C1403) * C1988 -
                       (C24555 * C1983 + C24556 * C1987) +
                       (C19671 * C1407 + C92067 * C1415) * C1984) *
                          C14523 +
                      ((C19671 * C5720 + C92067 * C5723) * C1988 -
                       (C24553 * C1983 + C24554 * C1987) +
                       (C19671 * C5726 + C92067 * C5729) * C1984) *
                          C14524 +
                      ((C19671 * C16096 + C92067 * C16098) * C1988 -
                       (C24551 * C1983 + C24552 * C1987) +
                       (C19671 * C16100 + C92067 * C16102) * C1984) *
                          C14525) *
                         C92195) *
                        C2710) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                       C4098 * C114 + C4104 * C109 + C4099 * C115) *
                          C1987 +
                      (C4102 * C117 + C4097 * C125 + C4103 * C118 +
                       C4098 * C126 + C4104 * C119 + C4099 * C127) *
                          C1983 -
                      (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                       C4098 * C115 + C4102 * C108 + C4097 * C114) *
                          C1988 -
                      (C4104 * C120 + C4099 * C128 + C4103 * C119 +
                       C4098 * C127 + C4102 * C118 + C4097 * C126) *
                          C1984) *
                         C92157 * C92337 +
                     ((C10845 + C10846 + C10847) * C1987 +
                      (C10848 + C10849 + C10850) * C1983 -
                      (C12665 + C12666 + C12667) * C1988 -
                      (C12668 + C12669 + C12670) * C1984) *
                         C92157 * C92195) *
                        C2709 +
                    (((C12667 + C12666 + C12665) * C1988 -
                      ((C10850 + C10849 + C10848) * C1983 +
                       (C10847 + C10846 + C10845) * C1987) +
                      (C12670 + C12669 + C12668) * C1984) *
                         C92157 * C92337 +
                     ((C4102 * C1391 + C4097 * C1403 + C4103 * C1392 +
                       C4098 * C1404 + C4104 * C1393 + C4099 * C1405) *
                          C1988 -
                      ((C10851 + C10852 + C10853) * C1983 +
                       (C10854 + C10855 + C10856) * C1987) +
                      (C4102 * C1407 + C4097 * C1415 + C4103 * C1408 +
                       C4098 * C1416 + C4104 * C1409 + C4099 * C1417) *
                          C1984) *
                         C92157 * C92195) *
                        C2710) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C19671 * C107 + C92067 * C113) * C1987 +
                      (C19671 * C117 + C92067 * C125) * C1983 -
                      (C19671 * C108 + C92067 * C114) * C1988 -
                      (C19671 * C118 + C92067 * C126) * C1984) *
                         C92157 * C38281 +
                     (C26329 + C26330 - C26337 - C26338) * C92157 * C38282 +
                     (C36425 + C36426 - C36433 - C36434) * C92157 * C38283 +
                     (C40306 + C40307 - C40314 - C40315) * C92157 * C38284) *
                        C2709 +
                    ((C26337 - (C26330 + C26329) + C26338) * C92157 * C38281 +
                     (C36433 - (C36426 + C36425) + C36434) * C92157 * C38282 +
                     (C40314 - (C40307 + C40306) + C40315) * C92157 * C38283 +
                     ((C19671 * C29612 + C92067 * C29614) * C1988 -
                      (C39201 * C1983 + C39202 * C1987) +
                      (C19671 * C29616 + C92067 * C29618) * C1984) *
                         C92157 * C38284) *
                        C2710) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eexy[43] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C19671 * C107 + C92067 * C113) * C181 +
                        (C19671 * C182 + C92067 * C188) * C92105) *
                           C14523 +
                       (C20147 * C181 + C20225 * C92105) * C14524 +
                       (C20149 * C181 + C20226 * C92105) * C14525) *
                          C92337 +
                      ((C24643 + C24663) * C14523 + (C24646 + C24647) * C14524 +
                       (C24648 + C24649) * C14525) *
                          C92195) *
                         C1983 -
                     (((C26437 + C26438) * C14525 + (C26439 + C26440) * C14524 +
                       (C26445 + C26443) * C14523) *
                          C92195 +
                      ((C21268 * C92105 + C21185 * C181) * C14525 +
                       (C21267 * C92105 + C21183 * C181) * C14524 +
                       ((C19671 * C183 + C92067 * C189) * C92105 +
                        (C19671 * C108 + C92067 * C114) * C181) *
                           C14523) *
                          C92337) *
                         C1984) *
                        C2709 +
                    ((((C26443 + C26445) * C14523 + (C26440 + C26439) * C14524 +
                       (C26438 + C26437) * C14525) *
                          C92337 +
                      (((C19671 * C1391 + C92067 * C1403) * C181 +
                        (C19671 * C1473 + C92067 * C1481) * C92105) *
                           C14523 +
                       ((C19671 * C5720 + C92067 * C5723) * C181 +
                        (C19671 * C5806 + C92067 * C5809) * C92105) *
                           C14524 +
                       ((C19671 * C16096 + C92067 * C16098) * C181 +
                        (C19671 * C16178 + C92067 * C16180) * C92105) *
                           C14525) *
                          C92195) *
                         C1984 -
                     (((C24664 + C24652) * C14525 + (C24665 + C24655) * C14524 +
                       (C24666 + C24658) * C14523) *
                          C92195 +
                      ((C24649 + C24648) * C14525 + (C24647 + C24646) * C14524 +
                       (C24663 + C24643) * C14523) *
                          C92337) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                        C4098 * C114 + C4104 * C109 + C4099 * C115) *
                           C181 +
                       (C4102 * C182 + C4097 * C188 + C4103 * C183 +
                        C4098 * C189 + C4104 * C184 + C4099 * C190) *
                           C92105) *
                          C92157 * C92337 +
                      ((C10845 + C10846 + C10847) * C181 +
                       (C10949 + C10950 + C10951) * C92105) *
                          C92157 * C92195) *
                         C1983 -
                     (((C12775 + C12776 + C12777) * C92105 +
                       (C12665 + C12666 + C12667) * C181) *
                          C92157 * C92195 +
                      ((C4104 * C185 + C4099 * C191 + C4103 * C184 +
                        C4098 * C190 + C4102 * C183 + C4097 * C189) *
                           C92105 +
                       (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                        C4098 * C115 + C4102 * C108 + C4097 * C114) *
                           C181) *
                          C92157 * C92337) *
                         C1984) *
                        C2709 +
                    ((((C12667 + C12666 + C12665) * C181 +
                       (C12777 + C12776 + C12775) * C92105) *
                          C92157 * C92337 +
                      ((C4102 * C1391 + C4097 * C1403 + C4103 * C1392 +
                        C4098 * C1404 + C4104 * C1393 + C4099 * C1405) *
                           C181 +
                       (C4102 * C1473 + C4097 * C1481 + C4103 * C1474 +
                        C4098 * C1482 + C4104 * C1475 + C4099 * C1483) *
                           C92105) *
                          C92157 * C92195) *
                         C1984 -
                     (((C10952 + C10953 + C10954) * C92105 +
                       (C10854 + C10855 + C10856) * C181) *
                          C92157 * C92195 +
                      ((C10951 + C10950 + C10949) * C92105 +
                       (C10847 + C10846 + C10845) * C181) *
                          C92157 * C92337) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C181 +
                       (C19671 * C182 + C92067 * C188) * C92105) *
                          C92157 * C38281 +
                      (C24643 + C24663) * C92157 * C38282 + C39257 * C38283 +
                      C39262 * C38284) *
                         C1983 -
                     ((C40386 + C40384) * C92157 * C38284 +
                      (C36539 + C36537) * C92157 * C38283 +
                      (C26445 + C26443) * C92157 * C38282 +
                      ((C19671 * C183 + C92067 * C189) * C92105 +
                       (C19671 * C108 + C92067 * C114) * C181) *
                          C92157 * C38281) *
                         C1984) *
                        C2709 +
                    (((C26443 + C26445) * C92157 * C38281 +
                      (C36537 + C36539) * C92157 * C38282 +
                      (C40384 + C40386) * C92157 * C38283 +
                      ((C19671 * C29612 + C92067 * C29614) * C181 +
                       (C19671 * C29736 + C92067 * C29738) * C92105) *
                          C92157 * C38284) *
                         C1984 -
                     ((C39264 + C39261) * C92157 * C38284 +
                      (C34810 + C34803) * C92157 * C38283 +
                      (C24666 + C24658) * C92157 * C38282 +
                      (C24663 + C24643) * C92157 * C38281) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2849 +
             (C19671 * C245 + C92067 * C251) * C2709 - C24549 * C2850 -
             C24753 * C2710) *
                C14523 +
            (C22584 + C22585 - C22586 - C22602) * C14524 +
            (C22589 + C22590 - C22591 - C22603) * C14525) *
               C92337 +
           ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
             C24754 * C2710) *
                C14523 +
            (C22432 * C2849 + C22599 * C2709 - C24554 * C2850 -
             C24755 * C2710) *
                C14524 +
            (C22430 * C2849 + C22600 * C2709 - C24552 * C2850 -
             C24756 * C2710) *
                C14525) *
               C92195) *
              C92105 * C1983 +
          (((C26335 * C2850 -
             ((C19671 * C246 + C92067 * C252) * C2709 +
              (C19671 * C108 + C92067 * C114) * C2849) +
             C26546 * C2710) *
                C14523 +
            (C25399 * C2850 - (C21345 * C2709 + C21183 * C2849) +
             C25615 * C2710) *
                C14524 +
            (C25401 * C2850 - (C21346 * C2709 + C21185 * C2849) +
             C25616 * C2710) *
                C14525) *
               C92337 +
           (((C19671 * C1391 + C92067 * C1403) * C2850 -
             (C26546 * C2709 + C26335 * C2849) +
             (C19671 * C1542 + C92067 * C1550) * C2710) *
                C14523 +
            ((C19671 * C5720 + C92067 * C5723) * C2850 -
             (C25615 * C2709 + C25399 * C2849) +
             (C19671 * C5886 + C92067 * C5889) * C2710) *
                C14524 +
            ((C19671 * C16096 + C92067 * C16098) * C2850 -
             (C25616 * C2709 + C25401 * C2849) +
             (C19671 * C16256 + C92067 * C16258) * C2710) *
                C14525) *
               C92195) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C2709 -
            (C10847 + C10846 + C10845) * C2850 -
            (C11047 + C11048 + C11049) * C2710) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C2849 +
            (C11049 + C11048 + C11047) * C2709 -
            (C10854 + C10855 + C10856) * C2850 -
            (C11052 + C11051 + C11050) * C2710) *
               C92157 * C92195) *
              C92105 * C1983 +
          (((C12667 + C12666 + C12665) * C2850 -
            ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
              C4102 * C246 + C4097 * C252) *
                 C2709 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2849) +
            (C12882 + C12883 + C12884) * C2710) *
               C92157 * C92337 +
           ((C4102 * C1391 + C4097 * C1403 + C4103 * C1392 + C4098 * C1404 +
             C4104 * C1393 + C4099 * C1405) *
                C2850 -
            ((C12884 + C12883 + C12882) * C2709 +
             (C12665 + C12666 + C12667) * C2849) +
            (C4102 * C1542 + C4097 * C1550 + C4103 * C1543 + C4098 * C1551 +
             C4104 * C1544 + C4099 * C1552) *
                C2710) *
               C92157 * C92195) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2849 +
            (C19671 * C245 + C92067 * C251) * C2709 - C24549 * C2850 -
            C24753 * C2710) *
               C92157 * C38281 +
           (C24549 * C2849 + C24753 * C2709 - C24556 * C2850 - C24754 * C2710) *
               C92157 * C38282 +
           (C24556 * C2849 + C24754 * C2709 - C34714 * C2850 - C34891 * C2710) *
               C92157 * C38283 +
           (C34714 * C2849 + C34891 * C2709 - C39202 * C2850 - C39319 * C2710) *
               C92157 * C38284) *
              C92105 * C1983 +
          ((C26335 * C2850 -
            ((C19671 * C246 + C92067 * C252) * C2709 +
             (C19671 * C108 + C92067 * C114) * C2849) +
            C26546 * C2710) *
               C92157 * C38281 +
           (C36431 * C2850 - (C26546 * C2709 + C26335 * C2849) +
            C36640 * C2710) *
               C92157 * C38282 +
           (C40312 * C2850 - (C36640 * C2709 + C36431 * C2849) +
            C40455 * C2710) *
               C92157 * C38283 +
           ((C19671 * C29612 + C92067 * C29614) * C2850 -
            (C40455 * C2709 + C40312 * C2849) +
            (C19671 * C29837 + C92067 * C29839) * C2710) *
               C92157 * C38284) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92337 +
           ((C24859 + C24860 + C24861) * C1987 +
            (C24862 + C24863 + C24864) * C1983 -
            (C18105 + C18104 + C18103) * C1988 -
            (C18108 + C18107 + C18106) * C1984) *
               C92195) *
              C92067 * C2709 +
          (((C18103 + C18104 + C18105) * C1988 -
            ((C24864 + C24863 + C24862) * C1983 +
             (C24861 + C24860 + C24859) * C1987) +
            (C18106 + C18107 + C18108) * C1984) *
               C92337 +
           ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
             C14752 * C16096 + C14525 * C16334) *
                C1988 -
            ((C24865 + C24866 + C24867) * C1983 +
             (C24868 + C24869 + C24870) * C1987) +
            (C14750 * C1407 + C14523 * C1616 + C14751 * C5726 + C14524 * C5969 +
             C14752 * C16100 + C14525 * C16336) *
                C1984) *
               C92195) *
              C92067 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92337 +
            (C12983 + C12984 - C12985 - C12986) * C92195) *
               C4097 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92337 +
            (C12987 + C12988 - C12989 - C12990) * C92195) *
               C4098 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C92337 +
            (C12991 + C12992 - C12993 - C12994) * C92195) *
               C4099) *
              C2709 +
          (((C12985 - (C12984 + C12983) + C12986) * C92337 +
            (C11158 * C1988 - (C11159 * C1983 + C11160 * C1987) +
             C11157 * C1984) *
                C92195) *
               C4097 +
           ((C12989 - (C12988 + C12987) + C12990) * C92337 +
            (C11156 * C1988 - (C11157 * C1983 + C11158 * C1987) +
             C11155 * C1984) *
                C92195) *
               C4098 +
           ((C12993 - (C12992 + C12991) + C12994) * C92337 +
            ((C307 * C1393 + C92157 * C1610) * C1988 -
             (C11155 * C1983 + C11156 * C1987) +
             (C307 * C1409 + C92157 * C1618) * C1984) *
                C92195) *
               C4099) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1987 +
            (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C38281 +
           (C12983 + C12984 - C12985 - C12986) * C38282 +
           (C31732 + C31733 - C31734 - C31735) * C38283 +
           (C40522 + C40523 - C40524 - C40525) * C38284) *
              C92067 * C2709 +
          ((C12985 - (C12984 + C12983) + C12986) * C38281 +
           (C31734 - (C31733 + C31732) + C31735) * C38282 +
           (C40524 - (C40523 + C40522) + C40525) * C38283 +
           ((C307 * C29612 + C92157 * C29934) * C1988 -
            (C39377 * C1983 + C39378 * C1987) +
            (C307 * C29616 + C92157 * C29936) * C1984) *
               C38284) *
              C92067 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C181 +
             (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
              C14752 * C891 + C14525 * C1086) *
                 C92105) *
                C92337 +
            ((C24859 + C24860 + C24861) * C181 +
             (C24959 + C24960 + C24961) * C92105) *
                C92195) *
               C92067 * C1983 -
           (((C18215 + C18214 + C18213) * C92105 +
             (C18105 + C18104 + C18103) * C181) *
                C92195 +
            ((C14878 + C14877 + C14876) * C92105 +
             (C14778 + C14779 + C14780) * C181) *
                C92337) *
               C92067 * C1984) *
              C2709 +
          ((((C18103 + C18104 + C18105) * C181 +
             (C18213 + C18214 + C18215) * C92105) *
                C92337 +
            ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 +
              C14524 * C5966 + C14752 * C16096 + C14525 * C16334) *
                 C181 +
             (C14750 * C1473 + C14523 * C1674 + C14751 * C5806 +
              C14524 * C6046 + C14752 * C16178 + C14525 * C16412) *
                 C92105) *
                C92195) *
               C92067 * C1984 -
           (((C24962 + C24963 + C24964) * C92105 +
             (C24868 + C24869 + C24870) * C181) *
                C92195 +
            ((C24961 + C24960 + C24959) * C92105 +
             (C24861 + C24860 + C24859) * C181) *
                C92337) *
               C92067 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C181 +
              (C307 * C182 + C92157 * C394) * C92105) *
                 C92337 +
             (C11246 + C11262) * C92195) *
                C4097 +
            ((C401 + C417) * C92337 + C13093 * C92195) * C4098 +
            C9678 * C4099) *
               C1983 -
           (((C3021 + C3013) * C92195 + (C419 + C407) * C92337) * C4099 +
            (C13094 * C92195 + (C418 + C404) * C92337) * C4098 +
            (C13095 * C92195 + (C417 + C401) * C92337) * C4097) *
               C1984) *
              C2709 +
          (((C13093 * C92337 + (C11254 + C11264) * C92195) * C4097 +
            (C9676 * C92337 + (C11251 + C11263) * C92195) * C4098 +
            ((C3013 + C3021) * C92337 +
             ((C307 * C1393 + C92157 * C1610) * C181 +
              (C307 * C1475 + C92157 * C1676) * C92105) *
                 C92195) *
                C4099) *
               C1984 -
           (((C11263 + C11251) * C92195 + C13094 * C92337) * C4099 +
            ((C11264 + C11254) * C92195 + C13095 * C92337) * C4098 +
            ((C11265 + C11257) * C92195 + (C11262 + C11246) * C92337) * C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C38281 +
            (C11246 + C11262) * C38282 + C30032 * C38283 + C39432 * C38284) *
               C92067 * C1983 -
           ((C30042 + C30036) * C38284 + C31838 * C38283 + C13095 * C38282 +
            (C417 + C401) * C38281) *
               C92067 * C1984) *
              C2709 +
          ((C13093 * C38281 + C30033 * C38282 + (C30036 + C30042) * C38283 +
            ((C307 * C29612 + C92157 * C29934) * C181 +
             (C307 * C29736 + C92157 * C30030) * C92105) *
                C38284) *
               C92067 * C1984 -
           ((C39437 + C39435) * C38284 + (C30043 + C30039) * C38283 +
            (C11265 + C11257) * C38282 + (C11262 + C11246) * C38281) *
               C92067 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C2849 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C2709 -
            (C24861 + C24860 + C24859) * C2850 -
            (C25053 + C25054 + C25055) * C2710) *
               C92337 +
           ((C24859 + C24860 + C24861) * C2849 +
            (C25055 + C25054 + C25053) * C2709 -
            (C24868 + C24869 + C24870) * C2850 -
            (C25058 + C25057 + C25056) * C2710) *
               C92195) *
              C92067 * C92105 * C1983 +
          (((C18103 + C18104 + C18105) * C2850 -
            ((C14970 + C14969 + C14968) * C2709 +
             (C14778 + C14779 + C14780) * C2849) +
            (C18322 + C18321 + C18320) * C2710) *
               C92337 +
           ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
             C14752 * C16096 + C14525 * C16334) *
                C2850 -
            ((C18320 + C18321 + C18322) * C2709 +
             (C18105 + C18104 + C18103) * C2849) +
            (C14750 * C1542 + C14523 * C1730 + C14751 * C5886 + C14524 * C6123 +
             C14752 * C16256 + C14525 * C16488) *
                C2710) *
               C92195) *
              C92067 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C2849 +
             (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
             C11351 * C2710) *
                C92337 +
            (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
             C11352 * C2710) *
                C92195) *
               C4097 +
           ((C3089 + C3090 - C3091 - C3107) * C92337 +
            (C13194 + C13195 - C13196 - C13197) * C92195) *
               C4098 +
           ((C3094 + C3095 - C3096 - C3108) * C92337 +
            (C13198 + C13199 - C13200 - C13201) * C92195) *
               C4099) *
              C92105 * C1983 +
          (((C3091 - (C3090 + C3089) + C3107) * C92337 +
            (C13196 - (C13195 + C13194) + C13197) * C92195) *
               C4097 +
           ((C3096 - (C3095 + C3094) + C3108) * C92337 +
            (C13200 - (C13199 + C13198) + C13201) * C92195) *
               C4098 +
           ((C3101 - (C3100 + C3099) + C3109) * C92337 +
            ((C307 * C1393 + C92157 * C1610) * C2850 -
             (C3106 * C2709 + C2938 * C2849) +
             (C307 * C1544 + C92157 * C1734) * C2710) *
                C92195) *
               C4099) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C2849 +
            (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
            C11351 * C2710) *
               C38281 +
           (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 - C11352 * C2710) *
               C38282 +
           (C11160 * C2849 + C11352 * C2709 - C29951 * C2850 - C30124 * C2710) *
               C38283 +
           (C29951 * C2849 + C30124 * C2709 - C39378 * C2850 - C39491 * C2710) *
               C38284) *
              C92067 * C92105 * C1983 +
          ((C3091 - (C3090 + C3089) + C3107) * C38281 +
           (C13196 - (C13195 + C13194) + C13197) * C38282 +
           (C31939 - (C31938 + C31937) + C31940) * C38283 +
           ((C307 * C29612 + C92157 * C29934) * C2850 -
            (C30125 * C2709 + C29949 * C2849) +
            (C307 * C29837 + C92157 * C30118) * C2710) *
               C38284) *
              C92067 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C92067 * C14523 +
           ((C24243 + C24244) * C1987 + (C24245 + C24246) * C1983 -
            (C12328 + C12327) * C1988 - (C12330 + C12329) * C1984) *
               C92067 * C14524 +
           (C24255 * C1987 + C24256 * C1983 - (C26019 + C26020) * C1988 -
            (C26021 + C26022) * C1984) *
               C92067 * C14525) *
              C2709 +
          (((C13316 + C13317) * C1988 -
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C1983 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C1987) +
            (C13318 + C13319) * C1984) *
               C92067 * C14523 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C1988 -
            ((C9837 * C5725 + C92195 * C6202 + C9836 * C3439 + C92337 * C3879) *
                 C1983 +
             (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                 C1987) +
            (C9836 * C3440 + C92337 * C3880 + C9837 * C5726 + C92195 * C6203) *
                C1984) *
               C92067 * C14524 +
           ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
             C92195 * C16564) *
                C1988 -
            ((C9837 * C16099 + C92195 * C16565 + C9836 * C8418 +
              C92337 * C9075) *
                 C1983 +
             (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
              C92337 * C9072) *
                 C1987) +
            (C9836 * C8419 + C92337 * C9076 + C9837 * C16100 +
             C92195 * C16566) *
                C1984) *
               C92067 * C14525) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C4097 +
           ((C9864 + C9863) * C1987 + (C9866 + C9865) * C1983 -
            (C9868 + C9867) * C1988 - (C9870 + C9869) * C1984) *
               C4098 +
           (C9875 * C1987 + C9876 * C1983 - (C9872 + C9871) * C1988 -
            (C9874 + C9873) * C1984) *
               C4099) *
              C92157 * C2709 +
          (((C13316 + C13317) * C1988 -
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C1983 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C1987) +
            (C13318 + C13319) * C1984) *
               C4097 +
           ((C13320 + C13321) * C1988 -
            ((C13319 + C13318) * C1983 + (C13317 + C13316) * C1987) +
            (C13322 + C13323) * C1984) *
               C4098 +
           ((C9836 * C1386 + C92337 * C1785 + C9837 * C1393 + C92195 * C1792) *
                C1988 -
            ((C13323 + C13322) * C1983 + (C13321 + C13320) * C1987) +
            (C9836 * C1394 + C92337 * C1793 + C9837 * C1409 + C92195 * C1800) *
                C1984) *
               C4099) *
              C92157 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C1987 +
           (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
            C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
            C38284 * C11431) *
               C1983 -
           (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
            C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
            C38281 * C556) *
               C1988 -
           (C38588 * C10815 + C38284 * C11432 + C38587 * C1407 +
            C38283 * C1798 + C38586 * C1396 + C38282 * C1795 + C38585 * C118 +
            C38281 * C562) *
               C1984) *
              C92067 * C92157 * C2709 +
          ((C38585 * C1388 + C38281 * C1787 + C38586 * C1391 + C38282 * C1790 +
            C38587 * C10809 + C38283 * C11429 + C38588 * C29612 +
            C38284 * C30200) *
               C1988 -
           ((C38588 * C29615 + C38284 * C30201 + C38587 * C10814 +
             C38283 * C11431 + C38586 * C1406 + C38282 * C1797 +
             C38585 * C1397 + C38281 * C1796) *
                C1983 +
            (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
             C38283 * C11428 + C38586 * C1390 + C38282 * C1789 +
             C38585 * C1389 + C38281 * C1788) *
                C1987) +
           (C38585 * C1396 + C38281 * C1795 + C38586 * C1407 + C38282 * C1798 +
            C38587 * C10815 + C38283 * C11432 + C38588 * C29616 +
            C38284 * C30202) *
               C1984) *
              C92067 * C92157 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C92067 * C14523 +
            ((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C92067 *
                C14524 +
            (C24255 * C181 + C24353 * C92105) * C92067 * C14525) *
               C1983 -
           (((C26126 + C26125) * C92105 + (C26019 + C26020) * C181) * C92067 *
                C14525 +
            ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C92067 *
                C14524 +
            ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C92067 *
                C14523) *
               C1984) *
              C2709 +
          ((((C13316 + C13317) * C181 + (C13430 + C13431) * C92105) * C92067 *
                C14523 +
            ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                 C181 +
             (C9836 * C3514 + C92337 * C3950 + C9837 * C5806 + C92195 * C6280) *
                 C92105) *
                C92067 * C14524 +
            ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
              C92195 * C16564) *
                 C181 +
             (C9836 * C8541 + C92337 * C9189 + C9837 * C16178 +
              C92195 * C16642) *
                 C92105) *
                C92067 * C14525) *
               C1984 -
           (((C9837 * C16177 + C92195 * C16641 + C9836 * C8540 +
              C92337 * C9188) *
                 C92105 +
             (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
              C92337 * C9072) *
                 C181) *
                C92067 * C14525 +
            ((C9837 * C5805 + C92195 * C6279 + C9836 * C3513 + C92337 * C3949) *
                 C92105 +
             (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                 C181) *
                C92067 * C14524 +
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C92105 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C181) *
                C92067 * C14523) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C4097 +
            ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
            C9972 * C4099) *
               C92157 * C1983 -
           (((C9968 + C9969) * C92105 + (C9872 + C9871) * C181) * C4099 +
            ((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C4098 +
            ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C4097) *
               C92157 * C1984) *
              C2709 +
          ((((C13316 + C13317) * C181 + (C13430 + C13431) * C92105) * C4097 +
            ((C13320 + C13321) * C181 + (C13432 + C13433) * C92105) * C4098 +
            ((C9836 * C1386 + C92337 * C1785 + C9837 * C1393 + C92195 * C1792) *
                 C181 +
             (C9836 * C1468 + C92337 * C1851 + C9837 * C1475 + C92195 * C1858) *
                 C92105) *
                C4099) *
               C92157 * C1984 -
           (((C13433 + C13432) * C92105 + (C13321 + C13320) * C181) * C4099 +
            ((C13431 + C13430) * C92105 + (C13317 + C13316) * C181) * C4098 +
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C92105 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C181) *
                C4097) *
               C92157 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
             C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
             C38284 * C11428) *
                C181 +
            (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
             C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
             C38284 * C11508) *
                C92105) *
               C92067 * C92157 * C1983 -
           ((C38588 * C10931 + C38284 * C11509 + C38587 * C1473 +
             C38283 * C1856 + C38586 * C1470 + C38282 * C1853 + C38585 * C183 +
             C38281 * C642) *
                C92105 +
            (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
             C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
             C38281 * C556) *
                C181) *
               C92067 * C92157 * C1984) *
              C2709 +
          (((C38585 * C1388 + C38281 * C1787 + C38586 * C1391 + C38282 * C1790 +
             C38587 * C10809 + C38283 * C11429 + C38588 * C29612 +
             C38284 * C30200) *
                C181 +
            (C38585 * C1470 + C38281 * C1853 + C38586 * C1473 + C38282 * C1856 +
             C38587 * C10931 + C38283 * C11509 + C38588 * C29736 +
             C38284 * C30278) *
                C92105) *
               C92067 * C92157 * C1984 -
           ((C38588 * C29735 + C38284 * C30277 + C38587 * C10930 +
             C38283 * C11508 + C38586 * C1472 + C38282 * C1855 +
             C38585 * C1471 + C38281 * C1854) *
                C92105 +
            (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
             C38283 * C11428 + C38586 * C1390 + C38282 * C1789 +
             C38585 * C1389 + C38281 * C1788) *
                C181) *
               C92067 * C92157 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2849 + (C24441 + C24442) * C2709 -
            (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                C2850 -
            (C9837 * C5885 + C92195 * C6356 + C9836 * C3587 + C92337 * C4019) *
                C2710) *
               C92067 * C14524 +
           (C24255 * C2849 + C24447 * C2709 -
            (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
             C92337 * C9072) *
                C2850 -
            (C9837 * C16255 + C92195 * C16717 + C9836 * C8653 +
             C92337 * C9292) *
                C2710) *
               C92067 * C14525) *
              C92105 * C1983 +
          (((C13316 + C13317) * C2850 -
            ((C10061 + C10060) * C2709 + (C9863 + C9864) * C2849) +
            (C13541 + C13540) * C2710) *
               C92067 * C14523 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C2850 -
            ((C12553 + C12554) * C2709 + (C12328 + C12327) * C2849) +
            (C9836 * C3588 + C92337 * C4020 + C9837 * C5886 + C92195 * C6357) *
                C2710) *
               C92067 * C14524 +
           ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
             C92195 * C16564) *
                C2850 -
            ((C26230 + C26229) * C2709 + (C26019 + C26020) * C2849) +
            (C9836 * C8654 + C92337 * C9293 + C9837 * C16256 +
             C92195 * C16718) *
                C2710) *
               C92067 * C14525) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C4097 +
           ((C9864 + C9863) * C2849 + (C10060 + C10061) * C2709 -
            (C13317 + C13316) * C2850 - (C13540 + C13541) * C2710) *
               C4098 +
           (C9875 * C2849 + C10066 * C2709 - (C13321 + C13320) * C2850 -
            (C13542 + C13543) * C2710) *
               C4099) *
              C92157 * C92105 * C1983 +
          (((C13316 + C13317) * C2850 -
            ((C10061 + C10060) * C2709 + (C9863 + C9864) * C2849) +
            (C13541 + C13540) * C2710) *
               C4097 +
           ((C13320 + C13321) * C2850 -
            ((C10063 + C10062) * C2709 + (C9868 + C9867) * C2849) +
            (C13543 + C13542) * C2710) *
               C4098 +
           ((C9836 * C1386 + C92337 * C1785 + C9837 * C1393 + C92195 * C1792) *
                C2850 -
            ((C10064 + C10065) * C2709 + (C9872 + C9871) * C2849) +
            (C9836 * C1537 + C92337 * C1915 + C9837 * C1544 + C92195 * C1916) *
                C2710) *
               C4099) *
              C92157 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C2849 +
           (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
            C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
            C38284 * C11585) *
               C2709 -
           (C38588 * C29611 + C38284 * C30199 + C38587 * C10808 +
            C38283 * C11428 + C38586 * C1390 + C38282 * C1789 + C38585 * C1389 +
            C38281 * C1788) *
               C2850 -
           (C38588 * C29836 + C38284 * C30353 + C38587 * C11028 +
            C38283 * C11585 + C38586 * C1541 + C38282 * C1910 + C38585 * C1540 +
            C38281 * C1909) *
               C2710) *
              C92067 * C92157 * C92105 * C1983 +
          ((C38585 * C1388 + C38281 * C1787 + C38586 * C1391 + C38282 * C1790 +
            C38587 * C10809 + C38283 * C11429 + C38588 * C29612 +
            C38284 * C30200) *
               C2850 -
           ((C38588 * C11029 + C38284 * C11586 + C38587 * C1542 +
             C38283 * C1912 + C38586 * C1539 + C38282 * C1911 + C38585 * C246 +
             C38281 * C720) *
                C2709 +
            (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
             C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
             C38281 * C556) *
                C2849) +
           (C38585 * C1539 + C38281 * C1911 + C38586 * C1542 + C38282 * C1912 +
            C38587 * C11029 + C38283 * C11586 + C38588 * C29837 +
            C38284 * C30354) *
               C2710) *
              C92067 * C92157 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C801 +
            (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
             C4104 * C1395 + C4099 * C1411) *
                C92084) *
               C92157 * C92195) *
              C92116 * C798 -
          (((C8437 + C8438 + C8439) * C92084 + (C8440 + C8441 + C8442) * C801) *
               C92157 * C92195 +
           ((C4907 + C4906 + C4905) * C92084 + (C4904 + C4903 + C4902) * C801) *
               C92157 * C92337) *
              C92116 * C799 +
          (((C4913 + C4912 + C4911) * C801 + (C4910 + C4909 + C4908) * C92084) *
               C92157 * C92337 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C801 +
            (C4102 * C8418 + C4097 * C8421 + C4103 * C8419 + C4098 * C8422 +
             C4104 * C8420 + C4099 * C8423) *
                C92084) *
               C92157 * C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
            C4104 * C119 + C4099 * C127) *
               C93 -
           (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
            C4102 * C108 + C4097 * C114) *
               C105 -
           (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
            C4102 * C118 + C4097 * C126) *
               C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
            C4104 * C111 + C4099 * C121) *
               C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
            C4104 * C122 + C4099 * C129) *
               C95) *
              C92157 * C92337 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
            C4104 * C1387 + C4099 * C1399) *
               C104 +
           (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
            C4104 * C1395 + C4099 * C1411) *
               C93 -
           (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
            C4102 * C1388 + C4097 * C1400) *
               C105 -
           (C4104 * C1394 + C4099 * C1410 + C4103 * C1395 + C4098 * C1411 +
            C4102 * C1396 + C4097 * C1412) *
               C94 +
           (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
            C4104 * C2711 + C4099 * C2712) *
               C106 +
           (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C4098 * C1410 +
            C4104 * C2713 + C4099 * C2714) *
               C95) *
              C92157 * C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C14523 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C14524 +
           (C20149 * C104 + C20150 * C93 - C21185 * C105 - C21186 * C94 +
            (C19671 * C808 + C92067 * C820) * C106 +
            (C19671 * C824 + C92067 * C832) * C95) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C104 +
            (C19671 * C1397 + C92067 * C1413) * C93 -
            (C19671 * C1388 + C92067 * C1400) * C105 -
            (C19671 * C1396 + C92067 * C1412) * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C14523 +
           (C22432 * C104 + C22431 * C93 -
            (C19671 * C3432 + C92067 * C3436) * C105 -
            (C19671 * C3440 + C92067 * C3444) * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C14524 +
           (C22430 * C104 + C22429 * C93 -
            (C19671 * C8413 + C92067 * C8416) * C105 -
            (C19671 * C8419 + C92067 * C8422) * C94 +
            (C19671 * C8414 + C92067 * C8417) * C106 +
            (C19671 * C8420 + C92067 * C8423) * C95) *
               C14525) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C14523 +
            (C20155 + C20156) * C14524 + C20163 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C801 +
             (C19671 * C1397 + C92067 * C1413) * C92084) *
                C14523 +
            (C22438 + C22437) * C14524 + C23767 * C14525) *
               C92195) *
              C92116 * C798 -
          (((C22433 + C22434) * C14525 + (C22435 + C22436) * C14524 +
            (C22437 + C22438) * C14523) *
               C92195 +
           ((C20160 + C20159) * C14525 + (C20158 + C20157) * C14524 +
            (C20156 + C20155) * C14523) *
               C92337) *
              C92116 * C799 +
          ((C20163 * C14523 + C20164 * C14524 + (C20162 + C20161) * C14525) *
               C92337 +
           (C23767 * C14523 + (C22434 + C22433) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C14525) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C104 +
           (C19671 * C117 + C92067 * C125) * C93 -
           (C19671 * C108 + C92067 * C114) * C105 -
           (C19671 * C118 + C92067 * C126) * C94 +
           (C19671 * C109 + C92067 * C115) * C106 +
           (C19671 * C119 + C92067 * C127) * C95) *
              C92157 * C38281 +
          (C24549 * C104 + C24550 * C93 - C26335 * C105 - C26336 * C94 +
           (C19671 * C1387 + C92067 * C1399) * C106 +
           (C19671 * C1395 + C92067 * C1411) * C95) *
              C92157 * C38282 +
          (C24556 * C104 + C24555 * C93 - C36431 * C105 - C36432 * C94 +
           (C19671 * C1392 + C92067 * C1404) * C106 +
           (C19671 * C1408 + C92067 * C1416) * C95) *
              C92157 * C38283 +
          (C34714 * C104 + C34713 * C93 -
           (C19671 * C10809 + C92067 * C10812) * C105 -
           (C19671 * C10815 + C92067 * C10818) * C94 +
           (C19671 * C10810 + C92067 * C10813) * C106 +
           (C19671 * C10816 + C92067 * C10819) * C95) *
              C92157 * C38284) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C92157 * C38281 +
           (C24557 + C24558) * C92157 * C38282 + C34699 * C92157 * C38283 +
           (C34719 + C34718) * C92157 * C38284) *
              C92116 * C798 -
          ((C34716 + C34717) * C92157 * C38284 + C37351 * C92157 * C38283 +
           C27235 * C92157 * C38282 + (C20156 + C20155) * C92157 * C38281) *
              C92116 * C799 +
          (C20163 * C92157 * C38281 + C23767 * C92157 * C38282 +
           (C24560 + C24559) * C92157 * C38283 +
           ((C19671 * C24525 + C92067 * C24528) * C801 +
            (C19671 * C24529 + C92067 * C24531) * C92084) *
               C92157 * C38284) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
            C4104 * C184 + C4099 * C190) *
               C798 -
           (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
           (C4913 + C4912 + C4911) * C886 + (C5009 + C5010 + C5011) * C800) *
              C92157 * C92337 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
            C4104 * C1387 + C4099 * C1399) *
               C884 +
           (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
            C4104 * C1469 + C4099 * C1477) *
               C798 -
           (C8440 + C8441 + C8442) * C885 - (C8555 + C8554 + C8553) * C799 +
           (C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
            C4104 * C8414 + C4099 * C8417) *
               C886 +
           (C4102 * C8540 + C4097 * C8543 + C4103 * C8541 + C4098 * C8544 +
            C4104 * C8542 + C4099 * C8545) *
               C800) *
              C92157 * C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C181 +
            (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
             C4104 * C1469 + C4099 * C1477) *
                C92105) *
               C92157 * C92195) *
              C93 -
          (((C4104 * C1468 + C4099 * C1476 + C4103 * C1469 + C4098 * C1477 +
             C4102 * C1470 + C4097 * C1478) *
                C92105 +
            (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
             C4102 * C1388 + C4097 * C1400) *
                C181) *
               C92157 * C92195 +
           ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
             C4102 * C183 + C4097 * C189) *
                C92105 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C181) *
               C92157 * C92337) *
              C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
             C4104 * C186 + C4099 * C192) *
                C92105) *
               C92157 * C92337 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
             C4104 * C2711 + C4099 * C2712) *
                C181 +
            (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C4098 * C1476 +
             C4104 * C2781 + C4099 * C2782) *
                C92105) *
               C92157 * C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C14523 +
            (C20147 * C181 + C20225 * C92105) * C14524 +
            (C20149 * C181 + C20226 * C92105) * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C181 +
             (C19671 * C1471 + C92067 * C1479) * C92105) *
                C14523 +
            (C22432 * C181 + C22513 * C92105) * C14524 +
            (C22430 * C181 + C22514 * C92105) * C14525) *
               C92195) *
              C93 -
          ((((C19671 * C8541 + C92067 * C8544) * C92105 +
             (C19671 * C8413 + C92067 * C8416) * C181) *
                C14525 +
            ((C19671 * C3514 + C92067 * C3518) * C92105 +
             (C19671 * C3432 + C92067 * C3436) * C181) *
                C14524 +
            ((C19671 * C1470 + C92067 * C1478) * C92105 +
             (C19671 * C1388 + C92067 * C1400) * C181) *
                C14523) *
               C92195 +
           ((C21268 * C92105 + C21185 * C181) * C14525 +
            (C21267 * C92105 + C21183 * C181) * C14524 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C14523) *
               C92337) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C181 +
             (C19671 * C893 + C92067 * C901) * C92105) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C181 +
             (C19671 * C8542 + C92067 * C8545) * C92105) *
                C14525) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C14523 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C14524 +
           (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
            C20154 * C886 + C20228 * C800) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C884 +
            (C19671 * C1471 + C92067 * C1479) * C798 - C22432 * C885 -
            C22513 * C799 + C22430 * C886 + C22514 * C800) *
               C14523 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C14524 +
           (C22430 * C884 + C22514 * C798 - C22428 * C885 - C22515 * C799 +
            (C19671 * C22410 + C92067 * C22411) * C886 +
            (C19671 * C22504 + C92067 * C22505) * C800) *
               C14525) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C92157 * C38281 +
           (C24643 + C24663) * C92157 * C38282 + C34796 * C92157 * C38283 +
           (C34803 + C34810) * C92157 * C38284) *
              C93 -
          (((C19671 * C10931 + C92067 * C10934) * C92105 +
            (C19671 * C10809 + C92067 * C10812) * C181) *
               C92157 * C38284 +
           (C36539 + C36537) * C92157 * C38283 +
           (C26445 + C26443) * C92157 * C38282 +
           ((C19671 * C183 + C92067 * C189) * C92105 +
            (C19671 * C108 + C92067 * C114) * C181) *
               C92157 * C38281) *
              C94 +
          (((C19671 * C109 + C92067 * C115) * C181 +
            (C19671 * C184 + C92067 * C190) * C92105) *
               C92157 * C38281 +
           ((C19671 * C1387 + C92067 * C1399) * C181 +
            (C19671 * C1469 + C92067 * C1477) * C92105) *
               C92157 * C38282 +
           ((C19671 * C1392 + C92067 * C1404) * C181 +
            (C19671 * C1474 + C92067 * C1482) * C92105) *
               C92157 * C38283 +
           ((C19671 * C10810 + C92067 * C10813) * C181 +
            (C19671 * C10932 + C92067 * C10935) * C92105) *
               C92157 * C38284) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C884 +
           (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
           C20225 * C799 + C20149 * C886 + C20226 * C800) *
              C92157 * C38281 +
          (C24549 * C884 + C24659 * C798 - C22432 * C885 - C22513 * C799 +
           C22430 * C886 + C22514 * C800) *
              C92157 * C38282 +
          (C24556 * C884 + C24662 * C798 - C24554 * C885 - C24661 * C799 +
           C24552 * C886 + C24660 * C800) *
              C92157 * C38283 +
          (C34714 * C884 + C34807 * C798 - C34712 * C885 - C34806 * C799 +
           (C19671 * C24525 + C92067 * C24528) * C886 +
           (C19671 * C24639 + C92067 * C24641) * C800) *
              C92157 * C38284) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
             C4104 * C1538 + C4099 * C1546) *
                C92116) *
               C92157 * C92195) *
              C798 -
          (((C8666 + C8667 + C8668) * C92116 + (C8440 + C8441 + C8442) * C244) *
               C92157 * C92195 +
           ((C5106 + C5105 + C5104) * C92116 + (C4904 + C4903 + C4902) * C244) *
               C92157 * C92337) *
              C799 +
          (((C4913 + C4912 + C4911) * C244 + (C5109 + C5108 + C5107) * C92116) *
               C92157 * C92337 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C244 +
            (C4102 * C8653 + C4097 * C8656 + C4103 * C8654 + C4098 * C8657 +
             C4104 * C8655 + C4099 * C8658) *
                C92116) *
               C92157 * C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
             C4104 * C1538 + C4099 * C1546) *
                C92116) *
               C92157 * C92195) *
              C92105 * C93 -
          (((C4104 * C1537 + C4099 * C1545 + C4103 * C1538 + C4098 * C1546 +
             C4102 * C1539 + C4097 * C1547) *
                C92116 +
            (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
             C4102 * C1388 + C4097 * C1400) *
                C244) *
               C92157 * C92195 +
           ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
             C4102 * C246 + C4097 * C252) *
                C92116 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C244) *
               C92157 * C92337) *
              C92105 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
             C4104 * C249 + C4099 * C255) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
             C4104 * C2711 + C4099 * C2712) *
                C244 +
            (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C4098 * C1545 +
             C4104 * C2851 + C4099 * C2852) *
                C92116) *
               C92157 * C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C22432 * C244 + C22599 * C92116) * C14524 +
            (C22430 * C244 + C22600 * C92116) * C14525) *
               C92195) *
              C92105 * C93 -
          ((((C19671 * C8654 + C92067 * C8657) * C92116 +
             (C19671 * C8413 + C92067 * C8416) * C244) *
                C14525 +
            ((C19671 * C3588 + C92067 * C3592) * C92116 +
             (C19671 * C3432 + C92067 * C3436) * C244) *
                C14524 +
            ((C19671 * C1539 + C92067 * C1547) * C92116 +
             (C19671 * C1388 + C92067 * C1400) * C244) *
                C14523) *
               C92195 +
           ((C21349 + C21339) * C14525 + (C21348 + C21336) * C14524 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C14523) *
               C92337) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C244 +
             (C19671 * C959 + C92067 * C967) * C92116) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C244 +
             (C19671 * C8655 + C92067 * C8658) * C92116) *
                C14525) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C23916 + C23917) * C14524 + C23922 * C14525) *
               C92195) *
              C798 -
          (((C23920 + C23921) * C14525 + (C23919 + C23918) * C14524 +
            (C23917 + C23916) * C14523) *
               C92195 +
           ((C20299 + C20287) * C14525 + (C20298 + C20284) * C14524 +
            (C20297 + C20281) * C14523) *
               C92337) *
              C799 +
          ((C20301 * C14523 + C20302 * C14524 + (C20292 + C20300) * C14525) *
               C92337 +
           (C23922 * C14523 + (C23921 + C23920) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C244 +
             (C19671 * C22581 + C92067 * C22582) * C92116) *
                C14525) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C92157 * C38281 +
           (C24549 * C244 + C24753 * C92116) * C92157 * C38282 +
           (C24556 * C244 + C24754 * C92116) * C92157 * C38283 +
           (C34714 * C244 + C34891 * C92116) * C92157 * C38284) *
              C92105 * C93 -
          (((C19671 * C11029 + C92067 * C11032) * C92116 +
            (C19671 * C10809 + C92067 * C10812) * C244) *
               C92157 * C38284 +
           (C36640 * C92116 + C36431 * C244) * C92157 * C38283 +
           (C26546 * C92116 + C26335 * C244) * C92157 * C38282 +
           ((C19671 * C246 + C92067 * C252) * C92116 +
            (C19671 * C108 + C92067 * C114) * C244) *
               C92157 * C38281) *
              C92105 * C94 +
          (((C19671 * C109 + C92067 * C115) * C244 +
            (C19671 * C247 + C92067 * C253) * C92116) *
               C92157 * C38281 +
           ((C19671 * C1387 + C92067 * C1399) * C244 +
            (C19671 * C1538 + C92067 * C1546) * C92116) *
               C92157 * C38282 +
           ((C19671 * C1392 + C92067 * C1404) * C244 +
            (C19671 * C1543 + C92067 * C1551) * C92116) *
               C92157 * C38283 +
           ((C19671 * C10810 + C92067 * C10813) * C244 +
            (C19671 * C11030 + C92067 * C11033) * C92116) *
               C92157 * C38284) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C92157 * C38281 +
           (C24549 * C244 + C24753 * C92116) * C92157 * C38282 +
           (C24556 * C244 + C24754 * C92116) * C92157 * C38283 +
           (C34714 * C244 + C34891 * C92116) * C92157 * C38284) *
              C798 -
          ((C34892 * C92116 + C34712 * C244) * C92157 * C38284 +
           (C34102 + C34101) * C92157 * C38283 +
           (C23917 + C23916) * C92157 * C38282 +
           (C20297 + C20281) * C92157 * C38281) *
              C799 +
          (C20301 * C92157 * C38281 + C23922 * C92157 * C38282 +
           (C34104 + C34103) * C92157 * C38283 +
           ((C19671 * C24525 + C92067 * C24528) * C244 +
            (C19671 * C24741 + C92067 * C24743) * C92116) *
               C92157 * C38284) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[44] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C92337 +
                      ((C307 * C1389 + C92157 * C1606) * C801 +
                       (C307 * C1397 + C92157 * C1614) * C92084) *
                          C92195) *
                         C4097 +
                     ((C337 * C801 + C338 * C92084) * C92337 +
                      (C2934 * C801 + C2935 * C92084) * C92195) *
                         C4098 +
                     ((C339 * C801 + C340 * C92084) * C92337 +
                      (C2936 * C801 + C2937 * C92084) * C92195) *
                         C4099) *
                        C92116 * C798 -
                    ((((C307 * C3441 + C92157 * C3667) * C92084 +
                       (C307 * C3433 + C92157 * C3663) * C801) *
                          C92195 +
                      (C2215 * C92084 + C2214 * C801) * C92337) *
                         C4099 +
                     (((C307 * C3440 + C92157 * C3666) * C92084 +
                       (C307 * C3432 + C92157 * C3662) * C801) *
                          C92195 +
                      (C2213 * C92084 + C2212 * C801) * C92337) *
                         C4098 +
                     (((C307 * C3439 + C92157 * C3665) * C92084 +
                       (C307 * C3431 + C92157 * C3661) * C801) *
                          C92195 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C92337) *
                         C4097) *
                        C92116 * C799 +
                    ((((C307 * C806 + C92157 * C1023) * C801 +
                       (C307 * C822 + C92157 * C1031) * C92084) *
                          C92337 +
                      ((C307 * C8412 + C92157 * C8766) * C801 +
                       (C307 * C8418 + C92157 * C8769) * C92084) *
                          C92195) *
                         C4097 +
                     (((C307 * C807 + C92157 * C1024) * C801 +
                       (C307 * C823 + C92157 * C1032) * C92084) *
                          C92337 +
                      ((C307 * C8413 + C92157 * C8767) * C801 +
                       (C307 * C8419 + C92157 * C8770) * C92084) *
                          C92195) *
                         C4098 +
                     (((C307 * C808 + C92157 * C1025) * C801 +
                       (C307 * C824 + C92157 * C1033) * C92084) *
                          C92337 +
                      ((C307 * C8414 + C92157 * C8768) * C801 +
                       (C307 * C8420 + C92157 * C8771) * C92084) *
                          C92195) *
                         C4099) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C104 +
                      (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C92337 +
                     ((C307 * C1389 + C92157 * C1606) * C104 +
                      (C307 * C1397 + C92157 * C1614) * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C92195) *
                        C4097 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C92337 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C92195) *
                        C4098 +
                    ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                      C343 * C106 + C344 * C95) *
                         C92337 +
                     (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
                      (C307 * C2711 + C92157 * C2919) * C106 +
                      (C307 * C2713 + C92157 * C2920) * C95) *
                         C92195) *
                        C4099) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                      C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                         C104 +
                     (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                      C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                         C93 -
                     (C14778 + C14779 + C14780) * C105 -
                     (C14781 + C14782 + C14783) * C94 +
                     (C14784 + C14785 + C14786) * C106 +
                     (C14787 + C14788 + C14789) * C95) *
                        C92337 +
                    ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 +
                      C14524 * C3661 + C14752 * C8412 + C14525 * C8766) *
                         C104 +
                     (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 +
                      C14524 * C3665 + C14752 * C8418 + C14525 * C8769) *
                         C93 -
                     (C18105 + C18104 + C18103) * C105 -
                     (C18108 + C18107 + C18106) * C94 +
                     (C14750 * C1387 + C14523 * C1604 + C14751 * C3433 +
                      C14524 * C3663 + C14752 * C8414 + C14525 * C8768) *
                         C106 +
                     (C14750 * C1395 + C14523 * C1612 + C14751 * C3441 +
                      C14524 * C3667 + C14752 * C8420 + C14525 * C8771) *
                         C95) *
                        C92195) *
                   C92067 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92337 +
                     ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 +
                       C14524 * C3661 + C14752 * C8412 + C14525 * C8766) *
                          C801 +
                      (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 +
                       C14524 * C3665 + C14752 * C8418 + C14525 * C8769) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C798 -
                    (((C14752 * C18736 + C14525 * C19092 + C14751 * C8418 +
                       C14524 * C8769 + C14750 * C3439 + C14523 * C3665) *
                          C92084 +
                      (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
                       C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                          C801) *
                         C92195 +
                     ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                       C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                          C92084 +
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C801) *
                         C92337) *
                        C92067 * C92116 * C799 +
                    (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 +
                       C14524 * C5183 + C14752 * C15273 + C14525 * C15593) *
                          C801 +
                      (C14750 * C822 + C14523 * C1031 + C14751 * C4871 +
                       C14524 * C5186 + C14752 * C15277 + C14525 * C15595) *
                          C92084) *
                         C92337 +
                     ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
                       C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                          C801 +
                      (C14750 * C8418 + C14523 * C8769 + C14751 * C18736 +
                       C14524 * C19092 + C14752 * C22412 + C14525 * C22671) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C307 * C107 + C92157 * C308) * C104 +
                     (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                     C338 * C94 + C339 * C106 + C340 * C95) *
                        C38281 +
                    (C11153 * C104 + C11154 * C93 - C2934 * C105 - C2935 * C94 +
                     C2936 * C106 + C2937 * C95) *
                        C38282 +
                    (C11160 * C104 + C11159 * C93 - C11158 * C105 -
                     C11157 * C94 + C11156 * C106 + C11155 * C95) *
                        C38283 +
                    (C29951 * C104 + C29950 * C93 - C29949 * C105 -
                     C29948 * C94 + (C307 * C10810 + C92157 * C11128) * C106 +
                     (C307 * C10816 + C92157 * C11131) * C95) *
                        C38284) *
                   C92067 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C801 +
                      (C307 * C117 + C92157 * C314) * C92084) *
                         C38281 +
                     (C11161 + C11162) * C38282 + C29938 * C38283 +
                     (C29955 + C29954) * C38284) *
                        C92067 * C92116 * C798 -
                    (((C307 * C24527 + C92157 * C24832) * C92084 +
                      (C307 * C24524 + C92157 * C24830) * C801) *
                         C38284 +
                     (C32706 + C32705) * C38283 + (C13947 + C13946) * C38282 +
                     ((C307 * C813 + C92157 * C1030) * C92084 +
                      (C307 * C805 + C92157 * C1022) * C801) *
                         C38281) *
                        C92067 * C92116 * C799 +
                    (((C307 * C806 + C92157 * C1023) * C801 +
                      (C307 * C822 + C92157 * C1031) * C92084) *
                         C38281 +
                     ((C307 * C8412 + C92157 * C8766) * C801 +
                      (C307 * C8418 + C92157 * C8769) * C92084) *
                         C38282 +
                     ((C307 * C16095 + C92157 * C16333) * C801 +
                      (C307 * C16099 + C92157 * C16335) * C92084) *
                         C38283 +
                     ((C307 * C24525 + C92157 * C24831) * C801 +
                      (C307 * C24529 + C92157 * C24833) * C92084) *
                         C38284) *
                        C92067 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C92337 +
           ((C307 * C1389 + C92157 * C1606) * C884 +
            (C307 * C1471 + C92157 * C1672) * C798 -
            (C307 * C3431 + C92157 * C3661) * C885 -
            (C307 * C3513 + C92157 * C3735) * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92195) *
              C4097 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C92337 +
           (C2934 * C884 + C3016 * C798 -
            (C307 * C3432 + C92157 * C3662) * C885 -
            (C307 * C3514 + C92157 * C3736) * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92195) *
              C4098 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92157 * C1025) * C886 +
            (C307 * C893 + C92157 * C1090) * C800) *
               C92337 +
           (C2936 * C884 + C3017 * C798 -
            (C307 * C3433 + C92157 * C3663) * C885 -
            (C307 * C3515 + C92157 * C3737) * C799 +
            (C307 * C8414 + C92157 * C8768) * C886 +
            (C307 * C8542 + C92157 * C8872) * C800) *
               C92195) *
              C4099) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C181 +
             (C307 * C1471 + C92157 * C1672) * C92105) *
                C92195) *
               C4097 +
           ((C401 + C417) * C92337 + (C3007 + C3019) * C92195) * C4098 +
           C9678 * C4099) *
              C93 -
          (((C3021 + C3013) * C92195 + (C419 + C407) * C92337) * C4099 +
           ((C3020 + C3010) * C92195 + (C418 + C404) * C92337) * C4098 +
           ((C3019 + C3007) * C92195 + (C417 + C401) * C92337) * C4097) *
              C94 +
          (C9678 * C4097 + (C422 * C92337 + (C3013 + C3021) * C92195) * C4098 +
           ((C412 + C420) * C92337 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92195) *
               C4099) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C181 +
            (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
             C14752 * C8540 + C14525 * C8870) *
                C92105) *
               C92195) *
              C92067 * C93 -
          (((C18215 + C18214 + C18213) * C92105 +
            (C18105 + C18104 + C18103) * C181) *
               C92195 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92337) *
              C92067 * C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C181 +
            (C14750 * C1469 + C14523 * C1670 + C14751 * C3515 + C14524 * C3737 +
             C14752 * C8542 + C14525 * C8872) *
                C92105) *
               C92195) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92337 +
          ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
            C14752 * C8412 + C14525 * C8766) *
               C884 +
           (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
            C14752 * C8540 + C14525 * C8870) *
               C798 -
           (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
            C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
               C885 -
           (C14752 * C18862 + C14525 * C19192 + C14751 * C8540 +
            C14524 * C8870 + C14750 * C3513 + C14523 * C3735) *
               C799 +
           (C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
            C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
               C886 +
           (C14750 * C8540 + C14523 * C8870 + C14751 * C18862 +
            C14524 * C19192 + C14752 * C22504 + C14525 * C22738) *
               C800) *
              C92195) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C38281 +
           (C11246 + C11262) * C38282 + C30032 * C38283 +
           (C30039 + C30043) * C38284) *
              C92067 * C93 -
          ((C30042 + C30036) * C38284 + C31838 * C38283 + C13095 * C38282 +
           (C417 + C401) * C38281) *
              C92067 * C94 +
          (C421 * C38281 + C9676 * C38282 + (C11251 + C11263) * C38283 +
           ((C307 * C10810 + C92157 * C11128) * C181 +
            (C307 * C10932 + C92157 * C11244) * C92105) *
               C38284) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C884 +
           (C307 * C182 + C92157 * C394) * C798 -
           (C307 * C805 + C92157 * C1022) * C885 -
           (C307 * C890 + C92157 * C1085) * C799 +
           (C307 * C806 + C92157 * C1023) * C886 +
           (C307 * C891 + C92157 * C1086) * C800) *
              C38281 +
          (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
           (C307 * C8412 + C92157 * C8766) * C886 +
           (C307 * C8540 + C92157 * C8870) * C800) *
              C38282 +
          (C11160 * C884 + C11261 * C798 - C32703 * C885 - C32811 * C799 +
           (C307 * C16095 + C92157 * C16333) * C886 +
           (C307 * C16177 + C92157 * C16411) * C800) *
              C38283 +
          (C29951 * C884 + C30041 * C798 -
           (C307 * C24524 + C92157 * C24830) * C885 -
           (C307 * C24638 + C92157 * C24944) * C799 +
           (C307 * C24525 + C92157 * C24831) * C886 +
           (C307 * C24639 + C92157 * C24945) * C800) *
              C38284) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C244 +
             (C307 * C1540 + C92157 * C1727) * C92116) *
                C92195) *
               C4097 +
           ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
           C9762 * C4099) *
              C798 -
          ((((C307 * C3589 + C92157 * C3807) * C92116 +
             (C307 * C3433 + C92157 * C3663) * C244) *
                C92195 +
            (C2386 + C2378) * C92337) *
               C4099 +
           (((C307 * C3588 + C92157 * C3806) * C92116 +
             (C307 * C3432 + C92157 * C3662) * C244) *
                C92195 +
            (C2387 + C2381) * C92337) *
               C4098 +
           (((C307 * C3587 + C92157 * C3805) * C92116 +
             (C307 * C3431 + C92157 * C3661) * C244) *
                C92195 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92337) *
               C4097) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C92337 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92195) *
               C4097 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C92337 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92195) *
               C4098 +
           (((C307 * C808 + C92157 * C1025) * C244 +
             (C307 * C959 + C92157 * C1149) * C92116) *
                C92337 +
            ((C307 * C8414 + C92157 * C8768) * C244 +
             (C307 * C8655 + C92157 * C8973) * C92116) *
                C92195) *
               C4099) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C244 +
             (C307 * C1540 + C92157 * C1727) * C92116) *
                C92195) *
               C4097 +
           ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
           C9762 * C4099) *
              C92105 * C93 -
          (((C9758 + C9759) * C92195 + (C499 + C487) * C92337) * C4099 +
           ((C9757 + C9756) * C92195 + (C498 + C484) * C92337) * C4098 +
           ((C9754 + C9753) * C92195 + (C497 + C481) * C92337) * C4097) *
              C92105 * C94 +
          (C9762 * C4097 + (C502 * C92337 + (C9759 + C9758) * C92195) * C4098 +
           ((C492 + C500) * C92337 +
            ((C307 * C2711 + C92157 * C2919) * C244 +
             (C307 * C2851 + C92157 * C3087) * C92116) *
                C92195) *
               C4099) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C92105 * C93 -
          (((C18320 + C18321 + C18322) * C92116 +
            (C18105 + C18104 + C18103) * C244) *
               C92195 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92337) *
              C92067 * C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C244 +
            (C14750 * C1538 + C14523 * C1731 + C14751 * C3589 + C14524 * C3807 +
             C14752 * C8655 + C14525 * C8973) *
                C92116) *
               C92195) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C798 -
          (((C14752 * C18976 + C14525 * C19292 + C14751 * C8653 +
             C14524 * C8971 + C14750 * C3587 + C14523 * C3805) *
                C92116 +
            (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
             C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                C244) *
               C92195 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92337) *
              C92067 * C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92337 +
           ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
             C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                C244 +
            (C14750 * C8653 + C14523 * C8971 + C14751 * C18976 +
             C14524 * C19292 + C14752 * C22581 + C14525 * C22805) *
                C92116) *
               C92195) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C38281 +
           (C11153 * C244 + C11351 * C92116) * C38282 +
           (C11160 * C244 + C11352 * C92116) * C38283 +
           (C29951 * C244 + C30124 * C92116) * C38284) *
              C92067 * C92105 * C93 -
          ((C30125 * C92116 + C29949 * C244) * C38284 +
           (C28572 + C28571) * C38283 + (C9754 + C9753) * C38282 +
           (C497 + C481) * C38281) *
              C92067 * C92105 * C94 +
          (C501 * C38281 + C9760 * C38282 + (C28574 + C28573) * C38283 +
           ((C307 * C10810 + C92157 * C11128) * C244 +
            (C307 * C11030 + C92157 * C11341) * C92116) *
               C38284) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C38281 +
           (C11153 * C244 + C11351 * C92116) * C38282 +
           (C11160 * C244 + C11352 * C92116) * C38283 +
           (C29951 * C244 + C30124 * C92116) * C38284) *
              C92067 * C798 -
          (((C307 * C24740 + C92157 * C25038) * C92116 +
            (C307 * C24524 + C92157 * C24830) * C244) *
               C38284 +
           (C32914 * C92116 + C32703 * C244) * C38283 +
           (C14153 * C92116 + C13944 * C244) * C38282 +
           ((C307 * C956 + C92157 * C1146) * C92116 +
            (C307 * C805 + C92157 * C1022) * C244) *
               C38281) *
              C92067 * C799 +
          (((C307 * C806 + C92157 * C1023) * C244 +
            (C307 * C957 + C92157 * C1147) * C92116) *
               C38281 +
           ((C307 * C8412 + C92157 * C8766) * C244 +
            (C307 * C8653 + C92157 * C8971) * C92116) *
               C38282 +
           ((C307 * C16095 + C92157 * C16333) * C244 +
            (C307 * C16255 + C92157 * C16487) * C92116) *
               C38283 +
           ((C307 * C24525 + C92157 * C24831) * C244 +
            (C307 * C24741 + C92157 * C25039) * C92116) *
               C38284) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C4097 +
           ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
           (C9875 * C801 + C9876 * C92084) * C4099) *
              C92157 * C92116 * C798 -
          (((C9837 * C3441 + C92195 * C3881 + C9836 * C811 + C92337 * C1210) *
                C92084 +
            (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
                C801) *
               C4099 +
           ((C9837 * C3440 + C92195 * C3880 + C9836 * C812 + C92337 * C1211) *
                C92084 +
            (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
                C801) *
               C4098 +
           ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                C92084 +
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C801) *
               C4097) *
              C92157 * C92116 * C799 +
          (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C801 +
            (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
                C92084) *
               C4097 +
           ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
                C801 +
            (C9836 * C823 + C92337 * C1214 + C9837 * C8419 + C92195 * C9076) *
                C92084) *
               C4098 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C801 +
            (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
                C92084) *
               C4099) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C4097 +
          ((C9864 + C9863) * C104 + (C9866 + C9865) * C93 -
           (C9868 + C9867) * C105 - (C9870 + C9869) * C94 +
           (C9871 + C9872) * C106 + (C9873 + C9874) * C95) *
              C4098 +
          (C9875 * C104 + C9876 * C93 - (C9872 + C9871) * C105 -
           (C9874 + C9873) * C94 +
           (C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
               C106 +
           (C9836 * C122 + C92337 * C565 + C9837 * C2713 + C92195 * C3176) *
               C95) *
              C4099) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C92067 * C14523 +
          ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
               C104 +
           (C9836 * C813 + C92337 * C1212 + C9837 * C3439 + C92195 * C3879) *
               C93 -
           (C12328 + C12327) * C105 - (C12330 + C12329) * C94 +
           (C12331 + C12332) * C106 + (C12333 + C12334) * C95) *
              C92067 * C14524 +
          ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C104 +
           (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
               C93 -
           (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
               C105 -
           (C9837 * C8419 + C92195 * C9076 + C9836 * C823 + C92337 * C1214) *
               C94 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C106 +
           (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
               C95) *
              C92067 * C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C14523 +
           ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
               C14524 +
           C24260 * C14525) *
              C92116 * C798 -
          (((C24251 + C24252) * C92084 + (C24253 + C24254) * C801) * C92067 *
               C14525 +
           ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C92067 *
               C14524 +
           ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C92067 *
               C14523) *
              C92116 * C799 +
          (C24260 * C14523 +
           ((C24254 + C24253) * C801 + (C24252 + C24251) * C92084) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C801 +
            (C9836 * C15277 + C92337 * C15825 + C9837 * C22412 +
             C92195 * C22873) *
                C92084) *
               C92067 * C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
           C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
           C38284 * C11428) *
              C104 +
          (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
           C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
           C38284 * C11431) *
              C93 -
          (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 + C38283 * C1790 +
           C38586 * C1388 + C38282 * C1787 + C38585 * C108 + C38281 * C556) *
              C105 -
          (C38588 * C10815 + C38284 * C11432 + C38587 * C1407 + C38283 * C1798 +
           C38586 * C1396 + C38282 * C1795 + C38585 * C118 + C38281 * C562) *
              C94 +
          (C38585 * C109 + C38281 * C557 + C38586 * C1387 + C38282 * C1786 +
           C38587 * C1392 + C38283 * C1791 + C38588 * C10810 +
           C38284 * C11430) *
              C106 +
          (C38585 * C119 + C38281 * C563 + C38586 * C1395 + C38282 * C1794 +
           C38587 * C1408 + C38283 * C1799 + C38588 * C10816 +
           C38284 * C11433) *
              C95) *
         C92067 * C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C801 +
           (C38585 * C117 + C38281 * C561 + C38586 * C1397 + C38282 * C1796 +
            C38587 * C1406 + C38283 * C1797 + C38588 * C10814 +
            C38284 * C11431) *
               C92084) *
              C92067 * C92157 * C92116 * C798 -
          ((C38588 * C24527 + C38284 * C25134 + C38587 * C5725 +
            C38283 * C6202 + C38586 * C3439 + C38282 * C3879 + C38585 * C813 +
            C38281 * C1212) *
               C92084 +
           (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
            C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
            C38281 * C1204) *
               C801) *
              C92067 * C92157 * C92116 * C799 +
          ((C38585 * C806 + C38281 * C1205 + C38586 * C8412 + C38282 * C9072 +
            C38587 * C16095 + C38283 * C16563 + C38588 * C24525 +
            C38284 * C25133) *
               C801 +
           (C38585 * C822 + C38281 * C1213 + C38586 * C8418 + C38282 * C9075 +
            C38587 * C16099 + C38283 * C16565 + C38588 * C24529 +
            C38284 * C25135) *
               C92084) *
              C92067 * C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
               C885 -
           (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
               C799 +
           (C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C886 +
           (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
               C800) *
              C4097 +
          ((C9864 + C9863) * C884 + (C9964 + C9965) * C798 -
           (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
               C885 -
           (C9837 * C3514 + C92195 * C3950 + C9836 * C889 + C92337 * C1269) *
               C799 +
           (C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
               C886 +
           (C9836 * C892 + C92337 * C1270 + C9837 * C8541 + C92195 * C9189) *
               C800) *
              C4098 +
          (C9875 * C884 + C9970 * C798 -
           (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
               C885 -
           (C9837 * C3515 + C92195 * C3951 + C9836 * C888 + C92337 * C1271) *
               C799 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C886 +
           (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
               C800) *
              C4099) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C4097 +
           ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
           C9972 * C4099) *
              C92157 * C93 -
          (((C9968 + C9969) * C92105 + (C9872 + C9871) * C181) * C4099 +
           ((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C4098 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C4097) *
              C92157 * C94 +
          (C9972 * C4097 +
           ((C9871 + C9872) * C181 + (C9969 + C9968) * C92105) * C4098 +
           ((C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                C181 +
            (C9836 * C186 + C92337 * C645 + C9837 * C2781 + C92195 * C3261) *
                C92105) *
               C4099) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C181 +
            (C9836 * C890 + C92337 * C1267 + C9837 * C3513 + C92195 * C3949) *
                C92105) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C181 +
            (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
                C92105) *
               C92067 * C14525) *
              C93 -
          (((C9837 * C8541 + C92195 * C9189 + C9836 * C892 + C92337 * C1270) *
                C92105 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C181) *
               C92067 * C14525 +
           ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C92067 *
               C14524 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C92067 *
               C14523) *
              C94 +
          (C9972 * C92067 * C14523 +
           ((C12331 + C12332) * C181 + (C12444 + C12443) * C92105) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C181 +
            (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
                C92105) *
               C92067 * C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C24244 + C24243) * C885 - (C24347 + C24348) * C799 + C24255 * C886 +
           C24353 * C800) *
              C92067 * C14523 +
          ((C24243 + C24244) * C884 + (C24348 + C24347) * C798 -
           (C24248 + C24247) * C885 - (C24350 + C24349) * C799 +
           (C24254 + C24253) * C886 + (C24351 + C24352) * C800) *
              C92067 * C14524 +
          (C24255 * C884 + C24353 * C798 - (C24253 + C24254) * C885 -
           (C24352 + C24351) * C799 +
           (C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
            C92195 * C22872) *
               C886 +
           (C9836 * C15396 + C92337 * C15922 + C9837 * C22504 +
            C92195 * C22948) *
               C800) *
              C92067 * C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C181 +
           (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
            C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
            C38284 * C11508) *
               C92105) *
              C92067 * C92157 * C93 -
          ((C38588 * C10931 + C38284 * C11509 + C38587 * C1473 +
            C38283 * C1856 + C38586 * C1470 + C38282 * C1853 + C38585 * C183 +
            C38281 * C642) *
               C92105 +
           (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
            C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
            C38281 * C556) *
               C181) *
              C92067 * C92157 * C94 +
          ((C38585 * C109 + C38281 * C557 + C38586 * C1387 + C38282 * C1786 +
            C38587 * C1392 + C38283 * C1791 + C38588 * C10810 +
            C38284 * C11430) *
               C181 +
           (C38585 * C184 + C38281 * C643 + C38586 * C1469 + C38282 * C1852 +
            C38587 * C1474 + C38283 * C1857 + C38588 * C10932 +
            C38284 * C11510) *
               C92105) *
              C92067 * C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
           C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
           C38284 * C11428) *
              C884 +
          (C38585 * C182 + C38281 * C641 + C38586 * C1471 + C38282 * C1854 +
           C38587 * C1472 + C38283 * C1855 + C38588 * C10930 +
           C38284 * C11508) *
              C798 -
          (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 + C38283 * C6199 +
           C38586 * C3431 + C38282 * C3875 + C38585 * C805 + C38281 * C1204) *
              C885 -
          (C38588 * C24638 + C38284 * C25210 + C38587 * C5805 + C38283 * C6279 +
           C38586 * C3513 + C38282 * C3949 + C38585 * C890 + C38281 * C1267) *
              C799 +
          (C38585 * C806 + C38281 * C1205 + C38586 * C8412 + C38282 * C9072 +
           C38587 * C16095 + C38283 * C16563 + C38588 * C24525 +
           C38284 * C25133) *
              C886 +
          (C38585 * C891 + C38281 * C1268 + C38586 * C8540 + C38282 * C9188 +
           C38587 * C16177 + C38283 * C16641 + C38588 * C24639 +
           C38284 * C25211) *
              C800) *
         C92067 * C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C4097 +
           ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
           C10068 * C4099) *
              C92157 * C798 -
          (((C9837 * C3589 + C92195 * C4021 + C9836 * C954 + C92337 * C1326) *
                C92116 +
            (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
                C244) *
               C4099 +
           ((C9837 * C3588 + C92195 * C4020 + C9836 * C955 + C92337 * C1327) *
                C92116 +
            (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
                C244) *
               C4098 +
           ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                C92116 +
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C244) *
               C4097) *
              C92157 * C799 +
          (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C4097 +
           ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
                C244 +
            (C9836 * C958 + C92337 * C1330 + C9837 * C8654 + C92195 * C9293) *
                C92116) *
               C4098 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C4099) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C4097 +
           ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
           C10068 * C4099) *
              C92157 * C92105 * C93 -
          (((C10064 + C10065) * C92116 + (C9872 + C9871) * C244) * C4099 +
           ((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C4098 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C4097) *
              C92157 * C92105 * C94 +
          (C10068 * C4097 +
           ((C9871 + C9872) * C244 + (C10065 + C10064) * C92116) * C4098 +
           ((C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                C244 +
            (C9836 * C249 + C92337 * C723 + C9837 * C2851 + C92195 * C3343) *
                C92116) *
               C4099) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C244 +
            (C9836 * C956 + C92337 * C1328 + C9837 * C3587 + C92195 * C4019) *
                C92116) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C92067 * C14525) *
              C92105 * C93 -
          (((C9837 * C8654 + C92195 * C9293 + C9836 * C958 + C92337 * C1330) *
                C92116 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C244) *
               C92067 * C14525 +
           ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92067 *
               C14524 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C92067 *
               C14523) *
              C92105 * C94 +
          (C10068 * C92067 * C14523 +
           ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C92067 * C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C92067 *
               C14524 +
           C24450 * C14525) *
              C798 -
          (((C24445 + C24446) * C92116 + (C24253 + C24254) * C244) * C92067 *
               C14525 +
           ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C92067 *
               C14524 +
           ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C92067 *
               C14523) *
              C799 +
          (C24450 * C14523 +
           ((C24254 + C24253) * C244 + (C24446 + C24445) * C92116) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C244 +
            (C9836 * C15493 + C92337 * C16004 + C9837 * C22581 +
             C92195 * C23018) *
                C92116) *
               C92067 * C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C244 +
           (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
            C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
            C38284 * C11585) *
               C92116) *
              C92067 * C92157 * C92105 * C93 -
          ((C38588 * C11029 + C38284 * C11586 + C38587 * C1542 +
            C38283 * C1912 + C38586 * C1539 + C38282 * C1911 + C38585 * C246 +
            C38281 * C720) *
               C92116 +
           (C38588 * C10809 + C38284 * C11429 + C38587 * C1391 +
            C38283 * C1790 + C38586 * C1388 + C38282 * C1787 + C38585 * C108 +
            C38281 * C556) *
               C244) *
              C92067 * C92157 * C92105 * C94 +
          ((C38585 * C109 + C38281 * C557 + C38586 * C1387 + C38282 * C1786 +
            C38587 * C1392 + C38283 * C1791 + C38588 * C10810 +
            C38284 * C11430) *
               C244 +
           (C38585 * C247 + C38281 * C721 + C38586 * C1538 + C38282 * C1913 +
            C38587 * C1543 + C38283 * C1914 + C38588 * C11030 +
            C38284 * C11587) *
               C92116) *
              C92067 * C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38585 * C107 + C38281 * C555 + C38586 * C1389 + C38282 * C1788 +
            C38587 * C1390 + C38283 * C1789 + C38588 * C10808 +
            C38284 * C11428) *
               C244 +
           (C38585 * C245 + C38281 * C719 + C38586 * C1540 + C38282 * C1909 +
            C38587 * C1541 + C38283 * C1910 + C38588 * C11028 +
            C38284 * C11585) *
               C92116) *
              C92067 * C92157 * C798 -
          ((C38588 * C24740 + C38284 * C25286 + C38587 * C5885 +
            C38283 * C6356 + C38586 * C3587 + C38282 * C4019 + C38585 * C956 +
            C38281 * C1328) *
               C92116 +
           (C38588 * C24524 + C38284 * C25132 + C38587 * C5719 +
            C38283 * C6199 + C38586 * C3431 + C38282 * C3875 + C38585 * C805 +
            C38281 * C1204) *
               C244) *
              C92067 * C92157 * C799 +
          ((C38585 * C806 + C38281 * C1205 + C38586 * C8412 + C38282 * C9072 +
            C38587 * C16095 + C38283 * C16563 + C38588 * C24525 +
            C38284 * C25133) *
               C244 +
           (C38585 * C957 + C38281 * C1329 + C38586 * C8653 + C38282 * C9292 +
            C38587 * C16255 + C38283 * C16717 + C38588 * C24741 +
            C38284 * C25287) *
               C92116) *
              C92067 * C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C1987 +
                      (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                       C92350 * C126 + C41552 * C119 + C41547 * C127) *
                          C1983 -
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C1988 -
                      (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                       C92350 * C127 + C41550 * C118 + C92360 * C126) *
                          C1984) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C1987 +
                      (C59419 + C59420 + C59421) * C1983 -
                      (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                       C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                          C1988 -
                      (C41552 * C1394 + C41547 * C1410 + C41551 * C1395 +
                       C92350 * C1411 + C41550 * C1396 + C92360 * C1412) *
                          C1984) *
                         C92157 * C92195) *
                        C92116 * C1985 +
                    (((C43748 + C43747 + C43746) * C1988 -
                      ((C42335 + C42334 + C42333) * C1983 +
                       (C42332 + C42331 + C42330) * C1987) +
                      (C43751 + C43750 + C43749) * C1984) *
                         C92157 * C57967 +
                     ((C41550 * C3432 + C92360 * C3436 + C41551 * C3433 +
                       C92350 * C3437 + C41552 * C3434 + C41547 * C3438) *
                          C1988 -
                      ((C45642 + C45643 + C45644) * C1983 +
                       (C45645 + C45646 + C45647) * C1987) +
                      (C41550 * C3440 + C92360 * C3444 + C41551 * C3441 +
                       C92350 * C3445 + C41552 * C3442 + C41547 * C3446) *
                          C1984) *
                         C92157 * C92195) *
                        C92116 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C2059 +
                      (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                       C92350 * C189 + C41552 * C184 + C41547 * C190) *
                          C1985 -
                      (C42332 + C42331 + C42330) * C2060 -
                      (C42428 + C42429 + C42430) * C1986) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C2059 +
                      (C59514 + C59515 + C59516) * C1985 -
                      (C45645 + C45646 + C45647) * C2060 -
                      (C45754 + C45753 + C45752) * C1986) *
                         C92157 * C92195) *
                        C1983 +
                    (((C43748 + C43747 + C43746) * C2060 -
                      ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                        C92350 * C190 + C41550 * C183 + C92360 * C189) *
                           C1985 +
                       (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                        C92350 * C115 + C41550 * C108 + C92360 * C114) *
                           C2059) +
                      (C43856 + C43857 + C43858) * C1986) *
                         C92157 * C57967 +
                     ((C41550 * C3432 + C92360 * C3436 + C41551 * C3433 +
                       C92350 * C3437 + C41552 * C3434 + C41547 * C3438) *
                          C2060 -
                      ((C41552 * C1468 + C41547 * C1476 + C41551 * C1469 +
                        C92350 * C1477 + C41550 * C1470 + C92360 * C1478) *
                           C1985 +
                       (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                        C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                           C2059) +
                      (C41550 * C3514 + C92360 * C3518 + C41551 * C3515 +
                       C92350 * C3519 + C41552 * C3516 + C41547 * C3520) *
                          C1986) *
                         C92157 * C92195) *
                        C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eexz[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                        C92350 * C114 + C41552 * C109 + C41547 * C115) *
                           C244 +
                       (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                        C92350 * C252 + C41552 * C247 + C41547 * C253) *
                           C92116) *
                          C92157 * C57967 +
                      ((C59416 + C59417 + C59418) * C244 +
                       (C59608 + C59607 + C59606) * C92116) *
                          C92157 * C92195) *
                         C1985 -
                     (((C45859 + C45860 + C45861) * C92116 +
                       (C45645 + C45646 + C45647) * C244) *
                          C92157 * C92195 +
                      ((C42522 + C42521 + C42520) * C92116 +
                       (C42332 + C42331 + C42330) * C244) *
                          C92157 * C57967) *
                         C1986) *
                        C1983 +
                    ((((C43748 + C43747 + C43746) * C244 +
                       (C43963 + C43964 + C43965) * C92116) *
                          C92157 * C57967 +
                      ((C41550 * C3432 + C92360 * C3436 + C41551 * C3433 +
                        C92350 * C3437 + C41552 * C3434 + C41547 * C3438) *
                           C244 +
                       (C41550 * C3588 + C92360 * C3592 + C41551 * C3589 +
                        C92350 * C3593 + C41552 * C3590 + C41547 * C3594) *
                           C92116) *
                          C92157 * C92195) *
                         C1986 -
                     (((C41552 * C1537 + C41547 * C1545 + C41551 * C1538 +
                        C92350 * C1546 + C41550 * C1539 + C92360 * C1547) *
                           C92116 +
                       (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                        C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                           C244) *
                          C92157 * C92195 +
                      ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                        C92350 * C253 + C41550 * C246 + C92360 * C252) *
                           C92116 +
                       (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                        C92350 * C115 + C41550 * C108 + C92360 * C114) *
                           C244) *
                          C92157 * C57967) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C57967 +
            (C12983 + C12984 - C12985 - C12986) * C92195) *
               C92360 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C57967 +
            (C12987 + C12988 - C12989 - C12990) * C92195) *
               C92350 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C57967 +
            (C12991 + C12992 - C12993 - C12994) * C92195) *
               C41547) *
              C92116 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92157 * C1030) * C1983 +
              (C307 * C805 + C92157 * C1022) * C1987) +
             C2213 * C1984) *
                C57967 +
            (C11989 * C1988 - (C13945 * C1983 + C13944 * C1987) +
             C11990 * C1984) *
                C92195) *
               C92360 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C57967 +
            (C11991 * C1988 - (C11990 * C1983 + C11989 * C1987) +
             C11992 * C1984) *
                C92195) *
               C92350 +
           ((C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
                C57967 +
            ((C307 * C3434 + C92157 * C3664) * C1988 -
             (C11992 * C1983 + C11991 * C1987) +
             (C307 * C3442 + C92157 * C3668) * C1984) *
                C92195) *
               C41547) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C57967 +
                      (C14046 + C14047 - C14048 - C14052) * C92195) *
                         C92360 +
                     ((C2285 + C2286 - C2287 - C2303) * C57967 +
                      (C12091 + C12092 - C12093 - C12103) * C92195) *
                         C92350 +
                     ((C2290 + C2291 - C2292 - C2304) * C57967 +
                      (C12096 + C12097 - C12098 - C12104) * C92195) *
                         C41547) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C57967 +
                      (C12093 - (C12092 + C12091) + C12103) * C92195) *
                         C92360 +
                     ((C2292 - (C2291 + C2290) + C2304) * C57967 +
                      (C12098 - (C12097 + C12096) + C12104) * C92195) *
                         C92350 +
                     ((C2297 - (C2296 + C2295) + C2305) * C57967 +
                      ((C307 * C3434 + C92157 * C3664) * C2060 -
                       (C3018 * C1985 + C2938 * C2059) +
                       (C307 * C3516 + C92157 * C3738) * C1986) *
                          C92195) *
                         C41547) *
                        C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C244 +
              (C307 * C245 + C92157 * C474) * C92116) *
                 C57967 +
             (C11153 * C244 + C11351 * C92116) * C92195) *
                C92360 +
            ((C481 + C497) * C57967 + (C9753 + C9754) * C92195) * C92350 +
            C58345 * C41547) *
               C1985 -
           (((C12211 + C12205) * C92195 + (C2386 + C2378) * C57967) * C41547 +
            ((C12212 + C12208) * C92195 + (C2387 + C2381) * C57967) * C92350 +
            ((C14153 * C92116 + C13944 * C244) * C92195 +
             ((C307 * C956 + C92157 * C1146) * C92116 +
              (C307 * C805 + C92157 * C1022) * C244) *
                 C57967) *
                C92360) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C57967 + (C12208 + C12212) * C92195) * C92360 +
            ((C2378 + C2386) * C57967 + (C12205 + C12211) * C92195) * C92350 +
            ((C2375 + C2385) * C57967 +
             ((C307 * C3434 + C92157 * C3664) * C244 +
              (C307 * C3590 + C92157 * C3808) * C92116) *
                 C92195) *
                C41547) *
               C1986 -
           (((C9758 + C9759) * C92195 + (C499 + C487) * C57967) * C41547 +
            ((C9757 + C9756) * C92195 + (C498 + C484) * C57967) * C92350 +
            ((C9754 + C9753) * C92195 + (C497 + C481) * C57967) * C92360) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C1987 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C1983 -
            (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
               C92360 +
           ((C58447 + C58446) * C1987 + (C58449 + C58448) * C1983 -
            (C58451 + C58450) * C1988 - (C58453 + C58452) * C1984) *
               C92350 +
           (C58458 * C1987 + C58459 * C1983 - (C58455 + C58454) * C1988 -
            (C58457 + C58456) * C1984) *
               C41547) *
              C92157 * C92116 * C1985 +
          (((C60758 + C60759) * C1988 -
            ((C58420 * C3439 + C92195 * C3879 + C58419 * C813 +
              C57967 * C1212) *
                 C1983 +
             (C58420 * C3431 + C92195 * C3875 + C58419 * C805 +
              C57967 * C1204) *
                 C1987) +
            (C60760 + C60761) * C1984) *
               C92360 +
           ((C60762 + C60763) * C1988 -
            ((C60761 + C60760) * C1983 + (C60759 + C60758) * C1987) +
            (C60764 + C60765) * C1984) *
               C92350 +
           ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 + C92195 * C3878) *
                C1988 -
            ((C60765 + C60764) * C1983 + (C60763 + C60762) * C1987) +
            (C58419 * C810 + C57967 * C1209 + C58420 * C3442 + C92195 * C3882) *
                C1984) *
               C41547) *
              C92157 * C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2059 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C1985 -
            (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
                C2060 -
            (C58420 * C3513 + C92195 * C3949 + C58419 * C890 + C57967 * C1267) *
                C1986) *
               C92360 +
           ((C58447 + C58446) * C2059 + (C58547 + C58548) * C1985 -
            (C60759 + C60758) * C2060 - (C60872 + C60873) * C1986) *
               C92350 +
           (C58458 * C2059 + C58553 * C1985 - (C60763 + C60762) * C2060 -
            (C60874 + C60875) * C1986) *
               C41547) *
              C92157 * C1983 +
          (((C60758 + C60759) * C2060 -
            ((C58548 + C58547) * C1985 + (C58446 + C58447) * C2059) +
            (C60873 + C60872) * C1986) *
               C92360 +
           ((C60762 + C60763) * C2060 -
            ((C58550 + C58549) * C1985 + (C58451 + C58450) * C2059) +
            (C60875 + C60874) * C1986) *
               C92350 +
           ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 + C92195 * C3878) *
                C2060 -
            ((C58551 + C58552) * C1985 + (C58455 + C58454) * C2059) +
            (C58419 * C887 + C57967 * C1273 + C58420 * C3516 + C92195 * C3952) *
                C1986) *
               C41547) *
              C92157 * C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C92360 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92350 +
            C58651 * C41547) *
               C92157 * C1985 -
           (((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C41547 +
            ((C60984 + C60985) * C92116 + (C60759 + C60758) * C244) * C92350 +
            ((C58420 * C3587 + C92195 * C4019 + C58419 * C956 +
              C57967 * C1328) *
                 C92116 +
             (C58420 * C3431 + C92195 * C3875 + C58419 * C805 +
              C57967 * C1204) *
                 C244) *
                C92360) *
               C92157 * C1986) *
              C1983 +
          ((((C60758 + C60759) * C244 + (C60985 + C60984) * C92116) * C92360 +
            ((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92350 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C244 +
             (C58419 * C953 + C57967 * C1325 + C58420 * C3590 +
              C92195 * C4022) *
                 C92116) *
                C41547) *
               C92157 * C1986 -
           (((C58647 + C58648) * C92116 + (C58455 + C58454) * C244) * C41547 +
            ((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92350 +
            ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92360) *
               C92157 * C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                        C92350 * C114 + C41552 * C109 + C41547 * C115) *
                           C801 +
                       (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                        C92350 * C126 + C41552 * C119 + C41547 * C127) *
                           C92084) *
                          C92157 * C57967 +
                      ((C59416 + C59417 + C59418) * C801 +
                       (C59419 + C59420 + C59421) * C92084) *
                          C92157 * C92195) *
                         C2709 -
                     (((C59422 + C59423 + C59424) * C92084 +
                       (C59425 + C59426 + C59427) * C801) *
                          C92157 * C92195 +
                      ((C59421 + C59420 + C59419) * C92084 +
                       (C59418 + C59417 + C59416) * C801) *
                          C92157 * C57967) *
                         C2710) *
                        C1985 +
                    ((((C45647 + C45646 + C45645) * C801 +
                       (C45644 + C45643 + C45642) * C92084) *
                          C92157 * C57967 +
                      ((C41550 * C5719 + C92360 * C5722 + C41551 * C5720 +
                        C92350 * C5723 + C41552 * C5721 + C41547 * C5724) *
                           C801 +
                       (C41550 * C5725 + C92360 * C5728 + C41551 * C5726 +
                        C92350 * C5729 + C41552 * C5727 + C41547 * C5730) *
                           C92084) *
                          C92157 * C92195) *
                         C2710 -
                     (((C45642 + C45643 + C45644) * C92084 +
                       (C45645 + C45646 + C45647) * C801) *
                          C92157 * C92195 +
                      ((C42335 + C42334 + C42333) * C92084 +
                       (C42332 + C42331 + C42330) * C801) *
                          C92157 * C57967) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C2059 +
                      (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                       C92350 * C189 + C41552 * C184 + C41547 * C190) *
                          C1985 -
                      (C42332 + C42331 + C42330) * C2060 -
                      (C42428 + C42429 + C42430) * C1986) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C2059 +
                      (C59514 + C59515 + C59516) * C1985 -
                      (C45645 + C45646 + C45647) * C2060 -
                      (C45754 + C45753 + C45752) * C1986) *
                         C92157 * C92195) *
                        C92084 * C2709 +
                    (((C45647 + C45646 + C45645) * C2060 -
                      ((C59516 + C59515 + C59514) * C1985 +
                       (C59418 + C59417 + C59416) * C2059) +
                      (C45752 + C45753 + C45754) * C1986) *
                         C92157 * C57967 +
                     ((C41550 * C5719 + C92360 * C5722 + C41551 * C5720 +
                       C92350 * C5723 + C41552 * C5721 + C41547 * C5724) *
                          C2060 -
                      ((C59517 + C59518 + C59519) * C1985 +
                       (C59425 + C59426 + C59427) * C2059) +
                      (C41550 * C5805 + C92360 * C5808 + C41551 * C5806 +
                       C92350 * C5809 + C41552 * C5807 + C41547 * C5810) *
                          C1986) *
                         C92157 * C92195) *
                        C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C2849 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C2709 -
                      (C59418 + C59417 + C59416) * C2850 -
                      (C59606 + C59607 + C59608) * C2710) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C2849 +
                      (C59608 + C59607 + C59606) * C2709 -
                      (C59425 + C59426 + C59427) * C2850 -
                      (C59611 + C59610 + C59609) * C2710) *
                         C92157 * C92195) *
                        C1985 +
                    (((C45647 + C45646 + C45645) * C2850 -
                      ((C42522 + C42521 + C42520) * C2709 +
                       (C42332 + C42331 + C42330) * C2849) +
                      (C45861 + C45860 + C45859) * C2710) *
                         C92157 * C57967 +
                     ((C41550 * C5719 + C92360 * C5722 + C41551 * C5720 +
                       C92350 * C5723 + C41552 * C5721 + C41547 * C5724) *
                          C2850 -
                      ((C45859 + C45860 + C45861) * C2709 +
                       (C45645 + C45646 + C45647) * C2849) +
                      (C41550 * C5885 + C92360 * C5888 + C41551 * C5886 +
                       C92350 * C5889 + C41552 * C5887 + C41547 * C5890) *
                          C2710) *
                         C92157 * C92195) *
                        C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C801 +
              (C307 * C117 + C92157 * C314) * C92084) *
                 C57967 +
             (C11161 + C11162) * C92195) *
                C92360 +
            ((C337 * C801 + C338 * C92084) * C57967 +
             (C11137 + C11138) * C92195) *
                C92350 +
            ((C339 * C801 + C340 * C92084) * C57967 +
             (C11139 + C11140) * C92195) *
                C41547) *
               C2709 -
           (((C11163 + C11164) * C92195 + (C11140 + C11139) * C57967) * C41547 +
            ((C11165 + C11166) * C92195 + (C11138 + C11137) * C57967) * C92350 +
            ((C11167 + C11168) * C92195 + (C11162 + C11161) * C57967) *
                C92360) *
               C2710) *
              C1985 +
          ((((C13946 + C13947) * C57967 + (C32705 + C32706) * C92195) * C92360 +
            ((C13940 + C13941) * C57967 + (C32701 + C32702) * C92195) * C92350 +
            ((C13942 + C13943) * C57967 +
             ((C307 * C5721 + C92157 * C5967) * C801 +
              (C307 * C5727 + C92157 * C5970) * C92084) *
                 C92195) *
                C41547) *
               C2710 -
           (((C13943 + C13942) * C92195 +
             (C2215 * C92084 + C2214 * C801) * C57967) *
                C41547 +
            ((C13941 + C13940) * C92195 +
             (C2213 * C92084 + C2212 * C801) * C57967) *
                C92350 +
            ((C13947 + C13946) * C92195 +
             ((C307 * C813 + C92157 * C1030) * C92084 +
              (C307 * C805 + C92157 * C1022) * C801) *
                 C57967) *
                C92360) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C57967 +
                      (C14046 + C14047 - C14048 - C14052) * C92195) *
                         C92360 +
                     ((C2285 + C2286 - C2287 - C2303) * C57967 +
                      (C12091 + C12092 - C12093 - C12103) * C92195) *
                         C92350 +
                     ((C2290 + C2291 - C2292 - C2304) * C57967 +
                      (C12096 + C12097 - C12098 - C12104) * C92195) *
                         C41547) *
                        C92084 * C2709 +
                    (((C14048 - (C14047 + C14046) + C14052) * C57967 +
                      (C32808 - (C32807 + C32806) + C32812) * C92195) *
                         C92360 +
                     ((C12093 - (C12092 + C12091) + C12103) * C57967 +
                      (C30854 - (C30853 + C30852) + C30858) * C92195) *
                         C92350 +
                     ((C12098 - (C12097 + C12096) + C12104) * C57967 +
                      ((C307 * C5721 + C92157 * C5967) * C2060 -
                       (C11259 * C1985 + C11156 * C2059) +
                       (C307 * C5807 + C92157 * C6047) * C1986) *
                          C92195) *
                         C41547) *
                        C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C57967 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C92195) *
                         C92360 +
                     ((C3089 + C3090 - C3091 - C3107) * C57967 +
                      (C13194 + C13195 - C13196 - C13197) * C92195) *
                         C92350 +
                     ((C3094 + C3095 - C3096 - C3108) * C57967 +
                      (C13198 + C13199 - C13200 - C13201) * C92195) *
                         C41547) *
                        C1985 +
                    (((C13944 * C2850 -
                       ((C307 * C956 + C92157 * C1146) * C2709 +
                        (C307 * C805 + C92157 * C1022) * C2849) +
                       C14153 * C2710) *
                          C57967 +
                      (C32703 * C2850 - (C14153 * C2709 + C13944 * C2849) +
                       C32914 * C2710) *
                          C92195) *
                         C92360 +
                     ((C11989 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12210 * C2710) *
                          C57967 +
                      (C30752 * C2850 - (C12210 * C2709 + C11989 * C2849) +
                       C30960 * C2710) *
                          C92195) *
                         C92350 +
                     ((C11991 * C2850 - (C2383 * C2709 + C2214 * C2849) +
                       C12209 * C2710) *
                          C57967 +
                      ((C307 * C5721 + C92157 * C5967) * C2850 -
                       (C12209 * C2709 + C11991 * C2849) +
                       (C307 * C5887 + C92157 * C6124) * C2710) *
                          C92195) *
                         C41547) *
                        C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eezx[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C92360 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92350 +
            (C58458 * C801 + C58459 * C92084) * C41547) *
               C92157 * C2709 -
           (((C61731 + C61730) * C92084 + (C61729 + C61728) * C801) * C41547 +
            ((C61727 + C61726) * C92084 + (C61725 + C61724) * C801) * C92350 +
            ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
              C57967 * C1796) *
                 C92084 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C801) *
                C92360) *
               C92157 * C2710) *
              C1985 +
          ((((C58419 * C3431 + C57967 * C3875 + C58420 * C5719 +
              C92195 * C6199) *
                 C801 +
             (C58419 * C3439 + C57967 * C3879 + C58420 * C5725 +
              C92195 * C6202) *
                 C92084) *
                C92360 +
            ((C58419 * C3432 + C57967 * C3876 + C58420 * C5720 +
              C92195 * C6200) *
                 C801 +
             (C58419 * C3440 + C57967 * C3880 + C58420 * C5726 +
              C92195 * C6203) *
                 C92084) *
                C92350 +
            ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
              C92195 * C6201) *
                 C801 +
             (C58419 * C3441 + C57967 * C3881 + C58420 * C5727 +
              C92195 * C6204) *
                 C92084) *
                C41547) *
               C92157 * C2710 -
           (((C60765 + C60764) * C92084 + (C60763 + C60762) * C801) * C41547 +
            ((C60761 + C60760) * C92084 + (C60759 + C60758) * C801) * C92350 +
            ((C58420 * C3439 + C92195 * C3879 + C58419 * C813 +
              C57967 * C1212) *
                 C92084 +
             (C58420 * C3431 + C92195 * C3875 + C58419 * C805 +
              C57967 * C1204) *
                 C801) *
                C92360) *
               C92157 * C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2059 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C1985 -
            (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
                C2060 -
            (C58420 * C3513 + C92195 * C3949 + C58419 * C890 + C57967 * C1267) *
                C1986) *
               C92360 +
           ((C58447 + C58446) * C2059 + (C58547 + C58548) * C1985 -
            (C60759 + C60758) * C2060 - (C60872 + C60873) * C1986) *
               C92350 +
           (C58458 * C2059 + C58553 * C1985 - (C60763 + C60762) * C2060 -
            (C60874 + C60875) * C1986) *
               C41547) *
              C92157 * C92084 * C2709 +
          (((C58419 * C3431 + C57967 * C3875 + C58420 * C5719 +
             C92195 * C6199) *
                C2060 -
            ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
              C57967 * C1854) *
                 C1985 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C2059) +
            (C58419 * C3513 + C57967 * C3949 + C58420 * C5805 +
             C92195 * C6279) *
                C1986) *
               C92360 +
           ((C58419 * C3432 + C57967 * C3876 + C58420 * C5720 +
             C92195 * C6200) *
                C2060 -
            ((C61839 + C61838) * C1985 + (C61725 + C61724) * C2059) +
            (C58419 * C3514 + C57967 * C3950 + C58420 * C5806 +
             C92195 * C6280) *
                C1986) *
               C92350 +
           ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
             C92195 * C6201) *
                C2060 -
            ((C61841 + C61840) * C1985 + (C61729 + C61728) * C2059) +
            (C58419 * C3515 + C57967 * C3951 + C58420 * C5807 +
             C92195 * C6281) *
                C1986) *
               C41547) *
              C92157 * C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2849 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C2709 -
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C2850 -
            (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
             C57967 * C1909) *
                C2710) *
               C92360 +
           ((C58447 + C58446) * C2849 + (C58643 + C58644) * C2709 -
            (C61725 + C61724) * C2850 - (C61948 + C61949) * C2710) *
               C92350 +
           (C58458 * C2849 + C58649 * C2709 - (C61729 + C61728) * C2850 -
            (C61950 + C61951) * C2710) *
               C41547) *
              C92157 * C1985 +
          (((C58419 * C3431 + C57967 * C3875 + C58420 * C5719 +
             C92195 * C6199) *
                C2850 -
            ((C58420 * C3587 + C92195 * C4019 + C58419 * C956 +
              C57967 * C1328) *
                 C2709 +
             (C58420 * C3431 + C92195 * C3875 + C58419 * C805 +
              C57967 * C1204) *
                 C2849) +
            (C58419 * C3587 + C57967 * C4019 + C58420 * C5885 +
             C92195 * C6356) *
                C2710) *
               C92360 +
           ((C58419 * C3432 + C57967 * C3876 + C58420 * C5720 +
             C92195 * C6200) *
                C2850 -
            ((C60984 + C60985) * C2709 + (C60759 + C60758) * C2849) +
            (C58419 * C3588 + C57967 * C4020 + C58420 * C5886 +
             C92195 * C6357) *
                C2710) *
               C92350 +
           ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
             C92195 * C6201) *
                C2850 -
            ((C60982 + C60983) * C2709 + (C60763 + C60762) * C2849) +
            (C58419 * C3589 + C57967 * C4021 + C58420 * C5887 +
             C92195 * C6358) *
                C2710) *
               C41547) *
              C92157 * C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eexx[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C801 +
                      (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                       C92350 * C126 + C41552 * C119 + C41547 * C127) *
                          C92084) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C801 +
                      (C41550 * C1397 + C92360 * C1413 + C41551 * C1396 +
                       C92350 * C1412 + C41552 * C1395 + C41547 * C1411) *
                          C92084) *
                         C92157 * C92195) *
                        C92116 * C798 -
                    (((C45642 + C45643 + C45644) * C92084 +
                      (C45645 + C45646 + C45647) * C801) *
                         C92157 * C92195 +
                     ((C42335 + C42334 + C42333) * C92084 +
                      (C42332 + C42331 + C42330) * C801) *
                         C92157 * C57967) *
                        C92116 * C799 +
                    (((C42341 + C42340 + C42339) * C801 +
                      (C42338 + C42337 + C42336) * C92084) *
                         C92157 * C57967 +
                     ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                       C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                          C801 +
                      (C41550 * C8418 + C92360 * C8421 + C41551 * C8419 +
                       C92350 * C8422 + C41552 * C8420 + C41547 * C8423) *
                          C92084) *
                         C92157 * C92195) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C104 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C93 -
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C105 -
                     (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                      C92350 * C127 + C41550 * C118 + C92360 * C126) *
                         C94 +
                     (C41550 * C109 + C92360 * C115 + C41551 * C110 +
                      C92350 * C116 + C41552 * C111 + C41547 * C121) *
                         C106 +
                     (C41550 * C119 + C92360 * C127 + C41551 * C120 +
                      C92350 * C128 + C41552 * C122 + C41547 * C129) *
                         C95) *
                        C92157 * C57967 +
                    ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                      C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                         C104 +
                     (C41550 * C1397 + C92360 * C1413 + C41551 * C1396 +
                      C92350 * C1412 + C41552 * C1395 + C41547 * C1411) *
                         C93 -
                     (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                      C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                         C105 -
                     (C41552 * C1394 + C41547 * C1410 + C41551 * C1395 +
                      C92350 * C1411 + C41550 * C1396 + C92360 * C1412) *
                         C94 +
                     (C41550 * C1387 + C92360 * C1399 + C41551 * C1386 +
                      C92350 * C1398 + C41552 * C2711 + C41547 * C2712) *
                         C106 +
                     (C41550 * C1395 + C92360 * C1411 + C41551 * C1394 +
                      C92350 * C1410 + C41552 * C2713 + C41547 * C2714) *
                         C95) *
                        C92157 * C92195) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C801 +
                      (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                       C92350 * C126 + C41552 * C119 + C41547 * C127) *
                          C92084) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C801 +
                      (C59419 + C59420 + C59421) * C92084) *
                         C92157 * C92195) *
                        C1383 -
                    (((C59422 + C59423 + C59424) * C92084 +
                      (C59425 + C59426 + C59427) * C801) *
                         C92157 * C92195 +
                     ((C59421 + C59420 + C59419) * C92084 +
                      (C59418 + C59417 + C59416) * C801) *
                         C92157 * C57967) *
                        C1384 +
                    (((C59427 + C59426 + C59425) * C801 +
                      (C59424 + C59423 + C59422) * C92084) *
                         C92157 * C57967 +
                     ((C41550 * C10808 + C92360 * C10811 + C41551 * C10809 +
                       C92350 * C10812 + C41552 * C10810 + C41547 * C10813) *
                          C801 +
                      (C41550 * C10814 + C92360 * C10817 + C41551 * C10815 +
                       C92350 * C10818 + C41552 * C10816 + C41547 * C10819) *
                          C92084) *
                         C92157 * C92195) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eexy[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C884 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C798 -
                     (C42332 + C42331 + C42330) * C885 -
                     (C42428 + C42429 + C42430) * C799 +
                     (C42341 + C42340 + C42339) * C886 +
                     (C42431 + C42432 + C42433) * C800) *
                        C92157 * C57967 +
                    ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                      C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                         C884 +
                     (C41550 * C1471 + C92360 * C1479 + C41551 * C1470 +
                      C92350 * C1478 + C41552 * C1469 + C41547 * C1477) *
                         C798 -
                     (C45645 + C45646 + C45647) * C885 -
                     (C45754 + C45753 + C45752) * C799 +
                     (C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                      C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                         C886 +
                     (C41550 * C8540 + C92360 * C8543 + C41551 * C8541 +
                      C92350 * C8544 + C41552 * C8542 + C41547 * C8545) *
                         C800) *
                        C92157 * C92195) *
                   C92084 * C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C181 +
                      (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                       C92350 * C189 + C41552 * C184 + C41547 * C190) *
                          C92105) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C181 +
                      (C41550 * C1471 + C92360 * C1479 + C41551 * C1470 +
                       C92350 * C1478 + C41552 * C1469 + C41547 * C1477) *
                          C92105) *
                         C92157 * C92195) *
                        C93 -
                    (((C41552 * C1468 + C41547 * C1476 + C41551 * C1469 +
                       C92350 * C1477 + C41550 * C1470 + C92360 * C1478) *
                          C92105 +
                      (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                       C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                          C181) *
                         C92157 * C92195 +
                     ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                       C92350 * C190 + C41550 * C183 + C92360 * C189) *
                          C92105 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C181) *
                         C92157 * C57967) *
                        C94 +
                    (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                       C92350 * C116 + C41552 * C111 + C41547 * C121) *
                          C181 +
                      (C41550 * C184 + C92360 * C190 + C41551 * C185 +
                       C92350 * C191 + C41552 * C186 + C41547 * C192) *
                          C92105) *
                         C92157 * C57967 +
                     ((C41550 * C1387 + C92360 * C1399 + C41551 * C1386 +
                       C92350 * C1398 + C41552 * C2711 + C41547 * C2712) *
                          C181 +
                      (C41550 * C1469 + C92360 * C1477 + C41551 * C1468 +
                       C92350 * C1476 + C41552 * C2781 + C41547 * C2782) *
                          C92105) *
                         C92157 * C92195) *
                        C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C181 +
                      (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                       C92350 * C189 + C41552 * C184 + C41547 * C190) *
                          C92105) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C181 +
                      (C59514 + C59515 + C59516) * C92105) *
                         C92157 * C92195) *
                        C92084 * C1383 -
                    (((C59517 + C59518 + C59519) * C92105 +
                      (C59425 + C59426 + C59427) * C181) *
                         C92157 * C92195 +
                     ((C59516 + C59515 + C59514) * C92105 +
                      (C59418 + C59417 + C59416) * C181) *
                         C92157 * C57967) *
                        C92084 * C1384 +
                    (((C59427 + C59426 + C59425) * C181 +
                      (C59519 + C59518 + C59517) * C92105) *
                         C92157 * C57967 +
                     ((C41550 * C10808 + C92360 * C10811 + C41551 * C10809 +
                       C92350 * C10812 + C41552 * C10810 + C41547 * C10813) *
                          C181 +
                      (C41550 * C10930 + C92360 * C10933 + C41551 * C10931 +
                       C92350 * C10934 + C41552 * C10932 + C41547 * C10935) *
                          C92105) *
                         C92157 * C92195) *
                        C92084 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C244 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C92116) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C244 +
                      (C41550 * C1540 + C92360 * C1548 + C41551 * C1539 +
                       C92350 * C1547 + C41552 * C1538 + C41547 * C1546) *
                          C92116) *
                         C92157 * C92195) *
                        C798 -
                    (((C45859 + C45860 + C45861) * C92116 +
                      (C45645 + C45646 + C45647) * C244) *
                         C92157 * C92195 +
                     ((C42522 + C42521 + C42520) * C92116 +
                      (C42332 + C42331 + C42330) * C244) *
                         C92157 * C57967) *
                        C799 +
                    (((C42341 + C42340 + C42339) * C244 +
                      (C42525 + C42524 + C42523) * C92116) *
                         C92157 * C57967 +
                     ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                       C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                          C244 +
                      (C41550 * C8653 + C92360 * C8656 + C41551 * C8654 +
                       C92350 * C8657 + C41552 * C8655 + C41547 * C8658) *
                          C92116) *
                         C92157 * C92195) *
                        C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C244 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C92116) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C244 +
                      (C41550 * C1540 + C92360 * C1548 + C41551 * C1539 +
                       C92350 * C1547 + C41552 * C1538 + C41547 * C1546) *
                          C92116) *
                         C92157 * C92195) *
                        C92105 * C93 -
                    (((C41552 * C1537 + C41547 * C1545 + C41551 * C1538 +
                       C92350 * C1546 + C41550 * C1539 + C92360 * C1547) *
                          C92116 +
                      (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                       C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                          C244) *
                         C92157 * C92195 +
                     ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                       C92350 * C253 + C41550 * C246 + C92360 * C252) *
                          C92116 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C244) *
                         C92157 * C57967) *
                        C92105 * C94 +
                    (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                       C92350 * C116 + C41552 * C111 + C41547 * C121) *
                          C244 +
                      (C41550 * C247 + C92360 * C253 + C41551 * C248 +
                       C92350 * C254 + C41552 * C249 + C41547 * C255) *
                          C92116) *
                         C92157 * C57967 +
                     ((C41550 * C1387 + C92360 * C1399 + C41551 * C1386 +
                       C92350 * C1398 + C41552 * C2711 + C41547 * C2712) *
                          C244 +
                      (C41550 * C1538 + C92360 * C1546 + C41551 * C1537 +
                       C92350 * C1545 + C41552 * C2851 + C41547 * C2852) *
                          C92116) *
                         C92157 * C92195) *
                        C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C1534 +
                     (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                      C92350 * C252 + C41552 * C247 + C41547 * C253) *
                         C1383 -
                     (C59418 + C59417 + C59416) * C1535 -
                     (C59606 + C59607 + C59608) * C1384 +
                     (C59427 + C59426 + C59425) * C1536 +
                     (C59609 + C59610 + C59611) * C1385) *
                        C92157 * C57967 +
                    ((C59416 + C59417 + C59418) * C1534 +
                     (C59608 + C59607 + C59606) * C1383 -
                     (C59425 + C59426 + C59427) * C1535 -
                     (C59611 + C59610 + C59609) * C1384 +
                     (C41550 * C10808 + C92360 * C10811 + C41551 * C10809 +
                      C92350 * C10812 + C41552 * C10810 + C41547 * C10813) *
                         C1536 +
                     (C41550 * C11028 + C92360 * C11031 + C41551 * C11029 +
                      C92350 * C11032 + C41552 * C11030 + C41547 * C11033) *
                         C1385) *
                        C92157 * C92195) *
                   C92105 * C92084) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C57967 +
            (C11161 + C11162) * C92195) *
               C92360 +
           ((C337 * C801 + C338 * C92084) * C57967 +
            (C11137 + C11138) * C92195) *
               C92350 +
           ((C339 * C801 + C340 * C92084) * C57967 +
            (C11139 + C11140) * C92195) *
               C41547) *
              C92116 * C798 -
          (((C13943 + C13942) * C92195 +
            (C2215 * C92084 + C2214 * C801) * C57967) *
               C41547 +
           ((C13941 + C13940) * C92195 +
            (C2213 * C92084 + C2212 * C801) * C57967) *
               C92350 +
           ((C13947 + C13946) * C92195 +
            ((C307 * C813 + C92157 * C1030) * C92084 +
             (C307 * C805 + C92157 * C1022) * C801) *
                C57967) *
               C92360) *
              C92116 * C799 +
          ((((C307 * C806 + C92157 * C1023) * C801 +
             (C307 * C822 + C92157 * C1031) * C92084) *
                C57967 +
            ((C307 * C8412 + C92157 * C8766) * C801 +
             (C307 * C8418 + C92157 * C8769) * C92084) *
                C92195) *
               C92360 +
           (((C307 * C807 + C92157 * C1024) * C801 +
             (C307 * C823 + C92157 * C1032) * C92084) *
                C57967 +
            ((C307 * C8413 + C92157 * C8767) * C801 +
             (C307 * C8419 + C92157 * C8770) * C92084) *
                C92195) *
               C92350 +
           (((C307 * C808 + C92157 * C1025) * C801 +
             (C307 * C824 + C92157 * C1033) * C92084) *
                C57967 +
            ((C307 * C8414 + C92157 * C8768) * C801 +
             (C307 * C8420 + C92157 * C8771) * C92084) *
                C92195) *
               C41547) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C104 +
            (C307 * C117 + C92157 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C57967 +
           (C11153 * C104 + C11154 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92195) *
              C92360 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C57967 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92195) *
              C92350 +
          ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
            C344 * C95) *
               C57967 +
           (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
            (C307 * C2711 + C92157 * C2919) * C106 +
            (C307 * C2713 + C92157 * C2920) * C95) *
               C92195) *
              C41547) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C57967 +
            (C11161 + C11162) * C92195) *
               C92360 +
           ((C337 * C801 + C338 * C92084) * C57967 +
            (C11137 + C11138) * C92195) *
               C92350 +
           ((C339 * C801 + C340 * C92084) * C57967 +
            (C11139 + C11140) * C92195) *
               C41547) *
              C1383 -
          (((C11163 + C11164) * C92195 + (C11140 + C11139) * C57967) * C41547 +
           ((C11165 + C11166) * C92195 + (C11138 + C11137) * C57967) * C92350 +
           ((C11167 + C11168) * C92195 + (C11162 + C11161) * C57967) * C92360) *
              C1384 +
          ((C29938 * C57967 + C39372 * C92195) * C92360 +
           (C29939 * C57967 + (C29953 + C29952) * C92195) * C92350 +
           ((C11164 + C11163) * C57967 +
            ((C307 * C10810 + C92157 * C11128) * C801 +
             (C307 * C10816 + C92157 * C11131) * C92084) *
                C92195) *
               C41547) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C57967 +
           (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92195) *
              C92360 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C57967 +
           (C2934 * C884 + C3016 * C798 - C11989 * C885 - C12101 * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92195) *
              C92350 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92157 * C1025) * C886 +
            (C307 * C893 + C92157 * C1090) * C800) *
               C57967 +
           (C2936 * C884 + C3017 * C798 - C11991 * C885 - C12102 * C799 +
            (C307 * C8414 + C92157 * C8768) * C886 +
            (C307 * C8542 + C92157 * C8872) * C800) *
               C92195) *
              C41547) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C57967 +
            (C11246 + C11262) * C92195) *
               C92360 +
           ((C401 + C417) * C57967 + C13093 * C92195) * C92350 +
           C58268 * C41547) *
              C93 -
          (((C3021 + C3013) * C92195 + (C419 + C407) * C57967) * C41547 +
           (C13094 * C92195 + (C418 + C404) * C57967) * C92350 +
           (C13095 * C92195 + (C417 + C401) * C57967) * C92360) *
              C94 +
          (C58268 * C92360 +
           (C422 * C57967 + (C3013 + C3021) * C92195) * C92350 +
           ((C412 + C420) * C57967 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92195) *
               C41547) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C57967 +
            (C11246 + C11262) * C92195) *
               C92360 +
           ((C401 + C417) * C57967 + C13093 * C92195) * C92350 +
           C58268 * C41547) *
              C92084 * C1383 -
          (((C11263 + C11251) * C92195 + C13094 * C57967) * C41547 +
           (C31838 * C92195 + C13095 * C57967) * C92350 +
           ((C11265 + C11257) * C92195 + (C11262 + C11246) * C57967) * C92360) *
              C92084 * C1384 +
          ((C30032 * C57967 + C39432 * C92195) * C92360 +
           (C30033 * C57967 + (C30036 + C30042) * C92195) * C92350 +
           ((C11251 + C11263) * C57967 +
            ((C307 * C10810 + C92157 * C11128) * C181 +
             (C307 * C10932 + C92157 * C11244) * C92105) *
                C92195) *
               C41547) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C57967 +
            (C11153 * C244 + C11351 * C92116) * C92195) *
               C92360 +
           ((C481 + C497) * C57967 + (C9753 + C9754) * C92195) * C92350 +
           C58345 * C41547) *
              C798 -
          (((C12211 + C12205) * C92195 + (C2386 + C2378) * C57967) * C41547 +
           ((C12212 + C12208) * C92195 + (C2387 + C2381) * C57967) * C92350 +
           ((C14153 * C92116 + C13944 * C244) * C92195 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C57967) *
               C92360) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C57967 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92195) *
               C92360 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C57967 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92195) *
               C92350 +
           (((C307 * C808 + C92157 * C1025) * C244 +
             (C307 * C959 + C92157 * C1149) * C92116) *
                C57967 +
            ((C307 * C8414 + C92157 * C8768) * C244 +
             (C307 * C8655 + C92157 * C8973) * C92116) *
                C92195) *
               C41547) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C57967 +
            (C11153 * C244 + C11351 * C92116) * C92195) *
               C92360 +
           ((C481 + C497) * C57967 + (C9753 + C9754) * C92195) * C92350 +
           C58345 * C41547) *
              C92105 * C93 -
          (((C9758 + C9759) * C92195 + (C499 + C487) * C57967) * C41547 +
           ((C9757 + C9756) * C92195 + (C498 + C484) * C57967) * C92350 +
           ((C9754 + C9753) * C92195 + (C497 + C481) * C57967) * C92360) *
              C92105 * C94 +
          (C58345 * C92360 +
           (C502 * C57967 + (C9759 + C9758) * C92195) * C92350 +
           ((C492 + C500) * C57967 +
            ((C307 * C2711 + C92157 * C2919) * C244 +
             (C307 * C2851 + C92157 * C3087) * C92116) *
                C92195) *
               C41547) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1534 +
            (C307 * C245 + C92157 * C474) * C1383 - C11153 * C1535 -
            C11351 * C1384 + C11160 * C1536 + C11352 * C1385) *
               C57967 +
           (C11153 * C1534 + C11351 * C1383 - C11160 * C1535 - C11352 * C1384 +
            C29951 * C1536 + C30124 * C1385) *
               C92195) *
              C92360 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C11158 * C1536 + C11353 * C1385) *
               C57967 +
           (C2934 * C1534 + C3104 * C1383 - C11158 * C1535 - C11353 * C1384 +
            C29949 * C1536 + C30125 * C1385) *
               C92195) *
              C92350 +
          ((C339 * C1534 + C494 * C1383 - C2936 * C1535 - C3105 * C1384 +
            C11156 * C1536 + C11354 * C1385) *
               C57967 +
           (C2936 * C1534 + C3105 * C1383 - C11156 * C1535 - C11354 * C1384 +
            (C307 * C10810 + C92157 * C11128) * C1536 +
            (C307 * C11030 + C92157 * C11341) * C1385) *
               C92195) *
              C41547) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C801 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C92084) *
               C92360 +
           ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92350 +
           (C58458 * C801 + C58459 * C92084) * C41547) *
              C92157 * C92116 * C798 -
          (((C58420 * C3441 + C92195 * C3881 + C58419 * C811 + C57967 * C1210) *
                C92084 +
            (C58420 * C3433 + C92195 * C3877 + C58419 * C803 + C57967 * C1202) *
                C801) *
               C41547 +
           ((C58420 * C3440 + C92195 * C3880 + C58419 * C812 + C57967 * C1211) *
                C92084 +
            (C58420 * C3432 + C92195 * C3876 + C58419 * C804 + C57967 * C1203) *
                C801) *
               C92350 +
           ((C58420 * C3439 + C92195 * C3879 + C58419 * C813 + C57967 * C1212) *
                C92084 +
            (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
                C801) *
               C92360) *
              C92157 * C92116 * C799 +
          (((C58419 * C806 + C57967 * C1205 + C58420 * C8412 + C92195 * C9072) *
                C801 +
            (C58419 * C822 + C57967 * C1213 + C58420 * C8418 + C92195 * C9075) *
                C92084) *
               C92360 +
           ((C58419 * C807 + C57967 * C1206 + C58420 * C8413 + C92195 * C9073) *
                C801 +
            (C58419 * C823 + C57967 * C1214 + C58420 * C8419 + C92195 * C9076) *
                C92084) *
               C92350 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C801 +
            (C58419 * C824 + C57967 * C1215 + C58420 * C8420 + C92195 * C9077) *
                C92084) *
               C41547) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C104 +
           (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
               C93 -
           (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
           C58459 * C95) *
              C92360 +
          ((C58447 + C58446) * C104 + (C58449 + C58448) * C93 -
           (C58451 + C58450) * C105 - (C58453 + C58452) * C94 +
           (C58454 + C58455) * C106 + (C58456 + C58457) * C95) *
              C92350 +
          (C58458 * C104 + C58459 * C93 - (C58455 + C58454) * C105 -
           (C58457 + C58456) * C94 +
           (C58419 * C111 + C57967 * C559 + C58420 * C2711 + C92195 * C3175) *
               C106 +
           (C58419 * C122 + C57967 * C565 + C58420 * C2713 + C92195 * C3176) *
               C95) *
              C41547) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C801 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C92084) *
               C92360 +
           ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92350 +
           (C58458 * C801 + C58459 * C92084) * C41547) *
              C92157 * C1383 -
          (((C58420 * C1408 + C92195 * C1799 + C58419 * C1395 +
             C57967 * C1794) *
                C92084 +
            (C58420 * C1392 + C92195 * C1791 + C58419 * C1387 +
             C57967 * C1786) *
                C801) *
               C41547 +
           ((C58420 * C1407 + C92195 * C1798 + C58419 * C1396 +
             C57967 * C1795) *
                C92084 +
            (C58420 * C1391 + C92195 * C1790 + C58419 * C1388 +
             C57967 * C1787) *
                C801) *
               C92350 +
           ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
             C57967 * C1796) *
                C92084 +
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C801) *
               C92360) *
              C92157 * C1384 +
          (((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
             C92195 * C11428) *
                C801 +
            (C58419 * C1406 + C57967 * C1797 + C58420 * C10814 +
             C92195 * C11431) *
                C92084) *
               C92360 +
           ((C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
             C92195 * C11429) *
                C801 +
            (C58419 * C1407 + C57967 * C1798 + C58420 * C10815 +
             C92195 * C11432) *
                C92084) *
               C92350 +
           ((C58419 * C1392 + C57967 * C1791 + C58420 * C10810 +
             C92195 * C11430) *
                C801 +
            (C58419 * C1408 + C57967 * C1799 + C58420 * C10816 +
             C92195 * C11433) *
                C92084) *
               C41547) *
              C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C884 +
           (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
               C798 -
           (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
               C885 -
           (C58420 * C3513 + C92195 * C3949 + C58419 * C890 + C57967 * C1267) *
               C799 +
           (C58419 * C806 + C57967 * C1205 + C58420 * C8412 + C92195 * C9072) *
               C886 +
           (C58419 * C891 + C57967 * C1268 + C58420 * C8540 + C92195 * C9188) *
               C800) *
              C92360 +
          ((C58447 + C58446) * C884 + (C58547 + C58548) * C798 -
           (C58420 * C3432 + C92195 * C3876 + C58419 * C804 + C57967 * C1203) *
               C885 -
           (C58420 * C3514 + C92195 * C3950 + C58419 * C889 + C57967 * C1269) *
               C799 +
           (C58419 * C807 + C57967 * C1206 + C58420 * C8413 + C92195 * C9073) *
               C886 +
           (C58419 * C892 + C57967 * C1270 + C58420 * C8541 + C92195 * C9189) *
               C800) *
              C92350 +
          (C58458 * C884 + C58553 * C798 -
           (C58420 * C3433 + C92195 * C3877 + C58419 * C803 + C57967 * C1202) *
               C885 -
           (C58420 * C3515 + C92195 * C3951 + C58419 * C888 + C57967 * C1271) *
               C799 +
           (C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
               C886 +
           (C58419 * C893 + C57967 * C1272 + C58420 * C8542 + C92195 * C9190) *
               C800) *
              C41547) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C181 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C92105) *
               C92360 +
           ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92350 +
           C58555 * C41547) *
              C92157 * C93 -
          (((C58551 + C58552) * C92105 + (C58455 + C58454) * C181) * C41547 +
           ((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92350 +
           ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92360) *
              C92157 * C94 +
          (C58555 * C92360 +
           ((C58454 + C58455) * C181 + (C58552 + C58551) * C92105) * C92350 +
           ((C58419 * C111 + C57967 * C559 + C58420 * C2711 + C92195 * C3175) *
                C181 +
            (C58419 * C186 + C57967 * C645 + C58420 * C2781 + C92195 * C3261) *
                C92105) *
               C41547) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C181 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C92105) *
               C92360 +
           ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92350 +
           C58555 * C41547) *
              C92157 * C92084 * C1383 -
          (((C58420 * C1474 + C92195 * C1857 + C58419 * C1469 +
             C57967 * C1852) *
                C92105 +
            (C58420 * C1392 + C92195 * C1791 + C58419 * C1387 +
             C57967 * C1786) *
                C181) *
               C41547 +
           ((C58420 * C1473 + C92195 * C1856 + C58419 * C1470 +
             C57967 * C1853) *
                C92105 +
            (C58420 * C1391 + C92195 * C1790 + C58419 * C1388 +
             C57967 * C1787) *
                C181) *
               C92350 +
           ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
             C57967 * C1854) *
                C92105 +
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C181) *
               C92360) *
              C92157 * C92084 * C1384 +
          (((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
             C92195 * C11428) *
                C181 +
            (C58419 * C1472 + C57967 * C1855 + C58420 * C10930 +
             C92195 * C11508) *
                C92105) *
               C92360 +
           ((C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
             C92195 * C11429) *
                C181 +
            (C58419 * C1473 + C57967 * C1856 + C58420 * C10931 +
             C92195 * C11509) *
                C92105) *
               C92350 +
           ((C58419 * C1392 + C57967 * C1791 + C58420 * C10810 +
             C92195 * C11430) *
                C181 +
            (C58419 * C1474 + C57967 * C1857 + C58420 * C10932 +
             C92195 * C11510) *
                C92105) *
               C41547) *
              C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92360 +
           ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92350 +
           C58651 * C41547) *
              C92157 * C798 -
          (((C58420 * C3589 + C92195 * C4021 + C58419 * C954 + C57967 * C1326) *
                C92116 +
            (C58420 * C3433 + C92195 * C3877 + C58419 * C803 + C57967 * C1202) *
                C244) *
               C41547 +
           ((C58420 * C3588 + C92195 * C4020 + C58419 * C955 + C57967 * C1327) *
                C92116 +
            (C58420 * C3432 + C92195 * C3876 + C58419 * C804 + C57967 * C1203) *
                C244) *
               C92350 +
           ((C58420 * C3587 + C92195 * C4019 + C58419 * C956 + C57967 * C1328) *
                C92116 +
            (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
                C244) *
               C92360) *
              C92157 * C799 +
          (((C58419 * C806 + C57967 * C1205 + C58420 * C8412 + C92195 * C9072) *
                C244 +
            (C58419 * C957 + C57967 * C1329 + C58420 * C8653 + C92195 * C9292) *
                C92116) *
               C92360 +
           ((C58419 * C807 + C57967 * C1206 + C58420 * C8413 + C92195 * C9073) *
                C244 +
            (C58419 * C958 + C57967 * C1330 + C58420 * C8654 + C92195 * C9293) *
                C92116) *
               C92350 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C244 +
            (C58419 * C959 + C57967 * C1331 + C58420 * C8655 + C92195 * C9294) *
                C92116) *
               C41547) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92360 +
           ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92350 +
           C58651 * C41547) *
              C92157 * C92105 * C93 -
          (((C58647 + C58648) * C92116 + (C58455 + C58454) * C244) * C41547 +
           ((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92350 +
           ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92360) *
              C92157 * C92105 * C94 +
          (C58651 * C92360 +
           ((C58454 + C58455) * C244 + (C58648 + C58647) * C92116) * C92350 +
           ((C58419 * C111 + C57967 * C559 + C58420 * C2711 + C92195 * C3175) *
                C244 +
            (C58419 * C249 + C57967 * C723 + C58420 * C2851 + C92195 * C3343) *
                C92116) *
               C41547) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C1534 +
           (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
               C1383 -
           (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 + C57967 * C1788) *
               C1535 -
           (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 + C57967 * C1909) *
               C1384 +
           (C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
            C92195 * C11428) *
               C1536 +
           (C58419 * C1541 + C57967 * C1910 + C58420 * C11028 +
            C92195 * C11585) *
               C1385) *
              C92360 +
          ((C58447 + C58446) * C1534 + (C58643 + C58644) * C1383 -
           (C58420 * C1391 + C92195 * C1790 + C58419 * C1388 + C57967 * C1787) *
               C1535 -
           (C58420 * C1542 + C92195 * C1912 + C58419 * C1539 + C57967 * C1911) *
               C1384 +
           (C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
            C92195 * C11429) *
               C1536 +
           (C58419 * C1542 + C57967 * C1912 + C58420 * C11029 +
            C92195 * C11586) *
               C1385) *
              C92350 +
          (C58458 * C1534 + C58649 * C1383 -
           (C58420 * C1392 + C92195 * C1791 + C58419 * C1387 + C57967 * C1786) *
               C1535 -
           (C58420 * C1543 + C92195 * C1914 + C58419 * C1538 + C57967 * C1913) *
               C1384 +
           (C58419 * C1392 + C57967 * C1791 + C58420 * C10810 +
            C92195 * C11430) *
               C1536 +
           (C58419 * C1543 + C57967 * C1914 + C58420 * C11030 +
            C92195 * C11587) *
               C1385) *
              C41547) *
         C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C1987 +
                      (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                       C92350 * C126 + C41552 * C119 + C41547 * C127) *
                          C1983 -
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C1988 -
                      (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                       C92350 * C127 + C41550 * C118 + C92360 * C126) *
                          C1984) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C1987 +
                      (C59419 + C59420 + C59421) * C1983 -
                      (C61096 + C61097 + C61098) * C1988 -
                      (C61099 + C61100 + C61101) * C1984) *
                         C92157 * C92195) *
                        C2709 +
                    (((C61098 + C61097 + C61096) * C1988 -
                      ((C59421 + C59420 + C59419) * C1983 +
                       (C59418 + C59417 + C59416) * C1987) +
                      (C61101 + C61100 + C61099) * C1984) *
                         C92157 * C57967 +
                     ((C41550 * C1391 + C92360 * C1403 + C41551 * C1392 +
                       C92350 * C1404 + C41552 * C1393 + C41547 * C1405) *
                          C1988 -
                      ((C59422 + C59423 + C59424) * C1983 +
                       (C59425 + C59426 + C59427) * C1987) +
                      (C41550 * C1407 + C92360 * C1415 + C41551 * C1408 +
                       C92350 * C1416 + C41552 * C1409 + C41547 * C1417) *
                          C1984) *
                         C92157 * C92195) *
                        C2710) *
                   C92105) /
                  (p * q * std::sqrt(p + q));
    d2eexy[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                        C92350 * C114 + C41552 * C109 + C41547 * C115) *
                           C181 +
                       (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                        C92350 * C189 + C41552 * C184 + C41547 * C190) *
                           C92105) *
                          C92157 * C57967 +
                      ((C59416 + C59417 + C59418) * C181 +
                       (C59514 + C59515 + C59516) * C92105) *
                          C92157 * C92195) *
                         C1983 -
                     (((C61206 + C61207 + C61208) * C92105 +
                       (C61096 + C61097 + C61098) * C181) *
                          C92157 * C92195 +
                      ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                        C92350 * C190 + C41550 * C183 + C92360 * C189) *
                           C92105 +
                       (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                        C92350 * C115 + C41550 * C108 + C92360 * C114) *
                           C181) *
                          C92157 * C57967) *
                         C1984) *
                        C2709 +
                    ((((C61098 + C61097 + C61096) * C181 +
                       (C61208 + C61207 + C61206) * C92105) *
                          C92157 * C57967 +
                      ((C41550 * C1391 + C92360 * C1403 + C41551 * C1392 +
                        C92350 * C1404 + C41552 * C1393 + C41547 * C1405) *
                           C181 +
                       (C41550 * C1473 + C92360 * C1481 + C41551 * C1474 +
                        C92350 * C1482 + C41552 * C1475 + C41547 * C1483) *
                           C92105) *
                          C92157 * C92195) *
                         C1984 -
                     (((C59517 + C59518 + C59519) * C92105 +
                       (C59425 + C59426 + C59427) * C181) *
                          C92157 * C92195 +
                      ((C59516 + C59515 + C59514) * C92105 +
                       (C59418 + C59417 + C59416) * C181) *
                          C92157 * C57967) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C2849 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C2709 -
                      (C59418 + C59417 + C59416) * C2850 -
                      (C59606 + C59607 + C59608) * C2710) *
                         C92157 * C57967 +
                     ((C59416 + C59417 + C59418) * C2849 +
                      (C59608 + C59607 + C59606) * C2709 -
                      (C59425 + C59426 + C59427) * C2850 -
                      (C59611 + C59610 + C59609) * C2710) *
                         C92157 * C92195) *
                        C92105 * C1983 +
                    (((C61098 + C61097 + C61096) * C2850 -
                      ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                        C92350 * C253 + C41550 * C246 + C92360 * C252) *
                           C2709 +
                       (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                        C92350 * C115 + C41550 * C108 + C92360 * C114) *
                           C2849) +
                      (C61313 + C61314 + C61315) * C2710) *
                         C92157 * C57967 +
                     ((C41550 * C1391 + C92360 * C1403 + C41551 * C1392 +
                       C92350 * C1404 + C41552 * C1393 + C41547 * C1405) *
                          C2850 -
                      ((C61315 + C61314 + C61313) * C2709 +
                       (C61096 + C61097 + C61098) * C2849) +
                      (C41550 * C1542 + C92360 * C1550 + C41551 * C1543 +
                       C92350 * C1551 + C41552 * C1544 + C41547 * C1552) *
                          C2710) *
                         C92157 * C92195) *
                        C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C57967 +
            (C12983 + C12984 - C12985 - C12986) * C92195) *
               C92360 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C57967 +
            (C12987 + C12988 - C12989 - C12990) * C92195) *
               C92350 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C57967 +
            (C12991 + C12992 - C12993 - C12994) * C92195) *
               C41547) *
              C2709 +
          (((C12985 - (C12984 + C12983) + C12986) * C57967 +
            (C31734 - (C31733 + C31732) + C31735) * C92195) *
               C92360 +
           ((C12989 - (C12988 + C12987) + C12990) * C57967 +
            (C31738 - (C31737 + C31736) + C31739) * C92195) *
               C92350 +
           ((C12993 - (C12992 + C12991) + C12994) * C57967 +
            ((C307 * C1393 + C92157 * C1610) * C1988 -
             (C11155 * C1983 + C11156 * C1987) +
             (C307 * C1409 + C92157 * C1618) * C1984) *
                C92195) *
               C41547) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C181 +
              (C307 * C182 + C92157 * C394) * C92105) *
                 C57967 +
             (C11246 + C11262) * C92195) *
                C92360 +
            ((C401 + C417) * C57967 + C13093 * C92195) * C92350 +
            C58268 * C41547) *
               C1983 -
           (((C3021 + C3013) * C92195 + (C419 + C407) * C57967) * C41547 +
            (C13094 * C92195 + (C418 + C404) * C57967) * C92350 +
            (C13095 * C92195 + (C417 + C401) * C57967) * C92360) *
               C1984) *
              C2709 +
          (((C13093 * C57967 + C30033 * C92195) * C92360 +
            (C9676 * C57967 + (C11251 + C11263) * C92195) * C92350 +
            ((C3013 + C3021) * C57967 +
             ((C307 * C1393 + C92157 * C1610) * C181 +
              (C307 * C1475 + C92157 * C1676) * C92105) *
                 C92195) *
                C41547) *
               C1984 -
           (((C11263 + C11251) * C92195 + C13094 * C57967) * C41547 +
            (C31838 * C92195 + C13095 * C57967) * C92350 +
            ((C11265 + C11257) * C92195 + (C11262 + C11246) * C57967) *
                C92360) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C57967 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C92195) *
                         C92360 +
                     ((C3089 + C3090 - C3091 - C3107) * C57967 +
                      (C13194 + C13195 - C13196 - C13197) * C92195) *
                         C92350 +
                     ((C3094 + C3095 - C3096 - C3108) * C57967 +
                      (C13198 + C13199 - C13200 - C13201) * C92195) *
                         C41547) *
                        C92105 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C57967 +
                      (C13196 - (C13195 + C13194) + C13197) * C92195) *
                         C92360 +
                     ((C3096 - (C3095 + C3094) + C3108) * C57967 +
                      (C13200 - (C13199 + C13198) + C13201) * C92195) *
                         C92350 +
                     ((C3101 - (C3100 + C3099) + C3109) * C57967 +
                      ((C307 * C1393 + C92157 * C1610) * C2850 -
                       (C3106 * C2709 + C2938 * C2849) +
                       (C307 * C1544 + C92157 * C1734) * C2710) *
                          C92195) *
                         C41547) *
                        C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C1987 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C1983 -
            (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
               C92360 +
           ((C58447 + C58446) * C1987 + (C58449 + C58448) * C1983 -
            (C58451 + C58450) * C1988 - (C58453 + C58452) * C1984) *
               C92350 +
           (C58458 * C1987 + C58459 * C1983 - (C58455 + C58454) * C1988 -
            (C58457 + C58456) * C1984) *
               C41547) *
              C92157 * C2709 +
          (((C61724 + C61725) * C1988 -
            ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
              C57967 * C1796) *
                 C1983 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C1987) +
            (C61726 + C61727) * C1984) *
               C92360 +
           ((C61728 + C61729) * C1988 -
            ((C61727 + C61726) * C1983 + (C61725 + C61724) * C1987) +
            (C61730 + C61731) * C1984) *
               C92350 +
           ((C58419 * C1386 + C57967 * C1785 + C58420 * C1393 +
             C92195 * C1792) *
                C1988 -
            ((C61731 + C61730) * C1983 + (C61729 + C61728) * C1987) +
            (C58419 * C1394 + C57967 * C1793 + C58420 * C1409 +
             C92195 * C1800) *
                C1984) *
               C41547) *
              C92157 * C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C92360 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92350 +
            C58555 * C41547) *
               C92157 * C1983 -
           (((C58551 + C58552) * C92105 + (C58455 + C58454) * C181) * C41547 +
            ((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92350 +
            ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92360) *
               C92157 * C1984) *
              C2709 +
          ((((C61724 + C61725) * C181 + (C61838 + C61839) * C92105) * C92360 +
            ((C61728 + C61729) * C181 + (C61840 + C61841) * C92105) * C92350 +
            ((C58419 * C1386 + C57967 * C1785 + C58420 * C1393 +
              C92195 * C1792) *
                 C181 +
             (C58419 * C1468 + C57967 * C1851 + C58420 * C1475 +
              C92195 * C1858) *
                 C92105) *
                C41547) *
               C92157 * C1984 -
           (((C61841 + C61840) * C92105 + (C61729 + C61728) * C181) * C41547 +
            ((C61839 + C61838) * C92105 + (C61725 + C61724) * C181) * C92350 +
            ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
              C57967 * C1854) *
                 C92105 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C181) *
                C92360) *
               C92157 * C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C2849 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C2709 -
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C2850 -
            (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
             C57967 * C1909) *
                C2710) *
               C92360 +
           ((C58447 + C58446) * C2849 + (C58643 + C58644) * C2709 -
            (C61725 + C61724) * C2850 - (C61948 + C61949) * C2710) *
               C92350 +
           (C58458 * C2849 + C58649 * C2709 - (C61729 + C61728) * C2850 -
            (C61950 + C61951) * C2710) *
               C41547) *
              C92157 * C92105 * C1983 +
          (((C61724 + C61725) * C2850 -
            ((C58644 + C58643) * C2709 + (C58446 + C58447) * C2849) +
            (C61949 + C61948) * C2710) *
               C92360 +
           ((C61728 + C61729) * C2850 -
            ((C58646 + C58645) * C2709 + (C58451 + C58450) * C2849) +
            (C61951 + C61950) * C2710) *
               C92350 +
           ((C58419 * C1386 + C57967 * C1785 + C58420 * C1393 +
             C92195 * C1792) *
                C2850 -
            ((C58647 + C58648) * C2709 + (C58455 + C58454) * C2849) +
            (C58419 * C1537 + C57967 * C1915 + C58420 * C1544 +
             C92195 * C1916) *
                C2710) *
               C41547) *
              C92157 * C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C104 +
                     (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                      C92350 * C126 + C41552 * C119 + C41547 * C127) *
                         C93 -
                     (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                      C92350 * C115 + C41550 * C108 + C92360 * C114) *
                         C105 -
                     (C41552 * C120 + C41547 * C128 + C41551 * C119 +
                      C92350 * C127 + C41550 * C118 + C92360 * C126) *
                         C94 +
                     (C41550 * C109 + C92360 * C115 + C41551 * C110 +
                      C92350 * C116 + C41552 * C111 + C41547 * C121) *
                         C106 +
                     (C41550 * C119 + C92360 * C127 + C41551 * C120 +
                      C92350 * C128 + C41552 * C122 + C41547 * C129) *
                         C95) *
                        C92157 * C57967 +
                    ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                      C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                         C104 +
                     (C41550 * C1397 + C92360 * C1413 + C41551 * C1396 +
                      C92350 * C1412 + C41552 * C1395 + C41547 * C1411) *
                         C93 -
                     (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                      C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                         C105 -
                     (C41552 * C1394 + C41547 * C1410 + C41551 * C1395 +
                      C92350 * C1411 + C41550 * C1396 + C92360 * C1412) *
                         C94 +
                     (C41550 * C1387 + C92360 * C1399 + C41551 * C1386 +
                      C92350 * C1398 + C41552 * C2711 + C41547 * C2712) *
                         C106 +
                     (C41550 * C1395 + C92360 * C1411 + C41551 * C1394 +
                      C92350 * C1410 + C41552 * C2713 + C41547 * C2714) *
                         C95) *
                        C92157 * C92195) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C801 +
                      (C41550 * C117 + C92360 * C125 + C41551 * C118 +
                       C92350 * C126 + C41552 * C119 + C41547 * C127) *
                          C92084) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C801 +
                      (C41550 * C1397 + C92360 * C1413 + C41551 * C1396 +
                       C92350 * C1412 + C41552 * C1395 + C41547 * C1411) *
                          C92084) *
                         C92157 * C92195) *
                        C92116 * C798 -
                    (((C45642 + C45643 + C45644) * C92084 +
                      (C45645 + C45646 + C45647) * C801) *
                         C92157 * C92195 +
                     ((C42335 + C42334 + C42333) * C92084 +
                      (C42332 + C42331 + C42330) * C801) *
                         C92157 * C57967) *
                        C92116 * C799 +
                    (((C42341 + C42340 + C42339) * C801 +
                      (C42338 + C42337 + C42336) * C92084) *
                         C92157 * C57967 +
                     ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                       C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                          C801 +
                      (C41550 * C8418 + C92360 * C8421 + C41551 * C8419 +
                       C92350 * C8422 + C41552 * C8420 + C41547 * C8423) *
                          C92084) *
                         C92157 * C92195) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C181 +
                      (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                       C92350 * C189 + C41552 * C184 + C41547 * C190) *
                          C92105) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C181 +
                      (C41550 * C1471 + C92360 * C1479 + C41551 * C1470 +
                       C92350 * C1478 + C41552 * C1469 + C41547 * C1477) *
                          C92105) *
                         C92157 * C92195) *
                        C93 -
                    (((C41552 * C1468 + C41547 * C1476 + C41551 * C1469 +
                       C92350 * C1477 + C41550 * C1470 + C92360 * C1478) *
                          C92105 +
                      (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                       C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                          C181) *
                         C92157 * C92195 +
                     ((C41552 * C185 + C41547 * C191 + C41551 * C184 +
                       C92350 * C190 + C41550 * C183 + C92360 * C189) *
                          C92105 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C181) *
                         C92157 * C57967) *
                        C94 +
                    (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                       C92350 * C116 + C41552 * C111 + C41547 * C121) *
                          C181 +
                      (C41550 * C184 + C92360 * C190 + C41551 * C185 +
                       C92350 * C191 + C41552 * C186 + C41547 * C192) *
                          C92105) *
                         C92157 * C57967 +
                     ((C41550 * C1387 + C92360 * C1399 + C41551 * C1386 +
                       C92350 * C1398 + C41552 * C2711 + C41547 * C2712) *
                          C181 +
                      (C41550 * C1469 + C92360 * C1477 + C41551 * C1468 +
                       C92350 * C1476 + C41552 * C2781 + C41547 * C2782) *
                          C92105) *
                         C92157 * C92195) *
                        C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                      C92350 * C114 + C41552 * C109 + C41547 * C115) *
                         C884 +
                     (C41550 * C182 + C92360 * C188 + C41551 * C183 +
                      C92350 * C189 + C41552 * C184 + C41547 * C190) *
                         C798 -
                     (C42332 + C42331 + C42330) * C885 -
                     (C42428 + C42429 + C42430) * C799 +
                     (C42341 + C42340 + C42339) * C886 +
                     (C42431 + C42432 + C42433) * C800) *
                        C92157 * C57967 +
                    ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                      C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                         C884 +
                     (C41550 * C1471 + C92360 * C1479 + C41551 * C1470 +
                      C92350 * C1478 + C41552 * C1469 + C41547 * C1477) *
                         C798 -
                     (C45645 + C45646 + C45647) * C885 -
                     (C45754 + C45753 + C45752) * C799 +
                     (C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                      C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                         C886 +
                     (C41550 * C8540 + C92360 * C8543 + C41551 * C8541 +
                      C92350 * C8544 + C41552 * C8542 + C41547 * C8545) *
                         C800) *
                        C92157 * C92195) *
                   C92084 * C92116) /
                      (p * q * std::sqrt(p + q));
    d2eexz[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C244 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C92116) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C244 +
                      (C41550 * C1540 + C92360 * C1548 + C41551 * C1539 +
                       C92350 * C1547 + C41552 * C1538 + C41547 * C1546) *
                          C92116) *
                         C92157 * C92195) *
                        C92105 * C93 -
                    (((C41552 * C1537 + C41547 * C1545 + C41551 * C1538 +
                       C92350 * C1546 + C41550 * C1539 + C92360 * C1547) *
                          C92116 +
                      (C41552 * C1386 + C41547 * C1398 + C41551 * C1387 +
                       C92350 * C1399 + C41550 * C1388 + C92360 * C1400) *
                          C244) *
                         C92157 * C92195 +
                     ((C41552 * C248 + C41547 * C254 + C41551 * C247 +
                       C92350 * C253 + C41550 * C246 + C92360 * C252) *
                          C92116 +
                      (C41552 * C110 + C41547 * C116 + C41551 * C109 +
                       C92350 * C115 + C41550 * C108 + C92360 * C114) *
                          C244) *
                         C92157 * C57967) *
                        C92105 * C94 +
                    (((C41550 * C109 + C92360 * C115 + C41551 * C110 +
                       C92350 * C116 + C41552 * C111 + C41547 * C121) *
                          C244 +
                      (C41550 * C247 + C92360 * C253 + C41551 * C248 +
                       C92350 * C254 + C41552 * C249 + C41547 * C255) *
                          C92116) *
                         C92157 * C57967 +
                     ((C41550 * C1387 + C92360 * C1399 + C41551 * C1386 +
                       C92350 * C1398 + C41552 * C2711 + C41547 * C2712) *
                          C244 +
                      (C41550 * C1538 + C92360 * C1546 + C41551 * C1537 +
                       C92350 * C1545 + C41552 * C2851 + C41547 * C2852) *
                          C92116) *
                         C92157 * C92195) *
                        C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C41550 * C107 + C92360 * C113 + C41551 * C108 +
                       C92350 * C114 + C41552 * C109 + C41547 * C115) *
                          C244 +
                      (C41550 * C245 + C92360 * C251 + C41551 * C246 +
                       C92350 * C252 + C41552 * C247 + C41547 * C253) *
                          C92116) *
                         C92157 * C57967 +
                     ((C41550 * C1389 + C92360 * C1401 + C41551 * C1388 +
                       C92350 * C1400 + C41552 * C1387 + C41547 * C1399) *
                          C244 +
                      (C41550 * C1540 + C92360 * C1548 + C41551 * C1539 +
                       C92350 * C1547 + C41552 * C1538 + C41547 * C1546) *
                          C92116) *
                         C92157 * C92195) *
                        C798 -
                    (((C45859 + C45860 + C45861) * C92116 +
                      (C45645 + C45646 + C45647) * C244) *
                         C92157 * C92195 +
                     ((C42522 + C42521 + C42520) * C92116 +
                      (C42332 + C42331 + C42330) * C244) *
                         C92157 * C57967) *
                        C799 +
                    (((C42341 + C42340 + C42339) * C244 +
                      (C42525 + C42524 + C42523) * C92116) *
                         C92157 * C57967 +
                     ((C41550 * C8412 + C92360 * C8415 + C41551 * C8413 +
                       C92350 * C8416 + C41552 * C8414 + C41547 * C8417) *
                          C244 +
                      (C41550 * C8653 + C92360 * C8656 + C41551 * C8654 +
                       C92350 * C8657 + C41552 * C8655 + C41547 * C8658) *
                          C92116) *
                         C92157 * C92195) *
                        C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C104 +
                      (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C57967 +
                     (C11153 * C104 + C11154 * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C92195) *
                        C92360 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C57967 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C92195) *
                        C92350 +
                    ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                      C343 * C106 + C344 * C95) *
                         C57967 +
                     (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
                      (C307 * C2711 + C92157 * C2919) * C106 +
                      (C307 * C2713 + C92157 * C2920) * C95) *
                         C92195) *
                        C41547) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C57967 +
                      (C11161 + C11162) * C92195) *
                         C92360 +
                     ((C337 * C801 + C338 * C92084) * C57967 +
                      (C11137 + C11138) * C92195) *
                         C92350 +
                     ((C339 * C801 + C340 * C92084) * C57967 +
                      (C11139 + C11140) * C92195) *
                         C41547) *
                        C92116 * C798 -
                    (((C13943 + C13942) * C92195 +
                      (C2215 * C92084 + C2214 * C801) * C57967) *
                         C41547 +
                     ((C13941 + C13940) * C92195 +
                      (C2213 * C92084 + C2212 * C801) * C57967) *
                         C92350 +
                     ((C13947 + C13946) * C92195 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C57967) *
                         C92360) *
                        C92116 * C799 +
                    ((((C307 * C806 + C92157 * C1023) * C801 +
                       (C307 * C822 + C92157 * C1031) * C92084) *
                          C57967 +
                      ((C307 * C8412 + C92157 * C8766) * C801 +
                       (C307 * C8418 + C92157 * C8769) * C92084) *
                          C92195) *
                         C92360 +
                     (((C307 * C807 + C92157 * C1024) * C801 +
                       (C307 * C823 + C92157 * C1032) * C92084) *
                          C57967 +
                      ((C307 * C8413 + C92157 * C8767) * C801 +
                       (C307 * C8419 + C92157 * C8770) * C92084) *
                          C92195) *
                         C92350 +
                     (((C307 * C808 + C92157 * C1025) * C801 +
                       (C307 * C824 + C92157 * C1033) * C92084) *
                          C57967 +
                      ((C307 * C8414 + C92157 * C8768) * C801 +
                       (C307 * C8420 + C92157 * C8771) * C92084) *
                          C92195) *
                         C41547) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C57967 +
            (C11246 + C11262) * C92195) *
               C92360 +
           ((C401 + C417) * C57967 + C13093 * C92195) * C92350 +
           C58268 * C41547) *
              C93 -
          (((C3021 + C3013) * C92195 + (C419 + C407) * C57967) * C41547 +
           (C13094 * C92195 + (C418 + C404) * C57967) * C92350 +
           (C13095 * C92195 + (C417 + C401) * C57967) * C92360) *
              C94 +
          (C58268 * C92360 +
           (C422 * C57967 + (C3013 + C3021) * C92195) * C92350 +
           ((C412 + C420) * C57967 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92195) *
               C41547) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C57967 +
           (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92195) *
              C92360 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C57967 +
           (C2934 * C884 + C3016 * C798 - C11989 * C885 - C12101 * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92195) *
              C92350 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92157 * C1025) * C886 +
            (C307 * C893 + C92157 * C1090) * C800) *
               C57967 +
           (C2936 * C884 + C3017 * C798 - C11991 * C885 - C12102 * C799 +
            (C307 * C8414 + C92157 * C8768) * C886 +
            (C307 * C8542 + C92157 * C8872) * C800) *
               C92195) *
              C41547) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C57967 +
            (C11153 * C244 + C11351 * C92116) * C92195) *
               C92360 +
           ((C481 + C497) * C57967 + (C9753 + C9754) * C92195) * C92350 +
           C58345 * C41547) *
              C92105 * C93 -
          (((C9758 + C9759) * C92195 + (C499 + C487) * C57967) * C41547 +
           ((C9757 + C9756) * C92195 + (C498 + C484) * C57967) * C92350 +
           ((C9754 + C9753) * C92195 + (C497 + C481) * C57967) * C92360) *
              C92105 * C94 +
          (C58345 * C92360 +
           (C502 * C57967 + (C9759 + C9758) * C92195) * C92350 +
           ((C492 + C500) * C57967 +
            ((C307 * C2711 + C92157 * C2919) * C244 +
             (C307 * C2851 + C92157 * C3087) * C92116) *
                C92195) *
               C41547) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C57967 +
            (C11153 * C244 + C11351 * C92116) * C92195) *
               C92360 +
           ((C481 + C497) * C57967 + (C9753 + C9754) * C92195) * C92350 +
           C58345 * C41547) *
              C798 -
          (((C12211 + C12205) * C92195 + (C2386 + C2378) * C57967) * C41547 +
           ((C12212 + C12208) * C92195 + (C2387 + C2381) * C57967) * C92350 +
           ((C14153 * C92116 + C13944 * C244) * C92195 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C57967) *
               C92360) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C57967 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92195) *
               C92360 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C57967 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92195) *
               C92350 +
           (((C307 * C808 + C92157 * C1025) * C244 +
             (C307 * C959 + C92157 * C1149) * C92116) *
                C57967 +
            ((C307 * C8414 + C92157 * C8768) * C244 +
             (C307 * C8655 + C92157 * C8973) * C92116) *
                C92195) *
               C41547) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C104 +
           (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
               C93 -
           (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
           C58459 * C95) *
              C92360 +
          ((C58447 + C58446) * C104 + (C58449 + C58448) * C93 -
           (C58451 + C58450) * C105 - (C58453 + C58452) * C94 +
           (C58454 + C58455) * C106 + (C58456 + C58457) * C95) *
              C92350 +
          (C58458 * C104 + C58459 * C93 - (C58455 + C58454) * C105 -
           (C58457 + C58456) * C94 +
           (C58419 * C111 + C57967 * C559 + C58420 * C2711 + C92195 * C3175) *
               C106 +
           (C58419 * C122 + C57967 * C565 + C58420 * C2713 + C92195 * C3176) *
               C95) *
              C41547) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C801 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C92084) *
               C92360 +
           ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92350 +
           (C58458 * C801 + C58459 * C92084) * C41547) *
              C92157 * C92116 * C798 -
          (((C58420 * C3441 + C92195 * C3881 + C58419 * C811 + C57967 * C1210) *
                C92084 +
            (C58420 * C3433 + C92195 * C3877 + C58419 * C803 + C57967 * C1202) *
                C801) *
               C41547 +
           ((C58420 * C3440 + C92195 * C3880 + C58419 * C812 + C57967 * C1211) *
                C92084 +
            (C58420 * C3432 + C92195 * C3876 + C58419 * C804 + C57967 * C1203) *
                C801) *
               C92350 +
           ((C58420 * C3439 + C92195 * C3879 + C58419 * C813 + C57967 * C1212) *
                C92084 +
            (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
                C801) *
               C92360) *
              C92157 * C92116 * C799 +
          (((C58419 * C806 + C57967 * C1205 + C58420 * C8412 + C92195 * C9072) *
                C801 +
            (C58419 * C822 + C57967 * C1213 + C58420 * C8418 + C92195 * C9075) *
                C92084) *
               C92360 +
           ((C58419 * C807 + C57967 * C1206 + C58420 * C8413 + C92195 * C9073) *
                C801 +
            (C58419 * C823 + C57967 * C1214 + C58420 * C8419 + C92195 * C9076) *
                C92084) *
               C92350 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C801 +
            (C58419 * C824 + C57967 * C1215 + C58420 * C8420 + C92195 * C9077) *
                C92084) *
               C41547) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C181 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C92105) *
               C92360 +
           ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92350 +
           C58555 * C41547) *
              C92157 * C93 -
          (((C58551 + C58552) * C92105 + (C58455 + C58454) * C181) * C41547 +
           ((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92350 +
           ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C92360) *
              C92157 * C94 +
          (C58555 * C92360 +
           ((C58454 + C58455) * C181 + (C58552 + C58551) * C92105) * C92350 +
           ((C58419 * C111 + C57967 * C559 + C58420 * C2711 + C92195 * C3175) *
                C181 +
            (C58419 * C186 + C57967 * C645 + C58420 * C2781 + C92195 * C3261) *
                C92105) *
               C41547) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
               C884 +
           (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
               C798 -
           (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
               C885 -
           (C58420 * C3513 + C92195 * C3949 + C58419 * C890 + C57967 * C1267) *
               C799 +
           (C58419 * C806 + C57967 * C1205 + C58420 * C8412 + C92195 * C9072) *
               C886 +
           (C58419 * C891 + C57967 * C1268 + C58420 * C8540 + C92195 * C9188) *
               C800) *
              C92360 +
          ((C58447 + C58446) * C884 + (C58547 + C58548) * C798 -
           (C58420 * C3432 + C92195 * C3876 + C58419 * C804 + C57967 * C1203) *
               C885 -
           (C58420 * C3514 + C92195 * C3950 + C58419 * C889 + C57967 * C1269) *
               C799 +
           (C58419 * C807 + C57967 * C1206 + C58420 * C8413 + C92195 * C9073) *
               C886 +
           (C58419 * C892 + C57967 * C1270 + C58420 * C8541 + C92195 * C9189) *
               C800) *
              C92350 +
          (C58458 * C884 + C58553 * C798 -
           (C58420 * C3433 + C92195 * C3877 + C58419 * C803 + C57967 * C1202) *
               C885 -
           (C58420 * C3515 + C92195 * C3951 + C58419 * C888 + C57967 * C1271) *
               C799 +
           (C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
               C886 +
           (C58419 * C893 + C57967 * C1272 + C58420 * C8542 + C92195 * C9190) *
               C800) *
              C41547) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92360 +
           ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92350 +
           C58651 * C41547) *
              C92157 * C92105 * C93 -
          (((C58647 + C58648) * C92116 + (C58455 + C58454) * C244) * C41547 +
           ((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92350 +
           ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C92360) *
              C92157 * C92105 * C94 +
          (C58651 * C92360 +
           ((C58454 + C58455) * C244 + (C58648 + C58647) * C92116) * C92350 +
           ((C58419 * C111 + C57967 * C559 + C58420 * C2711 + C92195 * C3175) *
                C244 +
            (C58419 * C249 + C57967 * C723 + C58420 * C2851 + C92195 * C3343) *
                C92116) *
               C41547) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C244 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C92116) *
               C92360 +
           ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92350 +
           C58651 * C41547) *
              C92157 * C798 -
          (((C58420 * C3589 + C92195 * C4021 + C58419 * C954 + C57967 * C1326) *
                C92116 +
            (C58420 * C3433 + C92195 * C3877 + C58419 * C803 + C57967 * C1202) *
                C244) *
               C41547 +
           ((C58420 * C3588 + C92195 * C4020 + C58419 * C955 + C57967 * C1327) *
                C92116 +
            (C58420 * C3432 + C92195 * C3876 + C58419 * C804 + C57967 * C1203) *
                C244) *
               C92350 +
           ((C58420 * C3587 + C92195 * C4019 + C58419 * C956 + C57967 * C1328) *
                C92116 +
            (C58420 * C3431 + C92195 * C3875 + C58419 * C805 + C57967 * C1204) *
                C244) *
               C92360) *
              C92157 * C799 +
          (((C58419 * C806 + C57967 * C1205 + C58420 * C8412 + C92195 * C9072) *
                C244 +
            (C58419 * C957 + C57967 * C1329 + C58420 * C8653 + C92195 * C9292) *
                C92116) *
               C92360 +
           ((C58419 * C807 + C57967 * C1206 + C58420 * C8413 + C92195 * C9073) *
                C244 +
            (C58419 * C958 + C57967 * C1330 + C58420 * C8654 + C92195 * C9293) *
                C92116) *
               C92350 +
           ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 + C92195 * C9074) *
                C244 +
            (C58419 * C959 + C57967 * C1331 + C58420 * C8655 + C92195 * C9294) *
                C92116) *
               C41547) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C1987 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C1983 -
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C1988 -
             (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                 C1984) *
                C92336 +
            ((C47296 + C47297) * C1987 + (C47298 + C47299) * C1983 -
             (C48732 + C48733) * C1988 - (C48734 + C48735) * C1984) *
                C92171) *
               C57967 +
           (((C53318 + C53319) * C1987 + (C53320 + C53321) * C1983 -
             (C55592 + C55593) * C1988 - (C55594 + C55595) * C1984) *
                C92336 +
            (C56816 * C1987 + C56817 * C1983 - (C54360 + C54361) * C1988 -
             (C54362 + C54363) * C1984) *
                C92171) *
               C92195) *
              C92116 * C1985 +
          ((((C48733 + C48732) * C1988 -
             ((C47299 + C47298) * C1983 + (C47297 + C47296) * C1987) +
             (C48735 + C48734) * C1984) *
                C92336 +
            ((C48737 + C48736) * C1988 -
             ((C47303 + C47302) * C1983 + (C47301 + C47300) * C1987) +
             (C48739 + C48738) * C1984) *
                C92171) *
               C57967 +
           (((C54361 + C54360) * C1988 - (C56818 * C1983 + C56819 * C1987) +
             (C54363 + C54362) * C1984) *
                C92336 +
            ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
              C92072 * C8417) *
                 C1988 -
             ((C50616 + C50617) * C1983 + (C50618 + C50619) * C1987) +
             (C46528 * C8419 + C46523 * C8422 + C46529 * C8420 +
              C92072 * C8423) *
                 C1984) *
                C92171) *
               C92195) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2059 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C1985 -
             (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
                C92336 +
            ((C47296 + C47297) * C2059 + (C47400 + C47399) * C1985 -
             (C47301 + C47300) * C2060 - (C47402 + C47401) * C1986) *
                C92171) *
               C57967 +
           (((C53318 + C53319) * C2059 + (C53440 + C53441) * C1985 -
             C56819 * C2060 - C56956 * C1986) *
                C92336 +
            (C56816 * C2059 + C56957 * C1985 - (C50618 + C50619) * C2060 -
             (C50733 + C50732) * C1986) *
                C92171) *
               C92195) *
              C1983 +
          ((((C48733 + C48732) * C2060 -
             ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                  C1985 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C2059) +
             (C48846 + C48847) * C1986) *
                C92336 +
            ((C48737 + C48736) * C2060 -
             ((C48847 + C48846) * C1985 + (C48732 + C48733) * C2059) +
             (C48848 + C48849) * C1986) *
                C92171) *
               C57967 +
           (((C54361 + C54360) * C2060 -
             ((C55730 + C55731) * C1985 + (C55592 + C55593) * C2059) +
             (C54498 + C54499) * C1986) *
                C92336 +
            ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
              C92072 * C8417) *
                 C2060 -
             ((C54499 + C54498) * C1985 + (C54360 + C54361) * C2059) +
             (C46528 * C8541 + C46523 * C8544 + C46529 * C8542 +
              C92072 * C8545) *
                 C1986) *
                C92171) *
               C92195) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eexz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                  C244 +
              (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                  C92116) *
                 C92336 +
             ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
                C57967 +
            (((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92336 +
             (C56816 * C244 + C57089 * C92116) * C92171) *
                C92195) *
               C1985 -
           ((((C50842 + C50843) * C92116 + (C50618 + C50619) * C244) * C92171 +
             (C57088 * C92116 + C56819 * C244) * C92336) *
                C92195 +
            (((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92171 +
             ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92336) *
                C57967) *
               C1986) *
              C1983 +
          (((((C48733 + C48732) * C244 + (C48956 + C48957) * C92116) * C92336 +
             ((C48737 + C48736) * C244 + (C48958 + C48959) * C92116) * C92171) *
                C57967 +
            (((C54361 + C54360) * C244 + (C54634 + C54635) * C92116) * C92336 +
             ((C46528 * C8413 + C46523 * C8416 + C46529 * C8414 +
               C92072 * C8417) *
                  C244 +
              (C46528 * C8654 + C46523 * C8657 + C46529 * C8655 +
               C92072 * C8658) *
                  C92116) *
                 C92171) *
                C92195) *
               C1986 -
           ((((C54635 + C54634) * C92116 + (C54360 + C54361) * C244) * C92171 +
             ((C55867 + C55866) * C92116 + (C55592 + C55593) * C244) * C92336) *
                C92195 +
            (((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92171 +
             ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                  C92116 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C244) *
                 C92336) *
                C57967) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C1987 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C1983 -
             (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
                C57967 +
            ((C34993 + C34994) * C1987 + (C34995 + C34996) * C1983 -
             (C7758 + C7757) * C1988 - (C7760 + C7759) * C1984) *
                C92195) *
               C46523 +
           (((C4355 + C4354) * C1987 + (C4357 + C4356) * C1983 -
             (C4359 + C4358) * C1988 - (C4361 + C4360) * C1984) *
                C57967 +
            ((C7757 + C7758) * C1987 + (C7759 + C7760) * C1983 -
             (C7762 + C7761) * C1988 - (C7764 + C7763) * C1984) *
                C92195) *
               C92072) *
              C92116 * C1985 +
          ((((C6804 + C6805) * C1988 -
             ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                  C1983 +
              (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                  C1987) +
             (C6806 + C6807) * C1984) *
                C57967 +
            ((C66080 + C66081) * C1988 -
             ((C37677 + C37676) * C1983 + (C37675 + C37674) * C1987) +
             (C66082 + C66083) * C1984) *
                C92195) *
               C46523 +
           (((C6808 + C6809) * C1988 -
             ((C6807 + C6806) * C1983 + (C6805 + C6804) * C1987) +
             (C6810 + C6811) * C1984) *
                C57967 +
            ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                 C1988 -
             ((C66083 + C66082) * C1983 + (C66081 + C66080) * C1987) +
             (C4327 * C3441 + C92336 * C3667 + C4328 * C8420 + C92171 * C8771) *
                 C1984) *
                C92195) *
               C92072) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C2059 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C1985 -
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C2060 -
             (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                 C1986) *
                C57967 +
            ((C34993 + C34994) * C2059 + (C35098 + C35099) * C1985 -
             (C37675 + C37674) * C2060 - (C37788 + C37789) * C1986) *
                C92195) *
               C46523 +
           (((C4355 + C4354) * C2059 + (C4455 + C4456) * C1985 -
             (C6805 + C6804) * C2060 - (C6918 + C6919) * C1986) *
                C57967 +
            ((C7757 + C7758) * C2059 + (C7871 + C7872) * C1985 -
             (C66081 + C66080) * C2060 - (C66218 + C66219) * C1986) *
                C92195) *
               C92072) *
              C1983 +
          ((((C6804 + C6805) * C2060 -
             ((C4456 + C4455) * C1985 + (C4354 + C4355) * C2059) +
             (C6919 + C6918) * C1986) *
                C57967 +
            ((C66080 + C66081) * C2060 -
             ((C7872 + C7871) * C1985 + (C7758 + C7757) * C2059) +
             (C66219 + C66218) * C1986) *
                C92195) *
               C46523 +
           (((C6808 + C6809) * C2060 -
             ((C4458 + C4457) * C1985 + (C4359 + C4358) * C2059) +
             (C6921 + C6920) * C1986) *
                C57967 +
            ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                 C2060 -
             ((C7874 + C7873) * C1985 + (C7762 + C7761) * C2059) +
             (C4327 * C3515 + C92336 * C3737 + C4328 * C8542 + C92171 * C8872) *
                 C1986) *
                C92195) *
               C92072) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eeyz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                  C244 +
              (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                  C92116) *
                 C57967 +
             ((C34993 + C34994) * C244 + (C35195 + C35194) * C92116) * C92195) *
                C46523 +
            (((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C57967 +
             ((C7757 + C7758) * C244 + (C7982 + C7981) * C92116) * C92195) *
                C92072) *
               C1985 -
           ((((C66354 + C66355) * C92116 + (C66081 + C66080) * C244) * C92195 +
             ((C7030 + C7031) * C92116 + (C6805 + C6804) * C244) * C57967) *
                C92072 +
            (((C37899 + C37898) * C92116 + (C37675 + C37674) * C244) * C92195 +
             ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                  C92116 +
              (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                  C244) *
                 C57967) *
                C46523) *
               C1986) *
              C1983 +
          (((((C6804 + C6805) * C244 + (C7031 + C7030) * C92116) * C57967 +
             ((C66080 + C66081) * C244 + (C66355 + C66354) * C92116) * C92195) *
                C46523 +
            (((C6808 + C6809) * C244 + (C7029 + C7028) * C92116) * C57967 +
             ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 +
               C92171 * C8768) *
                  C244 +
              (C4327 * C3589 + C92336 * C3807 + C4328 * C8655 +
               C92171 * C8973) *
                  C92116) *
                 C92195) *
                C92072) *
               C1986 -
           ((((C7983 + C7984) * C92116 + (C7762 + C7761) * C244) * C92195 +
             ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C57967) *
                C92072 +
            (((C7981 + C7982) * C92116 + (C7758 + C7757) * C244) * C92195 +
             ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C57967) *
                C46523) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C1987 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C1983 -
             (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
                C46523 +
            ((C58447 + C58446) * C1987 + (C58449 + C58448) * C1983 -
             (C58451 + C58450) * C1988 - (C58453 + C58452) * C1984) *
                C92072) *
               C92336 +
           (((C64426 + C64427) * C1987 + (C64428 + C64429) * C1983 -
             C66486 * C1988 - C66487 * C1984) *
                C46523 +
            (C66488 * C1987 + C66489 * C1983 - (C60763 + C60762) * C1988 -
             (C60765 + C60764) * C1984) *
                C92072) *
               C92171) *
              C92116 * C1985 +
          (((C66488 * C1988 -
             ((C64429 + C64428) * C1983 + (C64427 + C64426) * C1987) +
             C66489 * C1984) *
                C46523 +
            ((C60762 + C60763) * C1988 - (C66487 * C1983 + C66486 * C1987) +
             (C60764 + C60765) * C1984) *
                C92072) *
               C92336 +
           (((C64433 + C64432) * C1988 -
             ((C64434 + C64435) * C1983 + (C64436 + C64437) * C1987) +
             (C64431 + C64430) * C1984) *
                C46523 +
            ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 +
              C92195 * C9074) *
                 C1988 -
             ((C64430 + C64431) * C1983 + (C64432 + C64433) * C1987) +
             (C58419 * C824 + C57967 * C1215 + C58420 * C8420 +
              C92195 * C9077) *
                 C1984) *
                C92072) *
               C92171) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2059 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C1985 -
             (C64427 + C64426) * C2060 - (C64548 + C64549) * C1986) *
                C46523 +
            ((C58447 + C58446) * C2059 + (C58547 + C58548) * C1985 -
             C66486 * C2060 - C66620 * C1986) *
                C92072) *
               C92336 +
           (((C64426 + C64427) * C2059 + (C64549 + C64548) * C1985 -
             (C64436 + C64437) * C2060 - (C64551 + C64550) * C1986) *
                C46523 +
            (C66488 * C2059 + C66621 * C1985 - (C64432 + C64433) * C2060 -
             (C64553 + C64552) * C1986) *
                C92072) *
               C92171) *
              C1983 +
          (((C66488 * C2060 -
             ((C58548 + C58547) * C1985 + (C58446 + C58447) * C2059) +
             C66621 * C1986) *
                C46523 +
            ((C60762 + C60763) * C2060 -
             ((C58550 + C58549) * C1985 + (C58451 + C58450) * C2059) +
             (C60875 + C60874) * C1986) *
                C92072) *
               C92336 +
           (((C64433 + C64432) * C2060 - (C66620 * C1985 + C66486 * C2059) +
             (C64552 + C64553) * C1986) *
                C46523 +
            ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 +
              C92195 * C9074) *
                 C2060 -
             ((C60874 + C60875) * C1985 + (C60763 + C60762) * C2059) +
             (C58419 * C893 + C57967 * C1272 + C58420 * C8542 +
              C92195 * C9190) *
                 C1986) *
                C92072) *
               C92171) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eezz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C58419 * C107 + C57967 * C555 + C58420 * C1389 +
               C92195 * C1788) *
                  C244 +
              (C58419 * C245 + C57967 * C719 + C58420 * C1540 +
               C92195 * C1909) *
                  C92116) *
                 C46523 +
             ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
                C92336 +
            (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C46523 +
             C66758 * C92072) *
                C92171) *
               C1985 -
           ((((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92072 +
             ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C46523) *
                C92171 +
            (C66759 * C92072 +
             ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C46523) *
                C92336) *
               C1986) *
              C1983 +
          (((C66758 * C46523 +
             ((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C92072) *
                C92336 +
            (((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C46523 +
             ((C58419 * C808 + C57967 * C1207 + C58420 * C8414 +
               C92195 * C9074) *
                  C244 +
              (C58419 * C959 + C57967 * C1331 + C58420 * C8655 +
               C92195 * C9294) *
                  C92116) *
                 C92072) *
                C92171) *
               C1986 -
           ((((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C92072 +
             C66759 * C46523) *
                C92171 +
            (((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92072 +
             ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C46523) *
                C92336) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                  C801 +
              (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                  C92084) *
                 C92336 +
             ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
                C57967 +
            (((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92336 +
             C56824 * C92171) *
                C92195) *
               C2709 -
           ((((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92171 +
             ((C53326 + C53327) * C92084 + (C53328 + C53329) * C801) * C92336) *
                C92195 +
            (C56825 * C92171 +
             ((C53321 + C53320) * C92084 + (C53319 + C53318) * C801) * C92336) *
                C57967) *
               C2710) *
              C1985 +
          (((C56824 * C92336 +
             ((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92171) *
                C57967 +
            (((C53325 + C53324) * C801 + (C53323 + C53322) * C92084) * C92336 +
             ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
               C92072 * C16098) *
                  C801 +
              (C46528 * C16099 + C46523 * C16101 + C46529 * C16100 +
               C92072 * C16102) *
                  C92084) *
                 C92171) *
                C92195) *
               C2710 -
           ((((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C92171 +
             C56825 * C92336) *
                C92195 +
            (((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92171 +
             ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92336) *
                C57967) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2059 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C1985 -
             (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
                C92336 +
            ((C47296 + C47297) * C2059 + (C47400 + C47399) * C1985 -
             (C47301 + C47300) * C2060 - (C47402 + C47401) * C1986) *
                C92171) *
               C57967 +
           (((C53318 + C53319) * C2059 + (C53440 + C53441) * C1985 -
             C56819 * C2060 - C56956 * C1986) *
                C92336 +
            (C56816 * C2059 + C56957 * C1985 - (C50618 + C50619) * C2060 -
             (C50733 + C50732) * C1986) *
                C92171) *
               C92195) *
              C92084 * C2709 +
          (((C56816 * C2060 -
             ((C53441 + C53440) * C1985 + (C53319 + C53318) * C2059) +
             C56957 * C1986) *
                C92336 +
            ((C50619 + C50618) * C2060 - (C56956 * C1985 + C56819 * C2059) +
             (C50732 + C50733) * C1986) *
                C92171) *
               C57967 +
           (((C53325 + C53324) * C2060 -
             ((C53444 + C53445) * C1985 + (C53328 + C53329) * C2059) +
             (C53443 + C53442) * C1986) *
                C92336 +
            ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
              C92072 * C16098) *
                 C2060 -
             ((C53442 + C53443) * C1985 + (C53324 + C53325) * C2059) +
             (C46528 * C16177 + C46523 * C16179 + C46529 * C16178 +
              C92072 * C16180) *
                 C1986) *
                C92171) *
               C92195) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2849 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C2709 -
             (C53319 + C53318) * C2850 - (C53556 + C53557) * C2710) *
                C92336 +
            ((C47296 + C47297) * C2849 + (C47493 + C47494) * C2709 -
             C56819 * C2850 - C57088 * C2710) *
                C92171) *
               C57967 +
           (((C53318 + C53319) * C2849 + (C53557 + C53556) * C2709 -
             (C53328 + C53329) * C2850 - (C53559 + C53558) * C2710) *
                C92336 +
            (C56816 * C2849 + C57089 * C2709 - (C53324 + C53325) * C2850 -
             (C53561 + C53560) * C2710) *
                C92171) *
               C92195) *
              C1985 +
          (((C56816 * C2850 -
             ((C47494 + C47493) * C2709 + (C47297 + C47296) * C2849) +
             C57089 * C2710) *
                C92336 +
            ((C50619 + C50618) * C2850 -
             ((C47496 + C47495) * C2709 + (C47301 + C47300) * C2849) +
             (C50843 + C50842) * C2710) *
                C92171) *
               C57967 +
           (((C53325 + C53324) * C2850 - (C57088 * C2709 + C56819 * C2849) +
             (C53560 + C53561) * C2710) *
                C92336 +
            ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
              C92072 * C16098) *
                 C2850 -
             ((C50842 + C50843) * C2709 + (C50618 + C50619) * C2849) +
             (C46528 * C16255 + C46523 * C16257 + C46529 * C16256 +
              C92072 * C16258) *
                 C2710) *
                C92171) *
               C92195) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eeyx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                  C801 +
              (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                  C92084) *
                 C57967 +
             ((C34993 + C34994) * C801 + (C34995 + C34996) * C92084) * C92195) *
                C46523 +
            (((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C57967 +
             (C67282 * C801 + C67283 * C92084) * C92195) *
                C92072) *
               C2709 -
           ((((C36749 + C36750) * C92084 + (C36747 + C36748) * C801) * C92195 +
             (C67281 * C92084 + C67280 * C801) * C57967) *
                C92072 +
            (((C35000 + C34999) * C92084 + (C34998 + C34997) * C801) * C92195 +
             ((C34996 + C34995) * C92084 + (C34994 + C34993) * C801) * C57967) *
                C46523) *
               C2710) *
              C1985 +
          (((((C37674 + C37675) * C801 + (C37676 + C37677) * C92084) * C57967 +
             ((C37678 + C37679) * C801 + (C37680 + C37681) * C92084) * C92195) *
                C46523 +
            (((C66080 + C66081) * C801 + (C66082 + C66083) * C92084) * C57967 +
             ((C4327 * C5720 + C92336 * C5966 + C4328 * C16096 +
               C92171 * C16334) *
                  C801 +
              (C4327 * C5726 + C92336 * C5969 + C4328 * C16100 +
               C92171 * C16336) *
                  C92084) *
                 C92195) *
                C92072) *
               C2710 -
           ((((C66083 + C66082) * C92084 + (C66081 + C66080) * C801) * C92195 +
             ((C6807 + C6806) * C92084 + (C6805 + C6804) * C801) * C57967) *
                C92072 +
            (((C37677 + C37676) * C92084 + (C37675 + C37674) * C801) * C92195 +
             ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                  C92084 +
              (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                  C801) *
                 C57967) *
                C46523) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C2059 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C1985 -
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C2060 -
             (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                 C1986) *
                C57967 +
            ((C34993 + C34994) * C2059 + (C35098 + C35099) * C1985 -
             (C37675 + C37674) * C2060 - (C37788 + C37789) * C1986) *
                C92195) *
               C46523 +
           (((C4355 + C4354) * C2059 + (C4455 + C4456) * C1985 -
             (C6805 + C6804) * C2060 - (C6918 + C6919) * C1986) *
                C57967 +
            (C67282 * C2059 + C67415 * C1985 - (C66081 + C66080) * C2060 -
             (C66218 + C66219) * C1986) *
                C92195) *
               C92072) *
              C92084 * C2709 +
          ((((C37674 + C37675) * C2060 -
             ((C35099 + C35098) * C1985 + (C34994 + C34993) * C2059) +
             (C37789 + C37788) * C1986) *
                C57967 +
            ((C37678 + C37679) * C2060 -
             ((C35101 + C35100) * C1985 + (C34998 + C34997) * C2059) +
             (C37791 + C37790) * C1986) *
                C92195) *
               C46523 +
           (((C66080 + C66081) * C2060 - (C67416 * C1985 + C67280 * C2059) +
             (C66219 + C66218) * C1986) *
                C57967 +
            ((C4327 * C5720 + C92336 * C5966 + C4328 * C16096 +
              C92171 * C16334) *
                 C2060 -
             ((C36853 + C36854) * C1985 + (C36747 + C36748) * C2059) +
             (C4327 * C5806 + C92336 * C6046 + C4328 * C16178 +
              C92171 * C16412) *
                 C1986) *
                C92195) *
               C92072) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C2849 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C2709 -
             (C34994 + C34993) * C2850 - (C35194 + C35195) * C2710) *
                C57967 +
            ((C34993 + C34994) * C2849 + (C35195 + C35194) * C2709 -
             (C34998 + C34997) * C2850 - (C35197 + C35196) * C2710) *
                C92195) *
               C46523 +
           (((C4355 + C4354) * C2849 + (C4552 + C4553) * C2709 -
             C67280 * C2850 - C67552 * C2710) *
                C57967 +
            (C67282 * C2849 + C67553 * C2709 - (C36747 + C36748) * C2850 -
             (C36958 + C36957) * C2710) *
                C92195) *
               C92072) *
              C1985 +
          ((((C37674 + C37675) * C2850 -
             ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                  C2709 +
              (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                  C2849) +
             (C37898 + C37899) * C2710) *
                C57967 +
            ((C37678 + C37679) * C2850 -
             ((C37899 + C37898) * C2709 + (C37675 + C37674) * C2849) +
             (C37900 + C37901) * C2710) *
                C92195) *
               C46523 +
           (((C66080 + C66081) * C2850 -
             ((C7030 + C7031) * C2709 + (C6805 + C6804) * C2849) +
             (C66355 + C66354) * C2710) *
                C57967 +
            ((C4327 * C5720 + C92336 * C5966 + C4328 * C16096 +
              C92171 * C16334) *
                 C2850 -
             ((C66354 + C66355) * C2709 + (C66081 + C66080) * C2849) +
             (C4327 * C5886 + C92336 * C6123 + C4328 * C16256 +
              C92171 * C16488) *
                 C2710) *
                C92195) *
               C92072) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eezx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C58419 * C107 + C57967 * C555 + C58420 * C1389 +
               C92195 * C1788) *
                  C801 +
              (C58419 * C117 + C57967 * C561 + C58420 * C1397 +
               C92195 * C1796) *
                  C92084) *
                 C46523 +
             ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
                C92336 +
            (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C46523 +
             (C66488 * C801 + C66489 * C92084) * C92072) *
                C92171) *
               C2709 -
           ((((C67695 + C67694) * C92084 + (C67693 + C67692) * C801) * C92072 +
             ((C68886 + C68887) * C92084 + (C68888 + C68889) * C801) * C46523) *
                C92171 +
            (((C61727 + C61726) * C92084 + (C61725 + C61724) * C801) * C92072 +
             ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
               C57967 * C1796) *
                  C92084 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C801) *
                 C46523) *
                C92336) *
               C2710) *
              C1985 +
          (((((C68889 + C68888) * C801 + (C68887 + C68886) * C92084) * C46523 +
             ((C67692 + C67693) * C801 + (C67694 + C67695) * C92084) * C92072) *
                C92336 +
            (((C58419 * C8412 + C57967 * C9072 + C58420 * C16095 +
               C92195 * C16563) *
                  C801 +
              (C58419 * C8418 + C57967 * C9075 + C58420 * C16099 +
               C92195 * C16565) *
                  C92084) *
                 C46523 +
             ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
               C92195 * C16564) *
                  C801 +
              (C58419 * C8419 + C57967 * C9076 + C58420 * C16100 +
               C92195 * C16566) *
                  C92084) *
                 C92072) *
                C92171) *
               C2710 -
           ((((C64430 + C64431) * C92084 + (C64432 + C64433) * C801) * C92072 +
             ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C46523) *
                C92171 +
            ((C66487 * C92084 + C66486 * C801) * C92072 +
             ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C46523) *
                C92336) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2059 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C1985 -
             (C64427 + C64426) * C2060 - (C64548 + C64549) * C1986) *
                C46523 +
            ((C58447 + C58446) * C2059 + (C58547 + C58548) * C1985 -
             C66486 * C2060 - C66620 * C1986) *
                C92072) *
               C92336 +
           (((C64426 + C64427) * C2059 + (C64549 + C64548) * C1985 -
             (C64436 + C64437) * C2060 - (C64551 + C64550) * C1986) *
                C46523 +
            (C66488 * C2059 + C66621 * C1985 - (C64432 + C64433) * C2060 -
             (C64553 + C64552) * C1986) *
                C92072) *
               C92171) *
              C92084 * C2709 +
          ((((C68889 + C68888) * C2060 -
             ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
               C57967 * C1854) *
                  C1985 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C2059) +
             (C69024 + C69025) * C1986) *
                C46523 +
            ((C67692 + C67693) * C2060 -
             ((C61839 + C61838) * C1985 + (C61725 + C61724) * C2059) +
             (C67830 + C67831) * C1986) *
                C92072) *
               C92336 +
           (((C58419 * C8412 + C57967 * C9072 + C58420 * C16095 +
              C92195 * C16563) *
                 C2060 -
             ((C69025 + C69024) * C1985 + (C68888 + C68889) * C2059) +
             (C58419 * C8540 + C57967 * C9188 + C58420 * C16177 +
              C92195 * C16641) *
                 C1986) *
                C46523 +
            ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
              C92195 * C16564) *
                 C2060 -
             ((C67831 + C67830) * C1985 + (C67693 + C67692) * C2059) +
             (C58419 * C8541 + C57967 * C9189 + C58420 * C16178 +
              C92195 * C16642) *
                 C1986) *
                C92072) *
               C92171) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2849 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C2709 -
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C2850 -
             (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
              C57967 * C1909) *
                 C2710) *
                C46523 +
            ((C58447 + C58446) * C2849 + (C58643 + C58644) * C2709 -
             (C61725 + C61724) * C2850 - (C61948 + C61949) * C2710) *
                C92072) *
               C92336 +
           (((C64426 + C64427) * C2849 + (C64664 + C64665) * C2709 -
             (C68888 + C68889) * C2850 - (C69160 + C69161) * C2710) *
                C46523 +
            (C66488 * C2849 + C66753 * C2709 - (C67693 + C67692) * C2850 -
             (C67966 + C67967) * C2710) *
                C92072) *
               C92171) *
              C1985 +
          ((((C68889 + C68888) * C2850 -
             ((C64665 + C64664) * C2709 + (C64427 + C64426) * C2849) +
             (C69161 + C69160) * C2710) *
                C46523 +
            ((C67692 + C67693) * C2850 - (C66754 * C2709 + C66486 * C2849) +
             (C67967 + C67966) * C2710) *
                C92072) *
               C92336 +
           (((C58419 * C8412 + C57967 * C9072 + C58420 * C16095 +
              C92195 * C16563) *
                 C2850 -
             ((C64668 + C64669) * C2709 + (C64436 + C64437) * C2849) +
             (C58419 * C8653 + C57967 * C9292 + C58420 * C16255 +
              C92195 * C16717) *
                 C2710) *
                C46523 +
            ((C58419 * C8413 + C57967 * C9073 + C58420 * C16096 +
              C92195 * C16564) *
                 C2850 -
             ((C64666 + C64667) * C2709 + (C64432 + C64433) * C2849) +
             (C58419 * C8654 + C57967 * C9293 + C58420 * C16256 +
              C92195 * C16718) *
                 C2710) *
                C92072) *
               C92171) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eexx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C92336 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
               C57967 +
           (((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92336 +
            C56824 * C92171) *
               C92195) *
              C92116 * C798 -
          ((((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C92171 +
            C56825 * C92336) *
               C92195 +
           (((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92171 +
            ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92336) *
               C57967) *
              C92116 * C799 +
          ((C47312 * C92336 +
            ((C47307 + C47306) * C801 + (C47305 + C47304) * C92084) * C92171) *
               C57967 +
           (((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92336 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C46528 * C18736 + C46523 * C18738 + C46529 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C92171) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C104 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C93 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C105 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C94 +
            (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C106 +
            (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
                C95) *
               C92336 +
           ((C47296 + C47297) * C104 + (C47298 + C47299) * C93 -
            (C48732 + C48733) * C105 - (C48734 + C48735) * C94 +
            (C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C106 +
            (C46528 * C811 + C46523 * C827 + C46529 * C810 + C92072 * C826) *
                C95) *
               C92171) *
              C57967 +
          (((C53318 + C53319) * C104 + (C53320 + C53321) * C93 -
            (C55592 + C55593) * C105 - (C55594 + C55595) * C94 +
            (C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C106 +
            (C46528 * C1395 + C46523 * C1411 + C46529 * C1394 +
             C92072 * C1410) *
                C95) *
               C92336 +
           (C56816 * C104 + C56817 * C93 - (C54360 + C54361) * C105 -
            (C54362 + C54363) * C94 +
            (C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
             C92072 * C3438) *
                C106 +
            (C46528 * C3441 + C46523 * C3445 + C46529 * C3442 +
             C92072 * C3446) *
                C95) *
               C92171) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C92336 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
               C57967 +
           (((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92336 +
            C56824 * C92171) *
               C92195) *
              C1383 -
          ((((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92171 +
            ((C53326 + C53327) * C92084 + (C53328 + C53329) * C801) * C92336) *
               C92195 +
           (C56825 * C92171 +
            ((C53321 + C53320) * C92084 + (C53319 + C53318) * C801) * C92336) *
               C57967) *
              C1384 +
          ((((C53329 + C53328) * C801 + (C53327 + C53326) * C92084) * C92336 +
            ((C53325 + C53324) * C801 + (C53323 + C53322) * C92084) * C92171) *
               C57967 +
           (((C46528 * C10808 + C46523 * C10811 + C46529 * C10809 +
              C92072 * C10812) *
                 C801 +
             (C46528 * C10814 + C46523 * C10817 + C46529 * C10815 +
              C92072 * C10818) *
                 C92084) *
                C92336 +
            ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
              C92072 * C32369) *
                 C801 +
             (C46528 * C24527 + C46523 * C24530 + C46529 * C32370 +
              C92072 * C32371) *
                 C92084) *
                C92171) *
               C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C884 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C798 -
            (C47297 + C47296) * C885 - (C47399 + C47400) * C799 +
            C47308 * C886 + C47405 * C800) *
               C92336 +
           ((C47296 + C47297) * C884 + (C47400 + C47399) * C798 -
            (C47301 + C47300) * C885 - (C47402 + C47401) * C799 +
            (C47307 + C47306) * C886 + (C47403 + C47404) * C800) *
               C92171) *
              C57967 +
          (((C53318 + C53319) * C884 + (C53440 + C53441) * C798 -
            C56819 * C885 - C56956 * C799 + (C50619 + C50618) * C886 +
            (C50732 + C50733) * C800) *
               C92336 +
           (C56816 * C884 + C56957 * C798 - (C50618 + C50619) * C885 -
            (C50733 + C50732) * C799 +
            (C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
             C92072 * C18735) *
                C886 +
            (C46528 * C18862 + C46523 * C18864 + C46529 * C18863 +
             C92072 * C18865) *
                C800) *
               C92171) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C92336 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
               C57967 +
           (((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92336 +
            (C56816 * C181 + C56957 * C92105) * C92171) *
               C92195) *
              C93 -
          ((((C54499 + C54498) * C92105 + (C54360 + C54361) * C181) * C92171 +
            ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C92336) *
               C92195 +
           (((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92171 +
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C92105 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C181) *
                C92336) *
               C57967) *
              C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C181 +
             (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                 C92105) *
                C92336 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C181 +
             (C46528 * C888 + C46523 * C896 + C46529 * C887 + C92072 * C895) *
                 C92105) *
                C92171) *
               C57967 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C181 +
             (C46528 * C1469 + C46523 * C1477 + C46529 * C1468 +
              C92072 * C1476) *
                 C92105) *
                C92336 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C181 +
             (C46528 * C3515 + C46523 * C3519 + C46529 * C3516 +
              C92072 * C3520) *
                 C92105) *
                C92171) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C92336 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
               C57967 +
           (((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92336 +
            (C56816 * C181 + C56957 * C92105) * C92171) *
               C92195) *
              C92084 * C1383 -
          ((((C53442 + C53443) * C92105 + (C53324 + C53325) * C181) * C92171 +
            ((C53444 + C53445) * C92105 + (C53328 + C53329) * C181) * C92336) *
               C92195 +
           ((C56956 * C92105 + C56819 * C181) * C92171 +
            ((C53441 + C53440) * C92105 + (C53319 + C53318) * C181) * C92336) *
               C57967) *
              C92084 * C1384 +
          ((((C53329 + C53328) * C181 + (C53445 + C53444) * C92105) * C92336 +
            ((C53325 + C53324) * C181 + (C53443 + C53442) * C92105) * C92171) *
               C57967 +
           (((C46528 * C10808 + C46523 * C10811 + C46529 * C10809 +
              C92072 * C10812) *
                 C181 +
             (C46528 * C10930 + C46523 * C10933 + C46529 * C10931 +
              C92072 * C10934) *
                 C92105) *
                C92336 +
            ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
              C92072 * C32369) *
                 C181 +
             (C46528 * C24638 + C46523 * C24640 + C46529 * C32482 +
              C92072 * C32483) *
                 C92105) *
                C92171) *
               C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C92336 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C57967 +
           (((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92336 +
            (C56816 * C244 + C57089 * C92116) * C92171) *
               C92195) *
              C798 -
          ((((C50842 + C50843) * C92116 + (C50618 + C50619) * C244) * C92171 +
            (C57088 * C92116 + C56819 * C244) * C92336) *
               C92195 +
           (((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92171 +
            ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92336) *
               C57967) *
              C799 +
          ((C47501 * C92336 +
            ((C47307 + C47306) * C244 + (C47498 + C47497) * C92116) * C92171) *
               C57967 +
           (((C50619 + C50618) * C244 + (C50843 + C50842) * C92116) * C92336 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C244 +
             (C46528 * C18976 + C46523 * C18978 + C46529 * C18977 +
              C92072 * C18979) *
                 C92116) *
                C92171) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C92336 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C57967 +
           (((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92336 +
            (C56816 * C244 + C57089 * C92116) * C92171) *
               C92195) *
              C92105 * C93 -
          ((((C54635 + C54634) * C92116 + (C54360 + C54361) * C244) * C92171 +
            ((C55867 + C55866) * C92116 + (C55592 + C55593) * C244) * C92336) *
               C92195 +
           (((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92171 +
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C92116 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C244) *
                C92336) *
               C57967) *
              C92105 * C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C244 +
             (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                 C92116) *
                C92336 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C244 +
             (C46528 * C954 + C46523 * C962 + C46529 * C953 + C92072 * C961) *
                 C92116) *
                C92171) *
               C57967 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C244 +
             (C46528 * C1538 + C46523 * C1546 + C46529 * C1537 +
              C92072 * C1545) *
                 C92116) *
                C92336 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C244 +
             (C46528 * C3589 + C46523 * C3593 + C46529 * C3590 +
              C92072 * C3594) *
                 C92116) *
                C92171) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C1534 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C1383 -
            (C53319 + C53318) * C1535 - (C53556 + C53557) * C1384 +
            (C53329 + C53328) * C1536 + (C53558 + C53559) * C1385) *
               C92336 +
           ((C47296 + C47297) * C1534 + (C47493 + C47494) * C1383 -
            C56819 * C1535 - C57088 * C1384 + (C53325 + C53324) * C1536 +
            (C53560 + C53561) * C1385) *
               C92171) *
              C57967 +
          (((C53318 + C53319) * C1534 + (C53557 + C53556) * C1383 -
            (C53328 + C53329) * C1535 - (C53559 + C53558) * C1384 +
            (C46528 * C10808 + C46523 * C10811 + C46529 * C10809 +
             C92072 * C10812) *
                C1536 +
            (C46528 * C11028 + C46523 * C11031 + C46529 * C11029 +
             C92072 * C11032) *
                C1385) *
               C92336 +
           (C56816 * C1534 + C57089 * C1383 - (C53324 + C53325) * C1535 -
            (C53561 + C53560) * C1384 +
            (C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
             C92072 * C32369) *
                C1536 +
            (C46528 * C24740 + C46523 * C24742 + C46529 * C32588 +
             C92072 * C32589) *
                C1385) *
               C92171) *
              C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C801 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C92084) *
                C57967 +
            ((C34993 + C34994) * C801 + (C34995 + C34996) * C92084) * C92195) *
               C46523 +
           (((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C57967 +
            ((C7757 + C7758) * C801 + (C7759 + C7760) * C92084) * C92195) *
               C92072) *
              C92116 * C798 -
          ((((C4328 * C8419 + C92171 * C8770 + C4327 * C3440 + C92336 * C3666) *
                 C92084 +
             (C4328 * C8413 + C92171 * C8767 + C4327 * C3432 + C92336 * C3662) *
                 C801) *
                C92195 +
            ((C6807 + C6806) * C92084 + (C6805 + C6804) * C801) * C57967) *
               C92072 +
           (((C37677 + C37676) * C92084 + (C37675 + C37674) * C801) * C92195 +
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C92084 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C801) *
                C57967) *
               C46523) *
              C92116 * C799 +
          ((((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                 C801 +
             (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                 C92084) *
                C57967 +
            ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
              C92171 * C19090) *
                 C801 +
             (C4327 * C8418 + C92336 * C8769 + C4328 * C18736 +
              C92171 * C19092) *
                 C92084) *
                C92195) *
               C46523 +
           (((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                 C801 +
             (C4327 * C823 + C92336 * C1032 + C4328 * C4872 + C92171 * C5187) *
                 C92084) *
                C57967 +
            ((C4327 * C8413 + C92336 * C8767 + C4328 * C18733 +
              C92171 * C19091) *
                 C801 +
             (C4327 * C8419 + C92336 * C8770 + C4328 * C18737 +
              C92171 * C19093) *
                 C92084) *
                C92195) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C104 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C93 -
            (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
            C4367 * C95) *
               C57967 +
           ((C34993 + C34994) * C104 + (C34995 + C34996) * C93 -
            (C7758 + C7757) * C105 - (C7760 + C7759) * C94 +
            (C7761 + C7762) * C106 + (C7763 + C7764) * C95) *
               C92195) *
              C46523 +
          (((C4355 + C4354) * C104 + (C4357 + C4356) * C93 -
            (C4359 + C4358) * C105 - (C4361 + C4360) * C94 +
            (C4362 + C4363) * C106 + (C4364 + C4365) * C95) *
               C57967 +
           ((C7757 + C7758) * C104 + (C7759 + C7760) * C93 -
            (C7762 + C7761) * C105 - (C7764 + C7763) * C94 +
            (C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                C106 +
            (C4327 * C1394 + C92336 * C1611 + C4328 * C3442 + C92171 * C3668) *
                C95) *
               C92195) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C801 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C92084) *
                C57967 +
            ((C34993 + C34994) * C801 + (C34995 + C34996) * C92084) * C92195) *
               C46523 +
           (((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C57967 +
            ((C7757 + C7758) * C801 + (C7759 + C7760) * C92084) * C92195) *
               C92072) *
              C1383 -
          ((((C36749 + C36750) * C92084 + (C36747 + C36748) * C801) * C92195 +
            ((C7760 + C7759) * C92084 + (C7758 + C7757) * C801) * C57967) *
               C92072 +
           (((C35000 + C34999) * C92084 + (C34998 + C34997) * C801) * C92195 +
            ((C34996 + C34995) * C92084 + (C34994 + C34993) * C801) * C57967) *
               C46523) *
              C1384 +
          ((C35009 * C57967 +
            ((C35004 + C35003) * C801 + (C35002 + C35001) * C92084) * C92195) *
               C46523 +
           (((C36748 + C36747) * C801 + (C36750 + C36749) * C92084) * C57967 +
            ((C4327 * C10809 + C92336 * C11127 + C4328 * C32368 +
              C92171 * C32694) *
                 C801 +
             (C4327 * C10815 + C92336 * C11130 + C4328 * C32370 +
              C92171 * C32695) *
                 C92084) *
                C92195) *
               C92072) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C884 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C798 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C885 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C799 +
            (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C886 +
            (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
                C800) *
               C57967 +
           ((C34993 + C34994) * C884 + (C35098 + C35099) * C798 -
            (C37675 + C37674) * C885 - (C37788 + C37789) * C799 +
            (C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
             C92171 * C19090) *
                C886 +
            (C4327 * C8540 + C92336 * C8870 + C4328 * C18862 +
             C92171 * C19192) *
                C800) *
               C92195) *
              C46523 +
          (((C4355 + C4354) * C884 + (C4455 + C4456) * C798 -
            (C6805 + C6804) * C885 - (C6918 + C6919) * C799 +
            (C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C886 +
            (C4327 * C892 + C92336 * C1088 + C4328 * C4988 + C92171 * C5264) *
                C800) *
               C57967 +
           ((C7757 + C7758) * C884 + (C7871 + C7872) * C798 -
            (C4328 * C8413 + C92171 * C8767 + C4327 * C3432 + C92336 * C3662) *
                C885 -
            (C4328 * C8541 + C92171 * C8871 + C4327 * C3514 + C92336 * C3736) *
                C799 +
            (C4327 * C8413 + C92336 * C8767 + C4328 * C18733 +
             C92171 * C19091) *
                C886 +
            (C4327 * C8541 + C92336 * C8871 + C4328 * C18863 +
             C92171 * C19193) *
                C800) *
               C92195) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C181 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C92105) *
                C57967 +
            ((C34993 + C34994) * C181 + (C35098 + C35099) * C92105) * C92195) *
               C46523 +
           (((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C57967 +
            ((C7757 + C7758) * C181 + (C7871 + C7872) * C92105) * C92195) *
               C92072) *
              C93 -
          ((((C7874 + C7873) * C92105 + (C7762 + C7761) * C181) * C92195 +
            ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C57967) *
               C92072 +
           (((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C92195 +
            ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C57967) *
               C46523) *
              C94 +
          ((C4463 * C57967 +
            ((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C92195) *
               C46523 +
           (((C4362 + C4363) * C181 + (C4460 + C4459) * C92105) * C57967 +
            ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                 C181 +
             (C4327 * C1468 + C92336 * C1669 + C4328 * C3516 + C92171 * C3738) *
                 C92105) *
                C92195) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C181 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C92105) *
                C57967 +
            ((C34993 + C34994) * C181 + (C35098 + C35099) * C92105) * C92195) *
               C46523 +
           (((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C57967 +
            ((C7757 + C7758) * C181 + (C7871 + C7872) * C92105) * C92195) *
               C92072) *
              C92084 * C1383 -
          ((((C36853 + C36854) * C92105 + (C36747 + C36748) * C181) * C92195 +
            ((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C57967) *
               C92072 +
           (((C35101 + C35100) * C92105 + (C34998 + C34997) * C181) * C92195 +
            ((C35099 + C35098) * C92105 + (C34994 + C34993) * C181) * C57967) *
               C46523) *
              C92084 * C1384 +
          ((C35106 * C57967 +
            ((C35004 + C35003) * C181 + (C35103 + C35102) * C92105) * C92195) *
               C46523 +
           (((C36748 + C36747) * C181 + (C36854 + C36853) * C92105) * C57967 +
            ((C4327 * C10809 + C92336 * C11127 + C4328 * C32368 +
              C92171 * C32694) *
                 C181 +
             (C4327 * C10931 + C92336 * C11243 + C4328 * C32482 +
              C92171 * C32804) *
                 C92105) *
                C92195) *
               C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C34993 + C34994) * C244 + (C35195 + C35194) * C92116) * C92195) *
               C46523 +
           (((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C57967 +
            ((C7757 + C7758) * C244 + (C7982 + C7981) * C92116) * C92195) *
               C92072) *
              C798 -
          ((((C4328 * C8654 + C92171 * C8972 + C4327 * C3588 + C92336 * C3806) *
                 C92116 +
             (C4328 * C8413 + C92171 * C8767 + C4327 * C3432 + C92336 * C3662) *
                 C244) *
                C92195 +
            ((C7030 + C7031) * C92116 + (C6805 + C6804) * C244) * C57967) *
               C92072 +
           (((C37899 + C37898) * C92116 + (C37675 + C37674) * C244) * C92195 +
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C92116 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C244) *
                C57967) *
               C46523) *
              C799 +
          ((((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                 C244 +
             (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                 C92116) *
                C57967 +
            ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
              C92171 * C19090) *
                 C244 +
             (C4327 * C8653 + C92336 * C8971 + C4328 * C18976 +
              C92171 * C19292) *
                 C92116) *
                C92195) *
               C46523 +
           (((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                 C244 +
             (C4327 * C958 + C92336 * C1148 + C4328 * C5086 + C92171 * C5341) *
                 C92116) *
                C57967 +
            ((C4327 * C8413 + C92336 * C8767 + C4328 * C18733 +
              C92171 * C19091) *
                 C244 +
             (C4327 * C8654 + C92336 * C8972 + C4328 * C18977 +
              C92171 * C19293) *
                 C92116) *
                C92195) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C34993 + C34994) * C244 + (C35195 + C35194) * C92116) * C92195) *
               C46523 +
           (((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C57967 +
            ((C7757 + C7758) * C244 + (C7982 + C7981) * C92116) * C92195) *
               C92072) *
              C92105 * C93 -
          ((((C7983 + C7984) * C92116 + (C7762 + C7761) * C244) * C92195 +
            ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C57967) *
               C92072 +
           (((C7981 + C7982) * C92116 + (C7758 + C7757) * C244) * C92195 +
            ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C57967) *
               C46523) *
              C92105 * C94 +
          ((C4560 * C57967 +
            ((C7761 + C7762) * C244 + (C7984 + C7983) * C92116) * C92195) *
               C46523 +
           (((C4362 + C4363) * C244 + (C4557 + C4556) * C92116) * C57967 +
            ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                 C244 +
             (C4327 * C1537 + C92336 * C1733 + C4328 * C3590 + C92171 * C3808) *
                 C92116) *
                C92195) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1534 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C1383 -
            (C34994 + C34993) * C1535 - (C35194 + C35195) * C1384 +
            C35005 * C1536 + C35200 * C1385) *
               C57967 +
           ((C34993 + C34994) * C1534 + (C35195 + C35194) * C1383 -
            (C34998 + C34997) * C1535 - (C35197 + C35196) * C1384 +
            (C35004 + C35003) * C1536 + (C35198 + C35199) * C1385) *
               C92195) *
              C46523 +
          (((C4355 + C4354) * C1534 + (C4552 + C4553) * C1383 -
            (C7758 + C7757) * C1535 - (C7981 + C7982) * C1384 +
            (C36748 + C36747) * C1536 + (C36957 + C36958) * C1385) *
               C57967 +
           ((C7757 + C7758) * C1534 + (C7982 + C7981) * C1383 -
            (C36747 + C36748) * C1535 - (C36958 + C36957) * C1384 +
            (C4327 * C10809 + C92336 * C11127 + C4328 * C32368 +
             C92171 * C32694) *
                C1536 +
            (C4327 * C11029 + C92336 * C11340 + C4328 * C32588 +
             C92171 * C32910) *
                C1385) *
               C92195) *
              C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C46523 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
               C92336 +
           (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C46523 +
            ((C60758 + C60759) * C801 + (C60760 + C60761) * C92084) * C92072) *
               C92171) *
              C92116 * C798 -
          ((((C64430 + C64431) * C92084 + (C64432 + C64433) * C801) * C92072 +
            ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C46523) *
               C92171 +
           (((C60761 + C60760) * C92084 + (C60759 + C60758) * C801) * C92072 +
            ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C46523) *
               C92336) *
              C92116 * C799 +
          ((((C64437 + C64436) * C801 + (C64435 + C64434) * C92084) * C46523 +
            ((C64433 + C64432) * C801 + (C64431 + C64430) * C92084) * C92072) *
               C92336 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C801 +
             (C58419 * C4871 + C57967 * C5420 + C58420 * C18736 +
              C92195 * C19394) *
                 C92084) *
                C46523 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C801 +
             (C58419 * C4872 + C57967 * C5421 + C58420 * C18737 +
              C92195 * C19395) *
                 C92084) *
                C92072) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C104 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C93 -
            (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
            C58459 * C95) *
               C46523 +
           ((C58447 + C58446) * C104 + (C58449 + C58448) * C93 -
            (C58451 + C58450) * C105 - (C58453 + C58452) * C94 +
            (C58454 + C58455) * C106 + (C58456 + C58457) * C95) *
               C92072) *
              C92336 +
          (((C58419 * C805 + C57967 * C1204 + C58420 * C3431 + C92195 * C3875) *
                C104 +
            (C58419 * C813 + C57967 * C1212 + C58420 * C3439 + C92195 * C3879) *
                C93 -
            (C60759 + C60758) * C105 - (C60761 + C60760) * C94 +
            (C60762 + C60763) * C106 + (C60764 + C60765) * C95) *
               C46523 +
           ((C60758 + C60759) * C104 + (C60760 + C60761) * C93 -
            (C60763 + C60762) * C105 - (C60765 + C60764) * C94 +
            (C58419 * C802 + C57967 * C1201 + C58420 * C3434 + C92195 * C3878) *
                C106 +
            (C58419 * C810 + C57967 * C1209 + C58420 * C3442 + C92195 * C3882) *
                C95) *
               C92072) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C46523 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
               C92336 +
           (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C46523 +
            ((C60758 + C60759) * C801 + (C60760 + C60761) * C92084) * C92072) *
               C92171) *
              C1383 -
          ((((C58420 * C5726 + C92195 * C6203 + C58419 * C3440 +
              C57967 * C3880) *
                 C92084 +
             (C58420 * C5720 + C92195 * C6200 + C58419 * C3432 +
              C57967 * C3876) *
                 C801) *
                C92072 +
            ((C58420 * C5725 + C92195 * C6202 + C58419 * C3439 +
              C57967 * C3879) *
                 C92084 +
             (C58420 * C5719 + C92195 * C6199 + C58419 * C3431 +
              C57967 * C3875) *
                 C801) *
                C46523) *
               C92171 +
           (((C61727 + C61726) * C92084 + (C61725 + C61724) * C801) * C92072 +
            ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
              C57967 * C1796) *
                 C92084 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C801) *
                C46523) *
               C92336) *
              C1384 +
          ((((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
              C92195 * C11428) *
                 C801 +
             (C58419 * C1406 + C57967 * C1797 + C58420 * C10814 +
              C92195 * C11431) *
                 C92084) *
                C46523 +
            ((C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
              C92195 * C11429) *
                 C801 +
             (C58419 * C1407 + C57967 * C1798 + C58420 * C10815 +
              C92195 * C11432) *
                 C92084) *
                C92072) *
               C92336 +
           (((C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
              C92195 * C25132) *
                 C801 +
             (C58419 * C5725 + C57967 * C6202 + C58420 * C24527 +
              C92195 * C25134) *
                 C92084) *
                C46523 +
            ((C58419 * C5720 + C57967 * C6200 + C58420 * C32368 +
              C92195 * C33012) *
                 C801 +
             (C58419 * C5726 + C57967 * C6203 + C58420 * C32370 +
              C92195 * C33013) *
                 C92084) *
                C92072) *
               C92171) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C884 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C798 -
            (C64427 + C64426) * C885 - (C64548 + C64549) * C799 +
            (C64437 + C64436) * C886 + (C64550 + C64551) * C800) *
               C46523 +
           ((C58447 + C58446) * C884 + (C58547 + C58548) * C798 -
            (C60759 + C60758) * C885 - (C60872 + C60873) * C799 +
            (C64433 + C64432) * C886 + (C64552 + C64553) * C800) *
               C92072) *
              C92336 +
          (((C64426 + C64427) * C884 + (C64549 + C64548) * C798 -
            (C64436 + C64437) * C885 - (C64551 + C64550) * C799 +
            (C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
             C92195 * C19392) *
                C886 +
            (C58419 * C4987 + C57967 * C5533 + C58420 * C18862 +
             C92195 * C19504) *
                C800) *
               C46523 +
           ((C60758 + C60759) * C884 + (C60873 + C60872) * C798 -
            (C64432 + C64433) * C885 - (C64553 + C64552) * C799 +
            (C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
             C92195 * C19393) *
                C886 +
            (C58419 * C4988 + C57967 * C5534 + C58420 * C18863 +
             C92195 * C19505) *
                C800) *
               C92072) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C46523 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
               C92336 +
           (((C58419 * C805 + C57967 * C1204 + C58420 * C3431 +
              C92195 * C3875) *
                 C181 +
             (C58419 * C890 + C57967 * C1267 + C58420 * C3513 +
              C92195 * C3949) *
                 C92105) *
                C46523 +
            ((C60758 + C60759) * C181 + (C60873 + C60872) * C92105) * C92072) *
               C92171) *
              C93 -
          ((((C60874 + C60875) * C92105 + (C60763 + C60762) * C181) * C92072 +
            ((C60872 + C60873) * C92105 + (C60759 + C60758) * C181) * C46523) *
               C92171 +
           (((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92072 +
            ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C46523) *
               C92336) *
              C94 +
          ((C58555 * C46523 +
            ((C58454 + C58455) * C181 + (C58552 + C58551) * C92105) * C92072) *
               C92336 +
           (((C60762 + C60763) * C181 + (C60875 + C60874) * C92105) * C46523 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C181 +
             (C58419 * C887 + C57967 * C1273 + C58420 * C3516 +
              C92195 * C3952) *
                 C92105) *
                C92072) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C46523 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
               C92336 +
           (((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C46523 +
            ((C60758 + C60759) * C181 + (C60873 + C60872) * C92105) * C92072) *
               C92171) *
              C92084 * C1383 -
          ((((C58420 * C5806 + C92195 * C6280 + C58419 * C3514 +
              C57967 * C3950) *
                 C92105 +
             (C58420 * C5720 + C92195 * C6200 + C58419 * C3432 +
              C57967 * C3876) *
                 C181) *
                C92072 +
            ((C58420 * C5805 + C92195 * C6279 + C58419 * C3513 +
              C57967 * C3949) *
                 C92105 +
             (C58420 * C5719 + C92195 * C6199 + C58419 * C3431 +
              C57967 * C3875) *
                 C181) *
                C46523) *
               C92171 +
           (((C61839 + C61838) * C92105 + (C61725 + C61724) * C181) * C92072 +
            ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
              C57967 * C1854) *
                 C92105 +
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C181) *
                C46523) *
               C92336) *
              C92084 * C1384 +
          ((((C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
              C92195 * C11428) *
                 C181 +
             (C58419 * C1472 + C57967 * C1855 + C58420 * C10930 +
              C92195 * C11508) *
                 C92105) *
                C46523 +
            ((C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
              C92195 * C11429) *
                 C181 +
             (C58419 * C1473 + C57967 * C1856 + C58420 * C10931 +
              C92195 * C11509) *
                 C92105) *
                C92072) *
               C92336 +
           (((C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
              C92195 * C25132) *
                 C181 +
             (C58419 * C5805 + C57967 * C6279 + C58420 * C24638 +
              C92195 * C25210) *
                 C92105) *
                C46523 +
            ((C58419 * C5720 + C57967 * C6200 + C58420 * C32368 +
              C92195 * C33012) *
                 C181 +
             (C58419 * C5806 + C57967 * C6280 + C58420 * C32482 +
              C92195 * C33112) *
                 C92105) *
                C92072) *
               C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C92336 +
           (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C46523 +
            ((C60758 + C60759) * C244 + (C60985 + C60984) * C92116) * C92072) *
               C92171) *
              C798 -
          ((((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92072 +
            ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C46523) *
               C92171 +
           (((C60984 + C60985) * C92116 + (C60759 + C60758) * C244) * C92072 +
            ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C46523) *
               C92336) *
              C799 +
          ((((C64437 + C64436) * C244 + (C64669 + C64668) * C92116) * C46523 +
            ((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C92072) *
               C92336 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C244 +
             (C58419 * C5085 + C57967 * C5622 + C58420 * C18976 +
              C92195 * C19607) *
                 C92116) *
                C46523 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C58419 * C5086 + C57967 * C5623 + C58420 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92072) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C92336 +
           (((C58419 * C805 + C57967 * C1204 + C58420 * C3431 +
              C92195 * C3875) *
                 C244 +
             (C58419 * C956 + C57967 * C1328 + C58420 * C3587 +
              C92195 * C4019) *
                 C92116) *
                C46523 +
            ((C60758 + C60759) * C244 + (C60985 + C60984) * C92116) * C92072) *
               C92171) *
              C92105 * C93 -
          ((((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C92072 +
            ((C60984 + C60985) * C92116 + (C60759 + C60758) * C244) * C46523) *
               C92171 +
           (((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92072 +
            ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C46523) *
               C92336) *
              C92105 * C94 +
          ((C58651 * C46523 +
            ((C58454 + C58455) * C244 + (C58648 + C58647) * C92116) * C92072) *
               C92336 +
           (((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C46523 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C244 +
             (C58419 * C953 + C57967 * C1325 + C58420 * C3590 +
              C92195 * C4022) *
                 C92116) *
                C92072) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C1534 +
            (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                C1383 -
            (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
             C57967 * C1788) *
                C1535 -
            (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
             C57967 * C1909) *
                C1384 +
            (C58419 * C1390 + C57967 * C1789 + C58420 * C10808 +
             C92195 * C11428) *
                C1536 +
            (C58419 * C1541 + C57967 * C1910 + C58420 * C11028 +
             C92195 * C11585) *
                C1385) *
               C46523 +
           ((C58447 + C58446) * C1534 + (C58643 + C58644) * C1383 -
            (C61725 + C61724) * C1535 - (C61948 + C61949) * C1384 +
            (C58419 * C1391 + C57967 * C1790 + C58420 * C10809 +
             C92195 * C11429) *
                C1536 +
            (C58419 * C1542 + C57967 * C1912 + C58420 * C11029 +
             C92195 * C11586) *
                C1385) *
               C92072) *
              C92336 +
          (((C64426 + C64427) * C1534 + (C64664 + C64665) * C1383 -
            (C58420 * C5719 + C92195 * C6199 + C58419 * C3431 +
             C57967 * C3875) *
                C1535 -
            (C58420 * C5885 + C92195 * C6356 + C58419 * C3587 +
             C57967 * C4019) *
                C1384 +
            (C58419 * C5719 + C57967 * C6199 + C58420 * C24524 +
             C92195 * C25132) *
                C1536 +
            (C58419 * C5885 + C57967 * C6356 + C58420 * C24740 +
             C92195 * C25286) *
                C1385) *
               C46523 +
           ((C60758 + C60759) * C1534 + (C60985 + C60984) * C1383 -
            (C58420 * C5720 + C92195 * C6200 + C58419 * C3432 +
             C57967 * C3876) *
                C1535 -
            (C58420 * C5886 + C92195 * C6357 + C58419 * C3588 +
             C57967 * C4020) *
                C1384 +
            (C58419 * C5720 + C57967 * C6200 + C58420 * C32368 +
             C92195 * C33012) *
                C1536 +
            (C58419 * C5886 + C57967 * C6357 + C58420 * C32588 +
             C92195 * C33211) *
                C1385) *
               C92072) *
              C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C1987 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C1983 -
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C1988 -
             (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                 C1984) *
                C92336 +
            ((C47296 + C47297) * C1987 + (C47298 + C47299) * C1983 -
             (C48732 + C48733) * C1988 - (C48734 + C48735) * C1984) *
                C92171) *
               C57967 +
           (((C53318 + C53319) * C1987 + (C53320 + C53321) * C1983 -
             (C55592 + C55593) * C1988 - (C55594 + C55595) * C1984) *
                C92336 +
            (C56816 * C1987 + C56817 * C1983 - (C54360 + C54361) * C1988 -
             (C54362 + C54363) * C1984) *
                C92171) *
               C92195) *
              C2709 +
          ((((C55593 + C55592) * C1988 -
             ((C53321 + C53320) * C1983 + (C53319 + C53318) * C1987) +
             (C55595 + C55594) * C1984) *
                C92336 +
            ((C54361 + C54360) * C1988 - (C56818 * C1983 + C56819 * C1987) +
             (C54363 + C54362) * C1984) *
                C92171) *
               C57967 +
           (((C46528 * C1391 + C46523 * C1403 + C46529 * C1392 +
              C92072 * C1404) *
                 C1988 -
             ((C53326 + C53327) * C1983 + (C53328 + C53329) * C1987) +
             (C46528 * C1407 + C46523 * C1415 + C46529 * C1408 +
              C92072 * C1416) *
                 C1984) *
                C92336 +
            ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
              C92072 * C5724) *
                 C1988 -
             ((C53322 + C53323) * C1983 + (C53324 + C53325) * C1987) +
             (C46528 * C5726 + C46523 * C5729 + C46529 * C5727 +
              C92072 * C5730) *
                 C1984) *
                C92171) *
               C92195) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eexy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                  C181 +
              (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                  C92105) *
                 C92336 +
             ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
                C57967 +
            (((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92336 +
             (C56816 * C181 + C56957 * C92105) * C92171) *
                C92195) *
               C1983 -
           ((((C54499 + C54498) * C92105 + (C54360 + C54361) * C181) * C92171 +
             ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C92336) *
                C92195 +
            (((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92171 +
             ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                  C92105 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C181) *
                 C92336) *
                C57967) *
               C1984) *
              C2709 +
          (((((C55593 + C55592) * C181 + (C55731 + C55730) * C92105) * C92336 +
             ((C54361 + C54360) * C181 + (C54498 + C54499) * C92105) * C92171) *
                C57967 +
            (((C46528 * C1391 + C46523 * C1403 + C46529 * C1392 +
               C92072 * C1404) *
                  C181 +
              (C46528 * C1473 + C46523 * C1481 + C46529 * C1474 +
               C92072 * C1482) *
                  C92105) *
                 C92336 +
             ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
               C92072 * C5724) *
                  C181 +
              (C46528 * C5806 + C46523 * C5809 + C46529 * C5807 +
               C92072 * C5810) *
                  C92105) *
                 C92171) *
                C92195) *
               C1984 -
           ((((C53442 + C53443) * C92105 + (C53324 + C53325) * C181) * C92171 +
             ((C53444 + C53445) * C92105 + (C53328 + C53329) * C181) * C92336) *
                C92195 +
            ((C56956 * C92105 + C56819 * C181) * C92171 +
             ((C53441 + C53440) * C92105 + (C53319 + C53318) * C181) * C92336) *
                C57967) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C2849 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C2709 -
             (C53319 + C53318) * C2850 - (C53556 + C53557) * C2710) *
                C92336 +
            ((C47296 + C47297) * C2849 + (C47493 + C47494) * C2709 -
             C56819 * C2850 - C57088 * C2710) *
                C92171) *
               C57967 +
           (((C53318 + C53319) * C2849 + (C53557 + C53556) * C2709 -
             (C53328 + C53329) * C2850 - (C53559 + C53558) * C2710) *
                C92336 +
            (C56816 * C2849 + C57089 * C2709 - (C53324 + C53325) * C2850 -
             (C53561 + C53560) * C2710) *
                C92171) *
               C92195) *
              C92105 * C1983 +
          ((((C55593 + C55592) * C2850 -
             ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                  C2709 +
              (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                  C2849) +
             (C55866 + C55867) * C2710) *
                C92336 +
            ((C54361 + C54360) * C2850 -
             ((C48957 + C48956) * C2709 + (C48732 + C48733) * C2849) +
             (C54634 + C54635) * C2710) *
                C92171) *
               C57967 +
           (((C46528 * C1391 + C46523 * C1403 + C46529 * C1392 +
              C92072 * C1404) *
                 C2850 -
             ((C55867 + C55866) * C2709 + (C55592 + C55593) * C2849) +
             (C46528 * C1542 + C46523 * C1550 + C46529 * C1543 +
              C92072 * C1551) *
                 C2710) *
                C92336 +
            ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
              C92072 * C5724) *
                 C2850 -
             ((C54635 + C54634) * C2709 + (C54360 + C54361) * C2849) +
             (C46528 * C5886 + C46523 * C5889 + C46529 * C5887 +
              C92072 * C5890) *
                 C2710) *
                C92171) *
               C92195) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C1987 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C1983 -
             (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
                C57967 +
            ((C34993 + C34994) * C1987 + (C34995 + C34996) * C1983 -
             C67280 * C1988 - C67281 * C1984) *
                C92195) *
               C46523 +
           (((C4355 + C4354) * C1987 + (C4357 + C4356) * C1983 -
             (C4359 + C4358) * C1988 - (C4361 + C4360) * C1984) *
                C57967 +
            (C67282 * C1987 + C67283 * C1983 - (C7762 + C7761) * C1988 -
             (C7764 + C7763) * C1984) *
                C92195) *
               C92072) *
              C2709 +
          (((C67282 * C1988 -
             ((C34996 + C34995) * C1983 + (C34994 + C34993) * C1987) +
             C67283 * C1984) *
                C57967 +
            ((C36748 + C36747) * C1988 -
             ((C35000 + C34999) * C1983 + (C34998 + C34997) * C1987) +
             (C36750 + C36749) * C1984) *
                C92195) *
               C46523 +
           (((C7761 + C7762) * C1988 - (C67281 * C1983 + C67280 * C1987) +
             (C7763 + C7764) * C1984) *
                C57967 +
            ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                 C1988 -
             ((C36749 + C36750) * C1983 + (C36747 + C36748) * C1987) +
             (C4327 * C1408 + C92336 * C1617 + C4328 * C5727 + C92171 * C5970) *
                 C1984) *
                C92195) *
               C92072) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                  C181 +
              (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                  C92105) *
                 C57967 +
             ((C34993 + C34994) * C181 + (C35098 + C35099) * C92105) * C92195) *
                C46523 +
            (((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C57967 +
             C67420 * C92195) *
                C92072) *
               C1983 -
           ((((C7874 + C7873) * C92105 + (C7762 + C7761) * C181) * C92195 +
             ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C57967) *
                C92072 +
            (C67421 * C92195 +
             ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C57967) *
                C46523) *
               C1984) *
              C2709 +
          (((C67420 * C57967 +
             ((C36748 + C36747) * C181 + (C36854 + C36853) * C92105) * C92195) *
                C46523 +
            (((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C57967 +
             ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 +
               C92171 * C5967) *
                  C181 +
              (C4327 * C1474 + C92336 * C1675 + C4328 * C5807 +
               C92171 * C6047) *
                  C92105) *
                 C92195) *
                C92072) *
               C1984 -
           ((((C36853 + C36854) * C92105 + (C36747 + C36748) * C181) * C92195 +
             C67421 * C57967) *
                C92072 +
            (((C35101 + C35100) * C92105 + (C34998 + C34997) * C181) * C92195 +
             ((C35099 + C35098) * C92105 + (C34994 + C34993) * C181) * C57967) *
                C46523) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C2849 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C2709 -
             (C34994 + C34993) * C2850 - (C35194 + C35195) * C2710) *
                C57967 +
            ((C34993 + C34994) * C2849 + (C35195 + C35194) * C2709 -
             (C34998 + C34997) * C2850 - (C35197 + C35196) * C2710) *
                C92195) *
               C46523 +
           (((C4355 + C4354) * C2849 + (C4552 + C4553) * C2709 -
             C67280 * C2850 - C67552 * C2710) *
                C57967 +
            (C67282 * C2849 + C67553 * C2709 - (C36747 + C36748) * C2850 -
             (C36958 + C36957) * C2710) *
                C92195) *
               C92072) *
              C92105 * C1983 +
          (((C67282 * C2850 -
             ((C4553 + C4552) * C2709 + (C4354 + C4355) * C2849) +
             C67553 * C2710) *
                C57967 +
            ((C36748 + C36747) * C2850 - (C67552 * C2709 + C67280 * C2849) +
             (C36957 + C36958) * C2710) *
                C92195) *
               C46523 +
           (((C7761 + C7762) * C2850 -
             ((C4555 + C4554) * C2709 + (C4359 + C4358) * C2849) +
             (C7984 + C7983) * C2710) *
                C57967 +
            ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                 C2850 -
             ((C7983 + C7984) * C2709 + (C7762 + C7761) * C2849) +
             (C4327 * C1543 + C92336 * C1732 + C4328 * C5887 + C92171 * C6124) *
                 C2710) *
                C92195) *
               C92072) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C1987 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C1983 -
             (C58446 + C58447) * C1988 - (C58448 + C58449) * C1984) *
                C46523 +
            ((C58447 + C58446) * C1987 + (C58449 + C58448) * C1983 -
             (C58451 + C58450) * C1988 - (C58453 + C58452) * C1984) *
                C92072) *
               C92336 +
           (((C64426 + C64427) * C1987 + (C64428 + C64429) * C1983 -
             C66486 * C1988 - C66487 * C1984) *
                C46523 +
            (C66488 * C1987 + C66489 * C1983 - (C60763 + C60762) * C1988 -
             (C60765 + C60764) * C1984) *
                C92072) *
               C92171) *
              C2709 +
          ((((C61724 + C61725) * C1988 -
             ((C58420 * C1406 + C92195 * C1797 + C58419 * C1397 +
               C57967 * C1796) *
                  C1983 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C1987) +
             (C61726 + C61727) * C1984) *
                C46523 +
            ((C61728 + C61729) * C1988 -
             ((C61727 + C61726) * C1983 + (C61725 + C61724) * C1987) +
             (C61730 + C61731) * C1984) *
                C92072) *
               C92336 +
           (((C67692 + C67693) * C1988 -
             ((C58420 * C5725 + C92195 * C6202 + C58419 * C3439 +
               C57967 * C3879) *
                  C1983 +
              (C58420 * C5719 + C92195 * C6199 + C58419 * C3431 +
               C57967 * C3875) *
                  C1987) +
             (C67694 + C67695) * C1984) *
                C46523 +
            ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
              C92195 * C6201) *
                 C1988 -
             ((C67695 + C67694) * C1983 + (C67693 + C67692) * C1987) +
             (C58419 * C3441 + C57967 * C3881 + C58420 * C5727 +
              C92195 * C6204) *
                 C1984) *
                C92072) *
               C92171) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eezy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C58419 * C107 + C57967 * C555 + C58420 * C1389 +
               C92195 * C1788) *
                  C181 +
              (C58419 * C182 + C57967 * C641 + C58420 * C1471 +
               C92195 * C1854) *
                  C92105) *
                 C46523 +
             ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
                C92336 +
            (((C64426 + C64427) * C181 + (C64549 + C64548) * C92105) * C46523 +
             (C66488 * C181 + C66621 * C92105) * C92072) *
                C92171) *
               C1983 -
           ((((C60874 + C60875) * C92105 + (C60763 + C60762) * C181) * C92072 +
             (C66620 * C92105 + C66486 * C181) * C46523) *
                C92171 +
            (((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92072 +
             ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C46523) *
                C92336) *
               C1984) *
              C2709 +
          (((((C61724 + C61725) * C181 + (C61838 + C61839) * C92105) * C46523 +
             ((C61728 + C61729) * C181 + (C61840 + C61841) * C92105) * C92072) *
                C92336 +
            (((C67692 + C67693) * C181 + (C67830 + C67831) * C92105) * C46523 +
             ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
               C92195 * C6201) *
                  C181 +
              (C58419 * C3515 + C57967 * C3951 + C58420 * C5807 +
               C92195 * C6281) *
                  C92105) *
                 C92072) *
                C92171) *
               C1984 -
           ((((C67831 + C67830) * C92105 + (C67693 + C67692) * C181) * C92072 +
             ((C58420 * C5805 + C92195 * C6279 + C58419 * C3513 +
               C57967 * C3949) *
                  C92105 +
              (C58420 * C5719 + C92195 * C6199 + C58419 * C3431 +
               C57967 * C3875) *
                  C181) *
                 C46523) *
                C92171 +
            (((C61839 + C61838) * C92105 + (C61725 + C61724) * C181) * C92072 +
             ((C58420 * C1472 + C92195 * C1855 + C58419 * C1471 +
               C57967 * C1854) *
                  C92105 +
              (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
               C57967 * C1788) *
                  C181) *
                 C46523) *
                C92336) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C2849 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C2709 -
             (C58420 * C1390 + C92195 * C1789 + C58419 * C1389 +
              C57967 * C1788) *
                 C2850 -
             (C58420 * C1541 + C92195 * C1910 + C58419 * C1540 +
              C57967 * C1909) *
                 C2710) *
                C46523 +
            ((C58447 + C58446) * C2849 + (C58643 + C58644) * C2709 -
             (C61725 + C61724) * C2850 - (C61948 + C61949) * C2710) *
                C92072) *
               C92336 +
           (((C64426 + C64427) * C2849 + (C64664 + C64665) * C2709 -
             (C58420 * C5719 + C92195 * C6199 + C58419 * C3431 +
              C57967 * C3875) *
                 C2850 -
             (C58420 * C5885 + C92195 * C6356 + C58419 * C3587 +
              C57967 * C4019) *
                 C2710) *
                C46523 +
            (C66488 * C2849 + C66753 * C2709 - (C67693 + C67692) * C2850 -
             (C67966 + C67967) * C2710) *
                C92072) *
               C92171) *
              C92105 * C1983 +
          ((((C61724 + C61725) * C2850 -
             ((C58644 + C58643) * C2709 + (C58446 + C58447) * C2849) +
             (C61949 + C61948) * C2710) *
                C46523 +
            ((C61728 + C61729) * C2850 -
             ((C58646 + C58645) * C2709 + (C58451 + C58450) * C2849) +
             (C61951 + C61950) * C2710) *
                C92072) *
               C92336 +
           (((C67692 + C67693) * C2850 - (C66754 * C2709 + C66486 * C2849) +
             (C67967 + C67966) * C2710) *
                C46523 +
            ((C58419 * C3433 + C57967 * C3877 + C58420 * C5721 +
              C92195 * C6201) *
                 C2850 -
             ((C60982 + C60983) * C2709 + (C60763 + C60762) * C2849) +
             (C58419 * C3589 + C57967 * C4021 + C58420 * C5887 +
              C92195 * C6358) *
                 C2710) *
                C92072) *
               C92171) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C104 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C93 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C105 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C94 +
            (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C106 +
            (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
                C95) *
               C92336 +
           ((C47296 + C47297) * C104 + (C47298 + C47299) * C93 -
            (C48732 + C48733) * C105 - (C48734 + C48735) * C94 +
            (C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                C106 +
            (C46528 * C811 + C46523 * C827 + C46529 * C810 + C92072 * C826) *
                C95) *
               C92171) *
              C57967 +
          (((C53318 + C53319) * C104 + (C53320 + C53321) * C93 -
            (C55592 + C55593) * C105 - (C55594 + C55595) * C94 +
            (C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C106 +
            (C46528 * C1395 + C46523 * C1411 + C46529 * C1394 +
             C92072 * C1410) *
                C95) *
               C92336 +
           (C56816 * C104 + C56817 * C93 - (C54360 + C54361) * C105 -
            (C54362 + C54363) * C94 +
            (C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
             C92072 * C3438) *
                C106 +
            (C46528 * C3441 + C46523 * C3445 + C46529 * C3442 +
             C92072 * C3446) *
                C95) *
               C92171) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C92336 +
            ((C47296 + C47297) * C801 + (C47298 + C47299) * C92084) * C92171) *
               C57967 +
           (((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92336 +
            C56824 * C92171) *
               C92195) *
              C92116 * C798 -
          ((((C50616 + C50617) * C92084 + (C50618 + C50619) * C801) * C92171 +
            C56825 * C92336) *
               C92195 +
           (((C47303 + C47302) * C92084 + (C47301 + C47300) * C801) * C92171 +
            ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92336) *
               C57967) *
              C92116 * C799 +
          ((C47312 * C92336 +
            ((C47307 + C47306) * C801 + (C47305 + C47304) * C92084) * C92171) *
               C57967 +
           (((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92336 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C46528 * C18736 + C46523 * C18738 + C46529 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C92171) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C92336 +
            ((C47296 + C47297) * C181 + (C47400 + C47399) * C92105) * C92171) *
               C57967 +
           (((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92336 +
            (C56816 * C181 + C56957 * C92105) * C92171) *
               C92195) *
              C93 -
          ((((C54499 + C54498) * C92105 + (C54360 + C54361) * C181) * C92171 +
            ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C92336) *
               C92195 +
           (((C48847 + C48846) * C92105 + (C48732 + C48733) * C181) * C92171 +
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C92105 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C181) *
                C92336) *
               C57967) *
              C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C181 +
             (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                 C92105) *
                C92336 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C181 +
             (C46528 * C888 + C46523 * C896 + C46529 * C887 + C92072 * C895) *
                 C92105) *
                C92171) *
               C57967 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C181 +
             (C46528 * C1469 + C46523 * C1477 + C46529 * C1468 +
              C92072 * C1476) *
                 C92105) *
                C92336 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C181 +
             (C46528 * C3515 + C46523 * C3519 + C46529 * C3516 +
              C92072 * C3520) *
                 C92105) *
                C92171) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C884 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C798 -
            (C47297 + C47296) * C885 - (C47399 + C47400) * C799 +
            C47308 * C886 + C47405 * C800) *
               C92336 +
           ((C47296 + C47297) * C884 + (C47400 + C47399) * C798 -
            (C47301 + C47300) * C885 - (C47402 + C47401) * C799 +
            (C47307 + C47306) * C886 + (C47403 + C47404) * C800) *
               C92171) *
              C57967 +
          (((C53318 + C53319) * C884 + (C53440 + C53441) * C798 -
            C56819 * C885 - C56956 * C799 + (C50619 + C50618) * C886 +
            (C50732 + C50733) * C800) *
               C92336 +
           (C56816 * C884 + C56957 * C798 - (C50618 + C50619) * C885 -
            (C50733 + C50732) * C799 +
            (C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
             C92072 * C18735) *
                C886 +
            (C46528 * C18862 + C46523 * C18864 + C46529 * C18863 +
             C92072 * C18865) *
                C800) *
               C92171) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C92336 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C57967 +
           (((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92336 +
            (C56816 * C244 + C57089 * C92116) * C92171) *
               C92195) *
              C92105 * C93 -
          ((((C54635 + C54634) * C92116 + (C54360 + C54361) * C244) * C92171 +
            ((C55867 + C55866) * C92116 + (C55592 + C55593) * C244) * C92336) *
               C92195 +
           (((C48957 + C48956) * C92116 + (C48732 + C48733) * C244) * C92171 +
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C92116 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C244) *
                C92336) *
               C57967) *
              C92105 * C94 +
          ((((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                 C244 +
             (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                 C92116) *
                C92336 +
            ((C46528 * C803 + C46523 * C815 + C46529 * C802 + C92072 * C814) *
                 C244 +
             (C46528 * C954 + C46523 * C962 + C46529 * C953 + C92072 * C961) *
                 C92116) *
                C92171) *
               C57967 +
           (((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
              C92072 * C1398) *
                 C244 +
             (C46528 * C1538 + C46523 * C1546 + C46529 * C1537 +
              C92072 * C1545) *
                 C92116) *
                C92336 +
            ((C46528 * C3433 + C46523 * C3437 + C46529 * C3434 +
              C92072 * C3438) *
                 C244 +
             (C46528 * C3589 + C46523 * C3593 + C46529 * C3590 +
              C92072 * C3594) *
                 C92116) *
                C92171) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C92336 +
            ((C47296 + C47297) * C244 + (C47493 + C47494) * C92116) * C92171) *
               C57967 +
           (((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92336 +
            (C56816 * C244 + C57089 * C92116) * C92171) *
               C92195) *
              C798 -
          ((((C50842 + C50843) * C92116 + (C50618 + C50619) * C244) * C92171 +
            (C57088 * C92116 + C56819 * C244) * C92336) *
               C92195 +
           (((C47496 + C47495) * C92116 + (C47301 + C47300) * C244) * C92171 +
            ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92336) *
               C57967) *
              C799 +
          ((C47501 * C92336 +
            ((C47307 + C47306) * C244 + (C47498 + C47497) * C92116) * C92171) *
               C57967 +
           (((C50619 + C50618) * C244 + (C50843 + C50842) * C92116) * C92336 +
            ((C46528 * C18732 + C46523 * C18734 + C46529 * C18733 +
              C92072 * C18735) *
                 C244 +
             (C46528 * C18976 + C46523 * C18978 + C46529 * C18977 +
              C92072 * C18979) *
                 C92116) *
                C92171) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C104 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C93 -
            (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
            C4367 * C95) *
               C57967 +
           ((C34993 + C34994) * C104 + (C34995 + C34996) * C93 -
            (C7758 + C7757) * C105 - (C7760 + C7759) * C94 +
            (C7761 + C7762) * C106 + (C7763 + C7764) * C95) *
               C92195) *
              C46523 +
          (((C4355 + C4354) * C104 + (C4357 + C4356) * C93 -
            (C4359 + C4358) * C105 - (C4361 + C4360) * C94 +
            (C4362 + C4363) * C106 + (C4364 + C4365) * C95) *
               C57967 +
           ((C7757 + C7758) * C104 + (C7759 + C7760) * C93 -
            (C7762 + C7761) * C105 - (C7764 + C7763) * C94 +
            (C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                C106 +
            (C4327 * C1394 + C92336 * C1611 + C4328 * C3442 + C92171 * C3668) *
                C95) *
               C92195) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C801 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C92084) *
                C57967 +
            ((C34993 + C34994) * C801 + (C34995 + C34996) * C92084) * C92195) *
               C46523 +
           (((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C57967 +
            ((C7757 + C7758) * C801 + (C7759 + C7760) * C92084) * C92195) *
               C92072) *
              C92116 * C798 -
          ((((C4328 * C8419 + C92171 * C8770 + C4327 * C3440 + C92336 * C3666) *
                 C92084 +
             (C4328 * C8413 + C92171 * C8767 + C4327 * C3432 + C92336 * C3662) *
                 C801) *
                C92195 +
            ((C6807 + C6806) * C92084 + (C6805 + C6804) * C801) * C57967) *
               C92072 +
           (((C37677 + C37676) * C92084 + (C37675 + C37674) * C801) * C92195 +
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C92084 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C801) *
                C57967) *
               C46523) *
              C92116 * C799 +
          ((((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                 C801 +
             (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                 C92084) *
                C57967 +
            ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
              C92171 * C19090) *
                 C801 +
             (C4327 * C8418 + C92336 * C8769 + C4328 * C18736 +
              C92171 * C19092) *
                 C92084) *
                C92195) *
               C46523 +
           (((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                 C801 +
             (C4327 * C823 + C92336 * C1032 + C4328 * C4872 + C92171 * C5187) *
                 C92084) *
                C57967 +
            ((C4327 * C8413 + C92336 * C8767 + C4328 * C18733 +
              C92171 * C19091) *
                 C801 +
             (C4327 * C8419 + C92336 * C8770 + C4328 * C18737 +
              C92171 * C19093) *
                 C92084) *
                C92195) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C181 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C92105) *
                C57967 +
            ((C34993 + C34994) * C181 + (C35098 + C35099) * C92105) * C92195) *
               C46523 +
           (((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C57967 +
            ((C7757 + C7758) * C181 + (C7871 + C7872) * C92105) * C92195) *
               C92072) *
              C93 -
          ((((C7874 + C7873) * C92105 + (C7762 + C7761) * C181) * C92195 +
            ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C57967) *
               C92072 +
           (((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C92195 +
            ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C57967) *
               C46523) *
              C94 +
          ((C4463 * C57967 +
            ((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C92195) *
               C46523 +
           (((C4362 + C4363) * C181 + (C4460 + C4459) * C92105) * C57967 +
            ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                 C181 +
             (C4327 * C1468 + C92336 * C1669 + C4328 * C3516 + C92171 * C3738) *
                 C92105) *
                C92195) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C884 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C798 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C885 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C799 +
            (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C886 +
            (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
                C800) *
               C57967 +
           ((C34993 + C34994) * C884 + (C35098 + C35099) * C798 -
            (C37675 + C37674) * C885 - (C37788 + C37789) * C799 +
            (C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
             C92171 * C19090) *
                C886 +
            (C4327 * C8540 + C92336 * C8870 + C4328 * C18862 +
             C92171 * C19192) *
                C800) *
               C92195) *
              C46523 +
          (((C4355 + C4354) * C884 + (C4455 + C4456) * C798 -
            (C6805 + C6804) * C885 - (C6918 + C6919) * C799 +
            (C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C886 +
            (C4327 * C892 + C92336 * C1088 + C4328 * C4988 + C92171 * C5264) *
                C800) *
               C57967 +
           ((C7757 + C7758) * C884 + (C7871 + C7872) * C798 -
            (C4328 * C8413 + C92171 * C8767 + C4327 * C3432 + C92336 * C3662) *
                C885 -
            (C4328 * C8541 + C92171 * C8871 + C4327 * C3514 + C92336 * C3736) *
                C799 +
            (C4327 * C8413 + C92336 * C8767 + C4328 * C18733 +
             C92171 * C19091) *
                C886 +
            (C4327 * C8541 + C92336 * C8871 + C4328 * C18863 +
             C92171 * C19193) *
                C800) *
               C92195) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C34993 + C34994) * C244 + (C35195 + C35194) * C92116) * C92195) *
               C46523 +
           (((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C57967 +
            ((C7757 + C7758) * C244 + (C7982 + C7981) * C92116) * C92195) *
               C92072) *
              C92105 * C93 -
          ((((C7983 + C7984) * C92116 + (C7762 + C7761) * C244) * C92195 +
            ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C57967) *
               C92072 +
           (((C7981 + C7982) * C92116 + (C7758 + C7757) * C244) * C92195 +
            ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C57967) *
               C46523) *
              C92105 * C94 +
          ((C4560 * C57967 +
            ((C7761 + C7762) * C244 + (C7984 + C7983) * C92116) * C92195) *
               C46523 +
           (((C4362 + C4363) * C244 + (C4557 + C4556) * C92116) * C57967 +
            ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                 C244 +
             (C4327 * C1537 + C92336 * C1733 + C4328 * C3590 + C92171 * C3808) *
                 C92116) *
                C92195) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C57967 +
            ((C34993 + C34994) * C244 + (C35195 + C35194) * C92116) * C92195) *
               C46523 +
           (((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C57967 +
            ((C7757 + C7758) * C244 + (C7982 + C7981) * C92116) * C92195) *
               C92072) *
              C798 -
          ((((C4328 * C8654 + C92171 * C8972 + C4327 * C3588 + C92336 * C3806) *
                 C92116 +
             (C4328 * C8413 + C92171 * C8767 + C4327 * C3432 + C92336 * C3662) *
                 C244) *
                C92195 +
            ((C7030 + C7031) * C92116 + (C6805 + C6804) * C244) * C57967) *
               C92072 +
           (((C37899 + C37898) * C92116 + (C37675 + C37674) * C244) * C92195 +
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C92116 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C244) *
                C57967) *
               C46523) *
              C799 +
          ((((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                 C244 +
             (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                 C92116) *
                C57967 +
            ((C4327 * C8412 + C92336 * C8766 + C4328 * C18732 +
              C92171 * C19090) *
                 C244 +
             (C4327 * C8653 + C92336 * C8971 + C4328 * C18976 +
              C92171 * C19292) *
                 C92116) *
                C92195) *
               C46523 +
           (((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                 C244 +
             (C4327 * C958 + C92336 * C1148 + C4328 * C5086 + C92171 * C5341) *
                 C92116) *
                C57967 +
            ((C4327 * C8413 + C92336 * C8767 + C4328 * C18733 +
              C92171 * C19091) *
                 C244 +
             (C4327 * C8654 + C92336 * C8972 + C4328 * C18977 +
              C92171 * C19293) *
                 C92116) *
                C92195) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C104 +
            (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                C93 -
            (C58446 + C58447) * C105 - (C58448 + C58449) * C94 + C58458 * C106 +
            C58459 * C95) *
               C46523 +
           ((C58447 + C58446) * C104 + (C58449 + C58448) * C93 -
            (C58451 + C58450) * C105 - (C58453 + C58452) * C94 +
            (C58454 + C58455) * C106 + (C58456 + C58457) * C95) *
               C92072) *
              C92336 +
          (((C58419 * C805 + C57967 * C1204 + C58420 * C3431 + C92195 * C3875) *
                C104 +
            (C58419 * C813 + C57967 * C1212 + C58420 * C3439 + C92195 * C3879) *
                C93 -
            (C60759 + C60758) * C105 - (C60761 + C60760) * C94 +
            (C60762 + C60763) * C106 + (C60764 + C60765) * C95) *
               C46523 +
           ((C60758 + C60759) * C104 + (C60760 + C60761) * C93 -
            (C60763 + C60762) * C105 - (C60765 + C60764) * C94 +
            (C58419 * C802 + C57967 * C1201 + C58420 * C3434 + C92195 * C3878) *
                C106 +
            (C58419 * C810 + C57967 * C1209 + C58420 * C3442 + C92195 * C3882) *
                C95) *
               C92072) *
              C92171) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C801 +
             (C58419 * C117 + C57967 * C561 + C58420 * C1397 + C92195 * C1796) *
                 C92084) *
                C46523 +
            ((C58447 + C58446) * C801 + (C58449 + C58448) * C92084) * C92072) *
               C92336 +
           (((C64426 + C64427) * C801 + (C64428 + C64429) * C92084) * C46523 +
            ((C60758 + C60759) * C801 + (C60760 + C60761) * C92084) * C92072) *
               C92171) *
              C92116 * C798 -
          ((((C64430 + C64431) * C92084 + (C64432 + C64433) * C801) * C92072 +
            ((C64434 + C64435) * C92084 + (C64436 + C64437) * C801) * C46523) *
               C92171 +
           (((C60761 + C60760) * C92084 + (C60759 + C60758) * C801) * C92072 +
            ((C64429 + C64428) * C92084 + (C64427 + C64426) * C801) * C46523) *
               C92336) *
              C92116 * C799 +
          ((((C64437 + C64436) * C801 + (C64435 + C64434) * C92084) * C46523 +
            ((C64433 + C64432) * C801 + (C64431 + C64430) * C92084) * C92072) *
               C92336 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C801 +
             (C58419 * C4871 + C57967 * C5420 + C58420 * C18736 +
              C92195 * C19394) *
                 C92084) *
                C46523 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C801 +
             (C58419 * C4872 + C57967 * C5421 + C58420 * C18737 +
              C92195 * C19395) *
                 C92084) *
                C92072) *
               C92171) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C181 +
             (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                 C92105) *
                C46523 +
            ((C58447 + C58446) * C181 + (C58547 + C58548) * C92105) * C92072) *
               C92336 +
           (((C58419 * C805 + C57967 * C1204 + C58420 * C3431 +
              C92195 * C3875) *
                 C181 +
             (C58419 * C890 + C57967 * C1267 + C58420 * C3513 +
              C92195 * C3949) *
                 C92105) *
                C46523 +
            ((C60758 + C60759) * C181 + (C60873 + C60872) * C92105) * C92072) *
               C92171) *
              C93 -
          ((((C60874 + C60875) * C92105 + (C60763 + C60762) * C181) * C92072 +
            ((C60872 + C60873) * C92105 + (C60759 + C60758) * C181) * C46523) *
               C92171 +
           (((C58550 + C58549) * C92105 + (C58451 + C58450) * C181) * C92072 +
            ((C58548 + C58547) * C92105 + (C58446 + C58447) * C181) * C46523) *
               C92336) *
              C94 +
          ((C58555 * C46523 +
            ((C58454 + C58455) * C181 + (C58552 + C58551) * C92105) * C92072) *
               C92336 +
           (((C60762 + C60763) * C181 + (C60875 + C60874) * C92105) * C46523 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C181 +
             (C58419 * C887 + C57967 * C1273 + C58420 * C3516 +
              C92195 * C3952) *
                 C92105) *
                C92072) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                C884 +
            (C58419 * C182 + C57967 * C641 + C58420 * C1471 + C92195 * C1854) *
                C798 -
            (C64427 + C64426) * C885 - (C64548 + C64549) * C799 +
            (C64437 + C64436) * C886 + (C64550 + C64551) * C800) *
               C46523 +
           ((C58447 + C58446) * C884 + (C58547 + C58548) * C798 -
            (C60759 + C60758) * C885 - (C60872 + C60873) * C799 +
            (C64433 + C64432) * C886 + (C64552 + C64553) * C800) *
               C92072) *
              C92336 +
          (((C64426 + C64427) * C884 + (C64549 + C64548) * C798 -
            (C64436 + C64437) * C885 - (C64551 + C64550) * C799 +
            (C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
             C92195 * C19392) *
                C886 +
            (C58419 * C4987 + C57967 * C5533 + C58420 * C18862 +
             C92195 * C19504) *
                C800) *
               C46523 +
           ((C60758 + C60759) * C884 + (C60873 + C60872) * C798 -
            (C64432 + C64433) * C885 - (C64553 + C64552) * C799 +
            (C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
             C92195 * C19393) *
                C886 +
            (C58419 * C4988 + C57967 * C5534 + C58420 * C18863 +
             C92195 * C19505) *
                C800) *
               C92072) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C92336 +
           (((C58419 * C805 + C57967 * C1204 + C58420 * C3431 +
              C92195 * C3875) *
                 C244 +
             (C58419 * C956 + C57967 * C1328 + C58420 * C3587 +
              C92195 * C4019) *
                 C92116) *
                C46523 +
            ((C60758 + C60759) * C244 + (C60985 + C60984) * C92116) * C92072) *
               C92171) *
              C92105 * C93 -
          ((((C60982 + C60983) * C92116 + (C60763 + C60762) * C244) * C92072 +
            ((C60984 + C60985) * C92116 + (C60759 + C60758) * C244) * C46523) *
               C92171 +
           (((C58646 + C58645) * C92116 + (C58451 + C58450) * C244) * C92072 +
            ((C58644 + C58643) * C92116 + (C58446 + C58447) * C244) * C46523) *
               C92336) *
              C92105 * C94 +
          ((C58651 * C46523 +
            ((C58454 + C58455) * C244 + (C58648 + C58647) * C92116) * C92072) *
               C92336 +
           (((C60762 + C60763) * C244 + (C60983 + C60982) * C92116) * C46523 +
            ((C58419 * C802 + C57967 * C1201 + C58420 * C3434 +
              C92195 * C3878) *
                 C244 +
             (C58419 * C953 + C57967 * C1325 + C58420 * C3590 +
              C92195 * C4022) *
                 C92116) *
                C92072) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C58419 * C107 + C57967 * C555 + C58420 * C1389 + C92195 * C1788) *
                 C244 +
             (C58419 * C245 + C57967 * C719 + C58420 * C1540 + C92195 * C1909) *
                 C92116) *
                C46523 +
            ((C58447 + C58446) * C244 + (C58643 + C58644) * C92116) * C92072) *
               C92336 +
           (((C64426 + C64427) * C244 + (C64664 + C64665) * C92116) * C46523 +
            ((C60758 + C60759) * C244 + (C60985 + C60984) * C92116) * C92072) *
               C92171) *
              C798 -
          ((((C64666 + C64667) * C92116 + (C64432 + C64433) * C244) * C92072 +
            ((C64668 + C64669) * C92116 + (C64436 + C64437) * C244) * C46523) *
               C92171 +
           (((C60984 + C60985) * C92116 + (C60759 + C60758) * C244) * C92072 +
            ((C64665 + C64664) * C92116 + (C64427 + C64426) * C244) * C46523) *
               C92336) *
              C799 +
          ((((C64437 + C64436) * C244 + (C64669 + C64668) * C92116) * C46523 +
            ((C64433 + C64432) * C244 + (C64667 + C64666) * C92116) * C92072) *
               C92336 +
           (((C58419 * C4865 + C57967 * C5417 + C58420 * C18732 +
              C92195 * C19392) *
                 C244 +
             (C58419 * C5085 + C57967 * C5622 + C58420 * C18976 +
              C92195 * C19607) *
                 C92116) *
                C46523 +
            ((C58419 * C4866 + C57967 * C5418 + C58420 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C58419 * C5086 + C57967 * C5623 + C58420 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92072) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C1987 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C1983 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C1988 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C1984) *
               C92157 * C92362 +
           ((C53318 + C53319) * C1987 + (C53320 + C53321) * C1983 -
            (C55592 + C55593) * C1988 - (C55594 + C55595) * C1984) *
               C92157 * C92359 +
           (C70646 * C1987 + C70647 * C1983 -
            (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
             C46523 * C1403) *
                C1988 -
            (C46529 * C1408 + C92072 * C1416 + C46528 * C1407 +
             C46523 * C1415) *
                C1984) *
               C92157 * C69237) *
              C92116 * C1985 +
          (((C48733 + C48732) * C1988 -
            ((C47299 + C47298) * C1983 + (C47297 + C47296) * C1987) +
            (C48735 + C48734) * C1984) *
               C92157 * C92362 +
           ((C54361 + C54360) * C1988 - (C56818 * C1983 + C56819 * C1987) +
            (C54363 + C54362) * C1984) *
               C92157 * C92359 +
           ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
             C92072 * C5724) *
                C1988 -
            ((C53322 + C53323) * C1983 + (C53324 + C53325) * C1987) +
            (C46528 * C5726 + C46523 * C5729 + C46529 * C5727 +
             C92072 * C5730) *
                C1984) *
               C92157 * C69237) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2059 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C1985 -
            (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
               C92157 * C92362 +
           ((C53318 + C53319) * C2059 + (C53440 + C53441) * C1985 -
            C56819 * C2060 - C56956 * C1986) *
               C92157 * C92359 +
           (C70646 * C2059 + C70739 * C1985 - (C53324 + C53325) * C2060 -
            (C53442 + C53443) * C1986) *
               C92157 * C69237) *
              C1983 +
          (((C48733 + C48732) * C2060 -
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C1985 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C2059) +
            (C48846 + C48847) * C1986) *
               C92157 * C92362 +
           ((C54361 + C54360) * C2060 -
            ((C55730 + C55731) * C1985 + (C55592 + C55593) * C2059) +
            (C54498 + C54499) * C1986) *
               C92157 * C92359 +
           ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
             C92072 * C5724) *
                C2060 -
            ((C46529 * C1474 + C92072 * C1482 + C46528 * C1473 +
              C46523 * C1481) *
                 C1985 +
             (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
              C46523 * C1403) *
                 C2059) +
            (C46528 * C5806 + C46523 * C5809 + C46529 * C5807 +
             C92072 * C5810) *
                C1986) *
               C92157 * C69237) *
              C1984) *
         C92116) /
        (p * q * std::sqrt(p + q));
    d2eexz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C244 +
             (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                 C92116) *
                C92157 * C92362 +
            ((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92157 *
                C92359 +
            (C70646 * C244 + C70823 * C92116) * C92157 * C69237) *
               C1985 -
           (((C53561 + C53560) * C92116 + (C53324 + C53325) * C244) * C92157 *
                C69237 +
            (C57088 * C92116 + C56819 * C244) * C92157 * C92359 +
            ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92157 *
                C92362) *
               C1986) *
              C1983 +
          ((((C48733 + C48732) * C244 + (C48956 + C48957) * C92116) * C92157 *
                C92362 +
            ((C54361 + C54360) * C244 + (C54634 + C54635) * C92116) * C92157 *
                C92359 +
            ((C46528 * C5720 + C46523 * C5723 + C46529 * C5721 +
              C92072 * C5724) *
                 C244 +
             (C46528 * C5886 + C46523 * C5889 + C46529 * C5887 +
              C92072 * C5890) *
                 C92116) *
                C92157 * C69237) *
               C1986 -
           (((C46529 * C1543 + C92072 * C1551 + C46528 * C1542 +
              C46523 * C1550) *
                 C92116 +
             (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
              C46523 * C1403) *
                 C244) *
                C92157 * C69237 +
            ((C55867 + C55866) * C92116 + (C55592 + C55593) * C244) * C92157 *
                C92359 +
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C92116 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C244) *
                C92157 * C92362) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92362 +
            (C12983 + C12984 - C12985 - C12986) * C92359 +
            (C31732 + C31733 - C31734 - C31735) * C69237) *
               C46523 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92362 +
            (C12987 + C12988 - C12989 - C12990) * C92359 +
            (C31736 + C31737 - C31738 - C31739) * C69237) *
               C92072) *
              C92116 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92157 * C1030) * C1983 +
              (C307 * C805 + C92157 * C1022) * C1987) +
             C2213 * C1984) *
                C92362 +
            (C11989 * C1988 - (C13945 * C1983 + C13944 * C1987) +
             C11990 * C1984) *
                C92359 +
            (C30752 * C1988 - (C32704 * C1983 + C32703 * C1987) +
             C30753 * C1984) *
                C69237) *
               C46523 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C92362 +
            (C11991 * C1988 - (C11990 * C1983 + C11989 * C1987) +
             C11992 * C1984) *
                C92359 +
            ((C307 * C5721 + C92157 * C5967) * C1988 -
             (C30753 * C1983 + C30752 * C1987) +
             (C307 * C5727 + C92157 * C5970) * C1984) *
                C69237) *
               C92072) *
              C92116 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C92362 +
                      (C14046 + C14047 - C14048 - C14052) * C92359 +
                      (C32806 + C32807 - C32808 - C32812) * C69237) *
                         C46523 +
                     ((C2285 + C2286 - C2287 - C2303) * C92362 +
                      (C12091 + C12092 - C12093 - C12103) * C92359 +
                      (C30852 + C30853 - C30854 - C30858) * C69237) *
                         C92072) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C92362 +
                      (C12093 - (C12092 + C12091) + C12103) * C92359 +
                      (C30854 - (C30853 + C30852) + C30858) * C69237) *
                         C46523 +
                     ((C2292 - (C2291 + C2290) + C2304) * C92362 +
                      (C12098 - (C12097 + C12096) + C12104) * C92359 +
                      ((C307 * C5721 + C92157 * C5967) * C2060 -
                       (C11259 * C1985 + C11156 * C2059) +
                       (C307 * C5807 + C92157 * C6047) * C1986) *
                          C69237) *
                         C92072) *
                        C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C307 * C107 + C92157 * C308) * C244 +
                        (C307 * C245 + C92157 * C474) * C92116) *
                           C92362 +
                       (C11153 * C244 + C11351 * C92116) * C92359 +
                       (C11160 * C244 + C11352 * C92116) * C69237) *
                          C46523 +
                      ((C481 + C497) * C92362 + (C9753 + C9754) * C92359 +
                       (C28571 + C28572) * C69237) *
                          C92072) *
                         C1985 -
                     (((C30961 + C30959) * C69237 + (C12212 + C12208) * C92359 +
                       (C2387 + C2381) * C92362) *
                          C92072 +
                      ((C32914 * C92116 + C32703 * C244) * C69237 +
                       (C14153 * C92116 + C13944 * C244) * C92359 +
                       ((C307 * C956 + C92157 * C1146) * C92116 +
                        (C307 * C805 + C92157 * C1022) * C244) *
                           C92362) *
                          C46523) *
                         C1986) *
                        C1983 +
                    ((((C2381 + C2387) * C92362 + (C12208 + C12212) * C92359 +
                       (C30959 + C30961) * C69237) *
                          C46523 +
                      ((C2378 + C2386) * C92362 + (C12205 + C12211) * C92359 +
                       ((C307 * C5721 + C92157 * C5967) * C244 +
                        (C307 * C5887 + C92157 * C6124) * C92116) *
                           C69237) *
                          C92072) *
                         C1986 -
                     (((C28573 + C28574) * C69237 + (C9757 + C9756) * C92359 +
                       (C498 + C484) * C92362) *
                          C92072 +
                      ((C28572 + C28571) * C69237 + (C9754 + C9753) * C92359 +
                       (C497 + C481) * C92362) *
                          C46523) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C1987 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C1983 -
                      (C69710 + C69711 + C69712) * C1988 -
                      (C69713 + C69714 + C69715) * C1984) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C1987 +
                      (C69715 + C69714 + C69713) * C1983 -
                      (C69718 + C69717 + C69716) * C1988 -
                      (C69721 + C69720 + C69719) * C1984) *
                         C92072) *
                        C92157 * C92116 * C1985 +
                    (((C71972 + C71973 + C71974) * C1988 -
                      ((C69684 * C5725 + C69237 * C6202 + C69683 * C3439 +
                        C92359 * C3879 + C69682 * C813 + C92362 * C1212) *
                           C1983 +
                       (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                        C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                           C1987) +
                      (C71975 + C71976 + C71977) * C1984) *
                         C46523 +
                     ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                       C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                          C1988 -
                      ((C71977 + C71976 + C71975) * C1983 +
                       (C71974 + C71973 + C71972) * C1987) +
                      (C69682 * C811 + C92362 * C1210 + C69683 * C3441 +
                       C92359 * C3881 + C69684 * C5727 + C69237 * C6204) *
                          C1984) *
                         C92072) *
                        C92157 * C92116 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2059 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C1985 -
                      (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                       C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                          C2060 -
                      (C69684 * C5805 + C69237 * C6279 + C69683 * C3513 +
                       C92359 * C3949 + C69682 * C890 + C92362 * C1267) *
                          C1986) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C2059 +
                      (C69808 + C69809 + C69810) * C1985 -
                      (C71974 + C71973 + C71972) * C2060 -
                      (C72082 + C72083 + C72084) * C1986) *
                         C92072) *
                        C92157 * C1983 +
                    (((C71972 + C71973 + C71974) * C2060 -
                      ((C69810 + C69809 + C69808) * C1985 +
                       (C69710 + C69711 + C69712) * C2059) +
                      (C72084 + C72083 + C72082) * C1986) *
                         C46523 +
                     ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                       C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                          C2060 -
                      ((C69811 + C69812 + C69813) * C1985 +
                       (C69718 + C69717 + C69716) * C2059) +
                      (C69682 * C888 + C92362 * C1271 + C69683 * C3515 +
                       C92359 * C3951 + C69684 * C5807 + C69237 * C6281) *
                          C1986) *
                         C92072) *
                        C92157 * C1984) *
                   C92116) /
                  (p * q * std::sqrt(p + q));
    d2eezz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                        C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                           C244 +
                       (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                        C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                           C92116) *
                          C46523 +
                      ((C69712 + C69711 + C69710) * C244 +
                       (C69900 + C69901 + C69902) * C92116) *
                          C92072) *
                         C92157 * C1985 -
                     (((C72189 + C72190 + C72191) * C92116 +
                       (C71974 + C71973 + C71972) * C244) *
                          C92072 +
                      ((C69684 * C5885 + C69237 * C6356 + C69683 * C3587 +
                        C92359 * C4019 + C69682 * C956 + C92362 * C1328) *
                           C92116 +
                       (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                        C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                           C244) *
                          C46523) *
                         C92157 * C1986) *
                        C1983 +
                    ((((C71972 + C71973 + C71974) * C244 +
                       (C72191 + C72190 + C72189) * C92116) *
                          C46523 +
                      ((C69682 * C803 + C92362 * C1202 + C69683 * C3433 +
                        C92359 * C3877 + C69684 * C5721 + C69237 * C6201) *
                           C244 +
                       (C69682 * C954 + C92362 * C1326 + C69683 * C3589 +
                        C92359 * C4021 + C69684 * C5887 + C69237 * C6358) *
                           C92116) *
                          C92072) *
                         C92157 * C1986 -
                     (((C69903 + C69904 + C69905) * C92116 +
                       (C69718 + C69717 + C69716) * C244) *
                          C92072 +
                      ((C69902 + C69901 + C69900) * C92116 +
                       (C69710 + C69711 + C69712) * C244) *
                          C46523) *
                         C92157 * C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C801 +
             (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                 C92084) *
                C92157 * C92362 +
            ((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92157 *
                C92359 +
            C70663 * C69237) *
               C2709 -
           (((C70658 + C70659) * C92084 + (C70660 + C70661) * C801) * C92157 *
                C69237 +
            ((C53326 + C53327) * C92084 + (C53328 + C53329) * C801) * C92157 *
                C92359 +
            ((C53321 + C53320) * C92084 + (C53319 + C53318) * C801) * C92157 *
                C92362) *
               C2710) *
              C1985 +
          ((C56824 * C92157 * C92362 +
            ((C53325 + C53324) * C801 + (C53323 + C53322) * C92084) * C92157 *
                C92359 +
            ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
              C92072 * C32369) *
                 C801 +
             (C46528 * C24527 + C46523 * C24530 + C46529 * C32370 +
              C92072 * C32371) *
                 C92084) *
                C92157 * C69237) *
               C2710 -
           (((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92157 *
                C69237 +
            C56825 * C92157 * C92359 +
            ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92157 *
                C92362) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2059 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C1985 -
            (C47297 + C47296) * C2060 - (C47399 + C47400) * C1986) *
               C92157 * C92362 +
           ((C53318 + C53319) * C2059 + (C53440 + C53441) * C1985 -
            C56819 * C2060 - C56956 * C1986) *
               C92157 * C92359 +
           (C70646 * C2059 + C70739 * C1985 - (C53324 + C53325) * C2060 -
            (C53442 + C53443) * C1986) *
               C92157 * C69237) *
              C92084 * C2709 +
          ((C56816 * C2060 -
            ((C53441 + C53440) * C1985 + (C53319 + C53318) * C2059) +
            C56957 * C1986) *
               C92157 * C92362 +
           ((C53325 + C53324) * C2060 -
            ((C53444 + C53445) * C1985 + (C53328 + C53329) * C2059) +
            (C53443 + C53442) * C1986) *
               C92157 * C92359 +
           ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
             C92072 * C32369) *
                C2060 -
            ((C70745 + C70746) * C1985 + (C70660 + C70661) * C2059) +
            (C46528 * C24638 + C46523 * C24640 + C46529 * C32482 +
             C92072 * C32483) *
                C1986) *
               C92157 * C69237) *
              C92084 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2849 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C2709 -
            (C53319 + C53318) * C2850 - (C53556 + C53557) * C2710) *
               C92157 * C92362 +
           ((C53318 + C53319) * C2849 + (C53557 + C53556) * C2709 -
            (C53328 + C53329) * C2850 - (C53559 + C53558) * C2710) *
               C92157 * C92359 +
           (C70646 * C2849 + C70823 * C2709 - (C70660 + C70661) * C2850 -
            (C70829 + C70828) * C2710) *
               C92157 * C69237) *
              C1985 +
          ((C56816 * C2850 -
            ((C47494 + C47493) * C2709 + (C47297 + C47296) * C2849) +
            C57089 * C2710) *
               C92157 * C92362 +
           ((C53325 + C53324) * C2850 - (C57088 * C2709 + C56819 * C2849) +
            (C53560 + C53561) * C2710) *
               C92157 * C92359 +
           ((C46528 * C24524 + C46523 * C24526 + C46529 * C32368 +
             C92072 * C32369) *
                C2850 -
            ((C53561 + C53560) * C2709 + (C53324 + C53325) * C2849) +
            (C46528 * C24740 + C46523 * C24742 + C46529 * C32588 +
             C92072 * C32589) *
                C2710) *
               C92157 * C69237) *
              C1986) *
         C92084) /
        (p * q * std::sqrt(p + q));
    d2eeyx[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C307 * C107 + C92157 * C308) * C801 +
                        (C307 * C117 + C92157 * C314) * C92084) *
                           C92362 +
                       (C11161 + C11162) * C92359 + C29938 * C69237) *
                          C46523 +
                      ((C337 * C801 + C338 * C92084) * C92362 +
                       (C11137 + C11138) * C92359 + C29939 * C69237) *
                          C92072) *
                         C2709 -
                     (((C29952 + C29953) * C69237 + (C11165 + C11166) * C92359 +
                       (C11138 + C11137) * C92362) *
                          C92072 +
                      ((C29954 + C29955) * C69237 + (C11167 + C11168) * C92359 +
                       (C11162 + C11161) * C92362) *
                          C46523) *
                         C2710) *
                        C1985 +
                    ((((C13946 + C13947) * C92362 + (C32705 + C32706) * C92359 +
                       (C41130 + C41131) * C69237) *
                          C46523 +
                      ((C13940 + C13941) * C92362 + (C32701 + C32702) * C92359 +
                       ((C307 * C32368 + C92157 * C32694) * C801 +
                        (C307 * C32370 + C92157 * C32695) * C92084) *
                           C69237) *
                          C92072) *
                         C2710 -
                     (((C32702 + C32701) * C69237 + (C13941 + C13940) * C92359 +
                       (C2213 * C92084 + C2212 * C801) * C92362) *
                          C92072 +
                      ((C32706 + C32705) * C69237 + (C13947 + C13946) * C92359 +
                       ((C307 * C813 + C92157 * C1030) * C92084 +
                        (C307 * C805 + C92157 * C1022) * C801) *
                           C92362) *
                          C46523) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C92362 +
                      (C14046 + C14047 - C14048 - C14052) * C92359 +
                      (C32806 + C32807 - C32808 - C32812) * C69237) *
                         C46523 +
                     ((C2285 + C2286 - C2287 - C2303) * C92362 +
                      (C12091 + C12092 - C12093 - C12103) * C92359 +
                      (C30852 + C30853 - C30854 - C30858) * C69237) *
                         C92072) *
                        C92084 * C2709 +
                    (((C14048 - (C14047 + C14046) + C14052) * C92362 +
                      (C32808 - (C32807 + C32806) + C32812) * C92359 +
                      (C41200 - (C41199 + C41198) + C41204) * C69237) *
                         C46523 +
                     ((C12093 - (C12092 + C12091) + C12103) * C92362 +
                      (C30854 - (C30853 + C30852) + C30858) * C92359 +
                      ((C307 * C32368 + C92157 * C32694) * C2060 -
                       (C30040 * C1985 + C29949 * C2059) +
                       (C307 * C32482 + C92157 * C32804) * C1986) *
                          C69237) *
                         C92072) *
                        C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C92362 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C92359 +
                      (C11160 * C2849 + C11352 * C2709 - C29951 * C2850 -
                       C30124 * C2710) *
                          C69237) *
                         C46523 +
                     ((C3089 + C3090 - C3091 - C3107) * C92362 +
                      (C13194 + C13195 - C13196 - C13197) * C92359 +
                      (C31937 + C31938 - C31939 - C31940) * C69237) *
                         C92072) *
                        C1985 +
                    (((C13944 * C2850 -
                       ((C307 * C956 + C92157 * C1146) * C2709 +
                        (C307 * C805 + C92157 * C1022) * C2849) +
                       C14153 * C2710) *
                          C92362 +
                      (C32703 * C2850 - (C14153 * C2709 + C13944 * C2849) +
                       C32914 * C2710) *
                          C92359 +
                      (C41128 * C2850 - (C32914 * C2709 + C32703 * C2849) +
                       C41273 * C2710) *
                          C69237) *
                         C46523 +
                     ((C11989 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12210 * C2710) *
                          C92362 +
                      (C30752 * C2850 - (C12210 * C2709 + C11989 * C2849) +
                       C30960 * C2710) *
                          C92359 +
                      ((C307 * C32368 + C92157 * C32694) * C2850 -
                       (C30960 * C2709 + C30752 * C2849) +
                       (C307 * C32588 + C92157 * C32910) * C2710) *
                          C69237) *
                         C92072) *
                        C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eezx[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                        C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                           C801 +
                       (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                        C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                           C92084) *
                          C46523 +
                      ((C69712 + C69711 + C69710) * C801 +
                       (C69715 + C69714 + C69713) * C92084) *
                          C92072) *
                         C92157 * C2709 -
                     (((C72919 + C72918 + C72917) * C92084 +
                       (C72916 + C72915 + C72914) * C801) *
                          C92072 +
                      ((C69684 * C10814 + C69237 * C11431 + C69683 * C1406 +
                        C92359 * C1797 + C69682 * C1397 + C92362 * C1796) *
                           C92084 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C801) *
                          C46523) *
                         C92157 * C2710) *
                        C1985 +
                    ((((C69682 * C3431 + C92362 * C3875 + C69683 * C5719 +
                        C92359 * C6199 + C69684 * C24524 + C69237 * C25132) *
                           C801 +
                       (C69682 * C3439 + C92362 * C3879 + C69683 * C5725 +
                        C92359 * C6202 + C69684 * C24527 + C69237 * C25134) *
                           C92084) *
                          C46523 +
                      ((C69682 * C3432 + C92362 * C3876 + C69683 * C5720 +
                        C92359 * C6200 + C69684 * C32368 + C69237 * C33012) *
                           C801 +
                       (C69682 * C3440 + C92362 * C3880 + C69683 * C5726 +
                        C92359 * C6203 + C69684 * C32370 + C69237 * C33013) *
                           C92084) *
                          C92072) *
                         C92157 * C2710 -
                     (((C71977 + C71976 + C71975) * C92084 +
                       (C71974 + C71973 + C71972) * C801) *
                          C92072 +
                      ((C69684 * C5725 + C69237 * C6202 + C69683 * C3439 +
                        C92359 * C3879 + C69682 * C813 + C92362 * C1212) *
                           C92084 +
                       (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                        C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                           C801) *
                          C46523) *
                         C92157 * C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2059 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C1985 -
                      (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                       C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                          C2060 -
                      (C69684 * C5805 + C69237 * C6279 + C69683 * C3513 +
                       C92359 * C3949 + C69682 * C890 + C92362 * C1267) *
                          C1986) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C2059 +
                      (C69808 + C69809 + C69810) * C1985 -
                      (C71974 + C71973 + C71972) * C2060 -
                      (C72082 + C72083 + C72084) * C1986) *
                         C92072) *
                        C92157 * C92084 * C2709 +
                    (((C69682 * C3431 + C92362 * C3875 + C69683 * C5719 +
                       C92359 * C6199 + C69684 * C24524 + C69237 * C25132) *
                          C2060 -
                      ((C69684 * C10930 + C69237 * C11508 + C69683 * C1472 +
                        C92359 * C1855 + C69682 * C1471 + C92362 * C1854) *
                           C1985 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C2059) +
                      (C69682 * C3513 + C92362 * C3949 + C69683 * C5805 +
                       C92359 * C6279 + C69684 * C24638 + C69237 * C25210) *
                          C1986) *
                         C46523 +
                     ((C69682 * C3432 + C92362 * C3876 + C69683 * C5720 +
                       C92359 * C6200 + C69684 * C32368 + C69237 * C33012) *
                          C2060 -
                      ((C73026 + C73025 + C73024) * C1985 +
                       (C72916 + C72915 + C72914) * C2059) +
                      (C69682 * C3514 + C92362 * C3950 + C69683 * C5806 +
                       C92359 * C6280 + C69684 * C32482 + C69237 * C33112) *
                          C1986) *
                         C92072) *
                        C92157 * C92084 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2849 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C2709 -
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C2850 -
                      (C69684 * C11028 + C69237 * C11585 + C69683 * C1541 +
                       C92359 * C1910 + C69682 * C1540 + C92362 * C1909) *
                          C2710) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C2849 +
                      (C69900 + C69901 + C69902) * C2709 -
                      (C72916 + C72915 + C72914) * C2850 -
                      (C73131 + C73132 + C73133) * C2710) *
                         C92072) *
                        C92157 * C1985 +
                    (((C69682 * C3431 + C92362 * C3875 + C69683 * C5719 +
                       C92359 * C6199 + C69684 * C24524 + C69237 * C25132) *
                          C2850 -
                      ((C69684 * C5885 + C69237 * C6356 + C69683 * C3587 +
                        C92359 * C4019 + C69682 * C956 + C92362 * C1328) *
                           C2709 +
                       (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                        C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                           C2849) +
                      (C69682 * C3587 + C92362 * C4019 + C69683 * C5885 +
                       C92359 * C6356 + C69684 * C24740 + C69237 * C25286) *
                          C2710) *
                         C46523 +
                     ((C69682 * C3432 + C92362 * C3876 + C69683 * C5720 +
                       C92359 * C6200 + C69684 * C32368 + C69237 * C33012) *
                          C2850 -
                      ((C72189 + C72190 + C72191) * C2709 +
                       (C71974 + C71973 + C71972) * C2849) +
                      (C69682 * C3588 + C92362 * C4020 + C69683 * C5886 +
                       C92359 * C6357 + C69684 * C32588 + C69237 * C33211) *
                          C2710) *
                         C92072) *
                        C92157 * C1986) *
                   C92084) /
                  (p * q * std::sqrt(p + q));
    d2eexx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C801 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C92084) *
               C92157 * C92362 +
           ((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92157 *
               C92359 +
           ((C53329 + C53328) * C801 + (C53327 + C53326) * C92084) * C92157 *
               C69237) *
              C92116 * C798 -
          (((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92157 *
               C69237 +
           C56825 * C92157 * C92359 +
           ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92157 *
               C92362) *
              C92116 * C799 +
          (C47312 * C92157 * C92362 +
           ((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92157 *
               C92359 +
           ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
             C92072 * C16098) *
                C801 +
            (C46528 * C16099 + C46523 * C16101 + C46529 * C16100 +
             C92072 * C16102) *
                C92084) *
               C92157 * C69237) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C104 +
           (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
               C93 -
           (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
               C105 -
           (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
               C94 +
           (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
               C106 +
           (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
               C95) *
              C92157 * C92362 +
          ((C53318 + C53319) * C104 + (C53320 + C53321) * C93 -
           (C55592 + C55593) * C105 - (C55594 + C55595) * C94 +
           (C46528 * C1387 + C46523 * C1399 + C46529 * C1386 + C92072 * C1398) *
               C106 +
           (C46528 * C1395 + C46523 * C1411 + C46529 * C1394 + C92072 * C1410) *
               C95) *
              C92157 * C92359 +
          ((C53329 + C53328) * C104 + (C53327 + C53326) * C93 -
           (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 + C46523 * C1403) *
               C105 -
           (C46529 * C1408 + C92072 * C1416 + C46528 * C1407 + C46523 * C1415) *
               C94 +
           (C46528 * C1392 + C46523 * C1404 + C46529 * C1393 + C92072 * C1405) *
               C106 +
           (C46528 * C1408 + C46523 * C1416 + C46529 * C1409 + C92072 * C1417) *
               C95) *
              C92157 * C69237) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C801 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C92084) *
               C92157 * C92362 +
           ((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92157 *
               C92359 +
           C70663 * C69237) *
              C1383 -
          (((C70658 + C70659) * C92084 + (C70660 + C70661) * C801) * C92157 *
               C69237 +
           ((C53326 + C53327) * C92084 + (C53328 + C53329) * C801) * C92157 *
               C92359 +
           ((C53321 + C53320) * C92084 + (C53319 + C53318) * C801) * C92157 *
               C92362) *
              C1384 +
          (C70663 * C92362 +
           ((C70661 + C70660) * C801 + (C70659 + C70658) * C92084) * C92157 *
               C92359 +
           ((C46528 * C29611 + C46523 * C29613 + C46529 * C29612 +
             C92072 * C29614) *
                C801 +
            (C46528 * C29615 + C46523 * C29617 + C46529 * C29616 +
             C92072 * C29618) *
                C92084) *
               C92157 * C69237) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C884 +
           (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
               C798 -
           (C47297 + C47296) * C885 - (C47399 + C47400) * C799 + C47308 * C886 +
           C47405 * C800) *
              C92157 * C92362 +
          ((C53318 + C53319) * C884 + (C53440 + C53441) * C798 - C56819 * C885 -
           C56956 * C799 + (C50619 + C50618) * C886 +
           (C50732 + C50733) * C800) *
              C92157 * C92359 +
          ((C53329 + C53328) * C884 + (C53445 + C53444) * C798 -
           (C53324 + C53325) * C885 - (C53442 + C53443) * C799 +
           (C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
            C92072 * C16098) *
               C886 +
           (C46528 * C16177 + C46523 * C16179 + C46529 * C16178 +
            C92072 * C16180) *
               C800) *
              C92157 * C69237) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C181 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C92105) *
               C92157 * C92362 +
           ((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92157 *
               C92359 +
           ((C53329 + C53328) * C181 + (C53445 + C53444) * C92105) * C92157 *
               C69237) *
              C93 -
          (((C46529 * C1474 + C92072 * C1482 + C46528 * C1473 +
             C46523 * C1481) *
                C92105 +
            (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
             C46523 * C1403) *
                C181) *
               C92157 * C69237 +
           ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C92157 *
               C92359 +
           ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                C92105 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C181) *
               C92157 * C92362) *
              C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C181 +
            (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                C92105) *
               C92157 * C92362 +
           ((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C181 +
            (C46528 * C1469 + C46523 * C1477 + C46529 * C1468 +
             C92072 * C1476) *
                C92105) *
               C92157 * C92359 +
           ((C46528 * C1392 + C46523 * C1404 + C46529 * C1393 +
             C92072 * C1405) *
                C181 +
            (C46528 * C1474 + C46523 * C1482 + C46529 * C1475 +
             C92072 * C1483) *
                C92105) *
               C92157 * C69237) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C181 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C92105) *
               C92157 * C92362 +
           ((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92157 *
               C92359 +
           C70748 * C69237) *
              C92084 * C1383 -
          (((C70745 + C70746) * C92105 + (C70660 + C70661) * C181) * C92157 *
               C69237 +
           ((C53444 + C53445) * C92105 + (C53328 + C53329) * C181) * C92157 *
               C92359 +
           ((C53441 + C53440) * C92105 + (C53319 + C53318) * C181) * C92157 *
               C92362) *
              C92084 * C1384 +
          (C70748 * C92362 +
           ((C70661 + C70660) * C181 + (C70746 + C70745) * C92105) * C92157 *
               C92359 +
           ((C46528 * C29611 + C46523 * C29613 + C46529 * C29612 +
             C92072 * C29614) *
                C181 +
            (C46528 * C29735 + C46523 * C29737 + C46529 * C29736 +
             C92072 * C29738) *
                C92105) *
               C92157 * C69237) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C92362 +
           ((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92157 *
               C92359 +
           ((C53329 + C53328) * C244 + (C53558 + C53559) * C92116) * C92157 *
               C69237) *
              C798 -
          (((C53561 + C53560) * C92116 + (C53324 + C53325) * C244) * C92157 *
               C69237 +
           (C57088 * C92116 + C56819 * C244) * C92157 * C92359 +
           ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92157 *
               C92362) *
              C799 +
          (C47501 * C92157 * C92362 +
           ((C50619 + C50618) * C244 + (C50843 + C50842) * C92116) * C92157 *
               C92359 +
           ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
             C92072 * C16098) *
                C244 +
            (C46528 * C16255 + C46523 * C16257 + C46529 * C16256 +
             C92072 * C16258) *
                C92116) *
               C92157 * C69237) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C92362 +
           ((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92157 *
               C92359 +
           ((C53329 + C53328) * C244 + (C53558 + C53559) * C92116) * C92157 *
               C69237) *
              C92105 * C93 -
          (((C46529 * C1543 + C92072 * C1551 + C46528 * C1542 +
             C46523 * C1550) *
                C92116 +
            (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
             C46523 * C1403) *
                C244) *
               C92157 * C69237 +
           ((C55867 + C55866) * C92116 + (C55592 + C55593) * C244) * C92157 *
               C92359 +
           ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                C92116 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C244) *
               C92157 * C92362) *
              C92105 * C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C244 +
            (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                C92116) *
               C92157 * C92362 +
           ((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C244 +
            (C46528 * C1538 + C46523 * C1546 + C46529 * C1537 +
             C92072 * C1545) *
                C92116) *
               C92157 * C92359 +
           ((C46528 * C1392 + C46523 * C1404 + C46529 * C1393 +
             C92072 * C1405) *
                C244 +
            (C46528 * C1543 + C46523 * C1551 + C46529 * C1544 +
             C92072 * C1552) *
                C92116) *
               C92157 * C69237) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C1534 +
           (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
               C1383 -
           (C53319 + C53318) * C1535 - (C53556 + C53557) * C1384 +
           C70646 * C1536 + C70823 * C1385) *
              C92157 * C92362 +
          ((C53318 + C53319) * C1534 + (C53557 + C53556) * C1383 -
           (C53328 + C53329) * C1535 - (C53559 + C53558) * C1384 +
           (C70661 + C70660) * C1536 + (C70828 + C70829) * C1385) *
              C92157 * C92359 +
          (C70646 * C1534 + C70823 * C1383 - (C70660 + C70661) * C1535 -
           (C70829 + C70828) * C1384 +
           (C46528 * C29611 + C46523 * C29613 + C46529 * C29612 +
            C92072 * C29614) *
               C1536 +
           (C46528 * C29836 + C46523 * C29838 + C46529 * C29837 +
            C92072 * C29839) *
               C1385) *
              C92157 * C69237) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C92362 +
            (C11161 + C11162) * C92359 + C29938 * C69237) *
               C46523 +
           ((C337 * C801 + C338 * C92084) * C92362 +
            (C11137 + C11138) * C92359 + C29939 * C69237) *
               C92072) *
              C92116 * C798 -
          (((C32702 + C32701) * C69237 + (C13941 + C13940) * C92359 +
            (C2213 * C92084 + C2212 * C801) * C92362) *
               C92072 +
           ((C32706 + C32705) * C69237 + (C13947 + C13946) * C92359 +
            ((C307 * C813 + C92157 * C1030) * C92084 +
             (C307 * C805 + C92157 * C1022) * C801) *
                C92362) *
               C46523) *
              C92116 * C799 +
          ((((C307 * C806 + C92157 * C1023) * C801 +
             (C307 * C822 + C92157 * C1031) * C92084) *
                C92362 +
            ((C307 * C8412 + C92157 * C8766) * C801 +
             (C307 * C8418 + C92157 * C8769) * C92084) *
                C92359 +
            ((C307 * C16095 + C92157 * C16333) * C801 +
             (C307 * C16099 + C92157 * C16335) * C92084) *
                C69237) *
               C46523 +
           (((C307 * C807 + C92157 * C1024) * C801 +
             (C307 * C823 + C92157 * C1032) * C92084) *
                C92362 +
            ((C307 * C8413 + C92157 * C8767) * C801 +
             (C307 * C8419 + C92157 * C8770) * C92084) *
                C92359 +
            ((C307 * C16096 + C92157 * C16334) * C801 +
             (C307 * C16100 + C92157 * C16336) * C92084) *
                C69237) *
               C92072) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C104 +
            (C307 * C117 + C92157 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C92362 +
           (C11153 * C104 + C11154 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92359 +
           (C11160 * C104 + C11159 * C93 - C11158 * C105 - C11157 * C94 +
            C11156 * C106 + C11155 * C95) *
               C69237) *
              C46523 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C92362 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92359 +
           (C11158 * C104 + C11157 * C93 - C11156 * C105 - C11155 * C94 +
            (C307 * C1393 + C92157 * C1610) * C106 +
            (C307 * C1409 + C92157 * C1618) * C95) *
               C69237) *
              C92072) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C92362 +
            (C11161 + C11162) * C92359 + C29938 * C69237) *
               C46523 +
           ((C337 * C801 + C338 * C92084) * C92362 +
            (C11137 + C11138) * C92359 + C29939 * C69237) *
               C92072) *
              C1383 -
          (((C29952 + C29953) * C69237 + (C11165 + C11166) * C92359 +
            (C11138 + C11137) * C92362) *
               C92072 +
           ((C29954 + C29955) * C69237 + (C11167 + C11168) * C92359 +
            (C11162 + C11161) * C92362) *
               C46523) *
              C1384 +
          ((C29938 * C92362 + C39372 * C92359 + (C39380 + C39379) * C69237) *
               C46523 +
           (C29939 * C92362 + (C29953 + C29952) * C92359 +
            ((C307 * C29612 + C92157 * C29934) * C801 +
             (C307 * C29616 + C92157 * C29936) * C92084) *
                C69237) *
               C92072) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C92362 +
           (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92359 +
           (C11160 * C884 + C11261 * C798 - C32703 * C885 - C32811 * C799 +
            (C307 * C16095 + C92157 * C16333) * C886 +
            (C307 * C16177 + C92157 * C16411) * C800) *
               C69237) *
              C46523 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C92362 +
           (C2934 * C884 + C3016 * C798 - C11989 * C885 - C12101 * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92359 +
           (C11158 * C884 + C11260 * C798 - C30752 * C885 - C30857 * C799 +
            (C307 * C16096 + C92157 * C16334) * C886 +
            (C307 * C16178 + C92157 * C16412) * C800) *
               C69237) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92362 +
            (C11246 + C11262) * C92359 + C30032 * C69237) *
               C46523 +
           ((C401 + C417) * C92362 + C13093 * C92359 + C30033 * C69237) *
               C92072) *
              C93 -
          (((C11263 + C11251) * C69237 + C13094 * C92359 +
            (C418 + C404) * C92362) *
               C92072 +
           (C31838 * C69237 + C13095 * C92359 + (C417 + C401) * C92362) *
               C46523) *
              C94 +
          ((C421 * C92362 + C9676 * C92359 + (C11251 + C11263) * C69237) *
               C46523 +
           (C422 * C92362 + (C3013 + C3021) * C92359 +
            ((C307 * C1393 + C92157 * C1610) * C181 +
             (C307 * C1475 + C92157 * C1676) * C92105) *
                C69237) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92362 +
            (C11246 + C11262) * C92359 + C30032 * C69237) *
               C46523 +
           ((C401 + C417) * C92362 + C13093 * C92359 + C30033 * C69237) *
               C92072) *
              C92084 * C1383 -
          (((C30042 + C30036) * C69237 + C31838 * C92359 + C13095 * C92362) *
               C92072 +
           ((C30043 + C30039) * C69237 + (C11265 + C11257) * C92359 +
            (C11262 + C11246) * C92362) *
               C46523) *
              C92084 * C1384 +
          ((C30032 * C92362 + C39432 * C92359 + (C39435 + C39437) * C69237) *
               C46523 +
           (C30033 * C92362 + (C30036 + C30042) * C92359 +
            ((C307 * C29612 + C92157 * C29934) * C181 +
             (C307 * C29736 + C92157 * C30030) * C92105) *
                C69237) *
               C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92362 +
            (C11153 * C244 + C11351 * C92116) * C92359 +
            (C11160 * C244 + C11352 * C92116) * C69237) *
               C46523 +
           ((C481 + C497) * C92362 + (C9753 + C9754) * C92359 +
            (C28571 + C28572) * C69237) *
               C92072) *
              C798 -
          (((C30961 + C30959) * C69237 + (C12212 + C12208) * C92359 +
            (C2387 + C2381) * C92362) *
               C92072 +
           ((C32914 * C92116 + C32703 * C244) * C69237 +
            (C14153 * C92116 + C13944 * C244) * C92359 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92362) *
               C46523) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C92362 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92359 +
            ((C307 * C16095 + C92157 * C16333) * C244 +
             (C307 * C16255 + C92157 * C16487) * C92116) *
                C69237) *
               C46523 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C92362 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92359 +
            ((C307 * C16096 + C92157 * C16334) * C244 +
             (C307 * C16256 + C92157 * C16488) * C92116) *
                C69237) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92362 +
            (C11153 * C244 + C11351 * C92116) * C92359 +
            (C11160 * C244 + C11352 * C92116) * C69237) *
               C46523 +
           ((C481 + C497) * C92362 + (C9753 + C9754) * C92359 +
            (C28571 + C28572) * C69237) *
               C92072) *
              C92105 * C93 -
          (((C28573 + C28574) * C69237 + (C9757 + C9756) * C92359 +
            (C498 + C484) * C92362) *
               C92072 +
           ((C28572 + C28571) * C69237 + (C9754 + C9753) * C92359 +
            (C497 + C481) * C92362) *
               C46523) *
              C92105 * C94 +
          ((C501 * C92362 + C9760 * C92359 + (C28574 + C28573) * C69237) *
               C46523 +
           (C502 * C92362 + (C9759 + C9758) * C92359 +
            ((C307 * C1393 + C92157 * C1610) * C244 +
             (C307 * C1544 + C92157 * C1734) * C92116) *
                C69237) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1534 +
            (C307 * C245 + C92157 * C474) * C1383 - C11153 * C1535 -
            C11351 * C1384 + C11160 * C1536 + C11352 * C1385) *
               C92362 +
           (C11153 * C1534 + C11351 * C1383 - C11160 * C1535 - C11352 * C1384 +
            C29951 * C1536 + C30124 * C1385) *
               C92359 +
           (C11160 * C1534 + C11352 * C1383 - C29951 * C1535 - C30124 * C1384 +
            C39378 * C1536 + C39491 * C1385) *
               C69237) *
              C46523 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C11158 * C1536 + C11353 * C1385) *
               C92362 +
           (C2934 * C1534 + C3104 * C1383 - C11158 * C1535 - C11353 * C1384 +
            C29949 * C1536 + C30125 * C1385) *
               C92359 +
           (C11158 * C1534 + C11353 * C1383 - C29949 * C1535 - C30125 * C1384 +
            (C307 * C29612 + C92157 * C29934) * C1536 +
            (C307 * C29837 + C92157 * C30118) * C1385) *
               C69237) *
              C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C801 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C92084) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C801 +
                      (C69715 + C69714 + C69713) * C92084) *
                         C92072) *
                        C92157 * C92116 * C798 -
                    (((C69684 * C5726 + C69237 * C6203 + C69683 * C3440 +
                       C92359 * C3880 + C69682 * C812 + C92362 * C1211) *
                          C92084 +
                      (C69684 * C5720 + C69237 * C6200 + C69683 * C3432 +
                       C92359 * C3876 + C69682 * C804 + C92362 * C1203) *
                          C801) *
                         C92072 +
                     ((C69684 * C5725 + C69237 * C6202 + C69683 * C3439 +
                       C92359 * C3879 + C69682 * C813 + C92362 * C1212) *
                          C92084 +
                      (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                       C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                          C801) *
                         C46523) *
                        C92157 * C92116 * C799 +
                    (((C69682 * C806 + C92362 * C1205 + C69683 * C8412 +
                       C92359 * C9072 + C69684 * C16095 + C69237 * C16563) *
                          C801 +
                      (C69682 * C822 + C92362 * C1213 + C69683 * C8418 +
                       C92359 * C9075 + C69684 * C16099 + C69237 * C16565) *
                          C92084) *
                         C46523 +
                     ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                       C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                          C801 +
                      (C69682 * C823 + C92362 * C1214 + C69683 * C8419 +
                       C92359 * C9076 + C69684 * C16100 + C69237 * C16566) *
                          C92084) *
                         C92072) *
                        C92157 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C104 +
                     (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                      C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                         C93 -
                     (C69710 + C69711 + C69712) * C105 -
                     (C69713 + C69714 + C69715) * C94 +
                     (C69716 + C69717 + C69718) * C106 +
                     (C69719 + C69720 + C69721) * C95) *
                        C46523 +
                    ((C69712 + C69711 + C69710) * C104 +
                     (C69715 + C69714 + C69713) * C93 -
                     (C69718 + C69717 + C69716) * C105 -
                     (C69721 + C69720 + C69719) * C94 +
                     (C69682 * C110 + C92362 * C558 + C69683 * C1386 +
                      C92359 * C1785 + C69684 * C1393 + C69237 * C1792) *
                         C106 +
                     (C69682 * C120 + C92362 * C564 + C69683 * C1394 +
                      C92359 * C1793 + C69684 * C1409 + C69237 * C1800) *
                         C95) *
                        C92072) *
                   C92157 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C801 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C92084) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C801 +
                      (C69715 + C69714 + C69713) * C92084) *
                         C92072) *
                        C92157 * C1383 -
                    (((C69684 * C10815 + C69237 * C11432 + C69683 * C1407 +
                       C92359 * C1798 + C69682 * C1396 + C92362 * C1795) *
                          C92084 +
                      (C69684 * C10809 + C69237 * C11429 + C69683 * C1391 +
                       C92359 * C1790 + C69682 * C1388 + C92362 * C1787) *
                          C801) *
                         C92072 +
                     ((C69684 * C10814 + C69237 * C11431 + C69683 * C1406 +
                       C92359 * C1797 + C69682 * C1397 + C92362 * C1796) *
                          C92084 +
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C801) *
                         C46523) *
                        C92157 * C1384 +
                    (((C69682 * C1390 + C92362 * C1789 + C69683 * C10808 +
                       C92359 * C11428 + C69684 * C29611 + C69237 * C30199) *
                          C801 +
                      (C69682 * C1406 + C92362 * C1797 + C69683 * C10814 +
                       C92359 * C11431 + C69684 * C29615 + C69237 * C30201) *
                          C92084) *
                         C46523 +
                     ((C69682 * C1391 + C92362 * C1790 + C69683 * C10809 +
                       C92359 * C11429 + C69684 * C29612 + C69237 * C30200) *
                          C801 +
                      (C69682 * C1407 + C92362 * C1798 + C69683 * C10815 +
                       C92359 * C11432 + C69684 * C29616 + C69237 * C30202) *
                          C92084) *
                         C92072) *
                        C92157 * C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eezy[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C884 +
                     (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                      C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                         C798 -
                     (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                      C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                         C885 -
                     (C69684 * C5805 + C69237 * C6279 + C69683 * C3513 +
                      C92359 * C3949 + C69682 * C890 + C92362 * C1267) *
                         C799 +
                     (C69682 * C806 + C92362 * C1205 + C69683 * C8412 +
                      C92359 * C9072 + C69684 * C16095 + C69237 * C16563) *
                         C886 +
                     (C69682 * C891 + C92362 * C1268 + C69683 * C8540 +
                      C92359 * C9188 + C69684 * C16177 + C69237 * C16641) *
                         C800) *
                        C46523 +
                    ((C69712 + C69711 + C69710) * C884 +
                     (C69808 + C69809 + C69810) * C798 -
                     (C69684 * C5720 + C69237 * C6200 + C69683 * C3432 +
                      C92359 * C3876 + C69682 * C804 + C92362 * C1203) *
                         C885 -
                     (C69684 * C5806 + C69237 * C6280 + C69683 * C3514 +
                      C92359 * C3950 + C69682 * C889 + C92362 * C1269) *
                         C799 +
                     (C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                      C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                         C886 +
                     (C69682 * C892 + C92362 * C1270 + C69683 * C8541 +
                      C92359 * C9189 + C69684 * C16178 + C69237 * C16642) *
                         C800) *
                        C92072) *
                   C92157 * C92084 * C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C181 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C92105) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C181 +
                      (C69808 + C69809 + C69810) * C92105) *
                         C92072) *
                        C92157 * C93 -
                    (((C69811 + C69812 + C69813) * C92105 +
                      (C69718 + C69717 + C69716) * C181) *
                         C92072 +
                     ((C69810 + C69809 + C69808) * C92105 +
                      (C69710 + C69711 + C69712) * C181) *
                         C46523) *
                        C92157 * C94 +
                    (((C69716 + C69717 + C69718) * C181 +
                      (C69813 + C69812 + C69811) * C92105) *
                         C46523 +
                     ((C69682 * C110 + C92362 * C558 + C69683 * C1386 +
                       C92359 * C1785 + C69684 * C1393 + C69237 * C1792) *
                          C181 +
                      (C69682 * C185 + C92362 * C644 + C69683 * C1468 +
                       C92359 * C1851 + C69684 * C1475 + C69237 * C1858) *
                          C92105) *
                         C92072) *
                        C92157 * C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C181 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C92105) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C181 +
                      (C69808 + C69809 + C69810) * C92105) *
                         C92072) *
                        C92157 * C92084 * C1383 -
                    (((C69684 * C10931 + C69237 * C11509 + C69683 * C1473 +
                       C92359 * C1856 + C69682 * C1470 + C92362 * C1853) *
                          C92105 +
                      (C69684 * C10809 + C69237 * C11429 + C69683 * C1391 +
                       C92359 * C1790 + C69682 * C1388 + C92362 * C1787) *
                          C181) *
                         C92072 +
                     ((C69684 * C10930 + C69237 * C11508 + C69683 * C1472 +
                       C92359 * C1855 + C69682 * C1471 + C92362 * C1854) *
                          C92105 +
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C181) *
                         C46523) *
                        C92157 * C92084 * C1384 +
                    (((C69682 * C1390 + C92362 * C1789 + C69683 * C10808 +
                       C92359 * C11428 + C69684 * C29611 + C69237 * C30199) *
                          C181 +
                      (C69682 * C1472 + C92362 * C1855 + C69683 * C10930 +
                       C92359 * C11508 + C69684 * C29735 + C69237 * C30277) *
                          C92105) *
                         C46523 +
                     ((C69682 * C1391 + C92362 * C1790 + C69683 * C10809 +
                       C92359 * C11429 + C69684 * C29612 + C69237 * C30200) *
                          C181 +
                      (C69682 * C1473 + C92362 * C1856 + C69683 * C10931 +
                       C92359 * C11509 + C69684 * C29736 + C69237 * C30278) *
                          C92105) *
                         C92072) *
                        C92157 * C92084 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C244 +
                      (C69900 + C69901 + C69902) * C92116) *
                         C92072) *
                        C92157 * C798 -
                    (((C69684 * C5886 + C69237 * C6357 + C69683 * C3588 +
                       C92359 * C4020 + C69682 * C955 + C92362 * C1327) *
                          C92116 +
                      (C69684 * C5720 + C69237 * C6200 + C69683 * C3432 +
                       C92359 * C3876 + C69682 * C804 + C92362 * C1203) *
                          C244) *
                         C92072 +
                     ((C69684 * C5885 + C69237 * C6356 + C69683 * C3587 +
                       C92359 * C4019 + C69682 * C956 + C92362 * C1328) *
                          C92116 +
                      (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                       C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                          C244) *
                         C46523) *
                        C92157 * C799 +
                    (((C69682 * C806 + C92362 * C1205 + C69683 * C8412 +
                       C92359 * C9072 + C69684 * C16095 + C69237 * C16563) *
                          C244 +
                      (C69682 * C957 + C92362 * C1329 + C69683 * C8653 +
                       C92359 * C9292 + C69684 * C16255 + C69237 * C16717) *
                          C92116) *
                         C46523 +
                     ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                       C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                          C244 +
                      (C69682 * C958 + C92362 * C1330 + C69683 * C8654 +
                       C92359 * C9293 + C69684 * C16256 + C69237 * C16718) *
                          C92116) *
                         C92072) *
                        C92157 * C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C244 +
                      (C69900 + C69901 + C69902) * C92116) *
                         C92072) *
                        C92157 * C92105 * C93 -
                    (((C69903 + C69904 + C69905) * C92116 +
                      (C69718 + C69717 + C69716) * C244) *
                         C92072 +
                     ((C69902 + C69901 + C69900) * C92116 +
                      (C69710 + C69711 + C69712) * C244) *
                         C46523) *
                        C92157 * C92105 * C94 +
                    (((C69716 + C69717 + C69718) * C244 +
                      (C69905 + C69904 + C69903) * C92116) *
                         C46523 +
                     ((C69682 * C110 + C92362 * C558 + C69683 * C1386 +
                       C92359 * C1785 + C69684 * C1393 + C69237 * C1792) *
                          C244 +
                      (C69682 * C248 + C92362 * C722 + C69683 * C1537 +
                       C92359 * C1915 + C69684 * C1544 + C69237 * C1916) *
                          C92116) *
                         C92072) *
                        C92157 * C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C1534 +
                     (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                      C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                         C1383 -
                     (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                      C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                         C1535 -
                     (C69684 * C11028 + C69237 * C11585 + C69683 * C1541 +
                      C92359 * C1910 + C69682 * C1540 + C92362 * C1909) *
                         C1384 +
                     (C69682 * C1390 + C92362 * C1789 + C69683 * C10808 +
                      C92359 * C11428 + C69684 * C29611 + C69237 * C30199) *
                         C1536 +
                     (C69682 * C1541 + C92362 * C1910 + C69683 * C11028 +
                      C92359 * C11585 + C69684 * C29836 + C69237 * C30353) *
                         C1385) *
                        C46523 +
                    ((C69712 + C69711 + C69710) * C1534 +
                     (C69900 + C69901 + C69902) * C1383 -
                     (C69684 * C10809 + C69237 * C11429 + C69683 * C1391 +
                      C92359 * C1790 + C69682 * C1388 + C92362 * C1787) *
                         C1535 -
                     (C69684 * C11029 + C69237 * C11586 + C69683 * C1542 +
                      C92359 * C1912 + C69682 * C1539 + C92362 * C1911) *
                         C1384 +
                     (C69682 * C1391 + C92362 * C1790 + C69683 * C10809 +
                      C92359 * C11429 + C69684 * C29612 + C69237 * C30200) *
                         C1536 +
                     (C69682 * C1542 + C92362 * C1912 + C69683 * C11029 +
                      C92359 * C11586 + C69684 * C29837 + C69237 * C30354) *
                         C1385) *
                        C92072) *
                   C92157 * C92105 * C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C1987 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C1983 -
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C1988 -
            (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
                C1984) *
               C92157 * C92362 +
           ((C53318 + C53319) * C1987 + (C53320 + C53321) * C1983 -
            (C55592 + C55593) * C1988 - (C55594 + C55595) * C1984) *
               C92157 * C92359 +
           (C70646 * C1987 + C70647 * C1983 - (C72298 + C72299) * C1988 -
            (C72300 + C72301) * C1984) *
               C92157 * C69237) *
              C2709 +
          (((C55593 + C55592) * C1988 -
            ((C53321 + C53320) * C1983 + (C53319 + C53318) * C1987) +
            (C55595 + C55594) * C1984) *
               C92157 * C92362 +
           ((C72299 + C72298) * C1988 -
            ((C53326 + C53327) * C1983 + (C53328 + C53329) * C1987) +
            (C72301 + C72300) * C1984) *
               C92157 * C92359 +
           ((C46528 * C10809 + C46523 * C10812 + C46529 * C10810 +
             C92072 * C10813) *
                C1988 -
            ((C70658 + C70659) * C1983 + (C70660 + C70661) * C1987) +
            (C46528 * C10815 + C46523 * C10818 + C46529 * C10816 +
             C92072 * C10819) *
                C1984) *
               C92157 * C69237) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eexy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                 C181 +
             (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                 C92105) *
                C92157 * C92362 +
            ((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92157 *
                C92359 +
            C70748 * C69237) *
               C1983 -
           (((C72404 + C72405) * C92105 + (C72298 + C72299) * C181) * C92157 *
                C69237 +
            ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C92157 *
                C92359 +
            ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                 C92105 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C181) *
                C92157 * C92362) *
               C1984) *
              C2709 +
          ((((C55593 + C55592) * C181 + (C55731 + C55730) * C92105) * C92157 *
                C92362 +
            ((C72299 + C72298) * C181 + (C72405 + C72404) * C92105) * C92157 *
                C92359 +
            ((C46528 * C10809 + C46523 * C10812 + C46529 * C10810 +
              C92072 * C10813) *
                 C181 +
             (C46528 * C10931 + C46523 * C10934 + C46529 * C10932 +
              C92072 * C10935) *
                 C92105) *
                C92157 * C69237) *
               C1984 -
           (((C70745 + C70746) * C92105 + (C70660 + C70661) * C181) * C92157 *
                C69237 +
            ((C53444 + C53445) * C92105 + (C53328 + C53329) * C181) * C92157 *
                C92359 +
            ((C53441 + C53440) * C92105 + (C53319 + C53318) * C181) * C92157 *
                C92362) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C2849 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C2709 -
            (C53319 + C53318) * C2850 - (C53556 + C53557) * C2710) *
               C92157 * C92362 +
           ((C53318 + C53319) * C2849 + (C53557 + C53556) * C2709 -
            (C53328 + C53329) * C2850 - (C53559 + C53558) * C2710) *
               C92157 * C92359 +
           (C70646 * C2849 + C70823 * C2709 - (C70660 + C70661) * C2850 -
            (C70829 + C70828) * C2710) *
               C92157 * C69237) *
              C92105 * C1983 +
          (((C55593 + C55592) * C2850 -
            ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                 C2709 +
             (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                 C2849) +
            (C55866 + C55867) * C2710) *
               C92157 * C92362 +
           ((C72299 + C72298) * C2850 -
            ((C55867 + C55866) * C2709 + (C55592 + C55593) * C2849) +
            (C72508 + C72509) * C2710) *
               C92157 * C92359 +
           ((C46528 * C10809 + C46523 * C10812 + C46529 * C10810 +
             C92072 * C10813) *
                C2850 -
            ((C72509 + C72508) * C2709 + (C72298 + C72299) * C2849) +
            (C46528 * C11029 + C46523 * C11032 + C46529 * C11030 +
             C92072 * C11033) *
                C2710) *
               C92157 * C69237) *
              C92105 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92362 +
            (C12983 + C12984 - C12985 - C12986) * C92359 +
            (C31732 + C31733 - C31734 - C31735) * C69237) *
               C46523 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92362 +
            (C12987 + C12988 - C12989 - C12990) * C92359 +
            (C31736 + C31737 - C31738 - C31739) * C69237) *
               C92072) *
              C2709 +
          (((C12985 - (C12984 + C12983) + C12986) * C92362 +
            (C31734 - (C31733 + C31732) + C31735) * C92359 +
            (C40524 - (C40523 + C40522) + C40525) * C69237) *
               C46523 +
           ((C12989 - (C12988 + C12987) + C12990) * C92362 +
            (C31738 - (C31737 + C31736) + C31739) * C92359 +
            ((C307 * C10810 + C92157 * C11128) * C1988 -
             (C29948 * C1983 + C29949 * C1987) +
             (C307 * C10816 + C92157 * C11131) * C1984) *
                C69237) *
               C92072) *
              C2710) *
         C92105) /
        (p * q * std::sqrt(p + q));
    d2eeyy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C181 +
              (C307 * C182 + C92157 * C394) * C92105) *
                 C92362 +
             (C11246 + C11262) * C92359 + C30032 * C69237) *
                C46523 +
            ((C401 + C417) * C92362 + C13093 * C92359 + C30033 * C69237) *
                C92072) *
               C1983 -
           (((C11263 + C11251) * C69237 + C13094 * C92359 +
             (C418 + C404) * C92362) *
                C92072 +
            (C31838 * C69237 + C13095 * C92359 + (C417 + C401) * C92362) *
                C46523) *
               C1984) *
              C2709 +
          (((C13093 * C92362 + C30033 * C92359 + (C30036 + C30042) * C69237) *
                C46523 +
            (C9676 * C92362 + (C11251 + C11263) * C92359 +
             ((C307 * C10810 + C92157 * C11128) * C181 +
              (C307 * C10932 + C92157 * C11244) * C92105) *
                 C69237) *
                C92072) *
               C1984 -
           (((C30042 + C30036) * C69237 + C31838 * C92359 + C13095 * C92362) *
                C92072 +
            ((C30043 + C30039) * C69237 + (C11265 + C11257) * C92359 +
             (C11262 + C11246) * C92362) *
                C46523) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C92362 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C92359 +
                      (C11160 * C2849 + C11352 * C2709 - C29951 * C2850 -
                       C30124 * C2710) *
                          C69237) *
                         C46523 +
                     ((C3089 + C3090 - C3091 - C3107) * C92362 +
                      (C13194 + C13195 - C13196 - C13197) * C92359 +
                      (C31937 + C31938 - C31939 - C31940) * C69237) *
                         C92072) *
                        C92105 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C92362 +
                      (C13196 - (C13195 + C13194) + C13197) * C92359 +
                      (C31939 - (C31938 + C31937) + C31940) * C69237) *
                         C46523 +
                     ((C3096 - (C3095 + C3094) + C3108) * C92362 +
                      (C13200 - (C13199 + C13198) + C13201) * C92359 +
                      ((C307 * C10810 + C92157 * C11128) * C2850 -
                       (C11354 * C2709 + C11156 * C2849) +
                       (C307 * C11030 + C92157 * C11341) * C2710) *
                          C69237) *
                         C92072) *
                        C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C1987 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C1983 -
                      (C69710 + C69711 + C69712) * C1988 -
                      (C69713 + C69714 + C69715) * C1984) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C1987 +
                      (C69715 + C69714 + C69713) * C1983 -
                      (C69718 + C69717 + C69716) * C1988 -
                      (C69721 + C69720 + C69719) * C1984) *
                         C92072) *
                        C92157 * C2709 +
                    (((C72914 + C72915 + C72916) * C1988 -
                      ((C69684 * C10814 + C69237 * C11431 + C69683 * C1406 +
                        C92359 * C1797 + C69682 * C1397 + C92362 * C1796) *
                           C1983 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C1987) +
                      (C72917 + C72918 + C72919) * C1984) *
                         C46523 +
                     ((C69682 * C1387 + C92362 * C1786 + C69683 * C1392 +
                       C92359 * C1791 + C69684 * C10810 + C69237 * C11430) *
                          C1988 -
                      ((C72919 + C72918 + C72917) * C1983 +
                       (C72916 + C72915 + C72914) * C1987) +
                      (C69682 * C1395 + C92362 * C1794 + C69683 * C1408 +
                       C92359 * C1799 + C69684 * C10816 + C69237 * C11433) *
                          C1984) *
                         C92072) *
                        C92157 * C2710) *
                   C92105) /
                  (p * q * std::sqrt(p + q));
    d2eezy[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                        C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                           C181 +
                       (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                        C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                           C92105) *
                          C46523 +
                      ((C69712 + C69711 + C69710) * C181 +
                       (C69808 + C69809 + C69810) * C92105) *
                          C92072) *
                         C92157 * C1983 -
                     (((C69811 + C69812 + C69813) * C92105 +
                       (C69718 + C69717 + C69716) * C181) *
                          C92072 +
                      ((C69810 + C69809 + C69808) * C92105 +
                       (C69710 + C69711 + C69712) * C181) *
                          C46523) *
                         C92157 * C1984) *
                        C2709 +
                    ((((C72914 + C72915 + C72916) * C181 +
                       (C73024 + C73025 + C73026) * C92105) *
                          C46523 +
                      ((C69682 * C1387 + C92362 * C1786 + C69683 * C1392 +
                        C92359 * C1791 + C69684 * C10810 + C69237 * C11430) *
                           C181 +
                       (C69682 * C1469 + C92362 * C1852 + C69683 * C1474 +
                        C92359 * C1857 + C69684 * C10932 + C69237 * C11510) *
                           C92105) *
                          C92072) *
                         C92157 * C1984 -
                     (((C73026 + C73025 + C73024) * C92105 +
                       (C72916 + C72915 + C72914) * C181) *
                          C92072 +
                      ((C69684 * C10930 + C69237 * C11508 + C69683 * C1472 +
                        C92359 * C1855 + C69682 * C1471 + C92362 * C1854) *
                           C92105 +
                       (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                        C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                           C181) *
                          C46523) *
                         C92157 * C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C2849 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C2709 -
                      (C69684 * C10808 + C69237 * C11428 + C69683 * C1390 +
                       C92359 * C1789 + C69682 * C1389 + C92362 * C1788) *
                          C2850 -
                      (C69684 * C11028 + C69237 * C11585 + C69683 * C1541 +
                       C92359 * C1910 + C69682 * C1540 + C92362 * C1909) *
                          C2710) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C2849 +
                      (C69900 + C69901 + C69902) * C2709 -
                      (C72916 + C72915 + C72914) * C2850 -
                      (C73131 + C73132 + C73133) * C2710) *
                         C92072) *
                        C92157 * C92105 * C1983 +
                    (((C72914 + C72915 + C72916) * C2850 -
                      ((C69902 + C69901 + C69900) * C2709 +
                       (C69710 + C69711 + C69712) * C2849) +
                      (C73133 + C73132 + C73131) * C2710) *
                         C46523 +
                     ((C69682 * C1387 + C92362 * C1786 + C69683 * C1392 +
                       C92359 * C1791 + C69684 * C10810 + C69237 * C11430) *
                          C2850 -
                      ((C69903 + C69904 + C69905) * C2709 +
                       (C69718 + C69717 + C69716) * C2849) +
                      (C69682 * C1538 + C92362 * C1913 + C69683 * C1543 +
                       C92359 * C1914 + C69684 * C11030 + C69237 * C11587) *
                          C2710) *
                         C92072) *
                        C92157 * C92105 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C104 +
           (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
               C93 -
           (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
               C105 -
           (C46529 * C119 + C92072 * C127 + C46528 * C118 + C46523 * C126) *
               C94 +
           (C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
               C106 +
           (C46528 * C119 + C46523 * C127 + C46529 * C120 + C92072 * C128) *
               C95) *
              C92157 * C92362 +
          ((C53318 + C53319) * C104 + (C53320 + C53321) * C93 -
           (C55592 + C55593) * C105 - (C55594 + C55595) * C94 +
           (C46528 * C1387 + C46523 * C1399 + C46529 * C1386 + C92072 * C1398) *
               C106 +
           (C46528 * C1395 + C46523 * C1411 + C46529 * C1394 + C92072 * C1410) *
               C95) *
              C92157 * C92359 +
          ((C53329 + C53328) * C104 + (C53327 + C53326) * C93 -
           (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 + C46523 * C1403) *
               C105 -
           (C46529 * C1408 + C92072 * C1416 + C46528 * C1407 + C46523 * C1415) *
               C94 +
           (C46528 * C1392 + C46523 * C1404 + C46529 * C1393 + C92072 * C1405) *
               C106 +
           (C46528 * C1408 + C46523 * C1416 + C46529 * C1409 + C92072 * C1417) *
               C95) *
              C92157 * C69237) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C801 +
            (C46528 * C117 + C46523 * C125 + C46529 * C118 + C92072 * C126) *
                C92084) *
               C92157 * C92362 +
           ((C53318 + C53319) * C801 + (C53320 + C53321) * C92084) * C92157 *
               C92359 +
           ((C53329 + C53328) * C801 + (C53327 + C53326) * C92084) * C92157 *
               C69237) *
              C92116 * C798 -
          (((C53322 + C53323) * C92084 + (C53324 + C53325) * C801) * C92157 *
               C69237 +
           C56825 * C92157 * C92359 +
           ((C47299 + C47298) * C92084 + (C47297 + C47296) * C801) * C92157 *
               C92362) *
              C92116 * C799 +
          (C47312 * C92157 * C92362 +
           ((C50619 + C50618) * C801 + (C50617 + C50616) * C92084) * C92157 *
               C92359 +
           ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
             C92072 * C16098) *
                C801 +
            (C46528 * C16099 + C46523 * C16101 + C46529 * C16100 +
             C92072 * C16102) *
                C92084) *
               C92157 * C69237) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C181 +
            (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
                C92105) *
               C92157 * C92362 +
           ((C53318 + C53319) * C181 + (C53440 + C53441) * C92105) * C92157 *
               C92359 +
           ((C53329 + C53328) * C181 + (C53445 + C53444) * C92105) * C92157 *
               C69237) *
              C93 -
          (((C46529 * C1474 + C92072 * C1482 + C46528 * C1473 +
             C46523 * C1481) *
                C92105 +
            (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
             C46523 * C1403) *
                C181) *
               C92157 * C69237 +
           ((C55730 + C55731) * C92105 + (C55592 + C55593) * C181) * C92157 *
               C92359 +
           ((C46529 * C184 + C92072 * C190 + C46528 * C183 + C46523 * C189) *
                C92105 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C181) *
               C92157 * C92362) *
              C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C181 +
            (C46528 * C184 + C46523 * C190 + C46529 * C185 + C92072 * C191) *
                C92105) *
               C92157 * C92362 +
           ((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C181 +
            (C46528 * C1469 + C46523 * C1477 + C46529 * C1468 +
             C92072 * C1476) *
                C92105) *
               C92157 * C92359 +
           ((C46528 * C1392 + C46523 * C1404 + C46529 * C1393 +
             C92072 * C1405) *
                C181 +
            (C46528 * C1474 + C46523 * C1482 + C46529 * C1475 +
             C92072 * C1483) *
                C92105) *
               C92157 * C69237) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
               C884 +
           (C46528 * C182 + C46523 * C188 + C46529 * C183 + C92072 * C189) *
               C798 -
           (C47297 + C47296) * C885 - (C47399 + C47400) * C799 + C47308 * C886 +
           C47405 * C800) *
              C92157 * C92362 +
          ((C53318 + C53319) * C884 + (C53440 + C53441) * C798 - C56819 * C885 -
           C56956 * C799 + (C50619 + C50618) * C886 +
           (C50732 + C50733) * C800) *
              C92157 * C92359 +
          ((C53329 + C53328) * C884 + (C53445 + C53444) * C798 -
           (C53324 + C53325) * C885 - (C53442 + C53443) * C799 +
           (C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
            C92072 * C16098) *
               C886 +
           (C46528 * C16177 + C46523 * C16179 + C46529 * C16178 +
            C92072 * C16180) *
               C800) *
              C92157 * C69237) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C92362 +
           ((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92157 *
               C92359 +
           ((C53329 + C53328) * C244 + (C53558 + C53559) * C92116) * C92157 *
               C69237) *
              C92105 * C93 -
          (((C46529 * C1543 + C92072 * C1551 + C46528 * C1542 +
             C46523 * C1550) *
                C92116 +
            (C46529 * C1392 + C92072 * C1404 + C46528 * C1391 +
             C46523 * C1403) *
                C244) *
               C92157 * C69237 +
           ((C55867 + C55866) * C92116 + (C55592 + C55593) * C244) * C92157 *
               C92359 +
           ((C46529 * C247 + C92072 * C253 + C46528 * C246 + C46523 * C252) *
                C92116 +
            (C46529 * C109 + C92072 * C115 + C46528 * C108 + C46523 * C114) *
                C244) *
               C92157 * C92362) *
              C92105 * C94 +
          (((C46528 * C109 + C46523 * C115 + C46529 * C110 + C92072 * C116) *
                C244 +
            (C46528 * C247 + C46523 * C253 + C46529 * C248 + C92072 * C254) *
                C92116) *
               C92157 * C92362 +
           ((C46528 * C1387 + C46523 * C1399 + C46529 * C1386 +
             C92072 * C1398) *
                C244 +
            (C46528 * C1538 + C46523 * C1546 + C46529 * C1537 +
             C92072 * C1545) *
                C92116) *
               C92157 * C92359 +
           ((C46528 * C1392 + C46523 * C1404 + C46529 * C1393 +
             C92072 * C1405) *
                C244 +
            (C46528 * C1543 + C46523 * C1551 + C46529 * C1544 +
             C92072 * C1552) *
                C92116) *
               C92157 * C69237) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C46528 * C107 + C46523 * C113 + C46529 * C108 + C92072 * C114) *
                C244 +
            (C46528 * C245 + C46523 * C251 + C46529 * C246 + C92072 * C252) *
                C92116) *
               C92157 * C92362 +
           ((C53318 + C53319) * C244 + (C53557 + C53556) * C92116) * C92157 *
               C92359 +
           ((C53329 + C53328) * C244 + (C53558 + C53559) * C92116) * C92157 *
               C69237) *
              C798 -
          (((C53561 + C53560) * C92116 + (C53324 + C53325) * C244) * C92157 *
               C69237 +
           (C57088 * C92116 + C56819 * C244) * C92157 * C92359 +
           ((C47494 + C47493) * C92116 + (C47297 + C47296) * C244) * C92157 *
               C92362) *
              C799 +
          (C47501 * C92157 * C92362 +
           ((C50619 + C50618) * C244 + (C50843 + C50842) * C92116) * C92157 *
               C92359 +
           ((C46528 * C16095 + C46523 * C16097 + C46529 * C16096 +
             C92072 * C16098) *
                C244 +
            (C46528 * C16255 + C46523 * C16257 + C46529 * C16256 +
             C92072 * C16258) *
                C92116) *
               C92157 * C69237) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C104 +
                      (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C92362 +
                     (C11153 * C104 + C11154 * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C92359 +
                     (C11160 * C104 + C11159 * C93 - C11158 * C105 -
                      C11157 * C94 + C11156 * C106 + C11155 * C95) *
                         C69237) *
                        C46523 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C92362 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C92359 +
                     (C11158 * C104 + C11157 * C93 - C11156 * C105 -
                      C11155 * C94 + (C307 * C1393 + C92157 * C1610) * C106 +
                      (C307 * C1409 + C92157 * C1618) * C95) *
                         C69237) *
                        C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C92362 +
                      (C11161 + C11162) * C92359 + C29938 * C69237) *
                         C46523 +
                     ((C337 * C801 + C338 * C92084) * C92362 +
                      (C11137 + C11138) * C92359 + C29939 * C69237) *
                         C92072) *
                        C92116 * C798 -
                    (((C32702 + C32701) * C69237 + (C13941 + C13940) * C92359 +
                      (C2213 * C92084 + C2212 * C801) * C92362) *
                         C92072 +
                     ((C32706 + C32705) * C69237 + (C13947 + C13946) * C92359 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C92362) *
                         C46523) *
                        C92116 * C799 +
                    ((((C307 * C806 + C92157 * C1023) * C801 +
                       (C307 * C822 + C92157 * C1031) * C92084) *
                          C92362 +
                      ((C307 * C8412 + C92157 * C8766) * C801 +
                       (C307 * C8418 + C92157 * C8769) * C92084) *
                          C92359 +
                      ((C307 * C16095 + C92157 * C16333) * C801 +
                       (C307 * C16099 + C92157 * C16335) * C92084) *
                          C69237) *
                         C46523 +
                     (((C307 * C807 + C92157 * C1024) * C801 +
                       (C307 * C823 + C92157 * C1032) * C92084) *
                          C92362 +
                      ((C307 * C8413 + C92157 * C8767) * C801 +
                       (C307 * C8419 + C92157 * C8770) * C92084) *
                          C92359 +
                      ((C307 * C16096 + C92157 * C16334) * C801 +
                       (C307 * C16100 + C92157 * C16336) * C92084) *
                          C69237) *
                         C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92362 +
            (C11246 + C11262) * C92359 + C30032 * C69237) *
               C46523 +
           ((C401 + C417) * C92362 + C13093 * C92359 + C30033 * C69237) *
               C92072) *
              C93 -
          (((C11263 + C11251) * C69237 + C13094 * C92359 +
            (C418 + C404) * C92362) *
               C92072 +
           (C31838 * C69237 + C13095 * C92359 + (C417 + C401) * C92362) *
               C46523) *
              C94 +
          ((C421 * C92362 + C9676 * C92359 + (C11251 + C11263) * C69237) *
               C46523 +
           (C422 * C92362 + (C3013 + C3021) * C92359 +
            ((C307 * C1393 + C92157 * C1610) * C181 +
             (C307 * C1475 + C92157 * C1676) * C92105) *
                C69237) *
               C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C92362 +
           (C11153 * C884 + C11258 * C798 - C13944 * C885 - C14051 * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92359 +
           (C11160 * C884 + C11261 * C798 - C32703 * C885 - C32811 * C799 +
            (C307 * C16095 + C92157 * C16333) * C886 +
            (C307 * C16177 + C92157 * C16411) * C800) *
               C69237) *
              C46523 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C92362 +
           (C2934 * C884 + C3016 * C798 - C11989 * C885 - C12101 * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92359 +
           (C11158 * C884 + C11260 * C798 - C30752 * C885 - C30857 * C799 +
            (C307 * C16096 + C92157 * C16334) * C886 +
            (C307 * C16178 + C92157 * C16412) * C800) *
               C69237) *
              C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92362 +
            (C11153 * C244 + C11351 * C92116) * C92359 +
            (C11160 * C244 + C11352 * C92116) * C69237) *
               C46523 +
           ((C481 + C497) * C92362 + (C9753 + C9754) * C92359 +
            (C28571 + C28572) * C69237) *
               C92072) *
              C92105 * C93 -
          (((C28573 + C28574) * C69237 + (C9757 + C9756) * C92359 +
            (C498 + C484) * C92362) *
               C92072 +
           ((C28572 + C28571) * C69237 + (C9754 + C9753) * C92359 +
            (C497 + C481) * C92362) *
               C46523) *
              C92105 * C94 +
          ((C501 * C92362 + C9760 * C92359 + (C28574 + C28573) * C69237) *
               C46523 +
           (C502 * C92362 + (C9759 + C9758) * C92359 +
            ((C307 * C1393 + C92157 * C1610) * C244 +
             (C307 * C1544 + C92157 * C1734) * C92116) *
                C69237) *
               C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92362 +
            (C11153 * C244 + C11351 * C92116) * C92359 +
            (C11160 * C244 + C11352 * C92116) * C69237) *
               C46523 +
           ((C481 + C497) * C92362 + (C9753 + C9754) * C92359 +
            (C28571 + C28572) * C69237) *
               C92072) *
              C798 -
          (((C30961 + C30959) * C69237 + (C12212 + C12208) * C92359 +
            (C2387 + C2381) * C92362) *
               C92072 +
           ((C32914 * C92116 + C32703 * C244) * C69237 +
            (C14153 * C92116 + C13944 * C244) * C92359 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92362) *
               C46523) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C92362 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92359 +
            ((C307 * C16095 + C92157 * C16333) * C244 +
             (C307 * C16255 + C92157 * C16487) * C92116) *
                C69237) *
               C46523 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C92362 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92359 +
            ((C307 * C16096 + C92157 * C16334) * C244 +
             (C307 * C16256 + C92157 * C16488) * C92116) *
                C69237) *
               C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C104 +
                     (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                      C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                         C93 -
                     (C69710 + C69711 + C69712) * C105 -
                     (C69713 + C69714 + C69715) * C94 +
                     (C69716 + C69717 + C69718) * C106 +
                     (C69719 + C69720 + C69721) * C95) *
                        C46523 +
                    ((C69712 + C69711 + C69710) * C104 +
                     (C69715 + C69714 + C69713) * C93 -
                     (C69718 + C69717 + C69716) * C105 -
                     (C69721 + C69720 + C69719) * C94 +
                     (C69682 * C110 + C92362 * C558 + C69683 * C1386 +
                      C92359 * C1785 + C69684 * C1393 + C69237 * C1792) *
                         C106 +
                     (C69682 * C120 + C92362 * C564 + C69683 * C1394 +
                      C92359 * C1793 + C69684 * C1409 + C69237 * C1800) *
                         C95) *
                        C92072) *
                   C92157 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C801 +
                      (C69682 * C117 + C92362 * C561 + C69683 * C1397 +
                       C92359 * C1796 + C69684 * C1406 + C69237 * C1797) *
                          C92084) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C801 +
                      (C69715 + C69714 + C69713) * C92084) *
                         C92072) *
                        C92157 * C92116 * C798 -
                    (((C69684 * C5726 + C69237 * C6203 + C69683 * C3440 +
                       C92359 * C3880 + C69682 * C812 + C92362 * C1211) *
                          C92084 +
                      (C69684 * C5720 + C69237 * C6200 + C69683 * C3432 +
                       C92359 * C3876 + C69682 * C804 + C92362 * C1203) *
                          C801) *
                         C92072 +
                     ((C69684 * C5725 + C69237 * C6202 + C69683 * C3439 +
                       C92359 * C3879 + C69682 * C813 + C92362 * C1212) *
                          C92084 +
                      (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                       C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                          C801) *
                         C46523) *
                        C92157 * C92116 * C799 +
                    (((C69682 * C806 + C92362 * C1205 + C69683 * C8412 +
                       C92359 * C9072 + C69684 * C16095 + C69237 * C16563) *
                          C801 +
                      (C69682 * C822 + C92362 * C1213 + C69683 * C8418 +
                       C92359 * C9075 + C69684 * C16099 + C69237 * C16565) *
                          C92084) *
                         C46523 +
                     ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                       C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                          C801 +
                      (C69682 * C823 + C92362 * C1214 + C69683 * C8419 +
                       C92359 * C9076 + C69684 * C16100 + C69237 * C16566) *
                          C92084) *
                         C92072) *
                        C92157 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C181 +
                      (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                       C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                          C92105) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C181 +
                      (C69808 + C69809 + C69810) * C92105) *
                         C92072) *
                        C92157 * C93 -
                    (((C69811 + C69812 + C69813) * C92105 +
                      (C69718 + C69717 + C69716) * C181) *
                         C92072 +
                     ((C69810 + C69809 + C69808) * C92105 +
                      (C69710 + C69711 + C69712) * C181) *
                         C46523) *
                        C92157 * C94 +
                    (((C69716 + C69717 + C69718) * C181 +
                      (C69813 + C69812 + C69811) * C92105) *
                         C46523 +
                     ((C69682 * C110 + C92362 * C558 + C69683 * C1386 +
                       C92359 * C1785 + C69684 * C1393 + C69237 * C1792) *
                          C181 +
                      (C69682 * C185 + C92362 * C644 + C69683 * C1468 +
                       C92359 * C1851 + C69684 * C1475 + C69237 * C1858) *
                          C92105) *
                         C92072) *
                        C92157 * C95) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                      C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                         C884 +
                     (C69682 * C182 + C92362 * C641 + C69683 * C1471 +
                      C92359 * C1854 + C69684 * C1472 + C69237 * C1855) *
                         C798 -
                     (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                      C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                         C885 -
                     (C69684 * C5805 + C69237 * C6279 + C69683 * C3513 +
                      C92359 * C3949 + C69682 * C890 + C92362 * C1267) *
                         C799 +
                     (C69682 * C806 + C92362 * C1205 + C69683 * C8412 +
                      C92359 * C9072 + C69684 * C16095 + C69237 * C16563) *
                         C886 +
                     (C69682 * C891 + C92362 * C1268 + C69683 * C8540 +
                      C92359 * C9188 + C69684 * C16177 + C69237 * C16641) *
                         C800) *
                        C46523 +
                    ((C69712 + C69711 + C69710) * C884 +
                     (C69808 + C69809 + C69810) * C798 -
                     (C69684 * C5720 + C69237 * C6200 + C69683 * C3432 +
                      C92359 * C3876 + C69682 * C804 + C92362 * C1203) *
                         C885 -
                     (C69684 * C5806 + C69237 * C6280 + C69683 * C3514 +
                      C92359 * C3950 + C69682 * C889 + C92362 * C1269) *
                         C799 +
                     (C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                      C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                         C886 +
                     (C69682 * C892 + C92362 * C1270 + C69683 * C8541 +
                      C92359 * C9189 + C69684 * C16178 + C69237 * C16642) *
                         C800) *
                        C92072) *
                   C92157 * C92084 * C92116) /
                      (p * q * std::sqrt(p + q));
    d2eezz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C244 +
                      (C69900 + C69901 + C69902) * C92116) *
                         C92072) *
                        C92157 * C92105 * C93 -
                    (((C69903 + C69904 + C69905) * C92116 +
                      (C69718 + C69717 + C69716) * C244) *
                         C92072 +
                     ((C69902 + C69901 + C69900) * C92116 +
                      (C69710 + C69711 + C69712) * C244) *
                         C46523) *
                        C92157 * C92105 * C94 +
                    (((C69716 + C69717 + C69718) * C244 +
                      (C69905 + C69904 + C69903) * C92116) *
                         C46523 +
                     ((C69682 * C110 + C92362 * C558 + C69683 * C1386 +
                       C92359 * C1785 + C69684 * C1393 + C69237 * C1792) *
                          C244 +
                      (C69682 * C248 + C92362 * C722 + C69683 * C1537 +
                       C92359 * C1915 + C69684 * C1544 + C69237 * C1916) *
                          C92116) *
                         C92072) *
                        C92157 * C92105 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C69682 * C107 + C92362 * C555 + C69683 * C1389 +
                       C92359 * C1788 + C69684 * C1390 + C69237 * C1789) *
                          C244 +
                      (C69682 * C245 + C92362 * C719 + C69683 * C1540 +
                       C92359 * C1909 + C69684 * C1541 + C69237 * C1910) *
                          C92116) *
                         C46523 +
                     ((C69712 + C69711 + C69710) * C244 +
                      (C69900 + C69901 + C69902) * C92116) *
                         C92072) *
                        C92157 * C798 -
                    (((C69684 * C5886 + C69237 * C6357 + C69683 * C3588 +
                       C92359 * C4020 + C69682 * C955 + C92362 * C1327) *
                          C92116 +
                      (C69684 * C5720 + C69237 * C6200 + C69683 * C3432 +
                       C92359 * C3876 + C69682 * C804 + C92362 * C1203) *
                          C244) *
                         C92072 +
                     ((C69684 * C5885 + C69237 * C6356 + C69683 * C3587 +
                       C92359 * C4019 + C69682 * C956 + C92362 * C1328) *
                          C92116 +
                      (C69684 * C5719 + C69237 * C6199 + C69683 * C3431 +
                       C92359 * C3875 + C69682 * C805 + C92362 * C1204) *
                          C244) *
                         C46523) *
                        C92157 * C799 +
                    (((C69682 * C806 + C92362 * C1205 + C69683 * C8412 +
                       C92359 * C9072 + C69684 * C16095 + C69237 * C16563) *
                          C244 +
                      (C69682 * C957 + C92362 * C1329 + C69683 * C8653 +
                       C92359 * C9292 + C69684 * C16255 + C69237 * C16717) *
                          C92116) *
                         C46523 +
                     ((C69682 * C807 + C92362 * C1206 + C69683 * C8413 +
                       C92359 * C9073 + C69684 * C16096 + C69237 * C16564) *
                          C244 +
                      (C69682 * C958 + C92362 * C1330 + C69683 * C8654 +
                       C92359 * C9293 + C69684 * C16256 + C69237 * C16718) *
                          C92116) *
                         C92072) *
                        C92157 * C800) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92157 * C92183 * C92116 * C1985 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C1988 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C1983 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C1987) +
           (C100 * C812 + C89 * C828 + C101 * C811 + C90 * C827 + C102 * C810 +
            C91 * C826 + C103 * C1991 + C92 * C1992) *
               C1984) *
              C92157 * C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1987 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C1983 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C1988 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C1984) *
               C14523 +
           ((C15306 + C15307) * C1987 + (C15308 + C15309) * C1983 -
            (C16834 + C16835) * C1988 - (C16836 + C16837) * C1984) *
               C14524 +
           (C15318 * C1987 + C15319 * C1983 - (C16838 + C16839) * C1988 -
            (C16840 + C16841) * C1984) *
               C14525) *
              C92183 * C92116 * C1985 +
          (((C16835 + C16834) * C1988 -
            ((C15309 + C15308) * C1983 + (C15307 + C15306) * C1987) +
            (C16837 + C16836) * C1984) *
               C14523 +
           ((C16839 + C16838) * C1988 -
            ((C15313 + C15312) * C1983 + (C15311 + C15310) * C1987) +
            (C16841 + C16840) * C1984) *
               C14524 +
           ((C89875 * C4866 + C92322 * C4869 + C89868 * C4867 +
             C92072 * C4870) *
                C1988 -
            ((C15314 + C15315) * C1983 + (C15316 + C15317) * C1987) +
            (C89875 * C4872 + C92322 * C4875 + C89868 * C4873 +
             C92072 * C4876) *
                C1984) *
               C14525) *
              C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92157 * C92183 * C1983 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C2060 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C1985 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2059) +
           (C100 * C889 + C89 * C897 + C101 * C888 + C90 * C896 + C102 * C887 +
            C91 * C895 + C103 * C2061 + C92 * C2062) *
               C1986) *
              C92157 * C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2059 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C1985 -
            (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
               C14523 +
           ((C15306 + C15307) * C2059 + (C15414 + C15413) * C1985 -
            (C15311 + C15310) * C2060 - (C15416 + C15415) * C1986) *
               C14524 +
           (C15318 * C2059 + C15419 * C1985 - (C15316 + C15317) * C2060 -
            (C15418 + C15417) * C1986) *
               C14525) *
              C92183 * C1983 +
          (((C16835 + C16834) * C2060 -
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C1985 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C2059) +
            (C16948 + C16949) * C1986) *
               C14523 +
           ((C16839 + C16838) * C2060 -
            ((C16949 + C16948) * C1985 + (C16834 + C16835) * C2059) +
            (C16950 + C16951) * C1986) *
               C14524 +
           ((C89875 * C4866 + C92322 * C4869 + C89868 * C4867 +
             C92072 * C4870) *
                C2060 -
            ((C16951 + C16950) * C1985 + (C16838 + C16839) * C2059) +
            (C89875 * C4988 + C92322 * C4991 + C89868 * C4989 +
             C92072 * C4992) *
                C1986) *
               C14525) *
              C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C244 +
            (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
             C91 * C253 + C103 * C248 + C92 * C254) *
                C92116) *
               C92157 * C92183 * C1985 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C92116 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C244) *
               C92157 * C92183 * C1986) *
              C1983 +
          (((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
             C91 * C814 + C103 * C1989 + C92 * C1990) *
                C244 +
            (C100 * C955 + C89 * C963 + C101 * C954 + C90 * C962 + C102 * C953 +
             C91 * C961 + C103 * C2129 + C92 * C2130) *
                C92116) *
               C92157 * C92183 * C1986 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C92116 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C244) *
               C92157 * C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C244 +
             (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                 C92116) *
                C14523 +
            ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C14524 +
            C15519 * C14525) *
               C92183 * C1985 -
           (((C15515 + C15516) * C92116 + (C15316 + C15317) * C244) * C14525 +
            ((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C14524 +
            ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C14523) *
               C92183 * C1986) *
              C1983 +
          ((((C16835 + C16834) * C244 + (C17058 + C17059) * C92116) * C14523 +
            ((C16839 + C16838) * C244 + (C17060 + C17061) * C92116) * C14524 +
            ((C89875 * C4866 + C92322 * C4869 + C89868 * C4867 +
              C92072 * C4870) *
                 C244 +
             (C89875 * C5086 + C92322 * C5089 + C89868 * C5087 +
              C92072 * C5090) *
                 C92116) *
                C14525) *
               C92183 * C1986 -
           (((C17061 + C17060) * C92116 + (C16838 + C16839) * C244) * C14525 +
            ((C17059 + C17058) * C92116 + (C16834 + C16835) * C244) * C14524 +
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C92116 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C244) *
                C14523) *
               C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1987 +
            (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92183 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92183 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92183 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92183 * C92) *
              C92116 * C1985 +
          ((C2212 * C1988 -
            ((C307 * C813 + C92157 * C1030) * C1983 +
             (C307 * C805 + C92157 * C1022) * C1987) +
            C2213 * C1984) *
               C92183 * C89 +
           (C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
               C92183 * C90 +
           (C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
               C92183 * C91 +
           ((C307 * C1989 + C92157 * C2197) * C1988 -
            (C2217 * C1983 + C2216 * C1987) +
            (C307 * C1991 + C92157 * C2198) * C1984) *
               C92183 * C92) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C1987 +
            (C14783 + C14782 + C14781) * C1983 -
            (C14786 + C14785 + C14784) * C1988 -
            (C14789 + C14788 + C14787) * C1984) *
               C92183 * C92072) *
              C92116 * C1985 +
          (((C17172 + C17173 + C17174) * C1988 -
            ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
              C14750 * C813 + C14523 * C1030) *
                 C1983 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C1987) +
            (C17175 + C17176 + C17177) * C1984) *
               C92183 * C92322 +
           ((C14750 * C803 + C14523 * C1020 + C14751 * C808 + C14524 * C1025 +
             C14752 * C4867 + C14525 * C5185) *
                C1988 -
            ((C17177 + C17176 + C17175) * C1983 +
             (C17174 + C17173 + C17172) * C1987) +
            (C14750 * C811 + C14523 * C1028 + C14751 * C824 + C14524 * C1033 +
             C14752 * C4873 + C14525 * C5188) *
                C1984) *
               C92183 * C92072) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2059 +
                      (C307 * C182 + C92157 * C394) * C1985 -
                      (C307 * C805 + C92157 * C1022) * C2060 -
                      (C307 * C890 + C92157 * C1085) * C1986) *
                         C92183 * C89 +
                     (C2285 + C2286 - C2287 - C2303) * C92183 * C90 +
                     (C2290 + C2291 - C2292 - C2304) * C92183 * C91 +
                     (C2295 + C2296 - C2297 - C2305) * C92183 * C92) *
                        C1983 +
                    ((C2287 - (C2286 + C2285) + C2303) * C92183 * C89 +
                     (C2292 - (C2291 + C2290) + C2304) * C92183 * C90 +
                     (C2297 - (C2296 + C2295) + C2305) * C92183 * C91 +
                     ((C307 * C1989 + C92157 * C2197) * C2060 -
                      (C416 * C1985 + C343 * C2059) +
                      (C307 * C2061 + C92157 * C2283) * C1986) *
                         C92183 * C92) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2059 +
                      (C14876 + C14877 + C14878) * C1985 -
                      (C17174 + C17173 + C17172) * C2060 -
                      (C17282 + C17283 + C17284) * C1986) *
                         C92183 * C92072) *
                        C1983 +
                    (((C17172 + C17173 + C17174) * C2060 -
                      ((C14878 + C14877 + C14876) * C1985 +
                       (C14778 + C14779 + C14780) * C2059) +
                      (C17284 + C17283 + C17282) * C1986) *
                         C92183 * C92322 +
                     ((C14750 * C803 + C14523 * C1020 + C14751 * C808 +
                       C14524 * C1025 + C14752 * C4867 + C14525 * C5185) *
                          C2060 -
                      ((C14879 + C14880 + C14881) * C1985 +
                       (C14786 + C14785 + C14784) * C2059) +
                      (C14750 * C888 + C14523 * C1089 + C14751 * C893 +
                       C14524 * C1090 + C14752 * C4989 + C14525 * C5265) *
                          C1986) *
                         C92183 * C92072) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92183 * C89 +
            (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
               C1985 -
           ((C2385 + C2375) * C92183 * C92 + (C2386 + C2378) * C92183 * C91 +
            (C2387 + C2381) * C92183 * C90 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92183 * C89) *
               C1986) *
              C1983 +
          (((C2381 + C2387) * C92183 * C89 + (C2378 + C2386) * C92183 * C90 +
            (C2375 + C2385) * C92183 * C91 +
            ((C307 * C1989 + C92157 * C2197) * C244 +
             (C307 * C2129 + C92157 * C2371) * C92116) *
                C92183 * C92) *
               C1986 -
           ((C500 + C492) * C92183 * C92 + (C499 + C487) * C92183 * C91 +
            (C498 + C484) * C92183 * C90 + (C497 + C481) * C92183 * C89) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C244 +
             (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
              C14752 * C957 + C14525 * C1147) *
                 C92116) *
                C92183 * C92322 +
            ((C14780 + C14779 + C14778) * C244 +
             (C14968 + C14969 + C14970) * C92116) *
                C92183 * C92072) *
               C1985 -
           (((C17389 + C17390 + C17391) * C92116 +
             (C17174 + C17173 + C17172) * C244) *
                C92183 * C92072 +
            ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
              C14750 * C956 + C14523 * C1146) *
                 C92116 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C244) *
                C92183 * C92322) *
               C1986) *
              C1983 +
          ((((C17172 + C17173 + C17174) * C244 +
             (C17391 + C17390 + C17389) * C92116) *
                C92183 * C92322 +
            ((C14750 * C803 + C14523 * C1020 + C14751 * C808 + C14524 * C1025 +
              C14752 * C4867 + C14525 * C5185) *
                 C244 +
             (C14750 * C954 + C14523 * C1144 + C14751 * C959 + C14524 * C1149 +
              C14752 * C5087 + C14525 * C5342) *
                 C92116) *
                C92183 * C92072) *
               C1986 -
           (((C14971 + C14972 + C14973) * C92116 +
             (C14786 + C14785 + C14784) * C244) *
                C92183 * C92072 +
            ((C14970 + C14969 + C14968) * C92116 +
             (C14778 + C14779 + C14780) * C244) *
                C92183 * C92322) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92157 * C92116 * C1985 +
          ((C2468 * C1988 -
            ((C554 * C813 + C92183 * C1212) * C1983 +
             (C554 * C805 + C92183 * C1204) * C1987) +
            C2469 * C1984) *
               C89 +
           (C2470 * C1988 - (C2469 * C1983 + C2468 * C1987) + C2471 * C1984) *
               C90 +
           (C2472 * C1988 - (C2471 * C1983 + C2470 * C1987) + C2473 * C1984) *
               C91 +
           ((C554 * C1989 + C92183 * C2453) * C1988 -
            (C2473 * C1983 + C2472 * C1987) +
            (C554 * C1991 + C92183 * C2454) * C1984) *
               C92) *
              C92157 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92322 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92072) *
               C14523 +
           ((C7130 + C7131 - C7132 - C7133) * C92322 +
            (C7134 + C7135 - C7136 - C7137) * C92072) *
               C14524 +
           ((C17490 + C17491 - C17492 - C17493) * C92322 +
            (C17494 + C17495 - C17496 - C17497) * C92072) *
               C14525) *
              C92116 * C1985 +
          (((C7132 - (C7131 + C7130) + C7133) * C92322 +
            (C7136 - (C7135 + C7134) + C7137) * C92072) *
               C14523 +
           ((C17492 - (C17491 + C17490) + C17493) * C92322 +
            (C17496 - (C17495 + C17494) + C17497) * C92072) *
               C14524 +
           ((C15841 * C1988 - (C15842 * C1983 + C15843 * C1987) +
             C15840 * C1984) *
                C92322 +
            ((C554 * C4867 + C92183 * C5419) * C1988 -
             (C15840 * C1983 + C15841 * C1987) +
             (C554 * C4873 + C92183 * C5422) * C1984) *
                C92072) *
               C14525) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 -
            (C554 * C805 + C92183 * C1204) * C2060 -
            (C554 * C890 + C92183 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92157 * C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C89 +
           (C2548 - (C2547 + C2546) + C2560) * C90 +
           (C2553 - (C2552 + C2551) + C2561) * C91 +
           ((C554 * C1989 + C92183 * C2453) * C2060 -
            (C663 * C1985 + C590 * C2059) +
            (C554 * C2061 + C92183 * C2539) * C1986) *
               C92) *
              C92157 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C92322 +
            (C2541 + C2542 - C2543 - C2559) * C92072) *
               C14523 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C92322 +
            (C7240 + C7241 - C7242 - C7243) * C92072) *
               C14524 +
           ((C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
                C92322 +
            (C17596 + C17597 - C17598 - C17599) * C92072) *
               C14525) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C92322 +
            (C2548 - (C2547 + C2546) + C2560) * C92072) *
               C14523 +
           ((C7242 - (C7241 + C7240) + C7243) * C92322 +
            (C7246 - (C7245 + C7244) + C7247) * C92072) *
               C14524 +
           ((C17598 - (C17597 + C17596) + C17599) * C92322 +
            ((C554 * C4867 + C92183 * C5419) * C2060 -
             (C5548 * C1985 + C5447 * C2059) +
             (C554 * C4989 + C92183 * C5535) * C1986) *
                C92072) *
               C14525) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C89 +
            (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
               C92157 * C1985 -
           ((C2641 + C2631) * C92 + (C2642 + C2634) * C91 +
            (C2643 + C2637) * C90 +
            ((C554 * C956 + C92183 * C1328) * C92116 +
             (C554 * C805 + C92183 * C1204) * C244) *
                C89) *
               C92157 * C1986) *
              C1983 +
          (((C2637 + C2643) * C89 + (C2634 + C2642) * C90 +
            (C2631 + C2641) * C91 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C92) *
               C92157 * C1986 -
           ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
            (C742 + C726) * C89) *
               C92157 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C244 +
              (C554 * C245 + C92183 * C719) * C92116) *
                 C92322 +
             (C726 + C742) * C92072) *
                C14523 +
            ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
            C16019 * C14525) *
               C1985 -
           (((C16020 + C16011) * C92072 + (C16021 + C16014) * C92322) * C14525 +
            (C17698 * C92072 + (C5645 + C5637) * C92322) * C14524 +
            (C7348 * C92072 + (C5642 + C5626) * C92322) * C14523) *
               C1986) *
              C1983 +
          (((C7346 * C92322 + C4791 * C92072) * C14523 +
            (C16008 * C92322 + (C5631 + C5643) * C92072) * C14524 +
            ((C16011 + C16020) * C92322 +
             ((C554 * C4867 + C92183 * C5419) * C244 +
              (C554 * C5087 + C92183 * C5624) * C92116) *
                 C92072) *
                C14525) *
               C1986 -
           (((C5643 + C5631) * C92072 + C17698 * C92322) * C14525 +
            (C7347 * C92072 + C7348 * C92322) * C14524 +
            ((C743 + C729) * C92072 + (C742 + C726) * C92322) * C14523) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C801 +
            (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
             C91 * C127 + C103 * C120 + C92 * C128) *
                C92084) *
               C92157 * C92183 * C2709 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C92084 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C801) *
               C92157 * C92183 * C2710) *
              C1985 +
          (((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
             C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
                C801 +
            (C100 * C3439 + C89 * C3443 + C101 * C3440 + C90 * C3444 +
             C102 * C3441 + C91 * C3445 + C103 * C3442 + C92 * C3446) *
                C92084) *
               C92157 * C92183 * C2710 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C92084 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C801) *
               C92157 * C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C801 +
             (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                 C92084) *
                C14523 +
            ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
            C15322 * C14525) *
               C92183 * C2709 -
           (((C18757 + C18758) * C92084 + (C18759 + C18760) * C801) * C14525 +
            ((C18761 + C18762) * C92084 + (C18763 + C18764) * C801) * C14524 +
            ((C89868 * C1396 + C92072 * C1412 + C89875 * C1397 +
              C92322 * C1413) *
                 C92084 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C801) *
                C14523) *
               C92183 * C2710) *
              C1985 +
          ((((C18764 + C18763) * C801 + (C18762 + C18761) * C92084) * C14523 +
            ((C18760 + C18759) * C801 + (C18758 + C18757) * C92084) * C14524 +
            ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
              C92072 * C18735) *
                 C801 +
             (C89875 * C18736 + C92322 * C18738 + C89868 * C18737 +
              C92072 * C18739) *
                 C92084) *
                C14525) *
               C92183 * C2710 -
           (((C15314 + C15315) * C92084 + (C15316 + C15317) * C801) * C14525 +
            ((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C14524 +
            ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C14523) *
               C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92157 * C92183 * C92084 * C2709 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2060 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C1985 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C2059) +
           (C100 * C3513 + C89 * C3517 + C101 * C3514 + C90 * C3518 +
            C102 * C3515 + C91 * C3519 + C103 * C3516 + C92 * C3520) *
               C1986) *
              C92157 * C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2059 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C1985 -
            (C15307 + C15306) * C2060 - (C15413 + C15414) * C1986) *
               C14523 +
           ((C15306 + C15307) * C2059 + (C15414 + C15413) * C1985 -
            (C15311 + C15310) * C2060 - (C15416 + C15415) * C1986) *
               C14524 +
           (C15318 * C2059 + C15419 * C1985 - (C15316 + C15317) * C2060 -
            (C15418 + C15417) * C1986) *
               C14525) *
              C92183 * C92084 * C2709 +
          (((C18764 + C18763) * C2060 -
            ((C89868 * C1470 + C92072 * C1478 + C89875 * C1471 +
              C92322 * C1479) *
                 C1985 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C2059) +
            (C18875 + C18876) * C1986) *
               C14523 +
           ((C18760 + C18759) * C2060 -
            ((C18876 + C18875) * C1985 + (C18763 + C18764) * C2059) +
            (C18877 + C18878) * C1986) *
               C14524 +
           ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
             C92072 * C18735) *
                C2060 -
            ((C18878 + C18877) * C1985 + (C18759 + C18760) * C2059) +
            (C89875 * C18862 + C92322 * C18864 + C89868 * C18863 +
             C92072 * C18865) *
                C1986) *
               C14525) *
              C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92157 * C92183 * C1985 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2850 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C2709 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C2849) +
           (C100 * C3587 + C89 * C3591 + C101 * C3588 + C90 * C3592 +
            C102 * C3589 + C91 * C3593 + C103 * C3590 + C92 * C3594) *
               C2710) *
              C92157 * C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2849 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C2709 -
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C2850 -
            (C89868 * C1539 + C92072 * C1547 + C89875 * C1540 +
             C92322 * C1548) *
                C2710) *
               C14523 +
           ((C15306 + C15307) * C2849 + (C15511 + C15512) * C2709 -
            (C18763 + C18764) * C2850 - (C18989 + C18990) * C2710) *
               C14524 +
           (C15318 * C2849 + C15517 * C2709 - (C18759 + C18760) * C2850 -
            (C18991 + C18992) * C2710) *
               C14525) *
              C92183 * C1985 +
          (((C18764 + C18763) * C2850 -
            ((C15512 + C15511) * C2709 + (C15307 + C15306) * C2849) +
            (C18990 + C18989) * C2710) *
               C14523 +
           ((C18760 + C18759) * C2850 -
            ((C15514 + C15513) * C2709 + (C15311 + C15310) * C2849) +
            (C18992 + C18991) * C2710) *
               C14524 +
           ((C89875 * C18732 + C92322 * C18734 + C89868 * C18733 +
             C92072 * C18735) *
                C2850 -
            ((C15515 + C15516) * C2709 + (C15316 + C15317) * C2849) +
            (C89875 * C18976 + C92322 * C18978 + C89868 * C18977 +
             C92072 * C18979) *
                C2710) *
               C14525) *
              C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C92183 * C89 +
                      (C337 * C801 + C338 * C92084) * C92183 * C90 +
                      (C339 * C801 + C340 * C92084) * C92183 * C91 +
                      (C341 * C801 + C342 * C92084) * C92183 * C92) *
                         C2709 -
                     ((C2939 * C92084 + C2938 * C801) * C92183 * C92 +
                      (C2937 * C92084 + C2936 * C801) * C92183 * C91 +
                      (C2935 * C92084 + C2934 * C801) * C92183 * C90 +
                      ((C307 * C1397 + C92157 * C1614) * C92084 +
                       (C307 * C1389 + C92157 * C1606) * C801) *
                          C92183 * C89) *
                         C2710) *
                        C1985 +
                    ((((C307 * C3431 + C92157 * C3661) * C801 +
                       (C307 * C3439 + C92157 * C3665) * C92084) *
                          C92183 * C89 +
                      ((C307 * C3432 + C92157 * C3662) * C801 +
                       (C307 * C3440 + C92157 * C3666) * C92084) *
                          C92183 * C90 +
                      ((C307 * C3433 + C92157 * C3663) * C801 +
                       (C307 * C3441 + C92157 * C3667) * C92084) *
                          C92183 * C91 +
                      ((C307 * C3434 + C92157 * C3664) * C801 +
                       (C307 * C3442 + C92157 * C3668) * C92084) *
                          C92183 * C92) *
                         C2710 -
                     ((C2217 * C92084 + C2216 * C801) * C92183 * C92 +
                      (C2215 * C92084 + C2214 * C801) * C92183 * C91 +
                      (C2213 * C92084 + C2212 * C801) * C92183 * C90 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C92183 * C89) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                        C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                           C801 +
                       (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                        C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                           C92084) *
                          C92183 * C92322 +
                      ((C14780 + C14779 + C14778) * C801 +
                       (C14783 + C14782 + C14781) * C92084) *
                          C92183 * C92072) *
                         C2709 -
                     (((C18108 + C18107 + C18106) * C92084 +
                       (C18105 + C18104 + C18103) * C801) *
                          C92183 * C92072 +
                      ((C14752 * C8418 + C14525 * C8769 + C14751 * C3439 +
                        C14524 * C3665 + C14750 * C1397 + C14523 * C1614) *
                           C92084 +
                       (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                        C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                           C801) *
                          C92183 * C92322) *
                         C2710) *
                        C1985 +
                    ((((C14750 * C3431 + C14523 * C3661 + C14751 * C8412 +
                        C14524 * C8766 + C14752 * C18732 + C14525 * C19090) *
                           C801 +
                       (C14750 * C3439 + C14523 * C3665 + C14751 * C8418 +
                        C14524 * C8769 + C14752 * C18736 + C14525 * C19092) *
                           C92084) *
                          C92183 * C92322 +
                      ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                        C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                           C801 +
                       (C14750 * C3440 + C14523 * C3666 + C14751 * C8419 +
                        C14524 * C8770 + C14752 * C18737 + C14525 * C19093) *
                           C92084) *
                          C92183 * C92072) *
                         C2710 -
                     (((C17177 + C17176 + C17175) * C92084 +
                       (C17174 + C17173 + C17172) * C801) *
                          C92183 * C92072 +
                      ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                        C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                           C92084 +
                       (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                        C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                           C801) *
                          C92183 * C92322) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2059 +
                      (C307 * C182 + C92157 * C394) * C1985 -
                      (C307 * C805 + C92157 * C1022) * C2060 -
                      (C307 * C890 + C92157 * C1085) * C1986) *
                         C92183 * C89 +
                     (C2285 + C2286 - C2287 - C2303) * C92183 * C90 +
                     (C2290 + C2291 - C2292 - C2304) * C92183 * C91 +
                     (C2295 + C2296 - C2297 - C2305) * C92183 * C92) *
                        C92084 * C2709 +
                    (((C307 * C3431 + C92157 * C3661) * C2060 -
                      ((C307 * C1471 + C92157 * C1672) * C1985 +
                       (C307 * C1389 + C92157 * C1606) * C2059) +
                      (C307 * C3513 + C92157 * C3735) * C1986) *
                         C92183 * C89 +
                     ((C307 * C3432 + C92157 * C3662) * C2060 -
                      (C3016 * C1985 + C2934 * C2059) +
                      (C307 * C3514 + C92157 * C3736) * C1986) *
                         C92183 * C90 +
                     ((C307 * C3433 + C92157 * C3663) * C2060 -
                      (C3017 * C1985 + C2936 * C2059) +
                      (C307 * C3515 + C92157 * C3737) * C1986) *
                         C92183 * C91 +
                     ((C307 * C3434 + C92157 * C3664) * C2060 -
                      (C3018 * C1985 + C2938 * C2059) +
                      (C307 * C3516 + C92157 * C3738) * C1986) *
                         C92183 * C92) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2059 +
                      (C14876 + C14877 + C14878) * C1985 -
                      (C17174 + C17173 + C17172) * C2060 -
                      (C17282 + C17283 + C17284) * C1986) *
                         C92183 * C92072) *
                        C92084 * C2709 +
                    (((C14750 * C3431 + C14523 * C3661 + C14751 * C8412 +
                       C14524 * C8766 + C14752 * C18732 + C14525 * C19090) *
                          C2060 -
                      ((C14752 * C8540 + C14525 * C8870 + C14751 * C3513 +
                        C14524 * C3735 + C14750 * C1471 + C14523 * C1672) *
                           C1985 +
                       (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                        C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                           C2059) +
                      (C14750 * C3513 + C14523 * C3735 + C14751 * C8540 +
                       C14524 * C8870 + C14752 * C18862 + C14525 * C19192) *
                          C1986) *
                         C92183 * C92322 +
                     ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                       C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                          C2060 -
                      ((C18215 + C18214 + C18213) * C1985 +
                       (C18105 + C18104 + C18103) * C2059) +
                      (C14750 * C3514 + C14523 * C3736 + C14751 * C8541 +
                       C14524 * C8871 + C14752 * C18863 + C14525 * C19193) *
                          C1986) *
                         C92183 * C92072) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2849 +
                      (C307 * C245 + C92157 * C474) * C2709 -
                      (C307 * C1389 + C92157 * C1606) * C2850 -
                      (C307 * C1540 + C92157 * C1727) * C2710) *
                         C92183 * C89 +
                     (C3089 + C3090 - C3091 - C3107) * C92183 * C90 +
                     (C3094 + C3095 - C3096 - C3108) * C92183 * C91 +
                     (C3099 + C3100 - C3101 - C3109) * C92183 * C92) *
                        C1985 +
                    (((C307 * C3431 + C92157 * C3661) * C2850 -
                      ((C307 * C956 + C92157 * C1146) * C2709 +
                       (C307 * C805 + C92157 * C1022) * C2849) +
                      (C307 * C3587 + C92157 * C3805) * C2710) *
                         C92183 * C89 +
                     ((C307 * C3432 + C92157 * C3662) * C2850 -
                      (C2384 * C2709 + C2212 * C2849) +
                      (C307 * C3588 + C92157 * C3806) * C2710) *
                         C92183 * C90 +
                     ((C307 * C3433 + C92157 * C3663) * C2850 -
                      (C2383 * C2709 + C2214 * C2849) +
                      (C307 * C3589 + C92157 * C3807) * C2710) *
                         C92183 * C91 +
                     ((C307 * C3434 + C92157 * C3664) * C2850 -
                      (C2382 * C2709 + C2216 * C2849) +
                      (C307 * C3590 + C92157 * C3808) * C2710) *
                         C92183 * C92) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2849 +
                      (C14750 * C245 + C14523 * C474 + C14751 * C956 +
                       C14524 * C1146 + C14752 * C957 + C14525 * C1147) *
                          C2709 -
                      (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                       C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                          C2850 -
                      (C14752 * C8653 + C14525 * C8971 + C14751 * C3587 +
                       C14524 * C3805 + C14750 * C1540 + C14523 * C1727) *
                          C2710) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2849 +
                      (C14968 + C14969 + C14970) * C2709 -
                      (C18105 + C18104 + C18103) * C2850 -
                      (C18320 + C18321 + C18322) * C2710) *
                         C92183 * C92072) *
                        C1985 +
                    (((C14750 * C3431 + C14523 * C3661 + C14751 * C8412 +
                       C14524 * C8766 + C14752 * C18732 + C14525 * C19090) *
                          C2850 -
                      ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 +
                        C14524 * C1147 + C14750 * C956 + C14523 * C1146) *
                           C2709 +
                       (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                        C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                           C2849) +
                      (C14750 * C3587 + C14523 * C3805 + C14751 * C8653 +
                       C14524 * C8971 + C14752 * C18976 + C14525 * C19292) *
                          C2710) *
                         C92183 * C92322 +
                     ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                       C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                          C2850 -
                      ((C17389 + C17390 + C17391) * C2709 +
                       (C17174 + C17173 + C17172) * C2849) +
                      (C14750 * C3588 + C14523 * C3806 + C14751 * C8654 +
                       C14524 * C8972 + C14752 * C18977 + C14525 * C19293) *
                          C2710) *
                         C92183 * C92072) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eezx[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C89 +
            (C584 * C801 + C585 * C92084) * C90 +
            (C586 * C801 + C587 * C92084) * C91 +
            (C588 * C801 + C589 * C92084) * C92) *
               C92157 * C2709 -
           ((C3195 * C92084 + C3194 * C801) * C92 +
            (C3193 * C92084 + C3192 * C801) * C91 +
            (C3191 * C92084 + C3190 * C801) * C90 +
            ((C554 * C1397 + C92183 * C1796) * C92084 +
             (C554 * C1389 + C92183 * C1788) * C801) *
                C89) *
               C92157 * C2710) *
              C1985 +
          ((((C554 * C3431 + C92183 * C3875) * C801 +
             (C554 * C3439 + C92183 * C3879) * C92084) *
                C89 +
            ((C554 * C3432 + C92183 * C3876) * C801 +
             (C554 * C3440 + C92183 * C3880) * C92084) *
                C90 +
            ((C554 * C3433 + C92183 * C3877) * C801 +
             (C554 * C3441 + C92183 * C3881) * C92084) *
                C91 +
            ((C554 * C3434 + C92183 * C3878) * C801 +
             (C554 * C3442 + C92183 * C3882) * C92084) *
                C92) *
               C92157 * C2710 -
           ((C2473 * C92084 + C2472 * C801) * C92 +
            (C2471 * C92084 + C2470 * C801) * C91 +
            (C2469 * C92084 + C2468 * C801) * C90 +
            ((C554 * C813 + C92183 * C1212) * C92084 +
             (C554 * C805 + C92183 * C1204) * C801) *
                C89) *
               C92157 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C801 +
              (C554 * C117 + C92183 * C561) * C92084) *
                 C92322 +
             (C584 * C801 + C585 * C92084) * C92072) *
                C14523 +
            ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
            C15844 * C14525) *
               C2709 -
           (((C19397 + C19398) * C92072 + (C19405 + C19406) * C92322) * C14525 +
            ((C9081 + C9082) * C92072 + (C9089 + C9090) * C92322) * C14524 +
            ((C3191 * C92084 + C3190 * C801) * C92072 +
             ((C554 * C1397 + C92183 * C1796) * C92084 +
              (C554 * C1389 + C92183 * C1788) * C801) *
                 C92322) *
                C14523) *
               C2710) *
              C1985 +
          ((((C9090 + C9089) * C92322 + (C9082 + C9081) * C92072) * C14523 +
            ((C19406 + C19405) * C92322 + (C19398 + C19397) * C92072) * C14524 +
            (((C554 * C18732 + C92183 * C19392) * C801 +
              (C554 * C18736 + C92183 * C19394) * C92084) *
                 C92322 +
             ((C554 * C18733 + C92183 * C19393) * C801 +
              (C554 * C18737 + C92183 * C19395) * C92084) *
                 C92072) *
                C14525) *
               C2710 -
           (((C15845 + C15846) * C92072 + (C15847 + C15848) * C92322) * C14525 +
            ((C5456 + C5457) * C92072 + (C5458 + C5459) * C92322) * C14524 +
            ((C5429 + C5428) * C92072 + (C5453 + C5452) * C92322) * C14523) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 -
            (C554 * C805 + C92183 * C1204) * C2060 -
            (C554 * C890 + C92183 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92157 * C92084 * C2709 +
          (((C554 * C3431 + C92183 * C3875) * C2060 -
            ((C554 * C1471 + C92183 * C1854) * C1985 +
             (C554 * C1389 + C92183 * C1788) * C2059) +
            (C554 * C3513 + C92183 * C3949) * C1986) *
               C89 +
           ((C554 * C3432 + C92183 * C3876) * C2060 -
            (C3272 * C1985 + C3190 * C2059) +
            (C554 * C3514 + C92183 * C3950) * C1986) *
               C90 +
           ((C554 * C3433 + C92183 * C3877) * C2060 -
            (C3273 * C1985 + C3192 * C2059) +
            (C554 * C3515 + C92183 * C3951) * C1986) *
               C91 +
           ((C554 * C3434 + C92183 * C3878) * C2060 -
            (C3274 * C1985 + C3194 * C2059) +
            (C554 * C3516 + C92183 * C3952) * C1986) *
               C92) *
              C92157 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C92322 +
            (C2541 + C2542 - C2543 - C2559) * C92072) *
               C14523 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C92322 +
            (C7240 + C7241 - C7242 - C7243) * C92072) *
               C14524 +
           ((C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
                C92322 +
            (C17596 + C17597 - C17598 - C17599) * C92072) *
               C14525) *
              C92084 * C2709 +
          (((C9088 * C2060 -
             ((C554 * C1471 + C92183 * C1854) * C1985 +
              (C554 * C1389 + C92183 * C1788) * C2059) +
             C9194 * C1986) *
                C92322 +
            (C8091 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8199 * C1986) *
                C92072) *
               C14523 +
           ((C19404 * C2060 - (C9194 * C1985 + C9088 * C2059) +
             C19509 * C1986) *
                C92322 +
            (C18425 * C2060 - (C8199 * C1985 + C8091 * C2059) +
             C18528 * C1986) *
                C92072) *
               C14524 +
           (((C554 * C18732 + C92183 * C19392) * C2060 -
             (C19509 * C1985 + C19404 * C2059) +
             (C554 * C18862 + C92183 * C19504) * C1986) *
                C92322 +
            ((C554 * C18733 + C92183 * C19393) * C2060 -
             (C18528 * C1985 + C18425 * C2059) +
             (C554 * C18863 + C92183 * C19505) * C1986) *
                C92072) *
               C14525) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92157 * C1985 +
                    (((C554 * C3431 + C92183 * C3875) * C2850 -
                      ((C554 * C956 + C92183 * C1328) * C2709 +
                       (C554 * C805 + C92183 * C1204) * C2849) +
                      (C554 * C3587 + C92183 * C4019) * C2710) *
                         C89 +
                     ((C554 * C3432 + C92183 * C3876) * C2850 -
                      (C2640 * C2709 + C2468 * C2849) +
                      (C554 * C3588 + C92183 * C4020) * C2710) *
                         C90 +
                     ((C554 * C3433 + C92183 * C3877) * C2850 -
                      (C2639 * C2709 + C2470 * C2849) +
                      (C554 * C3589 + C92183 * C4021) * C2710) *
                         C91 +
                     ((C554 * C3434 + C92183 * C3878) * C2850 -
                      (C2638 * C2709 + C2472 * C2849) +
                      (C554 * C3590 + C92183 * C4022) * C2710) *
                         C92) *
                        C92157 * C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C92322 +
                      (C3345 + C3346 - C3347 - C3363) * C92072) *
                         C14523 +
                     ((C9296 + C9297 - C9298 - C9302) * C92322 +
                      (C8301 + C8302 - C8303 - C8313) * C92072) *
                         C14524 +
                     ((C19610 + C19611 - C19612 - C19616) * C92322 +
                      (C18628 + C18629 - C18630 - C18634) * C92072) *
                         C14525) *
                        C1985 +
                    (((C9298 - (C9297 + C9296) + C9302) * C92322 +
                      (C8303 - (C8302 + C8301) + C8313) * C92072) *
                         C14523 +
                     ((C19612 - (C19611 + C19610) + C19616) * C92322 +
                      (C18630 - (C18629 + C18628) + C18634) * C92072) *
                         C14524 +
                     (((C554 * C18732 + C92183 * C19392) * C2850 -
                       (C16018 * C2709 + C15843 * C2849) +
                       (C554 * C18976 + C92183 * C19607) * C2710) *
                          C92322 +
                      ((C554 * C18733 + C92183 * C19393) * C2850 -
                       (C16017 * C2709 + C15841 * C2849) +
                       (C554 * C18977 + C92183 * C19608) * C2710) *
                          C92072) *
                         C14525) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92084) *
              C92157 * C92183 * C92116 * C798 -
          ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
            C90 * C828 + C100 * C813 + C89 * C829) *
               C92084 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C801) *
              C92157 * C92183 * C92116 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C801 +
           (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 + C102 * C824 +
            C91 * C832 + C103 * C825 + C92 * C833) *
               C92084) *
              C92157 * C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C104 +
          (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
           C91 * C127 + C103 * C120 + C92 * C128) *
              C93 -
          (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
           C90 * C115 + C100 * C108 + C89 * C114) *
              C105 -
          (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
           C90 * C127 + C100 * C118 + C89 * C126) *
              C94 +
          (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
           C91 * C121 + C103 * C112 + C92 * C123) *
              C106 +
          (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 + C102 * C122 +
           C91 * C129 + C103 * C124 + C92 * C130) *
              C95) *
         C92157 * C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92084) *
              C92157 * C92183 * C1383 -
          ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
            C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
               C92084 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C801) *
              C92157 * C92183 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C801 +
           (C100 * C1406 + C89 * C1414 + C101 * C1407 + C90 * C1415 +
            C102 * C1408 + C91 * C1416 + C103 * C1409 + C92 * C1417) *
               C92084) *
              C92157 * C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C104 +
           (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
               C93 -
           (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
               C105 -
           (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
               C94 +
           (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
               C106 +
           (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
               C95) *
              C14523 +
          ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
               C104 +
           (C89875 * C813 + C92322 * C829 + C89868 * C812 + C92072 * C828) *
               C93 -
           (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
               C105 -
           (C89868 * C811 + C92072 * C827 + C89875 * C812 + C92322 * C828) *
               C94 +
           (C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
               C106 +
           (C89875 * C811 + C92322 * C827 + C89868 * C810 + C92072 * C826) *
               C95) *
              C14524 +
          ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
               C104 +
           (C89875 * C822 + C92322 * C830 + C89868 * C823 + C92072 * C831) *
               C93 -
           (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
               C105 -
           (C89868 * C824 + C92072 * C832 + C89875 * C823 + C92322 * C831) *
               C94 +
           (C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
               C106 +
           (C89875 * C824 + C92322 * C832 + C89868 * C825 + C92072 * C833) *
               C95) *
              C14525) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C14523 +
           ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
           C15322 * C14525) *
              C92183 * C92116 * C798 -
          (((C15314 + C15315) * C92084 + (C15316 + C15317) * C801) * C14525 +
           ((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C14524 +
           ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C14523) *
              C92183 * C92116 * C799 +
          (C15322 * C14523 +
           ((C15317 + C15316) * C801 + (C15315 + C15314) * C92084) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C801 +
            (C89875 * C15277 + C92322 * C15279 + C89868 * C15278 +
             C92072 * C15280) *
                C92084) *
               C14525) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C14523 +
           ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
           C15322 * C14525) *
              C92183 * C1383 -
          (((C89868 * C8419 + C92072 * C8422 + C89875 * C8418 +
             C92322 * C8421) *
                C92084 +
            (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
             C92322 * C8415) *
                C801) *
               C14525 +
           ((C89868 * C3440 + C92072 * C3444 + C89875 * C3439 +
             C92322 * C3443) *
                C92084 +
            (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
             C92322 * C3435) *
                C801) *
               C14524 +
           ((C89868 * C1396 + C92072 * C1412 + C89875 * C1397 +
             C92322 * C1413) *
                C92084 +
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C801) *
               C14523) *
              C92183 * C1384 +
          (((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C801 +
            (C89875 * C1406 + C92322 * C1414 + C89868 * C1407 +
             C92072 * C1415) *
                C92084) *
               C14523 +
           ((C89875 * C5719 + C92322 * C5722 + C89868 * C5720 +
             C92072 * C5723) *
                C801 +
            (C89875 * C5725 + C92322 * C5728 + C89868 * C5726 +
             C92072 * C5729) *
                C92084) *
               C14524 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C801 +
            (C89875 * C16099 + C92322 * C16101 + C89868 * C16100 +
             C92072 * C16102) *
                C92084) *
               C14525) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C884 +
          (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
           C91 * C190 + C103 * C185 + C92 * C191) *
              C798 -
          (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
           C90 * C816 + C100 * C805 + C89 * C817) *
              C885 -
          (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
           C90 * C897 + C100 * C890 + C89 * C898) *
              C799 +
          (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
           C91 * C820 + C103 * C809 + C92 * C821) *
              C886 +
          (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 + C102 * C893 +
           C91 * C901 + C103 * C894 + C92 * C902) *
              C800) *
         C92157 * C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92105) *
              C92157 * C92183 * C93 -
          ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
            C90 * C190 + C100 * C183 + C89 * C189) *
               C92105 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C181) *
              C92157 * C92183 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C181 +
           (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 + C102 * C186 +
            C91 * C192 + C103 * C187 + C92 * C193) *
               C92105) *
              C92157 * C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92105) *
              C92157 * C92183 * C92084 * C1383 -
          ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
            C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
               C92105 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C181) *
              C92157 * C92183 * C92084 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C181 +
           (C100 * C1472 + C89 * C1480 + C101 * C1473 + C90 * C1481 +
            C102 * C1474 + C91 * C1482 + C103 * C1475 + C92 * C1483) *
               C92105) *
              C92157 * C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C181 +
            (C89875 * C890 + C92322 * C898 + C89868 * C889 + C92072 * C897) *
                C92105) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C181 +
            (C89875 * C891 + C92322 * C899 + C89868 * C892 + C92072 * C900) *
                C92105) *
               C14525) *
              C92183 * C93 -
          (((C89868 * C893 + C92072 * C901 + C89875 * C892 + C92322 * C900) *
                C92105 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C181) *
               C14525 +
           ((C89868 * C888 + C92072 * C896 + C89875 * C889 + C92322 * C897) *
                C92105 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C181) *
               C14524 +
           ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                C92105 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C181) *
               C14523) *
              C92183 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C181 +
            (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                C92105) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C181 +
            (C89875 * C888 + C92322 * C896 + C89868 * C887 + C92072 * C895) *
                C92105) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C181 +
            (C89875 * C893 + C92322 * C901 + C89868 * C894 + C92072 * C902) *
                C92105) *
               C14525) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C884 +
           (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
               C798 -
           (C15307 + C15306) * C885 - (C15413 + C15414) * C799 + C15318 * C886 +
           C15419 * C800) *
              C14523 +
          ((C15306 + C15307) * C884 + (C15414 + C15413) * C798 -
           (C15311 + C15310) * C885 - (C15416 + C15415) * C799 +
           (C15317 + C15316) * C886 + (C15417 + C15418) * C800) *
              C14524 +
          (C15318 * C884 + C15419 * C798 - (C15316 + C15317) * C885 -
           (C15418 + C15417) * C799 +
           (C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
            C92072 * C15276) *
               C886 +
           (C89875 * C15396 + C92322 * C15398 + C89868 * C15397 +
            C92072 * C15399) *
               C800) *
              C14525) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C14523 +
           ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C14524 +
           (C15318 * C181 + C15419 * C92105) * C14525) *
              C92183 * C92084 * C1383 -
          (((C89868 * C8541 + C92072 * C8544 + C89875 * C8540 +
             C92322 * C8543) *
                C92105 +
            (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
             C92322 * C8415) *
                C181) *
               C14525 +
           ((C89868 * C3514 + C92072 * C3518 + C89875 * C3513 +
             C92322 * C3517) *
                C92105 +
            (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
             C92322 * C3435) *
                C181) *
               C14524 +
           ((C89868 * C1470 + C92072 * C1478 + C89875 * C1471 +
             C92322 * C1479) *
                C92105 +
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C181) *
               C14523) *
              C92183 * C92084 * C1384 +
          (((C89875 * C1390 + C92322 * C1402 + C89868 * C1391 +
             C92072 * C1403) *
                C181 +
            (C89875 * C1472 + C92322 * C1480 + C89868 * C1473 +
             C92072 * C1481) *
                C92105) *
               C14523 +
           ((C89875 * C5719 + C92322 * C5722 + C89868 * C5720 +
             C92072 * C5723) *
                C181 +
            (C89875 * C5805 + C92322 * C5808 + C89868 * C5806 +
             C92072 * C5809) *
                C92105) *
               C14524 +
           ((C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
             C92072 * C16098) *
                C181 +
            (C89875 * C16177 + C92322 * C16179 + C89868 * C16178 +
             C92072 * C16180) *
                C92105) *
               C14525) *
              C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92116) *
              C92157 * C92183 * C798 -
          ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
            C90 * C963 + C100 * C956 + C89 * C964) *
               C92116 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C244) *
              C92157 * C92183 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C244 +
           (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 + C102 * C959 +
            C91 * C967 + C103 * C960 + C92 * C968) *
               C92116) *
              C92157 * C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92116) *
              C92157 * C92183 * C92105 * C93 -
          ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
            C90 * C253 + C100 * C246 + C89 * C252) *
               C92116 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C244) *
              C92157 * C92183 * C92105 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C244 +
           (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 + C102 * C249 +
            C91 * C255 + C103 * C250 + C92 * C256) *
               C92116) *
              C92157 * C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C1534 +
          (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
           C91 * C253 + C103 * C248 + C92 * C254) *
              C1383 -
          (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
           C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
              C1535 -
          (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
           C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
              C1384 +
          (C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
           C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
              C1536 +
          (C100 * C1541 + C89 * C1549 + C101 * C1542 + C90 * C1550 +
           C102 * C1543 + C91 * C1551 + C103 * C1544 + C92 * C1552) *
              C1385) *
         C92157 * C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C244 +
            (C89875 * C956 + C92322 * C964 + C89868 * C955 + C92072 * C963) *
                C92116) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C244 +
            (C89875 * C957 + C92322 * C965 + C89868 * C958 + C92072 * C966) *
                C92116) *
               C14525) *
              C92183 * C92105 * C93 -
          (((C89868 * C959 + C92072 * C967 + C89875 * C958 + C92322 * C966) *
                C92116 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C244) *
               C14525 +
           ((C89868 * C954 + C92072 * C962 + C89875 * C955 + C92322 * C963) *
                C92116 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C244) *
               C14524 +
           ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                C92116 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C244) *
               C14523) *
              C92183 * C92105 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C244 +
            (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                C92116) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C244 +
            (C89875 * C954 + C92322 * C962 + C89868 * C953 + C92072 * C961) *
                C92116) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C244 +
            (C89875 * C959 + C92322 * C967 + C89868 * C960 + C92072 * C968) *
                C92116) *
               C14525) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C14524 +
           C15519 * C14525) *
              C92183 * C798 -
          (((C15515 + C15516) * C92116 + (C15316 + C15317) * C244) * C14525 +
           ((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C14524 +
           ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C14523) *
              C92183 * C799 +
          (C15519 * C14523 +
           ((C15317 + C15316) * C244 + (C15516 + C15515) * C92116) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C244 +
            (C89875 * C15493 + C92322 * C15495 + C89868 * C15494 +
             C92072 * C15496) *
                C92116) *
               C14525) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C1534 +
           (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
               C1383 -
           (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 + C92322 * C1401) *
               C1535 -
           (C89868 * C1539 + C92072 * C1547 + C89875 * C1540 + C92322 * C1548) *
               C1384 +
           (C89875 * C1390 + C92322 * C1402 + C89868 * C1391 + C92072 * C1403) *
               C1536 +
           (C89875 * C1541 + C92322 * C1549 + C89868 * C1542 + C92072 * C1550) *
               C1385) *
              C14523 +
          ((C15306 + C15307) * C1534 + (C15511 + C15512) * C1383 -
           (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 + C92322 * C3435) *
               C1535 -
           (C89868 * C3588 + C92072 * C3592 + C89875 * C3587 + C92322 * C3591) *
               C1384 +
           (C89875 * C5719 + C92322 * C5722 + C89868 * C5720 + C92072 * C5723) *
               C1536 +
           (C89875 * C5885 + C92322 * C5888 + C89868 * C5886 + C92072 * C5889) *
               C1385) *
              C14524 +
          (C15318 * C1534 + C15517 * C1383 -
           (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 + C92322 * C8415) *
               C1535 -
           (C89868 * C8654 + C92072 * C8657 + C89875 * C8653 + C92322 * C8656) *
               C1384 +
           (C89875 * C16095 + C92322 * C16097 + C89868 * C16096 +
            C92072 * C16098) *
               C1536 +
           (C89875 * C16255 + C92322 * C16257 + C89868 * C16256 +
            C92072 * C16258) *
               C1385) *
              C14525) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[62] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C801 +
                      (C307 * C117 + C92157 * C314) * C92084) *
                         C92183 * C89 +
                     (C337 * C801 + C338 * C92084) * C92183 * C90 +
                     (C339 * C801 + C340 * C92084) * C92183 * C91 +
                     (C341 * C801 + C342 * C92084) * C92183 * C92) *
                        C92116 * C798 -
                    (((C307 * C810 + C92157 * C1027) * C92084 +
                      (C307 * C802 + C92157 * C1019) * C801) *
                         C92183 * C92 +
                     ((C307 * C811 + C92157 * C1028) * C92084 +
                      (C307 * C803 + C92157 * C1020) * C801) *
                         C92183 * C91 +
                     ((C307 * C812 + C92157 * C1029) * C92084 +
                      (C307 * C804 + C92157 * C1021) * C801) *
                         C92183 * C90 +
                     ((C307 * C813 + C92157 * C1030) * C92084 +
                      (C307 * C805 + C92157 * C1022) * C801) *
                         C92183 * C89) *
                        C92116 * C799 +
                    (((C307 * C806 + C92157 * C1023) * C801 +
                      (C307 * C822 + C92157 * C1031) * C92084) *
                         C92183 * C89 +
                     ((C307 * C807 + C92157 * C1024) * C801 +
                      (C307 * C823 + C92157 * C1032) * C92084) *
                         C92183 * C90 +
                     ((C307 * C808 + C92157 * C1025) * C801 +
                      (C307 * C824 + C92157 * C1033) * C92084) *
                         C92183 * C91 +
                     ((C307 * C809 + C92157 * C1026) * C801 +
                      (C307 * C825 + C92157 * C1034) * C92084) *
                         C92183 * C92) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C307 * C107 + C92157 * C308) * C104 +
                     (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                     C338 * C94 + C339 * C106 + C340 * C95) *
                        C92183 * C89 +
                    (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                     C341 * C106 + C342 * C95) *
                        C92183 * C90 +
                    (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                     C343 * C106 + C344 * C95) *
                        C92183 * C91 +
                    (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
                     (C307 * C112 + C92157 * C313) * C106 +
                     (C307 * C124 + C92157 * C319) * C95) *
                        C92183 * C92) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C801 +
                      (C307 * C117 + C92157 * C314) * C92084) *
                         C92183 * C89 +
                     (C337 * C801 + C338 * C92084) * C92183 * C90 +
                     (C339 * C801 + C340 * C92084) * C92183 * C91 +
                     (C341 * C801 + C342 * C92084) * C92183 * C92) *
                        C1383 -
                    (((C307 * C1394 + C92157 * C1611) * C92084 +
                      (C307 * C1386 + C92157 * C1603) * C801) *
                         C92183 * C92 +
                     ((C307 * C1395 + C92157 * C1612) * C92084 +
                      (C307 * C1387 + C92157 * C1604) * C801) *
                         C92183 * C91 +
                     ((C307 * C1396 + C92157 * C1613) * C92084 +
                      (C307 * C1388 + C92157 * C1605) * C801) *
                         C92183 * C90 +
                     ((C307 * C1397 + C92157 * C1614) * C92084 +
                      (C307 * C1389 + C92157 * C1606) * C801) *
                         C92183 * C89) *
                        C1384 +
                    (((C307 * C1390 + C92157 * C1607) * C801 +
                      (C307 * C1406 + C92157 * C1615) * C92084) *
                         C92183 * C89 +
                     ((C307 * C1391 + C92157 * C1608) * C801 +
                      (C307 * C1407 + C92157 * C1616) * C92084) *
                         C92183 * C90 +
                     ((C307 * C1392 + C92157 * C1609) * C801 +
                      (C307 * C1408 + C92157 * C1617) * C92084) *
                         C92183 * C91 +
                     ((C307 * C1393 + C92157 * C1610) * C801 +
                      (C307 * C1409 + C92157 * C1618) * C92084) *
                         C92183 * C92) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                      C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                         C104 +
                     (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                      C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                         C93 -
                     (C14778 + C14779 + C14780) * C105 -
                     (C14781 + C14782 + C14783) * C94 +
                     (C14784 + C14785 + C14786) * C106 +
                     (C14787 + C14788 + C14789) * C95) *
                        C92183 * C92322 +
                    ((C14780 + C14779 + C14778) * C104 +
                     (C14783 + C14782 + C14781) * C93 -
                     (C14786 + C14785 + C14784) * C105 -
                     (C14789 + C14788 + C14787) * C94 +
                     (C14750 * C110 + C14523 * C311 + C14751 * C802 +
                      C14524 * C1019 + C14752 * C809 + C14525 * C1026) *
                         C106 +
                     (C14750 * C120 + C14523 * C317 + C14751 * C810 +
                      C14524 * C1027 + C14752 * C825 + C14525 * C1034) *
                         C95) *
                        C92183 * C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C801 +
                      (C14783 + C14782 + C14781) * C92084) *
                         C92183 * C92072) *
                        C92116 * C798 -
                    (((C14752 * C4872 + C14525 * C5187 + C14751 * C823 +
                       C14524 * C1032 + C14750 * C812 + C14523 * C1029) *
                          C92084 +
                      (C14752 * C4866 + C14525 * C5184 + C14751 * C807 +
                       C14524 * C1024 + C14750 * C804 + C14523 * C1021) *
                          C801) *
                         C92183 * C92072 +
                     ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                       C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                          C92084 +
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C801) *
                         C92183 * C92322) *
                        C92116 * C799 +
                    (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 +
                       C14524 * C5183 + C14752 * C15273 + C14525 * C15593) *
                          C801 +
                      (C14750 * C822 + C14523 * C1031 + C14751 * C4871 +
                       C14524 * C5186 + C14752 * C15277 + C14525 * C15595) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 +
                       C14524 * C5184 + C14752 * C15274 + C14525 * C15594) *
                          C801 +
                      (C14750 * C823 + C14523 * C1032 + C14751 * C4872 +
                       C14524 * C5187 + C14752 * C15278 + C14525 * C15596) *
                          C92084) *
                         C92183 * C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C801 +
                      (C14783 + C14782 + C14781) * C92084) *
                         C92183 * C92072) *
                        C1383 -
                    (((C14752 * C8419 + C14525 * C8770 + C14751 * C3440 +
                       C14524 * C3666 + C14750 * C1396 + C14523 * C1613) *
                          C92084 +
                      (C14752 * C8413 + C14525 * C8767 + C14751 * C3432 +
                       C14524 * C3662 + C14750 * C1388 + C14523 * C1605) *
                          C801) *
                         C92183 * C92072 +
                     ((C14752 * C8418 + C14525 * C8769 + C14751 * C3439 +
                       C14524 * C3665 + C14750 * C1397 + C14523 * C1614) *
                          C92084 +
                      (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                       C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                          C801) *
                         C92183 * C92322) *
                        C1384 +
                    (((C14750 * C1390 + C14523 * C1607 + C14751 * C5719 +
                       C14524 * C5965 + C14752 * C16095 + C14525 * C16333) *
                          C801 +
                      (C14750 * C1406 + C14523 * C1615 + C14751 * C5725 +
                       C14524 * C5968 + C14752 * C16099 + C14525 * C16335) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 +
                       C14524 * C5966 + C14752 * C16096 + C14525 * C16334) *
                          C801 +
                      (C14750 * C1407 + C14523 * C1616 + C14751 * C5726 +
                       C14524 * C5969 + C14752 * C16100 + C14525 * C16336) *
                          C92084) *
                         C92183 * C92072) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C884 +
           (C307 * C182 + C92157 * C394) * C798 -
           (C307 * C805 + C92157 * C1022) * C885 -
           (C307 * C890 + C92157 * C1085) * C799 +
           (C307 * C806 + C92157 * C1023) * C886 +
           (C307 * C891 + C92157 * C1086) * C800) *
              C92183 * C89 +
          (C337 * C884 + C413 * C798 - (C307 * C804 + C92157 * C1021) * C885 -
           (C307 * C889 + C92157 * C1087) * C799 +
           (C307 * C807 + C92157 * C1024) * C886 +
           (C307 * C892 + C92157 * C1088) * C800) *
              C92183 * C90 +
          (C339 * C884 + C414 * C798 - (C307 * C803 + C92157 * C1020) * C885 -
           (C307 * C888 + C92157 * C1089) * C799 +
           (C307 * C808 + C92157 * C1025) * C886 +
           (C307 * C893 + C92157 * C1090) * C800) *
              C92183 * C91 +
          (C341 * C884 + C415 * C798 - (C307 * C802 + C92157 * C1019) * C885 -
           (C307 * C887 + C92157 * C1091) * C799 +
           (C307 * C809 + C92157 * C1026) * C886 +
           (C307 * C894 + C92157 * C1092) * C800) *
              C92183 * C92) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C92183 * C89 +
           (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
              C93 -
          ((C420 + C412) * C92183 * C92 + (C419 + C407) * C92183 * C91 +
           (C418 + C404) * C92183 * C90 + (C417 + C401) * C92183 * C89) *
              C94 +
          (C423 * C89 + C424 * C90 + (C412 + C420) * C92183 * C91 +
           ((C307 * C112 + C92157 * C313) * C181 +
            (C307 * C187 + C92157 * C399) * C92105) *
               C92183 * C92) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C92183 * C89 +
           (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
              C92084 * C1383 -
          (((C307 * C1468 + C92157 * C1669) * C92105 +
            (C307 * C1386 + C92157 * C1603) * C181) *
               C92183 * C92 +
           ((C307 * C1469 + C92157 * C1670) * C92105 +
            (C307 * C1387 + C92157 * C1604) * C181) *
               C92183 * C91 +
           ((C307 * C1470 + C92157 * C1671) * C92105 +
            (C307 * C1388 + C92157 * C1605) * C181) *
               C92183 * C90 +
           ((C307 * C1471 + C92157 * C1672) * C92105 +
            (C307 * C1389 + C92157 * C1606) * C181) *
               C92183 * C89) *
              C92084 * C1384 +
          (((C307 * C1390 + C92157 * C1607) * C181 +
            (C307 * C1472 + C92157 * C1673) * C92105) *
               C92183 * C89 +
           ((C307 * C1391 + C92157 * C1608) * C181 +
            (C307 * C1473 + C92157 * C1674) * C92105) *
               C92183 * C90 +
           ((C307 * C1392 + C92157 * C1609) * C181 +
            (C307 * C1474 + C92157 * C1675) * C92105) *
               C92183 * C91 +
           ((C307 * C1393 + C92157 * C1610) * C181 +
            (C307 * C1475 + C92157 * C1676) * C92105) *
               C92183 * C92) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C181 +
            (C14876 + C14877 + C14878) * C92105) *
               C92183 * C92072) *
              C93 -
          (((C14879 + C14880 + C14881) * C92105 +
            (C14786 + C14785 + C14784) * C181) *
               C92183 * C92072 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92183 * C92322) *
              C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C181 +
            (C14750 * C185 + C14523 * C397 + C14751 * C887 + C14524 * C1091 +
             C14752 * C894 + C14525 * C1092) *
                C92105) *
               C92183 * C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92183 * C92322 +
          ((C14780 + C14779 + C14778) * C884 +
           (C14876 + C14877 + C14878) * C798 -
           (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
            C14750 * C804 + C14523 * C1021) *
               C885 -
           (C14752 * C4988 + C14525 * C5264 + C14751 * C892 + C14524 * C1088 +
            C14750 * C889 + C14523 * C1087) *
               C799 +
           (C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
            C14752 * C15274 + C14525 * C15594) *
               C886 +
           (C14750 * C892 + C14523 * C1088 + C14751 * C4988 + C14524 * C5264 +
            C14752 * C15397 + C14525 * C15672) *
               C800) *
              C92183 * C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C181 +
            (C14876 + C14877 + C14878) * C92105) *
               C92183 * C92072) *
              C92084 * C1383 -
          (((C14752 * C8541 + C14525 * C8871 + C14751 * C3514 + C14524 * C3736 +
             C14750 * C1470 + C14523 * C1671) *
                C92105 +
            (C14752 * C8413 + C14525 * C8767 + C14751 * C3432 + C14524 * C3662 +
             C14750 * C1388 + C14523 * C1605) *
                C181) *
               C92183 * C92072 +
           ((C14752 * C8540 + C14525 * C8870 + C14751 * C3513 + C14524 * C3735 +
             C14750 * C1471 + C14523 * C1672) *
                C92105 +
            (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 + C14524 * C3661 +
             C14750 * C1389 + C14523 * C1606) *
                C181) *
               C92183 * C92322) *
              C92084 * C1384 +
          (((C14750 * C1390 + C14523 * C1607 + C14751 * C5719 + C14524 * C5965 +
             C14752 * C16095 + C14525 * C16333) *
                C181 +
            (C14750 * C1472 + C14523 * C1673 + C14751 * C5805 + C14524 * C6045 +
             C14752 * C16177 + C14525 * C16411) *
                C92105) *
               C92183 * C92322 +
           ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
             C14752 * C16096 + C14525 * C16334) *
                C181 +
            (C14750 * C1473 + C14523 * C1674 + C14751 * C5806 + C14524 * C6046 +
             C14752 * C16178 + C14525 * C16412) *
                C92105) *
               C92183 * C92072) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C92183 * C89 +
           (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
              C798 -
          (((C307 * C953 + C92157 * C1143) * C92116 +
            (C307 * C802 + C92157 * C1019) * C244) *
               C92183 * C92 +
           ((C307 * C954 + C92157 * C1144) * C92116 +
            (C307 * C803 + C92157 * C1020) * C244) *
               C92183 * C91 +
           ((C307 * C955 + C92157 * C1145) * C92116 +
            (C307 * C804 + C92157 * C1021) * C244) *
               C92183 * C90 +
           ((C307 * C956 + C92157 * C1146) * C92116 +
            (C307 * C805 + C92157 * C1022) * C244) *
               C92183 * C89) *
              C799 +
          (((C307 * C806 + C92157 * C1023) * C244 +
            (C307 * C957 + C92157 * C1147) * C92116) *
               C92183 * C89 +
           ((C307 * C807 + C92157 * C1024) * C244 +
            (C307 * C958 + C92157 * C1148) * C92116) *
               C92183 * C90 +
           ((C307 * C808 + C92157 * C1025) * C244 +
            (C307 * C959 + C92157 * C1149) * C92116) *
               C92183 * C91 +
           ((C307 * C809 + C92157 * C1026) * C244 +
            (C307 * C960 + C92157 * C1150) * C92116) *
               C92183 * C92) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C92183 * C89 +
           (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
              C92105 * C93 -
          ((C500 + C492) * C92183 * C92 + (C499 + C487) * C92183 * C91 +
           (C498 + C484) * C92183 * C90 + (C497 + C481) * C92183 * C89) *
              C92105 * C94 +
          (C503 * C89 + C504 * C90 + (C492 + C500) * C92183 * C91 +
           ((C307 * C112 + C92157 * C313) * C244 +
            (C307 * C250 + C92157 * C479) * C92116) *
               C92183 * C92) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C1534 +
           (C307 * C245 + C92157 * C474) * C1383 -
           (C307 * C1389 + C92157 * C1606) * C1535 -
           (C307 * C1540 + C92157 * C1727) * C1384 +
           (C307 * C1390 + C92157 * C1607) * C1536 +
           (C307 * C1541 + C92157 * C1728) * C1385) *
              C92183 * C89 +
          (C337 * C1534 + C493 * C1383 -
           (C307 * C1388 + C92157 * C1605) * C1535 -
           (C307 * C1539 + C92157 * C1729) * C1384 +
           (C307 * C1391 + C92157 * C1608) * C1536 +
           (C307 * C1542 + C92157 * C1730) * C1385) *
              C92183 * C90 +
          (C339 * C1534 + C494 * C1383 -
           (C307 * C1387 + C92157 * C1604) * C1535 -
           (C307 * C1538 + C92157 * C1731) * C1384 +
           (C307 * C1392 + C92157 * C1609) * C1536 +
           (C307 * C1543 + C92157 * C1732) * C1385) *
              C92183 * C91 +
          (C341 * C1534 + C495 * C1383 -
           (C307 * C1386 + C92157 * C1603) * C1535 -
           (C307 * C1537 + C92157 * C1733) * C1384 +
           (C307 * C1393 + C92157 * C1610) * C1536 +
           (C307 * C1544 + C92157 * C1734) * C1385) *
              C92183 * C92) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C92105 * C93 -
          (((C14971 + C14972 + C14973) * C92116 +
            (C14786 + C14785 + C14784) * C244) *
               C92183 * C92072 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92183 * C92322) *
              C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C244 +
            (C14750 * C248 + C14523 * C477 + C14751 * C953 + C14524 * C1143 +
             C14752 * C960 + C14525 * C1150) *
                C92116) *
               C92183 * C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C798 -
          (((C14752 * C5086 + C14525 * C5341 + C14751 * C958 + C14524 * C1148 +
             C14750 * C955 + C14523 * C1145) *
                C92116 +
            (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
             C14750 * C804 + C14523 * C1021) *
                C244) *
               C92183 * C92072 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92183 * C92322) *
              C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92183 * C92322 +
           ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
             C14752 * C15274 + C14525 * C15594) *
                C244 +
            (C14750 * C958 + C14523 * C1148 + C14751 * C5086 + C14524 * C5341 +
             C14752 * C15494 + C14525 * C15748) *
                C92116) *
               C92183 * C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C1534 +
           (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
            C14752 * C957 + C14525 * C1147) *
               C1383 -
           (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 + C14524 * C3661 +
            C14750 * C1389 + C14523 * C1606) *
               C1535 -
           (C14752 * C8653 + C14525 * C8971 + C14751 * C3587 + C14524 * C3805 +
            C14750 * C1540 + C14523 * C1727) *
               C1384 +
           (C14750 * C1390 + C14523 * C1607 + C14751 * C5719 + C14524 * C5965 +
            C14752 * C16095 + C14525 * C16333) *
               C1536 +
           (C14750 * C1541 + C14523 * C1728 + C14751 * C5885 + C14524 * C6122 +
            C14752 * C16255 + C14525 * C16487) *
               C1385) *
              C92183 * C92322 +
          ((C14780 + C14779 + C14778) * C1534 +
           (C14968 + C14969 + C14970) * C1383 -
           (C14752 * C8413 + C14525 * C8767 + C14751 * C3432 + C14524 * C3662 +
            C14750 * C1388 + C14523 * C1605) *
               C1535 -
           (C14752 * C8654 + C14525 * C8972 + C14751 * C3588 + C14524 * C3806 +
            C14750 * C1539 + C14523 * C1729) *
               C1384 +
           (C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
            C14752 * C16096 + C14525 * C16334) *
               C1536 +
           (C14750 * C1542 + C14523 * C1730 + C14751 * C5886 + C14524 * C6123 +
            C14752 * C16256 + C14525 * C16488) *
               C1385) *
              C92183 * C92072) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C801 +
            (C554 * C117 + C92183 * C561) * C92084) *
               C89 +
           (C584 * C801 + C585 * C92084) * C90 +
           (C586 * C801 + C587 * C92084) * C91 +
           (C588 * C801 + C589 * C92084) * C92) *
              C92157 * C92116 * C798 -
          (((C554 * C810 + C92183 * C1209) * C92084 +
            (C554 * C802 + C92183 * C1201) * C801) *
               C92 +
           ((C554 * C811 + C92183 * C1210) * C92084 +
            (C554 * C803 + C92183 * C1202) * C801) *
               C91 +
           ((C554 * C812 + C92183 * C1211) * C92084 +
            (C554 * C804 + C92183 * C1203) * C801) *
               C90 +
           ((C554 * C813 + C92183 * C1212) * C92084 +
            (C554 * C805 + C92183 * C1204) * C801) *
               C89) *
              C92157 * C92116 * C799 +
          (((C554 * C806 + C92183 * C1205) * C801 +
            (C554 * C822 + C92183 * C1213) * C92084) *
               C89 +
           ((C554 * C807 + C92183 * C1206) * C801 +
            (C554 * C823 + C92183 * C1214) * C92084) *
               C90 +
           ((C554 * C808 + C92183 * C1207) * C801 +
            (C554 * C824 + C92183 * C1215) * C92084) *
               C91 +
           ((C554 * C809 + C92183 * C1208) * C801 +
            (C554 * C825 + C92183 * C1216) * C92084) *
               C92) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C104 +
           (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C89 +
          (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
           C589 * C95) *
              C90 +
          (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
           C591 * C95) *
              C91 +
          (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
           (C554 * C112 + C92183 * C560) * C106 +
           (C554 * C124 + C92183 * C566) * C95) *
              C92) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C801 +
            (C554 * C117 + C92183 * C561) * C92084) *
               C89 +
           (C584 * C801 + C585 * C92084) * C90 +
           (C586 * C801 + C587 * C92084) * C91 +
           (C588 * C801 + C589 * C92084) * C92) *
              C92157 * C1383 -
          (((C554 * C1394 + C92183 * C1793) * C92084 +
            (C554 * C1386 + C92183 * C1785) * C801) *
               C92 +
           ((C554 * C1395 + C92183 * C1794) * C92084 +
            (C554 * C1387 + C92183 * C1786) * C801) *
               C91 +
           ((C554 * C1396 + C92183 * C1795) * C92084 +
            (C554 * C1388 + C92183 * C1787) * C801) *
               C90 +
           ((C554 * C1397 + C92183 * C1796) * C92084 +
            (C554 * C1389 + C92183 * C1788) * C801) *
               C89) *
              C92157 * C1384 +
          (((C554 * C1390 + C92183 * C1789) * C801 +
            (C554 * C1406 + C92183 * C1797) * C92084) *
               C89 +
           ((C554 * C1391 + C92183 * C1790) * C801 +
            (C554 * C1407 + C92183 * C1798) * C92084) *
               C90 +
           ((C554 * C1392 + C92183 * C1791) * C801 +
            (C554 * C1408 + C92183 * C1799) * C92084) *
               C91 +
           ((C554 * C1393 + C92183 * C1792) * C801 +
            (C554 * C1409 + C92183 * C1800) * C92084) *
               C92) *
              C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92322 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92072) *
              C14523 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92322 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92072) *
              C14524 +
          ((C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
            C5447 * C106 + C5446 * C95) *
               C92322 +
           (C5449 * C104 + C5448 * C93 - C5447 * C105 - C5446 * C94 +
            (C554 * C809 + C92183 * C1208) * C106 +
            (C554 * C825 + C92183 * C1216) * C95) *
               C92072) *
              C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92322 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C14523 +
           ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
           C15844 * C14525) *
              C92116 * C798 -
          (((C15845 + C15846) * C92072 + (C15847 + C15848) * C92322) * C14525 +
           ((C5456 + C5457) * C92072 + (C5458 + C5459) * C92322) * C14524 +
           ((C5429 + C5428) * C92072 + (C5453 + C5452) * C92322) * C14523) *
              C92116 * C799 +
          (C15844 * C14523 +
           ((C15848 + C15847) * C92322 + (C15846 + C15845) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C801 +
             (C554 * C15277 + C92183 * C15825) * C92084) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C801 +
             (C554 * C15278 + C92183 * C15826) * C92084) *
                C92072) *
               C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92322 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C14523 +
           ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
           C15844 * C14525) *
              C1383 -
          ((((C554 * C8419 + C92183 * C9076) * C92084 +
             (C554 * C8413 + C92183 * C9073) * C801) *
                C92072 +
            ((C554 * C8418 + C92183 * C9075) * C92084 +
             (C554 * C8412 + C92183 * C9072) * C801) *
                C92322) *
               C14525 +
           ((C9081 + C9082) * C92072 + (C9089 + C9090) * C92322) * C14524 +
           ((C3191 * C92084 + C3190 * C801) * C92072 +
            ((C554 * C1397 + C92183 * C1796) * C92084 +
             (C554 * C1389 + C92183 * C1788) * C801) *
                C92322) *
               C14523) *
              C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C801 +
             (C554 * C1406 + C92183 * C1797) * C92084) *
                C92322 +
            ((C554 * C1391 + C92183 * C1790) * C801 +
             (C554 * C1407 + C92183 * C1798) * C92084) *
                C92072) *
               C14523 +
           (((C554 * C5719 + C92183 * C6199) * C801 +
             (C554 * C5725 + C92183 * C6202) * C92084) *
                C92322 +
            ((C554 * C5720 + C92183 * C6200) * C801 +
             (C554 * C5726 + C92183 * C6203) * C92084) *
                C92072) *
               C14524 +
           (((C554 * C16095 + C92183 * C16563) * C801 +
             (C554 * C16099 + C92183 * C16565) * C92084) *
                C92322 +
            ((C554 * C16096 + C92183 * C16564) * C801 +
             (C554 * C16100 + C92183 * C16566) * C92084) *
                C92072) *
               C14525) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 -
           (C554 * C805 + C92183 * C1204) * C885 -
           (C554 * C890 + C92183 * C1267) * C799 +
           (C554 * C806 + C92183 * C1205) * C886 +
           (C554 * C891 + C92183 * C1268) * C800) *
              C89 +
          (C584 * C884 + C660 * C798 - (C554 * C804 + C92183 * C1203) * C885 -
           (C554 * C889 + C92183 * C1269) * C799 +
           (C554 * C807 + C92183 * C1206) * C886 +
           (C554 * C892 + C92183 * C1270) * C800) *
              C90 +
          (C586 * C884 + C661 * C798 - (C554 * C803 + C92183 * C1202) * C885 -
           (C554 * C888 + C92183 * C1271) * C799 +
           (C554 * C808 + C92183 * C1207) * C886 +
           (C554 * C893 + C92183 * C1272) * C800) *
              C91 +
          (C588 * C884 + C662 * C798 - (C554 * C802 + C92183 * C1201) * C885 -
           (C554 * C887 + C92183 * C1273) * C799 +
           (C554 * C809 + C92183 * C1208) * C886 +
           (C554 * C894 + C92183 * C1274) * C800) *
              C92) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92157 * C93 -
          ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
           (C664 + C648) * C89) *
              C92157 * C94 +
          (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
           ((C554 * C112 + C92183 * C560) * C181 +
            (C554 * C187 + C92183 * C646) * C92105) *
               C92) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92157 * C92084 * C1383 -
          (((C554 * C1468 + C92183 * C1851) * C92105 +
            (C554 * C1386 + C92183 * C1785) * C181) *
               C92 +
           ((C554 * C1469 + C92183 * C1852) * C92105 +
            (C554 * C1387 + C92183 * C1786) * C181) *
               C91 +
           ((C554 * C1470 + C92183 * C1853) * C92105 +
            (C554 * C1388 + C92183 * C1787) * C181) *
               C90 +
           ((C554 * C1471 + C92183 * C1854) * C92105 +
            (C554 * C1389 + C92183 * C1788) * C181) *
               C89) *
              C92157 * C92084 * C1384 +
          (((C554 * C1390 + C92183 * C1789) * C181 +
            (C554 * C1472 + C92183 * C1855) * C92105) *
               C89 +
           ((C554 * C1391 + C92183 * C1790) * C181 +
            (C554 * C1473 + C92183 * C1856) * C92105) *
               C90 +
           ((C554 * C1392 + C92183 * C1791) * C181 +
            (C554 * C1474 + C92183 * C1857) * C92105) *
               C91 +
           ((C554 * C1393 + C92183 * C1792) * C181 +
            (C554 * C1475 + C92183 * C1858) * C92105) *
               C92) *
              C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92322 +
            (C648 + C664) * C92072) *
               C14523 +
           ((C5444 * C181 + C5545 * C92105) * C92322 +
            (C4710 + C4711) * C92072) *
               C14524 +
           ((C5451 * C181 + C5546 * C92105) * C92322 +
            (C15122 + C15123) * C92072) *
               C14525) *
              C93 -
          (((C15124 + C15125) * C92072 + (C15123 + C15122) * C92322) * C14525 +
           ((C4713 + C4712) * C92072 + (C4711 + C4710) * C92322) * C14524 +
           ((C665 + C651) * C92072 + (C664 + C648) * C92322) * C14523) *
              C94 +
          ((C668 * C92322 + C669 * C92072) * C14523 +
           (C4716 * C92322 + (C4715 + C4714) * C92072) * C14524 +
           ((C15125 + C15124) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C181 +
             (C554 * C894 + C92183 * C1274) * C92105) *
                C92072) *
               C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C92322 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92072) *
              C14523 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C92322 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92072) *
              C14524 +
          ((C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
            (C554 * C15273 + C92183 * C15823) * C886 +
            (C554 * C15396 + C92183 * C15922) * C800) *
               C92322 +
           (C5449 * C884 + C5547 * C798 - C15841 * C885 - C15930 * C799 +
            (C554 * C15274 + C92183 * C15824) * C886 +
            (C554 * C15397 + C92183 * C15923) * C800) *
               C92072) *
              C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92322 +
            (C648 + C664) * C92072) *
               C14523 +
           ((C5444 * C181 + C5545 * C92105) * C92322 +
            (C4710 + C4711) * C92072) *
               C14524 +
           ((C5451 * C181 + C5546 * C92105) * C92322 +
            (C15122 + C15123) * C92072) *
               C14525) *
              C92084 * C1383 -
          ((((C554 * C8541 + C92183 * C9189) * C92105 +
             (C554 * C8413 + C92183 * C9073) * C181) *
                C92072 +
            ((C554 * C8540 + C92183 * C9188) * C92105 +
             (C554 * C8412 + C92183 * C9072) * C181) *
                C92322) *
               C14525 +
           ((C8201 + C8193) * C92072 +
            (C9194 * C92105 + C9088 * C181) * C92322) *
               C14524 +
           ((C3275 + C3263) * C92072 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C92322) *
               C14523) *
              C92084 * C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C181 +
             (C554 * C1472 + C92183 * C1855) * C92105) *
                C92322 +
            ((C554 * C1391 + C92183 * C1790) * C181 +
             (C554 * C1473 + C92183 * C1856) * C92105) *
                C92072) *
               C14523 +
           (((C554 * C5719 + C92183 * C6199) * C181 +
             (C554 * C5805 + C92183 * C6279) * C92105) *
                C92322 +
            ((C554 * C5720 + C92183 * C6200) * C181 +
             (C554 * C5806 + C92183 * C6280) * C92105) *
                C92072) *
               C14524 +
           (((C554 * C16095 + C92183 * C16563) * C181 +
             (C554 * C16177 + C92183 * C16641) * C92105) *
                C92322 +
            ((C554 * C16096 + C92183 * C16564) * C181 +
             (C554 * C16178 + C92183 * C16642) * C92105) *
                C92072) *
               C14525) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92157 * C798 -
          (((C554 * C953 + C92183 * C1325) * C92116 +
            (C554 * C802 + C92183 * C1201) * C244) *
               C92 +
           ((C554 * C954 + C92183 * C1326) * C92116 +
            (C554 * C803 + C92183 * C1202) * C244) *
               C91 +
           ((C554 * C955 + C92183 * C1327) * C92116 +
            (C554 * C804 + C92183 * C1203) * C244) *
               C90 +
           ((C554 * C956 + C92183 * C1328) * C92116 +
            (C554 * C805 + C92183 * C1204) * C244) *
               C89) *
              C92157 * C799 +
          (((C554 * C806 + C92183 * C1205) * C244 +
            (C554 * C957 + C92183 * C1329) * C92116) *
               C89 +
           ((C554 * C807 + C92183 * C1206) * C244 +
            (C554 * C958 + C92183 * C1330) * C92116) *
               C90 +
           ((C554 * C808 + C92183 * C1207) * C244 +
            (C554 * C959 + C92183 * C1331) * C92116) *
               C91 +
           ((C554 * C809 + C92183 * C1208) * C244 +
            (C554 * C960 + C92183 * C1332) * C92116) *
               C92) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92157 * C92105 * C93 -
          ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
           (C742 + C726) * C89) *
              C92157 * C92105 * C94 +
          (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
           ((C554 * C112 + C92183 * C560) * C244 +
            (C554 * C250 + C92183 * C724) * C92116) *
               C92) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C1534 +
           (C554 * C245 + C92183 * C719) * C1383 -
           (C554 * C1389 + C92183 * C1788) * C1535 -
           (C554 * C1540 + C92183 * C1909) * C1384 +
           (C554 * C1390 + C92183 * C1789) * C1536 +
           (C554 * C1541 + C92183 * C1910) * C1385) *
              C89 +
          (C584 * C1534 + C738 * C1383 -
           (C554 * C1388 + C92183 * C1787) * C1535 -
           (C554 * C1539 + C92183 * C1911) * C1384 +
           (C554 * C1391 + C92183 * C1790) * C1536 +
           (C554 * C1542 + C92183 * C1912) * C1385) *
              C90 +
          (C586 * C1534 + C739 * C1383 -
           (C554 * C1387 + C92183 * C1786) * C1535 -
           (C554 * C1538 + C92183 * C1913) * C1384 +
           (C554 * C1392 + C92183 * C1791) * C1536 +
           (C554 * C1543 + C92183 * C1914) * C1385) *
              C91 +
          (C588 * C1534 + C740 * C1383 -
           (C554 * C1386 + C92183 * C1785) * C1535 -
           (C554 * C1537 + C92183 * C1915) * C1384 +
           (C554 * C1393 + C92183 * C1792) * C1536 +
           (C554 * C1544 + C92183 * C1916) * C1385) *
              C92) *
         C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           ((C5637 + C5645) * C92322 + (C5634 + C5644) * C92072) * C14525) *
              C92105 * C93 -
          (((C5643 + C5631) * C92072 + (C5644 + C5634) * C92322) * C14525 +
           (C7347 * C92072 + C7348 * C92322) * C14524 +
           ((C743 + C729) * C92072 + (C742 + C726) * C92322) * C14523) *
              C92105 * C94 +
          ((C746 * C92322 + C747 * C92072) * C14523 +
           (C4791 * C92322 + (C2631 + C2641) * C92072) * C14524 +
           ((C5631 + C5643) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C244 +
             (C554 * C960 + C92183 * C1332) * C92116) *
                C92072) *
               C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           C16019 * C14525) *
              C798 -
          (((C16020 + C16011) * C92072 + (C16021 + C16014) * C92322) * C14525 +
           ((C5644 + C5634) * C92072 + (C5645 + C5637) * C92322) * C14524 +
           (C7348 * C92072 + (C5642 + C5626) * C92322) * C14523) *
              C799 +
          (C16019 * C14523 +
           ((C16014 + C16021) * C92322 + (C16011 + C16020) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C244 +
             (C554 * C15493 + C92183 * C16004) * C92116) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92072) *
               C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1534 +
            (C554 * C245 + C92183 * C719) * C1383 -
            (C554 * C1389 + C92183 * C1788) * C1535 -
            (C554 * C1540 + C92183 * C1909) * C1384 +
            (C554 * C1390 + C92183 * C1789) * C1536 +
            (C554 * C1541 + C92183 * C1910) * C1385) *
               C92322 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92183 * C1790) * C1536 +
            (C554 * C1542 + C92183 * C1912) * C1385) *
               C92072) *
              C14523 +
          ((C5444 * C1534 + C5638 * C1383 - C9088 * C1535 - C9301 * C1384 +
            (C554 * C5719 + C92183 * C6199) * C1536 +
            (C554 * C5885 + C92183 * C6356) * C1385) *
               C92322 +
           (C2468 * C1534 + C2640 * C1383 - C8091 * C1535 - C8311 * C1384 +
            (C554 * C5720 + C92183 * C6200) * C1536 +
            (C554 * C5886 + C92183 * C6357) * C1385) *
               C92072) *
              C14524 +
          ((C5451 * C1534 + C5641 * C1383 -
            (C554 * C8412 + C92183 * C9072) * C1535 -
            (C554 * C8653 + C92183 * C9292) * C1384 +
            (C554 * C16095 + C92183 * C16563) * C1536 +
            (C554 * C16255 + C92183 * C16717) * C1385) *
               C92322 +
           (C5449 * C1534 + C5640 * C1383 -
            (C554 * C8413 + C92183 * C9073) * C1535 -
            (C554 * C8654 + C92183 * C9293) * C1384 +
            (C554 * C16096 + C92183 * C16564) * C1536 +
            (C554 * C16256 + C92183 * C16718) * C1385) *
               C92072) *
              C14525) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92157 * C92183 * C2709 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C1988 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C1983 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C1987) +
           (C100 * C1396 + C89 * C1412 + C101 * C1395 + C90 * C1411 +
            C102 * C1394 + C91 * C1410 + C103 * C2713 + C92 * C2714) *
               C1984) *
              C92157 * C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C1987 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C1983 -
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C1988 -
            (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
                C1984) *
               C14523 +
           ((C15306 + C15307) * C1987 + (C15308 + C15309) * C1983 -
            (C16834 + C16835) * C1988 - (C16836 + C16837) * C1984) *
               C14524 +
           (C15318 * C1987 + C15319 * C1983 - (C16838 + C16839) * C1988 -
            (C16840 + C16841) * C1984) *
               C14525) *
              C92183 * C2709 +
          (((C89875 * C1388 + C92322 * C1400 + C89868 * C1387 +
             C92072 * C1399) *
                C1988 -
            ((C89868 * C1396 + C92072 * C1412 + C89875 * C1397 +
              C92322 * C1413) *
                 C1983 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C1987) +
            (C89875 * C1396 + C92322 * C1412 + C89868 * C1395 +
             C92072 * C1411) *
                C1984) *
               C14523 +
           ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
             C92072 * C3437) *
                C1988 -
            ((C89868 * C3440 + C92072 * C3444 + C89875 * C3439 +
              C92322 * C3443) *
                 C1983 +
             (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
              C92322 * C3435) *
                 C1987) +
            (C89875 * C3440 + C92322 * C3444 + C89868 * C3441 +
             C92072 * C3445) *
                C1984) *
               C14524 +
           ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
             C92072 * C8417) *
                C1988 -
            ((C89868 * C8419 + C92072 * C8422 + C89875 * C8418 +
              C92322 * C8421) *
                 C1983 +
             (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
              C92322 * C8415) *
                 C1987) +
            (C89875 * C8419 + C92322 * C8422 + C89868 * C8420 +
             C92072 * C8423) *
                C1984) *
               C14525) *
              C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C181 +
            (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
             C91 * C190 + C103 * C185 + C92 * C191) *
                C92105) *
               C92157 * C92183 * C1983 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C92105 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C181) *
               C92157 * C92183 * C1984) *
              C2709 +
          (((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
             C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
                C181 +
            (C100 * C1470 + C89 * C1478 + C101 * C1469 + C90 * C1477 +
             C102 * C1468 + C91 * C1476 + C103 * C2781 + C92 * C2782) *
                C92105) *
               C92157 * C92183 * C1984 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C92105 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C181) *
               C92157 * C92183 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                 C181 +
             (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                 C92105) *
                C14523 +
            ((C15306 + C15307) * C181 + (C15414 + C15413) * C92105) * C14524 +
            (C15318 * C181 + C15419 * C92105) * C14525) *
               C92183 * C1983 -
           (((C16951 + C16950) * C92105 + (C16838 + C16839) * C181) * C14525 +
            ((C16949 + C16948) * C92105 + (C16834 + C16835) * C181) * C14524 +
            ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                 C92105 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C181) *
                C14523) *
               C92183 * C1984) *
              C2709 +
          ((((C89875 * C1388 + C92322 * C1400 + C89868 * C1387 +
              C92072 * C1399) *
                 C181 +
             (C89875 * C1470 + C92322 * C1478 + C89868 * C1469 +
              C92072 * C1477) *
                 C92105) *
                C14523 +
            ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
              C92072 * C3437) *
                 C181 +
             (C89875 * C3514 + C92322 * C3518 + C89868 * C3515 +
              C92072 * C3519) *
                 C92105) *
                C14524 +
            ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
              C92072 * C8417) *
                 C181 +
             (C89875 * C8541 + C92322 * C8544 + C89868 * C8542 +
              C92072 * C8545) *
                 C92105) *
                C14525) *
               C92183 * C1984 -
           (((C89868 * C8541 + C92072 * C8544 + C89875 * C8540 +
              C92322 * C8543) *
                 C92105 +
             (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
              C92322 * C8415) *
                 C181) *
                C14525 +
            ((C89868 * C3514 + C92072 * C3518 + C89875 * C3513 +
              C92322 * C3517) *
                 C92105 +
             (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
              C92322 * C3435) *
                 C181) *
                C14524 +
            ((C89868 * C1470 + C92072 * C1478 + C89875 * C1471 +
              C92322 * C1479) *
                 C92105 +
             (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
              C92322 * C1401) *
                 C181) *
                C14523) *
               C92183 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92157 * C92183 * C92105 * C1983 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C2850 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C2709 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2849) +
           (C100 * C1539 + C89 * C1547 + C101 * C1538 + C90 * C1546 +
            C102 * C1537 + C91 * C1545 + C103 * C2851 + C92 * C2852) *
               C2710) *
              C92157 * C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C2849 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C2709 -
            (C89868 * C1388 + C92072 * C1400 + C89875 * C1389 +
             C92322 * C1401) *
                C2850 -
            (C89868 * C1539 + C92072 * C1547 + C89875 * C1540 +
             C92322 * C1548) *
                C2710) *
               C14523 +
           ((C15306 + C15307) * C2849 + (C15511 + C15512) * C2709 -
            (C89868 * C3432 + C92072 * C3436 + C89875 * C3431 +
             C92322 * C3435) *
                C2850 -
            (C89868 * C3588 + C92072 * C3592 + C89875 * C3587 +
             C92322 * C3591) *
                C2710) *
               C14524 +
           (C15318 * C2849 + C15517 * C2709 -
            (C89868 * C8413 + C92072 * C8416 + C89875 * C8412 +
             C92322 * C8415) *
                C2850 -
            (C89868 * C8654 + C92072 * C8657 + C89875 * C8653 +
             C92322 * C8656) *
                C2710) *
               C14525) *
              C92183 * C92105 * C1983 +
          (((C89875 * C1388 + C92322 * C1400 + C89868 * C1387 +
             C92072 * C1399) *
                C2850 -
            ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                 C2709 +
             (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                 C2849) +
            (C89875 * C1539 + C92322 * C1547 + C89868 * C1538 +
             C92072 * C1546) *
                C2710) *
               C14523 +
           ((C89875 * C3432 + C92322 * C3436 + C89868 * C3433 +
             C92072 * C3437) *
                C2850 -
            ((C17059 + C17058) * C2709 + (C16834 + C16835) * C2849) +
            (C89875 * C3588 + C92322 * C3592 + C89868 * C3589 +
             C92072 * C3593) *
                C2710) *
               C14524 +
           ((C89875 * C8413 + C92322 * C8416 + C89868 * C8414 +
             C92072 * C8417) *
                C2850 -
            ((C17061 + C17060) * C2709 + (C16838 + C16839) * C2849) +
            (C89875 * C8654 + C92322 * C8657 + C89868 * C8655 +
             C92072 * C8658) *
                C2710) *
               C14525) *
              C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1987 +
            (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92183 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92183 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92183 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92183 * C92) *
              C2709 +
          ((C2934 * C1988 -
            ((C307 * C1397 + C92157 * C1614) * C1983 +
             (C307 * C1389 + C92157 * C1606) * C1987) +
            C2935 * C1984) *
               C92183 * C89 +
           (C2936 * C1988 - (C2935 * C1983 + C2934 * C1987) + C2937 * C1984) *
               C92183 * C90 +
           (C2938 * C1988 - (C2937 * C1983 + C2936 * C1987) + C2939 * C1984) *
               C92183 * C91 +
           ((C307 * C2711 + C92157 * C2919) * C1988 -
            (C2939 * C1983 + C2938 * C1987) +
            (C307 * C2713 + C92157 * C2920) * C1984) *
               C92183 * C92) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C1987 +
            (C14783 + C14782 + C14781) * C1983 -
            (C14786 + C14785 + C14784) * C1988 -
            (C14789 + C14788 + C14787) * C1984) *
               C92183 * C92072) *
              C2709 +
          (((C18103 + C18104 + C18105) * C1988 -
            ((C14752 * C8418 + C14525 * C8769 + C14751 * C3439 +
              C14524 * C3665 + C14750 * C1397 + C14523 * C1614) *
                 C1983 +
             (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
              C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                 C1987) +
            (C18106 + C18107 + C18108) * C1984) *
               C92183 * C92322 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C1988 -
            ((C18108 + C18107 + C18106) * C1983 +
             (C18105 + C18104 + C18103) * C1987) +
            (C14750 * C1395 + C14523 * C1612 + C14751 * C3441 + C14524 * C3667 +
             C14752 * C8420 + C14525 * C8771) *
                C1984) *
               C92183 * C92072) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92183 * C89 +
            (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
               C1983 -
           ((C420 + C412) * C92183 * C92 + (C419 + C407) * C92183 * C91 +
            (C418 + C404) * C92183 * C90 + (C417 + C401) * C92183 * C89) *
               C1984) *
              C2709 +
          (((C3007 + C3019) * C92183 * C89 + (C3010 + C3020) * C92183 * C90 +
            (C3013 + C3021) * C92183 * C91 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92183 * C92) *
               C1984 -
           ((C3021 + C3013) * C92183 * C92 + (C3020 + C3010) * C92183 * C91 +
            (C3019 + C3007) * C92183 * C90 +
            ((C307 * C1471 + C92157 * C1672) * C92105 +
             (C307 * C1389 + C92157 * C1606) * C181) *
                C92183 * C89) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C181 +
             (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
              C14752 * C891 + C14525 * C1086) *
                 C92105) *
                C92183 * C92322 +
            ((C14780 + C14779 + C14778) * C181 +
             (C14876 + C14877 + C14878) * C92105) *
                C92183 * C92072) *
               C1983 -
           (((C14879 + C14880 + C14881) * C92105 +
             (C14786 + C14785 + C14784) * C181) *
                C92183 * C92072 +
            ((C14878 + C14877 + C14876) * C92105 +
             (C14778 + C14779 + C14780) * C181) *
                C92183 * C92322) *
               C1984) *
              C2709 +
          ((((C18103 + C18104 + C18105) * C181 +
             (C18213 + C18214 + C18215) * C92105) *
                C92183 * C92322 +
            ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 +
              C14524 * C3663 + C14752 * C8414 + C14525 * C8768) *
                 C181 +
             (C14750 * C1469 + C14523 * C1670 + C14751 * C3515 +
              C14524 * C3737 + C14752 * C8542 + C14525 * C8872) *
                 C92105) *
                C92183 * C92072) *
               C1984 -
           (((C18215 + C18214 + C18213) * C92105 +
             (C18105 + C18104 + C18103) * C181) *
                C92183 * C92072 +
            ((C14752 * C8540 + C14525 * C8870 + C14751 * C3513 +
              C14524 * C3735 + C14750 * C1471 + C14523 * C1672) *
                 C92105 +
             (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
              C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                 C181) *
                C92183 * C92322) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C2849 +
                      (C307 * C245 + C92157 * C474) * C2709 -
                      (C307 * C1389 + C92157 * C1606) * C2850 -
                      (C307 * C1540 + C92157 * C1727) * C2710) *
                         C92183 * C89 +
                     (C3089 + C3090 - C3091 - C3107) * C92183 * C90 +
                     (C3094 + C3095 - C3096 - C3108) * C92183 * C91 +
                     (C3099 + C3100 - C3101 - C3109) * C92183 * C92) *
                        C92105 * C1983 +
                    ((C3091 - (C3090 + C3089) + C3107) * C92183 * C89 +
                     (C3096 - (C3095 + C3094) + C3108) * C92183 * C90 +
                     (C3101 - (C3100 + C3099) + C3109) * C92183 * C91 +
                     ((C307 * C2711 + C92157 * C2919) * C2850 -
                      (C496 * C2709 + C343 * C2849) +
                      (C307 * C2851 + C92157 * C3087) * C2710) *
                         C92183 * C92) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2849 +
                      (C14750 * C245 + C14523 * C474 + C14751 * C956 +
                       C14524 * C1146 + C14752 * C957 + C14525 * C1147) *
                          C2709 -
                      (C14752 * C8412 + C14525 * C8766 + C14751 * C3431 +
                       C14524 * C3661 + C14750 * C1389 + C14523 * C1606) *
                          C2850 -
                      (C14752 * C8653 + C14525 * C8971 + C14751 * C3587 +
                       C14524 * C3805 + C14750 * C1540 + C14523 * C1727) *
                          C2710) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C2849 +
                      (C14968 + C14969 + C14970) * C2709 -
                      (C18105 + C18104 + C18103) * C2850 -
                      (C18320 + C18321 + C18322) * C2710) *
                         C92183 * C92072) *
                        C92105 * C1983 +
                    (((C18103 + C18104 + C18105) * C2850 -
                      ((C14970 + C14969 + C14968) * C2709 +
                       (C14778 + C14779 + C14780) * C2849) +
                      (C18322 + C18321 + C18320) * C2710) *
                         C92183 * C92322 +
                     ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 +
                       C14524 * C3663 + C14752 * C8414 + C14525 * C8768) *
                          C2850 -
                      ((C14971 + C14972 + C14973) * C2709 +
                       (C14786 + C14785 + C14784) * C2849) +
                      (C14750 * C1538 + C14523 * C1731 + C14751 * C3589 +
                       C14524 * C3807 + C14752 * C8655 + C14525 * C8973) *
                          C2710) *
                         C92183 * C92072) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eezx[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92157 * C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92183 * C1796) * C1983 +
             (C554 * C1389 + C92183 * C1788) * C1987) +
            C3191 * C1984) *
               C89 +
           (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
               C90 +
           (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
               C91 +
           ((C554 * C2711 + C92183 * C3175) * C1988 -
            (C3195 * C1983 + C3194 * C1987) +
            (C554 * C2713 + C92183 * C3176) * C1984) *
               C92) *
              C92157 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92322 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92072) *
               C14523 +
           ((C7130 + C7131 - C7132 - C7133) * C92322 +
            (C7134 + C7135 - C7136 - C7137) * C92072) *
               C14524 +
           ((C17490 + C17491 - C17492 - C17493) * C92322 +
            (C17494 + C17495 - C17496 - C17497) * C92072) *
               C14525) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92183 * C1796) * C1983 +
              (C554 * C1389 + C92183 * C1788) * C1987) +
             C3191 * C1984) *
                C92322 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92072) *
               C14523 +
           ((C8091 * C1988 - (C9087 * C1983 + C9088 * C1987) + C8092 * C1984) *
                C92322 +
            (C8093 * C1988 - (C8092 * C1983 + C8091 * C1987) + C8094 * C1984) *
                C92072) *
               C14524 +
           ((C18425 * C1988 -
             ((C554 * C8418 + C92183 * C9075) * C1983 +
              (C554 * C8412 + C92183 * C9072) * C1987) +
             C18426 * C1984) *
                C92322 +
            ((C554 * C8414 + C92183 * C9074) * C1988 -
             (C18426 * C1983 + C18425 * C1987) +
             (C554 * C8420 + C92183 * C9077) * C1984) *
                C92072) *
               C14525) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C89 +
            (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
               C92157 * C1983 -
           ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
            (C664 + C648) * C89) *
               C92157 * C1984) *
              C2709 +
          (((C3263 + C3275) * C89 + (C3266 + C3276) * C90 +
            (C3269 + C3277) * C91 +
            ((C554 * C2711 + C92183 * C3175) * C181 +
             (C554 * C2781 + C92183 * C3261) * C92105) *
                C92) *
               C92157 * C1984 -
           ((C3277 + C3269) * C92 + (C3276 + C3266) * C91 +
            (C3275 + C3263) * C90 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C89) *
               C92157 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C181 +
              (C554 * C182 + C92183 * C641) * C92105) *
                 C92322 +
             (C648 + C664) * C92072) *
                C14523 +
            ((C5444 * C181 + C5545 * C92105) * C92322 +
             (C4710 + C4711) * C92072) *
                C14524 +
            ((C5451 * C181 + C5546 * C92105) * C92322 +
             (C15122 + C15123) * C92072) *
                C14525) *
               C1983 -
           (((C15124 + C15125) * C92072 + (C15123 + C15122) * C92322) * C14525 +
            ((C4713 + C4712) * C92072 + (C4711 + C4710) * C92322) * C14524 +
            ((C665 + C651) * C92072 + (C664 + C648) * C92322) * C14523) *
               C1984) *
              C2709 +
          ((((C3263 + C3275) * C92322 + (C3266 + C3276) * C92072) * C14523 +
            ((C8193 + C8201) * C92322 + (C8196 + C8202) * C92072) * C14524 +
            ((C18525 + C18529) * C92322 +
             ((C554 * C8414 + C92183 * C9074) * C181 +
              (C554 * C8542 + C92183 * C9190) * C92105) *
                 C92072) *
                C14525) *
               C1984 -
           (((C18529 + C18525) * C92072 +
             ((C554 * C8540 + C92183 * C9188) * C92105 +
              (C554 * C8412 + C92183 * C9072) * C181) *
                 C92322) *
                C14525 +
            ((C8201 + C8193) * C92072 +
             (C9194 * C92105 + C9088 * C181) * C92322) *
                C14524 +
            ((C3275 + C3263) * C92072 +
             ((C554 * C1471 + C92183 * C1854) * C92105 +
              (C554 * C1389 + C92183 * C1788) * C181) *
                 C92322) *
                C14523) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92157 * C92105 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C89 +
                     (C3352 - (C3351 + C3350) + C3364) * C90 +
                     (C3357 - (C3356 + C3355) + C3365) * C91 +
                     ((C554 * C2711 + C92183 * C3175) * C2850 -
                      (C741 * C2709 + C590 * C2849) +
                      (C554 * C2851 + C92183 * C3343) * C2710) *
                         C92) *
                        C92157 * C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C92322 +
                      (C3345 + C3346 - C3347 - C3363) * C92072) *
                         C14523 +
                     ((C9296 + C9297 - C9298 - C9302) * C92322 +
                      (C8301 + C8302 - C8303 - C8313) * C92072) *
                         C14524 +
                     ((C5451 * C2849 + C5641 * C2709 -
                       (C554 * C8412 + C92183 * C9072) * C2850 -
                       (C554 * C8653 + C92183 * C9292) * C2710) *
                          C92322 +
                      (C18628 + C18629 - C18630 - C18634) * C92072) *
                         C14525) *
                        C92105 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C92322 +
                      (C3352 - (C3351 + C3350) + C3364) * C92072) *
                         C14523 +
                     ((C8303 - (C8302 + C8301) + C8313) * C92322 +
                      (C8308 - (C8307 + C8306) + C8314) * C92072) *
                         C14524 +
                     ((C18630 - (C18629 + C18628) + C18634) * C92322 +
                      ((C554 * C8414 + C92183 * C9074) * C2850 -
                       (C5639 * C2709 + C5447 * C2849) +
                       (C554 * C8655 + C92183 * C9294) * C2710) *
                          C92072) *
                         C14525) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C104 +
          (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
           C91 * C127 + C103 * C120 + C92 * C128) *
              C93 -
          (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
           C90 * C115 + C100 * C108 + C89 * C114) *
              C105 -
          (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
           C90 * C127 + C100 * C118 + C89 * C126) *
              C94 +
          (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
           C91 * C121 + C103 * C112 + C92 * C123) *
              C106 +
          (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 + C102 * C122 +
           C91 * C129 + C103 * C124 + C92 * C130) *
              C95) *
         C92157 * C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92084) *
              C92157 * C92183 * C92116 * C798 -
          ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
            C90 * C828 + C100 * C813 + C89 * C829) *
               C92084 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C801) *
              C92157 * C92183 * C92116 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C801 +
           (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 + C102 * C824 +
            C91 * C832 + C103 * C825 + C92 * C833) *
               C92084) *
              C92157 * C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C104 +
           (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
               C93 -
           (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
               C105 -
           (C89868 * C119 + C92072 * C127 + C89875 * C118 + C92322 * C126) *
               C94 +
           (C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
               C106 +
           (C89875 * C119 + C92322 * C127 + C89868 * C120 + C92072 * C128) *
               C95) *
              C14523 +
          ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
               C104 +
           (C89875 * C813 + C92322 * C829 + C89868 * C812 + C92072 * C828) *
               C93 -
           (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
               C105 -
           (C89868 * C811 + C92072 * C827 + C89875 * C812 + C92322 * C828) *
               C94 +
           (C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
               C106 +
           (C89875 * C811 + C92322 * C827 + C89868 * C810 + C92072 * C826) *
               C95) *
              C14524 +
          ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
               C104 +
           (C89875 * C822 + C92322 * C830 + C89868 * C823 + C92072 * C831) *
               C93 -
           (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
               C105 -
           (C89868 * C824 + C92072 * C832 + C89875 * C823 + C92322 * C831) *
               C94 +
           (C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
               C106 +
           (C89875 * C824 + C92322 * C832 + C89868 * C825 + C92072 * C833) *
               C95) *
              C14525) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C801 +
            (C89875 * C117 + C92322 * C125 + C89868 * C118 + C92072 * C126) *
                C92084) *
               C14523 +
           ((C15306 + C15307) * C801 + (C15308 + C15309) * C92084) * C14524 +
           C15322 * C14525) *
              C92183 * C92116 * C798 -
          (((C15314 + C15315) * C92084 + (C15316 + C15317) * C801) * C14525 +
           ((C15313 + C15312) * C92084 + (C15311 + C15310) * C801) * C14524 +
           ((C15309 + C15308) * C92084 + (C15307 + C15306) * C801) * C14523) *
              C92183 * C92116 * C799 +
          (C15322 * C14523 +
           ((C15317 + C15316) * C801 + (C15315 + C15314) * C92084) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C801 +
            (C89875 * C15277 + C92322 * C15279 + C89868 * C15278 +
             C92072 * C15280) *
                C92084) *
               C14525) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92105) *
              C92157 * C92183 * C93 -
          ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
            C90 * C190 + C100 * C183 + C89 * C189) *
               C92105 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C181) *
              C92157 * C92183 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C181 +
           (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 + C102 * C186 +
            C91 * C192 + C103 * C187 + C92 * C193) *
               C92105) *
              C92157 * C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C884 +
          (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
           C91 * C190 + C103 * C185 + C92 * C191) *
              C798 -
          (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
           C90 * C816 + C100 * C805 + C89 * C817) *
              C885 -
          (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
           C90 * C897 + C100 * C890 + C89 * C898) *
              C799 +
          (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
           C91 * C820 + C103 * C809 + C92 * C821) *
              C886 +
          (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 + C102 * C893 +
           C91 * C901 + C103 * C894 + C92 * C902) *
              C800) *
         C92157 * C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C181 +
            (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
                C92105) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C181 +
            (C89875 * C890 + C92322 * C898 + C89868 * C889 + C92072 * C897) *
                C92105) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C181 +
            (C89875 * C891 + C92322 * C899 + C89868 * C892 + C92072 * C900) *
                C92105) *
               C14525) *
              C92183 * C93 -
          (((C89868 * C893 + C92072 * C901 + C89875 * C892 + C92322 * C900) *
                C92105 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C181) *
               C14525 +
           ((C89868 * C888 + C92072 * C896 + C89875 * C889 + C92322 * C897) *
                C92105 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C181) *
               C14524 +
           ((C89868 * C184 + C92072 * C190 + C89875 * C183 + C92322 * C189) *
                C92105 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C181) *
               C14523) *
              C92183 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C181 +
            (C89875 * C184 + C92322 * C190 + C89868 * C185 + C92072 * C191) *
                C92105) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C181 +
            (C89875 * C888 + C92322 * C896 + C89868 * C887 + C92072 * C895) *
                C92105) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C181 +
            (C89875 * C893 + C92322 * C901 + C89868 * C894 + C92072 * C902) *
                C92105) *
               C14525) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
               C884 +
           (C89875 * C182 + C92322 * C188 + C89868 * C183 + C92072 * C189) *
               C798 -
           (C15307 + C15306) * C885 - (C15413 + C15414) * C799 + C15318 * C886 +
           C15419 * C800) *
              C14523 +
          ((C15306 + C15307) * C884 + (C15414 + C15413) * C798 -
           (C15311 + C15310) * C885 - (C15416 + C15415) * C799 +
           (C15317 + C15316) * C886 + (C15417 + C15418) * C800) *
              C14524 +
          (C15318 * C884 + C15419 * C798 - (C15316 + C15317) * C885 -
           (C15418 + C15417) * C799 +
           (C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
            C92072 * C15276) *
               C886 +
           (C89875 * C15396 + C92322 * C15398 + C89868 * C15397 +
            C92072 * C15399) *
               C800) *
              C14525) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92116) *
              C92157 * C92183 * C92105 * C93 -
          ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
            C90 * C253 + C100 * C246 + C89 * C252) *
               C92116 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C244) *
              C92157 * C92183 * C92105 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C244 +
           (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 + C102 * C249 +
            C91 * C255 + C103 * C250 + C92 * C256) *
               C92116) *
              C92157 * C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92116) *
              C92157 * C92183 * C798 -
          ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
            C90 * C963 + C100 * C956 + C89 * C964) *
               C92116 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C244) *
              C92157 * C92183 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C244 +
           (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 + C102 * C959 +
            C91 * C967 + C103 * C960 + C92 * C968) *
               C92116) *
              C92157 * C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C89875 * C805 + C92322 * C817 + C89868 * C804 + C92072 * C816) *
                C244 +
            (C89875 * C956 + C92322 * C964 + C89868 * C955 + C92072 * C963) *
                C92116) *
               C14524 +
           ((C89875 * C806 + C92322 * C818 + C89868 * C807 + C92072 * C819) *
                C244 +
            (C89875 * C957 + C92322 * C965 + C89868 * C958 + C92072 * C966) *
                C92116) *
               C14525) *
              C92183 * C92105 * C93 -
          (((C89868 * C959 + C92072 * C967 + C89875 * C958 + C92322 * C966) *
                C92116 +
            (C89868 * C808 + C92072 * C820 + C89875 * C807 + C92322 * C819) *
                C244) *
               C14525 +
           ((C89868 * C954 + C92072 * C962 + C89875 * C955 + C92322 * C963) *
                C92116 +
            (C89868 * C803 + C92072 * C815 + C89875 * C804 + C92322 * C816) *
                C244) *
               C14524 +
           ((C89868 * C247 + C92072 * C253 + C89875 * C246 + C92322 * C252) *
                C92116 +
            (C89868 * C109 + C92072 * C115 + C89875 * C108 + C92322 * C114) *
                C244) *
               C14523) *
              C92183 * C92105 * C94 +
          (((C89875 * C109 + C92322 * C115 + C89868 * C110 + C92072 * C116) *
                C244 +
            (C89875 * C247 + C92322 * C253 + C89868 * C248 + C92072 * C254) *
                C92116) *
               C14523 +
           ((C89875 * C803 + C92322 * C815 + C89868 * C802 + C92072 * C814) *
                C244 +
            (C89875 * C954 + C92322 * C962 + C89868 * C953 + C92072 * C961) *
                C92116) *
               C14524 +
           ((C89875 * C808 + C92322 * C820 + C89868 * C809 + C92072 * C821) *
                C244 +
            (C89875 * C959 + C92322 * C967 + C89868 * C960 + C92072 * C968) *
                C92116) *
               C14525) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92322 * C113 + C89868 * C108 + C92072 * C114) *
                C244 +
            (C89875 * C245 + C92322 * C251 + C89868 * C246 + C92072 * C252) *
                C92116) *
               C14523 +
           ((C15306 + C15307) * C244 + (C15511 + C15512) * C92116) * C14524 +
           C15519 * C14525) *
              C92183 * C798 -
          (((C15515 + C15516) * C92116 + (C15316 + C15317) * C244) * C14525 +
           ((C15514 + C15513) * C92116 + (C15311 + C15310) * C244) * C14524 +
           ((C15512 + C15511) * C92116 + (C15307 + C15306) * C244) * C14523) *
              C92183 * C799 +
          (C15519 * C14523 +
           ((C15317 + C15316) * C244 + (C15516 + C15515) * C92116) * C14524 +
           ((C89875 * C15273 + C92322 * C15275 + C89868 * C15274 +
             C92072 * C15276) *
                C244 +
            (C89875 * C15493 + C92322 * C15495 + C89868 * C15494 +
             C92072 * C15496) *
                C92116) *
               C14525) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C307 * C107 + C92157 * C308) * C104 +
                     (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                     C338 * C94 + C339 * C106 + C340 * C95) *
                        C92183 * C89 +
                    (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                     C341 * C106 + C342 * C95) *
                        C92183 * C90 +
                    (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                     C343 * C106 + C344 * C95) *
                        C92183 * C91 +
                    (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
                     (C307 * C112 + C92157 * C313) * C106 +
                     (C307 * C124 + C92157 * C319) * C95) *
                        C92183 * C92) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C801 +
                      (C307 * C117 + C92157 * C314) * C92084) *
                         C92183 * C89 +
                     (C337 * C801 + C338 * C92084) * C92183 * C90 +
                     (C339 * C801 + C340 * C92084) * C92183 * C91 +
                     (C341 * C801 + C342 * C92084) * C92183 * C92) *
                        C92116 * C798 -
                    (((C307 * C810 + C92157 * C1027) * C92084 +
                      (C307 * C802 + C92157 * C1019) * C801) *
                         C92183 * C92 +
                     ((C307 * C811 + C92157 * C1028) * C92084 +
                      (C307 * C803 + C92157 * C1020) * C801) *
                         C92183 * C91 +
                     ((C307 * C812 + C92157 * C1029) * C92084 +
                      (C307 * C804 + C92157 * C1021) * C801) *
                         C92183 * C90 +
                     ((C307 * C813 + C92157 * C1030) * C92084 +
                      (C307 * C805 + C92157 * C1022) * C801) *
                         C92183 * C89) *
                        C92116 * C799 +
                    (((C307 * C806 + C92157 * C1023) * C801 +
                      (C307 * C822 + C92157 * C1031) * C92084) *
                         C92183 * C89 +
                     ((C307 * C807 + C92157 * C1024) * C801 +
                      (C307 * C823 + C92157 * C1032) * C92084) *
                         C92183 * C90 +
                     ((C307 * C808 + C92157 * C1025) * C801 +
                      (C307 * C824 + C92157 * C1033) * C92084) *
                         C92183 * C91 +
                     ((C307 * C809 + C92157 * C1026) * C801 +
                      (C307 * C825 + C92157 * C1034) * C92084) *
                         C92183 * C92) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                      C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                         C104 +
                     (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                      C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                         C93 -
                     (C14778 + C14779 + C14780) * C105 -
                     (C14781 + C14782 + C14783) * C94 +
                     (C14784 + C14785 + C14786) * C106 +
                     (C14787 + C14788 + C14789) * C95) *
                        C92183 * C92322 +
                    ((C14780 + C14779 + C14778) * C104 +
                     (C14783 + C14782 + C14781) * C93 -
                     (C14786 + C14785 + C14784) * C105 -
                     (C14789 + C14788 + C14787) * C94 +
                     (C14750 * C110 + C14523 * C311 + C14751 * C802 +
                      C14524 * C1019 + C14752 * C809 + C14525 * C1026) *
                         C106 +
                     (C14750 * C120 + C14523 * C317 + C14751 * C810 +
                      C14524 * C1027 + C14752 * C825 + C14525 * C1034) *
                         C95) *
                        C92183 * C92072) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14780 + C14779 + C14778) * C801 +
                      (C14783 + C14782 + C14781) * C92084) *
                         C92183 * C92072) *
                        C92116 * C798 -
                    (((C14752 * C4872 + C14525 * C5187 + C14751 * C823 +
                       C14524 * C1032 + C14750 * C812 + C14523 * C1029) *
                          C92084 +
                      (C14752 * C4866 + C14525 * C5184 + C14751 * C807 +
                       C14524 * C1024 + C14750 * C804 + C14523 * C1021) *
                          C801) *
                         C92183 * C92072 +
                     ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                       C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                          C92084 +
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C801) *
                         C92183 * C92322) *
                        C92116 * C799 +
                    (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 +
                       C14524 * C5183 + C14752 * C15273 + C14525 * C15593) *
                          C801 +
                      (C14750 * C822 + C14523 * C1031 + C14751 * C4871 +
                       C14524 * C5186 + C14752 * C15277 + C14525 * C15595) *
                          C92084) *
                         C92183 * C92322 +
                     ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 +
                       C14524 * C5184 + C14752 * C15274 + C14525 * C15594) *
                          C801 +
                      (C14750 * C823 + C14523 * C1032 + C14751 * C4872 +
                       C14524 * C5187 + C14752 * C15278 + C14525 * C15596) *
                          C92084) *
                         C92183 * C92072) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C181 +
            (C307 * C182 + C92157 * C394) * C92105) *
               C92183 * C89 +
           (C401 + C417) * C92183 * C90 + C423 * C91 + C424 * C92) *
              C93 -
          ((C420 + C412) * C92183 * C92 + (C419 + C407) * C92183 * C91 +
           (C418 + C404) * C92183 * C90 + (C417 + C401) * C92183 * C89) *
              C94 +
          (C423 * C89 + C424 * C90 + (C412 + C420) * C92183 * C91 +
           ((C307 * C112 + C92157 * C313) * C181 +
            (C307 * C187 + C92157 * C399) * C92105) *
               C92183 * C92) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92157 * C308) * C884 +
           (C307 * C182 + C92157 * C394) * C798 -
           (C307 * C805 + C92157 * C1022) * C885 -
           (C307 * C890 + C92157 * C1085) * C799 +
           (C307 * C806 + C92157 * C1023) * C886 +
           (C307 * C891 + C92157 * C1086) * C800) *
              C92183 * C89 +
          (C337 * C884 + C413 * C798 - (C307 * C804 + C92157 * C1021) * C885 -
           (C307 * C889 + C92157 * C1087) * C799 +
           (C307 * C807 + C92157 * C1024) * C886 +
           (C307 * C892 + C92157 * C1088) * C800) *
              C92183 * C90 +
          (C339 * C884 + C414 * C798 - (C307 * C803 + C92157 * C1020) * C885 -
           (C307 * C888 + C92157 * C1089) * C799 +
           (C307 * C808 + C92157 * C1025) * C886 +
           (C307 * C893 + C92157 * C1090) * C800) *
              C92183 * C91 +
          (C341 * C884 + C415 * C798 - (C307 * C802 + C92157 * C1019) * C885 -
           (C307 * C887 + C92157 * C1091) * C799 +
           (C307 * C809 + C92157 * C1026) * C886 +
           (C307 * C894 + C92157 * C1092) * C800) *
              C92183 * C92) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C181 +
            (C14876 + C14877 + C14878) * C92105) *
               C92183 * C92072) *
              C93 -
          (((C14879 + C14880 + C14881) * C92105 +
            (C14786 + C14785 + C14784) * C181) *
               C92183 * C92072 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92183 * C92322) *
              C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C181 +
            (C14750 * C185 + C14523 * C397 + C14751 * C887 + C14524 * C1091 +
             C14752 * C894 + C14525 * C1092) *
                C92105) *
               C92183 * C92072) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92183 * C92322 +
          ((C14780 + C14779 + C14778) * C884 +
           (C14876 + C14877 + C14878) * C798 -
           (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
            C14750 * C804 + C14523 * C1021) *
               C885 -
           (C14752 * C4988 + C14525 * C5264 + C14751 * C892 + C14524 * C1088 +
            C14750 * C889 + C14523 * C1087) *
               C799 +
           (C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
            C14752 * C15274 + C14525 * C15594) *
               C886 +
           (C14750 * C892 + C14523 * C1088 + C14751 * C4988 + C14524 * C5264 +
            C14752 * C15397 + C14525 * C15672) *
               C800) *
              C92183 * C92072) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C92183 * C89 +
           (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
              C92105 * C93 -
          ((C500 + C492) * C92183 * C92 + (C499 + C487) * C92183 * C91 +
           (C498 + C484) * C92183 * C90 + (C497 + C481) * C92183 * C89) *
              C92105 * C94 +
          (C503 * C89 + C504 * C90 + (C492 + C500) * C92183 * C91 +
           ((C307 * C112 + C92157 * C313) * C244 +
            (C307 * C250 + C92157 * C479) * C92116) *
               C92183 * C92) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C244 +
            (C307 * C245 + C92157 * C474) * C92116) *
               C92183 * C89 +
           (C481 + C497) * C92183 * C90 + C503 * C91 + C504 * C92) *
              C798 -
          (((C307 * C953 + C92157 * C1143) * C92116 +
            (C307 * C802 + C92157 * C1019) * C244) *
               C92183 * C92 +
           ((C307 * C954 + C92157 * C1144) * C92116 +
            (C307 * C803 + C92157 * C1020) * C244) *
               C92183 * C91 +
           ((C307 * C955 + C92157 * C1145) * C92116 +
            (C307 * C804 + C92157 * C1021) * C244) *
               C92183 * C90 +
           ((C307 * C956 + C92157 * C1146) * C92116 +
            (C307 * C805 + C92157 * C1022) * C244) *
               C92183 * C89) *
              C799 +
          (((C307 * C806 + C92157 * C1023) * C244 +
            (C307 * C957 + C92157 * C1147) * C92116) *
               C92183 * C89 +
           ((C307 * C807 + C92157 * C1024) * C244 +
            (C307 * C958 + C92157 * C1148) * C92116) *
               C92183 * C90 +
           ((C307 * C808 + C92157 * C1025) * C244 +
            (C307 * C959 + C92157 * C1149) * C92116) *
               C92183 * C91 +
           ((C307 * C809 + C92157 * C1026) * C244 +
            (C307 * C960 + C92157 * C1150) * C92116) *
               C92183 * C92) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C92105 * C93 -
          (((C14971 + C14972 + C14973) * C92116 +
            (C14786 + C14785 + C14784) * C244) *
               C92183 * C92072 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92183 * C92322) *
              C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92183 * C92322 +
           ((C14750 * C110 + C14523 * C311 + C14751 * C802 + C14524 * C1019 +
             C14752 * C809 + C14525 * C1026) *
                C244 +
            (C14750 * C248 + C14523 * C477 + C14751 * C953 + C14524 * C1143 +
             C14752 * C960 + C14525 * C1150) *
                C92116) *
               C92183 * C92072) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92183 * C92322 +
           ((C14780 + C14779 + C14778) * C244 +
            (C14968 + C14969 + C14970) * C92116) *
               C92183 * C92072) *
              C798 -
          (((C14752 * C5086 + C14525 * C5341 + C14751 * C958 + C14524 * C1148 +
             C14750 * C955 + C14523 * C1145) *
                C92116 +
            (C14752 * C4866 + C14525 * C5184 + C14751 * C807 + C14524 * C1024 +
             C14750 * C804 + C14523 * C1021) *
                C244) *
               C92183 * C92072 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92183 * C92322) *
              C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92183 * C92322 +
           ((C14750 * C807 + C14523 * C1024 + C14751 * C4866 + C14524 * C5184 +
             C14752 * C15274 + C14525 * C15594) *
                C244 +
            (C14750 * C958 + C14523 * C1148 + C14751 * C5086 + C14524 * C5341 +
             C14752 * C15494 + C14525 * C15748) *
                C92116) *
               C92183 * C92072) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C104 +
           (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C89 +
          (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
           C589 * C95) *
              C90 +
          (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
           C591 * C95) *
              C91 +
          (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
           (C554 * C112 + C92183 * C560) * C106 +
           (C554 * C124 + C92183 * C566) * C95) *
              C92) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C801 +
            (C554 * C117 + C92183 * C561) * C92084) *
               C89 +
           (C584 * C801 + C585 * C92084) * C90 +
           (C586 * C801 + C587 * C92084) * C91 +
           (C588 * C801 + C589 * C92084) * C92) *
              C92157 * C92116 * C798 -
          (((C554 * C810 + C92183 * C1209) * C92084 +
            (C554 * C802 + C92183 * C1201) * C801) *
               C92 +
           ((C554 * C811 + C92183 * C1210) * C92084 +
            (C554 * C803 + C92183 * C1202) * C801) *
               C91 +
           ((C554 * C812 + C92183 * C1211) * C92084 +
            (C554 * C804 + C92183 * C1203) * C801) *
               C90 +
           ((C554 * C813 + C92183 * C1212) * C92084 +
            (C554 * C805 + C92183 * C1204) * C801) *
               C89) *
              C92157 * C92116 * C799 +
          (((C554 * C806 + C92183 * C1205) * C801 +
            (C554 * C822 + C92183 * C1213) * C92084) *
               C89 +
           ((C554 * C807 + C92183 * C1206) * C801 +
            (C554 * C823 + C92183 * C1214) * C92084) *
               C90 +
           ((C554 * C808 + C92183 * C1207) * C801 +
            (C554 * C824 + C92183 * C1215) * C92084) *
               C91 +
           ((C554 * C809 + C92183 * C1208) * C801 +
            (C554 * C825 + C92183 * C1216) * C92084) *
               C92) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C104 +
            (C554 * C117 + C92183 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92322 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92072) *
              C14523 +
          ((C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92322 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92072) *
              C14524 +
          ((C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
            C5447 * C106 + C5446 * C95) *
               C92322 +
           (C5449 * C104 + C5448 * C93 - C5447 * C105 - C5446 * C94 +
            (C554 * C809 + C92183 * C1208) * C106 +
            (C554 * C825 + C92183 * C1216) * C95) *
               C92072) *
              C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C801 +
             (C554 * C117 + C92183 * C561) * C92084) *
                C92322 +
            (C584 * C801 + C585 * C92084) * C92072) *
               C14523 +
           ((C5452 + C5453) * C92322 + (C5428 + C5429) * C92072) * C14524 +
           C15844 * C14525) *
              C92116 * C798 -
          (((C15845 + C15846) * C92072 + (C15847 + C15848) * C92322) * C14525 +
           ((C5456 + C5457) * C92072 + (C5458 + C5459) * C92322) * C14524 +
           ((C5429 + C5428) * C92072 + (C5453 + C5452) * C92322) * C14523) *
              C92116 * C799 +
          (C15844 * C14523 +
           ((C15848 + C15847) * C92322 + (C15846 + C15845) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C801 +
             (C554 * C15277 + C92183 * C15825) * C92084) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C801 +
             (C554 * C15278 + C92183 * C15826) * C92084) *
                C92072) *
               C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92157 * C93 -
          ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
           (C664 + C648) * C89) *
              C92157 * C94 +
          (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
           ((C554 * C112 + C92183 * C560) * C181 +
            (C554 * C187 + C92183 * C646) * C92105) *
               C92) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 -
           (C554 * C805 + C92183 * C1204) * C885 -
           (C554 * C890 + C92183 * C1267) * C799 +
           (C554 * C806 + C92183 * C1205) * C886 +
           (C554 * C891 + C92183 * C1268) * C800) *
              C89 +
          (C584 * C884 + C660 * C798 - (C554 * C804 + C92183 * C1203) * C885 -
           (C554 * C889 + C92183 * C1269) * C799 +
           (C554 * C807 + C92183 * C1206) * C886 +
           (C554 * C892 + C92183 * C1270) * C800) *
              C90 +
          (C586 * C884 + C661 * C798 - (C554 * C803 + C92183 * C1202) * C885 -
           (C554 * C888 + C92183 * C1271) * C799 +
           (C554 * C808 + C92183 * C1207) * C886 +
           (C554 * C893 + C92183 * C1272) * C800) *
              C91 +
          (C588 * C884 + C662 * C798 - (C554 * C802 + C92183 * C1201) * C885 -
           (C554 * C887 + C92183 * C1273) * C799 +
           (C554 * C809 + C92183 * C1208) * C886 +
           (C554 * C894 + C92183 * C1274) * C800) *
              C92) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C92322 +
            (C648 + C664) * C92072) *
               C14523 +
           ((C5444 * C181 + C5545 * C92105) * C92322 +
            (C4710 + C4711) * C92072) *
               C14524 +
           ((C5451 * C181 + C5546 * C92105) * C92322 +
            (C15122 + C15123) * C92072) *
               C14525) *
              C93 -
          (((C15124 + C15125) * C92072 + (C15123 + C15122) * C92322) * C14525 +
           ((C4713 + C4712) * C92072 + (C4711 + C4710) * C92322) * C14524 +
           ((C665 + C651) * C92072 + (C664 + C648) * C92322) * C14523) *
              C94 +
          ((C668 * C92322 + C669 * C92072) * C14523 +
           (C4716 * C92322 + (C4715 + C4714) * C92072) * C14524 +
           ((C15125 + C15124) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C181 +
             (C554 * C894 + C92183 * C1274) * C92105) *
                C92072) *
               C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C92322 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C92072) *
              C14523 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            C15843 * C886 + C15929 * C800) *
               C92322 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            C15841 * C886 + C15930 * C800) *
               C92072) *
              C14524 +
          ((C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
            (C554 * C15273 + C92183 * C15823) * C886 +
            (C554 * C15396 + C92183 * C15922) * C800) *
               C92322 +
           (C5449 * C884 + C5547 * C798 - C15841 * C885 - C15930 * C799 +
            (C554 * C15274 + C92183 * C15824) * C886 +
            (C554 * C15397 + C92183 * C15923) * C800) *
               C92072) *
              C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92157 * C92105 * C93 -
          ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
           (C742 + C726) * C89) *
              C92157 * C92105 * C94 +
          (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
           ((C554 * C112 + C92183 * C560) * C244 +
            (C554 * C250 + C92183 * C724) * C92116) *
               C92) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92157 * C798 -
          (((C554 * C953 + C92183 * C1325) * C92116 +
            (C554 * C802 + C92183 * C1201) * C244) *
               C92 +
           ((C554 * C954 + C92183 * C1326) * C92116 +
            (C554 * C803 + C92183 * C1202) * C244) *
               C91 +
           ((C554 * C955 + C92183 * C1327) * C92116 +
            (C554 * C804 + C92183 * C1203) * C244) *
               C90 +
           ((C554 * C956 + C92183 * C1328) * C92116 +
            (C554 * C805 + C92183 * C1204) * C244) *
               C89) *
              C92157 * C799 +
          (((C554 * C806 + C92183 * C1205) * C244 +
            (C554 * C957 + C92183 * C1329) * C92116) *
               C89 +
           ((C554 * C807 + C92183 * C1206) * C244 +
            (C554 * C958 + C92183 * C1330) * C92116) *
               C90 +
           ((C554 * C808 + C92183 * C1207) * C244 +
            (C554 * C959 + C92183 * C1331) * C92116) *
               C91 +
           ((C554 * C809 + C92183 * C1208) * C244 +
            (C554 * C960 + C92183 * C1332) * C92116) *
               C92) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           ((C5637 + C5645) * C92322 + (C5634 + C5644) * C92072) * C14525) *
              C92105 * C93 -
          (((C5643 + C5631) * C92072 + (C5644 + C5634) * C92322) * C14525 +
           (C7347 * C92072 + C7348 * C92322) * C14524 +
           ((C743 + C729) * C92072 + (C742 + C726) * C92322) * C14523) *
              C92105 * C94 +
          ((C746 * C92322 + C747 * C92072) * C14523 +
           (C4791 * C92322 + (C2631 + C2641) * C92072) * C14524 +
           ((C5631 + C5643) * C92322 +
            ((C554 * C809 + C92183 * C1208) * C244 +
             (C554 * C960 + C92183 * C1332) * C92116) *
                C92072) *
               C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92322 +
            (C726 + C742) * C92072) *
               C14523 +
           ((C5626 + C5642) * C92322 + C7346 * C92072) * C14524 +
           C16019 * C14525) *
              C798 -
          (((C16020 + C16011) * C92072 + (C16021 + C16014) * C92322) * C14525 +
           ((C5644 + C5634) * C92072 + (C5645 + C5637) * C92322) * C14524 +
           (C7348 * C92072 + (C5642 + C5626) * C92322) * C14523) *
              C799 +
          (C16019 * C14523 +
           ((C16014 + C16021) * C92322 + (C16011 + C16020) * C92072) * C14524 +
           (((C554 * C15273 + C92183 * C15823) * C244 +
             (C554 * C15493 + C92183 * C16004) * C92116) *
                C92322 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92072) *
               C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C1983 -
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
             C4102 * C118 + C4097 * C126) *
                C1984) *
               C92336 +
           ((C4902 + C4903 + C4904) * C1987 + (C4905 + C4906 + C4907) * C1983 -
            (C6470 + C6471 + C6472) * C1988 - (C6473 + C6474 + C6475) * C1984) *
               C92171) *
              C92183 * C92116 * C1985 +
          (((C6472 + C6471 + C6470) * C1988 -
            ((C4907 + C4906 + C4905) * C1983 +
             (C4904 + C4903 + C4902) * C1987) +
            (C6475 + C6474 + C6473) * C1984) *
               C92336 +
           ((C4102 * C807 + C4097 * C819 + C4103 * C808 + C4098 * C820 +
             C4104 * C809 + C4099 * C821) *
                C1988 -
            ((C4908 + C4909 + C4910) * C1983 +
             (C4911 + C4912 + C4913) * C1987) +
            (C4102 * C823 + C4097 * C831 + C4103 * C824 + C4098 * C832 +
             C4104 * C825 + C4099 * C833) *
                C1984) *
               C92171) *
              C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1987 +
            (C19671 * C117 + C92067 * C125) * C1983 -
            (C19671 * C108 + C92067 * C114) * C1988 -
            (C19671 * C118 + C92067 * C126) * C1984) *
               C19667 +
           (C21165 + C21166 - C21189 - C21190) * C19668 +
           (C21171 + C21172 - C21191 - C21192) * C19669 +
           (C21177 + C21178 - C21193 - C21194) * C19670) *
              C92183 * C92116 * C1985 +
          ((C21189 - (C21166 + C21165) + C21190) * C19667 +
           (C21191 - (C21172 + C21171) + C21192) * C19668 +
           (C21193 - (C21178 + C21177) + C21194) * C19669 +
           ((C19671 * C15274 + C92067 * C15276) * C1988 -
            (C20153 * C1983 + C20154 * C1987) +
            (C19671 * C15278 + C92067 * C15280) * C1984) *
               C19670) *
              C92183 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2059 + (C5008 + C5007 + C5006) * C1985 -
            (C4911 + C4912 + C4913) * C2060 - (C5011 + C5010 + C5009) * C1986) *
               C92171) *
              C92183 * C1983 +
          (((C6472 + C6471 + C6470) * C2060 -
            ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
              C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6580 + C6581 + C6582) * C1986) *
               C92336 +
           ((C4102 * C807 + C4097 * C819 + C4103 * C808 + C4098 * C820 +
             C4104 * C809 + C4099 * C821) *
                C2060 -
            ((C6582 + C6581 + C6580) * C1985 +
             (C6470 + C6471 + C6472) * C2059) +
            (C4102 * C892 + C4097 * C900 + C4103 * C893 + C4098 * C901 +
             C4104 * C894 + C4099 * C902) *
                C1986) *
               C92171) *
              C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2059 +
            (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
            C20225 * C1986) *
               C19667 +
           (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 - C20226 * C1986) *
               C19668 +
           (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 - C20227 * C1986) *
               C19669 +
           (C20151 * C2059 + C20227 * C1985 - C20154 * C2060 - C20228 * C1986) *
               C19670) *
              C92183 * C1983 +
          ((C21183 * C2060 -
            ((C19671 * C183 + C92067 * C189) * C1985 +
             (C19671 * C108 + C92067 * C114) * C2059) +
            C21267 * C1986) *
               C19667 +
           (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
            C21268 * C1986) *
               C19668 +
           (C21187 * C2060 - (C21268 * C1985 + C21185 * C2059) +
            C21269 * C1986) *
               C19669 +
           ((C19671 * C15274 + C92067 * C15276) * C2060 -
            (C21269 * C1985 + C21187 * C2059) +
            (C19671 * C15397 + C92067 * C15399) * C1986) *
               C19670) *
              C92183 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
              C4104 * C247 + C4099 * C253) *
                 C92116) *
                C92336 +
            ((C4902 + C4903 + C4904) * C244 +
             (C5104 + C5105 + C5106) * C92116) *
                C92171) *
               C92183 * C1985 -
           (((C5107 + C5108 + C5109) * C92116 +
             (C4911 + C4912 + C4913) * C244) *
                C92171 +
            ((C5106 + C5105 + C5104) * C92116 +
             (C4904 + C4903 + C4902) * C244) *
                C92336) *
               C92183 * C1986) *
              C1983 +
          ((((C6472 + C6471 + C6470) * C244 +
             (C6687 + C6688 + C6689) * C92116) *
                C92336 +
            ((C4102 * C807 + C4097 * C819 + C4103 * C808 + C4098 * C820 +
              C4104 * C809 + C4099 * C821) *
                 C244 +
             (C4102 * C958 + C4097 * C966 + C4103 * C959 + C4098 * C967 +
              C4104 * C960 + C4099 * C968) *
                 C92116) *
                C92171) *
               C92183 * C1986 -
           (((C6689 + C6688 + C6687) * C92116 +
             (C6470 + C6471 + C6472) * C244) *
                C92171 +
            ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
              C4102 * C246 + C4097 * C252) *
                 C92116 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C244) *
                C92336) *
               C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C19667 +
            (C20281 + C20297) * C19668 + C20301 * C19669 + C20302 * C19670) *
               C92183 * C1985 -
           ((C20300 + C20292) * C19670 + (C20299 + C20287) * C19669 +
            (C20298 + C20284) * C19668 + (C20297 + C20281) * C19667) *
               C92183 * C1986) *
              C1983 +
          (((C21336 + C21348) * C19667 + (C21339 + C21349) * C19668 +
            (C21342 + C21350) * C19669 +
            ((C19671 * C15274 + C92067 * C15276) * C244 +
             (C19671 * C15494 + C92067 * C15496) * C92116) *
                C19670) *
               C92183 * C1986 -
           ((C21350 + C21342) * C19670 + (C21349 + C21339) * C19669 +
            (C21348 + C21336) * C19668 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C19667) *
               C92183 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1987 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C1983 -
            (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
               C92183 * C4097 +
           ((C4355 + C4354) * C1987 + (C4357 + C4356) * C1983 -
            (C4359 + C4358) * C1988 - (C4361 + C4360) * C1984) *
               C92183 * C4098 +
           (C4366 * C1987 + C4367 * C1983 - (C4363 + C4362) * C1988 -
            (C4365 + C4364) * C1984) *
               C92183 * C4099) *
              C92116 * C1985 +
          (((C6804 + C6805) * C1988 -
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C1983 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C1987) +
            (C6806 + C6807) * C1984) *
               C92183 * C4097 +
           ((C6808 + C6809) * C1988 -
            ((C6807 + C6806) * C1983 + (C6805 + C6804) * C1987) +
            (C6810 + C6811) * C1984) *
               C92183 * C4098 +
           ((C4327 * C802 + C92336 * C1019 + C4328 * C809 + C92171 * C1026) *
                C1988 -
            ((C6811 + C6810) * C1983 + (C6809 + C6808) * C1987) +
            (C4327 * C810 + C92336 * C1027 + C4328 * C825 + C92171 * C1034) *
                C1984) *
               C92183 * C4099) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C1987 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C1983 -
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C1988 -
           (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
            C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
               C1984) *
              C92183 * C92067 * C92116 * C1985 +
          ((C19822 * C804 + C19667 * C1021 + C19823 * C807 + C19668 * C1024 +
            C19824 * C4866 + C19669 * C5184 + C19825 * C15274 +
            C19670 * C15594) *
               C1988 -
           ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
             C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
             C19667 * C1030) *
                C1983 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C1987) +
           (C19822 * C812 + C19667 * C1029 + C19823 * C823 + C19668 * C1032 +
            C19824 * C4872 + C19669 * C5187 + C19825 * C15278 +
            C19670 * C15596) *
               C1984) *
              C92183 * C92067 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2059 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C1985 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C2060 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C1986) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2059 + (C4455 + C4456) * C1985 -
            (C6805 + C6804) * C2060 - (C6918 + C6919) * C1986) *
               C92183 * C4098 +
           (C4366 * C2059 + C4461 * C1985 - (C6809 + C6808) * C2060 -
            (C6920 + C6921) * C1986) *
               C92183 * C4099) *
              C1983 +
          (((C6804 + C6805) * C2060 -
            ((C4456 + C4455) * C1985 + (C4354 + C4355) * C2059) +
            (C6919 + C6918) * C1986) *
               C92183 * C4097 +
           ((C6808 + C6809) * C2060 -
            ((C4458 + C4457) * C1985 + (C4359 + C4358) * C2059) +
            (C6921 + C6920) * C1986) *
               C92183 * C4098 +
           ((C4327 * C802 + C92336 * C1019 + C4328 * C809 + C92171 * C1026) *
                C2060 -
            ((C4459 + C4460) * C1985 + (C4363 + C4362) * C2059) +
            (C4327 * C887 + C92336 * C1091 + C4328 * C894 + C92171 * C1092) *
                C1986) *
               C92183 * C4099) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2059 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C1985 -
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C2060 -
           (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 +
            C19669 * C5263 + C19823 * C891 + C19668 * C1086 + C19822 * C890 +
            C19667 * C1085) *
               C1986) *
              C92183 * C92067 * C1983 +
          ((C19822 * C804 + C19667 * C1021 + C19823 * C807 + C19668 * C1024 +
            C19824 * C4866 + C19669 * C5184 + C19825 * C15274 +
            C19670 * C15594) *
               C2060 -
           ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
             C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
                C1985 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C2059) +
           (C19822 * C889 + C19667 * C1087 + C19823 * C892 + C19668 * C1088 +
            C19824 * C4988 + C19669 * C5264 + C19825 * C15397 +
            C19670 * C15672) *
               C1986) *
              C92183 * C92067 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C244 +
             (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                 C92116) *
                C92183 * C4097 +
            ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
                C4098 +
            C4561 * C4099) *
               C1985 -
           (((C7028 + C7029) * C92116 + (C6809 + C6808) * C244) * C92183 *
                C4099 +
            ((C7030 + C7031) * C92116 + (C6805 + C6804) * C244) * C92183 *
                C4098 +
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C92116 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C244) *
                C92183 * C4097) *
               C1986) *
              C1983 +
          ((((C6804 + C6805) * C244 + (C7031 + C7030) * C92116) * C92183 *
                C4097 +
            ((C6808 + C6809) * C244 + (C7029 + C7028) * C92116) * C92183 *
                C4098 +
            ((C4327 * C802 + C92336 * C1019 + C4328 * C809 + C92171 * C1026) *
                 C244 +
             (C4327 * C953 + C92336 * C1143 + C4328 * C960 + C92171 * C1150) *
                 C92116) *
                C92183 * C4099) *
               C1986 -
           (((C4556 + C4557) * C92116 + (C4363 + C4362) * C244) * C92183 *
                C4099 +
            ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C92183 *
                C4098 +
            ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C92183 *
                C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
             C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
                C244 +
            (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
             C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
                C92116) *
               C92183 * C92067 * C1985 -
           ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
             C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
             C19667 * C1146) *
                C92116 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C244) *
               C92183 * C92067 * C1986) *
              C1983 +
          (((C19822 * C804 + C19667 * C1021 + C19823 * C807 + C19668 * C1024 +
             C19824 * C4866 + C19669 * C5184 + C19825 * C15274 +
             C19670 * C15594) *
                C244 +
            (C19822 * C955 + C19667 * C1145 + C19823 * C958 + C19668 * C1148 +
             C19824 * C5086 + C19669 * C5341 + C19825 * C15494 +
             C19670 * C15748) *
                C92116) *
               C92183 * C92067 * C1986 -
           ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
             C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
                C92116 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C244) *
               C92183 * C92067 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C4098 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C4099) *
               C92336 +
           ((C7130 + C7131 - C7132 - C7133) * C4097 +
            (C7134 + C7135 - C7136 - C7137) * C4098 +
            (C7138 + C7139 - C7140 - C7141) * C4099) *
               C92171) *
              C92116 * C1985 +
          (((C7132 - (C7131 + C7130) + C7133) * C4097 +
            (C7136 - (C7135 + C7134) + C7137) * C4098 +
            (C7140 - (C7139 + C7138) + C7141) * C4099) *
               C92336 +
           ((C5449 * C1988 - (C5450 * C1983 + C5451 * C1987) + C5448 * C1984) *
                C4097 +
            (C5447 * C1988 - (C5448 * C1983 + C5449 * C1987) + C5446 * C1984) *
                C4098 +
            ((C554 * C809 + C92183 * C1208) * C1988 -
             (C5446 * C1983 + C5447 * C1987) +
             (C554 * C825 + C92183 * C1216) * C1984) *
                C4099) *
               C92171) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92067 * C19667 +
           (C7130 + C7131 - C7132 - C7133) * C92067 * C19668 +
           (C17490 + C17491 - C17492 - C17493) * C92067 * C19669 +
           (C21615 + C21616 - C21617 - C21618) * C92067 * C19670) *
              C92116 * C1985 +
          ((C7132 - (C7131 + C7130) + C7133) * C92067 * C19667 +
           (C17492 - (C17491 + C17490) + C17493) * C92067 * C19668 +
           (C21617 - (C21616 + C21615) + C21618) * C92067 * C19669 +
           ((C554 * C15274 + C92183 * C15824) * C1988 -
            (C20516 * C1983 + C20517 * C1987) +
            (C554 * C15278 + C92183 * C15826) * C1984) *
               C92067 * C19670) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C4098 +
            (C2546 + C2547 - C2548 - C2560) * C4099) *
               C92336 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C4097 +
            (C7240 + C7241 - C7242 - C7243) * C4098 +
            (C7244 + C7245 - C7246 - C7247) * C4099) *
               C92171) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C4097 +
            (C2548 - (C2547 + C2546) + C2560) * C4098 +
            (C2553 - (C2552 + C2551) + C2561) * C4099) *
               C92336 +
           ((C7242 - (C7241 + C7240) + C7243) * C4097 +
            (C7246 - (C7245 + C7244) + C7247) * C4098 +
            ((C554 * C809 + C92183 * C1208) * C2060 -
             (C2558 * C1985 + C2472 * C2059) +
             (C554 * C894 + C92183 * C1274) * C1986) *
                C4099) *
               C92171) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
            C5545 * C1986) *
               C92067 * C19667 +
           (C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
               C92067 * C19668 +
           (C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
               C92067 * C19669 +
           (C15843 * C2059 + C15929 * C1985 - C20517 * C2060 - C20573 * C1986) *
               C92067 * C19670) *
              C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C92067 * C19667 +
           (C7242 - (C7241 + C7240) + C7243) * C92067 * C19668 +
           (C17598 - (C17597 + C17596) + C17599) * C92067 * C19669 +
           ((C554 * C15274 + C92183 * C15824) * C2060 -
            (C15930 * C1985 + C15841 * C2059) +
            (C554 * C15397 + C92183 * C15923) * C1986) *
               C92067 * C19670) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92183 * C555) * C244 +
              (C554 * C245 + C92183 * C719) * C92116) *
                 C4097 +
             (C726 + C742) * C4098 + C746 * C4099) *
                C92336 +
            ((C5626 + C5642) * C4097 + C7346 * C4098 + C4791 * C4099) *
                C92171) *
               C1985 -
           (((C5643 + C5631) * C4099 + (C5644 + C5634) * C4098 +
             (C5645 + C5637) * C4097) *
                C92171 +
            (C7347 * C4099 + C7348 * C4098 + (C5642 + C5626) * C4097) *
                C92336) *
               C1986) *
              C1983 +
          (((C7346 * C4097 + C4791 * C4098 + (C2631 + C2641) * C4099) * C92336 +
            ((C5634 + C5644) * C4097 + (C5631 + C5643) * C4098 +
             ((C554 * C809 + C92183 * C1208) * C244 +
              (C554 * C960 + C92183 * C1332) * C92116) *
                 C4099) *
                C92171) *
               C1986 -
           (((C2641 + C2631) * C4099 + C7347 * C4098 + C7348 * C4097) * C92171 +
            ((C744 + C732) * C4099 + (C743 + C729) * C4098 +
             (C742 + C726) * C4097) *
                C92336) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C92067 * C19667 +
            (C5626 + C5642) * C92067 * C19668 + C20625 * C19669 +
            C20630 * C19670) *
               C1985 -
           ((C20632 + C20629) * C92067 * C19670 +
            (C16021 + C16014) * C92067 * C19669 +
            (C5645 + C5637) * C92067 * C19668 +
            (C5642 + C5626) * C92067 * C19667) *
               C1986) *
              C1983 +
          ((C7346 * C92067 * C19667 + C16008 * C92067 * C19668 +
            (C16011 + C16020) * C92067 * C19669 +
            ((C554 * C15274 + C92183 * C15824) * C244 +
             (C554 * C15494 + C92183 * C16005) * C92116) *
                C92067 * C19670) *
               C1986 -
           ((C16020 + C16011) * C92067 * C19670 + C17698 * C92067 * C19669 +
            C7348 * C92067 * C19668 + (C742 + C726) * C92067 * C19667) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
              C4104 * C119 + C4099 * C127) *
                 C92084) *
                C92336 +
            ((C4902 + C4903 + C4904) * C801 +
             (C4905 + C4906 + C4907) * C92084) *
                C92171) *
               C92183 * C2709 -
           (((C8437 + C8438 + C8439) * C92084 +
             (C8440 + C8441 + C8442) * C801) *
                C92171 +
            ((C4104 * C1395 + C4099 * C1411 + C4103 * C1396 + C4098 * C1412 +
              C4102 * C1397 + C4097 * C1413) *
                 C92084 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C801) *
                C92336) *
               C92183 * C2710) *
              C1985 +
          ((((C8442 + C8441 + C8440) * C801 +
             (C8439 + C8438 + C8437) * C92084) *
                C92336 +
            ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
              C4104 * C8414 + C4099 * C8417) *
                 C801 +
             (C4102 * C8418 + C4097 * C8421 + C4103 * C8419 + C4098 * C8422 +
              C4104 * C8420 + C4099 * C8423) *
                 C92084) *
                C92171) *
               C92183 * C2710 -
           (((C4908 + C4909 + C4910) * C92084 +
             (C4911 + C4912 + C4913) * C801) *
                C92171 +
            ((C4907 + C4906 + C4905) * C92084 +
             (C4904 + C4903 + C4902) * C801) *
                C92336) *
               C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C19667 +
            (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
               C92183 * C2709 -
           ((C22433 + C22434) * C19670 + (C22435 + C22436) * C19669 +
            (C22437 + C22438) * C19668 +
            ((C19671 * C1397 + C92067 * C1413) * C92084 +
             (C19671 * C1389 + C92067 * C1401) * C801) *
                C19667) *
               C92183 * C2710) *
              C1985 +
          (((C22438 + C22437) * C19667 + (C22436 + C22435) * C19668 +
            (C22434 + C22433) * C19669 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C19670) *
               C92183 * C2710 -
           ((C20161 + C20162) * C19670 + (C20160 + C20159) * C19669 +
            (C20158 + C20157) * C19668 + (C20156 + C20155) * C19667) *
               C92183 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2059 + (C5008 + C5007 + C5006) * C1985 -
            (C4911 + C4912 + C4913) * C2060 - (C5011 + C5010 + C5009) * C1986) *
               C92171) *
              C92183 * C92084 * C2709 +
          (((C8442 + C8441 + C8440) * C2060 -
            ((C4104 * C1469 + C4099 * C1477 + C4103 * C1470 + C4098 * C1478 +
              C4102 * C1471 + C4097 * C1479) *
                 C1985 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C2059) +
            (C8553 + C8554 + C8555) * C1986) *
               C92336 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C2060 -
            ((C8555 + C8554 + C8553) * C1985 +
             (C8440 + C8441 + C8442) * C2059) +
            (C4102 * C8540 + C4097 * C8543 + C4103 * C8541 + C4098 * C8544 +
             C4104 * C8542 + C4099 * C8545) *
                C1986) *
               C92171) *
              C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2059 +
            (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
            C20225 * C1986) *
               C19667 +
           (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 - C20226 * C1986) *
               C19668 +
           (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 - C20227 * C1986) *
               C19669 +
           (C20151 * C2059 + C20227 * C1985 - C20154 * C2060 - C20228 * C1986) *
               C19670) *
              C92183 * C92084 * C2709 +
          ((C22432 * C2060 -
            ((C19671 * C1471 + C92067 * C1479) * C1985 +
             (C19671 * C1389 + C92067 * C1401) * C2059) +
            C22513 * C1986) *
               C19667 +
           (C22430 * C2060 - (C22513 * C1985 + C22432 * C2059) +
            C22514 * C1986) *
               C19668 +
           (C22428 * C2060 - (C22514 * C1985 + C22430 * C2059) +
            C22515 * C1986) *
               C19669 +
           ((C19671 * C22410 + C92067 * C22411) * C2060 -
            (C22515 * C1985 + C22428 * C2059) +
            (C19671 * C22504 + C92067 * C22505) * C1986) *
               C19670) *
              C92183 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C2709 -
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4104 * C1538 + C4099 * C1546 + C4103 * C1539 + C4098 * C1547 +
             C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2849 + (C5104 + C5105 + C5106) * C2709 -
            (C8440 + C8441 + C8442) * C2850 - (C8666 + C8667 + C8668) * C2710) *
               C92171) *
              C92183 * C1985 +
          (((C8442 + C8441 + C8440) * C2850 -
            ((C5106 + C5105 + C5104) * C2709 +
             (C4904 + C4903 + C4902) * C2849) +
            (C8668 + C8667 + C8666) * C2710) *
               C92336 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C2850 -
            ((C5107 + C5108 + C5109) * C2709 +
             (C4911 + C4912 + C4913) * C2849) +
            (C4102 * C8653 + C4097 * C8656 + C4103 * C8654 + C4098 * C8657 +
             C4104 * C8655 + C4099 * C8658) *
                C2710) *
               C92171) *
              C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2849 +
            (C19671 * C245 + C92067 * C251) * C2709 -
            (C19671 * C1389 + C92067 * C1401) * C2850 -
            (C19671 * C1540 + C92067 * C1548) * C2710) *
               C19667 +
           (C22584 + C22585 - C22586 - C22602) * C19668 +
           (C22589 + C22590 - C22591 - C22603) * C19669 +
           (C22594 + C22595 - C22596 - C22604) * C19670) *
              C92183 * C1985 +
          ((C22586 - (C22585 + C22584) + C22602) * C19667 +
           (C22591 - (C22590 + C22589) + C22603) * C19668 +
           (C22596 - (C22595 + C22594) + C22604) * C19669 +
           ((C19671 * C22410 + C92067 * C22411) * C2850 -
            (C20296 * C2709 + C20154 * C2849) +
            (C19671 * C22581 + C92067 * C22582) * C2710) *
               C19670) *
              C92183 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C801 +
             (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                 C92084) *
                C92183 * C4097 +
            ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
                C4098 +
            (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
               C2709 -
           (((C7764 + C7763) * C92084 + (C7762 + C7761) * C801) * C92183 *
                C4099 +
            ((C7760 + C7759) * C92084 + (C7758 + C7757) * C801) * C92183 *
                C4098 +
            ((C4328 * C3439 + C92171 * C3665 + C4327 * C1397 + C92336 * C1614) *
                 C92084 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C801) *
                C92183 * C4097) *
               C2710) *
              C1985 +
          ((((C4327 * C3431 + C92336 * C3661 + C4328 * C8412 + C92171 * C8766) *
                 C801 +
             (C4327 * C3439 + C92336 * C3665 + C4328 * C8418 + C92171 * C8769) *
                 C92084) *
                C92183 * C4097 +
            ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                 C801 +
             (C4327 * C3440 + C92336 * C3666 + C4328 * C8419 + C92171 * C8770) *
                 C92084) *
                C92183 * C4098 +
            ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                 C801 +
             (C4327 * C3441 + C92336 * C3667 + C4328 * C8420 + C92171 * C8771) *
                 C92084) *
                C92183 * C4099) *
               C2710 -
           (((C6811 + C6810) * C92084 + (C6809 + C6808) * C801) * C92183 *
                C4099 +
            ((C6807 + C6806) * C92084 + (C6805 + C6804) * C801) * C92183 *
                C4098 +
            ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                 C92084 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C801) *
                C92183 * C4097) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
             C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
                C801 +
            (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
             C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
                C92084) *
               C92183 * C92067 * C2709 -
           ((C19825 * C18736 + C19670 * C19092 + C19824 * C8418 +
             C19669 * C8769 + C19823 * C3439 + C19668 * C3665 + C19822 * C1397 +
             C19667 * C1614) *
                C92084 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C801) *
               C92183 * C92067 * C2710) *
              C1985 +
          (((C19822 * C3431 + C19667 * C3661 + C19823 * C8412 + C19668 * C8766 +
             C19824 * C18732 + C19669 * C19090 + C19825 * C22410 +
             C19670 * C22670) *
                C801 +
            (C19822 * C3439 + C19667 * C3665 + C19823 * C8418 + C19668 * C8769 +
             C19824 * C18736 + C19669 * C19092 + C19825 * C22412 +
             C19670 * C22671) *
                C92084) *
               C92183 * C92067 * C2710 -
           ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
             C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
             C19667 * C1030) *
                C92084 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C801) *
               C92183 * C92067 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2059 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C1985 -
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C2060 -
            (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
                C1986) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2059 + (C4455 + C4456) * C1985 -
            (C6805 + C6804) * C2060 - (C6918 + C6919) * C1986) *
               C92183 * C4098 +
           (C4366 * C2059 + C4461 * C1985 - (C6809 + C6808) * C2060 -
            (C6920 + C6921) * C1986) *
               C92183 * C4099) *
              C92084 * C2709 +
          (((C4327 * C3431 + C92336 * C3661 + C4328 * C8412 + C92171 * C8766) *
                C2060 -
            ((C4328 * C3513 + C92171 * C3735 + C4327 * C1471 + C92336 * C1672) *
                 C1985 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C2059) +
            (C4327 * C3513 + C92336 * C3735 + C4328 * C8540 + C92171 * C8870) *
                C1986) *
               C92183 * C4097 +
           ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                C2060 -
            ((C7872 + C7871) * C1985 + (C7758 + C7757) * C2059) +
            (C4327 * C3514 + C92336 * C3736 + C4328 * C8541 + C92171 * C8871) *
                C1986) *
               C92183 * C4098 +
           ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                C2060 -
            ((C7874 + C7873) * C1985 + (C7762 + C7761) * C2059) +
            (C4327 * C3515 + C92336 * C3737 + C4328 * C8542 + C92171 * C8872) *
                C1986) *
               C92183 * C4099) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2059 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C1985 -
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C2060 -
           (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 +
            C19669 * C5263 + C19823 * C891 + C19668 * C1086 + C19822 * C890 +
            C19667 * C1085) *
               C1986) *
              C92183 * C92067 * C92084 * C2709 +
          ((C19822 * C3431 + C19667 * C3661 + C19823 * C8412 + C19668 * C8766 +
            C19824 * C18732 + C19669 * C19090 + C19825 * C22410 +
            C19670 * C22670) *
               C2060 -
           ((C19825 * C18862 + C19670 * C19192 + C19824 * C8540 +
             C19669 * C8870 + C19823 * C3513 + C19668 * C3735 + C19822 * C1471 +
             C19667 * C1672) *
                C1985 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C2059) +
           (C19822 * C3513 + C19667 * C3735 + C19823 * C8540 + C19668 * C8870 +
            C19824 * C18862 + C19669 * C19192 + C19825 * C22504 +
            C19670 * C22738) *
               C1986) *
              C92183 * C92067 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2849 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C2709 -
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C2850 -
            (C4328 * C3587 + C92171 * C3805 + C4327 * C1540 + C92336 * C1727) *
                C2710) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2849 + (C4552 + C4553) * C2709 -
            (C7758 + C7757) * C2850 - (C7981 + C7982) * C2710) *
               C92183 * C4098 +
           (C4366 * C2849 + C4558 * C2709 - (C7762 + C7761) * C2850 -
            (C7983 + C7984) * C2710) *
               C92183 * C4099) *
              C1985 +
          (((C4327 * C3431 + C92336 * C3661 + C4328 * C8412 + C92171 * C8766) *
                C2850 -
            ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                 C2709 +
             (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                 C2849) +
            (C4327 * C3587 + C92336 * C3805 + C4328 * C8653 + C92171 * C8971) *
                C2710) *
               C92183 * C4097 +
           ((C4327 * C3432 + C92336 * C3662 + C4328 * C8413 + C92171 * C8767) *
                C2850 -
            ((C7030 + C7031) * C2709 + (C6805 + C6804) * C2849) +
            (C4327 * C3588 + C92336 * C3806 + C4328 * C8654 + C92171 * C8972) *
                C2710) *
               C92183 * C4098 +
           ((C4327 * C3433 + C92336 * C3663 + C4328 * C8414 + C92171 * C8768) *
                C2850 -
            ((C7028 + C7029) * C2709 + (C6809 + C6808) * C2849) +
            (C4327 * C3589 + C92336 * C3807 + C4328 * C8655 + C92171 * C8973) *
                C2710) *
               C92183 * C4099) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2849 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C2709 -
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C2850 -
           (C19825 * C18976 + C19670 * C19292 + C19824 * C8653 +
            C19669 * C8971 + C19823 * C3587 + C19668 * C3805 + C19822 * C1540 +
            C19667 * C1727) *
               C2710) *
              C92183 * C92067 * C1985 +
          ((C19822 * C3431 + C19667 * C3661 + C19823 * C8412 + C19668 * C8766 +
            C19824 * C18732 + C19669 * C19090 + C19825 * C22410 +
            C19670 * C22670) *
               C2850 -
           ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
             C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
             C19667 * C1146) *
                C2709 +
            (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
             C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
             C19667 * C1022) *
                C2849) +
           (C19822 * C3587 + C19667 * C3805 + C19823 * C8653 + C19668 * C8971 +
            C19824 * C18976 + C19669 * C19292 + C19825 * C22581 +
            C19670 * C22805) *
               C2710) *
              C92183 * C92067 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92183 * C555) * C801 +
                        (C554 * C117 + C92183 * C561) * C92084) *
                           C4097 +
                       (C584 * C801 + C585 * C92084) * C4098 +
                       (C586 * C801 + C587 * C92084) * C4099) *
                          C92336 +
                      ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                       (C5430 + C5431) * C4099) *
                          C92171) *
                         C2709 -
                     (((C9079 + C9080) * C4099 + (C9081 + C9082) * C4098 +
                       (C9089 + C9090) * C4097) *
                          C92171 +
                      ((C3193 * C92084 + C3192 * C801) * C4099 +
                       (C3191 * C92084 + C3190 * C801) * C4098 +
                       ((C554 * C1397 + C92183 * C1796) * C92084 +
                        (C554 * C1389 + C92183 * C1788) * C801) *
                           C4097) *
                          C92336) *
                         C2710) *
                        C1985 +
                    ((((C9090 + C9089) * C4097 + (C9082 + C9081) * C4098 +
                       (C9080 + C9079) * C4099) *
                          C92336 +
                      (((C554 * C8412 + C92183 * C9072) * C801 +
                        (C554 * C8418 + C92183 * C9075) * C92084) *
                           C4097 +
                       ((C554 * C8413 + C92183 * C9073) * C801 +
                        (C554 * C8419 + C92183 * C9076) * C92084) *
                           C4098 +
                       ((C554 * C8414 + C92183 * C9074) * C801 +
                        (C554 * C8420 + C92183 * C9077) * C92084) *
                           C4099) *
                          C92171) *
                         C2710 -
                     (((C5454 + C5455) * C4099 + (C5456 + C5457) * C4098 +
                       (C5458 + C5459) * C4097) *
                          C92171 +
                      ((C5431 + C5430) * C4099 + (C5429 + C5428) * C4098 +
                       (C5453 + C5452) * C4097) *
                          C92336) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C92067 * C19667 +
                      (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                      C20515 * C19670) *
                         C2709 -
                     ((C22881 + C22882) * C92067 * C19670 +
                      (C19405 + C19406) * C92067 * C19669 +
                      (C9089 + C9090) * C92067 * C19668 +
                      ((C554 * C1397 + C92183 * C1796) * C92084 +
                       (C554 * C1389 + C92183 * C1788) * C801) *
                          C92067 * C19667) *
                         C2710) *
                        C1985 +
                    (((C9090 + C9089) * C92067 * C19667 +
                      (C19406 + C19405) * C92067 * C19668 +
                      (C22882 + C22881) * C92067 * C19669 +
                      ((C554 * C22410 + C92183 * C22872) * C801 +
                       (C554 * C22412 + C92183 * C22873) * C92084) *
                          C92067 * C19670) *
                         C2710 -
                     ((C20518 + C20519) * C92067 * C19670 +
                      (C15847 + C15848) * C92067 * C19669 +
                      (C5458 + C5459) * C92067 * C19668 +
                      (C5453 + C5452) * C92067 * C19667) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C2059 +
             (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
             C5545 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C4098 +
            (C2546 + C2547 - C2548 - C2560) * C4099) *
               C92336 +
           ((C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
                C4097 +
            (C7240 + C7241 - C7242 - C7243) * C4098 +
            (C7244 + C7245 - C7246 - C7247) * C4099) *
               C92171) *
              C92084 * C2709 +
          (((C9088 * C2060 -
             ((C554 * C1471 + C92183 * C1854) * C1985 +
              (C554 * C1389 + C92183 * C1788) * C2059) +
             C9194 * C1986) *
                C4097 +
            (C8091 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8199 * C1986) *
                C4098 +
            (C8093 * C2060 - (C3273 * C1985 + C3192 * C2059) + C8200 * C1986) *
                C4099) *
               C92336 +
           (((C554 * C8412 + C92183 * C9072) * C2060 -
             (C9194 * C1985 + C9088 * C2059) +
             (C554 * C8540 + C92183 * C9188) * C1986) *
                C4097 +
            ((C554 * C8413 + C92183 * C9073) * C2060 -
             (C8199 * C1985 + C8091 * C2059) +
             (C554 * C8541 + C92183 * C9189) * C1986) *
                C4098 +
            ((C554 * C8414 + C92183 * C9074) * C2060 -
             (C8200 * C1985 + C8093 * C2059) +
             (C554 * C8542 + C92183 * C9190) * C1986) *
                C4099) *
               C92171) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C2059 +
            (C554 * C182 + C92183 * C641) * C1985 - C5444 * C2060 -
            C5545 * C1986) *
               C92067 * C19667 +
           (C5444 * C2059 + C5545 * C1985 - C5451 * C2060 - C5546 * C1986) *
               C92067 * C19668 +
           (C5451 * C2059 + C5546 * C1985 - C15843 * C2060 - C15929 * C1986) *
               C92067 * C19669 +
           (C15843 * C2059 + C15929 * C1985 - C20517 * C2060 - C20573 * C1986) *
               C92067 * C19670) *
              C92084 * C2709 +
          ((C9088 * C2060 -
            ((C554 * C1471 + C92183 * C1854) * C1985 +
             (C554 * C1389 + C92183 * C1788) * C2059) +
            C9194 * C1986) *
               C92067 * C19667 +
           (C19404 * C2060 - (C9194 * C1985 + C9088 * C2059) + C19509 * C1986) *
               C92067 * C19668 +
           (C22880 * C2060 - (C19509 * C1985 + C19404 * C2059) +
            C22952 * C1986) *
               C92067 * C19669 +
           ((C554 * C22410 + C92183 * C22872) * C2060 -
            (C22952 * C1985 + C22880 * C2059) +
            (C554 * C22504 + C92183 * C22948) * C1986) *
               C92067 * C19670) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C4098 +
                      (C3350 + C3351 - C3352 - C3364) * C4099) *
                         C92336 +
                     ((C9296 + C9297 - C9298 - C9302) * C4097 +
                      (C8301 + C8302 - C8303 - C8313) * C4098 +
                      (C8306 + C8307 - C8308 - C8314) * C4099) *
                         C92171) *
                        C1985 +
                    (((C9298 - (C9297 + C9296) + C9302) * C4097 +
                      (C8303 - (C8302 + C8301) + C8313) * C4098 +
                      (C8308 - (C8307 + C8306) + C8314) * C4099) *
                         C92336 +
                     (((C554 * C8412 + C92183 * C9072) * C2850 -
                       (C5641 * C2709 + C5451 * C2849) +
                       (C554 * C8653 + C92183 * C9292) * C2710) *
                          C4097 +
                      ((C554 * C8413 + C92183 * C9073) * C2850 -
                       (C5640 * C2709 + C5449 * C2849) +
                       (C554 * C8654 + C92183 * C9293) * C2710) *
                          C4098 +
                      ((C554 * C8414 + C92183 * C9074) * C2850 -
                       (C5639 * C2709 + C5447 * C2849) +
                       (C554 * C8655 + C92183 * C9294) * C2710) *
                          C4099) *
                         C92171) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C92067 * C19667 +
                     (C9296 + C9297 - C9298 - C9302) * C92067 * C19668 +
                     (C19610 + C19611 - C19612 - C19616) * C92067 * C19669 +
                     (C23020 + C23021 - C23022 - C23026) * C92067 * C19670) *
                        C1985 +
                    ((C9298 - (C9297 + C9296) + C9302) * C92067 * C19667 +
                     (C19612 - (C19611 + C19610) + C19616) * C92067 * C19668 +
                     (C23022 - (C23021 + C23020) + C23026) * C92067 * C19669 +
                     ((C554 * C22410 + C92183 * C22872) * C2850 -
                      (C20631 * C2709 + C20517 * C2849) +
                      (C554 * C22581 + C92183 * C23018) * C2710) *
                         C92067 * C19670) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eexx[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92336 +
           ((C4902 + C4903 + C4904) * C801 + (C4905 + C4906 + C4907) * C92084) *
               C92171) *
              C92183 * C92116 * C798 -
          (((C4908 + C4909 + C4910) * C92084 + (C4911 + C4912 + C4913) * C801) *
               C92171 +
           ((C4907 + C4906 + C4905) * C92084 + (C4904 + C4903 + C4902) * C801) *
               C92336) *
              C92183 * C92116 * C799 +
          (((C4913 + C4912 + C4911) * C801 + (C4910 + C4909 + C4908) * C92084) *
               C92336 +
           ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
             C4104 * C4867 + C4099 * C4870) *
                C801 +
            (C4102 * C4871 + C4097 * C4874 + C4103 * C4872 + C4098 * C4875 +
             C4104 * C4873 + C4099 * C4876) *
                C92084) *
               C92171) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
            C4104 * C119 + C4099 * C127) *
               C93 -
           (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
            C4102 * C108 + C4097 * C114) *
               C105 -
           (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
            C4102 * C118 + C4097 * C126) *
               C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
            C4104 * C111 + C4099 * C121) *
               C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
            C4104 * C122 + C4099 * C129) *
               C95) *
              C92336 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
            C4104 * C803 + C4099 * C815) *
               C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C4098 * C828 +
            C4104 * C811 + C4099 * C827) *
               C93 -
           (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
            C4102 * C804 + C4097 * C816) *
               C105 -
           (C4104 * C810 + C4099 * C826 + C4103 * C811 + C4098 * C827 +
            C4102 * C812 + C4097 * C828) *
               C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
            C4104 * C1989 + C4099 * C1990) *
               C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C4098 * C826 +
            C4104 * C1991 + C4099 * C1992) *
               C95) *
              C92171) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92336 +
           ((C4902 + C4903 + C4904) * C801 + (C4905 + C4906 + C4907) * C92084) *
               C92171) *
              C92183 * C1383 -
          (((C4104 * C3441 + C4099 * C3445 + C4103 * C3440 + C4098 * C3444 +
             C4102 * C3439 + C4097 * C3443) *
                C92084 +
            (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
             C4102 * C3431 + C4097 * C3435) *
                C801) *
               C92171 +
           ((C4104 * C1395 + C4099 * C1411 + C4103 * C1396 + C4098 * C1412 +
             C4102 * C1397 + C4097 * C1413) *
                C92084 +
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C801) *
               C92336) *
              C92183 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C4098 * C1403 +
             C4104 * C1392 + C4099 * C1404) *
                C801 +
            (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C4098 * C1415 +
             C4104 * C1408 + C4099 * C1416) *
                C92084) *
               C92336 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C801 +
            (C4102 * C5725 + C4097 * C5728 + C4103 * C5726 + C4098 * C5729 +
             C4104 * C5727 + C4099 * C5730) *
                C92084) *
               C92171) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C104 +
           (C19671 * C117 + C92067 * C125) * C93 -
           (C19671 * C108 + C92067 * C114) * C105 -
           (C19671 * C118 + C92067 * C126) * C94 +
           (C19671 * C109 + C92067 * C115) * C106 +
           (C19671 * C119 + C92067 * C127) * C95) *
              C19667 +
          ((C19671 * C805 + C92067 * C817) * C104 +
           (C19671 * C813 + C92067 * C829) * C93 -
           (C19671 * C804 + C92067 * C816) * C105 -
           (C19671 * C812 + C92067 * C828) * C94 +
           (C19671 * C803 + C92067 * C815) * C106 +
           (C19671 * C811 + C92067 * C827) * C95) *
              C19668 +
          ((C19671 * C806 + C92067 * C818) * C104 +
           (C19671 * C822 + C92067 * C830) * C93 -
           (C19671 * C807 + C92067 * C819) * C105 -
           (C19671 * C823 + C92067 * C831) * C94 +
           (C19671 * C808 + C92067 * C820) * C106 +
           (C19671 * C824 + C92067 * C832) * C95) *
              C19669 +
          ((C19671 * C4865 + C92067 * C4868) * C104 +
           (C19671 * C4871 + C92067 * C4874) * C93 -
           (C19671 * C4866 + C92067 * C4869) * C105 -
           (C19671 * C4872 + C92067 * C4875) * C94 +
           (C19671 * C4867 + C92067 * C4870) * C106 +
           (C19671 * C4873 + C92067 * C4876) * C95) *
              C19670) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C19667 +
           (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
              C92183 * C92116 * C798 -
          ((C20161 + C20162) * C19670 + (C20160 + C20159) * C19669 +
           (C20158 + C20157) * C19668 + (C20156 + C20155) * C19667) *
              C92183 * C92116 * C799 +
          (C20163 * C19667 + C20164 * C19668 + (C20162 + C20161) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C801 +
            (C19671 * C20128 + C92067 * C20129) * C92084) *
               C19670) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C19667 +
           (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
              C92183 * C1383 -
          (((C19671 * C18736 + C92067 * C18738) * C92084 +
            (C19671 * C18732 + C92067 * C18734) * C801) *
               C19670 +
           ((C19671 * C8418 + C92067 * C8421) * C92084 +
            (C19671 * C8412 + C92067 * C8415) * C801) *
               C19669 +
           ((C19671 * C3439 + C92067 * C3443) * C92084 +
            (C19671 * C3431 + C92067 * C3435) * C801) *
               C19668 +
           ((C19671 * C1397 + C92067 * C1413) * C92084 +
            (C19671 * C1389 + C92067 * C1401) * C801) *
               C19667) *
              C92183 * C1384 +
          (((C19671 * C1390 + C92067 * C1402) * C801 +
            (C19671 * C1406 + C92067 * C1414) * C92084) *
               C19667 +
           ((C19671 * C5719 + C92067 * C5722) * C801 +
            (C19671 * C5725 + C92067 * C5728) * C92084) *
               C19668 +
           ((C19671 * C16095 + C92067 * C16097) * C801 +
            (C19671 * C16099 + C92067 * C16101) * C92084) *
               C19669 +
           ((C19671 * C20682 + C92067 * C20683) * C801 +
            (C19671 * C20684 + C92067 * C20685) * C92084) *
               C19670) *
              C92183 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
            C4104 * C184 + C4099 * C190) *
               C798 -
           (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
           (C4913 + C4912 + C4911) * C886 + (C5009 + C5010 + C5011) * C800) *
              C92336 +
          ((C4902 + C4903 + C4904) * C884 + (C5008 + C5007 + C5006) * C798 -
           (C4911 + C4912 + C4913) * C885 - (C5011 + C5010 + C5009) * C799 +
           (C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
            C4104 * C4867 + C4099 * C4870) *
               C886 +
           (C4102 * C4987 + C4097 * C4990 + C4103 * C4988 + C4098 * C4991 +
            C4104 * C4989 + C4099 * C4992) *
               C800) *
              C92171) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92336 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
             C4104 * C803 + C4099 * C815) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C4098 * C897 +
             C4104 * C888 + C4099 * C896) *
                C92105) *
               C92171) *
              C92183 * C93 -
          (((C4104 * C887 + C4099 * C895 + C4103 * C888 + C4098 * C896 +
             C4102 * C889 + C4097 * C897) *
                C92105 +
            (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
             C4102 * C804 + C4097 * C816) *
                C181) *
               C92171 +
           ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
             C4102 * C183 + C4097 * C189) *
                C92105 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C181) *
               C92336) *
              C92183 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
             C4104 * C186 + C4099 * C192) *
                C92105) *
               C92336 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
             C4104 * C1989 + C4099 * C1990) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C4098 * C895 +
             C4104 * C2061 + C4099 * C2062) *
                C92105) *
               C92171) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92336 +
           ((C4902 + C4903 + C4904) * C181 + (C5008 + C5007 + C5006) * C92105) *
               C92171) *
              C92183 * C92084 * C1383 -
          (((C4104 * C3515 + C4099 * C3519 + C4103 * C3514 + C4098 * C3518 +
             C4102 * C3513 + C4097 * C3517) *
                C92105 +
            (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
             C4102 * C3431 + C4097 * C3435) *
                C181) *
               C92171 +
           ((C4104 * C1469 + C4099 * C1477 + C4103 * C1470 + C4098 * C1478 +
             C4102 * C1471 + C4097 * C1479) *
                C92105 +
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C181) *
               C92336) *
              C92183 * C92084 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C4098 * C1403 +
             C4104 * C1392 + C4099 * C1404) *
                C181 +
            (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C4098 * C1481 +
             C4104 * C1474 + C4099 * C1482) *
                C92105) *
               C92336 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C181 +
            (C4102 * C5805 + C4097 * C5808 + C4103 * C5806 + C4098 * C5809 +
             C4104 * C5807 + C4099 * C5810) *
                C92105) *
               C92171) *
              C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C181 +
            (C19671 * C890 + C92067 * C898) * C92105) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C181 +
            (C19671 * C891 + C92067 * C899) * C92105) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C181 +
            (C19671 * C4987 + C92067 * C4990) * C92105) *
               C19670) *
              C92183 * C93 -
          (((C19671 * C4988 + C92067 * C4991) * C92105 +
            (C19671 * C4866 + C92067 * C4869) * C181) *
               C19670 +
           ((C19671 * C892 + C92067 * C900) * C92105 +
            (C19671 * C807 + C92067 * C819) * C181) *
               C19669 +
           ((C19671 * C889 + C92067 * C897) * C92105 +
            (C19671 * C804 + C92067 * C816) * C181) *
               C19668 +
           ((C19671 * C183 + C92067 * C189) * C92105 +
            (C19671 * C108 + C92067 * C114) * C181) *
               C19667) *
              C92183 * C94 +
          (((C19671 * C109 + C92067 * C115) * C181 +
            (C19671 * C184 + C92067 * C190) * C92105) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C181 +
            (C19671 * C888 + C92067 * C896) * C92105) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C181 +
            (C19671 * C893 + C92067 * C901) * C92105) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C181 +
            (C19671 * C4989 + C92067 * C4992) * C92105) *
               C19670) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C884 +
           (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
           C20225 * C799 + C20149 * C886 + C20226 * C800) *
              C19667 +
          (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
           C20151 * C886 + C20227 * C800) *
              C19668 +
          (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
           C20154 * C886 + C20228 * C800) *
              C19669 +
          (C20151 * C884 + C20227 * C798 - C20154 * C885 - C20228 * C799 +
           (C19671 * C20126 + C92067 * C20127) * C886 +
           (C19671 * C20214 + C92067 * C20215) * C800) *
              C19670) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C19667 +
           (C20147 * C181 + C20225 * C92105) * C19668 +
           (C20149 * C181 + C20226 * C92105) * C19669 +
           (C20151 * C181 + C20227 * C92105) * C19670) *
              C92183 * C92084 * C1383 -
          (((C19671 * C18862 + C92067 * C18864) * C92105 +
            (C19671 * C18732 + C92067 * C18734) * C181) *
               C19670 +
           ((C19671 * C8540 + C92067 * C8543) * C92105 +
            (C19671 * C8412 + C92067 * C8415) * C181) *
               C19669 +
           ((C19671 * C3513 + C92067 * C3517) * C92105 +
            (C19671 * C3431 + C92067 * C3435) * C181) *
               C19668 +
           ((C19671 * C1471 + C92067 * C1479) * C92105 +
            (C19671 * C1389 + C92067 * C1401) * C181) *
               C19667) *
              C92183 * C92084 * C1384 +
          (((C19671 * C1390 + C92067 * C1402) * C181 +
            (C19671 * C1472 + C92067 * C1480) * C92105) *
               C19667 +
           ((C19671 * C5719 + C92067 * C5722) * C181 +
            (C19671 * C5805 + C92067 * C5808) * C92105) *
               C19668 +
           ((C19671 * C16095 + C92067 * C16097) * C181 +
            (C19671 * C16177 + C92067 * C16179) * C92105) *
               C19669 +
           ((C19671 * C20682 + C92067 * C20683) * C181 +
            (C19671 * C20736 + C92067 * C20737) * C92105) *
               C19670) *
              C92183 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92336 +
           ((C4902 + C4903 + C4904) * C244 + (C5104 + C5105 + C5106) * C92116) *
               C92171) *
              C92183 * C798 -
          (((C5107 + C5108 + C5109) * C92116 + (C4911 + C4912 + C4913) * C244) *
               C92171 +
           ((C5106 + C5105 + C5104) * C92116 + (C4904 + C4903 + C4902) * C244) *
               C92336) *
              C92183 * C799 +
          (((C4913 + C4912 + C4911) * C244 + (C5109 + C5108 + C5107) * C92116) *
               C92336 +
           ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
             C4104 * C4867 + C4099 * C4870) *
                C244 +
            (C4102 * C5085 + C4097 * C5088 + C4103 * C5086 + C4098 * C5089 +
             C4104 * C5087 + C4099 * C5090) *
                C92116) *
               C92171) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92336 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
             C4104 * C803 + C4099 * C815) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C4098 * C963 +
             C4104 * C954 + C4099 * C962) *
                C92116) *
               C92171) *
              C92183 * C92105 * C93 -
          (((C4104 * C953 + C4099 * C961 + C4103 * C954 + C4098 * C962 +
             C4102 * C955 + C4097 * C963) *
                C92116 +
            (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
             C4102 * C804 + C4097 * C816) *
                C244) *
               C92171 +
           ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
             C4102 * C246 + C4097 * C252) *
                C92116 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C244) *
               C92336) *
              C92183 * C92105 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
             C4104 * C249 + C4099 * C255) *
                C92116) *
               C92336 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
             C4104 * C1989 + C4099 * C1990) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C4098 * C961 +
             C4104 * C2129 + C4099 * C2130) *
                C92116) *
               C92171) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
            C4104 * C247 + C4099 * C253) *
               C1383 -
           (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
            C4102 * C1389 + C4097 * C1401) *
               C1535 -
           (C4104 * C1538 + C4099 * C1546 + C4103 * C1539 + C4098 * C1547 +
            C4102 * C1540 + C4097 * C1548) *
               C1384 +
           (C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C4098 * C1403 +
            C4104 * C1392 + C4099 * C1404) *
               C1536 +
           (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C4098 * C1550 +
            C4104 * C1543 + C4099 * C1551) *
               C1385) *
              C92336 +
          ((C4902 + C4903 + C4904) * C1534 + (C5104 + C5105 + C5106) * C1383 -
           (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
            C4102 * C3431 + C4097 * C3435) *
               C1535 -
           (C4104 * C3589 + C4099 * C3593 + C4103 * C3588 + C4098 * C3592 +
            C4102 * C3587 + C4097 * C3591) *
               C1384 +
           (C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
            C4104 * C5721 + C4099 * C5724) *
               C1536 +
           (C4102 * C5885 + C4097 * C5888 + C4103 * C5886 + C4098 * C5889 +
            C4104 * C5887 + C4099 * C5890) *
               C1385) *
              C92171) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C244 +
            (C19671 * C956 + C92067 * C964) * C92116) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C244 +
            (C19671 * C957 + C92067 * C965) * C92116) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C244 +
            (C19671 * C5085 + C92067 * C5088) * C92116) *
               C19670) *
              C92183 * C92105 * C93 -
          (((C19671 * C5086 + C92067 * C5089) * C92116 +
            (C19671 * C4866 + C92067 * C4869) * C244) *
               C19670 +
           ((C19671 * C958 + C92067 * C966) * C92116 +
            (C19671 * C807 + C92067 * C819) * C244) *
               C19669 +
           ((C19671 * C955 + C92067 * C963) * C92116 +
            (C19671 * C804 + C92067 * C816) * C244) *
               C19668 +
           ((C19671 * C246 + C92067 * C252) * C92116 +
            (C19671 * C108 + C92067 * C114) * C244) *
               C19667) *
              C92183 * C92105 * C94 +
          (((C19671 * C109 + C92067 * C115) * C244 +
            (C19671 * C247 + C92067 * C253) * C92116) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C244 +
            (C19671 * C954 + C92067 * C962) * C92116) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C244 +
            (C19671 * C959 + C92067 * C967) * C92116) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C244 +
            (C19671 * C5087 + C92067 * C5090) * C92116) *
               C19670) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           (C20281 + C20297) * C19668 + C20301 * C19669 + C20302 * C19670) *
              C92183 * C798 -
          ((C20300 + C20292) * C19670 + (C20299 + C20287) * C19669 +
           (C20298 + C20284) * C19668 + (C20297 + C20281) * C19667) *
              C92183 * C799 +
          (C20301 * C19667 + C20302 * C19668 + (C20292 + C20300) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C244 +
            (C19671 * C20278 + C92067 * C20279) * C92116) *
               C19670) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C1534 +
           (C19671 * C245 + C92067 * C251) * C1383 -
           (C19671 * C1389 + C92067 * C1401) * C1535 -
           (C19671 * C1540 + C92067 * C1548) * C1384 +
           (C19671 * C1390 + C92067 * C1402) * C1536 +
           (C19671 * C1541 + C92067 * C1549) * C1385) *
              C19667 +
          (C20147 * C1534 + C20293 * C1383 -
           (C19671 * C3431 + C92067 * C3435) * C1535 -
           (C19671 * C3587 + C92067 * C3591) * C1384 +
           (C19671 * C5719 + C92067 * C5722) * C1536 +
           (C19671 * C5885 + C92067 * C5888) * C1385) *
              C19668 +
          (C20149 * C1534 + C20294 * C1383 -
           (C19671 * C8412 + C92067 * C8415) * C1535 -
           (C19671 * C8653 + C92067 * C8656) * C1384 +
           (C19671 * C16095 + C92067 * C16097) * C1536 +
           (C19671 * C16255 + C92067 * C16257) * C1385) *
              C19669 +
          (C20151 * C1534 + C20295 * C1383 -
           (C19671 * C18732 + C92067 * C18734) * C1535 -
           (C19671 * C18976 + C92067 * C18978) * C1384 +
           (C19671 * C20682 + C92067 * C20683) * C1536 +
           (C19671 * C20788 + C92067 * C20789) * C1385) *
              C19670) *
         C92183 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C4097 +
           ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
               C4098 +
           (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
              C92116 * C798 -
          (((C4328 * C824 + C92171 * C1033 + C4327 * C811 + C92336 * C1028) *
                C92084 +
            (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                C801) *
               C92183 * C4099 +
           ((C4328 * C823 + C92171 * C1032 + C4327 * C812 + C92336 * C1029) *
                C92084 +
            (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                C801) *
               C92183 * C4098 +
           ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                C92084 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C801) *
               C92183 * C4097) *
              C92116 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C801 +
            (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                C92084) *
               C92183 * C4097 +
           ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C801 +
            (C4327 * C823 + C92336 * C1032 + C4328 * C4872 + C92171 * C5187) *
                C92084) *
               C92183 * C4098 +
           ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
                C801 +
            (C4327 * C824 + C92336 * C1033 + C4328 * C4873 + C92171 * C5188) *
                C92084) *
               C92183 * C4099) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C104 +
           (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
               C93 -
           (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
           C4367 * C95) *
              C92183 * C4097 +
          ((C4355 + C4354) * C104 + (C4357 + C4356) * C93 -
           (C4359 + C4358) * C105 - (C4361 + C4360) * C94 +
           (C4362 + C4363) * C106 + (C4364 + C4365) * C95) *
              C92183 * C4098 +
          (C4366 * C104 + C4367 * C93 - (C4363 + C4362) * C105 -
           (C4365 + C4364) * C94 +
           (C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
               C106 +
           (C4327 * C122 + C92336 * C318 + C4328 * C1991 + C92171 * C2198) *
               C95) *
              C92183 * C4099) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C4097 +
           ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
               C4098 +
           (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
              C1383 -
          (((C4328 * C3441 + C92171 * C3667 + C4327 * C1395 + C92336 * C1612) *
                C92084 +
            (C4328 * C3433 + C92171 * C3663 + C4327 * C1387 + C92336 * C1604) *
                C801) *
               C92183 * C4099 +
           ((C4328 * C3440 + C92171 * C3666 + C4327 * C1396 + C92336 * C1613) *
                C92084 +
            (C4328 * C3432 + C92171 * C3662 + C4327 * C1388 + C92336 * C1605) *
                C801) *
               C92183 * C4098 +
           ((C4328 * C3439 + C92171 * C3665 + C4327 * C1397 + C92336 * C1614) *
                C92084 +
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C801) *
               C92183 * C4097) *
              C1384 +
          (((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C801 +
            (C4327 * C1406 + C92336 * C1615 + C4328 * C5725 + C92171 * C5968) *
                C92084) *
               C92183 * C4097 +
           ((C4327 * C1391 + C92336 * C1608 + C4328 * C5720 + C92171 * C5966) *
                C801 +
            (C4327 * C1407 + C92336 * C1616 + C4328 * C5726 + C92171 * C5969) *
                C92084) *
               C92183 * C4098 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C801 +
            (C4327 * C1408 + C92336 * C1617 + C4328 * C5727 + C92171 * C5970) *
                C92084) *
               C92183 * C4099) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C104 +
          (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
           C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
              C93 -
          (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
           C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
              C105 -
          (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
           C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
              C94 +
          (C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
           C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
              C106 +
          (C19822 * C119 + C19667 * C316 + C19823 * C811 + C19668 * C1028 +
           C19824 * C824 + C19669 * C1033 + C19825 * C4873 + C19670 * C5188) *
              C95) *
         C92183 * C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C801 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C92084) *
              C92183 * C92067 * C92116 * C798 -
          ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
            C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
            C19667 * C1030) *
               C92084 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C801) *
              C92183 * C92067 * C92116 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C801 +
           (C19822 * C822 + C19667 * C1031 + C19823 * C4871 + C19668 * C5186 +
            C19824 * C15277 + C19669 * C15595 + C19825 * C20128 +
            C19670 * C20353) *
               C92084) *
              C92183 * C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C801 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C92084) *
              C92183 * C92067 * C1383 -
          ((C19825 * C18736 + C19670 * C19092 + C19824 * C8418 +
            C19669 * C8769 + C19823 * C3439 + C19668 * C3665 + C19822 * C1397 +
            C19667 * C1614) *
               C92084 +
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C801) *
              C92183 * C92067 * C1384 +
          ((C19822 * C1390 + C19667 * C1607 + C19823 * C5719 + C19668 * C5965 +
            C19824 * C16095 + C19669 * C16333 + C19825 * C20682 +
            C19670 * C20840) *
               C801 +
           (C19822 * C1406 + C19667 * C1615 + C19823 * C5725 + C19668 * C5968 +
            C19824 * C16099 + C19669 * C16335 + C19825 * C20684 +
            C19670 * C20841) *
               C92084) *
              C92183 * C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C884 +
           (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
               C798 -
           (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
               C885 -
           (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
               C799 +
           (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
               C886 +
           (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
               C800) *
              C92183 * C4097 +
          ((C4355 + C4354) * C884 + (C4455 + C4456) * C798 -
           (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
               C885 -
           (C4328 * C892 + C92171 * C1088 + C4327 * C889 + C92336 * C1087) *
               C799 +
           (C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
               C886 +
           (C4327 * C892 + C92336 * C1088 + C4328 * C4988 + C92171 * C5264) *
               C800) *
              C92183 * C4098 +
          (C4366 * C884 + C4461 * C798 -
           (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
               C885 -
           (C4328 * C893 + C92171 * C1090 + C4327 * C888 + C92336 * C1089) *
               C799 +
           (C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
               C886 +
           (C4327 * C893 + C92336 * C1090 + C4328 * C4989 + C92171 * C5265) *
               C800) *
              C92183 * C4099) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C4097 +
           ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
               C4098 +
           C4464 * C4099) *
              C93 -
          (((C4459 + C4460) * C92105 + (C4363 + C4362) * C181) * C92183 *
               C4099 +
           ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C92183 *
               C4098 +
           ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C92183 *
               C4097) *
              C94 +
          (C4464 * C4097 +
           ((C4362 + C4363) * C181 + (C4460 + C4459) * C92105) * C92183 *
               C4098 +
           ((C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                C181 +
            (C4327 * C186 + C92336 * C398 + C4328 * C2061 + C92171 * C2283) *
                C92105) *
               C92183 * C4099) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C4097 +
           ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
               C4098 +
           C4464 * C4099) *
              C92084 * C1383 -
          (((C4328 * C3515 + C92171 * C3737 + C4327 * C1469 + C92336 * C1670) *
                C92105 +
            (C4328 * C3433 + C92171 * C3663 + C4327 * C1387 + C92336 * C1604) *
                C181) *
               C92183 * C4099 +
           ((C4328 * C3514 + C92171 * C3736 + C4327 * C1470 + C92336 * C1671) *
                C92105 +
            (C4328 * C3432 + C92171 * C3662 + C4327 * C1388 + C92336 * C1605) *
                C181) *
               C92183 * C4098 +
           ((C4328 * C3513 + C92171 * C3735 + C4327 * C1471 + C92336 * C1672) *
                C92105 +
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C181) *
               C92183 * C4097) *
              C92084 * C1384 +
          (((C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
                C181 +
            (C4327 * C1472 + C92336 * C1673 + C4328 * C5805 + C92171 * C6045) *
                C92105) *
               C92183 * C4097 +
           ((C4327 * C1391 + C92336 * C1608 + C4328 * C5720 + C92171 * C5966) *
                C181 +
            (C4327 * C1473 + C92336 * C1674 + C4328 * C5806 + C92171 * C6046) *
                C92105) *
               C92183 * C4098 +
           ((C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
                C181 +
            (C4327 * C1474 + C92336 * C1675 + C4328 * C5807 + C92171 * C6047) *
                C92105) *
               C92183 * C4099) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C181 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C92105) *
              C92183 * C92067 * C93 -
          ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
            C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
               C92105 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C181) *
              C92183 * C92067 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C181 +
           (C19822 * C184 + C19667 * C396 + C19823 * C888 + C19668 * C1089 +
            C19824 * C893 + C19669 * C1090 + C19825 * C4989 + C19670 * C5265) *
               C92105) *
              C92183 * C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C884 +
          (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
           C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
              C798 -
          (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 + C19669 * C5183 +
           C19823 * C806 + C19668 * C1023 + C19822 * C805 + C19667 * C1022) *
              C885 -
          (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 + C19669 * C5263 +
           C19823 * C891 + C19668 * C1086 + C19822 * C890 + C19667 * C1085) *
              C799 +
          (C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
           C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
           C19670 * C20352) *
              C886 +
          (C19822 * C891 + C19667 * C1086 + C19823 * C4987 + C19668 * C5263 +
           C19824 * C15396 + C19669 * C15671 + C19825 * C20214 +
           C19670 * C20404) *
              C800) *
         C92183 * C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C181 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C92105) *
              C92183 * C92067 * C92084 * C1383 -
          ((C19825 * C18862 + C19670 * C19192 + C19824 * C8540 +
            C19669 * C8870 + C19823 * C3513 + C19668 * C3735 + C19822 * C1471 +
            C19667 * C1672) *
               C92105 +
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C181) *
              C92183 * C92067 * C92084 * C1384 +
          ((C19822 * C1390 + C19667 * C1607 + C19823 * C5719 + C19668 * C5965 +
            C19824 * C16095 + C19669 * C16333 + C19825 * C20682 +
            C19670 * C20840) *
               C181 +
           (C19822 * C1472 + C19667 * C1673 + C19823 * C5805 + C19668 * C6045 +
            C19824 * C16177 + C19669 * C16411 + C19825 * C20736 +
            C19670 * C20892) *
               C92105) *
              C92183 * C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C4097 +
           ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
               C4098 +
           C4561 * C4099) *
              C798 -
          (((C4328 * C959 + C92171 * C1149 + C4327 * C954 + C92336 * C1144) *
                C92116 +
            (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                C244) *
               C92183 * C4099 +
           ((C4328 * C958 + C92171 * C1148 + C4327 * C955 + C92336 * C1145) *
                C92116 +
            (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                C244) *
               C92183 * C4098 +
           ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                C92116 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C244) *
               C92183 * C4097) *
              C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C244 +
            (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                C92116) *
               C92183 * C4097 +
           ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C244 +
            (C4327 * C958 + C92336 * C1148 + C4328 * C5086 + C92171 * C5341) *
                C92116) *
               C92183 * C4098 +
           ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
                C244 +
            (C4327 * C959 + C92336 * C1149 + C4328 * C5087 + C92171 * C5342) *
                C92116) *
               C92183 * C4099) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C4097 +
           ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
               C4098 +
           C4561 * C4099) *
              C92105 * C93 -
          (((C4556 + C4557) * C92116 + (C4363 + C4362) * C244) * C92183 *
               C4099 +
           ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C92183 *
               C4098 +
           ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C92183 *
               C4097) *
              C92105 * C94 +
          (C4561 * C4097 +
           ((C4362 + C4363) * C244 + (C4557 + C4556) * C92116) * C92183 *
               C4098 +
           ((C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                C244 +
            (C4327 * C249 + C92336 * C478 + C4328 * C2129 + C92171 * C2371) *
                C92116) *
               C92183 * C4099) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C1534 +
           (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
               C1383 -
           (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
               C1535 -
           (C4328 * C3587 + C92171 * C3805 + C4327 * C1540 + C92336 * C1727) *
               C1384 +
           (C4327 * C1390 + C92336 * C1607 + C4328 * C5719 + C92171 * C5965) *
               C1536 +
           (C4327 * C1541 + C92336 * C1728 + C4328 * C5885 + C92171 * C6122) *
               C1385) *
              C92183 * C4097 +
          ((C4355 + C4354) * C1534 + (C4552 + C4553) * C1383 -
           (C4328 * C3432 + C92171 * C3662 + C4327 * C1388 + C92336 * C1605) *
               C1535 -
           (C4328 * C3588 + C92171 * C3806 + C4327 * C1539 + C92336 * C1729) *
               C1384 +
           (C4327 * C1391 + C92336 * C1608 + C4328 * C5720 + C92171 * C5966) *
               C1536 +
           (C4327 * C1542 + C92336 * C1730 + C4328 * C5886 + C92171 * C6123) *
               C1385) *
              C92183 * C4098 +
          (C4366 * C1534 + C4558 * C1383 -
           (C4328 * C3433 + C92171 * C3663 + C4327 * C1387 + C92336 * C1604) *
               C1535 -
           (C4328 * C3589 + C92171 * C3807 + C4327 * C1538 + C92336 * C1731) *
               C1384 +
           (C4327 * C1392 + C92336 * C1609 + C4328 * C5721 + C92171 * C5967) *
               C1536 +
           (C4327 * C1543 + C92336 * C1732 + C4328 * C5887 + C92171 * C6124) *
               C1385) *
              C92183 * C4099) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C92105 * C93 -
          ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
            C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
               C92116 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C244) *
              C92183 * C92067 * C92105 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C244 +
           (C19822 * C247 + C19667 * C476 + C19823 * C954 + C19668 * C1144 +
            C19824 * C959 + C19669 * C1149 + C19825 * C5087 + C19670 * C5342) *
               C92116) *
              C92183 * C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C798 -
          ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
            C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
            C19667 * C1146) *
               C92116 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C244) *
              C92183 * C92067 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C244 +
           (C19822 * C957 + C19667 * C1147 + C19823 * C5085 + C19668 * C5340 +
            C19824 * C15493 + C19669 * C15747 + C19825 * C20278 +
            C19670 * C20455) *
               C92116) *
              C92183 * C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C1534 +
          (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
           C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
              C1383 -
          (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 + C19669 * C8766 +
           C19823 * C3431 + C19668 * C3661 + C19822 * C1389 + C19667 * C1606) *
              C1535 -
          (C19825 * C18976 + C19670 * C19292 + C19824 * C8653 + C19669 * C8971 +
           C19823 * C3587 + C19668 * C3805 + C19822 * C1540 + C19667 * C1727) *
              C1384 +
          (C19822 * C1390 + C19667 * C1607 + C19823 * C5719 + C19668 * C5965 +
           C19824 * C16095 + C19669 * C16333 + C19825 * C20682 +
           C19670 * C20840) *
              C1536 +
          (C19822 * C1541 + C19667 * C1728 + C19823 * C5885 + C19668 * C6122 +
           C19824 * C16255 + C19669 * C16487 + C19825 * C20788 +
           C19670 * C20943) *
              C1385) *
         C92183 * C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[67] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C4097 +
                      (C584 * C801 + C585 * C92084) * C4098 +
                      (C586 * C801 + C587 * C92084) * C4099) *
                         C92336 +
                     ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                      (C5430 + C5431) * C4099) *
                         C92171) *
                        C92116 * C798 -
                    (((C5454 + C5455) * C4099 + (C5456 + C5457) * C4098 +
                      (C5458 + C5459) * C4097) *
                         C92171 +
                     ((C5431 + C5430) * C4099 + (C5429 + C5428) * C4098 +
                      (C5453 + C5452) * C4097) *
                         C92336) *
                        C92116 * C799 +
                    (((C5459 + C5458) * C4097 + (C5457 + C5456) * C4098 +
                      (C5455 + C5454) * C4099) *
                         C92336 +
                     (((C554 * C4865 + C92183 * C5417) * C801 +
                       (C554 * C4871 + C92183 * C5420) * C92084) *
                          C4097 +
                      ((C554 * C4866 + C92183 * C5418) * C801 +
                       (C554 * C4872 + C92183 * C5421) * C92084) *
                          C4098 +
                      ((C554 * C4867 + C92183 * C5419) * C801 +
                       (C554 * C4873 + C92183 * C5422) * C92084) *
                          C4099) *
                         C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C104 +
                      (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                      C585 * C94 + C586 * C106 + C587 * C95) *
                         C4097 +
                     (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
                      C588 * C106 + C589 * C95) *
                         C4098 +
                     (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
                      C590 * C106 + C591 * C95) *
                         C4099) *
                        C92336 +
                    (((C554 * C805 + C92183 * C1204) * C104 +
                      (C554 * C813 + C92183 * C1212) * C93 - C2468 * C105 -
                      C2469 * C94 + C2470 * C106 + C2471 * C95) *
                         C4097 +
                     (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
                      C2472 * C106 + C2473 * C95) *
                         C4098 +
                     (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
                      (C554 * C1989 + C92183 * C2453) * C106 +
                      (C554 * C1991 + C92183 * C2454) * C95) *
                         C4099) *
                        C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C4097 +
                      (C584 * C801 + C585 * C92084) * C4098 +
                      (C586 * C801 + C587 * C92084) * C4099) *
                         C92336 +
                     ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                      (C5430 + C5431) * C4099) *
                         C92171) *
                        C1383 -
                    ((((C554 * C3441 + C92183 * C3881) * C92084 +
                       (C554 * C3433 + C92183 * C3877) * C801) *
                          C4099 +
                      ((C554 * C3440 + C92183 * C3880) * C92084 +
                       (C554 * C3432 + C92183 * C3876) * C801) *
                          C4098 +
                      ((C554 * C3439 + C92183 * C3879) * C92084 +
                       (C554 * C3431 + C92183 * C3875) * C801) *
                          C4097) *
                         C92171 +
                     ((C3193 * C92084 + C3192 * C801) * C4099 +
                      (C3191 * C92084 + C3190 * C801) * C4098 +
                      ((C554 * C1397 + C92183 * C1796) * C92084 +
                       (C554 * C1389 + C92183 * C1788) * C801) *
                          C4097) *
                         C92336) *
                        C1384 +
                    ((((C554 * C1390 + C92183 * C1789) * C801 +
                       (C554 * C1406 + C92183 * C1797) * C92084) *
                          C4097 +
                      ((C554 * C1391 + C92183 * C1790) * C801 +
                       (C554 * C1407 + C92183 * C1798) * C92084) *
                          C4098 +
                      ((C554 * C1392 + C92183 * C1791) * C801 +
                       (C554 * C1408 + C92183 * C1799) * C92084) *
                          C4099) *
                         C92336 +
                     (((C554 * C5719 + C92183 * C6199) * C801 +
                       (C554 * C5725 + C92183 * C6202) * C92084) *
                          C4097 +
                      ((C554 * C5720 + C92183 * C6200) * C801 +
                       (C554 * C5726 + C92183 * C6203) * C92084) *
                          C4098 +
                      ((C554 * C5721 + C92183 * C6201) * C801 +
                       (C554 * C5727 + C92183 * C6204) * C92084) *
                          C4099) *
                         C92171) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C554 * C107 + C92183 * C555) * C104 +
                     (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                     C585 * C94 + C586 * C106 + C587 * C95) *
                        C92067 * C19667 +
                    (C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
                     C2470 * C106 + C2471 * C95) *
                        C92067 * C19668 +
                    (C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
                     C5447 * C106 + C5446 * C95) *
                        C92067 * C19669 +
                    (C15843 * C104 + C15842 * C93 - C15841 * C105 -
                     C15840 * C94 + (C554 * C4867 + C92183 * C5419) * C106 +
                     (C554 * C4873 + C92183 * C5422) * C95) *
                        C92067 * C19670) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C801 +
                      (C554 * C117 + C92183 * C561) * C92084) *
                         C92067 * C19667 +
                     (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                     C20515 * C19670) *
                        C92116 * C798 -
                    ((C20518 + C20519) * C92067 * C19670 +
                     (C15847 + C15848) * C92067 * C19669 +
                     (C5458 + C5459) * C92067 * C19668 +
                     (C5453 + C5452) * C92067 * C19667) *
                        C92116 * C799 +
                    (C20509 * C19667 + C20515 * C19668 +
                     (C20519 + C20518) * C92067 * C19669 +
                     ((C554 * C20126 + C92183 * C20506) * C801 +
                      (C554 * C20128 + C92183 * C20507) * C92084) *
                         C92067 * C19670) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C801 +
                      (C554 * C117 + C92183 * C561) * C92084) *
                         C92067 * C19667 +
                     (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                     C20515 * C19670) *
                        C1383 -
                    (((C554 * C18736 + C92183 * C19394) * C92084 +
                      (C554 * C18732 + C92183 * C19392) * C801) *
                         C92067 * C19670 +
                     (C19405 + C19406) * C92067 * C19669 +
                     (C9089 + C9090) * C92067 * C19668 +
                     ((C554 * C1397 + C92183 * C1796) * C92084 +
                      (C554 * C1389 + C92183 * C1788) * C801) *
                         C92067 * C19667) *
                        C1384 +
                    (((C554 * C1390 + C92183 * C1789) * C801 +
                      (C554 * C1406 + C92183 * C1797) * C92084) *
                         C92067 * C19667 +
                     ((C554 * C5719 + C92183 * C6199) * C801 +
                      (C554 * C5725 + C92183 * C6202) * C92084) *
                         C92067 * C19668 +
                     ((C554 * C16095 + C92183 * C16563) * C801 +
                      (C554 * C16099 + C92183 * C16565) * C92084) *
                         C92067 * C19669 +
                     ((C554 * C20682 + C92183 * C20994) * C801 +
                      (C554 * C20684 + C92183 * C20995) * C92084) *
                         C92067 * C19670) *
                        C1385) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eezy[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C4098 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C5447 * C886 + C5548 * C800) *
               C4099) *
              C92336 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            (C554 * C4865 + C92183 * C5417) * C886 +
            (C554 * C4987 + C92183 * C5533) * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            (C554 * C4866 + C92183 * C5418) * C886 +
            (C554 * C4988 + C92183 * C5534) * C800) *
               C4098 +
           (C2470 * C884 + C2557 * C798 - C5447 * C885 - C5548 * C799 +
            (C554 * C4867 + C92183 * C5419) * C886 +
            (C554 * C4989 + C92183 * C5535) * C800) *
               C4099) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C4097 +
            (C648 + C664) * C4098 + C668 * C4099) *
               C92336 +
           (((C554 * C805 + C92183 * C1204) * C181 +
             (C554 * C890 + C92183 * C1267) * C92105) *
                C4097 +
            (C4710 + C4711) * C4098 + C4716 * C4099) *
               C92171) *
              C93 -
          (((C4714 + C4715) * C4099 + (C4713 + C4712) * C4098 +
            (C4711 + C4710) * C4097) *
               C92171 +
           ((C666 + C654) * C4099 + (C665 + C651) * C4098 +
            (C664 + C648) * C4097) *
               C92336) *
              C94 +
          ((C668 * C4097 + C669 * C4098 + (C659 + C667) * C4099) * C92336 +
           (C4716 * C4097 + (C4715 + C4714) * C4098 +
            ((C554 * C1989 + C92183 * C2453) * C181 +
             (C554 * C2061 + C92183 * C2539) * C92105) *
                C4099) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C4097 +
            (C648 + C664) * C4098 + C668 * C4099) *
               C92336 +
           ((C5444 * C181 + C5545 * C92105) * C4097 + (C4710 + C4711) * C4098 +
            C4716 * C4099) *
               C92171) *
              C92084 * C1383 -
          ((((C554 * C3515 + C92183 * C3951) * C92105 +
             (C554 * C3433 + C92183 * C3877) * C181) *
                C4099 +
            ((C554 * C3514 + C92183 * C3950) * C92105 +
             (C554 * C3432 + C92183 * C3876) * C181) *
                C4098 +
            ((C554 * C3513 + C92183 * C3949) * C92105 +
             (C554 * C3431 + C92183 * C3875) * C181) *
                C4097) *
               C92171 +
           ((C3276 + C3266) * C4099 + (C3275 + C3263) * C4098 +
            ((C554 * C1471 + C92183 * C1854) * C92105 +
             (C554 * C1389 + C92183 * C1788) * C181) *
                C4097) *
               C92336) *
              C92084 * C1384 +
          ((((C554 * C1390 + C92183 * C1789) * C181 +
             (C554 * C1472 + C92183 * C1855) * C92105) *
                C4097 +
            ((C554 * C1391 + C92183 * C1790) * C181 +
             (C554 * C1473 + C92183 * C1856) * C92105) *
                C4098 +
            ((C554 * C1392 + C92183 * C1791) * C181 +
             (C554 * C1474 + C92183 * C1857) * C92105) *
                C4099) *
               C92336 +
           (((C554 * C5719 + C92183 * C6199) * C181 +
             (C554 * C5805 + C92183 * C6279) * C92105) *
                C4097 +
            ((C554 * C5720 + C92183 * C6200) * C181 +
             (C554 * C5806 + C92183 * C6280) * C92105) *
                C4098 +
            ((C554 * C5721 + C92183 * C6201) * C181 +
             (C554 * C5807 + C92183 * C6281) * C92105) *
                C4099) *
               C92171) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C92067 * C19667 +
           (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
           (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
           (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
              C93 -
          ((C15930 * C92105 + C15841 * C181) * C92067 * C19670 +
           (C15123 + C15122) * C92067 * C19669 +
           (C4711 + C4710) * C92067 * C19668 +
           (C664 + C648) * C92067 * C19667) *
              C94 +
          (C668 * C92067 * C19667 + C4716 * C92067 * C19668 +
           (C15125 + C15124) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C181 +
            (C554 * C4989 + C92183 * C5535) * C92105) *
               C92067 * C19670) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
           C5451 * C886 + C5546 * C800) *
              C92067 * C19667 +
          (C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
           C15843 * C886 + C15929 * C800) *
              C92067 * C19668 +
          (C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
           C20517 * C886 + C20573 * C800) *
              C92067 * C19669 +
          (C15843 * C884 + C15929 * C798 - C20517 * C885 - C20573 * C799 +
           (C554 * C20126 + C92183 * C20506) * C886 +
           (C554 * C20214 + C92183 * C20569) * C800) *
              C92067 * C19670) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C92067 * C19667 +
           (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
           (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
           (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
              C92084 * C1383 -
          (((C554 * C18862 + C92183 * C19504) * C92105 +
            (C554 * C18732 + C92183 * C19392) * C181) *
               C92067 * C19670 +
           (C19509 * C92105 + C19404 * C181) * C92067 * C19669 +
           (C9194 * C92105 + C9088 * C181) * C92067 * C19668 +
           ((C554 * C1471 + C92183 * C1854) * C92105 +
            (C554 * C1389 + C92183 * C1788) * C181) *
               C92067 * C19667) *
              C92084 * C1384 +
          (((C554 * C1390 + C92183 * C1789) * C181 +
            (C554 * C1472 + C92183 * C1855) * C92105) *
               C92067 * C19667 +
           ((C554 * C5719 + C92183 * C6199) * C181 +
            (C554 * C5805 + C92183 * C6279) * C92105) *
               C92067 * C19668 +
           ((C554 * C16095 + C92183 * C16563) * C181 +
            (C554 * C16177 + C92183 * C16641) * C92105) *
               C92067 * C19669 +
           ((C554 * C20682 + C92183 * C20994) * C181 +
            (C554 * C20736 + C92183 * C21046) * C92105) *
               C92067 * C19670) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C4097 +
            (C726 + C742) * C4098 + C746 * C4099) *
               C92336 +
           ((C5626 + C5642) * C4097 + (C2637 + C2643) * C4098 + C4791 * C4099) *
               C92171) *
              C798 -
          (((C5643 + C5631) * C4099 + (C5644 + C5634) * C4098 +
            (C5645 + C5637) * C4097) *
               C92171 +
           ((C2642 + C2634) * C4099 + (C2643 + C2637) * C4098 +
            (C5642 + C5626) * C4097) *
               C92336) *
              C799 +
          (((C5637 + C5645) * C4097 + (C5634 + C5644) * C4098 +
            (C5631 + C5643) * C4099) *
               C92336 +
           (((C554 * C4865 + C92183 * C5417) * C244 +
             (C554 * C5085 + C92183 * C5622) * C92116) *
                C4097 +
            ((C554 * C4866 + C92183 * C5418) * C244 +
             (C554 * C5086 + C92183 * C5623) * C92116) *
                C4098 +
            ((C554 * C4867 + C92183 * C5419) * C244 +
             (C554 * C5087 + C92183 * C5624) * C92116) *
                C4099) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C4097 +
            (C726 + C742) * C4098 + C746 * C4099) *
               C92336 +
           (((C554 * C805 + C92183 * C1204) * C244 +
             (C554 * C956 + C92183 * C1328) * C92116) *
                C4097 +
            (C2637 + C2643) * C4098 + C4791 * C4099) *
               C92171) *
              C92105 * C93 -
          (((C2641 + C2631) * C4099 + (C2642 + C2634) * C4098 +
            (C2643 + C2637) * C4097) *
               C92171 +
           ((C744 + C732) * C4099 + (C743 + C729) * C4098 +
            (C742 + C726) * C4097) *
               C92336) *
              C92105 * C94 +
          ((C746 * C4097 + C747 * C4098 + (C737 + C745) * C4099) * C92336 +
           (C4791 * C4097 + (C2631 + C2641) * C4098 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C4099) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1534 +
            (C554 * C245 + C92183 * C719) * C1383 -
            (C554 * C1389 + C92183 * C1788) * C1535 -
            (C554 * C1540 + C92183 * C1909) * C1384 +
            (C554 * C1390 + C92183 * C1789) * C1536 +
            (C554 * C1541 + C92183 * C1910) * C1385) *
               C4097 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92183 * C1790) * C1536 +
            (C554 * C1542 + C92183 * C1912) * C1385) *
               C4098 +
           (C586 * C1534 + C739 * C1383 - C3192 * C1535 - C3361 * C1384 +
            (C554 * C1392 + C92183 * C1791) * C1536 +
            (C554 * C1543 + C92183 * C1914) * C1385) *
               C4099) *
              C92336 +
          ((C5444 * C1534 + C5638 * C1383 -
            (C554 * C3431 + C92183 * C3875) * C1535 -
            (C554 * C3587 + C92183 * C4019) * C1384 +
            (C554 * C5719 + C92183 * C6199) * C1536 +
            (C554 * C5885 + C92183 * C6356) * C1385) *
               C4097 +
           (C2468 * C1534 + C2640 * C1383 -
            (C554 * C3432 + C92183 * C3876) * C1535 -
            (C554 * C3588 + C92183 * C4020) * C1384 +
            (C554 * C5720 + C92183 * C6200) * C1536 +
            (C554 * C5886 + C92183 * C6357) * C1385) *
               C4098 +
           (C2470 * C1534 + C2639 * C1383 -
            (C554 * C3433 + C92183 * C3877) * C1535 -
            (C554 * C3589 + C92183 * C4021) * C1384 +
            (C554 * C5721 + C92183 * C6201) * C1536 +
            (C554 * C5887 + C92183 * C6358) * C1385) *
               C4099) *
              C92171) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C16007 * C92067 * C19669 +
           (C16014 + C16021) * C92067 * C19670) *
              C92105 * C93 -
          ((C16020 + C16011) * C92067 * C19670 + C17698 * C92067 * C19669 +
           C7348 * C92067 * C19668 + (C742 + C726) * C92067 * C19667) *
              C92105 * C94 +
          (C746 * C92067 * C19667 + C4791 * C92067 * C19668 +
           (C5631 + C5643) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C244 +
            (C554 * C5087 + C92183 * C5624) * C92116) *
               C92067 * C19670) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C20625 * C19669 +
           C20630 * C19670) *
              C798 -
          ((C20632 + C20629) * C92067 * C19670 +
           (C16021 + C16014) * C92067 * C19669 +
           (C5645 + C5637) * C92067 * C19668 +
           (C5642 + C5626) * C92067 * C19667) *
              C799 +
          (C20625 * C19667 + C20630 * C19668 +
           (C20629 + C20632) * C92067 * C19669 +
           ((C554 * C20126 + C92183 * C20506) * C244 +
            (C554 * C20278 + C92183 * C20623) * C92116) *
               C92067 * C19670) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C1534 +
           (C554 * C245 + C92183 * C719) * C1383 -
           (C554 * C1389 + C92183 * C1788) * C1535 -
           (C554 * C1540 + C92183 * C1909) * C1384 +
           (C554 * C1390 + C92183 * C1789) * C1536 +
           (C554 * C1541 + C92183 * C1910) * C1385) *
              C92067 * C19667 +
          (C5444 * C1534 + C5638 * C1383 - C9088 * C1535 - C9301 * C1384 +
           (C554 * C5719 + C92183 * C6199) * C1536 +
           (C554 * C5885 + C92183 * C6356) * C1385) *
              C92067 * C19668 +
          (C5451 * C1534 + C5641 * C1383 - C19404 * C1535 - C19615 * C1384 +
           (C554 * C16095 + C92183 * C16563) * C1536 +
           (C554 * C16255 + C92183 * C16717) * C1385) *
              C92067 * C19669 +
          (C15843 * C1534 + C16018 * C1383 -
           (C554 * C18732 + C92183 * C19392) * C1535 -
           (C554 * C18976 + C92183 * C19607) * C1384 +
           (C554 * C20682 + C92183 * C20994) * C1536 +
           (C554 * C20788 + C92183 * C21097) * C1385) *
              C92067 * C19670) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C1983 -
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
             C4102 * C118 + C4097 * C126) *
                C1984) *
               C92336 +
           ((C4902 + C4903 + C4904) * C1987 + (C4905 + C4906 + C4907) * C1983 -
            (C6470 + C6471 + C6472) * C1988 - (C6473 + C6474 + C6475) * C1984) *
               C92171) *
              C92183 * C2709 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C4098 * C1399 +
             C4104 * C1386 + C4099 * C1398) *
                C1988 -
            ((C4104 * C1395 + C4099 * C1411 + C4103 * C1396 + C4098 * C1412 +
              C4102 * C1397 + C4097 * C1413) *
                 C1983 +
             (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
              C4102 * C1389 + C4097 * C1401) *
                 C1987) +
            (C4102 * C1396 + C4097 * C1412 + C4103 * C1395 + C4098 * C1411 +
             C4104 * C1394 + C4099 * C1410) *
                C1984) *
               C92336 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
             C4104 * C3434 + C4099 * C3438) *
                C1988 -
            ((C4104 * C3441 + C4099 * C3445 + C4103 * C3440 + C4098 * C3444 +
              C4102 * C3439 + C4097 * C3443) *
                 C1983 +
             (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
              C4102 * C3431 + C4097 * C3435) *
                 C1987) +
            (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 + C4098 * C3445 +
             C4104 * C3442 + C4099 * C3446) *
                C1984) *
               C92171) *
              C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1987 +
            (C19671 * C117 + C92067 * C125) * C1983 -
            (C19671 * C108 + C92067 * C114) * C1988 -
            (C19671 * C118 + C92067 * C126) * C1984) *
               C19667 +
           (C21165 + C21166 - C21189 - C21190) * C19668 +
           (C21171 + C21172 - C21191 - C21192) * C19669 +
           (C21177 + C21178 - C21193 - C21194) * C19670) *
              C92183 * C2709 +
          (((C19671 * C1388 + C92067 * C1400) * C1988 -
            ((C19671 * C1397 + C92067 * C1413) * C1983 +
             (C19671 * C1389 + C92067 * C1401) * C1987) +
            (C19671 * C1396 + C92067 * C1412) * C1984) *
               C19667 +
           ((C19671 * C3432 + C92067 * C3436) * C1988 -
            ((C19671 * C3439 + C92067 * C3443) * C1983 +
             (C19671 * C3431 + C92067 * C3435) * C1987) +
            (C19671 * C3440 + C92067 * C3444) * C1984) *
               C19668 +
           ((C19671 * C8413 + C92067 * C8416) * C1988 -
            ((C19671 * C8418 + C92067 * C8421) * C1983 +
             (C19671 * C8412 + C92067 * C8415) * C1987) +
            (C19671 * C8419 + C92067 * C8422) * C1984) *
               C19669 +
           ((C19671 * C18733 + C92067 * C18735) * C1988 -
            ((C19671 * C18736 + C92067 * C18738) * C1983 +
             (C19671 * C18732 + C92067 * C18734) * C1987) +
            (C19671 * C18737 + C92067 * C18739) * C1984) *
               C19670) *
              C92183 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                        C4098 * C114 + C4104 * C109 + C4099 * C115) *
                           C181 +
                       (C4102 * C182 + C4097 * C188 + C4103 * C183 +
                        C4098 * C189 + C4104 * C184 + C4099 * C190) *
                           C92105) *
                          C92336 +
                      ((C4902 + C4903 + C4904) * C181 +
                       (C5008 + C5007 + C5006) * C92105) *
                          C92171) *
                         C92183 * C1983 -
                     (((C6582 + C6581 + C6580) * C92105 +
                       (C6470 + C6471 + C6472) * C181) *
                          C92171 +
                      ((C4104 * C185 + C4099 * C191 + C4103 * C184 +
                        C4098 * C190 + C4102 * C183 + C4097 * C189) *
                           C92105 +
                       (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                        C4098 * C115 + C4102 * C108 + C4097 * C114) *
                           C181) *
                          C92336) *
                         C92183 * C1984) *
                        C2709 +
                    ((((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 +
                        C4098 * C1399 + C4104 * C1386 + C4099 * C1398) *
                           C181 +
                       (C4102 * C1470 + C4097 * C1478 + C4103 * C1469 +
                        C4098 * C1477 + C4104 * C1468 + C4099 * C1476) *
                           C92105) *
                          C92336 +
                      ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 +
                        C4098 * C3437 + C4104 * C3434 + C4099 * C3438) *
                           C181 +
                       (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 +
                        C4098 * C3519 + C4104 * C3516 + C4099 * C3520) *
                           C92105) *
                          C92171) *
                         C92183 * C1984 -
                     (((C4104 * C3515 + C4099 * C3519 + C4103 * C3514 +
                        C4098 * C3518 + C4102 * C3513 + C4097 * C3517) *
                           C92105 +
                       (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 +
                        C4098 * C3436 + C4102 * C3431 + C4097 * C3435) *
                           C181) *
                          C92171 +
                      ((C4104 * C1469 + C4099 * C1477 + C4103 * C1470 +
                        C4098 * C1478 + C4102 * C1471 + C4097 * C1479) *
                           C92105 +
                       (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 +
                        C4098 * C1400 + C4102 * C1389 + C4097 * C1401) *
                           C181) *
                          C92336) *
                         C92183 * C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C181 +
                       (C19671 * C182 + C92067 * C188) * C92105) *
                          C19667 +
                      (C20147 * C181 + C20225 * C92105) * C19668 +
                      (C20149 * C181 + C20226 * C92105) * C19669 +
                      (C20151 * C181 + C20227 * C92105) * C19670) *
                         C92183 * C1983 -
                     ((C21269 * C92105 + C21187 * C181) * C19670 +
                      (C21268 * C92105 + C21185 * C181) * C19669 +
                      (C21267 * C92105 + C21183 * C181) * C19668 +
                      ((C19671 * C183 + C92067 * C189) * C92105 +
                       (C19671 * C108 + C92067 * C114) * C181) *
                          C19667) *
                         C92183 * C1984) *
                        C2709 +
                    ((((C19671 * C1388 + C92067 * C1400) * C181 +
                       (C19671 * C1470 + C92067 * C1478) * C92105) *
                          C19667 +
                      ((C19671 * C3432 + C92067 * C3436) * C181 +
                       (C19671 * C3514 + C92067 * C3518) * C92105) *
                          C19668 +
                      ((C19671 * C8413 + C92067 * C8416) * C181 +
                       (C19671 * C8541 + C92067 * C8544) * C92105) *
                          C19669 +
                      ((C19671 * C18733 + C92067 * C18735) * C181 +
                       (C19671 * C18863 + C92067 * C18865) * C92105) *
                          C19670) *
                         C92183 * C1984 -
                     (((C19671 * C18862 + C92067 * C18864) * C92105 +
                       (C19671 * C18732 + C92067 * C18734) * C181) *
                          C19670 +
                      ((C19671 * C8540 + C92067 * C8543) * C92105 +
                       (C19671 * C8412 + C92067 * C8415) * C181) *
                          C19669 +
                      ((C19671 * C3513 + C92067 * C3517) * C92105 +
                       (C19671 * C3431 + C92067 * C3435) * C181) *
                          C19668 +
                      ((C19671 * C1471 + C92067 * C1479) * C92105 +
                       (C19671 * C1389 + C92067 * C1401) * C181) *
                          C19667) *
                         C92183 * C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C2709 -
            (C4104 * C1387 + C4099 * C1399 + C4103 * C1388 + C4098 * C1400 +
             C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4104 * C1538 + C4099 * C1546 + C4103 * C1539 + C4098 * C1547 +
             C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C92336 +
           ((C4902 + C4903 + C4904) * C2849 + (C5104 + C5105 + C5106) * C2709 -
            (C4104 * C3433 + C4099 * C3437 + C4103 * C3432 + C4098 * C3436 +
             C4102 * C3431 + C4097 * C3435) *
                C2850 -
            (C4104 * C3589 + C4099 * C3593 + C4103 * C3588 + C4098 * C3592 +
             C4102 * C3587 + C4097 * C3591) *
                C2710) *
               C92171) *
              C92183 * C92105 * C1983 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C4098 * C1399 +
             C4104 * C1386 + C4099 * C1398) *
                C2850 -
            ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
              C4102 * C246 + C4097 * C252) *
                 C2709 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2849) +
            (C4102 * C1539 + C4097 * C1547 + C4103 * C1538 + C4098 * C1546 +
             C4104 * C1537 + C4099 * C1545) *
                C2710) *
               C92336 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
             C4104 * C3434 + C4099 * C3438) *
                C2850 -
            ((C6689 + C6688 + C6687) * C2709 +
             (C6470 + C6471 + C6472) * C2849) +
            (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 + C4098 * C3593 +
             C4104 * C3590 + C4099 * C3594) *
                C2710) *
               C92171) *
              C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C2849 +
            (C19671 * C245 + C92067 * C251) * C2709 -
            (C19671 * C1389 + C92067 * C1401) * C2850 -
            (C19671 * C1540 + C92067 * C1548) * C2710) *
               C19667 +
           (C20147 * C2849 + C20293 * C2709 -
            (C19671 * C3431 + C92067 * C3435) * C2850 -
            (C19671 * C3587 + C92067 * C3591) * C2710) *
               C19668 +
           (C20149 * C2849 + C20294 * C2709 -
            (C19671 * C8412 + C92067 * C8415) * C2850 -
            (C19671 * C8653 + C92067 * C8656) * C2710) *
               C19669 +
           (C20151 * C2849 + C20295 * C2709 -
            (C19671 * C18732 + C92067 * C18734) * C2850 -
            (C19671 * C18976 + C92067 * C18978) * C2710) *
               C19670) *
              C92183 * C92105 * C1983 +
          (((C19671 * C1388 + C92067 * C1400) * C2850 -
            ((C19671 * C246 + C92067 * C252) * C2709 +
             (C19671 * C108 + C92067 * C114) * C2849) +
            (C19671 * C1539 + C92067 * C1547) * C2710) *
               C19667 +
           ((C19671 * C3432 + C92067 * C3436) * C2850 -
            (C21345 * C2709 + C21183 * C2849) +
            (C19671 * C3588 + C92067 * C3592) * C2710) *
               C19668 +
           ((C19671 * C8413 + C92067 * C8416) * C2850 -
            (C21346 * C2709 + C21185 * C2849) +
            (C19671 * C8654 + C92067 * C8657) * C2710) *
               C19669 +
           ((C19671 * C18733 + C92067 * C18735) * C2850 -
            (C21347 * C2709 + C21187 * C2849) +
            (C19671 * C18977 + C92067 * C18979) * C2710) *
               C19670) *
              C92183 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C1987 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C1983 -
            (C4354 + C4355) * C1988 - (C4356 + C4357) * C1984) *
               C92183 * C4097 +
           ((C4355 + C4354) * C1987 + (C4357 + C4356) * C1983 -
            (C4359 + C4358) * C1988 - (C4361 + C4360) * C1984) *
               C92183 * C4098 +
           (C4366 * C1987 + C4367 * C1983 - (C4363 + C4362) * C1988 -
            (C4365 + C4364) * C1984) *
               C92183 * C4099) *
              C2709 +
          (((C7757 + C7758) * C1988 -
            ((C4328 * C3439 + C92171 * C3665 + C4327 * C1397 + C92336 * C1614) *
                 C1983 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C1987) +
            (C7759 + C7760) * C1984) *
               C92183 * C4097 +
           ((C7761 + C7762) * C1988 -
            ((C7760 + C7759) * C1983 + (C7758 + C7757) * C1987) +
            (C7763 + C7764) * C1984) *
               C92183 * C4098 +
           ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                C1988 -
            ((C7764 + C7763) * C1983 + (C7762 + C7761) * C1987) +
            (C4327 * C1394 + C92336 * C1611 + C4328 * C3442 + C92171 * C3668) *
                C1984) *
               C92183 * C4099) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C1987 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C1983 -
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C1988 -
           (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
            C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
               C1984) *
              C92183 * C92067 * C2709 +
          ((C19822 * C1388 + C19667 * C1605 + C19823 * C3432 + C19668 * C3662 +
            C19824 * C8413 + C19669 * C8767 + C19825 * C18733 +
            C19670 * C19091) *
               C1988 -
           ((C19825 * C18736 + C19670 * C19092 + C19824 * C8418 +
             C19669 * C8769 + C19823 * C3439 + C19668 * C3665 + C19822 * C1397 +
             C19667 * C1614) *
                C1983 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C1987) +
           (C19822 * C1396 + C19667 * C1613 + C19823 * C3440 + C19668 * C3666 +
            C19824 * C8419 + C19669 * C8770 + C19825 * C18737 +
            C19670 * C19093) *
               C1984) *
              C92183 * C92067 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                 C181 +
             (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                 C92105) *
                C92183 * C4097 +
            ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
                C4098 +
            C4464 * C4099) *
               C1983 -
           (((C4459 + C4460) * C92105 + (C4363 + C4362) * C181) * C92183 *
                C4099 +
            ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C92183 *
                C4098 +
            ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C92183 *
                C4097) *
               C1984) *
              C2709 +
          ((((C7757 + C7758) * C181 + (C7871 + C7872) * C92105) * C92183 *
                C4097 +
            ((C7761 + C7762) * C181 + (C7873 + C7874) * C92105) * C92183 *
                C4098 +
            ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                 C181 +
             (C4327 * C1468 + C92336 * C1669 + C4328 * C3516 + C92171 * C3738) *
                 C92105) *
                C92183 * C4099) *
               C1984 -
           (((C7874 + C7873) * C92105 + (C7762 + C7761) * C181) * C92183 *
                C4099 +
            ((C7872 + C7871) * C92105 + (C7758 + C7757) * C181) * C92183 *
                C4098 +
            ((C4328 * C3513 + C92171 * C3735 + C4327 * C1471 + C92336 * C1672) *
                 C92105 +
             (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                 C181) *
                C92183 * C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
             C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
                C181 +
            (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
             C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
                C92105) *
               C92183 * C92067 * C1983 -
           ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
             C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
                C92105 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C181) *
               C92183 * C92067 * C1984) *
              C2709 +
          (((C19822 * C1388 + C19667 * C1605 + C19823 * C3432 + C19668 * C3662 +
             C19824 * C8413 + C19669 * C8767 + C19825 * C18733 +
             C19670 * C19091) *
                C181 +
            (C19822 * C1470 + C19667 * C1671 + C19823 * C3514 + C19668 * C3736 +
             C19824 * C8541 + C19669 * C8871 + C19825 * C18863 +
             C19670 * C19193) *
                C92105) *
               C92183 * C92067 * C1984 -
           ((C19825 * C18862 + C19670 * C19192 + C19824 * C8540 +
             C19669 * C8870 + C19823 * C3513 + C19668 * C3735 + C19822 * C1471 +
             C19667 * C1672) *
                C92105 +
            (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
             C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
             C19667 * C1606) *
                C181) *
               C92183 * C92067 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C2849 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C2709 -
            (C4328 * C3431 + C92171 * C3661 + C4327 * C1389 + C92336 * C1606) *
                C2850 -
            (C4328 * C3587 + C92171 * C3805 + C4327 * C1540 + C92336 * C1727) *
                C2710) *
               C92183 * C4097 +
           ((C4355 + C4354) * C2849 + (C4552 + C4553) * C2709 -
            (C7758 + C7757) * C2850 - (C7981 + C7982) * C2710) *
               C92183 * C4098 +
           (C4366 * C2849 + C4558 * C2709 - (C7762 + C7761) * C2850 -
            (C7983 + C7984) * C2710) *
               C92183 * C4099) *
              C92105 * C1983 +
          (((C7757 + C7758) * C2850 -
            ((C4553 + C4552) * C2709 + (C4354 + C4355) * C2849) +
            (C7982 + C7981) * C2710) *
               C92183 * C4097 +
           ((C7761 + C7762) * C2850 -
            ((C4555 + C4554) * C2709 + (C4359 + C4358) * C2849) +
            (C7984 + C7983) * C2710) *
               C92183 * C4098 +
           ((C4327 * C1386 + C92336 * C1603 + C4328 * C3434 + C92171 * C3664) *
                C2850 -
            ((C4556 + C4557) * C2709 + (C4363 + C4362) * C2849) +
            (C4327 * C1537 + C92336 * C1733 + C4328 * C3590 + C92171 * C3808) *
                C2710) *
               C92183 * C4099) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C2849 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C2709 -
           (C19825 * C18732 + C19670 * C19090 + C19824 * C8412 +
            C19669 * C8766 + C19823 * C3431 + C19668 * C3661 + C19822 * C1389 +
            C19667 * C1606) *
               C2850 -
           (C19825 * C18976 + C19670 * C19292 + C19824 * C8653 +
            C19669 * C8971 + C19823 * C3587 + C19668 * C3805 + C19822 * C1540 +
            C19667 * C1727) *
               C2710) *
              C92183 * C92067 * C92105 * C1983 +
          ((C19822 * C1388 + C19667 * C1605 + C19823 * C3432 + C19668 * C3662 +
            C19824 * C8413 + C19669 * C8767 + C19825 * C18733 +
            C19670 * C19091) *
               C2850 -
           ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
             C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
                C2709 +
            (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
             C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
                C2849) +
           (C19822 * C1539 + C19667 * C1729 + C19823 * C3588 + C19668 * C3806 +
            C19824 * C8654 + C19669 * C8972 + C19825 * C18977 +
            C19670 * C19293) *
               C2710) *
              C92183 * C92067 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C1987 +
             (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C4098 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C4099) *
               C92336 +
           ((C7130 + C7131 - C7132 - C7133) * C4097 +
            (C7134 + C7135 - C7136 - C7137) * C4098 +
            (C7138 + C7139 - C7140 - C7141) * C4099) *
               C92171) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92183 * C1796) * C1983 +
              (C554 * C1389 + C92183 * C1788) * C1987) +
             C3191 * C1984) *
                C4097 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C4098 +
            (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
                C4099) *
               C92336 +
           ((C8091 * C1988 -
             ((C554 * C3439 + C92183 * C3879) * C1983 +
              (C554 * C3431 + C92183 * C3875) * C1987) +
             C8092 * C1984) *
                C4097 +
            (C8093 * C1988 - (C8092 * C1983 + C8091 * C1987) + C8094 * C1984) *
                C4098 +
            ((C554 * C3434 + C92183 * C3878) * C1988 -
             (C8094 * C1983 + C8093 * C1987) +
             (C554 * C3442 + C92183 * C3882) * C1984) *
                C4099) *
               C92171) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C1987 +
            (C554 * C117 + C92183 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92067 * C19667 +
           (C7130 + C7131 - C7132 - C7133) * C92067 * C19668 +
           (C17490 + C17491 - C17492 - C17493) * C92067 * C19669 +
           (C21615 + C21616 - C21617 - C21618) * C92067 * C19670) *
              C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92183 * C1796) * C1983 +
             (C554 * C1389 + C92183 * C1788) * C1987) +
            C3191 * C1984) *
               C92067 * C19667 +
           (C8091 * C1988 - (C9087 * C1983 + C9088 * C1987) + C8092 * C1984) *
               C92067 * C19668 +
           (C18425 * C1988 - (C19403 * C1983 + C19404 * C1987) +
            C18426 * C1984) *
               C92067 * C19669 +
           ((C554 * C18733 + C92183 * C19393) * C1988 -
            ((C554 * C18736 + C92183 * C19394) * C1983 +
             (C554 * C18732 + C92183 * C19392) * C1987) +
            (C554 * C18737 + C92183 * C19395) * C1984) *
               C92067 * C19670) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92183 * C555) * C181 +
                        (C554 * C182 + C92183 * C641) * C92105) *
                           C4097 +
                       (C648 + C664) * C4098 + C668 * C4099) *
                          C92336 +
                      ((C5444 * C181 + C5545 * C92105) * C4097 +
                       (C4710 + C4711) * C4098 + C4716 * C4099) *
                          C92171) *
                         C1983 -
                     (((C4714 + C4715) * C4099 + (C4713 + C4712) * C4098 +
                       (C4711 + C4710) * C4097) *
                          C92171 +
                      ((C666 + C654) * C4099 + (C665 + C651) * C4098 +
                       (C664 + C648) * C4097) *
                          C92336) *
                         C1984) *
                        C2709 +
                    ((((C3263 + C3275) * C4097 + (C3266 + C3276) * C4098 +
                       (C3269 + C3277) * C4099) *
                          C92336 +
                      ((C8193 + C8201) * C4097 + (C8196 + C8202) * C4098 +
                       ((C554 * C3434 + C92183 * C3878) * C181 +
                        (C554 * C3516 + C92183 * C3952) * C92105) *
                           C4099) *
                          C92171) *
                         C1984 -
                     (((C8202 + C8196) * C4099 + (C8201 + C8193) * C4098 +
                       ((C554 * C3513 + C92183 * C3949) * C92105 +
                        (C554 * C3431 + C92183 * C3875) * C181) *
                           C4097) *
                          C92171 +
                      ((C3276 + C3266) * C4099 + (C3275 + C3263) * C4098 +
                       ((C554 * C1471 + C92183 * C1854) * C92105 +
                        (C554 * C1389 + C92183 * C1788) * C181) *
                           C4097) *
                          C92336) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C181 +
                       (C554 * C182 + C92183 * C641) * C92105) *
                          C92067 * C19667 +
                      (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
                      (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
                      (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
                         C1983 -
                     ((C15930 * C92105 + C15841 * C181) * C92067 * C19670 +
                      (C15123 + C15122) * C92067 * C19669 +
                      (C4711 + C4710) * C92067 * C19668 +
                      (C664 + C648) * C92067 * C19667) *
                         C1984) *
                        C2709 +
                    (((C3263 + C3275) * C92067 * C19667 +
                      (C8193 + C8201) * C92067 * C19668 +
                      (C18525 + C18529) * C92067 * C19669 +
                      ((C554 * C18733 + C92183 * C19393) * C181 +
                       (C554 * C18863 + C92183 * C19505) * C92105) *
                          C92067 * C19670) *
                         C1984 -
                     (((C554 * C18862 + C92183 * C19504) * C92105 +
                       (C554 * C18732 + C92183 * C19392) * C181) *
                          C92067 * C19670 +
                      (C19509 * C92105 + C19404 * C181) * C92067 * C19669 +
                      (C9194 * C92105 + C9088 * C181) * C92067 * C19668 +
                      ((C554 * C1471 + C92183 * C1854) * C92105 +
                       (C554 * C1389 + C92183 * C1788) * C181) *
                          C92067 * C19667) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C2849 +
                       (C554 * C245 + C92183 * C719) * C2709 -
                       (C554 * C1389 + C92183 * C1788) * C2850 -
                       (C554 * C1540 + C92183 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C4098 +
                      (C3350 + C3351 - C3352 - C3364) * C4099) *
                         C92336 +
                     ((C5444 * C2849 + C5638 * C2709 -
                       (C554 * C3431 + C92183 * C3875) * C2850 -
                       (C554 * C3587 + C92183 * C4019) * C2710) *
                          C4097 +
                      (C8301 + C8302 - C8303 - C8313) * C4098 +
                      (C8306 + C8307 - C8308 - C8314) * C4099) *
                         C92171) *
                        C92105 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C4097 +
                      (C3352 - (C3351 + C3350) + C3364) * C4098 +
                      (C3357 - (C3356 + C3355) + C3365) * C4099) *
                         C92336 +
                     ((C8303 - (C8302 + C8301) + C8313) * C4097 +
                      (C8308 - (C8307 + C8306) + C8314) * C4098 +
                      ((C554 * C3434 + C92183 * C3878) * C2850 -
                       (C2638 * C2709 + C2472 * C2849) +
                       (C554 * C3590 + C92183 * C4022) * C2710) *
                          C4099) *
                         C92171) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C2849 +
                      (C554 * C245 + C92183 * C719) * C2709 -
                      (C554 * C1389 + C92183 * C1788) * C2850 -
                      (C554 * C1540 + C92183 * C1909) * C2710) *
                         C92067 * C19667 +
                     (C9296 + C9297 - C9298 - C9302) * C92067 * C19668 +
                     (C19610 + C19611 - C19612 - C19616) * C92067 * C19669 +
                     (C15843 * C2849 + C16018 * C2709 -
                      (C554 * C18732 + C92183 * C19392) * C2850 -
                      (C554 * C18976 + C92183 * C19607) * C2710) *
                         C92067 * C19670) *
                        C92105 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C92067 * C19667 +
                     (C8303 - (C8302 + C8301) + C8313) * C92067 * C19668 +
                     (C18630 - (C18629 + C18628) + C18634) * C92067 * C19669 +
                     ((C554 * C18733 + C92183 * C19393) * C2850 -
                      (C16017 * C2709 + C15841 * C2849) +
                      (C554 * C18977 + C92183 * C19608) * C2710) *
                         C92067 * C19670) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
            C4104 * C119 + C4099 * C127) *
               C93 -
           (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
            C4102 * C108 + C4097 * C114) *
               C105 -
           (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
            C4102 * C118 + C4097 * C126) *
               C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
            C4104 * C111 + C4099 * C121) *
               C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
            C4104 * C122 + C4099 * C129) *
               C95) *
              C92336 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
            C4104 * C803 + C4099 * C815) *
               C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C4098 * C828 +
            C4104 * C811 + C4099 * C827) *
               C93 -
           (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
            C4102 * C804 + C4097 * C816) *
               C105 -
           (C4104 * C810 + C4099 * C826 + C4103 * C811 + C4098 * C827 +
            C4102 * C812 + C4097 * C828) *
               C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
            C4104 * C1989 + C4099 * C1990) *
               C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C4098 * C826 +
            C4104 * C1991 + C4099 * C1992) *
               C95) *
              C92171) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92336 +
           ((C4902 + C4903 + C4904) * C801 + (C4905 + C4906 + C4907) * C92084) *
               C92171) *
              C92183 * C92116 * C798 -
          (((C4908 + C4909 + C4910) * C92084 + (C4911 + C4912 + C4913) * C801) *
               C92171 +
           ((C4907 + C4906 + C4905) * C92084 + (C4904 + C4903 + C4902) * C801) *
               C92336) *
              C92183 * C92116 * C799 +
          (((C4913 + C4912 + C4911) * C801 + (C4910 + C4909 + C4908) * C92084) *
               C92336 +
           ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
             C4104 * C4867 + C4099 * C4870) *
                C801 +
            (C4102 * C4871 + C4097 * C4874 + C4103 * C4872 + C4098 * C4875 +
             C4104 * C4873 + C4099 * C4876) *
                C92084) *
               C92171) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C104 +
           (C19671 * C117 + C92067 * C125) * C93 -
           (C19671 * C108 + C92067 * C114) * C105 -
           (C19671 * C118 + C92067 * C126) * C94 +
           (C19671 * C109 + C92067 * C115) * C106 +
           (C19671 * C119 + C92067 * C127) * C95) *
              C19667 +
          ((C19671 * C805 + C92067 * C817) * C104 +
           (C19671 * C813 + C92067 * C829) * C93 -
           (C19671 * C804 + C92067 * C816) * C105 -
           (C19671 * C812 + C92067 * C828) * C94 +
           (C19671 * C803 + C92067 * C815) * C106 +
           (C19671 * C811 + C92067 * C827) * C95) *
              C19668 +
          ((C19671 * C806 + C92067 * C818) * C104 +
           (C19671 * C822 + C92067 * C830) * C93 -
           (C19671 * C807 + C92067 * C819) * C105 -
           (C19671 * C823 + C92067 * C831) * C94 +
           (C19671 * C808 + C92067 * C820) * C106 +
           (C19671 * C824 + C92067 * C832) * C95) *
              C19669 +
          ((C19671 * C4865 + C92067 * C4868) * C104 +
           (C19671 * C4871 + C92067 * C4874) * C93 -
           (C19671 * C4866 + C92067 * C4869) * C105 -
           (C19671 * C4872 + C92067 * C4875) * C94 +
           (C19671 * C4867 + C92067 * C4870) * C106 +
           (C19671 * C4873 + C92067 * C4876) * C95) *
              C19670) *
         C92183 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C801 +
            (C19671 * C117 + C92067 * C125) * C92084) *
               C19667 +
           (C20155 + C20156) * C19668 + C20163 * C19669 + C20164 * C19670) *
              C92183 * C92116 * C798 -
          ((C20161 + C20162) * C19670 + (C20160 + C20159) * C19669 +
           (C20158 + C20157) * C19668 + (C20156 + C20155) * C19667) *
              C92183 * C92116 * C799 +
          (C20163 * C19667 + C20164 * C19668 + (C20162 + C20161) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C801 +
            (C19671 * C20128 + C92067 * C20129) * C92084) *
               C19670) *
              C92183 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92336 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
             C4104 * C803 + C4099 * C815) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C4098 * C897 +
             C4104 * C888 + C4099 * C896) *
                C92105) *
               C92171) *
              C92183 * C93 -
          (((C4104 * C887 + C4099 * C895 + C4103 * C888 + C4098 * C896 +
             C4102 * C889 + C4097 * C897) *
                C92105 +
            (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
             C4102 * C804 + C4097 * C816) *
                C181) *
               C92171 +
           ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
             C4102 * C183 + C4097 * C189) *
                C92105 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C181) *
               C92336) *
              C92183 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
             C4104 * C186 + C4099 * C192) *
                C92105) *
               C92336 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
             C4104 * C1989 + C4099 * C1990) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C4098 * C895 +
             C4104 * C2061 + C4099 * C2062) *
                C92105) *
               C92171) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
            C4104 * C184 + C4099 * C190) *
               C798 -
           (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
           (C4913 + C4912 + C4911) * C886 + (C5009 + C5010 + C5011) * C800) *
              C92336 +
          ((C4902 + C4903 + C4904) * C884 + (C5008 + C5007 + C5006) * C798 -
           (C4911 + C4912 + C4913) * C885 - (C5011 + C5010 + C5009) * C799 +
           (C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
            C4104 * C4867 + C4099 * C4870) *
               C886 +
           (C4102 * C4987 + C4097 * C4990 + C4103 * C4988 + C4098 * C4991 +
            C4104 * C4989 + C4099 * C4992) *
               C800) *
              C92171) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C181 +
            (C19671 * C182 + C92067 * C188) * C92105) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C181 +
            (C19671 * C890 + C92067 * C898) * C92105) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C181 +
            (C19671 * C891 + C92067 * C899) * C92105) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C181 +
            (C19671 * C4987 + C92067 * C4990) * C92105) *
               C19670) *
              C92183 * C93 -
          (((C19671 * C4988 + C92067 * C4991) * C92105 +
            (C19671 * C4866 + C92067 * C4869) * C181) *
               C19670 +
           ((C19671 * C892 + C92067 * C900) * C92105 +
            (C19671 * C807 + C92067 * C819) * C181) *
               C19669 +
           ((C19671 * C889 + C92067 * C897) * C92105 +
            (C19671 * C804 + C92067 * C816) * C181) *
               C19668 +
           ((C19671 * C183 + C92067 * C189) * C92105 +
            (C19671 * C108 + C92067 * C114) * C181) *
               C19667) *
              C92183 * C94 +
          (((C19671 * C109 + C92067 * C115) * C181 +
            (C19671 * C184 + C92067 * C190) * C92105) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C181 +
            (C19671 * C888 + C92067 * C896) * C92105) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C181 +
            (C19671 * C893 + C92067 * C901) * C92105) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C181 +
            (C19671 * C4989 + C92067 * C4992) * C92105) *
               C19670) *
              C92183 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19671 * C107 + C92067 * C113) * C884 +
           (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
           C20225 * C799 + C20149 * C886 + C20226 * C800) *
              C19667 +
          (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
           C20151 * C886 + C20227 * C800) *
              C19668 +
          (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
           C20154 * C886 + C20228 * C800) *
              C19669 +
          (C20151 * C884 + C20227 * C798 - C20154 * C885 - C20228 * C799 +
           (C19671 * C20126 + C92067 * C20127) * C886 +
           (C19671 * C20214 + C92067 * C20215) * C800) *
              C19670) *
         C92183 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92336 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C4098 * C816 +
             C4104 * C803 + C4099 * C815) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C4098 * C963 +
             C4104 * C954 + C4099 * C962) *
                C92116) *
               C92171) *
              C92183 * C92105 * C93 -
          (((C4104 * C953 + C4099 * C961 + C4103 * C954 + C4098 * C962 +
             C4102 * C955 + C4097 * C963) *
                C92116 +
            (C4104 * C802 + C4099 * C814 + C4103 * C803 + C4098 * C815 +
             C4102 * C804 + C4097 * C816) *
                C244) *
               C92171 +
           ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
             C4102 * C246 + C4097 * C252) *
                C92116 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C244) *
               C92336) *
              C92183 * C92105 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
             C4104 * C249 + C4099 * C255) *
                C92116) *
               C92336 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C4098 * C814 +
             C4104 * C1989 + C4099 * C1990) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C4098 * C961 +
             C4104 * C2129 + C4099 * C2130) *
                C92116) *
               C92171) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92336 +
           ((C4902 + C4903 + C4904) * C244 + (C5104 + C5105 + C5106) * C92116) *
               C92171) *
              C92183 * C798 -
          (((C5107 + C5108 + C5109) * C92116 + (C4911 + C4912 + C4913) * C244) *
               C92171 +
           ((C5106 + C5105 + C5104) * C92116 + (C4904 + C4903 + C4902) * C244) *
               C92336) *
              C92183 * C799 +
          (((C4913 + C4912 + C4911) * C244 + (C5109 + C5108 + C5107) * C92116) *
               C92336 +
           ((C4102 * C4865 + C4097 * C4868 + C4103 * C4866 + C4098 * C4869 +
             C4104 * C4867 + C4099 * C4870) *
                C244 +
            (C4102 * C5085 + C4097 * C5088 + C4103 * C5086 + C4098 * C5089 +
             C4104 * C5087 + C4099 * C5090) *
                C92116) *
               C92171) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           ((C19671 * C805 + C92067 * C817) * C244 +
            (C19671 * C956 + C92067 * C964) * C92116) *
               C19668 +
           ((C19671 * C806 + C92067 * C818) * C244 +
            (C19671 * C957 + C92067 * C965) * C92116) *
               C19669 +
           ((C19671 * C4865 + C92067 * C4868) * C244 +
            (C19671 * C5085 + C92067 * C5088) * C92116) *
               C19670) *
              C92183 * C92105 * C93 -
          (((C19671 * C5086 + C92067 * C5089) * C92116 +
            (C19671 * C4866 + C92067 * C4869) * C244) *
               C19670 +
           ((C19671 * C958 + C92067 * C966) * C92116 +
            (C19671 * C807 + C92067 * C819) * C244) *
               C19669 +
           ((C19671 * C955 + C92067 * C963) * C92116 +
            (C19671 * C804 + C92067 * C816) * C244) *
               C19668 +
           ((C19671 * C246 + C92067 * C252) * C92116 +
            (C19671 * C108 + C92067 * C114) * C244) *
               C19667) *
              C92183 * C92105 * C94 +
          (((C19671 * C109 + C92067 * C115) * C244 +
            (C19671 * C247 + C92067 * C253) * C92116) *
               C19667 +
           ((C19671 * C803 + C92067 * C815) * C244 +
            (C19671 * C954 + C92067 * C962) * C92116) *
               C19668 +
           ((C19671 * C808 + C92067 * C820) * C244 +
            (C19671 * C959 + C92067 * C967) * C92116) *
               C19669 +
           ((C19671 * C4867 + C92067 * C4870) * C244 +
            (C19671 * C5087 + C92067 * C5090) * C92116) *
               C19670) *
              C92183 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C244 +
            (C19671 * C245 + C92067 * C251) * C92116) *
               C19667 +
           (C20281 + C20297) * C19668 + C20301 * C19669 + C20302 * C19670) *
              C92183 * C798 -
          ((C20300 + C20292) * C19670 + (C20299 + C20287) * C19669 +
           (C20298 + C20284) * C19668 + (C20297 + C20281) * C19667) *
              C92183 * C799 +
          (C20301 * C19667 + C20302 * C19668 + (C20292 + C20300) * C19669 +
           ((C19671 * C20126 + C92067 * C20127) * C244 +
            (C19671 * C20278 + C92067 * C20279) * C92116) *
               C19670) *
              C92183 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C104 +
           (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
               C93 -
           (C4354 + C4355) * C105 - (C4356 + C4357) * C94 + C4366 * C106 +
           C4367 * C95) *
              C92183 * C4097 +
          ((C4355 + C4354) * C104 + (C4357 + C4356) * C93 -
           (C4359 + C4358) * C105 - (C4361 + C4360) * C94 +
           (C4362 + C4363) * C106 + (C4364 + C4365) * C95) *
              C92183 * C4098 +
          (C4366 * C104 + C4367 * C93 - (C4363 + C4362) * C105 -
           (C4365 + C4364) * C94 +
           (C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
               C106 +
           (C4327 * C122 + C92336 * C318 + C4328 * C1991 + C92171 * C2198) *
               C95) *
              C92183 * C4099) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C801 +
            (C4327 * C117 + C92336 * C314 + C4328 * C813 + C92171 * C1030) *
                C92084) *
               C92183 * C4097 +
           ((C4355 + C4354) * C801 + (C4357 + C4356) * C92084) * C92183 *
               C4098 +
           (C4366 * C801 + C4367 * C92084) * C92183 * C4099) *
              C92116 * C798 -
          (((C4328 * C824 + C92171 * C1033 + C4327 * C811 + C92336 * C1028) *
                C92084 +
            (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                C801) *
               C92183 * C4099 +
           ((C4328 * C823 + C92171 * C1032 + C4327 * C812 + C92336 * C1029) *
                C92084 +
            (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                C801) *
               C92183 * C4098 +
           ((C4328 * C822 + C92171 * C1031 + C4327 * C813 + C92336 * C1030) *
                C92084 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C801) *
               C92183 * C4097) *
              C92116 * C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C801 +
            (C4327 * C822 + C92336 * C1031 + C4328 * C4871 + C92171 * C5186) *
                C92084) *
               C92183 * C4097 +
           ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C801 +
            (C4327 * C823 + C92336 * C1032 + C4328 * C4872 + C92171 * C5187) *
                C92084) *
               C92183 * C4098 +
           ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
                C801 +
            (C4327 * C824 + C92336 * C1033 + C4328 * C4873 + C92171 * C5188) *
                C92084) *
               C92183 * C4099) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C104 +
          (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
           C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
              C93 -
          (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
           C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
              C105 -
          (C19825 * C4872 + C19670 * C5187 + C19824 * C823 + C19669 * C1032 +
           C19823 * C812 + C19668 * C1029 + C19822 * C118 + C19667 * C315) *
              C94 +
          (C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
           C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
              C106 +
          (C19822 * C119 + C19667 * C316 + C19823 * C811 + C19668 * C1028 +
           C19824 * C824 + C19669 * C1033 + C19825 * C4873 + C19670 * C5188) *
              C95) *
         C92183 * C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C801 +
           (C19822 * C117 + C19667 * C314 + C19823 * C813 + C19668 * C1030 +
            C19824 * C822 + C19669 * C1031 + C19825 * C4871 + C19670 * C5186) *
               C92084) *
              C92183 * C92067 * C92116 * C798 -
          ((C19825 * C15277 + C19670 * C15595 + C19824 * C4871 +
            C19669 * C5186 + C19823 * C822 + C19668 * C1031 + C19822 * C813 +
            C19667 * C1030) *
               C92084 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C801) *
              C92183 * C92067 * C92116 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C801 +
           (C19822 * C822 + C19667 * C1031 + C19823 * C4871 + C19668 * C5186 +
            C19824 * C15277 + C19669 * C15595 + C19825 * C20128 +
            C19670 * C20353) *
               C92084) *
              C92183 * C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C181 +
            (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
                C92105) *
               C92183 * C4097 +
           ((C4355 + C4354) * C181 + (C4455 + C4456) * C92105) * C92183 *
               C4098 +
           C4464 * C4099) *
              C93 -
          (((C4459 + C4460) * C92105 + (C4363 + C4362) * C181) * C92183 *
               C4099 +
           ((C4458 + C4457) * C92105 + (C4359 + C4358) * C181) * C92183 *
               C4098 +
           ((C4456 + C4455) * C92105 + (C4354 + C4355) * C181) * C92183 *
               C4097) *
              C94 +
          (C4464 * C4097 +
           ((C4362 + C4363) * C181 + (C4460 + C4459) * C92105) * C92183 *
               C4098 +
           ((C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                C181 +
            (C4327 * C186 + C92336 * C398 + C4328 * C2061 + C92171 * C2283) *
                C92105) *
               C92183 * C4099) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
               C884 +
           (C4327 * C182 + C92336 * C394 + C4328 * C890 + C92171 * C1085) *
               C798 -
           (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
               C885 -
           (C4328 * C891 + C92171 * C1086 + C4327 * C890 + C92336 * C1085) *
               C799 +
           (C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
               C886 +
           (C4327 * C891 + C92336 * C1086 + C4328 * C4987 + C92171 * C5263) *
               C800) *
              C92183 * C4097 +
          ((C4355 + C4354) * C884 + (C4455 + C4456) * C798 -
           (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
               C885 -
           (C4328 * C892 + C92171 * C1088 + C4327 * C889 + C92336 * C1087) *
               C799 +
           (C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
               C886 +
           (C4327 * C892 + C92336 * C1088 + C4328 * C4988 + C92171 * C5264) *
               C800) *
              C92183 * C4098 +
          (C4366 * C884 + C4461 * C798 -
           (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
               C885 -
           (C4328 * C893 + C92171 * C1090 + C4327 * C888 + C92336 * C1089) *
               C799 +
           (C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
               C886 +
           (C4327 * C893 + C92336 * C1090 + C4328 * C4989 + C92171 * C5265) *
               C800) *
              C92183 * C4099) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C181 +
           (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
            C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
               C92105) *
              C92183 * C92067 * C93 -
          ((C19825 * C4988 + C19670 * C5264 + C19824 * C892 + C19669 * C1088 +
            C19823 * C889 + C19668 * C1087 + C19822 * C183 + C19667 * C395) *
               C92105 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C181) *
              C92183 * C92067 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C181 +
           (C19822 * C184 + C19667 * C396 + C19823 * C888 + C19668 * C1089 +
            C19824 * C893 + C19669 * C1090 + C19825 * C4989 + C19670 * C5265) *
               C92105) *
              C92183 * C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
           C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
              C884 +
          (C19822 * C182 + C19667 * C394 + C19823 * C890 + C19668 * C1085 +
           C19824 * C891 + C19669 * C1086 + C19825 * C4987 + C19670 * C5263) *
              C798 -
          (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 + C19669 * C5183 +
           C19823 * C806 + C19668 * C1023 + C19822 * C805 + C19667 * C1022) *
              C885 -
          (C19825 * C15396 + C19670 * C15671 + C19824 * C4987 + C19669 * C5263 +
           C19823 * C891 + C19668 * C1086 + C19822 * C890 + C19667 * C1085) *
              C799 +
          (C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
           C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
           C19670 * C20352) *
              C886 +
          (C19822 * C891 + C19667 * C1086 + C19823 * C4987 + C19668 * C5263 +
           C19824 * C15396 + C19669 * C15671 + C19825 * C20214 +
           C19670 * C20404) *
              C800) *
         C92183 * C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C4097 +
           ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
               C4098 +
           C4561 * C4099) *
              C92105 * C93 -
          (((C4556 + C4557) * C92116 + (C4363 + C4362) * C244) * C92183 *
               C4099 +
           ((C4555 + C4554) * C92116 + (C4359 + C4358) * C244) * C92183 *
               C4098 +
           ((C4553 + C4552) * C92116 + (C4354 + C4355) * C244) * C92183 *
               C4097) *
              C92105 * C94 +
          (C4561 * C4097 +
           ((C4362 + C4363) * C244 + (C4557 + C4556) * C92116) * C92183 *
               C4098 +
           ((C4327 * C111 + C92336 * C312 + C4328 * C1989 + C92171 * C2197) *
                C244 +
            (C4327 * C249 + C92336 * C478 + C4328 * C2129 + C92171 * C2371) *
                C92116) *
               C92183 * C4099) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4327 * C107 + C92336 * C308 + C4328 * C805 + C92171 * C1022) *
                C244 +
            (C4327 * C245 + C92336 * C474 + C4328 * C956 + C92171 * C1146) *
                C92116) *
               C92183 * C4097 +
           ((C4355 + C4354) * C244 + (C4552 + C4553) * C92116) * C92183 *
               C4098 +
           C4561 * C4099) *
              C798 -
          (((C4328 * C959 + C92171 * C1149 + C4327 * C954 + C92336 * C1144) *
                C92116 +
            (C4328 * C808 + C92171 * C1025 + C4327 * C803 + C92336 * C1020) *
                C244) *
               C92183 * C4099 +
           ((C4328 * C958 + C92171 * C1148 + C4327 * C955 + C92336 * C1145) *
                C92116 +
            (C4328 * C807 + C92171 * C1024 + C4327 * C804 + C92336 * C1021) *
                C244) *
               C92183 * C4098 +
           ((C4328 * C957 + C92171 * C1147 + C4327 * C956 + C92336 * C1146) *
                C92116 +
            (C4328 * C806 + C92171 * C1023 + C4327 * C805 + C92336 * C1022) *
                C244) *
               C92183 * C4097) *
              C799 +
          (((C4327 * C806 + C92336 * C1023 + C4328 * C4865 + C92171 * C5183) *
                C244 +
            (C4327 * C957 + C92336 * C1147 + C4328 * C5085 + C92171 * C5340) *
                C92116) *
               C92183 * C4097 +
           ((C4327 * C807 + C92336 * C1024 + C4328 * C4866 + C92171 * C5184) *
                C244 +
            (C4327 * C958 + C92336 * C1148 + C4328 * C5086 + C92171 * C5341) *
                C92116) *
               C92183 * C4098 +
           ((C4327 * C808 + C92336 * C1025 + C4328 * C4867 + C92171 * C5185) *
                C244 +
            (C4327 * C959 + C92336 * C1149 + C4328 * C5087 + C92171 * C5342) *
                C92116) *
               C92183 * C4099) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C92105 * C93 -
          ((C19825 * C5086 + C19670 * C5341 + C19824 * C958 + C19669 * C1148 +
            C19823 * C955 + C19668 * C1145 + C19822 * C246 + C19667 * C475) *
               C92116 +
           (C19825 * C4866 + C19670 * C5184 + C19824 * C807 + C19669 * C1024 +
            C19823 * C804 + C19668 * C1021 + C19822 * C108 + C19667 * C309) *
               C244) *
              C92183 * C92067 * C92105 * C94 +
          ((C19822 * C109 + C19667 * C310 + C19823 * C803 + C19668 * C1020 +
            C19824 * C808 + C19669 * C1025 + C19825 * C4867 + C19670 * C5185) *
               C244 +
           (C19822 * C247 + C19667 * C476 + C19823 * C954 + C19668 * C1144 +
            C19824 * C959 + C19669 * C1149 + C19825 * C5087 + C19670 * C5342) *
               C92116) *
              C92183 * C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19822 * C107 + C19667 * C308 + C19823 * C805 + C19668 * C1022 +
            C19824 * C806 + C19669 * C1023 + C19825 * C4865 + C19670 * C5183) *
               C244 +
           (C19822 * C245 + C19667 * C474 + C19823 * C956 + C19668 * C1146 +
            C19824 * C957 + C19669 * C1147 + C19825 * C5085 + C19670 * C5340) *
               C92116) *
              C92183 * C92067 * C798 -
          ((C19825 * C15493 + C19670 * C15747 + C19824 * C5085 +
            C19669 * C5340 + C19823 * C957 + C19668 * C1147 + C19822 * C956 +
            C19667 * C1146) *
               C92116 +
           (C19825 * C15273 + C19670 * C15593 + C19824 * C4865 +
            C19669 * C5183 + C19823 * C806 + C19668 * C1023 + C19822 * C805 +
            C19667 * C1022) *
               C244) *
              C92183 * C92067 * C799 +
          ((C19822 * C806 + C19667 * C1023 + C19823 * C4865 + C19668 * C5183 +
            C19824 * C15273 + C19669 * C15593 + C19825 * C20126 +
            C19670 * C20352) *
               C244 +
           (C19822 * C957 + C19667 * C1147 + C19823 * C5085 + C19668 * C5340 +
            C19824 * C15493 + C19669 * C15747 + C19825 * C20278 +
            C19670 * C20455) *
               C92116) *
              C92183 * C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C104 +
                      (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                      C585 * C94 + C586 * C106 + C587 * C95) *
                         C4097 +
                     (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
                      C588 * C106 + C589 * C95) *
                         C4098 +
                     (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
                      C590 * C106 + C591 * C95) *
                         C4099) *
                        C92336 +
                    (((C554 * C805 + C92183 * C1204) * C104 +
                      (C554 * C813 + C92183 * C1212) * C93 - C2468 * C105 -
                      C2469 * C94 + C2470 * C106 + C2471 * C95) *
                         C4097 +
                     (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
                      C2472 * C106 + C2473 * C95) *
                         C4098 +
                     (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
                      (C554 * C1989 + C92183 * C2453) * C106 +
                      (C554 * C1991 + C92183 * C2454) * C95) *
                         C4099) *
                        C92171) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92183 * C555) * C801 +
                       (C554 * C117 + C92183 * C561) * C92084) *
                          C4097 +
                      (C584 * C801 + C585 * C92084) * C4098 +
                      (C586 * C801 + C587 * C92084) * C4099) *
                         C92336 +
                     ((C5452 + C5453) * C4097 + (C5428 + C5429) * C4098 +
                      (C5430 + C5431) * C4099) *
                         C92171) *
                        C92116 * C798 -
                    (((C5454 + C5455) * C4099 + (C5456 + C5457) * C4098 +
                      (C5458 + C5459) * C4097) *
                         C92171 +
                     ((C5431 + C5430) * C4099 + (C5429 + C5428) * C4098 +
                      (C5453 + C5452) * C4097) *
                         C92336) *
                        C92116 * C799 +
                    (((C5459 + C5458) * C4097 + (C5457 + C5456) * C4098 +
                      (C5455 + C5454) * C4099) *
                         C92336 +
                     (((C554 * C4865 + C92183 * C5417) * C801 +
                       (C554 * C4871 + C92183 * C5420) * C92084) *
                          C4097 +
                      ((C554 * C4866 + C92183 * C5418) * C801 +
                       (C554 * C4872 + C92183 * C5421) * C92084) *
                          C4098 +
                      ((C554 * C4867 + C92183 * C5419) * C801 +
                       (C554 * C4873 + C92183 * C5422) * C92084) *
                          C4099) *
                         C92171) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C554 * C107 + C92183 * C555) * C104 +
                     (C554 * C117 + C92183 * C561) * C93 - C584 * C105 -
                     C585 * C94 + C586 * C106 + C587 * C95) *
                        C92067 * C19667 +
                    (C5444 * C104 + C5445 * C93 - C2468 * C105 - C2469 * C94 +
                     C2470 * C106 + C2471 * C95) *
                        C92067 * C19668 +
                    (C5451 * C104 + C5450 * C93 - C5449 * C105 - C5448 * C94 +
                     C5447 * C106 + C5446 * C95) *
                        C92067 * C19669 +
                    (C15843 * C104 + C15842 * C93 - C15841 * C105 -
                     C15840 * C94 + (C554 * C4867 + C92183 * C5419) * C106 +
                     (C554 * C4873 + C92183 * C5422) * C95) *
                        C92067 * C19670) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92183 * C555) * C801 +
                      (C554 * C117 + C92183 * C561) * C92084) *
                         C92067 * C19667 +
                     (C5452 + C5453) * C92067 * C19668 + C20509 * C19669 +
                     C20515 * C19670) *
                        C92116 * C798 -
                    ((C20518 + C20519) * C92067 * C19670 +
                     (C15847 + C15848) * C92067 * C19669 +
                     (C5458 + C5459) * C92067 * C19668 +
                     (C5453 + C5452) * C92067 * C19667) *
                        C92116 * C799 +
                    (C20509 * C19667 + C20515 * C19668 +
                     (C20519 + C20518) * C92067 * C19669 +
                     ((C554 * C20126 + C92183 * C20506) * C801 +
                      (C554 * C20128 + C92183 * C20507) * C92084) *
                         C92067 * C19670) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C181 +
             (C554 * C182 + C92183 * C641) * C92105) *
                C4097 +
            (C648 + C664) * C4098 + C668 * C4099) *
               C92336 +
           (((C554 * C805 + C92183 * C1204) * C181 +
             (C554 * C890 + C92183 * C1267) * C92105) *
                C4097 +
            (C4710 + C4711) * C4098 + C4716 * C4099) *
               C92171) *
              C93 -
          (((C4714 + C4715) * C4099 + (C4713 + C4712) * C4098 +
            (C4711 + C4710) * C4097) *
               C92171 +
           ((C666 + C654) * C4099 + (C665 + C651) * C4098 +
            (C664 + C648) * C4097) *
               C92336) *
              C94 +
          ((C668 * C4097 + C669 * C4098 + (C659 + C667) * C4099) * C92336 +
           (C4716 * C4097 + (C4715 + C4714) * C4098 +
            ((C554 * C1989 + C92183 * C2453) * C181 +
             (C554 * C2061 + C92183 * C2539) * C92105) *
                C4099) *
               C92171) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C884 +
            (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
            C5451 * C886 + C5546 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C5449 * C886 + C5547 * C800) *
               C4098 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C5447 * C886 + C5548 * C800) *
               C4099) *
              C92336 +
          ((C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
            (C554 * C4865 + C92183 * C5417) * C886 +
            (C554 * C4987 + C92183 * C5533) * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C5449 * C885 - C5547 * C799 +
            (C554 * C4866 + C92183 * C5418) * C886 +
            (C554 * C4988 + C92183 * C5534) * C800) *
               C4098 +
           (C2470 * C884 + C2557 * C798 - C5447 * C885 - C5548 * C799 +
            (C554 * C4867 + C92183 * C5419) * C886 +
            (C554 * C4989 + C92183 * C5535) * C800) *
               C4099) *
              C92171) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C181 +
            (C554 * C182 + C92183 * C641) * C92105) *
               C92067 * C19667 +
           (C5444 * C181 + C5545 * C92105) * C92067 * C19668 +
           (C5451 * C181 + C5546 * C92105) * C92067 * C19669 +
           (C15843 * C181 + C15929 * C92105) * C92067 * C19670) *
              C93 -
          ((C15930 * C92105 + C15841 * C181) * C92067 * C19670 +
           (C15123 + C15122) * C92067 * C19669 +
           (C4711 + C4710) * C92067 * C19668 +
           (C664 + C648) * C92067 * C19667) *
              C94 +
          (C668 * C92067 * C19667 + C4716 * C92067 * C19668 +
           (C15125 + C15124) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C181 +
            (C554 * C4989 + C92183 * C5535) * C92105) *
               C92067 * C19670) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92183 * C555) * C884 +
           (C554 * C182 + C92183 * C641) * C798 - C5444 * C885 - C5545 * C799 +
           C5451 * C886 + C5546 * C800) *
              C92067 * C19667 +
          (C5444 * C884 + C5545 * C798 - C5451 * C885 - C5546 * C799 +
           C15843 * C886 + C15929 * C800) *
              C92067 * C19668 +
          (C5451 * C884 + C5546 * C798 - C15843 * C885 - C15929 * C799 +
           C20517 * C886 + C20573 * C800) *
              C92067 * C19669 +
          (C15843 * C884 + C15929 * C798 - C20517 * C885 - C20573 * C799 +
           (C554 * C20126 + C92183 * C20506) * C886 +
           (C554 * C20214 + C92183 * C20569) * C800) *
              C92067 * C19670) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C4097 +
            (C726 + C742) * C4098 + C746 * C4099) *
               C92336 +
           (((C554 * C805 + C92183 * C1204) * C244 +
             (C554 * C956 + C92183 * C1328) * C92116) *
                C4097 +
            (C2637 + C2643) * C4098 + C4791 * C4099) *
               C92171) *
              C92105 * C93 -
          (((C2641 + C2631) * C4099 + (C2642 + C2634) * C4098 +
            (C2643 + C2637) * C4097) *
               C92171 +
           ((C744 + C732) * C4099 + (C743 + C729) * C4098 +
            (C742 + C726) * C4097) *
               C92336) *
              C92105 * C94 +
          ((C746 * C4097 + C747 * C4098 + (C737 + C745) * C4099) * C92336 +
           (C4791 * C4097 + (C2631 + C2641) * C4098 +
            ((C554 * C1989 + C92183 * C2453) * C244 +
             (C554 * C2129 + C92183 * C2627) * C92116) *
                C4099) *
               C92171) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92183 * C555) * C244 +
             (C554 * C245 + C92183 * C719) * C92116) *
                C4097 +
            (C726 + C742) * C4098 + C746 * C4099) *
               C92336 +
           ((C5626 + C5642) * C4097 + (C2637 + C2643) * C4098 + C4791 * C4099) *
               C92171) *
              C798 -
          (((C5643 + C5631) * C4099 + (C5644 + C5634) * C4098 +
            (C5645 + C5637) * C4097) *
               C92171 +
           ((C2642 + C2634) * C4099 + (C2643 + C2637) * C4098 +
            (C5642 + C5626) * C4097) *
               C92336) *
              C799 +
          (((C5637 + C5645) * C4097 + (C5634 + C5644) * C4098 +
            (C5631 + C5643) * C4099) *
               C92336 +
           (((C554 * C4865 + C92183 * C5417) * C244 +
             (C554 * C5085 + C92183 * C5622) * C92116) *
                C4097 +
            ((C554 * C4866 + C92183 * C5418) * C244 +
             (C554 * C5086 + C92183 * C5623) * C92116) *
                C4098 +
            ((C554 * C4867 + C92183 * C5419) * C244 +
             (C554 * C5087 + C92183 * C5624) * C92116) *
                C4099) *
               C92171) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C16007 * C92067 * C19669 +
           (C16014 + C16021) * C92067 * C19670) *
              C92105 * C93 -
          ((C16020 + C16011) * C92067 * C19670 + C17698 * C92067 * C19669 +
           C7348 * C92067 * C19668 + (C742 + C726) * C92067 * C19667) *
              C92105 * C94 +
          (C746 * C92067 * C19667 + C4791 * C92067 * C19668 +
           (C5631 + C5643) * C92067 * C19669 +
           ((C554 * C4867 + C92183 * C5419) * C244 +
            (C554 * C5087 + C92183 * C5624) * C92116) *
               C92067 * C19670) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92183 * C555) * C244 +
            (C554 * C245 + C92183 * C719) * C92116) *
               C92067 * C19667 +
           (C5626 + C5642) * C92067 * C19668 + C20625 * C19669 +
           C20630 * C19670) *
              C798 -
          ((C20632 + C20629) * C92067 * C19670 +
           (C16021 + C16014) * C92067 * C19669 +
           (C5645 + C5637) * C92067 * C19668 +
           (C5642 + C5626) * C92067 * C19667) *
              C799 +
          (C20625 * C19667 + C20630 * C19668 +
           (C20629 + C20632) * C92067 * C19669 +
           ((C554 * C20126 + C92183 * C20506) * C244 +
            (C554 * C20278 + C92183 * C20623) * C92116) *
               C92067 * C19670) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                       C4098 * C114 + C4104 * C109 + C4099 * C115) *
                          C1987 +
                      (C4102 * C117 + C4097 * C125 + C4103 * C118 +
                       C4098 * C126 + C4104 * C119 + C4099 * C127) *
                          C1983 -
                      (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                       C4098 * C115 + C4102 * C108 + C4097 * C114) *
                          C1988 -
                      (C4104 * C120 + C4099 * C128 + C4103 * C119 +
                       C4098 * C127 + C4102 * C118 + C4097 * C126) *
                          C1984) *
                         C92157 * C92337 +
                     ((C10845 + C10846 + C10847) * C1987 +
                      (C10848 + C10849 + C10850) * C1983 -
                      (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 +
                       C4098 * C1399 + C4102 * C1388 + C4097 * C1400) *
                          C1988 -
                      (C4104 * C1394 + C4099 * C1410 + C4103 * C1395 +
                       C4098 * C1411 + C4102 * C1396 + C4097 * C1412) *
                          C1984) *
                         C92157 * C92195) *
                        C92116 * C1985 +
                    (((C6472 + C6471 + C6470) * C1988 -
                      ((C4907 + C4906 + C4905) * C1983 +
                       (C4904 + C4903 + C4902) * C1987) +
                      (C6475 + C6474 + C6473) * C1984) *
                         C92157 * C92337 +
                     ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 +
                       C4098 * C3437 + C4104 * C3434 + C4099 * C3438) *
                          C1988 -
                      ((C8437 + C8438 + C8439) * C1983 +
                       (C8440 + C8441 + C8442) * C1987) +
                      (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 +
                       C4098 * C3445 + C4104 * C3442 + C4099 * C3446) *
                          C1984) *
                         C92157 * C92195) *
                        C92116 * C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C14523 +
                      (C21165 + C21166 - C21189 - C21190) * C14524 +
                      (C21171 + C21172 - C21191 - C21192) * C14525) *
                         C92337 +
                     ((C24549 * C1987 + C24550 * C1983 -
                       (C19671 * C1388 + C92067 * C1400) * C1988 -
                       (C19671 * C1396 + C92067 * C1412) * C1984) *
                          C14523 +
                      (C25387 + C25388 - C25403 - C25404) * C14524 +
                      (C25393 + C25394 - C25405 - C25406) * C14525) *
                         C92195) *
                        C92116 * C1985 +
                    (((C21189 - (C21166 + C21165) + C21190) * C14523 +
                      (C21191 - (C21172 + C21171) + C21192) * C14524 +
                      (C21193 - (C21178 + C21177) + C21194) * C14525) *
                         C92337 +
                     ((C25403 - (C25388 + C25387) + C25404) * C14523 +
                      (C25405 - (C25394 + C25393) + C25406) * C14524 +
                      ((C19671 * C18733 + C92067 * C18735) * C1988 -
                       (C22427 * C1983 + C22428 * C1987) +
                       (C19671 * C18737 + C92067 * C18739) * C1984) *
                          C14525) *
                         C92195) *
                        C92116 * C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C2059 +
            (C10949 + C10950 + C10951) * C1985 -
            (C8440 + C8441 + C8442) * C2060 - (C8555 + C8554 + C8553) * C1986) *
               C92157 * C92195) *
              C1983 +
          (((C6472 + C6471 + C6470) * C2060 -
            ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
              C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
              C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6580 + C6581 + C6582) * C1986) *
               C92157 * C92337 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C4098 * C3437 +
             C4104 * C3434 + C4099 * C3438) *
                C2060 -
            ((C4104 * C1468 + C4099 * C1476 + C4103 * C1469 + C4098 * C1477 +
              C4102 * C1470 + C4097 * C1478) *
                 C1985 +
             (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
              C4102 * C1388 + C4097 * C1400) *
                 C2059) +
            (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 + C4098 * C3519 +
             C4104 * C3516 + C4099 * C3520) *
                C1986) *
               C92157 * C92195) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2059 +
             (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
             C20225 * C1986) *
                C14523 +
            (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
             C20226 * C1986) *
                C14524 +
            (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 -
             C20227 * C1986) *
                C14525) *
               C92337 +
           ((C24549 * C2059 + C24659 * C1985 - C22432 * C2060 -
             C22513 * C1986) *
                C14523 +
            (C22432 * C2059 + C22513 * C1985 - C22430 * C2060 -
             C22514 * C1986) *
                C14524 +
            (C22430 * C2059 + C22514 * C1985 - C22428 * C2060 -
             C22515 * C1986) *
                C14525) *
               C92195) *
              C1983 +
          (((C21183 * C2060 -
             ((C19671 * C183 + C92067 * C189) * C1985 +
              (C19671 * C108 + C92067 * C114) * C2059) +
             C21267 * C1986) *
                C14523 +
            (C21185 * C2060 - (C21267 * C1985 + C21183 * C2059) +
             C21268 * C1986) *
                C14524 +
            (C21187 * C2060 - (C21268 * C1985 + C21185 * C2059) +
             C21269 * C1986) *
                C14525) *
               C92337 +
           ((C25399 * C2060 -
             ((C19671 * C1470 + C92067 * C1478) * C1985 +
              (C19671 * C1388 + C92067 * C1400) * C2059) +
             C25509 * C1986) *
                C14523 +
            (C25401 * C2060 - (C25509 * C1985 + C25399 * C2059) +
             C25510 * C1986) *
                C14524 +
            ((C19671 * C18733 + C92067 * C18735) * C2060 -
             (C25510 * C1985 + C25401 * C2059) +
             (C19671 * C18863 + C92067 * C18865) * C1986) *
                C14525) *
               C92195) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                        C4098 * C114 + C4104 * C109 + C4099 * C115) *
                           C244 +
                       (C4102 * C245 + C4097 * C251 + C4103 * C246 +
                        C4098 * C252 + C4104 * C247 + C4099 * C253) *
                           C92116) *
                          C92157 * C92337 +
                      ((C10845 + C10846 + C10847) * C244 +
                       (C11049 + C11048 + C11047) * C92116) *
                          C92157 * C92195) *
                         C1985 -
                     (((C8666 + C8667 + C8668) * C92116 +
                       (C8440 + C8441 + C8442) * C244) *
                          C92157 * C92195 +
                      ((C5106 + C5105 + C5104) * C92116 +
                       (C4904 + C4903 + C4902) * C244) *
                          C92157 * C92337) *
                         C1986) *
                        C1983 +
                    ((((C6472 + C6471 + C6470) * C244 +
                       (C6687 + C6688 + C6689) * C92116) *
                          C92157 * C92337 +
                      ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 +
                        C4098 * C3437 + C4104 * C3434 + C4099 * C3438) *
                           C244 +
                       (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 +
                        C4098 * C3593 + C4104 * C3590 + C4099 * C3594) *
                           C92116) *
                          C92157 * C92195) *
                         C1986 -
                     (((C4104 * C1537 + C4099 * C1545 + C4103 * C1538 +
                        C4098 * C1546 + C4102 * C1539 + C4097 * C1547) *
                           C92116 +
                       (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 +
                        C4098 * C1399 + C4102 * C1388 + C4097 * C1400) *
                           C244) *
                          C92157 * C92195 +
                      ((C4104 * C248 + C4099 * C254 + C4103 * C247 +
                        C4098 * C253 + C4102 * C246 + C4097 * C252) *
                           C92116 +
                       (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                        C4098 * C115 + C4102 * C108 + C4097 * C114) *
                           C244) *
                          C92157 * C92337) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C19671 * C107 + C92067 * C113) * C244 +
                        (C19671 * C245 + C92067 * C251) * C92116) *
                           C14523 +
                       (C20281 + C20297) * C14524 + C20301 * C14525) *
                          C92337 +
                      ((C24549 * C244 + C24753 * C92116) * C14523 +
                       (C23916 + C23917) * C14524 + C23922 * C14525) *
                          C92195) *
                         C1985 -
                     (((C23920 + C23921) * C14525 + (C23919 + C23918) * C14524 +
                       (C23917 + C23916) * C14523) *
                          C92195 +
                      ((C20299 + C20287) * C14525 + (C20298 + C20284) * C14524 +
                       (C20297 + C20281) * C14523) *
                          C92337) *
                         C1986) *
                        C1983 +
                    ((((C21336 + C21348) * C14523 + (C21339 + C21349) * C14524 +
                       (C21342 + C21350) * C14525) *
                          C92337 +
                      ((C25609 + C25617) * C14523 + (C25612 + C25618) * C14524 +
                       ((C19671 * C18733 + C92067 * C18735) * C244 +
                        (C19671 * C18977 + C92067 * C18979) * C92116) *
                           C14525) *
                          C92195) *
                         C1986 -
                     (((C25618 + C25612) * C14525 + (C25617 + C25609) * C14524 +
                       ((C19671 * C1539 + C92067 * C1547) * C92116 +
                        (C19671 * C1388 + C92067 * C1400) * C244) *
                           C14523) *
                          C92195 +
                      ((C21349 + C21339) * C14525 + (C21348 + C21336) * C14524 +
                       ((C19671 * C246 + C92067 * C252) * C92116 +
                        (C19671 * C108 + C92067 * C114) * C244) *
                           C14523) *
                          C92337) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92337 +
            (C11153 * C1987 + C11154 * C1983 - C2934 * C1988 - C2935 * C1984) *
                C92195) *
               C4097 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92337 +
            (C2934 * C1987 + C2935 * C1983 - C2936 * C1988 - C2937 * C1984) *
                C92195) *
               C4098 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C92337 +
            (C2936 * C1987 + C2937 * C1983 - C2938 * C1988 - C2939 * C1984) *
                C92195) *
               C4099) *
              C92116 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92157 * C1030) * C1983 +
              (C307 * C805 + C92157 * C1022) * C1987) +
             C2213 * C1984) *
                C92337 +
            (C11989 * C1988 -
             ((C307 * C3439 + C92157 * C3665) * C1983 +
              (C307 * C3431 + C92157 * C3661) * C1987) +
             C11990 * C1984) *
                C92195) *
               C4097 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C92337 +
            (C11991 * C1988 - (C11990 * C1983 + C11989 * C1987) +
             C11992 * C1984) *
                C92195) *
               C4098 +
           ((C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
                C92337 +
            ((C307 * C3434 + C92157 * C3664) * C1988 -
             (C11992 * C1983 + C11991 * C1987) +
             (C307 * C3442 + C92157 * C3668) * C1984) *
                C92195) *
               C4099) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92337 +
           ((C24859 + C24860 + C24861) * C1987 +
            (C24862 + C24863 + C24864) * C1983 -
            (C18105 + C18104 + C18103) * C1988 -
            (C18108 + C18107 + C18106) * C1984) *
               C92195) *
              C92067 * C92116 * C1985 +
          (((C17172 + C17173 + C17174) * C1988 -
            ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
              C14750 * C813 + C14523 * C1030) *
                 C1983 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C1987) +
            (C17175 + C17176 + C17177) * C1984) *
               C92337 +
           ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 + C14524 * C8767 +
             C14752 * C18733 + C14525 * C19091) *
                C1988 -
            ((C14752 * C18736 + C14525 * C19092 + C14751 * C8418 +
              C14524 * C8769 + C14750 * C3439 + C14523 * C3665) *
                 C1983 +
             (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
              C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                 C1987) +
            (C14750 * C3440 + C14523 * C3666 + C14751 * C8419 + C14524 * C8770 +
             C14752 * C18737 + C14525 * C19093) *
                C1984) *
               C92195) *
              C92067 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C92337 +
                      (C11153 * C2059 + C11258 * C1985 -
                       (C307 * C3431 + C92157 * C3661) * C2060 -
                       (C307 * C3513 + C92157 * C3735) * C1986) *
                          C92195) *
                         C4097 +
                     ((C2285 + C2286 - C2287 - C2303) * C92337 +
                      (C12091 + C12092 - C12093 - C12103) * C92195) *
                         C4098 +
                     ((C2290 + C2291 - C2292 - C2304) * C92337 +
                      (C12096 + C12097 - C12098 - C12104) * C92195) *
                         C4099) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C92337 +
                      (C12093 - (C12092 + C12091) + C12103) * C92195) *
                         C4097 +
                     ((C2292 - (C2291 + C2290) + C2304) * C92337 +
                      (C12098 - (C12097 + C12096) + C12104) * C92195) *
                         C4098 +
                     ((C2297 - (C2296 + C2295) + C2305) * C92337 +
                      ((C307 * C3434 + C92157 * C3664) * C2060 -
                       (C3018 * C1985 + C2938 * C2059) +
                       (C307 * C3516 + C92157 * C3738) * C1986) *
                          C92195) *
                         C4099) *
                        C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92337 +
                     ((C24859 + C24860 + C24861) * C2059 +
                      (C24959 + C24960 + C24961) * C1985 -
                      (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
                       C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                          C2060 -
                      (C14752 * C18862 + C14525 * C19192 + C14751 * C8540 +
                       C14524 * C8870 + C14750 * C3513 + C14523 * C3735) *
                          C1986) *
                         C92195) *
                        C92067 * C1983 +
                    (((C17172 + C17173 + C17174) * C2060 -
                      ((C14878 + C14877 + C14876) * C1985 +
                       (C14778 + C14779 + C14780) * C2059) +
                      (C17284 + C17283 + C17282) * C1986) *
                         C92337 +
                     ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
                       C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                          C2060 -
                      ((C18215 + C18214 + C18213) * C1985 +
                       (C18105 + C18104 + C18103) * C2059) +
                      (C14750 * C3514 + C14523 * C3736 + C14751 * C8541 +
                       C14524 * C8871 + C14752 * C18863 + C14525 * C19193) *
                          C1986) *
                         C92195) *
                        C92067 * C1984) *
                   C92116) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C244 +
              (C307 * C245 + C92157 * C474) * C92116) *
                 C92337 +
             (C11153 * C244 + C11351 * C92116) * C92195) *
                C4097 +
            ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
            C9762 * C4099) *
               C1985 -
           (((C12211 + C12205) * C92195 + (C2386 + C2378) * C92337) * C4099 +
            ((C12212 + C12208) * C92195 + (C2387 + C2381) * C92337) * C4098 +
            (((C307 * C3587 + C92157 * C3805) * C92116 +
              (C307 * C3431 + C92157 * C3661) * C244) *
                 C92195 +
             ((C307 * C956 + C92157 * C1146) * C92116 +
              (C307 * C805 + C92157 * C1022) * C244) *
                 C92337) *
                C4097) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C92337 + (C12208 + C12212) * C92195) * C4097 +
            ((C2378 + C2386) * C92337 + (C12205 + C12211) * C92195) * C4098 +
            ((C2375 + C2385) * C92337 +
             ((C307 * C3434 + C92157 * C3664) * C244 +
              (C307 * C3590 + C92157 * C3808) * C92116) *
                 C92195) *
                C4099) *
               C1986 -
           (((C9758 + C9759) * C92195 + (C499 + C487) * C92337) * C4099 +
            ((C9757 + C9756) * C92195 + (C498 + C484) * C92337) * C4098 +
            ((C9754 + C9753) * C92195 + (C497 + C481) * C92337) * C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C244 +
             (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
              C14752 * C957 + C14525 * C1147) *
                 C92116) *
                C92337 +
            ((C24859 + C24860 + C24861) * C244 +
             (C25055 + C25054 + C25053) * C92116) *
                C92195) *
               C92067 * C1985 -
           (((C14752 * C18976 + C14525 * C19292 + C14751 * C8653 +
              C14524 * C8971 + C14750 * C3587 + C14523 * C3805) *
                 C92116 +
             (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
              C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                 C244) *
                C92195 +
            ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
              C14750 * C956 + C14523 * C1146) *
                 C92116 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C244) *
                C92337) *
               C92067 * C1986) *
              C1983 +
          ((((C17172 + C17173 + C17174) * C244 +
             (C17391 + C17390 + C17389) * C92116) *
                C92337 +
            ((C14750 * C3432 + C14523 * C3662 + C14751 * C8413 +
              C14524 * C8767 + C14752 * C18733 + C14525 * C19091) *
                 C244 +
             (C14750 * C3588 + C14523 * C3806 + C14751 * C8654 +
              C14524 * C8972 + C14752 * C18977 + C14525 * C19293) *
                 C92116) *
                C92195) *
               C92067 * C1986 -
           (((C18320 + C18321 + C18322) * C92116 +
             (C18105 + C18104 + C18103) * C244) *
                C92195 +
            ((C14970 + C14969 + C14968) * C92116 +
             (C14778 + C14779 + C14780) * C244) *
                C92337) *
               C92067 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C4097 +
           ((C9864 + C9863) * C1987 + (C9866 + C9865) * C1983 -
            (C9868 + C9867) * C1988 - (C9870 + C9869) * C1984) *
               C4098 +
           (C9875 * C1987 + C9876 * C1983 - (C9872 + C9871) * C1988 -
            (C9874 + C9873) * C1984) *
               C4099) *
              C92157 * C92116 * C1985 +
          (((C12327 + C12328) * C1988 -
            ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                 C1983 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C1987) +
            (C12329 + C12330) * C1984) *
               C4097 +
           ((C12331 + C12332) * C1988 -
            ((C12330 + C12329) * C1983 + (C12328 + C12327) * C1987) +
            (C12333 + C12334) * C1984) *
               C4098 +
           ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                C1988 -
            ((C12334 + C12333) * C1983 + (C12332 + C12331) * C1987) +
            (C9836 * C810 + C92337 * C1209 + C9837 * C3442 + C92195 * C3882) *
                C1984) *
               C4099) *
              C92157 * C92116 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C92067 * C14523 +
           ((C24243 + C24244) * C1987 + (C24245 + C24246) * C1983 -
            (C12328 + C12327) * C1988 - (C12330 + C12329) * C1984) *
               C92067 * C14524 +
           (C24255 * C1987 + C24256 * C1983 - (C26019 + C26020) * C1988 -
            (C26021 + C26022) * C1984) *
               C92067 * C14525) *
              C92116 * C1985 +
          (((C12327 + C12328) * C1988 -
            ((C24246 + C24245) * C1983 + (C24244 + C24243) * C1987) +
            (C12329 + C12330) * C1984) *
               C92067 * C14523 +
           ((C26020 + C26019) * C1988 -
            ((C24250 + C24249) * C1983 + (C24248 + C24247) * C1987) +
            (C26022 + C26021) * C1984) *
               C92067 * C14524 +
           ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
             C92195 * C19393) *
                C1988 -
            ((C24251 + C24252) * C1983 + (C24253 + C24254) * C1987) +
            (C9836 * C4872 + C92337 * C5421 + C9837 * C18737 +
             C92195 * C19395) *
                C1984) *
               C92067 * C14525) *
              C92116 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C2060 -
            (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
                C1986) *
               C4097 +
           ((C9864 + C9863) * C2059 + (C9964 + C9965) * C1985 -
            (C12328 + C12327) * C2060 - (C12441 + C12442) * C1986) *
               C4098 +
           (C9875 * C2059 + C9970 * C1985 - (C12332 + C12331) * C2060 -
            (C12443 + C12444) * C1986) *
               C4099) *
              C92157 * C1983 +
          (((C12327 + C12328) * C2060 -
            ((C9965 + C9964) * C1985 + (C9863 + C9864) * C2059) +
            (C12442 + C12441) * C1986) *
               C4097 +
           ((C12331 + C12332) * C2060 -
            ((C9967 + C9966) * C1985 + (C9868 + C9867) * C2059) +
            (C12444 + C12443) * C1986) *
               C4098 +
           ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                C2060 -
            ((C9968 + C9969) * C1985 + (C9872 + C9871) * C2059) +
            (C9836 * C887 + C92337 * C1273 + C9837 * C3516 + C92195 * C3952) *
                C1986) *
               C4099) *
              C92157 * C1984) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C24244 + C24243) * C2060 - (C24347 + C24348) * C1986) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2059 + (C24348 + C24347) * C1985 -
            (C24248 + C24247) * C2060 - (C24350 + C24349) * C1986) *
               C92067 * C14524 +
           (C24255 * C2059 + C24353 * C1985 - (C24253 + C24254) * C2060 -
            (C24352 + C24351) * C1986) *
               C92067 * C14525) *
              C1983 +
          (((C12327 + C12328) * C2060 -
            ((C9965 + C9964) * C1985 + (C9863 + C9864) * C2059) +
            (C12442 + C12441) * C1986) *
               C92067 * C14523 +
           ((C26020 + C26019) * C2060 -
            ((C12441 + C12442) * C1985 + (C12328 + C12327) * C2059) +
            (C26125 + C26126) * C1986) *
               C92067 * C14524 +
           ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
             C92195 * C19393) *
                C2060 -
            ((C26126 + C26125) * C1985 + (C26019 + C26020) * C2059) +
            (C9836 * C4988 + C92337 * C5534 + C9837 * C18863 +
             C92195 * C19505) *
                C1986) *
               C92067 * C14525) *
              C1984) *
         C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C4097 +
            ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
            C10068 * C4099) *
               C92157 * C1985 -
           (((C12551 + C12552) * C92116 + (C12332 + C12331) * C244) * C4099 +
            ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C4098 +
            ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                 C92116 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C244) *
                C4097) *
               C92157 * C1986) *
              C1983 +
          ((((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C4097 +
            ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C4098 +
            ((C9836 * C802 + C92337 * C1201 + C9837 * C3434 + C92195 * C3878) *
                 C244 +
             (C9836 * C953 + C92337 * C1325 + C9837 * C3590 + C92195 * C4022) *
                 C92116) *
                C4099) *
               C92157 * C1986 -
           (((C10064 + C10065) * C92116 + (C9872 + C9871) * C244) * C4099 +
            ((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C4098 +
            ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C4097) *
               C92157 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C244 +
             (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                 C92116) *
                C92067 * C14523 +
            ((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C92067 *
                C14524 +
            C24450 * C14525) *
               C1985 -
           (((C24445 + C24446) * C92116 + (C24253 + C24254) * C244) * C92067 *
                C14525 +
            ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C92067 *
                C14524 +
            ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C92067 *
                C14523) *
               C1986) *
              C1983 +
          ((((C12327 + C12328) * C244 + (C12554 + C12553) * C92116) * C92067 *
                C14523 +
            ((C26020 + C26019) * C244 + (C26229 + C26230) * C92116) * C92067 *
                C14524 +
            ((C9836 * C4866 + C92337 * C5418 + C9837 * C18733 +
              C92195 * C19393) *
                 C244 +
             (C9836 * C5086 + C92337 * C5623 + C9837 * C18977 +
              C92195 * C19608) *
                 C92116) *
                C92067 * C14525) *
               C1986 -
           (((C26230 + C26229) * C92116 + (C26019 + C26020) * C244) * C92067 *
                C14525 +
            ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92067 *
                C14524 +
            ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C92067 *
                C14523) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
              C4104 * C109 + C4099 * C115) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
              C4104 * C119 + C4099 * C127) *
                 C92084) *
                C92157 * C92337 +
            ((C10845 + C10846 + C10847) * C801 +
             (C10848 + C10849 + C10850) * C92084) *
                C92157 * C92195) *
               C2709 -
           (((C10851 + C10852 + C10853) * C92084 +
             (C10854 + C10855 + C10856) * C801) *
                C92157 * C92195 +
            ((C10850 + C10849 + C10848) * C92084 +
             (C10847 + C10846 + C10845) * C801) *
                C92157 * C92337) *
               C2710) *
              C1985 +
          ((((C8442 + C8441 + C8440) * C801 +
             (C8439 + C8438 + C8437) * C92084) *
                C92157 * C92337 +
            ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
              C4104 * C5721 + C4099 * C5724) *
                 C801 +
             (C4102 * C5725 + C4097 * C5728 + C4103 * C5726 + C4098 * C5729 +
              C4104 * C5727 + C4099 * C5730) *
                 C92084) *
                C92157 * C92195) *
               C2710 -
           (((C8437 + C8438 + C8439) * C92084 +
             (C8440 + C8441 + C8442) * C801) *
                C92157 * C92195 +
            ((C4907 + C4906 + C4905) * C92084 +
             (C4904 + C4903 + C4902) * C801) *
                C92157 * C92337) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19671 * C107 + C92067 * C113) * C801 +
              (C19671 * C117 + C92067 * C125) * C92084) *
                 C14523 +
             (C20155 + C20156) * C14524 + C20163 * C14525) *
                C92337 +
            ((C24557 + C24558) * C14523 + C27233 * C14524 + C23767 * C14525) *
                C92195) *
               C2709 -
           (((C24559 + C24560) * C14525 + (C24561 + C24562) * C14524 +
             (C24563 + C24564) * C14523) *
                C92195 +
            (C27234 * C14525 + C27235 * C14524 + (C24558 + C24557) * C14523) *
                C92337) *
               C2710) *
              C1985 +
          (((C27233 * C14523 + C23767 * C14524 + (C22434 + C22433) * C14525) *
                C92337 +
            ((C24562 + C24561) * C14523 + (C24560 + C24559) * C14524 +
             ((C19671 * C20682 + C92067 * C20683) * C801 +
              (C19671 * C20684 + C92067 * C20685) * C92084) *
                 C14525) *
                C92195) *
               C2710 -
           (((C22433 + C22434) * C14525 + C27234 * C14524 + C27235 * C14523) *
                C92195 +
            ((C20160 + C20159) * C14525 + (C20158 + C20157) * C14524 +
             (C20156 + C20155) * C14523) *
                C92337) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C1985 -
            (C4904 + C4903 + C4902) * C2060 - (C5006 + C5007 + C5008) * C1986) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C2059 +
            (C10949 + C10950 + C10951) * C1985 -
            (C8440 + C8441 + C8442) * C2060 - (C8555 + C8554 + C8553) * C1986) *
               C92157 * C92195) *
              C92084 * C2709 +
          (((C8442 + C8441 + C8440) * C2060 -
            ((C10951 + C10950 + C10949) * C1985 +
             (C10847 + C10846 + C10845) * C2059) +
            (C8553 + C8554 + C8555) * C1986) *
               C92157 * C92337 +
           ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 + C4098 * C5723 +
             C4104 * C5721 + C4099 * C5724) *
                C2060 -
            ((C10952 + C10953 + C10954) * C1985 +
             (C10854 + C10855 + C10856) * C2059) +
            (C4102 * C5805 + C4097 * C5808 + C4103 * C5806 + C4098 * C5809 +
             C4104 * C5807 + C4099 * C5810) *
                C1986) *
               C92157 * C92195) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C2059 +
             (C19671 * C182 + C92067 * C188) * C1985 - C20147 * C2060 -
             C20225 * C1986) *
                C14523 +
            (C20147 * C2059 + C20225 * C1985 - C20149 * C2060 -
             C20226 * C1986) *
                C14524 +
            (C20149 * C2059 + C20226 * C1985 - C20151 * C2060 -
             C20227 * C1986) *
                C14525) *
               C92337 +
           ((C27334 + C27335 - C27336 - C27337) * C14523 +
            (C27338 + C27339 - C27340 - C27341) * C14524 +
            (C27342 + C27343 - C27344 - C27345) * C14525) *
               C92195) *
              C92084 * C2709 +
          (((C27336 - (C27335 + C27334) + C27337) * C14523 +
            (C27340 - (C27339 + C27338) + C27341) * C14524 +
            (C27344 - (C27343 + C27342) + C27345) * C14525) *
               C92337 +
           ((C24554 * C2060 - (C24662 * C1985 + C24556 * C2059) +
             C24661 * C1986) *
                C14523 +
            (C24552 * C2060 - (C24661 * C1985 + C24554 * C2059) +
             C24660 * C1986) *
                C14524 +
            ((C19671 * C20682 + C92067 * C20683) * C2060 -
             (C24660 * C1985 + C24552 * C2059) +
             (C19671 * C20736 + C92067 * C20737) * C1986) *
                C14525) *
               C92195) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                       C4098 * C114 + C4104 * C109 + C4099 * C115) *
                          C2849 +
                      (C4102 * C245 + C4097 * C251 + C4103 * C246 +
                       C4098 * C252 + C4104 * C247 + C4099 * C253) *
                          C2709 -
                      (C10847 + C10846 + C10845) * C2850 -
                      (C11047 + C11048 + C11049) * C2710) *
                         C92157 * C92337 +
                     ((C10845 + C10846 + C10847) * C2849 +
                      (C11049 + C11048 + C11047) * C2709 -
                      (C10854 + C10855 + C10856) * C2850 -
                      (C11052 + C11051 + C11050) * C2710) *
                         C92157 * C92195) *
                        C1985 +
                    (((C8442 + C8441 + C8440) * C2850 -
                      ((C5106 + C5105 + C5104) * C2709 +
                       (C4904 + C4903 + C4902) * C2849) +
                      (C8668 + C8667 + C8666) * C2710) *
                         C92157 * C92337 +
                     ((C4102 * C5719 + C4097 * C5722 + C4103 * C5720 +
                       C4098 * C5723 + C4104 * C5721 + C4099 * C5724) *
                          C2850 -
                      ((C8666 + C8667 + C8668) * C2709 +
                       (C8440 + C8441 + C8442) * C2849) +
                      (C4102 * C5885 + C4097 * C5888 + C4103 * C5886 +
                       C4098 * C5889 + C4104 * C5887 + C4099 * C5890) *
                          C2710) *
                         C92157 * C92195) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2849 +
                       (C19671 * C245 + C92067 * C251) * C2709 -
                       C24549 * C2850 - C24753 * C2710) *
                          C14523 +
                      (C22584 + C22585 - C22586 - C22602) * C14524 +
                      (C22589 + C22590 - C22591 - C22603) * C14525) *
                         C92337 +
                     ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
                       C24754 * C2710) *
                          C14523 +
                      (C27444 + C27445 - C27446 - C27447) * C14524 +
                      (C27448 + C27449 - C27450 - C27451) * C14525) *
                         C92195) *
                        C1985 +
                    (((C22586 - (C22585 + C22584) + C22602) * C14523 +
                      (C22591 - (C22590 + C22589) + C22603) * C14524 +
                      (C22596 - (C22595 + C22594) + C22604) * C14525) *
                         C92337 +
                     ((C27446 - (C27445 + C27444) + C27447) * C14523 +
                      (C27450 - (C27449 + C27448) + C27451) * C14524 +
                      ((C19671 * C20682 + C92067 * C20683) * C2850 -
                       (C22601 * C2709 + C22428 * C2849) +
                       (C19671 * C20788 + C92067 * C20789) * C2710) *
                          C14525) *
                         C92195) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C801 +
              (C307 * C117 + C92157 * C314) * C92084) *
                 C92337 +
             (C11161 + C11162) * C92195) *
                C4097 +
            ((C337 * C801 + C338 * C92084) * C92337 +
             (C11137 + C11138) * C92195) *
                C4098 +
            ((C339 * C801 + C340 * C92084) * C92337 +
             (C11139 + C11140) * C92195) *
                C4099) *
               C2709 -
           (((C11163 + C11164) * C92195 + (C11140 + C11139) * C92337) * C4099 +
            ((C11165 + C11166) * C92195 + (C11138 + C11137) * C92337) * C4098 +
            ((C11167 + C11168) * C92195 + (C11162 + C11161) * C92337) * C4097) *
               C2710) *
              C1985 +
          ((((C13946 + C13947) * C92337 +
             ((C307 * C5719 + C92157 * C5965) * C801 +
              (C307 * C5725 + C92157 * C5968) * C92084) *
                 C92195) *
                C4097 +
            ((C13940 + C13941) * C92337 +
             ((C307 * C5720 + C92157 * C5966) * C801 +
              (C307 * C5726 + C92157 * C5969) * C92084) *
                 C92195) *
                C4098 +
            ((C13942 + C13943) * C92337 +
             ((C307 * C5721 + C92157 * C5967) * C801 +
              (C307 * C5727 + C92157 * C5970) * C92084) *
                 C92195) *
                C4099) *
               C2710 -
           (((C13943 + C13942) * C92195 +
             (C2215 * C92084 + C2214 * C801) * C92337) *
                C4099 +
            ((C13941 + C13940) * C92195 +
             (C2213 * C92084 + C2212 * C801) * C92337) *
                C4098 +
            ((C13947 + C13946) * C92195 +
             ((C307 * C813 + C92157 * C1030) * C92084 +
              (C307 * C805 + C92157 * C1022) * C801) *
                 C92337) *
                C4097) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C801 +
             (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
              C14752 * C822 + C14525 * C1031) *
                 C92084) *
                C92337 +
            ((C24859 + C24860 + C24861) * C801 +
             (C24862 + C24863 + C24864) * C92084) *
                C92195) *
               C92067 * C2709 -
           (((C24865 + C24866 + C24867) * C92084 +
             (C24868 + C24869 + C24870) * C801) *
                C92195 +
            ((C24864 + C24863 + C24862) * C92084 +
             (C24861 + C24860 + C24859) * C801) *
                C92337) *
               C92067 * C2710) *
              C1985 +
          ((((C27562 + C27563 + C27564) * C801 +
             (C27565 + C27566 + C27567) * C92084) *
                C92337 +
            ((C14750 * C5719 + C14523 * C5965 + C14751 * C16095 +
              C14524 * C16333 + C14752 * C20682 + C14525 * C20840) *
                 C801 +
             (C14750 * C5725 + C14523 * C5968 + C14751 * C16099 +
              C14524 * C16335 + C14752 * C20684 + C14525 * C20841) *
                 C92084) *
                C92195) *
               C92067 * C2710 -
           (((C27567 + C27566 + C27565) * C92084 +
             (C27564 + C27563 + C27562) * C801) *
                C92195 +
            ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
              C14750 * C813 + C14523 * C1030) *
                 C92084 +
             (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
              C14750 * C805 + C14523 * C1022) *
                 C801) *
                C92337) *
               C92067 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2059 +
                       (C307 * C182 + C92157 * C394) * C1985 -
                       (C307 * C805 + C92157 * C1022) * C2060 -
                       (C307 * C890 + C92157 * C1085) * C1986) *
                          C92337 +
                      (C14046 + C14047 - C14048 - C14052) * C92195) *
                         C4097 +
                     ((C2285 + C2286 - C2287 - C2303) * C92337 +
                      (C12091 + C12092 - C12093 - C12103) * C92195) *
                         C4098 +
                     ((C2290 + C2291 - C2292 - C2304) * C92337 +
                      (C12096 + C12097 - C12098 - C12104) * C92195) *
                         C4099) *
                        C92084 * C2709 +
                    (((C14048 - (C14047 + C14046) + C14052) * C92337 +
                      ((C307 * C5719 + C92157 * C5965) * C2060 -
                       (C11261 * C1985 + C11160 * C2059) +
                       (C307 * C5805 + C92157 * C6045) * C1986) *
                          C92195) *
                         C4097 +
                     ((C12093 - (C12092 + C12091) + C12103) * C92337 +
                      ((C307 * C5720 + C92157 * C5966) * C2060 -
                       (C11260 * C1985 + C11158 * C2059) +
                       (C307 * C5806 + C92157 * C6046) * C1986) *
                          C92195) *
                         C4098 +
                     ((C12098 - (C12097 + C12096) + C12104) * C92337 +
                      ((C307 * C5721 + C92157 * C5967) * C2060 -
                       (C11259 * C1985 + C11156 * C2059) +
                       (C307 * C5807 + C92157 * C6047) * C1986) *
                          C92195) *
                         C4099) *
                        C92084 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2059 +
                      (C14750 * C182 + C14523 * C394 + C14751 * C890 +
                       C14524 * C1085 + C14752 * C891 + C14525 * C1086) *
                          C1985 -
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C2060 -
                      (C14752 * C4987 + C14525 * C5263 + C14751 * C891 +
                       C14524 * C1086 + C14750 * C890 + C14523 * C1085) *
                          C1986) *
                         C92337 +
                     ((C24859 + C24860 + C24861) * C2059 +
                      (C24959 + C24960 + C24961) * C1985 -
                      (C27564 + C27563 + C27562) * C2060 -
                      (C27672 + C27673 + C27674) * C1986) *
                         C92195) *
                        C92067 * C92084 * C2709 +
                    (((C27562 + C27563 + C27564) * C2060 -
                      ((C24961 + C24960 + C24959) * C1985 +
                       (C24861 + C24860 + C24859) * C2059) +
                      (C27674 + C27673 + C27672) * C1986) *
                         C92337 +
                     ((C14750 * C5719 + C14523 * C5965 + C14751 * C16095 +
                       C14524 * C16333 + C14752 * C20682 + C14525 * C20840) *
                          C2060 -
                      ((C24962 + C24963 + C24964) * C1985 +
                       (C24868 + C24869 + C24870) * C2059) +
                      (C14750 * C5805 + C14523 * C6045 + C14751 * C16177 +
                       C14524 * C16411 + C14752 * C20736 + C14525 * C20892) *
                          C1986) *
                         C92195) *
                        C92067 * C92084 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C92337 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C92195) *
                         C4097 +
                     ((C3089 + C3090 - C3091 - C3107) * C92337 +
                      (C13194 + C13195 - C13196 - C13197) * C92195) *
                         C4098 +
                     ((C3094 + C3095 - C3096 - C3108) * C92337 +
                      (C13198 + C13199 - C13200 - C13201) * C92195) *
                         C4099) *
                        C1985 +
                    (((C13944 * C2850 -
                       ((C307 * C956 + C92157 * C1146) * C2709 +
                        (C307 * C805 + C92157 * C1022) * C2849) +
                       C14153 * C2710) *
                          C92337 +
                      ((C307 * C5719 + C92157 * C5965) * C2850 -
                       (C14153 * C2709 + C13944 * C2849) +
                       (C307 * C5885 + C92157 * C6122) * C2710) *
                          C92195) *
                         C4097 +
                     ((C11989 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12210 * C2710) *
                          C92337 +
                      ((C307 * C5720 + C92157 * C5966) * C2850 -
                       (C12210 * C2709 + C11989 * C2849) +
                       (C307 * C5886 + C92157 * C6123) * C2710) *
                          C92195) *
                         C4098 +
                     ((C11991 * C2850 - (C2383 * C2709 + C2214 * C2849) +
                       C12209 * C2710) *
                          C92337 +
                      ((C307 * C5721 + C92157 * C5967) * C2850 -
                       (C12209 * C2709 + C11991 * C2849) +
                       (C307 * C5887 + C92157 * C6124) * C2710) *
                          C92195) *
                         C4099) *
                        C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2849 +
                      (C14750 * C245 + C14523 * C474 + C14751 * C956 +
                       C14524 * C1146 + C14752 * C957 + C14525 * C1147) *
                          C2709 -
                      (C24861 + C24860 + C24859) * C2850 -
                      (C25053 + C25054 + C25055) * C2710) *
                         C92337 +
                     ((C24859 + C24860 + C24861) * C2849 +
                      (C25055 + C25054 + C25053) * C2709 -
                      (C24868 + C24869 + C24870) * C2850 -
                      (C25058 + C25057 + C25056) * C2710) *
                         C92195) *
                        C92067 * C1985 +
                    (((C27562 + C27563 + C27564) * C2850 -
                      ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 +
                        C14524 * C1147 + C14750 * C956 + C14523 * C1146) *
                           C2709 +
                       (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                        C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                           C2849) +
                      (C27779 + C27780 + C27781) * C2710) *
                         C92337 +
                     ((C14750 * C5719 + C14523 * C5965 + C14751 * C16095 +
                       C14524 * C16333 + C14752 * C20682 + C14525 * C20840) *
                          C2850 -
                      ((C27781 + C27780 + C27779) * C2709 +
                       (C27564 + C27563 + C27562) * C2849) +
                      (C14750 * C5885 + C14523 * C6122 + C14751 * C16255 +
                       C14524 * C16487 + C14752 * C20788 + C14525 * C20943) *
                          C2710) *
                         C92195) *
                        C92067 * C1986) *
                   C92084) /
                      (p * q * std::sqrt(p + q));
    d2eezx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C4097 +
            ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
            (C9875 * C801 + C9876 * C92084) * C4099) *
               C92157 * C2709 -
           (((C13323 + C13322) * C92084 + (C13321 + C13320) * C801) * C4099 +
            ((C13319 + C13318) * C92084 + (C13317 + C13316) * C801) * C4098 +
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C92084 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C801) *
                C4097) *
               C92157 * C2710) *
              C1985 +
          ((((C9836 * C3431 + C92337 * C3875 + C9837 * C5719 + C92195 * C6199) *
                 C801 +
             (C9836 * C3439 + C92337 * C3879 + C9837 * C5725 + C92195 * C6202) *
                 C92084) *
                C4097 +
            ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                 C801 +
             (C9836 * C3440 + C92337 * C3880 + C9837 * C5726 + C92195 * C6203) *
                 C92084) *
                C4098 +
            ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                 C801 +
             (C9836 * C3441 + C92337 * C3881 + C9837 * C5727 + C92195 * C6204) *
                 C92084) *
                C4099) *
               C92157 * C2710 -
           (((C12334 + C12333) * C92084 + (C12332 + C12331) * C801) * C4099 +
            ((C12330 + C12329) * C92084 + (C12328 + C12327) * C801) * C4098 +
            ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                 C92084 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C801) *
                C4097) *
               C92157 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C801 +
             (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                 C92084) *
                C92067 * C14523 +
            ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
                C14524 +
            C24260 * C14525) *
               C2709 -
           (((C27896 + C27897) * C92084 + (C27898 + C27899) * C801) * C92067 *
                C14525 +
            ((C27900 + C27901) * C92084 + (C27902 + C27903) * C801) * C92067 *
                C14524 +
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C92084 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C801) *
                C92067 * C14523) *
               C2710) *
              C1985 +
          ((((C27903 + C27902) * C801 + (C27901 + C27900) * C92084) * C92067 *
                C14523 +
            ((C27899 + C27898) * C801 + (C27897 + C27896) * C92084) * C92067 *
                C14524 +
            ((C9836 * C18732 + C92337 * C19392 + C9837 * C20682 +
              C92195 * C20994) *
                 C801 +
             (C9836 * C18736 + C92337 * C19394 + C9837 * C20684 +
              C92195 * C20995) *
                 C92084) *
                C92067 * C14525) *
               C2710 -
           (((C24251 + C24252) * C92084 + (C24253 + C24254) * C801) * C92067 *
                C14525 +
            ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C92067 *
                C14524 +
            ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C92067 *
                C14523) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C2060 -
            (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
                C1986) *
               C4097 +
           ((C9864 + C9863) * C2059 + (C9964 + C9965) * C1985 -
            (C12328 + C12327) * C2060 - (C12441 + C12442) * C1986) *
               C4098 +
           (C9875 * C2059 + C9970 * C1985 - (C12332 + C12331) * C2060 -
            (C12443 + C12444) * C1986) *
               C4099) *
              C92157 * C92084 * C2709 +
          (((C9836 * C3431 + C92337 * C3875 + C9837 * C5719 + C92195 * C6199) *
                C2060 -
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C1985 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C2059) +
            (C9836 * C3513 + C92337 * C3949 + C9837 * C5805 + C92195 * C6279) *
                C1986) *
               C4097 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C2060 -
            ((C13431 + C13430) * C1985 + (C13317 + C13316) * C2059) +
            (C9836 * C3514 + C92337 * C3950 + C9837 * C5806 + C92195 * C6280) *
                C1986) *
               C4098 +
           ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                C2060 -
            ((C13433 + C13432) * C1985 + (C13321 + C13320) * C2059) +
            (C9836 * C3515 + C92337 * C3951 + C9837 * C5807 + C92195 * C6281) *
                C1986) *
               C4099) *
              C92157 * C92084 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2059 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C1985 -
            (C24244 + C24243) * C2060 - (C24347 + C24348) * C1986) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2059 + (C24348 + C24347) * C1985 -
            (C24248 + C24247) * C2060 - (C24350 + C24349) * C1986) *
               C92067 * C14524 +
           (C24255 * C2059 + C24353 * C1985 - (C24253 + C24254) * C2060 -
            (C24352 + C24351) * C1986) *
               C92067 * C14525) *
              C92084 * C2709 +
          (((C27903 + C27902) * C2060 -
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C1985 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C2059) +
            (C28010 + C28011) * C1986) *
               C92067 * C14523 +
           ((C27899 + C27898) * C2060 -
            ((C28011 + C28010) * C1985 + (C27902 + C27903) * C2059) +
            (C28012 + C28013) * C1986) *
               C92067 * C14524 +
           ((C9836 * C18732 + C92337 * C19392 + C9837 * C20682 +
             C92195 * C20994) *
                C2060 -
            ((C28013 + C28012) * C1985 + (C27898 + C27899) * C2059) +
            (C9836 * C18862 + C92337 * C19504 + C9837 * C20736 +
             C92195 * C21046) *
                C1986) *
               C92067 * C14525) *
              C92084 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C4097 +
           ((C9864 + C9863) * C2849 + (C10060 + C10061) * C2709 -
            (C13317 + C13316) * C2850 - (C13540 + C13541) * C2710) *
               C4098 +
           (C9875 * C2849 + C10066 * C2709 - (C13321 + C13320) * C2850 -
            (C13542 + C13543) * C2710) *
               C4099) *
              C92157 * C1985 +
          (((C9836 * C3431 + C92337 * C3875 + C9837 * C5719 + C92195 * C6199) *
                C2850 -
            ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                 C2709 +
             (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                 C2849) +
            (C9836 * C3587 + C92337 * C4019 + C9837 * C5885 + C92195 * C6356) *
                C2710) *
               C4097 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C2850 -
            ((C12553 + C12554) * C2709 + (C12328 + C12327) * C2849) +
            (C9836 * C3588 + C92337 * C4020 + C9837 * C5886 + C92195 * C6357) *
                C2710) *
               C4098 +
           ((C9836 * C3433 + C92337 * C3877 + C9837 * C5721 + C92195 * C6201) *
                C2850 -
            ((C12551 + C12552) * C2709 + (C12332 + C12331) * C2849) +
            (C9836 * C3589 + C92337 * C4021 + C9837 * C5887 + C92195 * C6358) *
                C2710) *
               C4099) *
              C92157 * C1986) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2849 + (C24441 + C24442) * C2709 -
            (C27902 + C27903) * C2850 - (C28120 + C28121) * C2710) *
               C92067 * C14524 +
           (C24255 * C2849 + C24447 * C2709 - (C27898 + C27899) * C2850 -
            (C28122 + C28123) * C2710) *
               C92067 * C14525) *
              C1985 +
          (((C27903 + C27902) * C2850 -
            ((C24442 + C24441) * C2709 + (C24244 + C24243) * C2849) +
            (C28121 + C28120) * C2710) *
               C92067 * C14523 +
           ((C27899 + C27898) * C2850 -
            ((C24444 + C24443) * C2709 + (C24248 + C24247) * C2849) +
            (C28123 + C28122) * C2710) *
               C92067 * C14524 +
           ((C9836 * C18732 + C92337 * C19392 + C9837 * C20682 +
             C92195 * C20994) *
                C2850 -
            ((C24445 + C24446) * C2709 + (C24253 + C24254) * C2849) +
            (C9836 * C18976 + C92337 * C19607 + C9837 * C20788 +
             C92195 * C21097) *
                C2710) *
               C92067 * C14525) *
              C1986) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C801 +
            (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
             C4104 * C1395 + C4099 * C1411) *
                C92084) *
               C92157 * C92195) *
              C92116 * C798 -
          (((C8437 + C8438 + C8439) * C92084 + (C8440 + C8441 + C8442) * C801) *
               C92157 * C92195 +
           ((C4907 + C4906 + C4905) * C92084 + (C4904 + C4903 + C4902) * C801) *
               C92157 * C92337) *
              C92116 * C799 +
          (((C4913 + C4912 + C4911) * C801 + (C4910 + C4909 + C4908) * C92084) *
               C92157 * C92337 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C801 +
            (C4102 * C8418 + C4097 * C8421 + C4103 * C8419 + C4098 * C8422 +
             C4104 * C8420 + C4099 * C8423) *
                C92084) *
               C92157 * C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
            C4104 * C119 + C4099 * C127) *
               C93 -
           (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
            C4102 * C108 + C4097 * C114) *
               C105 -
           (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
            C4102 * C118 + C4097 * C126) *
               C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
            C4104 * C111 + C4099 * C121) *
               C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
            C4104 * C122 + C4099 * C129) *
               C95) *
              C92157 * C92337 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
            C4104 * C1387 + C4099 * C1399) *
               C104 +
           (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
            C4104 * C1395 + C4099 * C1411) *
               C93 -
           (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
            C4102 * C1388 + C4097 * C1400) *
               C105 -
           (C4104 * C1394 + C4099 * C1410 + C4103 * C1395 + C4098 * C1411 +
            C4102 * C1396 + C4097 * C1412) *
               C94 +
           (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
            C4104 * C2711 + C4099 * C2712) *
               C106 +
           (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C4098 * C1410 +
            C4104 * C2713 + C4099 * C2714) *
               C95) *
              C92157 * C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C801 +
            (C10848 + C10849 + C10850) * C92084) *
               C92157 * C92195) *
              C1383 -
          (((C10851 + C10852 + C10853) * C92084 +
            (C10854 + C10855 + C10856) * C801) *
               C92157 * C92195 +
           ((C10850 + C10849 + C10848) * C92084 +
            (C10847 + C10846 + C10845) * C801) *
               C92157 * C92337) *
              C1384 +
          (((C10856 + C10855 + C10854) * C801 +
            (C10853 + C10852 + C10851) * C92084) *
               C92157 * C92337 +
           ((C4102 * C10808 + C4097 * C10811 + C4103 * C10809 + C4098 * C10812 +
             C4104 * C10810 + C4099 * C10813) *
                C801 +
            (C4102 * C10814 + C4097 * C10817 + C4103 * C10815 + C4098 * C10818 +
             C4104 * C10816 + C4099 * C10819) *
                C92084) *
               C92157 * C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C14523 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C14524 +
           (C20149 * C104 + C20150 * C93 - C21185 * C105 - C21186 * C94 +
            (C19671 * C808 + C92067 * C820) * C106 +
            (C19671 * C824 + C92067 * C832) * C95) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C104 +
            (C19671 * C1397 + C92067 * C1413) * C93 -
            (C19671 * C1388 + C92067 * C1400) * C105 -
            (C19671 * C1396 + C92067 * C1412) * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C14523 +
           (C22432 * C104 + C22431 * C93 -
            (C19671 * C3432 + C92067 * C3436) * C105 -
            (C19671 * C3440 + C92067 * C3444) * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C14524 +
           (C22430 * C104 + C22429 * C93 -
            (C19671 * C8413 + C92067 * C8416) * C105 -
            (C19671 * C8419 + C92067 * C8422) * C94 +
            (C19671 * C8414 + C92067 * C8417) * C106 +
            (C19671 * C8420 + C92067 * C8423) * C95) *
               C14525) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C14523 +
            (C20155 + C20156) * C14524 + C20163 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C801 +
             (C19671 * C1397 + C92067 * C1413) * C92084) *
                C14523 +
            (C22438 + C22437) * C14524 + C23767 * C14525) *
               C92195) *
              C92116 * C798 -
          (((C22433 + C22434) * C14525 + (C22435 + C22436) * C14524 +
            (C22437 + C22438) * C14523) *
               C92195 +
           ((C20160 + C20159) * C14525 + (C20158 + C20157) * C14524 +
            (C20156 + C20155) * C14523) *
               C92337) *
              C92116 * C799 +
          ((C20163 * C14523 + C20164 * C14524 + (C20162 + C20161) * C14525) *
               C92337 +
           (C23767 * C14523 + (C22434 + C22433) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C14525) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C14523 +
            (C20155 + C20156) * C14524 + C20163 * C14525) *
               C92337 +
           ((C24557 + C24558) * C14523 + (C22438 + C22437) * C14524 +
            C23767 * C14525) *
               C92195) *
              C1383 -
          (((C24559 + C24560) * C14525 + (C24561 + C24562) * C14524 +
            (C24563 + C24564) * C14523) *
               C92195 +
           ((C22435 + C22436) * C14525 + (C22437 + C22438) * C14524 +
            (C24558 + C24557) * C14523) *
               C92337) *
              C1384 +
          (((C24564 + C24563) * C14523 + (C24562 + C24561) * C14524 +
            (C24560 + C24559) * C14525) *
               C92337 +
           (((C19671 * C10808 + C92067 * C10811) * C801 +
             (C19671 * C10814 + C92067 * C10817) * C92084) *
                C14523 +
            ((C19671 * C24524 + C92067 * C24526) * C801 +
             (C19671 * C24527 + C92067 * C24530) * C92084) *
                C14524 +
            ((C19671 * C24525 + C92067 * C24528) * C801 +
             (C19671 * C24529 + C92067 * C24531) * C92084) *
                C14525) *
               C92195) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eexy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
            C4104 * C184 + C4099 * C190) *
               C798 -
           (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
           (C4913 + C4912 + C4911) * C886 + (C5009 + C5010 + C5011) * C800) *
              C92157 * C92337 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
            C4104 * C1387 + C4099 * C1399) *
               C884 +
           (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
            C4104 * C1469 + C4099 * C1477) *
               C798 -
           (C8440 + C8441 + C8442) * C885 - (C8555 + C8554 + C8553) * C799 +
           (C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
            C4104 * C8414 + C4099 * C8417) *
               C886 +
           (C4102 * C8540 + C4097 * C8543 + C4103 * C8541 + C4098 * C8544 +
            C4104 * C8542 + C4099 * C8545) *
               C800) *
              C92157 * C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C181 +
            (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
             C4104 * C1469 + C4099 * C1477) *
                C92105) *
               C92157 * C92195) *
              C93 -
          (((C4104 * C1468 + C4099 * C1476 + C4103 * C1469 + C4098 * C1477 +
             C4102 * C1470 + C4097 * C1478) *
                C92105 +
            (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
             C4102 * C1388 + C4097 * C1400) *
                C181) *
               C92157 * C92195 +
           ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
             C4102 * C183 + C4097 * C189) *
                C92105 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C181) *
               C92157 * C92337) *
              C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
             C4104 * C186 + C4099 * C192) *
                C92105) *
               C92157 * C92337 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
             C4104 * C2711 + C4099 * C2712) *
                C181 +
            (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C4098 * C1476 +
             C4104 * C2781 + C4099 * C2782) *
                C92105) *
               C92157 * C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92157 * C92337 +
           ((C10845 + C10846 + C10847) * C181 +
            (C10949 + C10950 + C10951) * C92105) *
               C92157 * C92195) *
              C92084 * C1383 -
          (((C10952 + C10953 + C10954) * C92105 +
            (C10854 + C10855 + C10856) * C181) *
               C92157 * C92195 +
           ((C10951 + C10950 + C10949) * C92105 +
            (C10847 + C10846 + C10845) * C181) *
               C92157 * C92337) *
              C92084 * C1384 +
          (((C10856 + C10855 + C10854) * C181 +
            (C10954 + C10953 + C10952) * C92105) *
               C92157 * C92337 +
           ((C4102 * C10808 + C4097 * C10811 + C4103 * C10809 + C4098 * C10812 +
             C4104 * C10810 + C4099 * C10813) *
                C181 +
            (C4102 * C10930 + C4097 * C10933 + C4103 * C10931 + C4098 * C10934 +
             C4104 * C10932 + C4099 * C10935) *
                C92105) *
               C92157 * C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C14523 +
            (C20147 * C181 + C20225 * C92105) * C14524 +
            (C20149 * C181 + C20226 * C92105) * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C181 +
             (C19671 * C1471 + C92067 * C1479) * C92105) *
                C14523 +
            (C22432 * C181 + C22513 * C92105) * C14524 +
            (C22430 * C181 + C22514 * C92105) * C14525) *
               C92195) *
              C93 -
          ((((C19671 * C8541 + C92067 * C8544) * C92105 +
             (C19671 * C8413 + C92067 * C8416) * C181) *
                C14525 +
            ((C19671 * C3514 + C92067 * C3518) * C92105 +
             (C19671 * C3432 + C92067 * C3436) * C181) *
                C14524 +
            ((C19671 * C1470 + C92067 * C1478) * C92105 +
             (C19671 * C1388 + C92067 * C1400) * C181) *
                C14523) *
               C92195 +
           ((C21268 * C92105 + C21185 * C181) * C14525 +
            (C21267 * C92105 + C21183 * C181) * C14524 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C14523) *
               C92337) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C181 +
             (C19671 * C893 + C92067 * C901) * C92105) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C181 +
             (C19671 * C8542 + C92067 * C8545) * C92105) *
                C14525) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C14523 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C14524 +
           (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
            C20154 * C886 + C20228 * C800) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C884 +
            (C19671 * C1471 + C92067 * C1479) * C798 - C22432 * C885 -
            C22513 * C799 + C22430 * C886 + C22514 * C800) *
               C14523 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C14524 +
           (C22430 * C884 + C22514 * C798 - C22428 * C885 - C22515 * C799 +
            (C19671 * C22410 + C92067 * C22411) * C886 +
            (C19671 * C22504 + C92067 * C22505) * C800) *
               C14525) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C14523 +
            (C20147 * C181 + C20225 * C92105) * C14524 +
            (C20149 * C181 + C20226 * C92105) * C14525) *
               C92337 +
           ((C24643 + C24663) * C14523 + (C24646 + C24647) * C14524 +
            (C24648 + C24649) * C14525) *
               C92195) *
              C92084 * C1383 -
          (((C24664 + C24652) * C14525 + (C24665 + C24655) * C14524 +
            (C24666 + C24658) * C14523) *
               C92195 +
           ((C24649 + C24648) * C14525 + (C24647 + C24646) * C14524 +
            (C24663 + C24643) * C14523) *
               C92337) *
              C92084 * C1384 +
          (((C24658 + C24666) * C14523 + (C24655 + C24665) * C14524 +
            (C24652 + C24664) * C14525) *
               C92337 +
           (((C19671 * C10808 + C92067 * C10811) * C181 +
             (C19671 * C10930 + C92067 * C10933) * C92105) *
                C14523 +
            ((C19671 * C24524 + C92067 * C24526) * C181 +
             (C19671 * C24638 + C92067 * C24640) * C92105) *
                C14524 +
            ((C19671 * C24525 + C92067 * C24528) * C181 +
             (C19671 * C24639 + C92067 * C24641) * C92105) *
                C14525) *
               C92195) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
             C4104 * C1538 + C4099 * C1546) *
                C92116) *
               C92157 * C92195) *
              C798 -
          (((C8666 + C8667 + C8668) * C92116 + (C8440 + C8441 + C8442) * C244) *
               C92157 * C92195 +
           ((C5106 + C5105 + C5104) * C92116 + (C4904 + C4903 + C4902) * C244) *
               C92157 * C92337) *
              C799 +
          (((C4913 + C4912 + C4911) * C244 + (C5109 + C5108 + C5107) * C92116) *
               C92157 * C92337 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C244 +
            (C4102 * C8653 + C4097 * C8656 + C4103 * C8654 + C4098 * C8657 +
             C4104 * C8655 + C4099 * C8658) *
                C92116) *
               C92157 * C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
             C4104 * C1538 + C4099 * C1546) *
                C92116) *
               C92157 * C92195) *
              C92105 * C93 -
          (((C4104 * C1537 + C4099 * C1545 + C4103 * C1538 + C4098 * C1546 +
             C4102 * C1539 + C4097 * C1547) *
                C92116 +
            (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
             C4102 * C1388 + C4097 * C1400) *
                C244) *
               C92157 * C92195 +
           ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
             C4102 * C246 + C4097 * C252) *
                C92116 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C244) *
               C92157 * C92337) *
              C92105 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
             C4104 * C249 + C4099 * C255) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
             C4104 * C2711 + C4099 * C2712) *
                C244 +
            (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C4098 * C1545 +
             C4104 * C2851 + C4099 * C2852) *
                C92116) *
               C92157 * C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
            C4104 * C247 + C4099 * C253) *
               C1383 -
           (C10847 + C10846 + C10845) * C1535 -
           (C11047 + C11048 + C11049) * C1384 +
           (C10856 + C10855 + C10854) * C1536 +
           (C11050 + C11051 + C11052) * C1385) *
              C92157 * C92337 +
          ((C10845 + C10846 + C10847) * C1534 +
           (C11049 + C11048 + C11047) * C1383 -
           (C10854 + C10855 + C10856) * C1535 -
           (C11052 + C11051 + C11050) * C1384 +
           (C4102 * C10808 + C4097 * C10811 + C4103 * C10809 + C4098 * C10812 +
            C4104 * C10810 + C4099 * C10813) *
               C1536 +
           (C4102 * C11028 + C4097 * C11031 + C4103 * C11029 + C4098 * C11032 +
            C4104 * C11030 + C4099 * C11033) *
               C1385) *
              C92157 * C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C22432 * C244 + C22599 * C92116) * C14524 +
            (C22430 * C244 + C22600 * C92116) * C14525) *
               C92195) *
              C92105 * C93 -
          ((((C19671 * C8654 + C92067 * C8657) * C92116 +
             (C19671 * C8413 + C92067 * C8416) * C244) *
                C14525 +
            ((C19671 * C3588 + C92067 * C3592) * C92116 +
             (C19671 * C3432 + C92067 * C3436) * C244) *
                C14524 +
            ((C19671 * C1539 + C92067 * C1547) * C92116 +
             (C19671 * C1388 + C92067 * C1400) * C244) *
                C14523) *
               C92195 +
           ((C21349 + C21339) * C14525 + (C21348 + C21336) * C14524 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C14523) *
               C92337) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C244 +
             (C19671 * C959 + C92067 * C967) * C92116) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C244 +
             (C19671 * C8655 + C92067 * C8658) * C92116) *
                C14525) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C23916 + C23917) * C14524 + C23922 * C14525) *
               C92195) *
              C798 -
          (((C23920 + C23921) * C14525 + (C23919 + C23918) * C14524 +
            (C23917 + C23916) * C14523) *
               C92195 +
           ((C20299 + C20287) * C14525 + (C20298 + C20284) * C14524 +
            (C20297 + C20281) * C14523) *
               C92337) *
              C799 +
          ((C20301 * C14523 + C20302 * C14524 + (C20292 + C20300) * C14525) *
               C92337 +
           (C23922 * C14523 + (C23921 + C23920) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C244 +
             (C19671 * C22581 + C92067 * C22582) * C92116) *
                C14525) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C1534 +
            (C19671 * C245 + C92067 * C251) * C1383 - C24549 * C1535 -
            C24753 * C1384 + C24556 * C1536 + C24754 * C1385) *
               C14523 +
           (C20147 * C1534 + C20293 * C1383 - C22432 * C1535 - C22599 * C1384 +
            C24554 * C1536 + C24755 * C1385) *
               C14524 +
           (C20149 * C1534 + C20294 * C1383 - C22430 * C1535 - C22600 * C1384 +
            C24552 * C1536 + C24756 * C1385) *
               C14525) *
              C92337 +
          ((C24549 * C1534 + C24753 * C1383 - C24556 * C1535 - C24754 * C1384 +
            (C19671 * C10808 + C92067 * C10811) * C1536 +
            (C19671 * C11028 + C92067 * C11031) * C1385) *
               C14523 +
           (C22432 * C1534 + C22599 * C1383 - C24554 * C1535 - C24755 * C1384 +
            (C19671 * C24524 + C92067 * C24526) * C1536 +
            (C19671 * C24740 + C92067 * C24742) * C1385) *
               C14524 +
           (C22430 * C1534 + C22600 * C1383 - C24552 * C1535 - C24756 * C1384 +
            (C19671 * C24525 + C92067 * C24528) * C1536 +
            (C19671 * C24741 + C92067 * C24743) * C1385) *
               C14525) *
              C92195) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C801 +
             (C307 * C1397 + C92157 * C1614) * C92084) *
                C92195) *
               C4097 +
           ((C337 * C801 + C338 * C92084) * C92337 +
            (C2934 * C801 + C2935 * C92084) * C92195) *
               C4098 +
           ((C339 * C801 + C340 * C92084) * C92337 +
            (C2936 * C801 + C2937 * C92084) * C92195) *
               C4099) *
              C92116 * C798 -
          ((((C307 * C3441 + C92157 * C3667) * C92084 +
             (C307 * C3433 + C92157 * C3663) * C801) *
                C92195 +
            (C2215 * C92084 + C2214 * C801) * C92337) *
               C4099 +
           (((C307 * C3440 + C92157 * C3666) * C92084 +
             (C307 * C3432 + C92157 * C3662) * C801) *
                C92195 +
            (C2213 * C92084 + C2212 * C801) * C92337) *
               C4098 +
           (((C307 * C3439 + C92157 * C3665) * C92084 +
             (C307 * C3431 + C92157 * C3661) * C801) *
                C92195 +
            ((C307 * C813 + C92157 * C1030) * C92084 +
             (C307 * C805 + C92157 * C1022) * C801) *
                C92337) *
               C4097) *
              C92116 * C799 +
          ((((C307 * C806 + C92157 * C1023) * C801 +
             (C307 * C822 + C92157 * C1031) * C92084) *
                C92337 +
            ((C307 * C8412 + C92157 * C8766) * C801 +
             (C307 * C8418 + C92157 * C8769) * C92084) *
                C92195) *
               C4097 +
           (((C307 * C807 + C92157 * C1024) * C801 +
             (C307 * C823 + C92157 * C1032) * C92084) *
                C92337 +
            ((C307 * C8413 + C92157 * C8767) * C801 +
             (C307 * C8419 + C92157 * C8770) * C92084) *
                C92195) *
               C4098 +
           (((C307 * C808 + C92157 * C1025) * C801 +
             (C307 * C824 + C92157 * C1033) * C92084) *
                C92337 +
            ((C307 * C8414 + C92157 * C8768) * C801 +
             (C307 * C8420 + C92157 * C8771) * C92084) *
                C92195) *
               C4099) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C104 +
            (C307 * C117 + C92157 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C92337 +
           ((C307 * C1389 + C92157 * C1606) * C104 +
            (C307 * C1397 + C92157 * C1614) * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92195) *
              C4097 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C92337 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92195) *
              C4098 +
          ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
            C344 * C95) *
               C92337 +
           (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
            (C307 * C2711 + C92157 * C2919) * C106 +
            (C307 * C2713 + C92157 * C2920) * C95) *
               C92195) *
              C4099) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C801 +
             (C307 * C117 + C92157 * C314) * C92084) *
                C92337 +
            (C11161 + C11162) * C92195) *
               C4097 +
           ((C337 * C801 + C338 * C92084) * C92337 +
            (C11137 + C11138) * C92195) *
               C4098 +
           ((C339 * C801 + C340 * C92084) * C92337 +
            (C11139 + C11140) * C92195) *
               C4099) *
              C1383 -
          (((C11163 + C11164) * C92195 + (C11140 + C11139) * C92337) * C4099 +
           ((C11165 + C11166) * C92195 + (C11138 + C11137) * C92337) * C4098 +
           ((C11167 + C11168) * C92195 + (C11162 + C11161) * C92337) * C4097) *
              C1384 +
          (((C11168 + C11167) * C92337 +
            ((C307 * C10808 + C92157 * C11126) * C801 +
             (C307 * C10814 + C92157 * C11129) * C92084) *
                C92195) *
               C4097 +
           ((C11166 + C11165) * C92337 +
            ((C307 * C10809 + C92157 * C11127) * C801 +
             (C307 * C10815 + C92157 * C11130) * C92084) *
                C92195) *
               C4098 +
           ((C11164 + C11163) * C92337 +
            ((C307 * C10810 + C92157 * C11128) * C801 +
             (C307 * C10816 + C92157 * C11131) * C92084) *
                C92195) *
               C4099) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C104 +
           (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
            C14752 * C822 + C14525 * C1031) *
               C93 -
           (C14778 + C14779 + C14780) * C105 -
           (C14781 + C14782 + C14783) * C94 +
           (C14784 + C14785 + C14786) * C106 +
           (C14787 + C14788 + C14789) * C95) *
              C92337 +
          ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
            C14752 * C8412 + C14525 * C8766) *
               C104 +
           (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 + C14524 * C3665 +
            C14752 * C8418 + C14525 * C8769) *
               C93 -
           (C18105 + C18104 + C18103) * C105 -
           (C18108 + C18107 + C18106) * C94 +
           (C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
            C14752 * C8414 + C14525 * C8768) *
               C106 +
           (C14750 * C1395 + C14523 * C1612 + C14751 * C3441 + C14524 * C3667 +
            C14752 * C8420 + C14525 * C8771) *
               C95) *
              C92195) *
         C92067 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C801 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C92084) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C801 +
            (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 + C14524 * C3665 +
             C14752 * C8418 + C14525 * C8769) *
                C92084) *
               C92195) *
              C92067 * C92116 * C798 -
          (((C14752 * C18736 + C14525 * C19092 + C14751 * C8418 +
             C14524 * C8769 + C14750 * C3439 + C14523 * C3665) *
                C92084 +
            (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
             C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                C801) *
               C92195 +
           ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 + C14524 * C1031 +
             C14750 * C813 + C14523 * C1030) *
                C92084 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C801) *
               C92337) *
              C92067 * C92116 * C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C801 +
            (C14750 * C822 + C14523 * C1031 + C14751 * C4871 + C14524 * C5186 +
             C14752 * C15277 + C14525 * C15595) *
                C92084) *
               C92337 +
           ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
             C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                C801 +
            (C14750 * C8418 + C14523 * C8769 + C14751 * C18736 +
             C14524 * C19092 + C14752 * C22412 + C14525 * C22671) *
                C92084) *
               C92195) *
              C92067 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C801 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C92084) *
               C92337 +
           ((C24859 + C24860 + C24861) * C801 +
            (C24862 + C24863 + C24864) * C92084) *
               C92195) *
              C92067 * C1383 -
          (((C24865 + C24866 + C24867) * C92084 +
            (C24868 + C24869 + C24870) * C801) *
               C92195 +
           ((C24864 + C24863 + C24862) * C92084 +
            (C24861 + C24860 + C24859) * C801) *
               C92337) *
              C92067 * C1384 +
          (((C24870 + C24869 + C24868) * C801 +
            (C24867 + C24866 + C24865) * C92084) *
               C92337 +
           ((C14750 * C10808 + C14523 * C11126 + C14751 * C24524 +
             C14524 * C24830 + C14752 * C24525 + C14525 * C24831) *
                C801 +
            (C14750 * C10814 + C14523 * C11129 + C14751 * C24527 +
             C14524 * C24832 + C14752 * C24529 + C14525 * C24833) *
                C92084) *
               C92195) *
              C92067 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C92337 +
           ((C307 * C1389 + C92157 * C1606) * C884 +
            (C307 * C1471 + C92157 * C1672) * C798 -
            (C307 * C3431 + C92157 * C3661) * C885 -
            (C307 * C3513 + C92157 * C3735) * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92195) *
              C4097 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C92337 +
           (C2934 * C884 + C3016 * C798 -
            (C307 * C3432 + C92157 * C3662) * C885 -
            (C307 * C3514 + C92157 * C3736) * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92195) *
              C4098 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92157 * C1025) * C886 +
            (C307 * C893 + C92157 * C1090) * C800) *
               C92337 +
           (C2936 * C884 + C3017 * C798 -
            (C307 * C3433 + C92157 * C3663) * C885 -
            (C307 * C3515 + C92157 * C3737) * C799 +
            (C307 * C8414 + C92157 * C8768) * C886 +
            (C307 * C8542 + C92157 * C8872) * C800) *
               C92195) *
              C4099) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C181 +
             (C307 * C1471 + C92157 * C1672) * C92105) *
                C92195) *
               C4097 +
           ((C401 + C417) * C92337 + (C3007 + C3019) * C92195) * C4098 +
           C9678 * C4099) *
              C93 -
          (((C3021 + C3013) * C92195 + (C419 + C407) * C92337) * C4099 +
           ((C3020 + C3010) * C92195 + (C418 + C404) * C92337) * C4098 +
           ((C3019 + C3007) * C92195 + (C417 + C401) * C92337) * C4097) *
              C94 +
          (C9678 * C4097 + (C422 * C92337 + (C3013 + C3021) * C92195) * C4098 +
           ((C412 + C420) * C92337 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92195) *
               C4099) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92337 +
            (C11246 + C11262) * C92195) *
               C4097 +
           ((C401 + C417) * C92337 + (C3007 + C3019) * C92195) * C4098 +
           C9678 * C4099) *
              C92084 * C1383 -
          (((C11263 + C11251) * C92195 + (C3020 + C3010) * C92337) * C4099 +
           ((C11264 + C11254) * C92195 + (C3019 + C3007) * C92337) * C4098 +
           ((C11265 + C11257) * C92195 + (C11262 + C11246) * C92337) * C4097) *
              C92084 * C1384 +
          (((C11257 + C11265) * C92337 +
            ((C307 * C10808 + C92157 * C11126) * C181 +
             (C307 * C10930 + C92157 * C11242) * C92105) *
                C92195) *
               C4097 +
           ((C11254 + C11264) * C92337 +
            ((C307 * C10809 + C92157 * C11127) * C181 +
             (C307 * C10931 + C92157 * C11243) * C92105) *
                C92195) *
               C4098 +
           ((C11251 + C11263) * C92337 +
            ((C307 * C10810 + C92157 * C11128) * C181 +
             (C307 * C10932 + C92157 * C11244) * C92105) *
                C92195) *
               C4099) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C181 +
            (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
             C14752 * C8540 + C14525 * C8870) *
                C92105) *
               C92195) *
              C92067 * C93 -
          (((C18215 + C18214 + C18213) * C92105 +
            (C18105 + C18104 + C18103) * C181) *
               C92195 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92337) *
              C92067 * C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C181 +
            (C14750 * C1469 + C14523 * C1670 + C14751 * C3515 + C14524 * C3737 +
             C14752 * C8542 + C14525 * C8872) *
                C92105) *
               C92195) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92337 +
          ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
            C14752 * C8412 + C14525 * C8766) *
               C884 +
           (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
            C14752 * C8540 + C14525 * C8870) *
               C798 -
           (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
            C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
               C885 -
           (C14752 * C18862 + C14525 * C19192 + C14751 * C8540 +
            C14524 * C8870 + C14750 * C3513 + C14523 * C3735) *
               C799 +
           (C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
            C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
               C886 +
           (C14750 * C8540 + C14523 * C8870 + C14751 * C18862 +
            C14524 * C19192 + C14752 * C22504 + C14525 * C22738) *
               C800) *
              C92195) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92337 +
           ((C24859 + C24860 + C24861) * C181 +
            (C24959 + C24960 + C24961) * C92105) *
               C92195) *
              C92067 * C92084 * C1383 -
          (((C24962 + C24963 + C24964) * C92105 +
            (C24868 + C24869 + C24870) * C181) *
               C92195 +
           ((C24961 + C24960 + C24959) * C92105 +
            (C24861 + C24860 + C24859) * C181) *
               C92337) *
              C92067 * C92084 * C1384 +
          (((C24870 + C24869 + C24868) * C181 +
            (C24964 + C24963 + C24962) * C92105) *
               C92337 +
           ((C14750 * C10808 + C14523 * C11126 + C14751 * C24524 +
             C14524 * C24830 + C14752 * C24525 + C14525 * C24831) *
                C181 +
            (C14750 * C10930 + C14523 * C11242 + C14751 * C24638 +
             C14524 * C24944 + C14752 * C24639 + C14525 * C24945) *
                C92105) *
               C92195) *
              C92067 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C244 +
             (C307 * C1540 + C92157 * C1727) * C92116) *
                C92195) *
               C4097 +
           ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
           C9762 * C4099) *
              C798 -
          ((((C307 * C3589 + C92157 * C3807) * C92116 +
             (C307 * C3433 + C92157 * C3663) * C244) *
                C92195 +
            (C2386 + C2378) * C92337) *
               C4099 +
           (((C307 * C3588 + C92157 * C3806) * C92116 +
             (C307 * C3432 + C92157 * C3662) * C244) *
                C92195 +
            (C2387 + C2381) * C92337) *
               C4098 +
           (((C307 * C3587 + C92157 * C3805) * C92116 +
             (C307 * C3431 + C92157 * C3661) * C244) *
                C92195 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92337) *
               C4097) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C92337 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92195) *
               C4097 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C92337 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92195) *
               C4098 +
           (((C307 * C808 + C92157 * C1025) * C244 +
             (C307 * C959 + C92157 * C1149) * C92116) *
                C92337 +
            ((C307 * C8414 + C92157 * C8768) * C244 +
             (C307 * C8655 + C92157 * C8973) * C92116) *
                C92195) *
               C4099) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C244 +
             (C307 * C1540 + C92157 * C1727) * C92116) *
                C92195) *
               C4097 +
           ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
           C9762 * C4099) *
              C92105 * C93 -
          (((C9758 + C9759) * C92195 + (C499 + C487) * C92337) * C4099 +
           ((C9757 + C9756) * C92195 + (C498 + C484) * C92337) * C4098 +
           ((C9754 + C9753) * C92195 + (C497 + C481) * C92337) * C4097) *
              C92105 * C94 +
          (C9762 * C4097 + (C502 * C92337 + (C9759 + C9758) * C92195) * C4098 +
           ((C492 + C500) * C92337 +
            ((C307 * C2711 + C92157 * C2919) * C244 +
             (C307 * C2851 + C92157 * C3087) * C92116) *
                C92195) *
               C4099) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C1534 +
            (C307 * C245 + C92157 * C474) * C1383 - C11153 * C1535 -
            C11351 * C1384 + C11160 * C1536 + C11352 * C1385) *
               C92337 +
           (C11153 * C1534 + C11351 * C1383 - C11160 * C1535 - C11352 * C1384 +
            (C307 * C10808 + C92157 * C11126) * C1536 +
            (C307 * C11028 + C92157 * C11339) * C1385) *
               C92195) *
              C4097 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C11158 * C1536 + C11353 * C1385) *
               C92337 +
           (C2934 * C1534 + C3104 * C1383 - C11158 * C1535 - C11353 * C1384 +
            (C307 * C10809 + C92157 * C11127) * C1536 +
            (C307 * C11029 + C92157 * C11340) * C1385) *
               C92195) *
              C4098 +
          ((C339 * C1534 + C494 * C1383 - C2936 * C1535 - C3105 * C1384 +
            C11156 * C1536 + C11354 * C1385) *
               C92337 +
           (C2936 * C1534 + C3105 * C1383 - C11156 * C1535 - C11354 * C1384 +
            (C307 * C10810 + C92157 * C11128) * C1536 +
            (C307 * C11030 + C92157 * C11341) * C1385) *
               C92195) *
              C4099) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C92105 * C93 -
          (((C18320 + C18321 + C18322) * C92116 +
            (C18105 + C18104 + C18103) * C244) *
               C92195 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92337) *
              C92067 * C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C244 +
            (C14750 * C1538 + C14523 * C1731 + C14751 * C3589 + C14524 * C3807 +
             C14752 * C8655 + C14525 * C8973) *
                C92116) *
               C92195) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C798 -
          (((C14752 * C18976 + C14525 * C19292 + C14751 * C8653 +
             C14524 * C8971 + C14750 * C3587 + C14523 * C3805) *
                C92116 +
            (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
             C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                C244) *
               C92195 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92337) *
              C92067 * C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92337 +
           ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
             C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                C244 +
            (C14750 * C8653 + C14523 * C8971 + C14751 * C18976 +
             C14524 * C19292 + C14752 * C22581 + C14525 * C22805) *
                C92116) *
               C92195) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C1534 +
           (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
            C14752 * C957 + C14525 * C1147) *
               C1383 -
           (C24861 + C24860 + C24859) * C1535 -
           (C25053 + C25054 + C25055) * C1384 +
           (C24870 + C24869 + C24868) * C1536 +
           (C25056 + C25057 + C25058) * C1385) *
              C92337 +
          ((C24859 + C24860 + C24861) * C1534 +
           (C25055 + C25054 + C25053) * C1383 -
           (C24868 + C24869 + C24870) * C1535 -
           (C25058 + C25057 + C25056) * C1384 +
           (C14750 * C10808 + C14523 * C11126 + C14751 * C24524 +
            C14524 * C24830 + C14752 * C24525 + C14525 * C24831) *
               C1536 +
           (C14750 * C11028 + C14523 * C11339 + C14751 * C24740 +
            C14524 * C25038 + C14752 * C24741 + C14525 * C25039) *
               C1385) *
              C92195) *
         C92067 * C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C4097 +
           ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
           (C9875 * C801 + C9876 * C92084) * C4099) *
              C92157 * C92116 * C798 -
          (((C9837 * C3441 + C92195 * C3881 + C9836 * C811 + C92337 * C1210) *
                C92084 +
            (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
                C801) *
               C4099 +
           ((C9837 * C3440 + C92195 * C3880 + C9836 * C812 + C92337 * C1211) *
                C92084 +
            (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
                C801) *
               C4098 +
           ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                C92084 +
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C801) *
               C4097) *
              C92157 * C92116 * C799 +
          (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C801 +
            (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
                C92084) *
               C4097 +
           ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
                C801 +
            (C9836 * C823 + C92337 * C1214 + C9837 * C8419 + C92195 * C9076) *
                C92084) *
               C4098 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C801 +
            (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
                C92084) *
               C4099) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C4097 +
          ((C9864 + C9863) * C104 + (C9866 + C9865) * C93 -
           (C9868 + C9867) * C105 - (C9870 + C9869) * C94 +
           (C9871 + C9872) * C106 + (C9873 + C9874) * C95) *
              C4098 +
          (C9875 * C104 + C9876 * C93 - (C9872 + C9871) * C105 -
           (C9874 + C9873) * C94 +
           (C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
               C106 +
           (C9836 * C122 + C92337 * C565 + C9837 * C2713 + C92195 * C3176) *
               C95) *
              C4099) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C4097 +
           ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
           (C9875 * C801 + C9876 * C92084) * C4099) *
              C92157 * C1383 -
          (((C9837 * C1408 + C92195 * C1799 + C9836 * C1395 + C92337 * C1794) *
                C92084 +
            (C9837 * C1392 + C92195 * C1791 + C9836 * C1387 + C92337 * C1786) *
                C801) *
               C4099 +
           ((C9837 * C1407 + C92195 * C1798 + C9836 * C1396 + C92337 * C1795) *
                C92084 +
            (C9837 * C1391 + C92195 * C1790 + C9836 * C1388 + C92337 * C1787) *
                C801) *
               C4098 +
           ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                C92084 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C801) *
               C4097) *
              C92157 * C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C801 +
            (C9836 * C1406 + C92337 * C1797 + C9837 * C10814 +
             C92195 * C11431) *
                C92084) *
               C4097 +
           ((C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
             C92195 * C11429) *
                C801 +
            (C9836 * C1407 + C92337 * C1798 + C9837 * C10815 +
             C92195 * C11432) *
                C92084) *
               C4098 +
           ((C9836 * C1392 + C92337 * C1791 + C9837 * C10810 +
             C92195 * C11430) *
                C801 +
            (C9836 * C1408 + C92337 * C1799 + C9837 * C10816 +
             C92195 * C11433) *
                C92084) *
               C4099) *
              C92157 * C1385) *
         C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C92067 * C14523 +
          ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
               C104 +
           (C9836 * C813 + C92337 * C1212 + C9837 * C3439 + C92195 * C3879) *
               C93 -
           (C12328 + C12327) * C105 - (C12330 + C12329) * C94 +
           (C12331 + C12332) * C106 + (C12333 + C12334) * C95) *
              C92067 * C14524 +
          ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C104 +
           (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
               C93 -
           (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
               C105 -
           (C9837 * C8419 + C92195 * C9076 + C9836 * C823 + C92337 * C1214) *
               C94 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C106 +
           (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
               C95) *
              C92067 * C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C14523 +
           ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
               C14524 +
           C24260 * C14525) *
              C92116 * C798 -
          (((C24251 + C24252) * C92084 + (C24253 + C24254) * C801) * C92067 *
               C14525 +
           ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C92067 *
               C14524 +
           ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C92067 *
               C14523) *
              C92116 * C799 +
          (C24260 * C14523 +
           ((C24254 + C24253) * C801 + (C24252 + C24251) * C92084) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C801 +
            (C9836 * C15277 + C92337 * C15825 + C9837 * C22412 +
             C92195 * C22873) *
                C92084) *
               C92067 * C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C14523 +
           ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
               C14524 +
           C24260 * C14525) *
              C1383 -
          (((C9837 * C16099 + C92195 * C16565 + C9836 * C8418 +
             C92337 * C9075) *
                C92084 +
            (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
             C92337 * C9072) *
                C801) *
               C92067 * C14525 +
           ((C9837 * C5725 + C92195 * C6202 + C9836 * C3439 + C92337 * C3879) *
                C92084 +
            (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                C801) *
               C92067 * C14524 +
           ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                C92084 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C801) *
               C92067 * C14523) *
              C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C801 +
            (C9836 * C1406 + C92337 * C1797 + C9837 * C10814 +
             C92195 * C11431) *
                C92084) *
               C92067 * C14523 +
           ((C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
             C92195 * C25132) *
                C801 +
            (C9836 * C5725 + C92337 * C6202 + C9837 * C24527 +
             C92195 * C25134) *
                C92084) *
               C92067 * C14524 +
           ((C9836 * C16095 + C92337 * C16563 + C9837 * C24525 +
             C92195 * C25133) *
                C801 +
            (C9836 * C16099 + C92337 * C16565 + C9837 * C24529 +
             C92195 * C25135) *
                C92084) *
               C92067 * C14525) *
              C1385) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
               C885 -
           (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
               C799 +
           (C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C886 +
           (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
               C800) *
              C4097 +
          ((C9864 + C9863) * C884 + (C9964 + C9965) * C798 -
           (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
               C885 -
           (C9837 * C3514 + C92195 * C3950 + C9836 * C889 + C92337 * C1269) *
               C799 +
           (C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
               C886 +
           (C9836 * C892 + C92337 * C1270 + C9837 * C8541 + C92195 * C9189) *
               C800) *
              C4098 +
          (C9875 * C884 + C9970 * C798 -
           (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
               C885 -
           (C9837 * C3515 + C92195 * C3951 + C9836 * C888 + C92337 * C1271) *
               C799 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C886 +
           (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
               C800) *
              C4099) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C4097 +
           ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
           C9972 * C4099) *
              C92157 * C93 -
          (((C9968 + C9969) * C92105 + (C9872 + C9871) * C181) * C4099 +
           ((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C4098 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C4097) *
              C92157 * C94 +
          (C9972 * C4097 +
           ((C9871 + C9872) * C181 + (C9969 + C9968) * C92105) * C4098 +
           ((C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                C181 +
            (C9836 * C186 + C92337 * C645 + C9837 * C2781 + C92195 * C3261) *
                C92105) *
               C4099) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C4097 +
           ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
           C9972 * C4099) *
              C92157 * C92084 * C1383 -
          (((C9837 * C1474 + C92195 * C1857 + C9836 * C1469 + C92337 * C1852) *
                C92105 +
            (C9837 * C1392 + C92195 * C1791 + C9836 * C1387 + C92337 * C1786) *
                C181) *
               C4099 +
           ((C9837 * C1473 + C92195 * C1856 + C9836 * C1470 + C92337 * C1853) *
                C92105 +
            (C9837 * C1391 + C92195 * C1790 + C9836 * C1388 + C92337 * C1787) *
                C181) *
               C4098 +
           ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                C92105 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C181) *
               C4097) *
              C92157 * C92084 * C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C181 +
            (C9836 * C1472 + C92337 * C1855 + C9837 * C10930 +
             C92195 * C11508) *
                C92105) *
               C4097 +
           ((C9836 * C1391 + C92337 * C1790 + C9837 * C10809 +
             C92195 * C11429) *
                C181 +
            (C9836 * C1473 + C92337 * C1856 + C9837 * C10931 +
             C92195 * C11509) *
                C92105) *
               C4098 +
           ((C9836 * C1392 + C92337 * C1791 + C9837 * C10810 +
             C92195 * C11430) *
                C181 +
            (C9836 * C1474 + C92337 * C1857 + C9837 * C10932 +
             C92195 * C11510) *
                C92105) *
               C4099) *
              C92157 * C92084 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C181 +
            (C9836 * C890 + C92337 * C1267 + C9837 * C3513 + C92195 * C3949) *
                C92105) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C181 +
            (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
                C92105) *
               C92067 * C14525) *
              C93 -
          (((C9837 * C8541 + C92195 * C9189 + C9836 * C892 + C92337 * C1270) *
                C92105 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C181) *
               C92067 * C14525 +
           ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C92067 *
               C14524 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C92067 *
               C14523) *
              C94 +
          (C9972 * C92067 * C14523 +
           ((C12331 + C12332) * C181 + (C12444 + C12443) * C92105) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C181 +
            (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
                C92105) *
               C92067 * C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C24244 + C24243) * C885 - (C24347 + C24348) * C799 + C24255 * C886 +
           C24353 * C800) *
              C92067 * C14523 +
          ((C24243 + C24244) * C884 + (C24348 + C24347) * C798 -
           (C24248 + C24247) * C885 - (C24350 + C24349) * C799 +
           (C24254 + C24253) * C886 + (C24351 + C24352) * C800) *
              C92067 * C14524 +
          (C24255 * C884 + C24353 * C798 - (C24253 + C24254) * C885 -
           (C24352 + C24351) * C799 +
           (C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
            C92195 * C22872) *
               C886 +
           (C9836 * C15396 + C92337 * C15922 + C9837 * C22504 +
            C92195 * C22948) *
               C800) *
              C92067 * C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C14523 +
           ((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C92067 *
               C14524 +
           (C24255 * C181 + C24353 * C92105) * C92067 * C14525) *
              C92084 * C1383 -
          (((C9837 * C16177 + C92195 * C16641 + C9836 * C8540 +
             C92337 * C9188) *
                C92105 +
            (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
             C92337 * C9072) *
                C181) *
               C92067 * C14525 +
           ((C9837 * C5805 + C92195 * C6279 + C9836 * C3513 + C92337 * C3949) *
                C92105 +
            (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                C181) *
               C92067 * C14524 +
           ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                C92105 +
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C181) *
               C92067 * C14523) *
              C92084 * C1384 +
          (((C9836 * C1390 + C92337 * C1789 + C9837 * C10808 +
             C92195 * C11428) *
                C181 +
            (C9836 * C1472 + C92337 * C1855 + C9837 * C10930 +
             C92195 * C11508) *
                C92105) *
               C92067 * C14523 +
           ((C9836 * C5719 + C92337 * C6199 + C9837 * C24524 +
             C92195 * C25132) *
                C181 +
            (C9836 * C5805 + C92337 * C6279 + C9837 * C24638 +
             C92195 * C25210) *
                C92105) *
               C92067 * C14524 +
           ((C9836 * C16095 + C92337 * C16563 + C9837 * C24525 +
             C92195 * C25133) *
                C181 +
            (C9836 * C16177 + C92337 * C16641 + C9837 * C24639 +
             C92195 * C25211) *
                C92105) *
               C92067 * C14525) *
              C92084 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C4097 +
           ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
           C10068 * C4099) *
              C92157 * C798 -
          (((C9837 * C3589 + C92195 * C4021 + C9836 * C954 + C92337 * C1326) *
                C92116 +
            (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
                C244) *
               C4099 +
           ((C9837 * C3588 + C92195 * C4020 + C9836 * C955 + C92337 * C1327) *
                C92116 +
            (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
                C244) *
               C4098 +
           ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                C92116 +
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C244) *
               C4097) *
              C92157 * C799 +
          (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C4097 +
           ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
                C244 +
            (C9836 * C958 + C92337 * C1330 + C9837 * C8654 + C92195 * C9293) *
                C92116) *
               C4098 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C4099) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C4097 +
           ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
           C10068 * C4099) *
              C92157 * C92105 * C93 -
          (((C10064 + C10065) * C92116 + (C9872 + C9871) * C244) * C4099 +
           ((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C4098 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C4097) *
              C92157 * C92105 * C94 +
          (C10068 * C4097 +
           ((C9871 + C9872) * C244 + (C10065 + C10064) * C92116) * C4098 +
           ((C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                C244 +
            (C9836 * C249 + C92337 * C723 + C9837 * C2851 + C92195 * C3343) *
                C92116) *
               C4099) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C1534 +
           (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
               C1383 -
           (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
               C1535 -
           (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
               C1384 +
           (C9836 * C1390 + C92337 * C1789 + C9837 * C10808 + C92195 * C11428) *
               C1536 +
           (C9836 * C1541 + C92337 * C1910 + C9837 * C11028 + C92195 * C11585) *
               C1385) *
              C4097 +
          ((C9864 + C9863) * C1534 + (C10060 + C10061) * C1383 -
           (C9837 * C1391 + C92195 * C1790 + C9836 * C1388 + C92337 * C1787) *
               C1535 -
           (C9837 * C1542 + C92195 * C1912 + C9836 * C1539 + C92337 * C1911) *
               C1384 +
           (C9836 * C1391 + C92337 * C1790 + C9837 * C10809 + C92195 * C11429) *
               C1536 +
           (C9836 * C1542 + C92337 * C1912 + C9837 * C11029 + C92195 * C11586) *
               C1385) *
              C4098 +
          (C9875 * C1534 + C10066 * C1383 -
           (C9837 * C1392 + C92195 * C1791 + C9836 * C1387 + C92337 * C1786) *
               C1535 -
           (C9837 * C1543 + C92195 * C1914 + C9836 * C1538 + C92337 * C1913) *
               C1384 +
           (C9836 * C1392 + C92337 * C1791 + C9837 * C10810 + C92195 * C11430) *
               C1536 +
           (C9836 * C1543 + C92337 * C1914 + C9837 * C11030 + C92195 * C11587) *
               C1385) *
              C4099) *
         C92157 * C92105 * C92084) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C244 +
            (C9836 * C956 + C92337 * C1328 + C9837 * C3587 + C92195 * C4019) *
                C92116) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C92067 * C14525) *
              C92105 * C93 -
          (((C9837 * C8654 + C92195 * C9293 + C9836 * C958 + C92337 * C1330) *
                C92116 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C244) *
               C92067 * C14525 +
           ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92067 *
               C14524 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C92067 *
               C14523) *
              C92105 * C94 +
          (C10068 * C92067 * C14523 +
           ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C92067 * C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C92067 *
               C14524 +
           C24450 * C14525) *
              C798 -
          (((C24445 + C24446) * C92116 + (C24253 + C24254) * C244) * C92067 *
               C14525 +
           ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C92067 *
               C14524 +
           ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C92067 *
               C14523) *
              C799 +
          (C24450 * C14523 +
           ((C24254 + C24253) * C244 + (C24446 + C24445) * C92116) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C244 +
            (C9836 * C15493 + C92337 * C16004 + C9837 * C22581 +
             C92195 * C23018) *
                C92116) *
               C92067 * C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C1534 +
           (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
               C1383 -
           (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
               C1535 -
           (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
               C1384 +
           (C9836 * C1390 + C92337 * C1789 + C9837 * C10808 + C92195 * C11428) *
               C1536 +
           (C9836 * C1541 + C92337 * C1910 + C9837 * C11028 + C92195 * C11585) *
               C1385) *
              C92067 * C14523 +
          ((C24243 + C24244) * C1534 + (C24441 + C24442) * C1383 -
           (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
               C1535 -
           (C9837 * C5885 + C92195 * C6356 + C9836 * C3587 + C92337 * C4019) *
               C1384 +
           (C9836 * C5719 + C92337 * C6199 + C9837 * C24524 + C92195 * C25132) *
               C1536 +
           (C9836 * C5885 + C92337 * C6356 + C9837 * C24740 + C92195 * C25286) *
               C1385) *
              C92067 * C14524 +
          (C24255 * C1534 + C24447 * C1383 -
           (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 + C92337 * C9072) *
               C1535 -
           (C9837 * C16255 + C92195 * C16717 + C9836 * C8653 + C92337 * C9292) *
               C1384 +
           (C9836 * C16095 + C92337 * C16563 + C9837 * C24525 +
            C92195 * C25133) *
               C1536 +
           (C9836 * C16255 + C92337 * C16717 + C9837 * C24741 +
            C92195 * C25287) *
               C1385) *
              C92067 * C14525) *
         C92105 * C92084) /
            (p * q * std::sqrt(p + q));
    d2eexx[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                       C4098 * C114 + C4104 * C109 + C4099 * C115) *
                          C1987 +
                      (C4102 * C117 + C4097 * C125 + C4103 * C118 +
                       C4098 * C126 + C4104 * C119 + C4099 * C127) *
                          C1983 -
                      (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                       C4098 * C115 + C4102 * C108 + C4097 * C114) *
                          C1988 -
                      (C4104 * C120 + C4099 * C128 + C4103 * C119 +
                       C4098 * C127 + C4102 * C118 + C4097 * C126) *
                          C1984) *
                         C92157 * C92337 +
                     ((C10845 + C10846 + C10847) * C1987 +
                      (C10848 + C10849 + C10850) * C1983 -
                      (C12665 + C12666 + C12667) * C1988 -
                      (C12668 + C12669 + C12670) * C1984) *
                         C92157 * C92195) *
                        C2709 +
                    (((C12667 + C12666 + C12665) * C1988 -
                      ((C10850 + C10849 + C10848) * C1983 +
                       (C10847 + C10846 + C10845) * C1987) +
                      (C12670 + C12669 + C12668) * C1984) *
                         C92157 * C92337 +
                     ((C4102 * C1391 + C4097 * C1403 + C4103 * C1392 +
                       C4098 * C1404 + C4104 * C1393 + C4099 * C1405) *
                          C1988 -
                      ((C10851 + C10852 + C10853) * C1983 +
                       (C10854 + C10855 + C10856) * C1987) +
                      (C4102 * C1407 + C4097 * C1415 + C4103 * C1408 +
                       C4098 * C1416 + C4104 * C1409 + C4099 * C1417) *
                          C1984) *
                         C92157 * C92195) *
                        C2710) *
                   C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C1987 +
                       (C19671 * C117 + C92067 * C125) * C1983 -
                       (C19671 * C108 + C92067 * C114) * C1988 -
                       (C19671 * C118 + C92067 * C126) * C1984) *
                          C14523 +
                      (C21165 + C21166 - C21189 - C21190) * C14524 +
                      (C21171 + C21172 - C21191 - C21192) * C14525) *
                         C92337 +
                     ((C26329 + C26330 - C26337 - C26338) * C14523 +
                      (C25387 + C25388 - C25403 - C25404) * C14524 +
                      (C25393 + C25394 - C25405 - C25406) * C14525) *
                         C92195) *
                        C2709 +
                    (((C26337 - (C26330 + C26329) + C26338) * C14523 +
                      (C25403 - (C25388 + C25387) + C25404) * C14524 +
                      (C25405 - (C25394 + C25393) + C25406) * C14525) *
                         C92337 +
                     (((C19671 * C1391 + C92067 * C1403) * C1988 -
                       (C24555 * C1983 + C24556 * C1987) +
                       (C19671 * C1407 + C92067 * C1415) * C1984) *
                          C14523 +
                      ((C19671 * C5720 + C92067 * C5723) * C1988 -
                       (C24553 * C1983 + C24554 * C1987) +
                       (C19671 * C5726 + C92067 * C5729) * C1984) *
                          C14524 +
                      ((C19671 * C16096 + C92067 * C16098) * C1988 -
                       (C24551 * C1983 + C24552 * C1987) +
                       (C19671 * C16100 + C92067 * C16102) * C1984) *
                          C14525) *
                         C92195) *
                        C2710) *
                   C92105) /
                      (p * q * std::sqrt(p + q));
    d2eexy[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                        C4098 * C114 + C4104 * C109 + C4099 * C115) *
                           C181 +
                       (C4102 * C182 + C4097 * C188 + C4103 * C183 +
                        C4098 * C189 + C4104 * C184 + C4099 * C190) *
                           C92105) *
                          C92157 * C92337 +
                      ((C10845 + C10846 + C10847) * C181 +
                       (C10949 + C10950 + C10951) * C92105) *
                          C92157 * C92195) *
                         C1983 -
                     (((C12775 + C12776 + C12777) * C92105 +
                       (C12665 + C12666 + C12667) * C181) *
                          C92157 * C92195 +
                      ((C4104 * C185 + C4099 * C191 + C4103 * C184 +
                        C4098 * C190 + C4102 * C183 + C4097 * C189) *
                           C92105 +
                       (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                        C4098 * C115 + C4102 * C108 + C4097 * C114) *
                           C181) *
                          C92157 * C92337) *
                         C1984) *
                        C2709 +
                    ((((C12667 + C12666 + C12665) * C181 +
                       (C12777 + C12776 + C12775) * C92105) *
                          C92157 * C92337 +
                      ((C4102 * C1391 + C4097 * C1403 + C4103 * C1392 +
                        C4098 * C1404 + C4104 * C1393 + C4099 * C1405) *
                           C181 +
                       (C4102 * C1473 + C4097 * C1481 + C4103 * C1474 +
                        C4098 * C1482 + C4104 * C1475 + C4099 * C1483) *
                           C92105) *
                          C92157 * C92195) *
                         C1984 -
                     (((C10952 + C10953 + C10954) * C92105 +
                       (C10854 + C10855 + C10856) * C181) *
                          C92157 * C92195 +
                      ((C10951 + C10950 + C10949) * C92105 +
                       (C10847 + C10846 + C10845) * C181) *
                          C92157 * C92337) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C19671 * C107 + C92067 * C113) * C181 +
                        (C19671 * C182 + C92067 * C188) * C92105) *
                           C14523 +
                       (C20147 * C181 + C20225 * C92105) * C14524 +
                       (C20149 * C181 + C20226 * C92105) * C14525) *
                          C92337 +
                      ((C24643 + C24663) * C14523 + (C24646 + C24647) * C14524 +
                       (C24648 + C24649) * C14525) *
                          C92195) *
                         C1983 -
                     (((C26437 + C26438) * C14525 + (C26439 + C26440) * C14524 +
                       (C26445 + C26443) * C14523) *
                          C92195 +
                      ((C21268 * C92105 + C21185 * C181) * C14525 +
                       (C21267 * C92105 + C21183 * C181) * C14524 +
                       ((C19671 * C183 + C92067 * C189) * C92105 +
                        (C19671 * C108 + C92067 * C114) * C181) *
                           C14523) *
                          C92337) *
                         C1984) *
                        C2709 +
                    ((((C26443 + C26445) * C14523 + (C26440 + C26439) * C14524 +
                       (C26438 + C26437) * C14525) *
                          C92337 +
                      (((C19671 * C1391 + C92067 * C1403) * C181 +
                        (C19671 * C1473 + C92067 * C1481) * C92105) *
                           C14523 +
                       ((C19671 * C5720 + C92067 * C5723) * C181 +
                        (C19671 * C5806 + C92067 * C5809) * C92105) *
                           C14524 +
                       ((C19671 * C16096 + C92067 * C16098) * C181 +
                        (C19671 * C16178 + C92067 * C16180) * C92105) *
                           C14525) *
                          C92195) *
                         C1984 -
                     (((C24664 + C24652) * C14525 + (C24665 + C24655) * C14524 +
                       (C24666 + C24658) * C14523) *
                          C92195 +
                      ((C24649 + C24648) * C14525 + (C24647 + C24646) * C14524 +
                       (C24663 + C24643) * C14523) *
                          C92337) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4102 * C107 + C4097 * C113 + C4103 * C108 +
                       C4098 * C114 + C4104 * C109 + C4099 * C115) *
                          C2849 +
                      (C4102 * C245 + C4097 * C251 + C4103 * C246 +
                       C4098 * C252 + C4104 * C247 + C4099 * C253) *
                          C2709 -
                      (C10847 + C10846 + C10845) * C2850 -
                      (C11047 + C11048 + C11049) * C2710) *
                         C92157 * C92337 +
                     ((C10845 + C10846 + C10847) * C2849 +
                      (C11049 + C11048 + C11047) * C2709 -
                      (C10854 + C10855 + C10856) * C2850 -
                      (C11052 + C11051 + C11050) * C2710) *
                         C92157 * C92195) *
                        C92105 * C1983 +
                    (((C12667 + C12666 + C12665) * C2850 -
                      ((C4104 * C248 + C4099 * C254 + C4103 * C247 +
                        C4098 * C253 + C4102 * C246 + C4097 * C252) *
                           C2709 +
                       (C4104 * C110 + C4099 * C116 + C4103 * C109 +
                        C4098 * C115 + C4102 * C108 + C4097 * C114) *
                           C2849) +
                      (C12882 + C12883 + C12884) * C2710) *
                         C92157 * C92337 +
                     ((C4102 * C1391 + C4097 * C1403 + C4103 * C1392 +
                       C4098 * C1404 + C4104 * C1393 + C4099 * C1405) *
                          C2850 -
                      ((C12884 + C12883 + C12882) * C2709 +
                       (C12665 + C12666 + C12667) * C2849) +
                      (C4102 * C1542 + C4097 * C1550 + C4103 * C1543 +
                       C4098 * C1551 + C4104 * C1544 + C4099 * C1552) *
                          C2710) *
                         C92157 * C92195) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C19671 * C107 + C92067 * C113) * C2849 +
                       (C19671 * C245 + C92067 * C251) * C2709 -
                       C24549 * C2850 - C24753 * C2710) *
                          C14523 +
                      (C22584 + C22585 - C22586 - C22602) * C14524 +
                      (C22589 + C22590 - C22591 - C22603) * C14525) *
                         C92337 +
                     ((C24549 * C2849 + C24753 * C2709 - C24556 * C2850 -
                       C24754 * C2710) *
                          C14523 +
                      (C22432 * C2849 + C22599 * C2709 - C24554 * C2850 -
                       C24755 * C2710) *
                          C14524 +
                      (C22430 * C2849 + C22600 * C2709 - C24552 * C2850 -
                       C24756 * C2710) *
                          C14525) *
                         C92195) *
                        C92105 * C1983 +
                    (((C26335 * C2850 -
                       ((C19671 * C246 + C92067 * C252) * C2709 +
                        (C19671 * C108 + C92067 * C114) * C2849) +
                       C26546 * C2710) *
                          C14523 +
                      (C25399 * C2850 - (C21345 * C2709 + C21183 * C2849) +
                       C25615 * C2710) *
                          C14524 +
                      (C25401 * C2850 - (C21346 * C2709 + C21185 * C2849) +
                       C25616 * C2710) *
                          C14525) *
                         C92337 +
                     (((C19671 * C1391 + C92067 * C1403) * C2850 -
                       (C26546 * C2709 + C26335 * C2849) +
                       (C19671 * C1542 + C92067 * C1550) * C2710) *
                          C14523 +
                      ((C19671 * C5720 + C92067 * C5723) * C2850 -
                       (C25615 * C2709 + C25399 * C2849) +
                       (C19671 * C5886 + C92067 * C5889) * C2710) *
                          C14524 +
                      ((C19671 * C16096 + C92067 * C16098) * C2850 -
                       (C25616 * C2709 + C25401 * C2849) +
                       (C19671 * C16256 + C92067 * C16258) * C2710) *
                          C14525) *
                         C92195) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C1987 +
             (C307 * C117 + C92157 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92337 +
            (C12983 + C12984 - C12985 - C12986) * C92195) *
               C4097 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92337 +
            (C12987 + C12988 - C12989 - C12990) * C92195) *
               C4098 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C92337 +
            (C12991 + C12992 - C12993 - C12994) * C92195) *
               C4099) *
              C2709 +
          (((C12985 - (C12984 + C12983) + C12986) * C92337 +
            (C11158 * C1988 - (C11159 * C1983 + C11160 * C1987) +
             C11157 * C1984) *
                C92195) *
               C4097 +
           ((C12989 - (C12988 + C12987) + C12990) * C92337 +
            (C11156 * C1988 - (C11157 * C1983 + C11158 * C1987) +
             C11155 * C1984) *
                C92195) *
               C4098 +
           ((C12993 - (C12992 + C12991) + C12994) * C92337 +
            ((C307 * C1393 + C92157 * C1610) * C1988 -
             (C11155 * C1983 + C11156 * C1987) +
             (C307 * C1409 + C92157 * C1618) * C1984) *
                C92195) *
               C4099) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C1987 +
            (C14750 * C117 + C14523 * C314 + C14751 * C813 + C14524 * C1030 +
             C14752 * C822 + C14525 * C1031) *
                C1983 -
            (C14778 + C14779 + C14780) * C1988 -
            (C14781 + C14782 + C14783) * C1984) *
               C92337 +
           ((C24859 + C24860 + C24861) * C1987 +
            (C24862 + C24863 + C24864) * C1983 -
            (C18105 + C18104 + C18103) * C1988 -
            (C18108 + C18107 + C18106) * C1984) *
               C92195) *
              C92067 * C2709 +
          (((C18103 + C18104 + C18105) * C1988 -
            ((C24864 + C24863 + C24862) * C1983 +
             (C24861 + C24860 + C24859) * C1987) +
            (C18106 + C18107 + C18108) * C1984) *
               C92337 +
           ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 + C14524 * C5966 +
             C14752 * C16096 + C14525 * C16334) *
                C1988 -
            ((C24865 + C24866 + C24867) * C1983 +
             (C24868 + C24869 + C24870) * C1987) +
            (C14750 * C1407 + C14523 * C1616 + C14751 * C5726 + C14524 * C5969 +
             C14752 * C16100 + C14525 * C16336) *
                C1984) *
               C92195) *
              C92067 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eeyy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92157 * C308) * C181 +
              (C307 * C182 + C92157 * C394) * C92105) *
                 C92337 +
             (C11246 + C11262) * C92195) *
                C4097 +
            ((C401 + C417) * C92337 + C13093 * C92195) * C4098 +
            C9678 * C4099) *
               C1983 -
           (((C3021 + C3013) * C92195 + (C419 + C407) * C92337) * C4099 +
            (C13094 * C92195 + (C418 + C404) * C92337) * C4098 +
            (C13095 * C92195 + (C417 + C401) * C92337) * C4097) *
               C1984) *
              C2709 +
          (((C13093 * C92337 + (C11254 + C11264) * C92195) * C4097 +
            (C9676 * C92337 + (C11251 + C11263) * C92195) * C4098 +
            ((C3013 + C3021) * C92337 +
             ((C307 * C1393 + C92157 * C1610) * C181 +
              (C307 * C1475 + C92157 * C1676) * C92105) *
                 C92195) *
                C4099) *
               C1984 -
           (((C11263 + C11251) * C92195 + C13094 * C92337) * C4099 +
            ((C11264 + C11254) * C92195 + C13095 * C92337) * C4098 +
            ((C11265 + C11257) * C92195 + (C11262 + C11246) * C92337) * C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
              C14752 * C806 + C14525 * C1023) *
                 C181 +
             (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
              C14752 * C891 + C14525 * C1086) *
                 C92105) *
                C92337 +
            ((C24859 + C24860 + C24861) * C181 +
             (C24959 + C24960 + C24961) * C92105) *
                C92195) *
               C92067 * C1983 -
           (((C18215 + C18214 + C18213) * C92105 +
             (C18105 + C18104 + C18103) * C181) *
                C92195 +
            ((C14878 + C14877 + C14876) * C92105 +
             (C14778 + C14779 + C14780) * C181) *
                C92337) *
               C92067 * C1984) *
              C2709 +
          ((((C18103 + C18104 + C18105) * C181 +
             (C18213 + C18214 + C18215) * C92105) *
                C92337 +
            ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 +
              C14524 * C5966 + C14752 * C16096 + C14525 * C16334) *
                 C181 +
             (C14750 * C1473 + C14523 * C1674 + C14751 * C5806 +
              C14524 * C6046 + C14752 * C16178 + C14525 * C16412) *
                 C92105) *
                C92195) *
               C92067 * C1984 -
           (((C24962 + C24963 + C24964) * C92105 +
             (C24868 + C24869 + C24870) * C181) *
                C92195 +
            ((C24961 + C24960 + C24959) * C92105 +
             (C24861 + C24860 + C24859) * C181) *
                C92337) *
               C92067 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C2849 +
                       (C307 * C245 + C92157 * C474) * C2709 - C11153 * C2850 -
                       C11351 * C2710) *
                          C92337 +
                      (C11153 * C2849 + C11351 * C2709 - C11160 * C2850 -
                       C11352 * C2710) *
                          C92195) *
                         C4097 +
                     ((C3089 + C3090 - C3091 - C3107) * C92337 +
                      (C13194 + C13195 - C13196 - C13197) * C92195) *
                         C4098 +
                     ((C3094 + C3095 - C3096 - C3108) * C92337 +
                      (C13198 + C13199 - C13200 - C13201) * C92195) *
                         C4099) *
                        C92105 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C92337 +
                      (C13196 - (C13195 + C13194) + C13197) * C92195) *
                         C4097 +
                     ((C3096 - (C3095 + C3094) + C3108) * C92337 +
                      (C13200 - (C13199 + C13198) + C13201) * C92195) *
                         C4098 +
                     ((C3101 - (C3100 + C3099) + C3109) * C92337 +
                      ((C307 * C1393 + C92157 * C1610) * C2850 -
                       (C3106 * C2709 + C2938 * C2849) +
                       (C307 * C1544 + C92157 * C1734) * C2710) *
                          C92195) *
                         C4099) *
                        C92105 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C2849 +
                      (C14750 * C245 + C14523 * C474 + C14751 * C956 +
                       C14524 * C1146 + C14752 * C957 + C14525 * C1147) *
                          C2709 -
                      (C24861 + C24860 + C24859) * C2850 -
                      (C25053 + C25054 + C25055) * C2710) *
                         C92337 +
                     ((C24859 + C24860 + C24861) * C2849 +
                      (C25055 + C25054 + C25053) * C2709 -
                      (C24868 + C24869 + C24870) * C2850 -
                      (C25058 + C25057 + C25056) * C2710) *
                         C92195) *
                        C92067 * C92105 * C1983 +
                    (((C18103 + C18104 + C18105) * C2850 -
                      ((C14970 + C14969 + C14968) * C2709 +
                       (C14778 + C14779 + C14780) * C2849) +
                      (C18322 + C18321 + C18320) * C2710) *
                         C92337 +
                     ((C14750 * C1391 + C14523 * C1608 + C14751 * C5720 +
                       C14524 * C5966 + C14752 * C16096 + C14525 * C16334) *
                          C2850 -
                      ((C18320 + C18321 + C18322) * C2709 +
                       (C18105 + C18104 + C18103) * C2849) +
                      (C14750 * C1542 + C14523 * C1730 + C14751 * C5886 +
                       C14524 * C6123 + C14752 * C16256 + C14525 * C16488) *
                          C2710) *
                         C92195) *
                        C92067 * C92105 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eezx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C4097 +
           ((C9864 + C9863) * C1987 + (C9866 + C9865) * C1983 -
            (C9868 + C9867) * C1988 - (C9870 + C9869) * C1984) *
               C4098 +
           (C9875 * C1987 + C9876 * C1983 - (C9872 + C9871) * C1988 -
            (C9874 + C9873) * C1984) *
               C4099) *
              C92157 * C2709 +
          (((C13316 + C13317) * C1988 -
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C1983 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C1987) +
            (C13318 + C13319) * C1984) *
               C4097 +
           ((C13320 + C13321) * C1988 -
            ((C13319 + C13318) * C1983 + (C13317 + C13316) * C1987) +
            (C13322 + C13323) * C1984) *
               C4098 +
           ((C9836 * C1386 + C92337 * C1785 + C9837 * C1393 + C92195 * C1792) *
                C1988 -
            ((C13323 + C13322) * C1983 + (C13321 + C13320) * C1987) +
            (C9836 * C1394 + C92337 * C1793 + C9837 * C1409 + C92195 * C1800) *
                C1984) *
               C4099) *
              C92157 * C2710) *
         C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C1987 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C1983 -
            (C9863 + C9864) * C1988 - (C9865 + C9866) * C1984) *
               C92067 * C14523 +
           ((C24243 + C24244) * C1987 + (C24245 + C24246) * C1983 -
            (C12328 + C12327) * C1988 - (C12330 + C12329) * C1984) *
               C92067 * C14524 +
           (C24255 * C1987 + C24256 * C1983 - (C26019 + C26020) * C1988 -
            (C26021 + C26022) * C1984) *
               C92067 * C14525) *
              C2709 +
          (((C13316 + C13317) * C1988 -
            ((C9837 * C1406 + C92195 * C1797 + C9836 * C1397 + C92337 * C1796) *
                 C1983 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C1987) +
            (C13318 + C13319) * C1984) *
               C92067 * C14523 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C1988 -
            ((C9837 * C5725 + C92195 * C6202 + C9836 * C3439 + C92337 * C3879) *
                 C1983 +
             (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                 C1987) +
            (C9836 * C3440 + C92337 * C3880 + C9837 * C5726 + C92195 * C6203) *
                C1984) *
               C92067 * C14524 +
           ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
             C92195 * C16564) *
                C1988 -
            ((C9837 * C16099 + C92195 * C16565 + C9836 * C8418 +
              C92337 * C9075) *
                 C1983 +
             (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
              C92337 * C9072) *
                 C1987) +
            (C9836 * C8419 + C92337 * C9076 + C9837 * C16100 +
             C92195 * C16566) *
                C1984) *
               C92067 * C14525) *
              C2710) *
         C92105) /
            (p * q * std::sqrt(p + q));
    d2eezy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C4097 +
            ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
            C9972 * C4099) *
               C92157 * C1983 -
           (((C9968 + C9969) * C92105 + (C9872 + C9871) * C181) * C4099 +
            ((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C4098 +
            ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C4097) *
               C92157 * C1984) *
              C2709 +
          ((((C13316 + C13317) * C181 + (C13430 + C13431) * C92105) * C4097 +
            ((C13320 + C13321) * C181 + (C13432 + C13433) * C92105) * C4098 +
            ((C9836 * C1386 + C92337 * C1785 + C9837 * C1393 + C92195 * C1792) *
                 C181 +
             (C9836 * C1468 + C92337 * C1851 + C9837 * C1475 + C92195 * C1858) *
                 C92105) *
                C4099) *
               C92157 * C1984 -
           (((C13433 + C13432) * C92105 + (C13321 + C13320) * C181) * C4099 +
            ((C13431 + C13430) * C92105 + (C13317 + C13316) * C181) * C4098 +
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C92105 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C181) *
                C4097) *
               C92157 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                 C181 +
             (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                 C92105) *
                C92067 * C14523 +
            ((C24243 + C24244) * C181 + (C24348 + C24347) * C92105) * C92067 *
                C14524 +
            (C24255 * C181 + C24353 * C92105) * C92067 * C14525) *
               C1983 -
           (((C26126 + C26125) * C92105 + (C26019 + C26020) * C181) * C92067 *
                C14525 +
            ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C92067 *
                C14524 +
            ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C92067 *
                C14523) *
               C1984) *
              C2709 +
          ((((C13316 + C13317) * C181 + (C13430 + C13431) * C92105) * C92067 *
                C14523 +
            ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                 C181 +
             (C9836 * C3514 + C92337 * C3950 + C9837 * C5806 + C92195 * C6280) *
                 C92105) *
                C92067 * C14524 +
            ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
              C92195 * C16564) *
                 C181 +
             (C9836 * C8541 + C92337 * C9189 + C9837 * C16178 +
              C92195 * C16642) *
                 C92105) *
                C92067 * C14525) *
               C1984 -
           (((C9837 * C16177 + C92195 * C16641 + C9836 * C8540 +
              C92337 * C9188) *
                 C92105 +
             (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
              C92337 * C9072) *
                 C181) *
                C92067 * C14525 +
            ((C9837 * C5805 + C92195 * C6279 + C9836 * C3513 + C92337 * C3949) *
                 C92105 +
             (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                 C181) *
                C92067 * C14524 +
            ((C9837 * C1472 + C92195 * C1855 + C9836 * C1471 + C92337 * C1854) *
                 C92105 +
             (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                 C181) *
                C92067 * C14523) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C4097 +
           ((C9864 + C9863) * C2849 + (C10060 + C10061) * C2709 -
            (C13317 + C13316) * C2850 - (C13540 + C13541) * C2710) *
               C4098 +
           (C9875 * C2849 + C10066 * C2709 - (C13321 + C13320) * C2850 -
            (C13542 + C13543) * C2710) *
               C4099) *
              C92157 * C92105 * C1983 +
          (((C13316 + C13317) * C2850 -
            ((C10061 + C10060) * C2709 + (C9863 + C9864) * C2849) +
            (C13541 + C13540) * C2710) *
               C4097 +
           ((C13320 + C13321) * C2850 -
            ((C10063 + C10062) * C2709 + (C9868 + C9867) * C2849) +
            (C13543 + C13542) * C2710) *
               C4098 +
           ((C9836 * C1386 + C92337 * C1785 + C9837 * C1393 + C92195 * C1792) *
                C2850 -
            ((C10064 + C10065) * C2709 + (C9872 + C9871) * C2849) +
            (C9836 * C1537 + C92337 * C1915 + C9837 * C1544 + C92195 * C1916) *
                C2710) *
               C4099) *
              C92157 * C92105 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C2849 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C2709 -
            (C9837 * C1390 + C92195 * C1789 + C9836 * C1389 + C92337 * C1788) *
                C2850 -
            (C9837 * C1541 + C92195 * C1910 + C9836 * C1540 + C92337 * C1909) *
                C2710) *
               C92067 * C14523 +
           ((C24243 + C24244) * C2849 + (C24441 + C24442) * C2709 -
            (C9837 * C5719 + C92195 * C6199 + C9836 * C3431 + C92337 * C3875) *
                C2850 -
            (C9837 * C5885 + C92195 * C6356 + C9836 * C3587 + C92337 * C4019) *
                C2710) *
               C92067 * C14524 +
           (C24255 * C2849 + C24447 * C2709 -
            (C9837 * C16095 + C92195 * C16563 + C9836 * C8412 +
             C92337 * C9072) *
                C2850 -
            (C9837 * C16255 + C92195 * C16717 + C9836 * C8653 +
             C92337 * C9292) *
                C2710) *
               C92067 * C14525) *
              C92105 * C1983 +
          (((C13316 + C13317) * C2850 -
            ((C10061 + C10060) * C2709 + (C9863 + C9864) * C2849) +
            (C13541 + C13540) * C2710) *
               C92067 * C14523 +
           ((C9836 * C3432 + C92337 * C3876 + C9837 * C5720 + C92195 * C6200) *
                C2850 -
            ((C12553 + C12554) * C2709 + (C12328 + C12327) * C2849) +
            (C9836 * C3588 + C92337 * C4020 + C9837 * C5886 + C92195 * C6357) *
                C2710) *
               C92067 * C14524 +
           ((C9836 * C8413 + C92337 * C9073 + C9837 * C16096 +
             C92195 * C16564) *
                C2850 -
            ((C26230 + C26229) * C2709 + (C26019 + C26020) * C2849) +
            (C9836 * C8654 + C92337 * C9293 + C9837 * C16256 +
             C92195 * C16718) *
                C2710) *
               C92067 * C14525) *
              C92105 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
            C4104 * C119 + C4099 * C127) *
               C93 -
           (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
            C4102 * C108 + C4097 * C114) *
               C105 -
           (C4104 * C120 + C4099 * C128 + C4103 * C119 + C4098 * C127 +
            C4102 * C118 + C4097 * C126) *
               C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
            C4104 * C111 + C4099 * C121) *
               C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C4098 * C128 +
            C4104 * C122 + C4099 * C129) *
               C95) *
              C92157 * C92337 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
            C4104 * C1387 + C4099 * C1399) *
               C104 +
           (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
            C4104 * C1395 + C4099 * C1411) *
               C93 -
           (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
            C4102 * C1388 + C4097 * C1400) *
               C105 -
           (C4104 * C1394 + C4099 * C1410 + C4103 * C1395 + C4098 * C1411 +
            C4102 * C1396 + C4097 * C1412) *
               C94 +
           (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
            C4104 * C2711 + C4099 * C2712) *
               C106 +
           (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C4098 * C1410 +
            C4104 * C2713 + C4099 * C2714) *
               C95) *
              C92157 * C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C4098 * C126 +
             C4104 * C119 + C4099 * C127) *
                C92084) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C801 +
            (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C4098 * C1412 +
             C4104 * C1395 + C4099 * C1411) *
                C92084) *
               C92157 * C92195) *
              C92116 * C798 -
          (((C8437 + C8438 + C8439) * C92084 + (C8440 + C8441 + C8442) * C801) *
               C92157 * C92195 +
           ((C4907 + C4906 + C4905) * C92084 + (C4904 + C4903 + C4902) * C801) *
               C92157 * C92337) *
              C92116 * C799 +
          (((C4913 + C4912 + C4911) * C801 + (C4910 + C4909 + C4908) * C92084) *
               C92157 * C92337 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C801 +
            (C4102 * C8418 + C4097 * C8421 + C4103 * C8419 + C4098 * C8422 +
             C4104 * C8420 + C4099 * C8423) *
                C92084) *
               C92157 * C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C104 +
            (C19671 * C117 + C92067 * C125) * C93 -
            (C19671 * C108 + C92067 * C114) * C105 -
            (C19671 * C118 + C92067 * C126) * C94 +
            (C19671 * C109 + C92067 * C115) * C106 +
            (C19671 * C119 + C92067 * C127) * C95) *
               C14523 +
           (C20147 * C104 + C20148 * C93 - C21183 * C105 - C21184 * C94 +
            (C19671 * C803 + C92067 * C815) * C106 +
            (C19671 * C811 + C92067 * C827) * C95) *
               C14524 +
           (C20149 * C104 + C20150 * C93 - C21185 * C105 - C21186 * C94 +
            (C19671 * C808 + C92067 * C820) * C106 +
            (C19671 * C824 + C92067 * C832) * C95) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C104 +
            (C19671 * C1397 + C92067 * C1413) * C93 -
            (C19671 * C1388 + C92067 * C1400) * C105 -
            (C19671 * C1396 + C92067 * C1412) * C94 +
            (C19671 * C1387 + C92067 * C1399) * C106 +
            (C19671 * C1395 + C92067 * C1411) * C95) *
               C14523 +
           (C22432 * C104 + C22431 * C93 -
            (C19671 * C3432 + C92067 * C3436) * C105 -
            (C19671 * C3440 + C92067 * C3444) * C94 +
            (C19671 * C3433 + C92067 * C3437) * C106 +
            (C19671 * C3441 + C92067 * C3445) * C95) *
               C14524 +
           (C22430 * C104 + C22429 * C93 -
            (C19671 * C8413 + C92067 * C8416) * C105 -
            (C19671 * C8419 + C92067 * C8422) * C94 +
            (C19671 * C8414 + C92067 * C8417) * C106 +
            (C19671 * C8420 + C92067 * C8423) * C95) *
               C14525) *
              C92195) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C801 +
             (C19671 * C117 + C92067 * C125) * C92084) *
                C14523 +
            (C20155 + C20156) * C14524 + C20163 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C801 +
             (C19671 * C1397 + C92067 * C1413) * C92084) *
                C14523 +
            (C22438 + C22437) * C14524 + C23767 * C14525) *
               C92195) *
              C92116 * C798 -
          (((C22433 + C22434) * C14525 + (C22435 + C22436) * C14524 +
            (C22437 + C22438) * C14523) *
               C92195 +
           ((C20160 + C20159) * C14525 + (C20158 + C20157) * C14524 +
            (C20156 + C20155) * C14523) *
               C92337) *
              C92116 * C799 +
          ((C20163 * C14523 + C20164 * C14524 + (C20162 + C20161) * C14525) *
               C92337 +
           (C23767 * C14523 + (C22434 + C22433) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C801 +
             (C19671 * C22412 + C92067 * C22413) * C92084) *
                C14525) *
               C92195) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
             C4104 * C184 + C4099 * C190) *
                C92105) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C181 +
            (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
             C4104 * C1469 + C4099 * C1477) *
                C92105) *
               C92157 * C92195) *
              C93 -
          (((C4104 * C1468 + C4099 * C1476 + C4103 * C1469 + C4098 * C1477 +
             C4102 * C1470 + C4097 * C1478) *
                C92105 +
            (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
             C4102 * C1388 + C4097 * C1400) *
                C181) *
               C92157 * C92195 +
           ((C4104 * C185 + C4099 * C191 + C4103 * C184 + C4098 * C190 +
             C4102 * C183 + C4097 * C189) *
                C92105 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C181) *
               C92157 * C92337) *
              C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C4098 * C191 +
             C4104 * C186 + C4099 * C192) *
                C92105) *
               C92157 * C92337 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
             C4104 * C2711 + C4099 * C2712) *
                C181 +
            (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C4098 * C1476 +
             C4104 * C2781 + C4099 * C2782) *
                C92105) *
               C92157 * C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
            C4104 * C109 + C4099 * C115) *
               C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C4098 * C189 +
            C4104 * C184 + C4099 * C190) *
               C798 -
           (C4904 + C4903 + C4902) * C885 - (C5006 + C5007 + C5008) * C799 +
           (C4913 + C4912 + C4911) * C886 + (C5009 + C5010 + C5011) * C800) *
              C92157 * C92337 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
            C4104 * C1387 + C4099 * C1399) *
               C884 +
           (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C4098 * C1478 +
            C4104 * C1469 + C4099 * C1477) *
               C798 -
           (C8440 + C8441 + C8442) * C885 - (C8555 + C8554 + C8553) * C799 +
           (C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
            C4104 * C8414 + C4099 * C8417) *
               C886 +
           (C4102 * C8540 + C4097 * C8543 + C4103 * C8541 + C4098 * C8544 +
            C4104 * C8542 + C4099 * C8545) *
               C800) *
              C92157 * C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C181 +
             (C19671 * C182 + C92067 * C188) * C92105) *
                C14523 +
            (C20147 * C181 + C20225 * C92105) * C14524 +
            (C20149 * C181 + C20226 * C92105) * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C181 +
             (C19671 * C1471 + C92067 * C1479) * C92105) *
                C14523 +
            (C22432 * C181 + C22513 * C92105) * C14524 +
            (C22430 * C181 + C22514 * C92105) * C14525) *
               C92195) *
              C93 -
          ((((C19671 * C8541 + C92067 * C8544) * C92105 +
             (C19671 * C8413 + C92067 * C8416) * C181) *
                C14525 +
            ((C19671 * C3514 + C92067 * C3518) * C92105 +
             (C19671 * C3432 + C92067 * C3436) * C181) *
                C14524 +
            ((C19671 * C1470 + C92067 * C1478) * C92105 +
             (C19671 * C1388 + C92067 * C1400) * C181) *
                C14523) *
               C92195 +
           ((C21268 * C92105 + C21185 * C181) * C14525 +
            (C21267 * C92105 + C21183 * C181) * C14524 +
            ((C19671 * C183 + C92067 * C189) * C92105 +
             (C19671 * C108 + C92067 * C114) * C181) *
                C14523) *
               C92337) *
              C94 +
          ((((C19671 * C109 + C92067 * C115) * C181 +
             (C19671 * C184 + C92067 * C190) * C92105) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C181 +
             (C19671 * C888 + C92067 * C896) * C92105) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C181 +
             (C19671 * C893 + C92067 * C901) * C92105) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C181 +
             (C19671 * C1469 + C92067 * C1477) * C92105) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C181 +
             (C19671 * C3515 + C92067 * C3519) * C92105) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C181 +
             (C19671 * C8542 + C92067 * C8545) * C92105) *
                C14525) *
               C92195) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19671 * C107 + C92067 * C113) * C884 +
            (C19671 * C182 + C92067 * C188) * C798 - C20147 * C885 -
            C20225 * C799 + C20149 * C886 + C20226 * C800) *
               C14523 +
           (C20147 * C884 + C20225 * C798 - C20149 * C885 - C20226 * C799 +
            C20151 * C886 + C20227 * C800) *
               C14524 +
           (C20149 * C884 + C20226 * C798 - C20151 * C885 - C20227 * C799 +
            C20154 * C886 + C20228 * C800) *
               C14525) *
              C92337 +
          (((C19671 * C1389 + C92067 * C1401) * C884 +
            (C19671 * C1471 + C92067 * C1479) * C798 - C22432 * C885 -
            C22513 * C799 + C22430 * C886 + C22514 * C800) *
               C14523 +
           (C22432 * C884 + C22513 * C798 - C22430 * C885 - C22514 * C799 +
            C22428 * C886 + C22515 * C800) *
               C14524 +
           (C22430 * C884 + C22514 * C798 - C22428 * C885 - C22515 * C799 +
            (C19671 * C22410 + C92067 * C22411) * C886 +
            (C19671 * C22504 + C92067 * C22505) * C800) *
               C14525) *
              C92195) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eexz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
             C4104 * C1538 + C4099 * C1546) *
                C92116) *
               C92157 * C92195) *
              C92105 * C93 -
          (((C4104 * C1537 + C4099 * C1545 + C4103 * C1538 + C4098 * C1546 +
             C4102 * C1539 + C4097 * C1547) *
                C92116 +
            (C4104 * C1386 + C4099 * C1398 + C4103 * C1387 + C4098 * C1399 +
             C4102 * C1388 + C4097 * C1400) *
                C244) *
               C92157 * C92195 +
           ((C4104 * C248 + C4099 * C254 + C4103 * C247 + C4098 * C253 +
             C4102 * C246 + C4097 * C252) *
                C92116 +
            (C4104 * C110 + C4099 * C116 + C4103 * C109 + C4098 * C115 +
             C4102 * C108 + C4097 * C114) *
                C244) *
               C92157 * C92337) *
              C92105 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C4098 * C116 +
             C4104 * C111 + C4099 * C121) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C4098 * C254 +
             C4104 * C249 + C4099 * C255) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C4098 * C1398 +
             C4104 * C2711 + C4099 * C2712) *
                C244 +
            (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C4098 * C1545 +
             C4104 * C2851 + C4099 * C2852) *
                C92116) *
               C92157 * C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C4098 * C114 +
             C4104 * C109 + C4099 * C115) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C4098 * C252 +
             C4104 * C247 + C4099 * C253) *
                C92116) *
               C92157 * C92337 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C4098 * C1400 +
             C4104 * C1387 + C4099 * C1399) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C4098 * C1547 +
             C4104 * C1538 + C4099 * C1546) *
                C92116) *
               C92157 * C92195) *
              C798 -
          (((C8666 + C8667 + C8668) * C92116 + (C8440 + C8441 + C8442) * C244) *
               C92157 * C92195 +
           ((C5106 + C5105 + C5104) * C92116 + (C4904 + C4903 + C4902) * C244) *
               C92157 * C92337) *
              C799 +
          (((C4913 + C4912 + C4911) * C244 + (C5109 + C5108 + C5107) * C92116) *
               C92157 * C92337 +
           ((C4102 * C8412 + C4097 * C8415 + C4103 * C8413 + C4098 * C8416 +
             C4104 * C8414 + C4099 * C8417) *
                C244 +
            (C4102 * C8653 + C4097 * C8656 + C4103 * C8654 + C4098 * C8657 +
             C4104 * C8655 + C4099 * C8658) *
                C92116) *
               C92157 * C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C22432 * C244 + C22599 * C92116) * C14524 +
            (C22430 * C244 + C22600 * C92116) * C14525) *
               C92195) *
              C92105 * C93 -
          ((((C19671 * C8654 + C92067 * C8657) * C92116 +
             (C19671 * C8413 + C92067 * C8416) * C244) *
                C14525 +
            ((C19671 * C3588 + C92067 * C3592) * C92116 +
             (C19671 * C3432 + C92067 * C3436) * C244) *
                C14524 +
            ((C19671 * C1539 + C92067 * C1547) * C92116 +
             (C19671 * C1388 + C92067 * C1400) * C244) *
                C14523) *
               C92195 +
           ((C21349 + C21339) * C14525 + (C21348 + C21336) * C14524 +
            ((C19671 * C246 + C92067 * C252) * C92116 +
             (C19671 * C108 + C92067 * C114) * C244) *
                C14523) *
               C92337) *
              C92105 * C94 +
          ((((C19671 * C109 + C92067 * C115) * C244 +
             (C19671 * C247 + C92067 * C253) * C92116) *
                C14523 +
            ((C19671 * C803 + C92067 * C815) * C244 +
             (C19671 * C954 + C92067 * C962) * C92116) *
                C14524 +
            ((C19671 * C808 + C92067 * C820) * C244 +
             (C19671 * C959 + C92067 * C967) * C92116) *
                C14525) *
               C92337 +
           (((C19671 * C1387 + C92067 * C1399) * C244 +
             (C19671 * C1538 + C92067 * C1546) * C92116) *
                C14523 +
            ((C19671 * C3433 + C92067 * C3437) * C244 +
             (C19671 * C3589 + C92067 * C3593) * C92116) *
                C14524 +
            ((C19671 * C8414 + C92067 * C8417) * C244 +
             (C19671 * C8655 + C92067 * C8658) * C92116) *
                C14525) *
               C92195) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19671 * C107 + C92067 * C113) * C244 +
             (C19671 * C245 + C92067 * C251) * C92116) *
                C14523 +
            (C20281 + C20297) * C14524 + C20301 * C14525) *
               C92337 +
           (((C19671 * C1389 + C92067 * C1401) * C244 +
             (C19671 * C1540 + C92067 * C1548) * C92116) *
                C14523 +
            (C23916 + C23917) * C14524 + C23922 * C14525) *
               C92195) *
              C798 -
          (((C23920 + C23921) * C14525 + (C23919 + C23918) * C14524 +
            (C23917 + C23916) * C14523) *
               C92195 +
           ((C20299 + C20287) * C14525 + (C20298 + C20284) * C14524 +
            (C20297 + C20281) * C14523) *
               C92337) *
              C799 +
          ((C20301 * C14523 + C20302 * C14524 + (C20292 + C20300) * C14525) *
               C92337 +
           (C23922 * C14523 + (C23921 + C23920) * C14524 +
            ((C19671 * C22410 + C92067 * C22411) * C244 +
             (C19671 * C22581 + C92067 * C22582) * C92116) *
                C14525) *
               C92195) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eeyx[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92157 * C308) * C104 +
                      (C307 * C117 + C92157 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C92337 +
                     ((C307 * C1389 + C92157 * C1606) * C104 +
                      (C307 * C1397 + C92157 * C1614) * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C92195) *
                        C4097 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C92337 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C92195) *
                        C4098 +
                    ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                      C343 * C106 + C344 * C95) *
                         C92337 +
                     (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
                      (C307 * C2711 + C92157 * C2919) * C106 +
                      (C307 * C2713 + C92157 * C2920) * C95) *
                         C92195) *
                        C4099) *
                   C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92157 * C308) * C801 +
                       (C307 * C117 + C92157 * C314) * C92084) *
                          C92337 +
                      ((C307 * C1389 + C92157 * C1606) * C801 +
                       (C307 * C1397 + C92157 * C1614) * C92084) *
                          C92195) *
                         C4097 +
                     ((C337 * C801 + C338 * C92084) * C92337 +
                      (C2934 * C801 + C2935 * C92084) * C92195) *
                         C4098 +
                     ((C339 * C801 + C340 * C92084) * C92337 +
                      (C2936 * C801 + C2937 * C92084) * C92195) *
                         C4099) *
                        C92116 * C798 -
                    ((((C307 * C3441 + C92157 * C3667) * C92084 +
                       (C307 * C3433 + C92157 * C3663) * C801) *
                          C92195 +
                      (C2215 * C92084 + C2214 * C801) * C92337) *
                         C4099 +
                     (((C307 * C3440 + C92157 * C3666) * C92084 +
                       (C307 * C3432 + C92157 * C3662) * C801) *
                          C92195 +
                      (C2213 * C92084 + C2212 * C801) * C92337) *
                         C4098 +
                     (((C307 * C3439 + C92157 * C3665) * C92084 +
                       (C307 * C3431 + C92157 * C3661) * C801) *
                          C92195 +
                      ((C307 * C813 + C92157 * C1030) * C92084 +
                       (C307 * C805 + C92157 * C1022) * C801) *
                          C92337) *
                         C4097) *
                        C92116 * C799 +
                    ((((C307 * C806 + C92157 * C1023) * C801 +
                       (C307 * C822 + C92157 * C1031) * C92084) *
                          C92337 +
                      ((C307 * C8412 + C92157 * C8766) * C801 +
                       (C307 * C8418 + C92157 * C8769) * C92084) *
                          C92195) *
                         C4097 +
                     (((C307 * C807 + C92157 * C1024) * C801 +
                       (C307 * C823 + C92157 * C1032) * C92084) *
                          C92337 +
                      ((C307 * C8413 + C92157 * C8767) * C801 +
                       (C307 * C8419 + C92157 * C8770) * C92084) *
                          C92195) *
                         C4098 +
                     (((C307 * C808 + C92157 * C1025) * C801 +
                       (C307 * C824 + C92157 * C1033) * C92084) *
                          C92337 +
                      ((C307 * C8414 + C92157 * C8768) * C801 +
                       (C307 * C8420 + C92157 * C8771) * C92084) *
                          C92195) *
                         C4099) *
                        C92116 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                      C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                         C104 +
                     (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                      C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                         C93 -
                     (C14778 + C14779 + C14780) * C105 -
                     (C14781 + C14782 + C14783) * C94 +
                     (C14784 + C14785 + C14786) * C106 +
                     (C14787 + C14788 + C14789) * C95) *
                        C92337 +
                    ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 +
                      C14524 * C3661 + C14752 * C8412 + C14525 * C8766) *
                         C104 +
                     (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 +
                      C14524 * C3665 + C14752 * C8418 + C14525 * C8769) *
                         C93 -
                     (C18105 + C18104 + C18103) * C105 -
                     (C18108 + C18107 + C18106) * C94 +
                     (C14750 * C1387 + C14523 * C1604 + C14751 * C3433 +
                      C14524 * C3663 + C14752 * C8414 + C14525 * C8768) *
                         C106 +
                     (C14750 * C1395 + C14523 * C1612 + C14751 * C3441 +
                      C14524 * C3667 + C14752 * C8420 + C14525 * C8771) *
                         C95) *
                        C92195) *
                   C92067 * C92116 * C92105) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C14750 * C107 + C14523 * C308 + C14751 * C805 +
                       C14524 * C1022 + C14752 * C806 + C14525 * C1023) *
                          C801 +
                      (C14750 * C117 + C14523 * C314 + C14751 * C813 +
                       C14524 * C1030 + C14752 * C822 + C14525 * C1031) *
                          C92084) *
                         C92337 +
                     ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 +
                       C14524 * C3661 + C14752 * C8412 + C14525 * C8766) *
                          C801 +
                      (C14750 * C1397 + C14523 * C1614 + C14751 * C3439 +
                       C14524 * C3665 + C14752 * C8418 + C14525 * C8769) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C798 -
                    (((C14752 * C18736 + C14525 * C19092 + C14751 * C8418 +
                       C14524 * C8769 + C14750 * C3439 + C14523 * C3665) *
                          C92084 +
                      (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
                       C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                          C801) *
                         C92195 +
                     ((C14752 * C4871 + C14525 * C5186 + C14751 * C822 +
                       C14524 * C1031 + C14750 * C813 + C14523 * C1030) *
                          C92084 +
                      (C14752 * C4865 + C14525 * C5183 + C14751 * C806 +
                       C14524 * C1023 + C14750 * C805 + C14523 * C1022) *
                          C801) *
                         C92337) *
                        C92067 * C92116 * C799 +
                    (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 +
                       C14524 * C5183 + C14752 * C15273 + C14525 * C15593) *
                          C801 +
                      (C14750 * C822 + C14523 * C1031 + C14751 * C4871 +
                       C14524 * C5186 + C14752 * C15277 + C14525 * C15595) *
                          C92084) *
                         C92337 +
                     ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
                       C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                          C801 +
                      (C14750 * C8418 + C14523 * C8769 + C14751 * C18736 +
                       C14524 * C19092 + C14752 * C22412 + C14525 * C22671) *
                          C92084) *
                         C92195) *
                        C92067 * C92116 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C181 +
             (C307 * C182 + C92157 * C394) * C92105) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C181 +
             (C307 * C1471 + C92157 * C1672) * C92105) *
                C92195) *
               C4097 +
           ((C401 + C417) * C92337 + (C3007 + C3019) * C92195) * C4098 +
           C9678 * C4099) *
              C93 -
          (((C3021 + C3013) * C92195 + (C419 + C407) * C92337) * C4099 +
           ((C3020 + C3010) * C92195 + (C418 + C404) * C92337) * C4098 +
           ((C3019 + C3007) * C92195 + (C417 + C401) * C92337) * C4097) *
              C94 +
          (C9678 * C4097 + (C422 * C92337 + (C3013 + C3021) * C92195) * C4098 +
           ((C412 + C420) * C92337 +
            ((C307 * C2711 + C92157 * C2919) * C181 +
             (C307 * C2781 + C92157 * C3005) * C92105) *
                C92195) *
               C4099) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92157 * C308) * C884 +
            (C307 * C182 + C92157 * C394) * C798 -
            (C307 * C805 + C92157 * C1022) * C885 -
            (C307 * C890 + C92157 * C1085) * C799 +
            (C307 * C806 + C92157 * C1023) * C886 +
            (C307 * C891 + C92157 * C1086) * C800) *
               C92337 +
           ((C307 * C1389 + C92157 * C1606) * C884 +
            (C307 * C1471 + C92157 * C1672) * C798 -
            (C307 * C3431 + C92157 * C3661) * C885 -
            (C307 * C3513 + C92157 * C3735) * C799 +
            (C307 * C8412 + C92157 * C8766) * C886 +
            (C307 * C8540 + C92157 * C8870) * C800) *
               C92195) *
              C4097 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92157 * C1024) * C886 +
            (C307 * C892 + C92157 * C1088) * C800) *
               C92337 +
           (C2934 * C884 + C3016 * C798 -
            (C307 * C3432 + C92157 * C3662) * C885 -
            (C307 * C3514 + C92157 * C3736) * C799 +
            (C307 * C8413 + C92157 * C8767) * C886 +
            (C307 * C8541 + C92157 * C8871) * C800) *
               C92195) *
              C4098 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92157 * C1025) * C886 +
            (C307 * C893 + C92157 * C1090) * C800) *
               C92337 +
           (C2936 * C884 + C3017 * C798 -
            (C307 * C3433 + C92157 * C3663) * C885 -
            (C307 * C3515 + C92157 * C3737) * C799 +
            (C307 * C8414 + C92157 * C8768) * C886 +
            (C307 * C8542 + C92157 * C8872) * C800) *
               C92195) *
              C4099) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C181 +
            (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
             C14752 * C891 + C14525 * C1086) *
                C92105) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C181 +
            (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
             C14752 * C8540 + C14525 * C8870) *
                C92105) *
               C92195) *
              C92067 * C93 -
          (((C18215 + C18214 + C18213) * C92105 +
            (C18105 + C18104 + C18103) * C181) *
               C92195 +
           ((C14878 + C14877 + C14876) * C92105 +
            (C14778 + C14779 + C14780) * C181) *
               C92337) *
              C92067 * C94 +
          (((C14784 + C14785 + C14786) * C181 +
            (C14881 + C14880 + C14879) * C92105) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C181 +
            (C14750 * C1469 + C14523 * C1670 + C14751 * C3515 + C14524 * C3737 +
             C14752 * C8542 + C14525 * C8872) *
                C92105) *
               C92195) *
              C92067 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
            C14752 * C806 + C14525 * C1023) *
               C884 +
           (C14750 * C182 + C14523 * C394 + C14751 * C890 + C14524 * C1085 +
            C14752 * C891 + C14525 * C1086) *
               C798 -
           (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
            C14750 * C805 + C14523 * C1022) *
               C885 -
           (C14752 * C4987 + C14525 * C5263 + C14751 * C891 + C14524 * C1086 +
            C14750 * C890 + C14523 * C1085) *
               C799 +
           (C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
            C14752 * C15273 + C14525 * C15593) *
               C886 +
           (C14750 * C891 + C14523 * C1086 + C14751 * C4987 + C14524 * C5263 +
            C14752 * C15396 + C14525 * C15671) *
               C800) *
              C92337 +
          ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
            C14752 * C8412 + C14525 * C8766) *
               C884 +
           (C14750 * C1471 + C14523 * C1672 + C14751 * C3513 + C14524 * C3735 +
            C14752 * C8540 + C14525 * C8870) *
               C798 -
           (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
            C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
               C885 -
           (C14752 * C18862 + C14525 * C19192 + C14751 * C8540 +
            C14524 * C8870 + C14750 * C3513 + C14523 * C3735) *
               C799 +
           (C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
            C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
               C886 +
           (C14750 * C8540 + C14523 * C8870 + C14751 * C18862 +
            C14524 * C19192 + C14752 * C22504 + C14525 * C22738) *
               C800) *
              C92195) *
         C92067 * C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eeyz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C244 +
             (C307 * C1540 + C92157 * C1727) * C92116) *
                C92195) *
               C4097 +
           ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
           C9762 * C4099) *
              C92105 * C93 -
          (((C9758 + C9759) * C92195 + (C499 + C487) * C92337) * C4099 +
           ((C9757 + C9756) * C92195 + (C498 + C484) * C92337) * C4098 +
           ((C9754 + C9753) * C92195 + (C497 + C481) * C92337) * C4097) *
              C92105 * C94 +
          (C9762 * C4097 + (C502 * C92337 + (C9759 + C9758) * C92195) * C4098 +
           ((C492 + C500) * C92337 +
            ((C307 * C2711 + C92157 * C2919) * C244 +
             (C307 * C2851 + C92157 * C3087) * C92116) *
                C92195) *
               C4099) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92157 * C308) * C244 +
             (C307 * C245 + C92157 * C474) * C92116) *
                C92337 +
            ((C307 * C1389 + C92157 * C1606) * C244 +
             (C307 * C1540 + C92157 * C1727) * C92116) *
                C92195) *
               C4097 +
           ((C481 + C497) * C92337 + (C9753 + C9754) * C92195) * C4098 +
           C9762 * C4099) *
              C798 -
          ((((C307 * C3589 + C92157 * C3807) * C92116 +
             (C307 * C3433 + C92157 * C3663) * C244) *
                C92195 +
            (C2386 + C2378) * C92337) *
               C4099 +
           (((C307 * C3588 + C92157 * C3806) * C92116 +
             (C307 * C3432 + C92157 * C3662) * C244) *
                C92195 +
            (C2387 + C2381) * C92337) *
               C4098 +
           (((C307 * C3587 + C92157 * C3805) * C92116 +
             (C307 * C3431 + C92157 * C3661) * C244) *
                C92195 +
            ((C307 * C956 + C92157 * C1146) * C92116 +
             (C307 * C805 + C92157 * C1022) * C244) *
                C92337) *
               C4097) *
              C799 +
          ((((C307 * C806 + C92157 * C1023) * C244 +
             (C307 * C957 + C92157 * C1147) * C92116) *
                C92337 +
            ((C307 * C8412 + C92157 * C8766) * C244 +
             (C307 * C8653 + C92157 * C8971) * C92116) *
                C92195) *
               C4097 +
           (((C307 * C807 + C92157 * C1024) * C244 +
             (C307 * C958 + C92157 * C1148) * C92116) *
                C92337 +
            ((C307 * C8413 + C92157 * C8767) * C244 +
             (C307 * C8654 + C92157 * C8972) * C92116) *
                C92195) *
               C4098 +
           (((C307 * C808 + C92157 * C1025) * C244 +
             (C307 * C959 + C92157 * C1149) * C92116) *
                C92337 +
            ((C307 * C8414 + C92157 * C8768) * C244 +
             (C307 * C8655 + C92157 * C8973) * C92116) *
                C92195) *
               C4099) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C92105 * C93 -
          (((C18320 + C18321 + C18322) * C92116 +
            (C18105 + C18104 + C18103) * C244) *
               C92195 +
           ((C14970 + C14969 + C14968) * C92116 +
            (C14778 + C14779 + C14780) * C244) *
               C92337) *
              C92067 * C92105 * C94 +
          (((C14784 + C14785 + C14786) * C244 +
            (C14973 + C14972 + C14971) * C92116) *
               C92337 +
           ((C14750 * C1387 + C14523 * C1604 + C14751 * C3433 + C14524 * C3663 +
             C14752 * C8414 + C14525 * C8768) *
                C244 +
            (C14750 * C1538 + C14523 * C1731 + C14751 * C3589 + C14524 * C3807 +
             C14752 * C8655 + C14525 * C8973) *
                C92116) *
               C92195) *
              C92067 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14750 * C107 + C14523 * C308 + C14751 * C805 + C14524 * C1022 +
             C14752 * C806 + C14525 * C1023) *
                C244 +
            (C14750 * C245 + C14523 * C474 + C14751 * C956 + C14524 * C1146 +
             C14752 * C957 + C14525 * C1147) *
                C92116) *
               C92337 +
           ((C14750 * C1389 + C14523 * C1606 + C14751 * C3431 + C14524 * C3661 +
             C14752 * C8412 + C14525 * C8766) *
                C244 +
            (C14750 * C1540 + C14523 * C1727 + C14751 * C3587 + C14524 * C3805 +
             C14752 * C8653 + C14525 * C8971) *
                C92116) *
               C92195) *
              C92067 * C798 -
          (((C14752 * C18976 + C14525 * C19292 + C14751 * C8653 +
             C14524 * C8971 + C14750 * C3587 + C14523 * C3805) *
                C92116 +
            (C14752 * C18732 + C14525 * C19090 + C14751 * C8412 +
             C14524 * C8766 + C14750 * C3431 + C14523 * C3661) *
                C244) *
               C92195 +
           ((C14752 * C5085 + C14525 * C5340 + C14751 * C957 + C14524 * C1147 +
             C14750 * C956 + C14523 * C1146) *
                C92116 +
            (C14752 * C4865 + C14525 * C5183 + C14751 * C806 + C14524 * C1023 +
             C14750 * C805 + C14523 * C1022) *
                C244) *
               C92337) *
              C92067 * C799 +
          (((C14750 * C806 + C14523 * C1023 + C14751 * C4865 + C14524 * C5183 +
             C14752 * C15273 + C14525 * C15593) *
                C244 +
            (C14750 * C957 + C14523 * C1147 + C14751 * C5085 + C14524 * C5340 +
             C14752 * C15493 + C14525 * C15747) *
                C92116) *
               C92337 +
           ((C14750 * C8412 + C14523 * C8766 + C14751 * C18732 +
             C14524 * C19090 + C14752 * C22410 + C14525 * C22670) *
                C244 +
            (C14750 * C8653 + C14523 * C8971 + C14751 * C18976 +
             C14524 * C19292 + C14752 * C22581 + C14525 * C22805) *
                C92116) *
               C92195) *
              C92067 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
    d2eezx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C4097 +
          ((C9864 + C9863) * C104 + (C9866 + C9865) * C93 -
           (C9868 + C9867) * C105 - (C9870 + C9869) * C94 +
           (C9871 + C9872) * C106 + (C9873 + C9874) * C95) *
              C4098 +
          (C9875 * C104 + C9876 * C93 - (C9872 + C9871) * C105 -
           (C9874 + C9873) * C94 +
           (C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
               C106 +
           (C9836 * C122 + C92337 * C565 + C9837 * C2713 + C92195 * C3176) *
               C95) *
              C4099) *
         C92157 * C92116 * C92105) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C4097 +
           ((C9864 + C9863) * C801 + (C9866 + C9865) * C92084) * C4098 +
           (C9875 * C801 + C9876 * C92084) * C4099) *
              C92157 * C92116 * C798 -
          (((C9837 * C3441 + C92195 * C3881 + C9836 * C811 + C92337 * C1210) *
                C92084 +
            (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
                C801) *
               C4099 +
           ((C9837 * C3440 + C92195 * C3880 + C9836 * C812 + C92337 * C1211) *
                C92084 +
            (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
                C801) *
               C4098 +
           ((C9837 * C3439 + C92195 * C3879 + C9836 * C813 + C92337 * C1212) *
                C92084 +
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C801) *
               C4097) *
              C92157 * C92116 * C799 +
          (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C801 +
            (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
                C92084) *
               C4097 +
           ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
                C801 +
            (C9836 * C823 + C92337 * C1214 + C9837 * C8419 + C92195 * C9076) *
                C92084) *
               C4098 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C801 +
            (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
                C92084) *
               C4099) *
              C92157 * C92116 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C104 +
           (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
               C93 -
           (C9863 + C9864) * C105 - (C9865 + C9866) * C94 + C9875 * C106 +
           C9876 * C95) *
              C92067 * C14523 +
          ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
               C104 +
           (C9836 * C813 + C92337 * C1212 + C9837 * C3439 + C92195 * C3879) *
               C93 -
           (C12328 + C12327) * C105 - (C12330 + C12329) * C94 +
           (C12331 + C12332) * C106 + (C12333 + C12334) * C95) *
              C92067 * C14524 +
          ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C104 +
           (C9836 * C822 + C92337 * C1213 + C9837 * C8418 + C92195 * C9075) *
               C93 -
           (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
               C105 -
           (C9837 * C8419 + C92195 * C9076 + C9836 * C823 + C92337 * C1214) *
               C94 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C106 +
           (C9836 * C824 + C92337 * C1215 + C9837 * C8420 + C92195 * C9077) *
               C95) *
              C92067 * C14525) *
         C92116 * C92105) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C801 +
            (C9836 * C117 + C92337 * C561 + C9837 * C1397 + C92195 * C1796) *
                C92084) *
               C92067 * C14523 +
           ((C24243 + C24244) * C801 + (C24245 + C24246) * C92084) * C92067 *
               C14524 +
           C24260 * C14525) *
              C92116 * C798 -
          (((C24251 + C24252) * C92084 + (C24253 + C24254) * C801) * C92067 *
               C14525 +
           ((C24250 + C24249) * C92084 + (C24248 + C24247) * C801) * C92067 *
               C14524 +
           ((C24246 + C24245) * C92084 + (C24244 + C24243) * C801) * C92067 *
               C14523) *
              C92116 * C799 +
          (C24260 * C14523 +
           ((C24254 + C24253) * C801 + (C24252 + C24251) * C92084) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C801 +
            (C9836 * C15277 + C92337 * C15825 + C9837 * C22412 +
             C92195 * C22873) *
                C92084) *
               C92067 * C14525) *
              C92116 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C4097 +
           ((C9864 + C9863) * C181 + (C9964 + C9965) * C92105) * C4098 +
           C9972 * C4099) *
              C92157 * C93 -
          (((C9968 + C9969) * C92105 + (C9872 + C9871) * C181) * C4099 +
           ((C9967 + C9966) * C92105 + (C9868 + C9867) * C181) * C4098 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C4097) *
              C92157 * C94 +
          (C9972 * C4097 +
           ((C9871 + C9872) * C181 + (C9969 + C9968) * C92105) * C4098 +
           ((C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                C181 +
            (C9836 * C186 + C92337 * C645 + C9837 * C2781 + C92195 * C3261) *
                C92105) *
               C4099) *
              C92157 * C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
               C885 -
           (C9837 * C3513 + C92195 * C3949 + C9836 * C890 + C92337 * C1267) *
               C799 +
           (C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
               C886 +
           (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
               C800) *
              C4097 +
          ((C9864 + C9863) * C884 + (C9964 + C9965) * C798 -
           (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
               C885 -
           (C9837 * C3514 + C92195 * C3950 + C9836 * C889 + C92337 * C1269) *
               C799 +
           (C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
               C886 +
           (C9836 * C892 + C92337 * C1270 + C9837 * C8541 + C92195 * C9189) *
               C800) *
              C4098 +
          (C9875 * C884 + C9970 * C798 -
           (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
               C885 -
           (C9837 * C3515 + C92195 * C3951 + C9836 * C888 + C92337 * C1271) *
               C799 +
           (C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
               C886 +
           (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
               C800) *
              C4099) *
         C92157 * C92084 * C92116) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C181 +
            (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
                C92105) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C181 +
            (C9836 * C890 + C92337 * C1267 + C9837 * C3513 + C92195 * C3949) *
                C92105) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C181 +
            (C9836 * C891 + C92337 * C1268 + C9837 * C8540 + C92195 * C9188) *
                C92105) *
               C92067 * C14525) *
              C93 -
          (((C9837 * C8541 + C92195 * C9189 + C9836 * C892 + C92337 * C1270) *
                C92105 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C181) *
               C92067 * C14525 +
           ((C12441 + C12442) * C92105 + (C12328 + C12327) * C181) * C92067 *
               C14524 +
           ((C9965 + C9964) * C92105 + (C9863 + C9864) * C181) * C92067 *
               C14523) *
              C94 +
          (C9972 * C92067 * C14523 +
           ((C12331 + C12332) * C181 + (C12444 + C12443) * C92105) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C181 +
            (C9836 * C893 + C92337 * C1272 + C9837 * C8542 + C92195 * C9190) *
                C92105) *
               C92067 * C14525) *
              C95) *
         C92116) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
               C884 +
           (C9836 * C182 + C92337 * C641 + C9837 * C1471 + C92195 * C1854) *
               C798 -
           (C24244 + C24243) * C885 - (C24347 + C24348) * C799 + C24255 * C886 +
           C24353 * C800) *
              C92067 * C14523 +
          ((C24243 + C24244) * C884 + (C24348 + C24347) * C798 -
           (C24248 + C24247) * C885 - (C24350 + C24349) * C799 +
           (C24254 + C24253) * C886 + (C24351 + C24352) * C800) *
              C92067 * C14524 +
          (C24255 * C884 + C24353 * C798 - (C24253 + C24254) * C885 -
           (C24352 + C24351) * C799 +
           (C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
            C92195 * C22872) *
               C886 +
           (C9836 * C15396 + C92337 * C15922 + C9837 * C22504 +
            C92195 * C22948) *
               C800) *
              C92067 * C14525) *
         C92084 * C92116) /
            (p * q * std::sqrt(p + q));
    d2eezz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C4097 +
           ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
           C10068 * C4099) *
              C92157 * C92105 * C93 -
          (((C10064 + C10065) * C92116 + (C9872 + C9871) * C244) * C4099 +
           ((C10063 + C10062) * C92116 + (C9868 + C9867) * C244) * C4098 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C4097) *
              C92157 * C92105 * C94 +
          (C10068 * C4097 +
           ((C9871 + C9872) * C244 + (C10065 + C10064) * C92116) * C4098 +
           ((C9836 * C111 + C92337 * C559 + C9837 * C2711 + C92195 * C3175) *
                C244 +
            (C9836 * C249 + C92337 * C723 + C9837 * C2851 + C92195 * C3343) *
                C92116) *
               C4099) *
              C92157 * C92105 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C4097 +
           ((C9864 + C9863) * C244 + (C10060 + C10061) * C92116) * C4098 +
           C10068 * C4099) *
              C92157 * C798 -
          (((C9837 * C3589 + C92195 * C4021 + C9836 * C954 + C92337 * C1326) *
                C92116 +
            (C9837 * C3433 + C92195 * C3877 + C9836 * C803 + C92337 * C1202) *
                C244) *
               C4099 +
           ((C9837 * C3588 + C92195 * C4020 + C9836 * C955 + C92337 * C1327) *
                C92116 +
            (C9837 * C3432 + C92195 * C3876 + C9836 * C804 + C92337 * C1203) *
                C244) *
               C4098 +
           ((C9837 * C3587 + C92195 * C4019 + C9836 * C956 + C92337 * C1328) *
                C92116 +
            (C9837 * C3431 + C92195 * C3875 + C9836 * C805 + C92337 * C1204) *
                C244) *
               C4097) *
              C92157 * C799 +
          (((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C4097 +
           ((C9836 * C807 + C92337 * C1206 + C9837 * C8413 + C92195 * C9073) *
                C244 +
            (C9836 * C958 + C92337 * C1330 + C9837 * C8654 + C92195 * C9293) *
                C92116) *
               C4098 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C4099) *
              C92157 * C800) *
         C92084) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C9836 * C805 + C92337 * C1204 + C9837 * C3431 + C92195 * C3875) *
                C244 +
            (C9836 * C956 + C92337 * C1328 + C9837 * C3587 + C92195 * C4019) *
                C92116) *
               C92067 * C14524 +
           ((C9836 * C806 + C92337 * C1205 + C9837 * C8412 + C92195 * C9072) *
                C244 +
            (C9836 * C957 + C92337 * C1329 + C9837 * C8653 + C92195 * C9292) *
                C92116) *
               C92067 * C14525) *
              C92105 * C93 -
          (((C9837 * C8654 + C92195 * C9293 + C9836 * C958 + C92337 * C1330) *
                C92116 +
            (C9837 * C8413 + C92195 * C9073 + C9836 * C807 + C92337 * C1206) *
                C244) *
               C92067 * C14525 +
           ((C12553 + C12554) * C92116 + (C12328 + C12327) * C244) * C92067 *
               C14524 +
           ((C10061 + C10060) * C92116 + (C9863 + C9864) * C244) * C92067 *
               C14523) *
              C92105 * C94 +
          (C10068 * C92067 * C14523 +
           ((C12331 + C12332) * C244 + (C12552 + C12551) * C92116) * C92067 *
               C14524 +
           ((C9836 * C808 + C92337 * C1207 + C9837 * C8414 + C92195 * C9074) *
                C244 +
            (C9836 * C959 + C92337 * C1331 + C9837 * C8655 + C92195 * C9294) *
                C92116) *
               C92067 * C14525) *
              C92105 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9836 * C107 + C92337 * C555 + C9837 * C1389 + C92195 * C1788) *
                C244 +
            (C9836 * C245 + C92337 * C719 + C9837 * C1540 + C92195 * C1909) *
                C92116) *
               C92067 * C14523 +
           ((C24243 + C24244) * C244 + (C24441 + C24442) * C92116) * C92067 *
               C14524 +
           C24450 * C14525) *
              C798 -
          (((C24445 + C24446) * C92116 + (C24253 + C24254) * C244) * C92067 *
               C14525 +
           ((C24444 + C24443) * C92116 + (C24248 + C24247) * C244) * C92067 *
               C14524 +
           ((C24442 + C24441) * C92116 + (C24244 + C24243) * C244) * C92067 *
               C14523) *
              C799 +
          (C24450 * C14523 +
           ((C24254 + C24253) * C244 + (C24446 + C24445) * C92116) * C92067 *
               C14524 +
           ((C9836 * C15273 + C92337 * C15823 + C9837 * C22410 +
             C92195 * C22872) *
                C244 +
            (C9836 * C15493 + C92337 * C16004 + C9837 * C22581 +
             C92195 * C23018) *
                C92116) *
               C92067 * C14525) *
              C800) *
         C92084) /
            (p * q * std::sqrt(p + q));
}
